{"version":3,"file":"app.434fa07b8d4babc0e69a.js","mappings":"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","sources":["webpack://ab_platform_web/./config/configDesktop.js","webpack://ab_platform_web/./config/configMobile.js","webpack://ab_platform_web/./config/Config.js","webpack://ab_platform_web/./ui/portal_loading.js","webpack://ab_platform_web/./ui/portal_auth_login_form.js","webpack://ab_platform_web/./ui/portal_auth_login_resetPassword.js","webpack://ab_platform_web/./ui/portal_auth_login_resetRequest.js","webpack://ab_platform_web/./ui/portal_auth_login.js","webpack://ab_platform_web/./ui/portal_auth.js","webpack://ab_platform_web/./ui/ClassUIPage.js","webpack://ab_platform_web/./ui/portal_work_inbox_accordion.js","webpack://ab_platform_web/./ui/portal_work_inbox_taskWindow.js","webpack://ab_platform_web/./ui/portal_work_inbox.js","webpack://ab_platform_web/./ui/portal_work_user_profile_window.js","webpack://ab_platform_web/./ui/portal_work_user_switcheroo.js","webpack://ab_platform_web/./ui/portal_work_user_qr_window.js","webpack://ab_platform_web/./ui/portal_work_user_mobile_qr.js","webpack://ab_platform_web/./ui/portal_access_level_manager.js","webpack://ab_platform_web/./ui/portal_translation_tool.js","webpack://ab_platform_web/./ui/portal_tutorial_manager.js","webpack://ab_platform_web/./ui/portal_work.js","webpack://ab_platform_web/./ui/portal.js","webpack://ab_platform_web/./ui/ui.js","webpack://ab_platform_web/./ui/error_noDefs.js","webpack://ab_platform_web/./init/Bootstrap.js","webpack://ab_platform_web/./init/initDiv.js","webpack://ab_platform_web/./init/initConfig.js","webpack://ab_platform_web/./init/initUser.js","webpack://ab_platform_web/./index.js","webpack://ab_platform_web/./ui/ClassUI.js","webpack://ab_platform_web/./utils/performance.js","webpack://ab_platform_web/webpack/runtime/startup prefetch"],"sourcesContent":["/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","import ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\n\n// var EventEmitter = require(\"events\").EventEmitter;\nimport { defaultsDeep } from \"lodash\";\n\nconst settingsDefault = {\n   \"appbuilder-portal-autoenter\": true,\n   // {bool} autoenter\n   // open up the portal as soon as we load.\n   //   false : just displays a link that will load the portal\n\n   \"appbuilder-portal-fullscreen\": true,\n   // {bool} fullscreen\n   // take up the full browser window?\n   //   false : only take up the area the current div is\n\n   \"appbuilder-tenant\": null,\n   // {string} tenant\n   // the tenant uuid for this AppBuilder instance.\n\n   \"appbuilder-view\": \"work\",\n   // {string} view\n   // the default view to display to the current user.\n\n   \"appbuilder-tenant-prefix\": null,\n   // TESTING! Remove this\n};\n\nconst configDefaults = {\n   site: {\n      appbuilder: {\n         networkType: \"socket\",\n         // options: [\"rest\", \"relay\", \"socket\"]\n         // Note: \"socket\" is required for realtime updates across devices.\n\n         networkNumRetries: 3,\n         // the number of times we will retry sending a network request\n         // when we receive a timeout error.\n\n         urlCoreServer: window.location.origin,\n         // on the web client, just record the current URL by default.\n         // the site config can override this if they want.\n      },\n      storage: {\n         encrypted: false,\n         // {bool} should we encrypt our data in the local browser storage?\n      },\n   },\n};\nclass Config {\n   constructor() {\n      // this.setMaxListeners(0);\n      this._config = null;\n      // {obj} _config\n      // these are the configuration settings returned from the server. These\n      // are more detailed configuration settings for the running of the site.\n\n      this._configUser = null;\n      // {obj} _configUser\n      // the default settings for the current user of the system.\n      //    .user {obj}  the current info for who we think is using the site\n      //    .userReal {obj}  if switheroo'd, this is the actual user\n\n      this._settings = {};\n      // {obj} _settings\n      // settings are the configuration parameters found on the base <div>\n      // these settings are the minimum needed to successfully pull up the\n      // portal popup and perform the initial config request\n   }\n\n   config(json) {\n      this._config = this._config || {};\n      Object.keys(json).forEach((k) => {\n         this._config[k] = json[k];\n      });\n      defaultsDeep(this._config, configDefaults);\n   }\n\n   configInbox(json) {\n      this._config = this._config || {};\n      this._config.inbox = json.inbox || [];\n      this._config.inboxMeta = json.inboxMeta || [];\n   }\n\n   configUser(json) {\n      this._configUser = json;\n   }\n\n   setting(key, value) {\n      if (value) {\n         this._settings[key] = value;\n         return;\n      }\n      return this._settings[key];\n   }\n\n   settingsFromDiv(div) {\n      Object.keys(settingsDefault).forEach((d) => {\n         var val = div.getAttribute(d);\n         if (!val) {\n            val = settingsDefault[d];\n         }\n         if (val === \"false\") val = false;\n         if (val === \"true\") val = true;\n\n         var key = d.split(\"-\").pop();\n         this.setting(key, val);\n      });\n   }\n\n   settings(json = {}) {\n      for (let key in settingsDefault) {\n         const val = json[key] ?? settingsDefault[key];\n         this.setting(key.split(\"-\").pop(), val);\n      }\n   }\n\n   /**\n    * definitions()\n    * return the ABDefinition(s) required to manage the interface.\n    * @return {obj}\n    *          { ABDefinition.id : {ABDefinition} }  hash of definitions.\n    */\n   definitions() {\n      return window.definitions;\n   }\n\n   error(/* ...args */) {\n      console.error(\"Who is calling this? -> move to AB.error() instead.\");\n      // this.emit(\"ab.error\", args);\n   }\n\n   labelConfig() {\n      if (this._config && this._config.labels) {\n         return this._config.labels;\n      }\n      console.error(\"No Label config found.\");\n      return {};\n   }\n\n   languageConfig() {\n      if (this._config && this._config.languages) {\n         return this._config.languages;\n      }\n      console.error(\"No Language config found.\");\n      return {};\n   }\n\n   metaConfig() {\n      if (this._config && this._config.meta) {\n         return this._config.meta;\n      }\n      console.error(\"No Meta config found.\");\n      return {};\n   }\n\n   plugins() {\n      // TODO: Pull from this._config.plugins\n      return [\"ABDesigner.js\"];\n      // return [];\n   }\n\n   inboxConfig() {\n      if (this._config && this._config.inbox) {\n         return this._config.inbox;\n      }\n      return null;\n   }\n\n   inboxMetaConfig() {\n      if (this._config && this._config.inboxMeta) {\n         return this._config.inboxMeta;\n      }\n      return null;\n   }\n\n   siteConfig() {\n      if (this._config && this._config.site) {\n         return this._config.site;\n      }\n      return configDefaults.site;\n   }\n\n   tenantConfig() {\n      if (this._config && this._config.tenant) {\n         return this._config.tenant;\n      }\n      return null;\n   }\n\n   uiSettings() {\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   }\n\n   /**\n    * @typedef User - based on SITE_USER\n    * @property {string} email email address\n    * @property {string} id\n    * @property {number} isActive wether the user is active in the system\n    * @property {string} languageCode\n    * @property {string} username\n    * ...\n    */\n\n   /**\n    * Information about the current user\n    * @returns {User}\n    */\n   userConfig() {\n      return this._configUser?.user ?? null;\n   }\n\n   userReal() {\n      return this._configUser?.userReal ?? false;\n   }\n}\nexport default new Config();\n","import ClassUI from \"./ClassUI.js\";\n\nclass PortalLoading extends ClassUI {\n   constructor() {\n      super();\n   }\n\n   ui() {\n      return {\n         id: \"portal_loading\",\n         view: \"label\",\n         label: \"loading\",\n      };\n   }\n\n   init(AB) {\n      this.AB = AB;\n\n      return Promise.resolve();\n   }\n\n   show() {\n      $$(\"portal_loading\").show();\n   }\n}\n\nexport default new PortalLoading();\n","import ClassUI from \"./ClassUI.js\";\nimport Bootstrap from \"../init/Bootstrap.js\";\n\nclass PortalAuthLoginForm extends ClassUI {\n   constructor() {\n      super();\n   }\n\n   ui() {\n      var self = this;\n\n      if (!this.AB) {\n         // we need to init() before being able to translate our UI:\n         return {\n            id: \"portal_auth_login_container\",\n         };\n      }\n\n      var L = this.AB.Label();\n\n      return {\n         id: \"portal_auth_login_container\",\n         css: \"portalLogin\",\n         cols: [\n            {},\n            {\n               rows: [\n                  {},\n                  {\n                     width: 360,\n                     rows: [\n                        {\n                           css: \"portalLoginForm\",\n                           padding: 30,\n                           rows: [\n                              {\n                                 template:\n                                    \"<div style='text-align: center; font-size:160px; line-height: 160px;'><i style='background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-user-circle-o'></i></div>\",\n                                 borderless: true,\n                                 height: 190,\n                                 type: \"clean\",\n                              },\n                              {\n                                 id: \"portal_auth_login_form\",\n                                 view: \"form\",\n                                 type: \"clean\",\n                                 css: { background: \"transparent !important\" },\n                                 borderless: true,\n                                 elementsConfig: {\n                                    bottomPadding: 20,\n                                    height: 52,\n                                 },\n                                 elements: [\n                                    {\n                                       view: \"text\",\n                                       placeholder: L(\"Email\"),\n                                       name: \"email\",\n                                       id: \"email\",\n                                       attributes: {\n                                          \"data-cy\":\n                                             \"portal_auth_login_form_email\",\n                                       },\n                                       // required: true,\n                                       validate: webix.rules.isEmail,\n                                       invalidMessage: L(\n                                          \"Please enter a valid email.\"\n                                       ),\n                                       validateEvent: \"blur\",\n                                    },\n                                    {\n                                       view: \"text\",\n                                       type: \"password\",\n                                       placeholder: L(\"Password\"),\n                                       name: \"password\",\n                                       attributes: {\n                                          \"data-cy\":\n                                             \"portal_auth_login_form_password\",\n                                       },\n                                       // required: true,\n                                       validate: webix.rules.isNotEmpty,\n                                       invalidMessage: L(\n                                          \"Please enter your password.\"\n                                       ),\n                                       validateEvent: \"blur\",\n                                    },\n                                    {\n                                       margin: 10,\n                                       paddingX: 2,\n                                       borderless: true,\n                                       cols: [\n                                          {},\n                                          {\n                                             view: \"button\",\n                                             label: L(\"Login\"),\n                                             type: \"form\",\n                                             id: \"portal_auth_login_form_submit\",\n                                             css: \"webix_primary\",\n                                             width: 150,\n                                             hotkey: \"enter\",\n                                             click() {\n                                                var form = $$(\n                                                   \"portal_auth_login_form\"\n                                                );\n                                                if (form.validate()) {\n                                                   $$(\n                                                      \"portal_auth_login_form_submit\"\n                                                   ).hide();\n                                                   $$(\n                                                      \"portal_auth_login_form_submit_wait\"\n                                                   ).show();\n\n                                                   var values =\n                                                      form.getValues();\n                                                   self.error(); // hids the error message\n\n                                                   // this.AB.Network.post()\n                                                   // can either be a Relay or Rest operation.\n                                                   // we should get the response from the\n                                                   // published JobRequest initialized in\n                                                   // the .init() routine.\n                                                   self.AB.Network.post(\n                                                      {\n                                                         url: \"/auth/login\",\n                                                         data: values,\n                                                      },\n                                                      {\n                                                         key: \"portal_auth_login\" /*, context:{} */,\n                                                      }\n                                                   ).catch((err) => {\n                                                      $$(\n                                                         \"portal_auth_login_form_submit\"\n                                                      ).show();\n                                                      $$(\n                                                         \"portal_auth_login_form_submit_wait\"\n                                                      ).hide();\n                                                      console.log(err);\n                                                   });\n                                                }\n                                             },\n                                             on: {\n                                                onAfterRender() {\n                                                   ClassUI.CYPRESS_REF(this);\n                                                },\n                                             },\n                                          },\n                                          {\n                                             view: \"button\",\n                                             label: \"<i class='fa fa-circle-o-notch fa-fw fa-spin'></i>\",\n                                             type: \"form\",\n                                             id: \"portal_auth_login_form_submit_wait\",\n                                             css: \"webix_primary\",\n                                             width: 150,\n                                             hidden: true,\n                                          },\n                                          {},\n                                       ],\n                                    },\n                                    {\n                                       margin: 10,\n                                       paddingX: 2,\n                                       borderless: true,\n                                       cols: [\n                                          {},\n                                          {\n                                             view: \"button\",\n                                             label: L(\"Forgot password?\"),\n                                             css: \"webix_transparent\",\n                                             click: () => {\n                                                this.emit(\"request.reset\");\n                                                // $$(\"portal_auth_login\").hide();\n                                                // $$(\"password_reset_email\").show();\n                                             },\n                                             width: 150,\n                                          },\n                                          {},\n                                       ],\n                                    },\n                                    {\n                                       id: \"portal_auth_login_form_errormsg\",\n                                       view: \"template\",\n                                       css: \"webix_control\",\n                                       height: 32,\n                                       on: {\n                                          onAfterRender() {\n                                             ClassUI.CYPRESS_REF(this);\n                                          },\n                                       },\n                                    },\n                                 ],\n                              },\n                           ],\n                        },\n                     ],\n                  },\n                  {},\n               ],\n            },\n            {},\n         ],\n      };\n   }\n\n   error(message) {\n      var $errMsg = $$(\"portal_auth_login_form_errormsg\");\n      if (message) {\n         $errMsg.setHTML(\n            `<div class='webix_invalid'><div class='webix_inp_bottom_label'><center>${message}</center></div></div>`\n         );\n         $errMsg.show();\n      } else {\n         $errMsg.hide();\n      }\n   }\n\n   init(AB) {\n      this.AB = AB;\n\n      // now replace our initial placeholder with our viewable form\n      webix.ui(this.ui(), $$(\"portal_auth_login_container\"));\n\n      this.error(); // hides the default error message.\n\n      this.AB.Network.on(\"portal_auth_login\", (context, err, response) => {\n         // Listen for our login responses:\n         // console.log(\"Network.on():\", context, err, response);\n\n         if (err) {\n            // any http 400-500 response should show up here:\n            if (err.code) {\n               switch (err.code) {\n                  case \"EINVALIDLOGIN\":\n                     this.error(err.message);\n                     break;\n\n                  case \"EFAILEDATTEMPTS\":\n                     this.error(err.message);\n                     $$(\"portal_auth_login_form_submit\").hide();\n                     break;\n\n                  default:\n                     this.AB.error(err);\n                     break;\n               }\n            }\n            return;\n         }\n\n         if (\n            response.user ||\n            (response.status == \"success\" && response.data.user)\n         ) {\n            // reload the page to gather all the config info:\n            window.location.reload(true);\n\n            // Login was successful -> rerun BootStrap.init() to load the\n            // config, definitions, plugins, etc for this user\n            // Bootstrap.init(this.AB).catch((err) => {\n            //    Bootstrap.alert({\n            //       type: \"alert-error\",\n            //       title: \"Error initializing Portal:\",\n            //       text: err.toString(),\n            //    });\n            //    Bootstrap.error(err);\n            // });\n         } else {\n            if (response.status == \"error\") {\n               console.log(\"what to do with this error:\");\n               console.error(response);\n            }\n         }\n      });\n\n      return Promise.resolve();\n   }\n\n   show() {\n      $$(\"portal_auth_login_container\").show();\n   }\n}\n\nexport default new PortalAuthLoginForm();\n","import ClassUI from \"./ClassUI.js\";\n\nvar L = null;\n\nclass PortalAuthLoginResetPassword extends ClassUI {\n   constructor() {\n      super();\n   }\n\n   ui() {\n      var self = this;\n\n      if (!this.AB) {\n         // we need to init() before being able to translate our UI:\n         return {\n            id: \"portal_auth_login_reset_password\",\n         };\n      }\n\n      return {\n         id: \"portal_auth_login_reset_password\",\n         css: \"portalLogin\",\n         cols: [\n            {},\n            {\n               rows: [\n                  {},\n                  {\n                     width: 360,\n                     rows: [\n                        {\n                           id: \"portal_auth_login_reset_password_col\",\n                           css: \"portalLoginForm\",\n                           padding: 30,\n                           rows: [\n                              {\n                                 template:\n                                    \"<div style='text-align: center; font-size:160px; line-height: 160px;'><i style='background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-user-circle-o'></i></div>\",\n                                 borderless: true,\n                                 height: 190,\n                                 type: \"clean\",\n                              },\n                              {\n                                 id: \"portal_auth_login_reset_password_form\",\n                                 view: \"form\",\n                                 type: \"clean\",\n                                 css: { background: \"transparent !important\" },\n                                 borderless: true,\n                                 elementsConfig: {\n                                    height: 52,\n                                 },\n                                 elements: [\n                                    {\n                                       id: \"new-password-email\",\n                                       template: ` ${this.AB.Account.email()} `,\n                                       css: {\n                                          background: \"transparent !important\",\n                                          border: \"none\",\n                                          \"font-size\": \"16px\",\n                                          color: \"black\",\n                                          \"text-align\": \"center\",\n                                       },\n                                    },\n                                    {\n                                       id: \"password-new\",\n                                       view: \"text\",\n                                       type: \"password\",\n                                       placeholder: L(\"Enter a new Password\"),\n                                       name: L(\"Enter a new Password\"),\n                                       validate: (v) => {\n                                          return v.length >= 8;\n                                       },\n                                       invalidMessage: L(\n                                          \"Needs to be at least 8 characters\"\n                                       ),\n                                       validateEvent: \"blur\",\n                                       bottomPadding: 20,\n                                    },\n                                    {\n                                       id: \"password-confirm\",\n                                       view: \"text\",\n                                       type: \"password\",\n                                       placeholder: L(\"Re-enter Password\"),\n                                       name: \"email\",\n                                       validate: (v) => {\n                                          return (\n                                             v === $$(\"password-new\").getValue()\n                                          );\n                                       },\n                                       invalidMessage: L(\n                                          \"Passwords do not match\"\n                                       ),\n                                       validateEvent: \"blur\",\n                                       bottomPadding: 20,\n                                    },\n                                    {\n                                       margin: 10,\n                                       paddingX: 2,\n                                       borderless: true,\n                                       cols: [\n                                          {},\n                                          {\n                                             view: \"button\",\n                                             label: L(\"Save\"),\n                                             type: \"form\",\n                                             css: \"webix_primary\",\n                                             width: 150,\n                                             hotkey: \"enter\",\n                                             click: () => {\n                                                if (\n                                                   $$(\n                                                      \"portal_auth_login_reset_password_form\"\n                                                   ).validate()\n                                                ) {\n                                                   let password = $$(\n                                                      \"password-new\"\n                                                   ).getValue();\n                                                   this.AB.Network.post(\n                                                      {\n                                                         url:\n                                                            \"/auth/password/reset\",\n                                                         data: {\n                                                            password,\n                                                         },\n                                                      },\n                                                      {\n                                                         key:\n                                                            \"portal_auth_password_reset\",\n                                                         context: {},\n                                                      }\n                                                   ).catch((err) => {\n                                                      console.log(err);\n                                                   });\n                                                }\n                                             },\n                                          },\n                                          {},\n                                       ],\n                                    },\n                                 ],\n                              },\n                           ],\n                        },\n                     ],\n                  },\n                  {},\n               ],\n            },\n            {},\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n\n      L = (...params) => {\n         return this.AB.Multilingual.label(...params);\n      };\n\n      // now replace our initial placeholder with our viewable form\n      webix.ui(this.ui(), $$(\"portal_auth_login_reset_password\"));\n\n      this.AB.Network.on(\n         \"portal_auth_password_reset\",\n         (context, err, response) => {\n            // Listen for our responses:\n            // Show a popup for confirmation that an email was sent.\n            // context.email : {string} entered email address.\n\n            this.AB.emit(\"portal.show\", \"work\"); // switch to the Work Portal.\n         }\n      );\n   }\n\n   show() {\n      $$(\"portal_auth_login_reset_password\").show();\n   }\n}\n\nexport default new PortalAuthLoginResetPassword();\n","import ClassUI from \"./ClassUI.js\";\n\nvar L = null;\n\nclass PortalAuthLoginResetRequest extends ClassUI {\n   constructor() {\n      super();\n   }\n\n   ui() {\n      var self = this;\n\n      if (!this.AB) {\n         // we need to init() before being able to translate our UI:\n         return {\n            id: \"portal_auth_login_reset_request\",\n         };\n      }\n\n      return {\n         id: \"portal_auth_login_reset_request\",\n         css: \"portalLogin\",\n         cols: [\n            {},\n            {\n               rows: [\n                  {},\n                  {\n                     width: 360,\n                     rows: [\n                        {\n                           id: \"password_reset_email\",\n                           css: \"portalLoginForm\",\n                           padding: 30,\n                           rows: [\n                              {\n                                 template:\n                                    \"<div style='text-align: center; font-size:160px; line-height: 160px;'><i style='background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-envelope-o'></i></div>\",\n                                 borderless: true,\n                                 height: 190,\n                                 type: \"clean\",\n                              },\n                              {\n                                 id: \"portal_reset_password_form\",\n                                 view: \"form\",\n                                 type: \"clean\",\n                                 css: { background: \"transparent !important\" },\n                                 borderless: true,\n                                 elementsConfig: {\n                                    bottomPadding: 20,\n                                 },\n                                 elements: [\n                                    {\n                                       template: `<p>${L(\n                                          \"Enter your email. We'll send a link to reset your password.\"\n                                       )}</p>`,\n                                       autoheight: true,\n                                       css: {\n                                          background: \"transparent\",\n                                          border: \"none\",\n                                          \"font-size\": \"16px\",\n                                          color: \"black\",\n                                          \"text-align\": \"center\",\n                                       },\n                                    },\n                                    {\n                                       borderless: true,\n                                       cols: [\n                                          {\n                                             id: \"reset_tenantList\",\n                                             view: \"select\",\n                                             // label: \"Tenant\",\n                                             name: \"tenant\",\n                                             attributes: {\n                                                \"data-cy\": \"reset_tenantList\",\n                                             },\n                                             value: 1,\n                                             options: [\n                                                { id: 1, value: \"Master\" },\n                                                { id: 2, value: \"Release\" },\n                                             ],\n                                          },\n                                          {\n                                             id: \"reset-email\",\n                                             view: \"text\",\n                                             placeholder: L(\"Email\"),\n                                             name: \"email\",\n                                             validate: webix.rules.isEmail,\n                                             invalidMessage: L(\n                                                \"Please enter a valid email.\"\n                                             ),\n                                             validateEvent: \"blur\",\n                                          },\n                                          {\n                                             rows: [\n                                                {\n                                                   view: \"button\",\n                                                   icon: \"fa fa-paper-plane\",\n                                                   type: \"icon\",\n                                                   css: \"webix_primary\",\n                                                   autowidth: true,\n                                                   hotkey: \"enter\",\n                                                   click() {\n                                                      var email =\n                                                         $$(\"reset-email\");\n                                                      if (email.validate()) {\n                                                         email =\n                                                            email.getValue();\n                                                         var tenant =\n                                                            $$(\n                                                               \"reset_tenantList\"\n                                                            ).getValue();\n                                                         self.AB.Network.post(\n                                                            {\n                                                               url: \"/auth/login/reset\",\n                                                               data: {\n                                                                  email,\n                                                                  tenant,\n                                                                  url:\n                                                                     window\n                                                                        .location\n                                                                        .origin ||\n                                                                     window\n                                                                        .location\n                                                                        .href,\n                                                               },\n                                                            },\n                                                            {\n                                                               key: \"portal_auth_login_reset\",\n                                                               context: {\n                                                                  email,\n                                                               },\n                                                            }\n                                                         ).catch((err) => {\n                                                            console.log(err);\n                                                         });\n                                                      }\n                                                   },\n                                                },\n                                                {},\n                                             ],\n                                          },\n                                       ],\n                                    },\n                                    {\n                                       view: \"button\",\n                                       label: L(\"Back to log in\"),\n                                       css: \"webix_transparent\",\n                                       click() {\n                                          self.emit(\"login\");\n                                       },\n                                    },\n                                 ],\n                              },\n                           ],\n                        },\n                     ],\n                  },\n                  {},\n               ],\n            },\n            {},\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n\n      L = (...params) => {\n         return this.AB.Multilingual.label(...params);\n      };\n\n      // now replace our initial placeholder with our viewable form\n      webix.ui(this.ui(), $$(\"portal_auth_login_reset_request\"));\n\n      var $tenant = $$(\"reset_tenantList\");\n      var siteConfig = this.AB.Config.siteConfig();\n      if (siteConfig?.tenants?.length) {\n         // replace options in tenant list with siteConfig.tenants:\n         var newOptions = [];\n         siteConfig.tenants.forEach((t) => {\n            var opt = {\n               id: t.uuid,\n               value: t.title || t.key,\n            };\n            newOptions.push(opt);\n         });\n\n         $tenant.define(\"options\", newOptions);\n      }\n\n      var tID = this.AB.Tenant.id();\n      if (tID) {\n         $tenant.define(\"value\", tID);\n\n         // if the tID matches one of our options, then we can hide\n         // the input.\n         // eg: they entered a route [tenant].our.url\n         // we simple auto select the tenant and don't show this component.\n         var opt = newOptions.find((o) => o.id == tID);\n         if (opt) {\n            $tenant.hide();\n         }\n      }\n\n      this.AB.Network.on(\n         \"portal_auth_login_reset\",\n         (context, err, response) => {\n            // Listen for our responses:\n            // Show a popup for confirmation that an email was sent.\n            // context.email : {string} entered email address.\n\n            var text = L(\n               \"<p>An email with instructions on how to reset your password has been sent to <b>{0}</b>.</p><p>Check your spam or junk folder if you don’t see the email in your inbox.</p>\",\n               [context.email]\n            );\n\n            webix.alert({\n               title: L(\"Email Sent\"),\n               ok: L(\"Okay\"),\n               width: 500,\n               text: text,\n            });\n         }\n      );\n   }\n\n   show() {\n      $$(\"portal_auth_login_reset_request\").show();\n   }\n}\n\nexport default new PortalAuthLoginResetRequest();\n","import ClassUI from \"./ClassUI.js\";\nimport PortalAuthLoginForm from \"./portal_auth_login_form.js\";\nimport PortalAuthLoginResetPassword from \"./portal_auth_login_resetPassword.js\";\nimport PortalAuthLoginResetRequest from \"./portal_auth_login_resetRequest.js\";\n\nclass PortalAuthLogin extends ClassUI {\n   constructor() {\n      super();\n   }\n\n   ui() {\n      var self = this;\n\n      return {\n         id: \"portal_auth_login\",\n         view: \"multiview\",\n         animate: false,\n         rows: [\n            PortalAuthLoginForm.ui(),\n            PortalAuthLoginResetPassword.ui(),\n            PortalAuthLoginResetRequest.ui(),\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n\n      var allInits = [];\n      allInits.push(PortalAuthLoginForm.init(AB));\n      PortalAuthLoginForm.on(\"request.reset\", () => {\n         PortalAuthLoginResetRequest.show();\n      });\n\n      allInits.push(PortalAuthLoginResetRequest.init(AB));\n      PortalAuthLoginResetRequest.on(\"login\", () => {\n         PortalAuthLoginForm.show();\n      });\n\n      allInits.push(PortalAuthLoginResetPassword.init(AB));\n      PortalAuthLoginResetPassword.on(\"updated\", () => {\n         console.log(\">>>> Password Changed ... NOW WHAT? <<<<<<\");\n      });\n\n      await Promise.all(allInits);\n   }\n\n   show(defaultView) {\n      // defaultView should be:\n      //   \"auth_login_form\",\n      //   \"auth_login_passwordReset\"\n\n      if (defaultView) {\n         var view = defaultView.split(\"_\").pop();\n         switch (view) {\n            case \"resetPassword\":\n               PortalAuthLoginResetPassword.show();\n               break;\n\n            default:\n            case \"form\":\n               PortalAuthLoginForm.show();\n               break;\n         }\n         return;\n      }\n\n      // Default to the LoginForm\n      PortalAuthLoginForm.show();\n   }\n}\n\nexport default new PortalAuthLogin();\n","import ClassUI from \"./ClassUI.js\";\n\n// sub pages:\nimport PortalAuthLogin from \"./portal_auth_login.js\";\n\nclass PortalAuth extends ClassUI {\n   constructor() {\n      super();\n\n      this.ActivePortal = null;\n      // {PortalAuthxxx} ActivePortal\n      // the UI Portal to use for Authenticating our User for this Tenant.\n   }\n\n   ui() {\n      var self = this;\n\n      return {\n         id: \"portal_auth\",\n         view: \"multiview\",\n         animate: false,\n         cells: [PortalAuthLogin.ui()],\n      };\n   }\n\n   init(AB) {\n      this.AB = AB;\n\n      // decide which Auth Portal to display:\n      var authType = this.AB.Tenant.setting(\"authType\") || \"login\";\n      switch (authType) {\n         case \"login\":\n            this.ActivePortal = PortalAuthLogin;\n            break;\n\n         case \"passwordless\":\n            break;\n\n         case \"facebook\":\n            break;\n\n         case \"google\":\n            break;\n      }\n\n      return this.ActivePortal?.init(AB).then(() => {\n         this.ActivePortal?.show();\n      });\n   }\n\n   show(defaultView) {\n      // We cannot properly store the session id if users navigate directly to /home\n      // so when they navigate to /home and it was not a redirect we send them back to /\n      if (\n         window?.location?.pathname == \"/home\" &&\n         !window?.performance?.navigation?.redirectCount\n      )\n         window.location.replace(window.location.origin);\n\n      $$(\"portal_auth\").show();\n      this.ActivePortal.show(defaultView);\n   }\n}\n\nexport default new PortalAuth();\n","import ClassUI from \"./ClassUI\";\n\nclass ClassUIPage extends ClassUI {\n   constructor(containerID, page, App, AB) {\n      super();\n\n      this.containerID = containerID;\n      // {string}\n      // the webix $$(containerID) reference to attach this UI to.\n      // Typically the portal_work generates a series of container placeholders\n      // and these ClassUIPage will attach themselves to them.\n\n      this.page = page;\n      // {ABViewPage}\n      // The Root Page that this container is displaying.\n\n      this.App = App;\n      // {ABComponent.App}\n      // The common UI Component App factory.\n\n      this.AB = AB;\n      // {ABFactory}\n      // The common ABFactory being shared for all our ABxxx Objects.\n\n      this.initialized = false;\n      // {bool}\n      // indicates if the User had chosen to display this page yet.\n      // We prevent loading our data and building the page until the\n      // User decides to show the page.\n\n      this.pageStack = [];\n      // {array}\n      // Keep track of the {ABViewPage.id} that have been showPage()ed.\n      // The last element in the stack should be the Actively Shown page.\n      // If the stack is empty, then we are showing the RootPage.\n\n      this.pageComponents = {};\n      // {hash}  { ABViewPage.id : ABViewPage.component() }\n      // we keep track of all the ui.component() of our possible views to\n      // prevent having to regenerate them and quickly access their values.\n\n      this.changePageEventIds = {};\n      // {hash}  { ABViewPage.id : .on(\"changePage\") }\n      // A hash of the on(\"changePage\") listeners for each page. Used to\n      // prevent multiple listeners added to a Page\n   }\n\n   ui() {\n      // NOTE: the .container === .id\n      // so this REPLACES the container created by the portal_work\n      var placeholder = {};\n      if (this.page && this.page.isRoot()) {\n         // some pages can take a while to initialize.\n         // add a spinner to indicate it is busy\n         placeholder = {\n            type: \"clean\",\n            css: { \"text-align\": \"center\" },\n            template:\n               '<div style=\"height: 100vh; width: 100%; background: #ebedf0;\" class=\"webix_progress_icon\"><div class=\"webix_progress_state wxi-sync webix_spin\"></div></div>',\n         };\n      }\n      return {\n         view: \"multiview\",\n         // container: this.containerID,\n         css: \"ab-main-container ab-generated-page\",\n         borderless: true,\n         id: this.containerID,\n         animate: false,\n         cells: [placeholder],\n         on: {\n            // onViewChange: (prevId, nextId) => {\n            //    this.resize();\n            // },\n         },\n      };\n   }\n\n   init(AB, render = false, showPage = true) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // don't redo all this if we already have!\n      if (this.initialized) return Promise.resolve();\n\n      var myUI = this.ui();\n      webix.ui(myUI, $$(this.containerID));\n\n      if (!render) {\n         return Promise.resolve();\n      }\n\n      // .init() returns a Promise\n      return new Promise((resolve /*, reject */) => {\n         // 1) make sure all Application DataCollections have started\n         //    initialization.\n         this.page.application.datacollectionsIncluded().forEach((dc) => {\n            if (!dc) return;\n\n            dc.init();\n         });\n\n         // 2) Render all our Pages\n         this.renderPage(this.page);\n\n         // 3) After we are rendered, we are technically initialized\n         this.initialized = true;\n\n         // 4) Make sure our Root Page is \"shown\"\n         this.showPage();\n\n         if (!showPage) {\n            let parView = $$(this.containerID).getParentView();\n            parView.showBatch(parView.getValue(), false);\n         }\n\n         resolve();\n      });\n   }\n\n   /**\n    * initEvents()\n    * Setup the listeners for each page.  There are 3 main events we are\n    * concerned with:\n    *    \"changePage\" =>\n    *          generated by our Page / Sub Page / Sub view\n    *          indicates when a new page should be displayed.\n    *    \"ab.interface.update\" =>\n    *          generated by the server.\n    *          indicates that the Definition of our interface\n    *          has changed and we need to redisplay.\n    *    \"ab.datacollection.update\" = >\n    *          generated by the server.\n    *          indicates one of the DataCollections have been updated.\n    *          if it is one we are depending on, we need to redisplay\n    *\n    * @param {ABViewPage} page\n    *       The ABViewPage to establish listeners on.\n    */\n   initEvents(page) {\n      if (page == null) return;\n\n      // { pageId: eventId, ..., pageIdn: eventIdn }\n      this.changePageEventIds = this.changePageEventIds || {};\n\n      // prevent duplicate event registrations\n      if (!this.changePageEventIds[page.id]) {\n         this.changePageEventIds[page.id] = page.on(\"changePage\", (pageID) => {\n            this.showPage(pageID);\n         });\n      }\n\n      let needToReloadPage = () => {\n         // clear the cache of events\n         this.changePageEventIds = {};\n\n         this.initialized = false;\n\n         // begin the process of reloading the page\n         this.init(this.AB, true, false);\n      };\n\n      if (!this.updatePageEventId && page.isRoot()) {\n         /**\n          * @event ab.interface.update\n          * This event is triggered when the root page is updated\n          *\n          * @param data.rootPage {uuid} - id of the root page\n          */\n         this.updatePageEventId = this.AB.on(\n            \"ab.interface.update\",\n            function (data) {\n               if (page.id == data.rootPageId) {\n                  needToReloadPage();\n               }\n            }\n         );\n      }\n\n      if (!this.updateDatacollectionEventId && page.isRoot()) {\n         /**\n          * @event ab.datacollection.update\n          * This event is triggered when the datacollection is updated\n          * Make sure we only update the Display if it was a DC that was\n          * included in this Page's Application.\n          *\n          * @param data.datacollectionId {uuid} - id of the data view\n          */\n         this.updateDatacollectionEventId = this.AB.on(\n            \"ab.datacollection.update\",\n            (data) => {\n               let updatedDC = this.page.application.datacollectionsIncluded(\n                  (dc) => dc.id == data.datacollectionId\n               )[0];\n               if (updatedDC) {\n                  needToReloadPage();\n               }\n            }\n         );\n      }\n   }\n\n   /**\n    * renderPage()\n    * create the Webix UI for the given ABViewPage and all it's Sub Pages.\n    * This routine creates the component.ui, and performs the component.init()\n    * but does not perform the final component.onShow() ( that happens in the\n    * showPage() method.)\n    * @param {ABViewPage} page\n    */\n   renderPage(page) {\n      if (window.webixLocale) {\n         setTimeout(() => {\n            webix.i18n.setLocale(window.webixLocale);\n         }, 500);\n      }\n      var component = page.component(this.App);\n      var ui = component.ui;\n\n      // Keep the page component\n      this.pageComponents[page.id] = component;\n\n      var myContainer = $$(this.containerID);\n      // {webix.ui}\n      // Referencing our container. Since we seem to make numerous references\n      // to this below, let's just pull it 1x.\n\n      // James:\n      // this is pulled in from our previous v1 code. Not sure if it is still\n      // relevant.\n      // TODO: review this and how this works in context of our Webix Only\n      // Portal.\n      // Also, notice how we are referencing the internal data of a Page object?\n      // there should be an accessor method (like page.setting(\"pageWidth\"))\n      // that returns the data we need.\n      /*\n      if (\n         parseInt(page.settings.pageWidth) > 0 &&\n         parseInt(page.settings.fixedPageWidth) == 1\n      ) {\n         var parentContainer = this.element.parent()[0];\n         parentContainer.style.width = parseInt(page.settings.pageWidth) + \"px\";\n         parentContainer.style.margin = \"0 auto\";\n         parentContainer.classList.add(page.settings.pageBackground);\n      }\n      */\n\n      var type = page.settings?.type ?? \"\";\n      if (typeof page.type === \"function\") {\n         // plugin method.\n         type = page.type();\n      }\n      switch (type) {\n         case \"popup\":\n            var popupTemplate = {\n               view: \"window\",\n               id: page.id,\n               modal: true,\n               position: \"center\",\n               resize: true,\n               width: parseInt(page.settings.popupWidth) || 700,\n               height: parseInt(page.settings.popupHeight) + 44 || 450,\n               css: \"ab-main-container\",\n               head: {\n                  view: \"toolbar\",\n                  css: \"webix_dark\",\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: page.label,\n                        css: \"modal_title\",\n                        align: \"center\",\n                     },\n                     {\n                        view: \"button\",\n                        label: \"Close\",\n                        autowidth: true,\n                        align: \"center\",\n                        click: () => {\n                           this.showPage();\n                           // var popup = this.getTopParentView();\n                           // popup.hide();\n                        },\n                        on: {\n                           //Add data-cy attribute to the close button\n                           onAfterRender: () => {\n                              const button = $$(page.id).queryView(\"button\");\n                              const dataCy = `Popup Close Button ${page.name} ${page.id}`;\n                              button\n                                 .getInputNode()\n                                 .setAttribute(\"data-cy\", dataCy);\n                           },\n                        },\n                     },\n                  ],\n               },\n               body: {\n                  view: \"scrollview\",\n                  scroll: true,\n                  body: ui,\n               },\n            };\n\n            var oldView = $$(page.id);\n            if (oldView) {\n               // if it is a Popup, destroy() it\n               if (oldView.config.view == \"window\") {\n                  oldView.destructor();\n               }\n               // else remove the view from our multiview\n               else if (myContainer) {\n                  myContainer.removeView(page.id);\n               }\n            }\n\n            // Now create the New one (hidden)\n            try {\n               webix.ui(popupTemplate).hide();\n            } catch (e) {\n               console.error(\"Error creating Page:\", page);\n               console.error(e);\n               // debugger;\n            }\n            break;\n\n         case \"page\":\n         default:\n            // Define page id to be batch id of webix.multiview\n            ui.batch = page.id;\n\n            // if this view already exists\n            var oldPage = $$(page.id);\n            if (oldPage) {\n               // if the old view was a popup, but now we want it as\n               // a page, we need to move it to our multiview\n               if (oldPage.config.view == \"window\") {\n                  oldPage.destructor();\n\n                  myContainer.addView(ui);\n               }\n               // else we want to rebuild it.\n               else {\n                  webix.ui(ui, oldPage);\n               }\n            }\n            // else this is our first time so add it\n            else if (myContainer) {\n               myContainer.addView(ui);\n            }\n\n            break;\n      }\n\n      // handle events\n      this.initEvents(page);\n\n      // Render child pages\n      (page.pages() || []).forEach((subpage) => {\n         this.renderPage(subpage);\n      });\n\n      // Initial UI components\n      component.init();\n   }\n\n   /**\n    * show()\n    * is called by the main portal_work when a menu item is selected and this\n    * container should be displayed.\n    */\n   show() {\n      var container = $$(this.containerID);\n      if (container) {\n         if (!this.initialized) {\n            // this is our 1st time to show, so wait for our initial loading\n            // container to display, before causing it to be transformed into\n            // our Page.\n            var eventID = container.attachEvent(\"onViewShow\", () => {\n               // only 1x\n               container.detachEvent(eventID);\n               // give ourselves some additional space to make sure animations\n               // are complete or operational before the .init() which can be\n               // resource intensive.\n               setTimeout(() => {\n                  this.init(this.AB, true);\n                  container.show();\n               }, 50);\n            });\n         }\n\n         container.show();\n      }\n   }\n\n   /**\n    * showPage()\n    * A RootPage can have several SubPages that it wants to display during\n    * it's normal operation.  An embedded view component can trigger an\n    * .emit(\"showPage\", pageID) that will get propagated up to our RootPage\n    * and showPage(pageID) will be called.\n    *\n    * For example, an ABViewMenu object will have a button clicked and it will\n    * signal this to show the desired Page.\n    *\n    * If a showPage() is called with no parameter, then we are being requested\n    * to return to the previous page before the current one.\n    * @param {string} pageID\n    *       The {ABViewPage.id} of the page to show.\n    * @param {string} viewID\n    *       An additional ABViewxxx.id that can also be signaled to show.\n    *       ?? Usually on the Page we just showed, so you can specify a\n    *       page + view.\n    */\n   showPage(pageID, viewId) {\n      var showPageID = null;\n      // {string}\n      // This is the actual pageID of the ABViewPage to display.\n\n      // in any case, if the active page is not the requested page,\n      // we hide it:\n      var activeID = this.pageStack[this.pageStack.length - 1];\n      if (activeID) {\n         // if the actively displayed page is what is being asked for\n         // we can just exit.\n         if (activeID == pageID) {\n            return; //\n         }\n\n         // otherwise we need to hide() any popups / pages\n         var activeUI = $$(activeID);\n         if (activeUI && activeUI.hide) activeUI.hide();\n      }\n\n      // if no pageID provided, then we are displaying a previous page:\n      if (!pageID) {\n         // pull the last View displayed & remove it.\n         this.pageStack.pop();\n      } else {\n         // be sure not to add our Root Page to the stack\n         if (this.page.id != pageID) {\n            // add the new pageID to our stack:\n            // REMEMBER: last item is what should be show()n\n            this.pageStack.push(pageID);\n         } else {\n            // in this case: we have items in our .pageStack, but we are told\n            // to return to our RootPage;\n            // clear out our .pageStack and we will return to our root\n            this.pageStack = [];\n         }\n      }\n\n      // now get the ID of the page to show\n      showPageID = this.pageStack[this.pageStack.length - 1];\n      if (!showPageID) {\n         // then we want to display the Root Page:\n         showPageID = this.page.id;\n      }\n\n      if (!showPageID) {\n         // if we get here and don't have a showPageID ... something didn't\n         // go as planned:\n         this.AB.error(\n            new Error(`Unable to resolve showPage() with pageID[${pageID}]`)\n         );\n      } else {\n         // make sure a popup is shown\n         if ($$(showPageID)) $$(showPageID).show();\n\n         // if our MultiView has this batch then show batch\n         var batchExist = false;\n         var childViews = $$(this.containerID).getChildViews();\n         batchExist = childViews.filter(function (v) {\n            return v.config.batch == showPageID;\n         })[0];\n         if (batchExist) $$(this.containerID).showBatch(showPageID);\n\n         // now make sure the actual component's .onShow() is called\n         // But perform a Timeout() so any current webix animations\n         // complete beforehand:\n         setTimeout(() => {\n            if (\n               this.pageComponents[showPageID] &&\n               this.pageComponents[showPageID].onShow\n            ) {\n               // for (const element of document\n               //    .getElementById(self.containerDomID)\n               //    .getElementsByClassName(\"ab-loading\")) {\n               //    element.style.display = \"none\";\n               // }\n               this.pageComponents[showPageID].onShow();\n               if (viewId) {\n                  $$(viewId).show();\n               }\n            }\n         }, 60);\n      }\n   }\n\n   /*\n   removePage(pageId) {\n      var pageCom = this.pageComponents[pageId];\n      var pageElemId = pageCom.ui.id;\n\n      // swtich the page before it will be removed\n      if (this.activePageId == pageId) {\n         this.showPage(this.rootPage.id);\n      }\n\n      // remove from .multiview\n      $$(this.containerDomID).removeView(pageElemId);\n\n      // destroy view's modal\n      if ($$(pageElemId)) $$(pageElemId).destructor();\n   }\n   */\n}\n\nexport default ClassUIPage;\n","import ClassUI from \"./ClassUI.js\";\n\nclass PortalWorkInboxAccordion extends ClassUI {\n   constructor(app) {\n      super();\n\n      this.app = app;\n      this.id = `inbox-accordion-app-holder-${this.app.id}`;\n      this.idUnitList = `inbox-accordion-app-${this.app.id}`;\n   }\n\n   ui() {\n      const self = this;\n      // for .click() handler below:\n\n      return {\n         header: this.app.label,\n         id: this.id,\n         view: \"accordionitem\",\n         collapsed: true,\n         css: \"stayCollapsed\",\n         hidden: true,\n         body: {\n            view: \"unitlist\",\n            id: this.idUnitList,\n            uniteBy: \"#uniteLabel#\",\n            autoheight: true,\n            css: \"inbox_unitlist\",\n            type: {\n               templateHeader: function (value) {\n                  return (\n                     '<i style=\"opacity: 0.4\" class=\"fa fa-fw fa-code-fork fa-rotate-90\"></i> ' +\n                     value.replace(/{(.*?)}/, \"\")\n                  );\n               },\n               headerHeight: 35,\n            },\n            template: function (obj) {\n               return (\n                  obj.name +\n                  \" <span class='pull-right webix_badge'>\" +\n                  obj.items.length +\n                  \"</span>\"\n               );\n            },\n            select: true,\n            data: [],\n            click: function (id /* , ev */) {\n               const list = this;\n               // const parent = this.getParentView();\n               const selectedItem = this.getItem(id);\n\n               const cells = [];\n               // {array}\n               // the webix defs for the Form.io forms for this selection.\n\n               // const number = 1;\n               selectedItem.items.forEach(function (task) {\n                  if (task.data?.url) {\n                     cells.push({\n                        id: \"task-holder-\" + task.uuid,\n                        unitlist: list,\n                        view: \"layout\",\n                        padding: 20,\n                        rows: [\n                           {\n                              id: task.uuid,\n                              view: \"iframe\",\n                              src: task.data.url,\n                           },\n                        ],\n                     });\n                  } else\n                     cells.push({\n                        id: \"task-holder-\" + task.uuid,\n                        unitlist: list,\n                        view: \"layout\",\n                        padding: 20,\n                        rows: [\n                           {\n                              id: task.uuid,\n                              view: \"formiopreview\",\n                              formComponents: task.ui,\n                              formData: task.data,\n                              onButton: function (value) {\n                                 self.processItem(id, task, value);\n                              },\n                           },\n                        ],\n                     });\n               });\n\n               self.emit(\"showTasks\", /*list, */ selectedItem.name, cells);\n            },\n            on: {\n               onAfterRender() {\n                  ClassUI.CYPRESS_REF(this);\n                  this.data.each((a) => {\n                     ClassUI.CYPRESS_REF(\n                        this.getItemNode(a.id),\n                        `${self.id}_${a.id}`\n                     );\n                  });\n               },\n            },\n         },\n         // TODO: This never gets called!\n         // on: {\n         //    onAfterRender() {\n         //       ClassUI.CYPRESS_REF(this);\n         //    },\n         // },\n      };\n   }\n\n   init(AB) {\n      // prevent multiple .init() calls\n      if (!this.AB) {\n         this.AB = AB;\n\n         this.AB.Network.on(\"inbox.update\", (context, err /* , response */) => {\n            if (err && err.message) {\n               webix.message(err.message);\n               this.AB.notify.developer(err, {\n                  context:\n                     \"portal_work_inbox_accordion:Network[inbox.update]: error updating Inbox item\",\n                  info: context,\n               });\n               return;\n            }\n\n            const list = $$(this.idUnitList);\n            const selectedItem = list.getItem(context.unitID);\n\n            // clear out processed item from our accordion\n            // prune the item from the group of similar processes in the unit list\n            if (selectedItem) {\n               const parent = list.getParentView();\n\n               selectedItem.items = selectedItem.items.filter(function (i) {\n                  return i.uuid != context.uuid;\n               });\n\n               // refresh the unit list so we can get an update badge count\n               list.refresh();\n               if (selectedItem.items.length == 0) {\n                  // remove the item from the unit list\n                  list.remove(list.getSelectedId());\n                  // if that was the last item in the unit list remove the accordion\n                  if (list.count() == 0) {\n                     parent.hide();\n                  }\n               }\n            }\n\n            this.emit(\"item.processed\", context.uuid);\n         });\n      }\n\n      return Promise.resolve();\n   }\n\n   unitList() {\n      return $$(this.idUnitList);\n   }\n\n   /**\n    * @method processItem()\n    * submit the current task's response back to the server.\n    * @param {ABProcessForm} task\n    *        the current form that is being responded to.\n    * @param {string} value\n    *        the value of the Form button returned.\n    */\n   processItem(unitID, task, value) {\n      this.AB.Network.put(\n         {\n            url: `/process/inbox/${task.uuid}`,\n            data: { response: value },\n         },\n         {\n            key: \"inbox.update\",\n            context: { uuid: task.uuid, unitID },\n         }\n      );\n\n      return;\n   }\n\n   show() {\n      $$(this.id).show();\n      $$(this.id).expand();\n      this.initFormIOPreview();\n   }\n\n   /**\n    * Ensure the formio custom webix component is loaded and ready to\n    * use.\n    */\n   initFormIOPreview() {\n      this.AB.custom.formiopreview.init();\n   }\n}\n\nexport default PortalWorkInboxAccordion;\n","import ClassUI from \"./ClassUI.js\";\n\nclass PortalWorkInboxTaskwindow extends ClassUI {\n   constructor() {\n      super();\n      this.id = \"portal_work_inbox_taskwindow\";\n      this.idTaskMultiview = \"taskMultiview\";\n      this.idTaskTitle = \"taskTitle\";\n      this.idTaskPager = \"taskPager\";\n   }\n\n   ui() {\n      var L = (...params) => {\n         return this.label(...params);\n      };\n      return {\n         id: this.id,\n         view: \"window\",\n         position: function (state) {\n            state.left = state.maxWidth / 2 - 800 / 2; // fixed values\n            state.top = state.maxHeight / 2 - (state.maxHeight * 0.7) / 2;\n            state.width = 800; // relative values\n            state.height = state.maxHeight * 0.7;\n         },\n         modal: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               { width: 17 },\n               {\n                  id: this.idTaskTitle,\n                  view: \"label\",\n                  label: L(\"Your Tasks\"),\n               },\n               {\n                  view: \"button\",\n                  autowidth: true,\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     $$(this.id).hide();\n                     // we don't want the list to look like it has still selected the item\n                     $$(this.idTaskMultiview)\n                        .getChildViews()[0]\n                        .config.unitlist.unselectAll();\n                     // reset the pager so we don't get errors when we open it next\n                     $$(this.idTaskPager).select(0);\n                  },\n                  on: {\n                     onAfterRender() {\n                        ClassUI.CYPRESS_REF(this, \"inbox_taskwindow_close\");\n                     },\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  view: \"scrollview\",\n                  scroll: \"xy\",\n                  body: {\n                     id: this.idTaskMultiview,\n                     cells: [\n                        {\n                           view: \"layout\",\n                           padding: 20,\n                           rows: [\n                              {\n                                 id: \"emptyTasks\",\n                                 template: L(\"No more tasks...good job!\"),\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               },\n               {\n                  view: \"toolbar\",\n                  css: \"inboxpager\",\n                  cols: [\n                     {\n                        id: this.idTaskPager,\n                        view: \"pager\",\n                        size: 1,\n                        group: 3,\n                        height: 45,\n                        master: false,\n                        template:\n                           '<div style=\"margin-top:9px; text-align: center;\">{common.first()} {common.prev()} {common.pages()} {common.next()} {common.last()}</div>',\n                        on: {\n                           onAfterRender() {\n                              // debugger;\n                              ClassUI.CYPRESS_REF(this);\n                              // this.data.each((a) => {\n                              //    ClassUI.CYPRESS_REF(\n                              //       this.getItemNode(a.id),\n                              //       `${self.id}_${a.id}`\n                              //    );\n                              // });\n                           },\n                           onBeforePageChange: (new_page /*, old_page  */) => {\n                              var views = $$(\n                                 this.idTaskMultiview\n                              ).getChildViews();\n                              views[parseInt(new_page)].show();\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   init(AB) {\n      this.AB = AB;\n      webix.ui(this.ui());\n\n      return Promise.resolve();\n   }\n\n   clearTask(uuid) {\n      // find out how many pages are in this multiview\n      var views = $$(this.idTaskMultiview).getChildViews();\n      // if there is more than one page we need to find out what the next page should be\n      if (views.length > 1) {\n         var taskHolder = $$(\"task-holder-\" + uuid);\n         if (taskHolder) {\n            // find out if we are on the last page\n            if (\n               $$(this.idTaskMultiview).index(taskHolder) + 1 ==\n               views.length\n            ) {\n               // if we are on the last page we will go back to the previous page\n               $$(this.idTaskMultiview).setValue(\n                  views[$$(this.idTaskMultiview).index(taskHolder) - 1].config\n                     .id\n               );\n            } else {\n               // if we are not on the last page we will go to the next page\n               $$(this.idTaskMultiview).setValue(\n                  views[$$(this.idTaskMultiview).index(taskHolder) + 1].config\n                     .id\n               );\n            }\n            // once we move off of the page we can remove it\n            $$(this.idTaskMultiview).removeView(\n               views[$$(this.idTaskMultiview).index(taskHolder)]\n            );\n         }\n\n         // // prune the item from the group of similar processes in the unit list\n         // if (this.selectedItem) {\n         //    this.selectedItem.items = this.selectedItem.items.filter(function (\n         //       i\n         //    ) {\n         //       return i.uuid != uuid;\n         //    });\n         // }\n         // // refresh the unit list so we can get an update badge count\n         // this.list.refresh();\n\n         // now we update the pager\n         // block events because we don't want it telling the multiview to change pages after we set the new value\n         $$(this.idTaskPager).blockEvent();\n         // set the page to the first while we rebuild the pager (or it will throw an error)\n         $$(this.idTaskPager).select(0);\n         // set the current number of pages to the number of views in the multiview\n         $$(this.idTaskPager).define(\n            \"count\",\n            $$(this.idTaskMultiview).getChildViews().length\n         );\n         $$(this.idTaskPager).refresh();\n         // set the page to the correct number because it probably changed when we removed a view above\n         $$(this.idTaskPager).select(\n            $$(this.idTaskMultiview).index(\n               $$(this.idTaskMultiview).getActiveId()\n            )\n         );\n         $$(this.idTaskPager).unblockEvent();\n      } else {\n         // no more tasks hide the modal\n         $$(this.id).hide();\n         // // remove the item from the unit list\n         // this.list.remove(this.list.getSelectedId());\n         // // if that was the last item in the unit list remove the accordion\n         // if (this.list.count() == 0) {\n         //    parent.hide();\n         // }\n      }\n   }\n\n   hide() {\n      $$(this.id).hide();\n   }\n\n   show() {\n      $$(this.id).show();\n   }\n\n   showTasks(/* unitList, */ selectedItemName, cells) {\n      // this.list = unitList;\n      // this.selectedItem = selectedItem;\n      webix.ui(\n         {\n            id: this.idTaskMultiview,\n            cells: cells,\n         },\n         $$(this.idTaskMultiview)\n      );\n\n      $$(this.idTaskTitle).define(\"label\", selectedItemName);\n      $$(this.idTaskPager).define(\"count\", cells.length);\n      $$(this.idTaskPager).refresh();\n      $$(this.id).show();\n   }\n}\n\nexport default new PortalWorkInboxTaskwindow();\n","import ClassUI from \"./ClassUI.js\";\nimport ClassAccordionEntry from \"./portal_work_inbox_accordion.js\";\nimport PortalWorkInboxTaskWindow from \"./portal_work_inbox_taskWindow.js\";\n\nclass PortalWorkInbox extends ClassUI {\n   constructor() {\n      super();\n\n      this.id = \"portal_work_inbox\";\n      // {string}\n      // the webix.id of this UI element\n\n      this.entries = [];\n      // {array}\n      // the list of User Forms this user is able to process.\n\n      this.processLookupHash = {\n         /* ABProcess.id : \"Process Label\" */\n      };\n\n      this.appLookupHash = {\n         /* ABProcess.id : \"ABApplication.id\" */\n      };\n\n      this.appAccordionLists = {};\n      // {hash}  { app.id : {accordionItemDefinition} }\n   }\n\n   ui() {\n      var L = (...params) => {\n         return this.label(...params);\n      };\n\n      return {\n         id: this.id,\n         view: \"window\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark inbox_drawer\",\n            cols: [\n               { width: 7 },\n               {\n                  view: \"label\",\n                  label: L(\"Inbox\"),\n               },\n               {\n                  view: \"button\",\n                  autowidth: true,\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     $$(this.id).hide();\n                  },\n                  on: {\n                     onAfterRender() {\n                        ClassUI.CYPRESS_REF(this);\n                     },\n                  },\n               },\n            ],\n         },\n         position: function (state) {\n            state.left = state.maxWidth - 350; // fixed values\n            state.top = 0;\n            state.width = 350; // relative values\n            state.height = state.maxHeight;\n         },\n         body: {\n            cells: [\n               {\n                  id: \"inboxItems\",\n                  view: \"scrollview\",\n                  scroll: \"y\",\n                  body: {\n                     view: \"accordion\",\n                     id: \"inbox_accordion\",\n                     css: {\n                        background: \"#dadee0 !important\",\n                     },\n                     multi: true,\n                     rows: [],\n                  },\n               },\n               {\n                  id: \"emptyInbox\",\n                  view: \"layout\",\n                  hidden: true,\n                  css: {\n                     background: \"#dadee0 !important\",\n                  },\n                  rows: [\n                     {},\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: 200,\n                        label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-thumbs-up'></div>\",\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: L(\"No tasks...you're all caught up.\"),\n                     },\n                     {},\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   init(AB) {\n      this.AB = AB;\n\n      //  Load the { items, meta } data structure before continuing with\n      // the rest of the init process.\n      this.AB.Network.get({ url: \"/config/inbox\" }).then((inboxConfig) => {\n         this.AB.Config.configInbox(inboxConfig);\n\n         this.initDelayed(AB);\n      });\n   }\n\n   initDelayed(AB) {\n      webix.ui(this.ui());\n\n      this.allAppAccordions = {};\n      // {hash}  { ABApplication.id : ClassAccordionEntry }\n      // A lookup of all our ClassAccordionEntry(s) by their app.id\n\n      //\n      // Prepare our Hashes:\n      //\n      this.lang = this.AB.Account.language();\n      (this.AB.Config.inboxMetaConfig() || []).forEach((app) => {\n         this.createAccordian(app);\n      });\n\n      this.entries = this.AB.Config.inboxConfig() || [];\n\n      this.entries.forEach((i) => this.addItem(i));\n\n      var allInits = [];\n\n      for (var index in this.appAccordionLists) {\n         const processes = this.getProcessList(index);\n\n         const accordion = this.allAppAccordions[index]\n            ? this.allAppAccordions[index].unitList()\n            : null;\n         if (accordion) {\n            const init = async () => {\n               await this.allAppAccordions[index].init(this.AB);\n               accordion.parse(processes);\n               accordion.show();\n            };\n            allInits.push(init());\n         } else {\n            this.AB.notify.developer(\n               new Error(\n                  `could not find an inbox-accordion for index[${index}]`\n               ),\n               {\n                  context: \"portal_work_inbox:init(): config error\",\n                  inboxMeta: this.AB.Config.inboxMetaConfig(),\n                  inbox: this.entries,\n               }\n            );\n         }\n      }\n\n      return Promise.all(allInits).then(() => {\n         this.emit(\"updated\");\n\n         this.AB.on(\"ab.inbox.create\", async (item) => {\n            const alreadyThere = this.entries.find((e) => e.uuid == item.uuid);\n            if (!alreadyThere) {\n               this.entries.push(item);\n               // If we can't find the app's accordion in the list then add it\n               const createNew = !this.appLookupHash[item.definition];\n               if (createNew) {\n                  const [app] = await this.AB.Network.post({\n                     url: \"/process/inbox/meta\",\n                     data: { ids: [item.definition] },\n                  });\n                  this.createAccordian(app);\n               }\n               const appId = this.appLookupHash[item.definition];\n               const accordion = this.allAppAccordions[appId];\n               this.addItem(item);\n\n               if (createNew) await accordion.init(this.AB);\n\n               const unitList = accordion.unitList();\n               unitList.parse(this.appAccordionLists[appId][item.definition]);\n               unitList.show();\n               unitList.refresh();\n\n               accordion.show();\n            }\n            this.emit(\"updated\");\n         });\n\n         this.AB.on(\"ab.inbox.update\", (item) => {\n            const appId = this.appLookupHash[item.definition];\n            const accordion = this.allAppAccordions[appId];\n\n            accordion.AB.Network.emit(\"inbox.update\", {\n               uuid: item.uuid,\n               unitID: item.definition,\n            });\n         });\n\n         // Now Register for RT Updates to our Inbox\n         this.AB.Network.post(\n            {\n               url: `/process/inbox/register`,\n            },\n            {\n               key: \"inbox.register\",\n               context: {},\n            }\n         );\n      });\n   }\n\n   createAccordian(app) {\n      if (!app) return;\n\n      // convert config info with current language labels\n      this.translate(app, this.lang);\n\n      const appAccordion = new ClassAccordionEntry(app);\n      $$(\"inbox_accordion\").addView(appAccordion.ui());\n      this.allAppAccordions[app.id] = appAccordion;\n      appAccordion.on(\"showTasks\", (...params) => {\n         // showTasks\n         // indicates when the user has selected a group of Accordian Tasks\n         // to process.\n         PortalWorkInboxTaskWindow.showTasks(...params);\n      });\n\n      appAccordion.on(\"item.processed\", (uuid) => {\n         // item.processed\n         // indicates when the specified form has been updated on the server.\n         PortalWorkInboxTaskWindow.clearTask(uuid);\n         this.entries = this.entries.filter((e) => e.uuid != uuid);\n         if (this.entries.length == 0) {\n            $$(\"emptyInbox\").show();\n         }\n         this.emit(\"updated\");\n      });\n\n      (app.processes || []).forEach((p) => {\n         this.translate(p, this.lang);\n         this.processLookupHash[p.id] = p.label;\n         this.appLookupHash[p.id] = app.id;\n      });\n\n      return appAccordion;\n   }\n\n   getProcessList(index) {\n      const processes = [];\n      for (const process in this.appAccordionLists[index]) {\n         processes.push(this.appAccordionLists[index][process]);\n      }\n      return processes;\n   }\n\n   addItem(item) {\n      // item {obj}  inbox configuration item\n      //    .definition {uuid} the process.id that generated this form\n      //    .name {string} the Name of this form\n      //\n      item.uniteLabel =\n         \"{\" + item.definition + \"}\" + this.processLookupHash[item.definition];\n      // create our own .uniteLabel\n      // this is used within the accordion.unitlist to group the data.\n\n      // find the application.id for this form\n      var appId = this.appLookupHash[item.definition];\n\n      // make sure we have an appAccordionLists[appID] entry\n      if (!this.appAccordionLists[appId]) this.appAccordionLists[appId] = {};\n      if (!this.appAccordionLists[appId][item.definition]) {\n         this.appAccordionLists[appId][item.definition] = {\n            id: item.definition,\n            name: item.name,\n            uniteLabel: item.uniteLabel,\n            items: [],\n         };\n      }\n\n      // add this as one of our items\n      this.appAccordionLists[appId][item.definition].items.push(item);\n   }\n\n   show() {\n      if (this.entries.length == 0) {\n         $$(\"emptyInbox\").show();\n      } else {\n         $$(\"inboxItems\").show();\n      }\n      $$(this.id).show();\n\n      for (const appId in this.allAppAccordions) {\n         this.allAppAccordions[appId]?.show();\n      }\n   }\n\n   /**\n    * @method translate()\n    * given an object with a .translations property, we will fill out\n    * the translations for the given language.\n    * @param {obj} obj\n    * @param {string} lang\n    *        the language_code of the translations to use.\n    */\n   translate(obj, lang) {\n      if (obj?.translations) {\n         var entry = obj.translations.find((t) => t.language_code == lang);\n         if (!entry) {\n            entry = obj.translations[0];\n         }\n         if (entry) {\n            Object.keys(entry).forEach((k) => {\n               if (k != \"language_code\") {\n                  obj[k] = entry[k];\n               }\n            });\n         }\n      }\n   }\n\n   count() {\n      return this.entries.length;\n   }\n}\n\nexport default new PortalWorkInbox();\n","import ClassUI from \"./ClassUI.js\";\n\nclass PortalWorkUserProfileWindow extends ClassUI {\n   constructor() {\n      super(\"portal_work_user_profile_window\", {\n         imageUser: \"\",\n         uploaderImage: \"\",\n         formUserInfo: \"\",\n\n         dataEmail: \"\",\n         editModeEmail: \"\",\n         buttonEditModeEmail: \"\",\n         editModeButtonsEmail: \"\",\n\n         dataLanguage: \"\",\n         editModeLanguage: \"\",\n         buttonEditModeLanguage: \"\",\n         editModeButtonsLanguage: \"\",\n\n         formNewPassword: \"\",\n         fieldNewPassword: \"\",\n         systemNotification: \"\",\n         advanceOptions: \"\",\n      });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const L = (...params) => {\n         return this.label(...params);\n      };\n\n      // [fix] preventing console 404 errors when user doesn't have an Account Image:\n      let acctImageID = this.AB.Account.imageID();\n      let imgTemplate = `<img src=\"file/${acctImageID}\" onerror=\"this.style.display='none'; document.getElementById('errorImage').style.display = 'block';\" width=\"150\" height=\"150\" style=\"border-radius: 50%; margin: 10px auto; display: block; border: 3px solid white;\" />`;\n      let imgErrorDiv = `<div id=\"errorImage\" style=\"display: none; width: 150px; height: 150px; background: #dee2e6; border-radius: 50%; margin: 10px auto; border: 3px solid white;\"><i class=\"fa fa-user\" style=\"font-size: 118px; color: white; margin: 15px 0 0 32px;\"></i></div>`;\n\n      if (acctImageID) {\n         imgTemplate = `${imgTemplate}${imgErrorDiv}`; // show both in case value is invalid\n      } else {\n         imgTemplate = imgErrorDiv.replace(\"none;\", \"block;\"); // show the Div\n      }\n\n      return {\n         id: ids.component,\n         view: \"window\",\n         position: \"center\",\n         modal: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               { width: 7 },\n               {\n                  view: \"label\",\n                  label: L(\"User Profile\"),\n               },\n               {\n                  view: \"button\",\n                  autowidth: true,\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  on: {\n                     onItemClick() {\n                        $$(ids.component).hide();\n                     },\n                     onAfterRender() {\n                        ClassUI.CYPRESS_REF(this);\n                     },\n                  },\n               },\n            ],\n         },\n         // body: {\n         // view: \"scrollview\",\n         // minHeight: 455,\n         body: {\n            view: \"layout\",\n            width: 460,\n            rows: [\n               {\n                  rows: [\n                     {\n                        id: ids.imageUser,\n                        view: \"template\",\n                        autoheight: true,\n                        borderless: true,\n                        css: {\n                           background: \"#222f3e\",\n                        },\n                        // width: 160,\n                        template: imgTemplate,\n                     },\n                     {\n                        css: {\n                           position: \"absolute\",\n                           top: \"185px\",\n                        },\n                        cols: [\n                           {},\n                           {\n                              id: ids.uploaderImage,\n                              view: \"uploader\",\n                              type: \"icon\",\n                              width: 34,\n                              height: 32,\n                              zIndex: 999,\n                              icon: \"fa fa-upload\",\n                              algin: \"center\",\n                              inputName: \"file\",\n                              apiOnly: true,\n                              multiple: false,\n                              accept:\n                                 \"image/png, image/gif, image/jpeg, image/bmp\",\n                              // Image field\n                              upload: `/file/upload/${\n                                 this.AB.objectUser().id\n                              }/6383ce19-b344-44ee-87e6-decced7361f8/1`,\n                              on: {\n                                 // when upload is complete:\n                                 onFileUpload: async (item, response) => {\n                                    const imageID = response.data.uuid;\n\n                                    const $uploaderImage = $$(\n                                       ids.uploaderImage\n                                    );\n                                    const $imageUser = $$(ids.imageUser);\n\n                                    $uploaderImage.disable();\n\n                                    // await this.AB.Network.put({\n                                    //    url: `/app_builder/model/${\n                                    //       this.AB.objectUser().id\n                                    //    }/${this.AB.Account.uuid()}`,\n                                    //    data: {\n                                    //       image_id: response.data.uuid,\n                                    //    },\n                                    // });\n                                    await this.AB.objectUser()\n                                       .model()\n                                       .update(this.AB.Account.uuid(), {\n                                          image_id: response.data.uuid,\n                                       });\n\n                                    this.AB.Account._config.image_id = imageID;\n\n                                    $imageUser.setHTML(\n                                       `<img src=\"file/${this.AB.Account.imageID()}\" onerror=\"this.style.display='none'; document.getElementById('errorImage').style.display = 'block';\" width=\"150\" height=\"150\" style=\"border-radius: 50%; margin: 10px auto; display: block; border: 3px solid white;\" /><div id=\"errorImage\" style=\"display: none; width: 150px; height: 150px; background: #dee2e6; border-radius: 50%; margin: 10px auto; border: 3px solid white;\"><i class=\"fa fa-user\" style=\"font-size: 118px; color: white; margin: 15px 0 0 32px;\"></i></div>`\n                                    );\n                                    $uploaderImage.enable();\n                                 },\n\n                                 // if an error was returned\n                                 onFileUploadError: (item, response) => {\n                                    const error = new Error(response);\n\n                                    const $uploaderImage = $$(\n                                       ids.uploaderImage\n                                    );\n\n                                    $uploaderImage.enable();\n\n                                    this.AB.notify.developer(error, {\n                                       context: \"Error uploading file\",\n                                    });\n                                    webix.alert(error);\n                                 },\n                              },\n                           },\n                           {},\n                        ],\n                     },\n                     {\n                        id: ids.formUserInfo,\n                        view: \"form\",\n                        width: 460,\n                        height: 160,\n                        borderless: true,\n                        css: {\n                           position: \"relative\",\n                           top: \"15px\",\n                        },\n                        elements: [\n                           {\n                              css: {\n                                 \"border-bottom\": \"1px solid #dee2e6\",\n                                 \"margin-top\": \"0 !important\",\n                              },\n                              cols: [\n                                 {\n                                    view: \"label\",\n                                    width: 160,\n                                    // align: \"right\",\n                                    label: L(\"Tenant\"),\n                                 },\n                                 {\n                                    view: \"label\",\n                                    name: \"tenant\",\n                                    value: \"\",\n                                    css: \"formText\",\n                                 },\n                              ],\n                           },\n                           {\n                              css: {\n                                 \"border-bottom\": \"1px solid #dee2e6\",\n                                 \"margin-top\": \"0 !important\",\n                              },\n                              cols: [\n                                 {\n                                    view: \"label\",\n                                    width: 160,\n                                    // align: \"right\",\n                                    label: L(\"Username\"),\n                                 },\n                                 {\n                                    view: \"label\",\n                                    name: \"username\",\n                                    value: \"\",\n                                    css: \"formText\",\n                                 },\n                              ],\n                           },\n                           {\n                              css: {\n                                 \"border-bottom\": \"1px solid #dee2e6\",\n                                 \"margin-top\": \"0 !important\",\n                              },\n                              cols: [\n                                 {\n                                    view: \"label\",\n                                    width: 160,\n                                    // align: \"right\",\n                                    label: L(\"Email\"),\n                                 },\n                                 {\n                                    id: ids.dataEmail,\n                                    view: \"label\",\n                                    name: \"email\",\n                                    value: \"\",\n                                    css: \"formText\",\n                                 },\n                                 {\n                                    id: ids.editModeEmail,\n                                    view: \"text\",\n                                    hidden: true,\n                                    value: \"\",\n                                 },\n                                 {\n                                    id: ids.buttonEditModeEmail,\n                                    view: \"button\",\n                                    type: \"icon\",\n                                    icon: \"wxi-pencil\",\n                                    width: 40,\n                                    inputWidth: 40,\n                                    on: {\n                                       onItemClick: () => {\n                                          const $dataEmail = $$(ids.dataEmail);\n                                          const $editModeEmail = $$(\n                                             ids.editModeEmail\n                                          );\n                                          const $buttonEditModeEmail = $$(\n                                             ids.buttonEditModeEmail\n                                          );\n                                          const $editModeButtonsEmail = $$(\n                                             ids.editModeButtonsEmail\n                                          );\n\n                                          $editModeEmail.setValue(\n                                             this.AB.Account.email()\n                                          );\n\n                                          $dataEmail.hide();\n                                          $buttonEditModeEmail.hide();\n\n                                          $editModeEmail.show();\n                                          $editModeButtonsEmail.show();\n                                       },\n                                    },\n                                 },\n                                 {\n                                    id: ids.editModeButtonsEmail,\n                                    hidden: true,\n                                    cols: [\n                                       {\n                                          view: \"button\",\n                                          type: \"icon\",\n                                          icon: \"wxi-close\",\n                                          width: 40,\n                                          inputWidth: 40,\n                                          css: \"webix_danger\",\n                                          on: {\n                                             onItemClick: () => {\n                                                const $dataEmail = $$(\n                                                   ids.dataEmail\n                                                );\n                                                const $editModeEmail = $$(\n                                                   ids.editModeEmail\n                                                );\n                                                const $buttonEditModeEmail = $$(\n                                                   ids.buttonEditModeEmail\n                                                );\n                                                const $editModeButtonsEmail =\n                                                   $$(ids.editModeButtonsEmail);\n\n                                                $editModeEmail.hide();\n                                                $editModeButtonsEmail.hide();\n\n                                                $dataEmail.show();\n                                                $buttonEditModeEmail.show();\n                                             },\n                                          },\n                                       },\n                                       {\n                                          view: \"button\",\n                                          type: \"icon\",\n                                          icon: \"wxi-check\",\n                                          width: 40,\n                                          inputWidth: 40,\n                                          css: \"webix_primary\",\n                                          on: {\n                                             onItemClick: async () => {\n                                                const $dataEmail = $$(\n                                                   ids.dataEmail\n                                                );\n                                                const $editModeEmail = $$(\n                                                   ids.editModeEmail\n                                                );\n                                                const $buttonEditModeEmail = $$(\n                                                   ids.buttonEditModeEmail\n                                                );\n                                                const $editModeButtonsEmail =\n                                                   $$(ids.editModeButtonsEmail);\n\n                                                $editModeEmail.hide();\n                                                $editModeButtonsEmail.hide();\n\n                                                $dataEmail.show();\n                                                $buttonEditModeEmail.show();\n\n                                                try {\n                                                   const email =\n                                                      $editModeEmail.getValue();\n\n                                                   $buttonEditModeEmail.disable();\n\n                                                   // await this.AB.Network.put({\n                                                   //    url: `/app_builder/model/${\n                                                   //       this.AB.objectUser().id\n                                                   //    }/${this.AB.Account.uuid()}`,\n                                                   //    data: {\n                                                   //       email,\n                                                   //    },\n                                                   // });\n                                                   await this.AB.objectUser()\n                                                      .model()\n                                                      .update(\n                                                         this.AB.Account.uuid(),\n                                                         { email }\n                                                      );\n\n                                                   this.AB.Account._config.email =\n                                                      email;\n                                                } catch (error) {\n                                                   this.AB.notify.developer(\n                                                      error,\n                                                      {\n                                                         context:\n                                                            \"error updating user profile email\",\n                                                      }\n                                                   );\n                                                } finally {\n                                                   $dataEmail.setValue(\n                                                      this.AB.Account.email()\n                                                   );\n                                                   $buttonEditModeEmail.enable();\n                                                }\n                                             },\n                                          },\n                                       },\n                                    ],\n                                 },\n                              ],\n                           },\n                           {\n                              css: {\n                                 \"margin-top\": \"0 !important\",\n                              },\n                              cols: [\n                                 {\n                                    view: \"label\",\n                                    width: 160,\n                                    // align: \"right\",\n                                    label: L(\"Language\"),\n                                 },\n                                 {\n                                    id: ids.dataLanguage,\n                                    view: \"label\",\n                                    name: \"language\",\n                                    value: \"\",\n                                    css: \"formText\",\n                                 },\n                                 {\n                                    id: ids.editModeLanguage,\n                                    view: \"combo\",\n                                    hidden: true,\n                                    value: null,\n                                    options: [],\n                                 },\n                                 {\n                                    id: ids.buttonEditModeLanguage,\n                                    view: \"button\",\n                                    type: \"icon\",\n                                    icon: \"wxi-pencil\",\n                                    width: 40,\n                                    inputWidth: 40,\n                                    on: {\n                                       onItemClick: async () => {\n                                          const $dataLanguage = $$(\n                                             ids.dataLanguage\n                                          );\n                                          const $editModeLanguage = $$(\n                                             ids.editModeLanguage\n                                          );\n                                          const $buttonEditModeLanguage = $$(\n                                             ids.buttonEditModeLanguage\n                                          );\n                                          const $editModeButtonsLanguage = $$(\n                                             ids.editModeButtonsLanguage\n                                          );\n\n                                          $buttonEditModeLanguage.disable();\n\n                                          $editModeLanguage.define(\n                                             \"options\",\n                                             await this.getLanguages()\n                                          );\n                                          $editModeLanguage.refresh();\n                                          $editModeLanguage.setValue(\n                                             this.AB.Account.language()\n                                          );\n\n                                          $dataLanguage.hide();\n                                          $buttonEditModeLanguage.hide();\n\n                                          $editModeLanguage.show();\n                                          $editModeButtonsLanguage.show();\n                                       },\n                                    },\n                                 },\n                                 {\n                                    id: ids.editModeButtonsLanguage,\n                                    hidden: true,\n                                    cols: [\n                                       {\n                                          view: \"button\",\n                                          type: \"icon\",\n                                          icon: \"wxi-close\",\n                                          width: 40,\n                                          inputWidth: 40,\n                                          css: \"webix_danger\",\n                                          on: {\n                                             onItemClick: async () => {\n                                                const $dataLanguage = $$(\n                                                   ids.dataLanguage\n                                                );\n                                                const $editModeLanguage = $$(\n                                                   ids.editModeLanguage\n                                                );\n                                                const $buttonEditModeLanguage =\n                                                   $$(\n                                                      ids.buttonEditModeLanguage\n                                                   );\n                                                const $editModeButtonsLanguage =\n                                                   $$(\n                                                      ids.editModeButtonsLanguage\n                                                   );\n\n                                                $editModeLanguage.hide();\n                                                $editModeButtonsLanguage.hide();\n\n                                                $dataLanguage.show();\n                                                $buttonEditModeLanguage.show();\n\n                                                try {\n                                                   $dataLanguage.setValue(\n                                                      await this.languageCodeToWord(\n                                                         this.AB.Account.language()\n                                                      )\n                                                   );\n                                                } catch (error) {\n                                                   $dataLanguage.setValue(null);\n                                                   this.AB.notify.developer(\n                                                      error,\n                                                      {\n                                                         context:\n                                                            \"portal_work_user_profile_window: Error updating language\",\n                                                      }\n                                                   );\n                                                } finally {\n                                                   $buttonEditModeLanguage.enable();\n                                                }\n                                             },\n                                          },\n                                       },\n                                       {\n                                          view: \"button\",\n                                          type: \"icon\",\n                                          icon: \"wxi-check\",\n                                          width: 40,\n                                          inputWidth: 40,\n                                          css: \"webix_primary\",\n                                          on: {\n                                             onItemClick: async () => {\n                                                const $dataLanguage = $$(\n                                                   ids.dataLanguage\n                                                );\n                                                const $editModeLanguage = $$(\n                                                   ids.editModeLanguage\n                                                );\n                                                const $buttonEditModeLanguage =\n                                                   $$(\n                                                      ids.buttonEditModeLanguage\n                                                   );\n                                                const $editModeButtonsLanguage =\n                                                   $$(\n                                                      ids.editModeButtonsLanguage\n                                                   );\n\n                                                $editModeLanguage.hide();\n                                                $editModeButtonsLanguage.hide();\n\n                                                $dataLanguage.show();\n                                                $buttonEditModeLanguage.show();\n\n                                                try {\n                                                   const languageCode =\n                                                      $editModeLanguage.getValue();\n\n                                                   // await this.AB.Network.put({\n                                                   //    url: `/app_builder/model/${\n                                                   //       this.AB.objectUser().id\n                                                   //    }/${this.AB.Account.uuid()}`,\n                                                   //    data: {\n                                                   //       languageCode,\n                                                   //    },\n                                                   // });\n                                                   await this.AB.objectUser()\n                                                      .model()\n                                                      .update(\n                                                         this.AB.Account.uuid(),\n                                                         { languageCode }\n                                                      );\n\n                                                   this.AB.Account._config.languageCode =\n                                                      languageCode;\n                                                } catch (error) {\n                                                   this.AB.notify.developer(\n                                                      error,\n                                                      {\n                                                         context:\n                                                            \"portal_work_user_profile_window: Error updating language Code\",\n                                                      }\n                                                   );\n                                                } finally {\n                                                   try {\n                                                      $dataLanguage.setValue(\n                                                         await this.languageCodeToWord(\n                                                            this.AB.Account.language()\n                                                         )\n                                                      );\n                                                   } catch (error) {\n                                                      $dataLanguage.setValue(\n                                                         null\n                                                      );\n\n                                                      this.AB.notify.developer(\n                                                         error,\n                                                         {\n                                                            context:\n                                                               \"portal_work_user_profile_window: Error updating languageCodeToWord()\",\n                                                         }\n                                                      );\n                                                   }\n\n                                                   $buttonEditModeLanguage.enable();\n                                                }\n                                             },\n                                          },\n                                       },\n                                    ],\n                                 },\n                              ],\n                           },\n                        ],\n                     },\n                  ],\n               },\n               {\n                  rows: [\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"wxi-angle-down\",\n                        height: 40,\n                        css: \"webix_primary\",\n                        label: L(\"Advanced Options\"),\n                        on: {\n                           onItemClick: (id) => {\n                              const $button = $$(id);\n                              const $advanceOptions = $$(ids.advanceOptions);\n\n                              if ($advanceOptions.isVisible()) {\n                                 $button.define(\"icon\", \"wxi-angle-down\");\n                                 $button.refresh();\n                                 $advanceOptions.hide();\n                              } else {\n                                 $button.define(\"icon\", \"wxi-angle-up\");\n                                 $button.refresh();\n                                 $advanceOptions.show();\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.advanceOptions,\n                        hidden: true,\n                        rows: [\n                           {\n                              view: \"form\",\n                              width: 460,\n                              borderless: true,\n                              elements: [\n                                 {\n                                    cols: [\n                                       {\n                                          rows: [\n                                             {\n                                                height: 3,\n                                             },\n                                             {\n                                                view: \"label\",\n                                                width: 160,\n                                                // align: \"right\",\n                                                label: L(\"New Password\"),\n                                             },\n                                             {},\n                                          ],\n                                       },\n                                       {\n                                          id: ids.formNewPassword,\n                                          view: \"form\",\n                                          borderless: true,\n                                          width: 260,\n                                          padding: 0,\n                                          elements: [\n                                             {\n                                                id: ids.fieldNewPassword,\n                                                view: \"text\",\n                                                name: \"newPassword\",\n                                                type: \"password\",\n                                                placeholder: L(\n                                                   \"Enter a new Password (at least 8)\"\n                                                ),\n                                                value: \"\",\n                                                validate: (value) => {\n                                                   return value.length >= 8;\n                                                },\n                                             },\n                                             {\n                                                view: \"text\",\n                                                name: \"confirmPassword\",\n                                                type: \"password\",\n                                                placeholder:\n                                                   L(\"Confirm Password\"),\n                                                value: \"\",\n                                                validate: (value) => {\n                                                   const $fieldNewPassword = $$(\n                                                      ids.fieldNewPassword\n                                                   );\n\n                                                   return (\n                                                      value ===\n                                                      $fieldNewPassword.getValue()\n                                                   );\n                                                },\n                                             },\n                                             {\n                                                view: \"button\",\n                                                type: \"form\",\n                                                value: \"Save\",\n                                                align: \"right\",\n                                                height: 32,\n                                                width: 75,\n                                                inputWidth: 75,\n                                                css: \"webix_primary\",\n                                                on: {\n                                                   onItemClick: async (id) => {\n                                                      const $formNewPassword =\n                                                         $$(\n                                                            ids.formNewPassword\n                                                         );\n                                                      const $thisButton =\n                                                         $$(id);\n\n                                                      if (\n                                                         $formNewPassword.validate()\n                                                      ) {\n                                                         try {\n                                                            const $fieldNewPassword =\n                                                               $$(\n                                                                  ids.fieldNewPassword\n                                                               );\n                                                            const password =\n                                                               $fieldNewPassword.getValue();\n\n                                                            $thisButton.disable();\n                                                            $formNewPassword.disable();\n\n                                                            await this.AB.Network.post(\n                                                               {\n                                                                  url: \"/auth/password/reset\",\n                                                                  data: {\n                                                                     password,\n                                                                  },\n                                                               },\n                                                               {\n                                                                  key: \"portal_auth_password_reset\",\n                                                                  context: {},\n                                                               }\n                                                            );\n                                                         } catch (error) {\n                                                            this.AB.notify.developer(\n                                                               error,\n                                                               {\n                                                                  context:\n                                                                     \"portal_work_user_profile_window:Error resetting password\",\n                                                               }\n                                                            );\n                                                         } finally {\n                                                            $formNewPassword.clear();\n                                                            $formNewPassword.enable();\n                                                            $thisButton.enable();\n                                                         }\n                                                         webix.alert(\n                                                            \"The new password is successfully updated!\"\n                                                         );\n                                                      }\n                                                   },\n                                                },\n                                             },\n                                          ],\n                                       },\n                                    ],\n                                 },\n                                 {\n                                    css: {\n                                       \"border-top\": \"1px solid #dee2e6\",\n                                    },\n                                    cols: [\n                                       {\n                                          view: \"label\",\n                                          width: 160,\n                                          // align: \"right\",\n                                          label: L(\"System Notification\"),\n                                       },\n                                       {\n                                          id: ids.systemNotification,\n                                          view: \"checkbox\",\n                                          borderless: true,\n                                          width: 27,\n                                          css: {\n                                             \"text-align\": \"center !important\",\n                                             padding: \"0 10px\",\n                                          },\n                                          value: 0,\n                                          on: {\n                                             onItemClick: async () => {\n                                                const $systemNotification = $$(\n                                                   ids.systemNotification\n                                                );\n\n                                                try {\n                                                   const sendEmailNotifications =\n                                                      $systemNotification.getValue();\n                                                   // await this.AB.Network.put({\n                                                   //    url: `/app_builder/model/${\n                                                   //       this.AB.objectUser().id\n                                                   //    }/${this.AB.Account.uuid()}`,\n                                                   //    data: {\n                                                   //       sendEmailNotifications,\n                                                   //    },\n                                                   // });\n\n                                                   await this.AB.objectUser()\n                                                      .model()\n                                                      .update(\n                                                         this.AB.Account.uuid(),\n                                                         {\n                                                            sendEmailNotifications,\n                                                         }\n                                                      );\n\n                                                   this.AB.Account._config.sendEmailNotifications =\n                                                      sendEmailNotifications;\n                                                } catch (error) {\n                                                   this.AB.notify.developer(\n                                                      error,\n                                                      {\n                                                         context:\n                                                            \"portal_work_user_profile_window:Error updating email notifications\",\n                                                      }\n                                                   );\n                                                } finally {\n                                                   $systemNotification.setValue(\n                                                      this.AB.Account.sendEmailNotifications()\n                                                   );\n                                                }\n                                             },\n                                          },\n                                       },\n                                    ],\n                                 },\n                              ],\n                           },\n                        ],\n                     },\n                  ],\n               },\n            ],\n         },\n         // },\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n\n      webix.ui(this.ui());\n   }\n\n   async languageCodeToWord(code) {\n      if (typeof code !== \"string\")\n         throw new Error('The argrument \"code\" should be a string');\n\n      const languages = await this.getLanguages();\n      for (let i = 0; i < languages.length; i++)\n         if (languages[i].id === code) return languages[i].value;\n\n      return null;\n   }\n\n   async getLanguages() {\n      const data = [];\n\n      try {\n         const Language = this.AB.objectLanguage();\n         const response = await Language.model().findAll();\n         for (let i = 0; i < response.data.length; i++)\n            data.push({\n               id: response.data[i].language_code,\n               value: response.data[i].language_label,\n            });\n      } catch (error) {\n         this.AB.notify.developer(error, {\n            context: \"Error getting Languages\",\n         });\n      }\n\n      return data;\n   }\n\n   async populate() {\n      const ids = this.ids;\n\n      const $formUserInfo = $$(ids.formUserInfo);\n      const $systemNotification = $$(ids.systemNotification);\n\n      const populateLanguage = async () => {\n         const $dataLanguage = $$(ids.dataLanguage);\n         const $buttonEditModeLanguage = $$(ids.buttonEditModeLanguage);\n\n         $buttonEditModeLanguage.disable();\n\n         try {\n            $dataLanguage.setValue(\n               await this.languageCodeToWord(this.AB.Account.language())\n            );\n         } catch (error) {\n            $dataLanguage.setValue(null);\n\n            this.AB.notify.developer(error, {\n               context: \"Error setting Languages\",\n            });\n         }\n\n         $buttonEditModeLanguage.enable();\n      };\n\n      populateLanguage();\n      $formUserInfo.setValues({\n         tenant: this.AB.Tenant.id(),\n         username: this.AB.Account.username(),\n         email: this.AB.Account.email(),\n      });\n      $systemNotification.setValue(this.AB.Account.sendEmailNotifications());\n   }\n\n   hide() {\n      const ids = this.ids;\n\n      const $component = $$(ids.component);\n\n      $component.hide();\n   }\n\n   show() {\n      const ids = this.ids;\n\n      const $component = $$(ids.component);\n\n      $component.show();\n\n      this.populate();\n   }\n}\n\nexport default new PortalWorkUserProfileWindow();\n","import ClassUI from \"./ClassUI.js\";\n\nvar myClass = null;\n// Singleton.\n// This UI gets imported several times so let's not recreate the class each time.\n\nif (!myClass) {\n   myClass = class PortalWorkUserSwitcheroo extends ClassUI {\n      constructor() {\n         super(\"portal_work_user_switcheroo\", {\n            userIcon: \"\",\n            userName: \"\",\n            switchBack: \"\",\n            switchBackReplacer: \"\",\n            list: \"\",\n         });\n      }\n\n      ui() {\n         var L = (...params) => {\n            return this.label(...params);\n         };\n         const ids = this.ids;\n         return {\n            id: ids.component,\n            view: \"window\",\n            position: \"center\",\n            hidden: true,\n            close: true,\n            modal: true,\n            css: \"switcheroo\",\n            head: L(\"Switcheroo\"),\n            body: {\n               padding: 10,\n               rows: [\n                  {\n                     height: 30,\n                     cols: [\n                        {\n                           id: ids.userIcon,\n                           view: \"label\",\n                           align: \"center\",\n                           width: 44,\n                        },\n                        {\n                           id: ids.userName,\n                           view: \"label\",\n                           align: \"center\",\n                        },\n                        {\n                           id: ids.switchBack,\n                           view: \"button\",\n                           value: '<div style=\"text-align: center; font-size: 12px;\"><i class=\"fa-fw fa fa-times\"></i></div>',\n                           align: \"center\",\n                           css: \"webix_transparent\",\n                           width: 44,\n                           on: {\n                              onItemClick: () => {\n                                 this.switchUser();\n                                 this.hide();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.switchBackReplacer,\n                           width: 44,\n                        },\n                     ],\n                  },\n                  {\n                     view: \"label\",\n                     label: L(\"View site as:\"),\n                     align: \"left\",\n                  },\n                  {\n                     id: ids.list,\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"button\",\n                           value: L(\"Switch\"),\n                           css: \"webix_primary\",\n                           on: {\n                              onItemClick: () => {\n                                 const userID = $$(ids.list).getValue();\n\n                                 if (!userID) {\n                                    webix.message(L(\"Please select a user.\"));\n\n                                    return;\n                                 }\n\n                                 this.switchUser(userID);\n                                 this.hide();\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      init(AB, headless = false) {\n         this.AB = AB;\n         if (!headless) {\n            webix.ui(this.ui());\n            this.populate();\n         }\n\n         return Promise.resolve();\n      }\n\n      hide() {\n         $$(this.ids.component).hide();\n      }\n\n      show() {\n         $$(this.ids.component).show();\n      }\n\n      // const clearPopupUserMenu = () => {\n      //   $$(\"switcheroo_list\").setValue(\"\");\n      //   $$(\"switcheroo\").hide();\n      //   $$(\"userMenu_list\").unselectAll();\n      //   $$(\"userMenu_list\").show();\n      // };\n\n      async switcherooClear() {\n         return this.switchUser(null);\n      }\n\n      async switchUser(userID) {\n         const user = (this.AB.Account.userList() || []).find(\n            (e) => e.uuid === userID\n         );\n\n         // Save to a switched user.\n         if (!user || !userID) {\n            // if no user, then remove our current Switcheroo assignment\n            /* let response = */ await this.AB.Network.delete({\n               url: `/auth/switcheroo`,\n               // data: {},\n            });\n         } else {\n            /* let response = */ await this.AB.Network.post({\n               url: `/auth/switcheroo/${user.uuid}`,\n               // data: {},\n            });\n         }\n\n         window.location.reload(true);\n      }\n\n      populate() {\n         const ids = this.ids;\n\n         const mainUserID = this.AB.Account.uuid();\n         const userList = (this.AB.Account.userList() || [])\n            .filter((e) => e.uuid !== mainUserID)\n            .map((u) => {\n               return { id: u.uuid, value: u.username };\n            });\n\n         let switchedUserID = null;\n         if (this.AB.Account.isSwitcherood()) {\n            switchedUserID = mainUserID;\n         }\n         webix.ui(\n            {\n               id: ids.list,\n               view: \"combo\",\n               options: {\n                  body: {\n                     template: (obj) => {\n                        if (obj.id === switchedUserID)\n                           return `<i class='fa-fw fa fa-user-secret'></i> ${obj.value}`;\n                        return obj.value;\n                     },\n                  },\n                  data: userList,\n               },\n               on: {\n                  onItemClick: (id) => {\n                     $$(id).setValue(\"\");\n                  },\n               },\n            },\n            $$(ids.list)\n         );\n         $$(ids.userName).setValue(this.AB.Account.username());\n\n         if (this.AB.Account.isSwitcherood()) {\n            $$(ids.userIcon).setValue(\n               \"<i class='fa-fw fa fa-user-secret'></i>\"\n            );\n            $$(ids.switchBackReplacer)?.hide();\n            $$(ids.switchBack)?.show();\n            return;\n         }\n\n         $$(ids.userIcon).setValue(\"<i class='fa-fw fa fa-user'></i>\");\n         $$(ids.switchBack).hide();\n         $$(ids.switchBackReplacer).show();\n      }\n   };\n}\nexport default new myClass();\n","import ClassUI from \"./ClassUI.js\";\n\nclass PortalWorkUserQRWindow extends ClassUI {\n   constructor() {\n      super();\n      this.id = \"portal_work_user_qr_window\";\n      this.idTaskMultiview = \"taskMultiview\";\n      this.idTaskTitle = \"taskTitle\";\n      this.idTaskPager = \"taskPager\";\n      this.classQrImageDom = \"qr-code-image-dom\";\n   }\n\n   ui() {\n      var L = (...params) => {\n         return this.label(...params);\n      };\n      return {\n         id: this.id,\n         view: \"window\",\n         position: function (state) {\n            state.left = state.maxWidth / 2 - 600 / 2; // fixed values\n            state.top = state.maxHeight / 2 - (state.maxHeight * 0.7) / 2;\n            state.width = 500; // relative values\n            state.height = 400;\n         },\n         modal: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               { width: 17 },\n               {\n                  id: this.idTaskTitle,\n                  view: \"label\",\n                  label: L(\"Connect Mobile App\"),\n               },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  css: \"webix_transparent\",\n                  width: 40,\n                  icon: \"fa fa-repeat\",\n                  click: () => {\n                     $$(\"qr-code-image\").refresh();\n                  },\n                  on: {\n                     onAfterRender() {\n                        ClassUI.CYPRESS_REF(this, \"qr_image_reload\");\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  css: \"webix_transparent\",\n                  width: 40,\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     $$(this.id).hide();\n                  },\n                  on: {\n                     onAfterRender() {\n                        ClassUI.CYPRESS_REF(this, \"qr_window_close\");\n                     },\n                  },\n               },\n            ],\n         },\n         body: {\n            css: { \"text-align\": \"center\" },\n            rows: [\n               { height: 10 },\n               {\n                  borderless: true,\n                  template: `<span style=\"font-size:14px;font-weight:500;\">${L(\n                     \"Use your phone's camera app to scan this QR code, and it will open a webpage to the conneXted mobile app. You only need to scan the code for the first time.\"\n                  )}</span>`,\n               },\n               {\n                  id: \"qr-code-image\",\n                  borderless: true,\n                  autoheight: true,\n                  autowidth: true,\n                  template:\n                     `<img src='/relay/user-qr' class='${this.classQrImageDom}' style='margin: 10px auto 20px;display:block;' />`,\n                  on: {\n                     onAfterRender: () => {\n                        const $img = $$(\"qr-code-image\").$view.getElementsByClassName(this.classQrImageDom)[0];\n                        $img.onload = () => {\n                           $$(\"qr-code-image\").adjust();\n                        };\n                     }\n                  }\n               },\n\n               {\n                  borderless: true,\n                  template: `<div style=\"font-size:14px;font-weight:500;font-weight:500;\">${L(\n                     \"This code can only be used once. It will expire after 7 days.\"\n                  )}</div>`,\n               },\n            ],\n         },\n      };\n   }\n\n   init(AB) {\n      this.AB = AB;\n      webix.ui(this.ui());\n\n      return Promise.resolve();\n   }\n\n   hide() {\n      $$(this.id).hide();\n   }\n\n   show() {\n      $$(this.id).show();\n   }\n}\n\nexport default new PortalWorkUserQRWindow();\n","import ClassUI from \"./ClassUI.js\";\n\nclass PortalWorkUserMobileQR extends ClassUI {\n   constructor() {\n      super(\"portal_work_user_qr_window\", {\n         // taskMultiview:\"\",\n         description: \"\",\n         instructions: \"\",\n         title: \"\",\n         qrcode: \"\",\n         taskPager: \"\",\n      });\n   }\n\n   ui() {\n      var L = (...params) => {\n         return this.label(...params);\n      };\n      const ids = this.ids;\n      return {\n         id: ids.component,\n         view: \"window\",\n         position: function (state) {\n            state.left = state.maxWidth / 2 - 600 / 2; // fixed values\n            state.top = state.maxHeight / 2 - (state.maxHeight * 0.7) / 2;\n            state.width = 500; // relative values\n            state.height = 400;\n         },\n         modal: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               { width: 17 },\n               {\n                  id: ids.title,\n                  view: \"label\",\n                  label: L(\"Connect Mobile App\"),\n               },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  css: \"webix_transparent\",\n                  width: 40,\n                  icon: \"fa fa-repeat\",\n                  click: () => {\n                     $$(\"qr-code-image\").refresh();\n                  },\n                  on: {\n                     onAfterRender() {\n                        ClassUI.CYPRESS_REF(this, \"qr_image_reload\");\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  css: \"webix_transparent\",\n                  width: 40,\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     $$(ids.component).hide();\n                  },\n                  on: {\n                     onAfterRender() {\n                        ClassUI.CYPRESS_REF(this, \"qr_window_close\");\n                     },\n                  },\n               },\n            ],\n         },\n         body: {\n            css: { \"text-align\": \"center\" },\n            rows: [\n               { height: 10 },\n               {\n                  id: ids.description,\n                  borderless: true,\n                  template: `<span style=\"font-size:14px;font-weight:500;\">The App's Description should go here.</span>`,\n               },\n               {\n                  id: ids.instructions,\n                  borderless: true,\n                  template: `<span style=\"font-size:14px;font-weight:500;\">${L(\n                     \"Use your phone's camera app to scan this QR code, and it will open a webpage to the {0} mobile app. You only need to scan the code for the first time.\"\n                  )}</span>`,\n               },\n               {\n                  id: ids.qrcode,\n                  height: 175,\n                  borderless: true,\n                  // autoheight: true,\n                  autowidth: true,\n                  template:\n                     \"<img src='/relay/user-qr' style='margin: 10px auto 20px;display:block;' />\",\n               },\n\n               {},\n               // {\n               //    borderless: true,\n               //    template: `<div style=\"font-size:14px;font-weight:500;font-weight:500;\">${L(\n               //       \"This code can only be used once. It will expire after 7 days.\"\n               //    )}</div>`,\n               // },\n            ],\n         },\n      };\n   }\n\n   init(AB) {\n      this.AB = AB;\n      webix.ui(this.ui());\n\n      return Promise.resolve();\n   }\n\n   load(App) {\n      var L = (...params) => {\n         return this.label(...params);\n      };\n\n      // change Title\n      let $title = $$(this.ids.title);\n      $title.define(\"label\", App.label);\n      $title.refresh();\n\n      // Change Description\n      let $desc = $$(this.ids.description);\n      $desc.define(\n         \"template\",\n         `<span style=\"font-size:14px;font-weight:500;\">${App.description}</span>`\n      );\n      $desc.refresh();\n\n      let $instr = $$(this.ids.instructions);\n      $instr.define(\n         \"template\",\n         `<span style=\"font-size:14px;font-weight:500;\">${L(\n            \"Use your phone's camera app to scan this QR code, and it will open a webpage to the {0} mobile app. You only need to scan the code for the first time.\",\n            [App.label]\n         )}</span>`\n      );\n\n      // Change QR Image\n      let $qrcode = $$(this.ids.qrcode);\n      $qrcode.define(\n         \"template\",\n         `<img src='/mobile/qr/${App.id}' style='margin: 10px auto 20px;display:block;' />`\n      );\n      $qrcode.refresh();\n\n      $$(this.ids.component)?.refresh?.();\n   }\n\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   show() {\n      $$(this.ids.component).show();\n   }\n}\n\nexport default new PortalWorkUserMobileQR();\n","import ClassUI from \"./ClassUI.js\";\n\nclass PortalAccessLevelManager extends ClassUI {\n   constructor() {\n      super();\n      this.accessLevels = [\n         {\n            id: \"0\",\n            value: \"No Access\",\n         },\n         {\n            id: \"1\",\n            value: \"Read Only\",\n         },\n         {\n            id: \"2\",\n            value: \"Full Access\",\n         },\n      ];\n   }\n\n   ui() {\n      const accessLevelManagerBody = {\n         view: \"scrollview\",\n         css: \"lightgray ab_amp\",\n         body: {\n            rows: [\n               {\n                  view: \"accordion\",\n                  id: \"amp_accordion\",\n                  roles: [],\n                  hidden: true,\n                  collapsed: true,\n                  css: \"webix_dark\",\n                  rows: [],\n               },\n               {\n                  id: \"amp_accordion_noSelection\",\n                  rows: [\n                     {},\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: 200,\n                        label:\n                           \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-unlock-alt'></div>\",\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: \"Add a role to control access.\",\n                     },\n                     {\n                        cols: [\n                           {},\n                           {\n                              view: \"button\",\n                              label: \"Add Role\",\n                              type: \"form\",\n                              css: \"webix_primary\",\n                              autowidth: true,\n                              click: () => {\n                                 webix.ui(newRolePopup).show();\n\n                                 const roles = this.roles.filter((role) => {\n                                    return (\n                                       $$(\"amp_accordion\").config.roles.indexOf(\n                                          role.id\n                                       ) == -1\n                                    );\n                                 });\n\n                                 $$(\"role_popup_options\").define(\n                                    \"options\",\n                                    roles\n                                 );\n                                 $$(\"role_popup_options\").refresh();\n                              },\n                           },\n                           {},\n                        ],\n                     },\n                     {},\n                  ],\n               },\n            ],\n         },\n      };\n\n      const newRolePopup = {\n         view: \"popup\",\n         id: \"role_popup\",\n         position: \"center\",\n         height: 250,\n         width: 350,\n         modal: true,\n         body: {\n            rows: [\n               {\n                  view: \"toolbar\",\n                  id: \"myToolbarABLiveTool\",\n                  css: \"webix_dark\",\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: \"Add Role\",\n                        align: \"center\",\n                     },\n                  ],\n               },\n               {\n                  view: \"form\",\n                  elements: [\n                     /* We are not managing users yet so take this out\n                                    {\n                                      view: \"text\",\n                                      label: \"Create new\",\n                                      labelWidth: 90\n                                    },\n                                    {\n                                      view: \"label\",\n                                      label: \"- or -\",\n                                      align: \"center\"\n                                    },*/\n                     {\n                        view: \"combo\",\n                        label: \"\",\n                        id: \"role_popup_options\",\n                        placeholder: \"Choose role\",\n                        options: [],\n                     },\n                     {\n                        cols: [\n                           {\n                              view: \"button\",\n                              value: \"Cancel\",\n                              click: () => {\n                                 $$(\"role_popup\").hide();\n                              },\n                           },\n                           {\n                              view: \"button\",\n                              value: \"Add\",\n                              id: \"role_popup_options_add\",\n                              css: \"webix_primary\",\n                              click: () => {\n                                 const role = $$(\n                                    \"role_popup_options\"\n                                 ).getValue();\n                                 if ($$(`amp_accordionitem_${role}`)) {\n                                    $$(`amp_accordionitem_${role}`).show();\n                                    $$(\"amp_accordion\").config.roles.push(role);\n                                 } else {\n                                    this.buildAccessAccordion(role);\n                                 }\n                                 $$(\"role_popup\").hide();\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n\n      return {\n         view: \"window\",\n         css: \"ampWindow\",\n         id: \"access_manager\",\n         position: function (state) {\n            state.left = state.maxWidth - 350; // fixed values\n            state.top = 0;\n            state.width = 350; // relative values\n            state.height = state.maxHeight;\n         },\n         on: {\n            onShow: () => {\n               // collapse all the accordion items but the top one\n               var index = 0;\n               $$(\"amp_accordion\")\n                  .getChildViews()\n                  .forEach((a) => {\n                     if (index == 0) {\n                        $$(a).expand();\n                     } else {\n                        $$(a).collapse();\n                     }\n                     index++;\n                     $$(\"amp_accordion\").show();\n                     $$(\"amp_accordion_noSelection\").hide();\n                  });\n            },\n         },\n         //modal: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  width: 15,\n               },\n               {\n                  view: \"label\",\n                  label: \"Access Manager\",\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  label: \"Add Role\",\n                  width: 100,\n                  css: \"webix_primary\",\n                  click: () => {\n                     webix.ui(newRolePopup).show();\n\n                     var roles = this.roles.filter((role) => {\n                        return (\n                           $$(\"amp_accordion\").config.roles.indexOf(role.id) ==\n                           -1\n                        );\n                     });\n\n                     $$(\"role_popup_options\").define(\"options\", roles);\n                     $$(\"role_popup_options\").refresh();\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: accessLevelManagerBody,\n      };\n   }\n\n   init(portal) {\n      this.AB = portal.AB;\n      this.portal = portal;\n      this.appId = portal.AppState.lastSelectedApp;\n\n      const languageCode = this.AB.Config.userConfig().languageCode;\n      this.roles = this.AB.Config.metaConfig().roles.map((role) => {\n         const translation = role.translations.filter(\n            (t) => t.code == languageCode\n         );\n         const name = translation.length == 1 ? translation[0].name : role.name;\n         return { id: role.id, value: name };\n      });\n\n      webix.ui(this.ui());\n\n      // buld the tree views for already defined role access levels\n      const application = this.AB.applicationByID(this.appId);\n      if (application.isAccessManaged) {\n         // Build the access level tree for Roles\n         const existingRoles = [];\n         application.pages().forEach((page) => {\n            Object.keys(page.accessLevels).forEach((role) => {\n               if (existingRoles.indexOf(role) == -1) {\n                  existingRoles.push(role);\n               }\n            });\n         });\n         existingRoles.forEach((role) => {\n            this.buildAccessAccordion(role);\n         });\n      }\n   }\n\n   show() {\n      $$(\"access_manager\").show();\n   }\n\n   hide() {\n      $$(\"access_manager\").hide();\n   }\n\n   showPage(viewId, pageId, parent) {\n      parent.application = {};\n      parent.application.id = this.appId;\n      this.portal.showPage(parent);\n      const pageUI = this.portal.pageContainers[parent.id];\n      pageUI.showPage(pageId, viewId);\n   }\n\n   /*\n    * helper to get the current apps views\n    */\n   views(f) {\n      return this.AB.applicationByID(this.appId).views(f);\n   }\n\n   buildAccessAccordion(role) {\n      const L = this.AB.Label();\n      const application = this.AB.applicationByID(this.appId);\n      const isRoleAccessManager =\n         parseInt(application.accessManagers.useRole) == 1 &&\n         application.accessManagers.role.indexOf(role) > -1;\n      const manageUsers = {\n         rows: [\n            {\n               height: 10,\n            },\n            {\n               cols: [\n                  {\n                     width: 10,\n                  },\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash\",\n                     css: \"webix_danger_inverse\",\n                     label: \"Remove\",\n                     click: async () => {\n                        const confirmation = await webix.confirm(\n                           \"Remove role from app?\"\n                        );\n                        if (confirmation) {\n                           const tree = $$(`linetree_${role}`);\n                           const mainPages = this.AB.applicationByID(\n                              this.appId\n                           ).pages();\n                           await mainPages.forEach(async (page) => {\n                              const branch = tree.getItem(page.id);\n                              branch.access = \"0\";\n                              await page.updateAccessLevels(\n                                 tree.config.role,\n                                 \"0\"\n                              );\n                              tree.updateItem(page.id, branch);\n                           });\n\n                           $$(`amp_accordionitem_${role}`).hide();\n                           const itemToRemove = $$(\n                              \"amp_accordion\"\n                           ).config.roles.indexOf(role);\n                           if (itemToRemove > -1) {\n                              $$(\"amp_accordion\").config.roles.splice(\n                                 itemToRemove,\n                                 1\n                              );\n                           }\n                        }\n                     },\n                  },\n                  {\n                     width: 10,\n                  },\n               ],\n            },\n            {\n               height: 10,\n            },\n         ],\n      };\n\n      $$(\"amp_accordion\").config.roles.push(role);\n\n      const toggleParent = (element) => {\n         if (!element.parent) return false;\n         var parentElem = element.parent;\n         if (!parentElem.parent) return false;\n         parentElem.parent.emit(\"changeTab\", parentElem.id);\n         toggleParent(parentElem.parent);\n      };\n\n      const getParent = (id, component) => {\n         let item = $$(component).getItem(id);\n         if (item.$parent == 0) return item;\n         else return getParent(item.$parent, component);\n      };\n\n      const tree = {\n         id: `linetree_${role}`,\n         view: \"edittree\",\n         type: \"lineTree\",\n         editable: true,\n         role: role,\n         editor: \"combo\",\n         editValue: \"access\",\n         threeState: true,\n         template: (obj, common) => {\n            const treeOptions = $$(`linetree_${role}`).config.options;\n            const option = treeOptions.find((o) => o.id === obj.access);\n            let color, icon;\n            switch (option.id) {\n               case \"1\":\n                  color = \"#FFAB00\";\n                  icon = \"eye\";\n                  break;\n               case \"2\":\n                  color = \"#00C853\";\n                  icon = \"pencil\";\n                  break;\n               default:\n                  // Case \"0\"\n                  color = \"#ff4938\";\n                  icon = \"lock\";\n            }\n\n            return `<span class=\"accessLevel\">\n                     <span class=\"fa-stack\">\n                        <i style=\"color: ${color};\" class=\"fa fa-circle fa-stack-2x\"></i>\n                        <i class=\"fa fa-${icon} fa-stack-1x fa-inverse\"></i>\n                     </span>\n                     ${common.icon(obj, common)}\n                     <span>${obj.label}</span>\n                     <i class=\"externalLink fa fa-external-link\"></i>\n                  </span>`;\n         },\n         options: this.accessLevels,\n         data: this.getAccessLevelTree(role),\n         onClick: {\n            externalLink: (event, branch, target) => {\n               const item = $$(`linetree_${role}`).getItem(branch);\n               const parent = getParent(branch, `linetree_${role}`);\n               if (item.type == \"tab\") {\n                  this.showPage(branch, item.pageId, parent);\n\n                  const tabView = this.views((v) => v.id == item.id)[0];\n                  if (!tabView) return false;\n\n                  const tab = tabView.parent;\n                  if (!tab) return false;\n\n                  toggleParent(tab);\n                  if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n                     const showIt = setInterval(() => {\n                        if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                           clearInterval(showIt);\n                        }\n                        tab.emit(\"changeTab\", tabView.id);\n                     }, 200);\n                  }\n               }\n               // switch page\n               else {\n                  this.showPage(branch, item.id, parent);\n               }\n\n               return false;\n            },\n         },\n         on: {\n            onAfterEditStop: async (state, editor, ignoreUpdate) => {\n               if (state.old == state.value) return false;\n               const tree = $$(`linetree_${role}`);\n               const view = this.views((v) => {\n                  return v.id == editor.id;\n               })[0];\n               await view.updateAccessLevels(tree.config.role, state.value);\n               console.log(\n                  `Role: ${tree.config.role} set to Access Level: ${state.value} on view: ${view.id}`\n               );\n            },\n            onDataUpdate: async (id, data, old) => {\n               const tree = $$(`linetree_${role}`);\n               if (data.access == \"0\") {\n                  // NOTE: Need to update \"No Access\" option here because It does not trigger `onAfterEditStop` event\n                  const view = this.views((v) => v.id == id)[0];\n                  await view.updateAccessLevels(tree.config.role, data.access);\n\n                  tree.blockEvent();\n                  await tree.data.eachSubItem(id, async (child) => {\n                     const childData = tree.getItem(child.id);\n                     if (childData.access != data.access) {\n                        childData.access = data.access;\n                        const view = this.views((v) => {\n                           return v.id == child.id;\n                        })[0];\n                        await view.updateAccessLevels(\n                           tree.config.role,\n                           data.access\n                        );\n                        console.log(\n                           `Role: ${tree.config.role} set to Access Level: ${data.access} on view: ${view.id}`\n                        );\n                        tree.updateItem(child.id, childData);\n                     }\n                  });\n                  tree.unblockEvent();\n               } else {\n                  const parentBranch = tree.getParentId(id);\n                  const parentData = tree.getItem(parentBranch);\n                  if (parentData) {\n                     if (parentData.access == \"0\") {\n                        parentData.access = \"1\";\n                        const view = this.views((v) => {\n                           return v.id == parentBranch;\n                        })[0];\n                        await view.updateAccessLevels(\n                           tree.config.role,\n                           parentData.access\n                        );\n\n                        console.log(\n                           `Role: ${tree.config.role} set to Access Level: ${parentData.access} on view: ${view.id}`\n                        );\n                        tree.updateItem(parentBranch, parentData);\n                     }\n                  }\n               }\n            },\n         },\n      };\n\n      const newAccordionItem = {\n         view: \"accordionitem\",\n         id: `amp_accordionitem_${role}`,\n         header: () => {\n            return `${\n               this.roles?.find((r) => {\n                  return r.id === role;\n               })?.value ?? role\n            } ${\n               isRoleAccessManager\n                  ? `<span class=\"header\" webix_tooltip=\"${L(\n                       \"This role has been assigned as a Page Access Manager for this App. This means they have full access. Please remove the permissions from the App's Setting page if you would like to manage their access here.\"\n                    )}\">${this.WARNING_ICON}</span>`\n                  : \"\"\n            }`;\n         },\n         collapsed: true,\n         body: {\n            type: \"clean\",\n            rows: [tree, manageUsers],\n         },\n      };\n\n      $$(\"amp_accordion\").addView(newAccordionItem, -1);\n      $$(\"amp_accordion\").show();\n      $$(\"amp_accordion_noSelection\").hide();\n\n      if (isRoleAccessManager)\n         this.AB.Webix.TooltipControl.addTooltip(\n            $$(`amp_accordionitem_${role}`).$view\n         );\n\n      $$(`linetree_${role}`).openAll();\n   }\n\n   getAccessLevelTree(role) {\n      const tree = new webix.TreeCollection();\n\n      const addPage = (page, index, parentId, type) => {\n         // add to tree collection\n         const accessLevel = page.accessLevels[role] ?? \"0\";\n         const branch = {\n            id: page.id,\n            access: accessLevel,\n            label: page.label,\n            pageId: parentId,\n            type: type,\n         };\n         tree.add(branch, index, parentId);\n\n         // stop at detail views\n         if (page.defaults.key == \"detail\") {\n            return;\n         }\n\n         const subPages = page.pages ? page.pages() : [];\n         subPages.forEach((childPage, childIndex) => {\n            addPage(childPage, childIndex, page.id, \"page\");\n         });\n\n         // add tabs\n         page\n            .views((view) => view.defaults.key == \"tab\")\n            .forEach((tab, tabIndex) => {\n               // tab views\n               tab.views().forEach((tabView, tabViewIndex) => {\n                  // tab items will be below sub-page items\n                  const tIndex = subPages.length + tabIndex + tabViewIndex;\n                  addPage(tabView, tIndex, page.id, \"tab\");\n               });\n            });\n      };\n      this.AB.applicationByID(this.appId)\n         .pages()\n         .forEach((p, index) => {\n            addPage(p, index, null, \"page\");\n         });\n\n      return tree;\n   }\n}\n\nexport default new PortalAccessLevelManager();\n","import ClassUI from \"./ClassUI.js\";\n\nclass PortalTranslationTool extends ClassUI {\n   constructor() {\n      super();\n      this.containerDomID = \"domID\";\n   }\n\n   ui() {\n      const translationToolBody = {\n         view: \"scrollview\",\n         css: \"lightgray ab_amp\",\n         body: {\n            rows: [\n               {\n                  view: \"accordion\",\n                  id: `qtt_accordion_${this.containerDomID}`,\n                  roles: [],\n                  hidden: true,\n                  collapsed: true,\n                  css: \"webix_dark\",\n                  rows: [],\n               },\n               {\n                  id: `qtt_accordion_noSelection_${this.containerDomID}`,\n                  rows: [{}],\n               },\n            ],\n         },\n      };\n\n      return {\n         view: \"window\",\n         css: \"qttWindow\",\n         id: `quickTranslationTool_${this.containerDomID}`,\n         position: function (state) {\n            state.left = state.maxWidth - 400; // fixed values\n            state.top = 0;\n            state.width = 400; // relative values\n            state.height = state.maxHeight;\n         },\n         on: {\n            onShow: () => {\n               // collapse all the accordion items but the top one\n               var index = 0;\n               $$(`qtt_accordion_${this.containerDomID}`)\n                  .getChildViews()\n                  .forEach((a) => {\n                     if (index == 0) {\n                        $$(a).expand();\n                     } else {\n                        $$(a).collapse();\n                     }\n                     index++;\n                     $$(`qtt_accordion_${this.containerDomID}`).show();\n                     $$(\n                        `qtt_accordion_noSelection_${this.containerDomID}`\n                     ).hide();\n                  });\n            },\n         },\n         head: {\n            rows: [\n               {\n                  view: \"toolbar\",\n                  css: \"webix_dark\",\n                  cols: [\n                     {\n                        width: 15,\n                     },\n                     {\n                        view: \"label\",\n                        label: \"Translation Tool\",\n                        autowidth: true,\n                     },\n                     {},\n                     {\n                        view: \"button\",\n                        width: 38,\n                        css: \"webix_transparent\",\n                        icon: \"fa fa-cog\",\n                        type: \"iconTop\",\n                        click: function () {\n                           if ($$(\"translationSettings\").config.hidden) {\n                              $$(\"translationSettings\").show();\n                           } else {\n                              $$(\"translationSettings\").hide();\n                           }\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        width: 35,\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        icon: \"nomargin fa fa-times\",\n                        click: () => {\n                           $$(\n                              `quickTranslationTool_${this.containerDomID}`\n                           ).hide();\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"toolbar\",\n                  id: \"translationSettings\",\n                  hidden: true,\n                  css: \"webix_dark\",\n                  rows: [\n                     {\n                        id: `qtt_accordion_${this.containerDomID}_translateTo`,\n                        view: \"select\",\n                        labelWidth: 120,\n                        label: \"Translate to:\",\n                        labelAlign: \"right\",\n                        options: [],\n                        on: {\n                           onChange: (newVal, oldVal) => {\n                              if (newVal != oldVal) {\n                                 this.buildTranslationAccordion(\n                                    this.application.objectsIncluded(),\n                                    this.application.pages(),\n                                    this.application.hintsIncluded()\n                                 );\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: `qtt_accordion_${this.containerDomID}_translateHint`,\n                        view: \"select\",\n                        labelWidth: 120,\n                        label: \"Hint language:\",\n                        bottomLabel: \"*Hover over label to display hint\",\n                        labelAlign: \"right\",\n                        options: [],\n                        on: {\n                           onChange: (newVal, oldVal) => {\n                              if (newVal != oldVal) {\n                                 this.buildTranslationAccordion(\n                                    this.application.objectsIncluded(),\n                                    this.application.pages(),\n                                    this.application.hintsIncluded()\n                                 );\n                              }\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         body: translationToolBody,\n      };\n   }\n\n   init(portal) {\n      this.AB = portal.AB;\n      this.portal = portal;\n      this.appId = portal.AppState.lastSelectedApp;\n      this.application = this.AB.applicationByID(this.appId);\n\n      const languageCode = this.AB.Config.userConfig().languageCode;\n\n      let languageList = [];\n\n      try {\n         this.AB.Network.get({\n            // The object \"SITE_LANGUAGE\"\n            url: \"/app_builder/model/d84cd351-d96c-490f-9afb-2a0b880ca0ec\",\n         }).then((list) => {\n            list.data.forEach((item) => {\n               languageList.push({\n                  id: item.language_code,\n                  value: item.language_label,\n               });\n            });\n            $$(`qtt_accordion_${this.containerDomID}_translateTo`).define({\n               options: languageList,\n               value: languageCode,\n            });\n            $$(`qtt_accordion_${this.containerDomID}_translateTo`).refresh();\n            $$(\n               `qtt_accordion_${this.containerDomID}` + \"_translateHint\"\n            ).define({\n               options: languageList,\n               value: languageList[0].id,\n            });\n            $$(\n               `qtt_accordion_${this.containerDomID}` + \"_translateHint\"\n            ).refresh();\n            this.buildTranslationAccordion(\n               this.application.objectsIncluded(),\n               this.application.pages(),\n               this.application.hintsIncluded()\n            );\n         });\n\n         webix.ready(function () {\n            webix.protoUI(\n               {\n                  name: \"edittree\",\n               },\n               webix.EditAbility,\n               webix.ui.tree\n            );\n         });\n\n         webix.ui(this.ui());\n      } catch (error) {\n         console.error(error);\n      }\n   }\n\n   show() {\n      $$(`quickTranslationTool_${this.containerDomID}`).show();\n   }\n\n   hide() {\n      $$(`quickTranslationTool_${this.containerDomID}`).hide();\n   }\n\n   showPage(pageId) {\n      let page = this.application.views((v) => {\n         return v.id == pageId;\n      })[0];\n\n      this.portal.showPage(page);\n   }\n\n   /*\n    * helper to get the current apps views\n    */\n   views(f) {\n      return this.AB.applicationByID(this.appId).views(f);\n   }\n\n   tutorials(f) {\n      return this.AB.applicationByID(this.appId).hints(f);\n   }\n\n   buildTranslationAccordion(objects, views, tutorials) {\n      $$(`qtt_accordion_${this.containerDomID}`).removeView(\n         `qtt_accordionitem_${this.containerDomID}_objects`\n      );\n      $$(`qtt_accordion_${this.containerDomID}`).removeView(\n         `qtt_accordionitem_${this.containerDomID}_views`\n      );\n      $$(`qtt_accordion_${this.containerDomID}`).removeView(\n         `qtt_accordionitem_${this.containerDomID}_tutorials`\n      );\n\n      var toggleParent = (element) => {\n         if (!element.parent) return false;\n         var parentElem = element.parent;\n         if (!parentElem.parent) return false;\n         parentElem.parent.emit(\"changeTab\", parentElem.id);\n         toggleParent(parentElem.parent);\n      };\n\n      var objectTree = [\n         {\n            id: `qtt_object_progress${this.containerDomID}`,\n            height: 7,\n         },\n         {\n            id: `linetree_${this.containerDomID}_objects`,\n            view: \"edittree\",\n            type: \"lineTree\",\n            editable: true,\n            tooltip: \"#hint#\",\n            // role: role,\n            editor: \"text\",\n            editValue: \"value\",\n            template: (obj, common) => {\n               let language = $$(\n                  `qtt_accordion_${this.containerDomID}_translateTo`\n               ).getValue();\n               var color = \"gray\";\n               if (obj.value.indexOf(`[${language}]`) > -1) {\n                  color = \"#ff5c4c\";\n               }\n               if (!obj.icon) {\n                  obj.icon = \"minus\";\n               }\n               var icon = `<span class=\"fa-stack\" style=\"margin: 0 5px 0 4px;\">\n                                             <i style=\"color: ${color};\" class=\"fa fa-circle fa-stack-2x\"></i>\n                                             <i class=\"fa fa-${obj.icon} fa-stack-1x fa-inverse\"></i>\n                                          </span>`;\n               return (\n                  `<span>` +\n                  icon +\n                  common.icon(obj, common) +\n                  `<span>${obj.value}</span>`\n               );\n            },\n            data: [],\n            on: {\n               onAfterLoad: (id) => {\n                  if (\n                     !$$(`qtt_object_progress${this.containerDomID}`)\n                        .showProgress\n                  ) {\n                     webix.extend(\n                        $$(`qtt_object_progress${this.containerDomID}`),\n                        webix.ProgressBar\n                     );\n                  }\n                  $$(`linetree_${this.containerDomID}_objects`).parse(\n                     this.getTranslationToolObjectsTree(\n                        objects,\n                        this.containerDomID\n                     )\n                  );\n                  $$(`linetree_${this.containerDomID}_objects`).openAll();\n               },\n               onAfterEditStop: (state, editor, ignoreUpdate) => {\n                  if (state.old == state.value) return false;\n                  let language = $$(\n                     `qtt_accordion_${this.containerDomID}_translateTo`\n                  ).getValue();\n                  let branch = $$(\n                     `linetree_${this.containerDomID}_objects`\n                  ).data.getItem(editor.id);\n                  let propName = branch.field;\n                  let objectId = branch.objectId ? branch.objectId : branch.id;\n                  let fieldId = branch.fieldId ? branch.fieldId : \"\";\n                  let obj = this.AB.objectByID(objectId);\n                  if (fieldId) {\n                     let field = obj.fields((item) => {\n                        return item.id == fieldId;\n                     })[0];\n                     if (branch.type == \"option\") {\n                        field.settings.options.forEach((option) => {\n                           if (option.id == branch.id) {\n                              if (obj.languageDefault() == language) {\n                                 hasLang = true;\n                                 option[propName] = state.value;\n                              } else {\n                                 option.translations.forEach((t) => {\n                                    if (t.language_code == language) {\n                                       hasLang = true;\n                                       t[propName] = state.value;\n                                    }\n                                 });\n                              }\n                              if (!hasLang) {\n                                 var trans = {};\n                                 trans.language_code = language;\n                                 trans[propName] = state.value;\n                                 option.translations.push(trans);\n                              }\n                              field.save();\n                           }\n                        });\n                     } else {\n                        var hasLang = false;\n                        if (obj.languageDefault() == language) {\n                           hasLang = true;\n                           field[propName] = state.value;\n                        } else {\n                           field.translations.forEach((t) => {\n                              if (t.language_code == language) {\n                                 hasLang = true;\n                                 t[propName] = state.value;\n                              }\n                           });\n                        }\n                        if (!hasLang) {\n                           var trans = {};\n                           trans.language_code = language;\n                           trans[propName] = state.value;\n                           field.translations.push(trans);\n                        }\n                        field.save();\n                     }\n                  } else {\n                     let hasLang = false;\n                     if (obj.languageDefault() == language) {\n                        hasLang = true;\n                        obj[propName] = state.value;\n                     } else {\n                        obj.translations.forEach((t) => {\n                           if (t.language_code == language) {\n                              hasLang = true;\n                              t[propName] = state.value;\n                           }\n                        });\n                     }\n                     if (!hasLang) {\n                        let trans = {};\n                        trans.language_code = language;\n                        trans[propName] = state.value;\n                        obj.translations.push(trans);\n                     }\n                     obj.save();\n                  }\n\n                  let progressBar = $$(\n                     `qtt_object_progress${this.containerDomID}`\n                  );\n                  let total = progressBar.config.total;\n                  let completed = progressBar.config.completed;\n\n                  if (\n                     state.old.indexOf(`[${language}]`) == -1 &&\n                     state.value.indexOf(`[${language}]`) > -1\n                  ) {\n                     completed--;\n                  } else if (\n                     state.old.indexOf(`[${language}]`) > -1 &&\n                     state.value.indexOf(`[${language}]`) > -1\n                  ) {\n                     // no change to completed count\n                  } else {\n                     completed++;\n                  }\n                  let position = completed / total + 0.00001;\n                  progressBar.define({\n                     total: total,\n                     completed: completed,\n                  });\n                  progressBar.showProgress({\n                     type: \"top\",\n                     position: position,\n                  });\n               },\n            },\n         },\n      ];\n\n      var viewTree = [\n         {\n            id: `qtt_view_progress${this.containerDomID}`,\n            height: 7,\n         },\n         {\n            id: `linetree_${this.containerDomID}_views`,\n            view: \"edittree\",\n            type: \"lineTree\",\n            editable: true,\n            tooltip: \"#hint#\",\n            // role: role,\n            editor: \"text\",\n            editValue: \"value\",\n            template: (obj, common) => {\n               let language = $$(\n                  `qtt_accordion_${this.containerDomID}_translateTo`\n               ).getValue();\n               var color = \"gray\";\n               if (obj.value.indexOf(`[${language}]`) > -1) {\n                  color = \"#ff5c4c\";\n               }\n               if (!obj.icon) {\n                  obj.icon = \"minus\";\n               }\n               var externalLink = \"\";\n               if ([\"button\", \"label\", \"menu\"].indexOf(obj.type) == -1) {\n                  externalLink = `<i style=\"float:right; color: lightgray\" class=\"externalLink fa fa-external-link\"></i>`;\n               }\n               var icon = `<span class=\"fa-stack\" style=\"margin: 0 5px 0 4px;\">\n                                             <i style=\"color: ${color};\" class=\"fa fa-circle fa-stack-2x\"></i>\n                                             <i class=\"fa fa-${obj.icon} fa-stack-1x fa-inverse\"></i>\n                                          </span>`;\n               return (\n                  `<span>` +\n                  icon +\n                  common.icon(obj, common) +\n                  `<span>${obj.value}</span>` +\n                  externalLink\n               );\n            },\n            data: [],\n            onClick: {\n               externalLink: (event, branch, target) => {\n                  var item = $$(\n                     `linetree_${this.containerDomID}_views`\n                  ).getItem(branch);\n\n                  this.showPage(item.pageId || item.viewId);\n\n                  if (item.type == \"tab\") {\n                     var tabView = this.application.views(\n                        (v) => v.id == item.id\n                     )[0];\n                     if (!tabView) return false;\n\n                     var tab = tabView.parent;\n                     if (!tab) return false;\n\n                     toggleParent(tab);\n                     if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n                        var showIt = setInterval(function () {\n                           if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                              clearInterval(showIt);\n                           }\n                           tab.emit(\"changeTab\", tabView.id);\n                        }, 200);\n                     }\n                  } else if (item.type == \"page\") {\n                     var pageView = this.application.views(\n                        (v) => v.id == item.id\n                     )[0];\n                     if (!pageView) return false;\n                     pageView.emit(\"changePage\", pageView.id);\n                     // this.showPage(item.pageId);\n                  }\n\n                  return false;\n               },\n            },\n            on: {\n               onAfterLoad: (id) => {\n                  if (\n                     !$$(`qtt_view_progress${this.containerDomID}`).showProgress\n                  ) {\n                     webix.extend(\n                        $$(`qtt_view_progress${this.containerDomID}`),\n                        webix.ProgressBar\n                     );\n                  }\n                  $$(`linetree_${this.containerDomID}_views`).parse(\n                     this.getTranslationToolViewsTree(\n                        views,\n                        this.containerDomID\n                     )\n                  );\n                  $$(`linetree_${this.containerDomID}_views`).openAll();\n               },\n               onAfterEditStop: (state, editor, ignoreUpdate) => {\n                  if (state.old == state.value) return false;\n                  let language = $$(\n                     `qtt_accordion_${this.containerDomID}_translateTo`\n                  ).getValue();\n                  let branch = $$(\n                     `linetree_${this.containerDomID}_views`\n                  ).data.getItem(editor.id);\n                  let propName = branch.field;\n                  if (branch.type == \"menu\") {\n                     let view = this.application.views((view) => {\n                        return view.id == branch.viewId;\n                     })[0];\n                     view.settings.order.forEach((button) => {\n                        if (button.pageId == branch.buttonId) {\n                           let hasLang = false;\n                           button.translations.forEach((t) => {\n                              if (t.language_code == language) {\n                                 hasLang = true;\n                                 t[propName] = state.value;\n                              }\n                           });\n                           if (!hasLang) {\n                              let trans = {};\n                              trans.language_code = language;\n                              trans[propName] = state.value;\n                              button.translations.push(trans);\n                           }\n                           view.save();\n                        }\n                     });\n                  } else if (branch.type == \"button\") {\n                     let view = this.application.views((view) => {\n                        return view.id == branch.viewId;\n                     })[0];\n                     var hasLang = false;\n\n                     if (view.languageDefault() == language) {\n                        hasLang = true;\n                        view.settings[propName] = state.value;\n                     } else {\n                        view.settings.translations.forEach((t) => {\n                           if (t.language_code == language) {\n                              hasLang = true;\n                              t[propName] = state.value;\n                           }\n                        });\n                     }\n                     if (!hasLang) {\n                        var trans = {};\n                        trans.language_code = language;\n                        trans[propName] = state.value;\n                        view.settings.translations.push(trans);\n                     }\n                     view.save();\n                  } else {\n                     let view = this.application.views((view) => {\n                        return view.id == branch.id;\n                     })[0];\n                     let hasLang = false;\n                     if (view.languageDefault() == language) {\n                        hasLang = true;\n                        view[propName] = state.value;\n                     } else {\n                        view.translations.forEach((t) => {\n                           if (t.language_code == language) {\n                              hasLang = true;\n                              t[propName] = state.value;\n                           }\n                        });\n                     }\n                     if (!hasLang) {\n                        let trans = {};\n                        trans.language_code = language;\n                        trans[propName] = state.value;\n                        view.translations.push(trans);\n                     }\n                     view.save();\n                  }\n                  let progressBar = $$(\n                     `qtt_view_progress${this.containerDomID}`\n                  );\n                  let total = progressBar.config.total;\n                  let completed = progressBar.config.completed;\n                  if (\n                     state.old.indexOf(`[${language}]`) == -1 &&\n                     state.value.indexOf(`[${language}]`) > -1\n                  ) {\n                     completed--;\n                  } else if (\n                     state.old.indexOf(`[${language}]`) > -1 &&\n                     state.value.indexOf(`[${language}]`) > -1\n                  ) {\n                     // no change to completed count\n                  } else {\n                     completed++;\n                  }\n                  let position = completed / total + 0.00001;\n                  progressBar.define({\n                     total: total,\n                     completed: completed,\n                  });\n                  progressBar.showProgress({\n                     type: \"top\",\n                     position: position,\n                  });\n               },\n            },\n         },\n      ];\n\n      var tutorialTree = [\n         {\n            id: `qtt_tutorials_progress${this.containerDomID}`,\n            height: 7,\n         },\n         {\n            id: `linetree_${this.containerDomID}_tutorials`,\n            view: \"edittree\",\n            type: \"lineTree\",\n            editable: true,\n            tooltip: \"#hint#\",\n            // role: role,\n            editor: \"text\",\n            editValue: \"value\",\n            template: (obj, common) => {\n               let language = $$(\n                  `qtt_accordion_${this.containerDomID}_translateTo`\n               ).getValue();\n               var color = \"gray\";\n               if (obj.value.indexOf(`[${language}]`) > -1) {\n                  color = \"#ff5c4c\";\n               }\n               if (!obj.icon) {\n                  obj.icon = \"minus\";\n               }\n               var icon = `<span class=\"fa-stack\" style=\"margin: 0 5px 0 4px;\">\n                                             <i style=\"color: ${color};\" class=\"fa fa-circle fa-stack-2x\"></i>\n                                             <i class=\"fa fa-${obj.icon} fa-stack-1x fa-inverse\"></i>\n                                          </span>`;\n               return (\n                  `<span>` +\n                  icon +\n                  common.icon(obj, common) +\n                  `<span>${obj.value}</span>`\n               );\n            },\n            data: [],\n            on: {\n               onAfterLoad: (id) => {\n                  if (\n                     !$$(`qtt_tutorials_progress${this.containerDomID}`)\n                        .showProgress\n                  ) {\n                     webix.extend(\n                        $$(`qtt_tutorials_progress${this.containerDomID}`),\n                        webix.ProgressBar\n                     );\n                  }\n                  $$(`linetree_${this.containerDomID}_tutorials`).parse(\n                     this.getTranslationToolTutorialsTree(\n                        tutorials,\n                        this.containerDomID\n                     )\n                  );\n                  $$(`linetree_${this.containerDomID}_tutorials`).openAll();\n               },\n               onAfterEditStop: (state, editor, ignoreUpdate) => {\n                  /// need to work here next week james\n                  if (state.old == state.value) return false;\n                  let language = $$(\n                     `qtt_accordion_${this.containerDomID}_translateTo`\n                  ).getValue();\n                  let branch = $$(\n                     `linetree_${this.containerDomID}_tutorials`\n                  ).data.getItem(editor.id);\n                  let propName = branch.field;\n                  if (branch.type == \"tutorial\") {\n                     let hint = this.AB.hints((h) => {\n                        return h.id == branch.viewId;\n                     })[0];\n                     let hasLang = false;\n                     if (hint.languageDefault() == language) {\n                        hasLang = true;\n                        hint[propName] = state.value;\n                     } else {\n                        hint.translations.forEach((t) => {\n                           if (t.language_code == language) {\n                              hasLang = true;\n                              t[propName] = state.value;\n                           }\n                        });\n                     }\n                     if (!hasLang) {\n                        let trans = {};\n                        for (const [key, value] of Object.entries(\n                           hint.translations[0]\n                        )) {\n                           trans[key] = `[${language}] ${value}`;\n                        }\n                        trans.language_code = language;\n                        trans[propName] = state.value;\n                        hint.translations.push(trans);\n                     }\n                     hint.save();\n                  } else if (branch.type == \"step\") {\n                     let hint = this.AB.hints((h) => {\n                        return h.id == branch.hintId;\n                     })[0];\n                     let step = hint._steps[branch.viewId];\n                     let hasLang = false;\n                     if (step.languageDefault() == language) {\n                        hasLang = true;\n                        step[propName] = state.value;\n                     } else {\n                        step.translations.forEach((t) => {\n                           if (t.language_code == language) {\n                              hasLang = true;\n                              t[propName] = state.value;\n                           }\n                        });\n                     }\n                     if (!hasLang) {\n                        let trans = {};\n                        for (const [key, value] of Object.entries(\n                           step.translations[0]\n                        )) {\n                           trans[key] = `[${language}] ${value}`;\n                        }\n                        trans.language_code = language;\n                        trans[propName] = state.value;\n                        step.translations.push(trans);\n                     }\n                     step.save();\n                  }\n                  let progressBar = $$(\n                     `qtt_tutorials_progress${this.containerDomID}`\n                  );\n                  let total = progressBar.config.total;\n                  let completed = progressBar.config.completed;\n                  if (\n                     state.old.indexOf(`[${language}]`) == -1 &&\n                     state.value.indexOf(`[${language}]`) > -1\n                  ) {\n                     completed--;\n                  } else if (\n                     state.old.indexOf(`[${language}]`) > -1 &&\n                     state.value.indexOf(`[${language}]`) > -1\n                  ) {\n                     // no change to completed count\n                  } else {\n                     completed++;\n                  }\n                  let position = completed / total + 0.00001;\n                  progressBar.define({\n                     total: total,\n                     completed: completed,\n                  });\n                  progressBar.showProgress({\n                     type: \"top\",\n                     position: position,\n                  });\n               },\n            },\n         },\n      ];\n\n      var objectsAccordionItem = {\n         view: \"accordionitem\",\n         id: `qtt_accordionitem_${this.containerDomID}_objects`,\n         header: \"Data Objects\",\n         collapsed: true,\n         body: {\n            type: \"clean\",\n            rows: objectTree,\n         },\n      };\n\n      var viewsAccordionItem = {\n         view: \"accordionitem\",\n         id: `qtt_accordionitem_${this.containerDomID}_views`,\n         header: \"Interface Items\",\n         collapsed: true,\n         body: {\n            type: \"clean\",\n            rows: viewTree,\n         },\n      };\n\n      var hintsAccordionItem = {\n         view: \"accordionitem\",\n         id: `qtt_accordionitem_${this.containerDomID}_tutorials`,\n         header: \"Tutorials\",\n         collapsed: true,\n         body: {\n            type: \"clean\",\n            rows: tutorialTree,\n         },\n      };\n\n      $$(`qtt_accordion_${this.containerDomID}`).addView(\n         objectsAccordionItem,\n         -1\n      );\n      $$(`qtt_accordion_${this.containerDomID}`).addView(\n         viewsAccordionItem,\n         -1\n      );\n      $$(`qtt_accordion_${this.containerDomID}`).addView(\n         hintsAccordionItem,\n         -1\n      );\n      $$(`qtt_accordion_${this.containerDomID}`).show();\n      $$(`qtt_accordionitem_${this.containerDomID}_views`).collapse();\n      $$(`qtt_accordionitem_${this.containerDomID}_tutorials`).collapse();\n      $$(`qtt_accordion_noSelection_${this.containerDomID}`).hide();\n\n      $$(`linetree_${this.containerDomID}_objects`).openAll();\n      $$(`linetree_${this.containerDomID}_views`).openAll();\n      $$(`linetree_${this.containerDomID}_tutorials`).openAll();\n   }\n\n   getTranslations(translations, domId, field, completed, total) {\n      var missingHint = false;\n      var missingTranslate = false;\n      var translateLang = $$(`qtt_accordion_${domId}_translateTo`).getValue();\n      var value = translations.filter((item) => {\n         return item.language_code == translateLang;\n      })[0];\n      if (!value) {\n         // we didn't find the language so we are defaulting to first language\n         missingTranslate = true;\n         value = translations[0];\n      }\n      var hintLang = $$(`qtt_accordion_${domId}_translateHint`).getValue();\n      var hint = translations.filter((item) => {\n         return item.language_code == hintLang;\n      })[0];\n      if (!hint) {\n         // we didn't find the language so we are defaulting to first language\n         missingHint = true;\n         hint = translations[0];\n      }\n\n      var hintLabel = \"\";\n      var valueLabel = \"\";\n\n      // some items store the text we need translated under \"text\"\n      if (field) {\n         hintLabel = hint[field];\n         valueLabel = value[field];\n      }\n      if (!hintLabel) {\n         hintLabel = hint.label;\n      }\n      if (!valueLabel) {\n         valueLabel = value.label;\n      }\n\n      var hintPrefix = \"\";\n      if (missingHint) {\n         hintPrefix = `[${hintLang}] `;\n      }\n      var translatePrefix = \"\";\n      if (missingTranslate) {\n         translatePrefix = `[${translateLang}] `;\n      }\n      if (\n         (valueLabel || \"\").indexOf(`[${translateLang}]`) == -1 &&\n         !missingTranslate\n      ) {\n         completed++;\n      }\n      total++;\n      return {\n         hint: hintPrefix + hintLabel,\n         value: translatePrefix + valueLabel,\n         completed: completed,\n         total: total,\n      };\n   }\n\n   getTranslationToolViewsTree(views, domId) {\n      var completed = 0;\n      var total = 0;\n      // this so it looks right/indented in a tree view:\n      var tree = new webix.TreeCollection();\n\n      /**\n       * @method addPage\n       *\n       * @param {ABView} page\n       * @param {integer} index\n       * @param {uuid} parentId\n       */\n      var addPage = (page, parentId, type, field = \"label\", viewId) => {\n         var translations = page.translations;\n         var pageId = page.id;\n         if (type == \"button\") {\n            translations = page.settings.translations;\n            pageId = `${page.id}_${field}`;\n         }\n         var labels = this.getTranslations(\n            translations,\n            domId,\n            field,\n            completed,\n            total\n         );\n         completed = labels.completed;\n         total = labels.total;\n         var icon = page.tabicon ? page.tabicon : page.icon;\n\n         // add to tree collection\n         var branch = {\n            id: pageId,\n            value: labels.value,\n            hint: labels.hint,\n            field: field,\n            viewId: viewId,\n            translations: page.translations,\n            pageId: parentId,\n            buttonId: page.pageId,\n            type: type,\n            icon: icon,\n         };\n         tree.add(branch, null, parentId);\n\n         // stop at detail views\n         // if (page.defaults.key == \"detail\") {\n         //    return;\n         // }\n\n         var subPages = page.pages ? page.pages() : [];\n         subPages.forEach((childPage, childIndex) => {\n            addPage(childPage, page.id, \"page\");\n         });\n\n         // stop if there are no views to parse\n         if (!page.views) return;\n         // add labels\n         page\n            .views((v) => v.defaults.key == \"label\")\n            .forEach((label, labelIndex) => {\n               // label views\n               // label.icon = \"th-list\";\n               addPage(label, page.id, \"label\", \"text\", label.id);\n            });\n         // add tabs\n         page\n            .views((v) => v.defaults.key == \"tab\")\n            .forEach((tab, tabIndex) => {\n               // tab views\n               tab.views().forEach((tabView, tabViewIndex) => {\n                  // tab items will be below sub-page items\n                  // tabView.icon = \"th-list\";\n                  addPage(tabView, page.id, \"tab\", \"label\", tab.id);\n               });\n            });\n         // add menus\n         page\n            .views((v) => v.defaults.key == \"menu\")\n            .forEach((menu, menuIndex) => {\n               // menu buttons\n               if (!menu.settings.order) return;\n               menu.settings.order.forEach((menuItem, menuItemIndex) => {\n                  // tab items will be below sub-page items\n                  // menuItem.icon = \"link\";\n                  addPage(menuItem, page.id, \"menu\", \"aliasname\", menu.id);\n               });\n            });\n         // add form buttons\n         page\n            .views((v) => v.defaults.key == \"form\")\n            .forEach((form, formIndex) => {\n               // form inputs\n               form.views().forEach((formInput, formInputIndex) => {\n                  // we only need buttons\n                  if (formInput.key == \"button\") {\n                     for (const property in formInput.settings\n                        .translations[0]) {\n                        if (property != \"language_code\") {\n                           addPage(\n                              formInput,\n                              page.id,\n                              \"button\",\n                              property,\n                              formInput.id\n                           );\n                        }\n                     }\n                  }\n               });\n            });\n         // add chart labels\n         page\n            .views((v) => v.defaults.key == \"chart\")\n            .forEach((chart, chartIndex) => {\n               // chart views\n               chart.views().forEach((view, viewIndex) => {\n                  // we only need buttons\n                  if (view.key == \"label\") {\n                     addPage(view, page.id, \"label\", \"text\", view.id);\n                  }\n               });\n            });\n      };\n      views.forEach((p, index) => {\n         addPage(p, null, \"page\", \"label\", p.id);\n      });\n\n      // there is a webix bug that will not allow you to se the value of a progress bar to 0\n      let progressBar = $$(`qtt_view_progress${domId}`);\n      let position = completed / total + 0.0001;\n      progressBar.showProgress({\n         type: \"top\",\n         position: position,\n      });\n      progressBar.define({\n         total: total,\n         completed: completed,\n      });\n\n      return tree;\n   }\n\n   getTranslationToolObjectsTree(objects, domId) {\n      var completed = 0;\n      var total = 0;\n      // this so it looks right/indented in a tree view:\n      var tree = new webix.TreeCollection();\n\n      /**\n       * @method addBranch\n       *\n       * @param {ABView} page\n       * @param {uuid} parentId\n       * @param {string} type\n       */\n      var addBranch = (\n         object,\n         parentId,\n         type,\n         field = \"label\",\n         fieldId,\n         objectId\n      ) => {\n         var translations = object.translations;\n         // we were missing translationson the Roles object\n         if (!translations) return;\n         var labels = this.getTranslations(\n            translations,\n            domId,\n            field,\n            completed,\n            total\n         );\n         completed = labels.completed;\n         total = labels.total;\n\n         // add to tree collection\n         var branch = {\n            id: object.id,\n            value: labels.value,\n            hint: labels.hint,\n            translations: object.translations,\n            pageId: parentId,\n            objectId: objectId,\n            type: type,\n            field: field,\n            fieldId: fieldId,\n            icon:\n               type == \"object\" ? \"database\" : object.icon ? object.icon : \"\",\n         };\n         tree.add(branch, null, parentId);\n\n         var fields = object.fields ? object.fields() : [];\n         fields.forEach((field, fieldIndex) => {\n            addBranch(field, object.id, \"field\", \"label\", field.id, object.id);\n         });\n\n         // add options\n         if (\n            object.settings &&\n            object.settings.options &&\n            object.settings.options.length\n         ) {\n            object.settings.options.forEach((option, optionIndex) => {\n               addBranch(\n                  option,\n                  object.id,\n                  \"option\",\n                  \"text\",\n                  fieldId,\n                  parentId\n               );\n            });\n         }\n      };\n      objects.forEach((p, index) => {\n         addBranch(p, null, \"object\");\n      });\n\n      // there is a webix bug that will not allow you to se the value of a progress bar to 0\n      let progressBar = $$(`qtt_object_progress${domId}`);\n      let position = completed / total + 0.0001;\n      progressBar.showProgress({\n         type: \"top\",\n         position: position,\n      });\n      progressBar.define({\n         total: total,\n         completed: completed,\n      });\n\n      return tree;\n   }\n\n   getTranslationToolTutorialsTree(tutorials, domId) {\n      var completed = 0;\n      var total = 0;\n      // this so it looks right/indented in a tree view:\n      var tree = new webix.TreeCollection();\n\n      /**\n       * @method addBranch\n       *\n       * @param {ABView} page\n       * @param {uuid} parentId\n       * @param {string} type\n       */\n      var addBranch = (\n         object,\n         parentId,\n         type,\n         field = [\"label\"],\n         hintId = null\n      ) => {\n         var translations = object.translations;\n         // we were missing translationson the Roles object\n         if (!translations) return;\n         let lastField = \"\";\n         let firstField = \"\";\n         field.forEach((f) => {\n            if (firstField == \"\") firstField = f;\n            lastField = f;\n            var labels = this.getTranslations(\n               translations,\n               domId,\n               f,\n               completed,\n               total\n            );\n            completed = labels.completed;\n            total = labels.total;\n\n            // add to tree collection\n            var branch = {\n               id: object.id + f,\n               viewId: object.id,\n               value: labels.value,\n               hint: labels.hint,\n               translations: object.translations,\n               field: f,\n               type: type,\n               hintId: hintId,\n               icon:\n                  type == \"tutorial\"\n                     ? \"info-circle\"\n                     : object.icon\n                     ? object.icon\n                     : \"minus-circle\",\n            };\n            tree.add(branch, null, parentId);\n            parentId = object.id + firstField;\n         });\n\n         var steps = object.stepIDs || [];\n         steps.forEach((step) => {\n            addBranch(\n               object._steps[step],\n               parentId,\n               \"step\",\n               [\"name\", \"text\"],\n               object.id\n            );\n         });\n      };\n      tutorials.forEach((p, index) => {\n         addBranch(p, null, \"tutorial\", [\"name\", \"description\"]);\n      });\n\n      // there is a webix bug that will not allow you to se the value of a progress bar to 0\n      let progressBar = $$(`qtt_tutorials_progress${domId}`);\n      let position = completed / total + 0.0001;\n      progressBar.showProgress({\n         type: \"top\",\n         position: position,\n      });\n      progressBar.define({\n         total: total,\n         completed: completed,\n      });\n\n      return tree;\n   }\n}\n\nexport default new PortalTranslationTool();\n","import ClassUI from \"./ClassUI.js\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass PortalTutorialManager extends ClassUI {\n   constructor() {\n      super();\n   }\n\n   ui(appId) {\n      // this is the modal window that opens when you click a tutorial to edit\n      const tutorialStepsManager = (id) => {\n         return {\n            view: \"window\",\n            id: \"stepManager\" + id,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     width: 15,\n                  },\n                  {\n                     view: \"label\",\n                     label: \"Tutorial Steps Manager\",\n                     autowidth: true,\n                  },\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"fa fa-plus\",\n                     label: \"Step\",\n                     autowidth: true,\n                     css: \"webix_primary\",\n                     click: async () => {\n                        // create ABStep\n                        let step = await this.createStep(id);\n                        // save it to get an id to store on the ABHint\n                        await step.save();\n\n                        // get the current ABHint\n                        let hint = this.AB.hints((h) => {\n                           return h.id == id;\n                        })[0];\n                        // store the new ABStep id in the current ABHint\n                        if (hint?.stepIDs && Array.isArray(hint.stepIDs)) {\n                           hint.stepIDs.push(step.id);\n                        } else {\n                           hint.stepIDs = [step.id];\n                        }\n                        // store the ABStep in the ABHint (not saved in definitions)\n                        hint._steps[step.id] = step;\n                        // add the new step UI to the interface\n                        $$(\"hint_steps_\" + hint.id).addView(\n                           this.stepUI(step, hint)\n                        );\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     width: 35,\n                     css: \"webix_transparent\",\n                     type: \"icon\",\n                     icon: \"nomargin fa fa-times\",\n                     click: () => {\n                        $$(\"stepManager\" + id).close();\n                        this.show();\n                     },\n                  },\n               ],\n            },\n            width: 800,\n            height: 500,\n            move: true,\n            position: \"center\",\n            resize: true,\n            body: {\n               rows: [\n                  {\n                     view: \"scrollview\",\n                     body: {\n                        rows: [\n                           tutorialSettings(id),\n                           {\n                              id: \"hint_steps_\" + id,\n                              rows: [],\n                           },\n                        ],\n                     },\n                  },\n                  save(id),\n               ],\n            },\n         };\n      };\n\n      // ui that contains the list of current ABHints on this application\n      const tutorialManagerBody = {\n         view: \"scrollview\",\n         css: \"lightgray ab_tutorial\",\n         body: {\n            rows: [\n               {\n                  view: \"list\",\n                  id: \"tutorial_list\",\n                  template: `<div class=\"deleteHint\">\n                                 <i class=\"fa fa-times\"></i>\n                              </div>\n                              <div class=\"active#settings.active# abTutorial\">\n                                 <h1>#name#</h1>\n                                 <p>#description#</p>\n                              </div>`,\n                  data: this._hints,\n                  hidden: this._hints.length == 0, // hide if we do not have any hints yet\n                  type: {\n                     css: \"hintItem\",\n                     height: \"auto\",\n                  },\n                  onClick: {\n                     deleteHint: (ev, id) => {\n                        // Confirm user wants to delete the hint\n                        webix\n                           .confirm({\n                              title: L(\"Delete Tutorial\"),\n                              text: L(\n                                 \"Are you sure you want to delete this tutorial?\"\n                              ),\n                              type: \"confirm-error\",\n                           })\n                           .then((result) => {\n                              // get the hint that we want to delete\n                              let hint = this.AB.hintID(id);\n                              // delete the hint (steps will also be deleted)\n                              hint.destroy(this.application);\n                              // remove the hint from the ui\n                              $$(\"tutorial_list\").remove(id);\n                              // check if we have any hints if not switch views\n                              if ($$(\"tutorial_list\").count() == 0) {\n                                 $$(\"tutorial_list\").hide();\n                                 $$(\"tutorial_list_noSelection\").show();\n                              }\n                              return false; // blocks the default click behavior\n                           })\n                           .fail(() => {\n                              // webix.message(\"Cancel\");\n                           });\n                        return false;\n                     },\n                     hintItem: (ev, id) => {\n                        // open the editor for the hint\n                        webix.ui(tutorialStepsManager(id)).show();\n                        // insert the steps into the manager to edit\n                        this.steps(id);\n                        this.hide();\n                     },\n                  },\n               },\n               {\n                  id: \"tutorial_list_noSelection\",\n                  hidden: this._hints.length > 0,\n                  rows: [\n                     {},\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: 200,\n                        label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-info-circle'></div>\",\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: \"Add a tutorial to this page.\",\n                     },\n                     {\n                        cols: [\n                           {},\n                           {\n                              view: \"button\",\n                              label: \"Create Tutorial\",\n                              type: \"form\",\n                              css: \"webix_primary\",\n                              autowidth: true,\n                              click: () => {\n                                 // open modal that helps user make a new hint\n                                 webix.ui(newTutorialPopup).show();\n\n                                 // populate the optiosn of the page/tab combo\n                                 $$(\"view_popup_options\").define(\n                                    \"options\",\n                                    this.options\n                                 );\n                                 // attempt to set the values of the combo based off the\n                                 // last visited page would be better if we could look at\n                                 // tabs as well\n                                 $$(\"view_popup_options\").define(\n                                    \"value\",\n                                    this.portal.AppState.lastPages[\n                                       this.portal.AppState.lastSelectedApp\n                                    ]\n                                 );\n                                 $$(\"view_popup_options\").refresh();\n                              },\n                           },\n                           {},\n                        ],\n                     },\n                     {},\n                  ],\n               },\n            ],\n         },\n      };\n\n      // small modal that is displayed when user wants to create a new tutorial/hint\n      const newTutorialPopup = {\n         view: \"popup\",\n         id: \"newTutorialPopup\",\n         position: \"center\",\n         height: 250,\n         width: 350,\n         modal: true,\n         body: {\n            rows: [\n               {\n                  view: \"toolbar\",\n                  id: \"myToolbarABLiveTool\",\n                  css: \"webix_dark\",\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: L(\"Create Tutorial\"),\n                        align: \"center\",\n                     },\n                  ],\n               },\n               {\n                  view: \"form\",\n                  elements: [\n                     {\n                        view: \"combo\",\n                        label: \"\",\n                        id: \"view_popup_options\",\n                        placeholder: L(\"Choose Page or Tab\"),\n                        options: [],\n                     },\n                     {\n                        cols: [\n                           {\n                              view: \"button\",\n                              value: L(\"Cancel\"),\n                              click: () => {\n                                 $$(\"newTutorialPopup\").hide();\n                              },\n                           },\n                           {\n                              view: \"button\",\n                              value: \"Create\",\n                              id: \"view_popup_options_add\",\n                              css: \"webix_primary\",\n                              click: () => {\n                                 let view = $$(\"view_popup_options\").getValue();\n                                 let text = $$(\"view_popup_options\")\n                                    .getText()\n                                    .trim();\n                                 // take values from selection to build a new hint\n                                 this.createTutorial(view, text);\n                                 $$(\"newTutorialPopup\").hide();\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // save the hint and step values and close the manager\n      const save = (id) => {\n         return {\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  value: L(\"Cancel\"),\n                  width: 100,\n                  click: () => {\n                     $$(\"stepManager\" + id).close();\n                     this.show();\n                  },\n               },\n               {\n                  view: \"button\",\n                  value: L(\"Save\"),\n                  width: 100,\n                  css: \"webix_primary\",\n                  click: async (element, event) => {\n                     // validate form\n                     let valid = $$(\"stepform\" + id).validate();\n                     // get hint we are going to update\n                     let hint = this.AB.hints((h) => {\n                        return h.id == id;\n                     })[0];\n                     // loop through steps to get values and save\n                     hint.stepIDs.forEach((step) => {\n                        if (hint?._steps?.[step]) {\n                           // validate each step to ensure they are ready to save\n                           if (\n                              !$$(\"step_form\" + step).validate({\n                                 disabled: true,\n                              })\n                           ) {\n                              valid = false;\n                           } else {\n                              // set values so we can save later\n                              let values = $$(\"step_form\" + step).getValues();\n                              hint._steps[step].name = values.name;\n                              hint._steps[step].text = values.text;\n                              hint._steps[step].settings.event = values.event;\n                              hint._steps[step].settings.el = values.el;\n                              // hint._steps[step].save();\n                           }\n                        }\n                     });\n                     if (!valid) return false;\n\n                     var values = $$(\"stepform\" + id).getValues();\n                     hint.name = values.name;\n                     hint.description = values.description;\n                     hint.settings.view = values.view;\n                     hint.settings.active = values.active;\n                     // save the steps data next\n                     // hint.stepIDs.forEach((step) => {\n                     //    if (hint?._steps?.[step]) {\n                     //       hint._steps[step].save();\n                     //    }\n                     // });\n                     for (const step of hint.stepIDs) {\n                        if (hint?._steps?.[step]) {\n                           await hint._steps[step].save();\n                        }\n                     }\n                     await hint.save();\n                     $$(\"stepManager\" + id).close();\n                     this.show();\n                  },\n               },\n               {},\n            ],\n         };\n      };\n\n      // ui that is at the top of the tutorial manager for the global tutorial settings\n      const tutorialSettings = (id) => {\n         let currentTutorial = this.AB.hints((h) => {\n            return h.id == id;\n         })[0];\n         let active = currentTutorial?.settings.hasOwnProperty(\"active\")\n            ? currentTutorial.settings.active\n            : \"1\";\n         return {\n            view: \"form\",\n            id: \"stepform\" + id,\n            borderless: true,\n            cols: [\n               {\n                  id: \"step_window\",\n                  rows: [\n                     {\n                        view: \"text\",\n                        label: L(\"Title\"),\n                        name: \"name\",\n                        validate: webix.rules.isNotEmpty,\n                        invalidMessage: L(\"Title is required\"),\n                        value: currentTutorial.name,\n                     },\n                     {\n                        view: \"textarea\",\n                        label: L(\"Text\"),\n                        labelAlign: \"left\",\n                        height: 100,\n                        name: \"description\",\n                        value: currentTutorial?.description || \"\",\n                     },\n                  ],\n               },\n               {\n                  width: 300,\n                  rows: [\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Page/Tab\"),\n                              align: \"left\",\n                              width: 100,\n                           },\n                           // {\n                           //    view: \"button\",\n                           //    icon: \"fa fa-crosshairs\",\n                           //    type: \"icon\",\n                           //    label: L(\"select\"),\n                           //    css: \"focusPageTab webix_primary\",\n                           //    currentTutorialID: id,\n                           //    width: 100,\n                           //    click: () => {\n                           //       $$(\"stepManager\" + currentTutorial.id).hide();\n                           //       document.addEventListener(\n                           //          \"click\",\n                           //          this.handlePageTabClick,\n                           //          false\n                           //       );\n                           //       document.hintId = id;\n                           //       webix.ui(this.pageTabWindow(id)).show();\n                           //    },\n                           // },\n                           {\n                              view: \"combo\",\n                              name: \"view\",\n                              value: currentTutorial.settings.view,\n                              options: {\n                                 view: \"suggest\",\n                                 css: \"wider_popup\",\n                                 body: {\n                                    view: \"list\",\n                                    css: \"wider_popup\",\n                                    data: this.options,\n                                    template: \"#value#\",\n                                 },\n                              },\n                           },\n                        ],\n                     },\n\n                     {\n                        view: \"switch\",\n                        label: L(\"Active\"),\n                        labelWidth: 100,\n                        name: \"active\",\n                        value: active,\n                     },\n                  ],\n               },\n            ],\n         };\n      };\n\n      // this is the drawer admin that lists all tutorials\n      return {\n         view: \"window\",\n         css: \"tutorialWindow\",\n         id: \"tutorial_manager\",\n         position: function (state) {\n            state.left = state.maxWidth - 350; // fixed values\n            state.top = 0;\n            state.width = 350; // relative values\n            state.height = state.maxHeight;\n         },\n         on: {\n            onShow: () => {},\n         },\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  width: 15,\n               },\n               {\n                  view: \"label\",\n                  label: \"Tutorial Manager\",\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-plus\",\n                  label: \"Tutorial\",\n                  width: 95,\n                  css: \"webix_primary\",\n                  click: () => {\n                     webix.ui(newTutorialPopup).show();\n\n                     $$(\"view_popup_options\").define(\"options\", this.options);\n                     $$(\"view_popup_options\").define(\n                        \"value\",\n                        this.portal.AppState.lastPages[\n                           this.portal.AppState.lastSelectedApp\n                        ]\n                     );\n                     $$(\"view_popup_options\").refresh();\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: tutorialManagerBody,\n      };\n   }\n\n   init(portal) {\n      this.AB = portal.AB;\n      this.portal = portal;\n      this.appId = portal.AppState.lastSelectedApp;\n\n      this.application = this.AB.applicationByID(this.appId);\n      const pages = this.application.pages();\n      this.options = this.getViewOptions(pages);\n      // only return tutorials that are on current application\n      this._hints = this.AB.hints((hint) => {\n         if (this.application.hintIDs.indexOf(hint.id) > -1) {\n            return true;\n         } else {\n            return false;\n         }\n      });\n      webix.ui(this.ui());\n   }\n\n   show() {\n      // this gets the latest hints and updates them to local list.\n      $$(\"tutorial_manager\").show();\n      this._hints = this.AB.hints((hint) => {\n         if (this.application.hintIDs.indexOf(hint.id) > -1) {\n            return true;\n         } else {\n            return false;\n         }\n      });\n      $$(\"tutorial_list\").define(\"data\", this._hints);\n      $$(\"tutorial_list\").refresh();\n   }\n\n   hide() {\n      $$(\"tutorial_manager\").hide();\n   }\n\n   // small modal that gives instructions to user when selecting the page or tab to load this tutorial on\n   pageTabWindow(hintID) {\n      return {\n         view: \"window\",\n         id: \"pageTabWindow\",\n         width: 160,\n         height: 160,\n         move: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     $$(\"stepManager\" + hintID).show();\n                     $$(\"pageTabWindow\").hide();\n\n                     document.removeEventListener(\n                        \"contextmenu\",\n                        this.handleRightClick,\n                        false\n                     );\n                  },\n               },\n            ],\n         },\n         position: function (state) {\n            state.left = state.maxWidth - state.width;\n            state.top = state.maxHeight - state.height;\n         },\n         body: {\n            template:\n               \"<div class='highlightWin'>\" +\n               L(\"Click the page or tab that will start this tutorial\") +\n               \"</div>\",\n         },\n      };\n   }\n\n   // small modal that gives instructions to users when they are selecting the highlight element\n   focusWindow(hintID) {\n      return {\n         view: \"window\",\n         id: \"focusWindow\",\n         width: 160,\n         height: 160,\n         move: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     $$(\"stepManager\" + hintID).show();\n                     $$(\"focusWindow\").hide();\n\n                     document.removeEventListener(\n                        \"contextmenu\",\n                        this.handleRightClick,\n                        false\n                     );\n                     document.body.classList.remove(\"findDataCy\");\n                  },\n               },\n            ],\n         },\n         position: function (state) {\n            state.left = state.maxWidth - state.width;\n            state.top = state.maxHeight - state.height;\n         },\n         body: {\n            template:\n               \"<div class='highlightWin'>\" +\n               L(\"Right click the element you want to highlight.\") +\n               \"</div>\",\n         },\n      };\n   }\n\n   updateStepsUI(id) {\n      const views = $$(\"hint_steps_\" + id).getChildViews();\n      let viewsToRemove = [];\n      views.forEach((view) => {\n         viewsToRemove.push(view.config.id);\n      });\n      viewsToRemove.forEach((view) => {\n         $$(\"hint_steps_\" + id).removeView(view);\n      });\n      this.steps(id);\n   }\n\n   addHighlightClass(event) {\n      let item = $$(event.currentTarget);\n      let formVals = $$(\"step_form\" + item.config.stepId).getValues();\n      document.querySelector(formVals?.el).classList.add(\"highlightMe\");\n   }\n   removeHighlightClass(event) {\n      let item = $$(event.currentTarget);\n      let formVals = $$(\"step_form\" + item.config.stepId).getValues();\n      document.querySelector(formVals?.el).classList.remove(\"highlightMe\");\n   }\n\n   // build a list of steps that are included in this hint\n   steps(id) {\n      let hint = this.AB.hints((h) => {\n         return h.id == id;\n      })[0];\n      // if we do not have steps\n      if (!hint?.stepIDs?.length) {\n         let addStepBelow = {\n            id: \"addStepBelow\",\n            padding: 20,\n            rows: [\n               {\n                  css: \"ab-component-form-rules\",\n                  rows: [\n                     {},\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: 80,\n                        label: \"<div style='display: block; font-size: 80px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-info-circle'></div>\",\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: L(\"Add a step to this tutorial.\"),\n                     },\n                     {\n                        cols: [\n                           {},\n                           {\n                              view: \"button\",\n                              type: \"icon\",\n                              icon: \"fa fa-plus\",\n                              label: L(\"Step\"),\n                              autowidth: true,\n                              css: \"webix_primary\",\n                              click: async () => {\n                                 // create an ABStep\n                                 let step = await this.createStep(id);\n                                 // save it to definitions to get id\n                                 await step.save();\n                                 // get the hint we are editing\n                                 let hint = this.AB.hints((h) => {\n                                    return h.id == id;\n                                 })[0];\n                                 // assign the new ABStep id to the ABHint\n                                 if (\n                                    hint?.stepIDs &&\n                                    Array.isArray(hint.stepIDs)\n                                 ) {\n                                    hint.stepIDs.push(step.id);\n                                 } else {\n                                    hint.stepIDs = [step.id];\n                                 }\n                                 // store the ABStep on the ABHint (not stored in defs)\n                                 hint._steps[step.id] = step;\n                                 // remove ui that shows when ABHint does not have steps\n                                 $$(\"hint_steps_\" + hint.id).removeView(\n                                    \"addStepBelow\"\n                                 );\n                                 // add the ui to edit the new step to the ui\n                                 $$(\"hint_steps_\" + hint.id).addView(\n                                    this.stepUI(step, hint)\n                                 );\n                              },\n                           },\n                           {},\n                        ],\n                     },\n                     {},\n                  ],\n               },\n            ],\n         };\n         // add to the ui now that we have it defined\n         $$(\"hint_steps_\" + id).addView(addStepBelow);\n      } else {\n         // if we do have steps\n         hint.stepIDs.forEach((step) => {\n            $$(\"hint_steps_\" + id).addView(\n               this.stepUI(hint._steps[step], hint)\n            );\n         });\n      }\n      // set up hover listeners for buttons that help user pick and show the highlight elements\n      const focusElements = document.querySelectorAll(\".focusElement\");\n      for (let i = 0; i < focusElements.length; i++) {\n         focusElements[i].addEventListener(\n            \"mouseover\",\n            this.addHighlightClass,\n            false\n         );\n         focusElements[i].addEventListener(\n            \"mouseout\",\n            this.removeHighlightClass,\n            false\n         );\n      }\n   }\n\n   // UI for each step that will be used to rebuild steps when moved/deleted/loaded\n   stepUI(step, hint) {\n      // the position of the step that we display in the top left corner of the ui\n      let position = $$(\"hint_steps_\" + hint.id).getChildViews().length + 1;\n      return {\n         view: \"form\",\n         id: \"step_form\" + step.id,\n         css: \"my\",\n         padding: 15,\n         borderless: true,\n         rows: [\n            {\n               borderless: true,\n               cols: [\n                  {\n                     width: 50,\n                     rows: [\n                        {\n                           view: \"label\",\n                           label: `<h1 class=\"stepPos\">${position}</h1>`,\n                           align: \"center\",\n                        },\n                        {\n                           view: \"icon\",\n                           class: \"moveStepUp\",\n                           icon: \"fa fa-caret-up\",\n                           disabled: position == 1 ? true : false, // do not allow moving up if already at the top position\n                           align: \"center\",\n                           click: (id, element) => {\n                              // move the step up a position\n                              this.moveStep(step, hint, \"up\");\n                           },\n                        },\n                        {\n                           view: \"icon\",\n                           class: \"moveStepDown\",\n                           icon: \"fa fa-caret-down\",\n                           disabled:\n                              hint.stepIDs.length == position ? true : false, // do not let the last item be moved down\n                           align: \"center\",\n                           click: (id, element) => {\n                              // move the step down a position\n                              this.moveStep(step, hint, \"down\");\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     css: \"ab-component-form-rules\",\n                     padding: 15,\n                     cols: [\n                        {\n                           minWidth: 300,\n                           rows: [\n                              {\n                                 view: \"text\",\n                                 label: L(\"Title\"),\n                                 validate: webix.rules.isNotEmpty,\n                                 invalidMessage: L(\"Title is required\"),\n                                 labelWidth: 100,\n                                 name: \"name\",\n                                 value: step?.name || \"\",\n                              },\n                              {\n                                 view: \"textarea\",\n                                 label: L(\"Text\"),\n                                 labelAlign: \"left\",\n                                 labelWidth: 100,\n                                 height: 150,\n                                 name: \"text\",\n                                 value: step?.text || \"\",\n                              },\n                              {\n                                 cols: [\n                                    {\n                                       view: \"label\",\n                                       label: L(\"Highlight\"),\n                                       align: \"left\",\n                                       width: 100,\n                                    },\n                                    {\n                                       view: \"button\",\n                                       icon: \"fa fa-crosshairs\",\n                                       type: \"icon\",\n                                       label: L(\"select\"),\n                                       css: \"focusElement webix_primary\",\n                                       stepId: step.id,\n                                       width: 100,\n                                       click: () => {\n                                          // change the ui to support the selecting of the highlight element\n                                          $$(\"stepManager\" + hint.id).hide();\n                                          // adding this class will allow a css rule to highlight any element with data-cy attribute on hover\n                                          document.body.classList.add(\n                                             \"findDataCy\"\n                                          );\n                                          // when the user sees the element hovered can be a highlight element they right click to save it\n                                          document.addEventListener(\n                                             \"contextmenu\",\n                                             this.handleRightClick,\n                                             false\n                                          );\n                                          // store the step and hint ids to use in the handleRightClick() function\n                                          document.stepId = step.id;\n                                          document.hintId = hint.id;\n                                          // show a small window in bottom right hand corner that helps user know what to do\n                                          webix\n                                             .ui(this.focusWindow(hint.id))\n                                             .show();\n                                       },\n                                    },\n                                    {\n                                       view: \"text\",\n                                       name: \"el\",\n                                       value: step.settings.el,\n                                       disabled: true,\n                                       placeholder: L(\n                                          \"Click the 'select' button to pick an element to highlight.\"\n                                       ),\n                                       bottomLabel: L(\n                                          \"Hover over the 'select' button to highlight the chosen element.\"\n                                       ),\n                                       validate: webix.rules.isNotEmpty,\n                                       invalidMessage: L(\n                                          \"Please choose an item to highlight\"\n                                       ),\n                                    },\n                                 ],\n                              },\n                              {\n                                 cols: [\n                                    {\n                                       view: \"label\",\n                                       label: L(\"Event\"),\n                                       align: \"left\",\n                                       width: 100,\n                                    },\n                                    {\n                                       view: \"combo\",\n                                       value: step.settings.event,\n                                       name: \"event\",\n                                       options: [\n                                          {\n                                             id: \"click\",\n                                             value: L(\"Click\"),\n                                          },\n                                          {\n                                             id: \"enter\",\n                                             value: L(\"Enter\"),\n                                          },\n                                       ],\n                                    },\n                                 ],\n                              },\n                           ],\n                        },\n                     ],\n                  },\n                  {\n                     view: \"template\",\n                     borderless: true,\n                     template: `<div class=\"deleteStep\"><i class=\"fa fa-times\"></i></div>`,\n                     width: 15,\n                     onClick: {\n                        deleteStep: (ev, id) => {\n                           // ask user if they want to delete this step\n                           webix\n                              .confirm({\n                                 title: L(\"Delete Step\"),\n                                 text: L(\n                                    \"Are you sure you want to delete this step?\"\n                                 ),\n                                 type: \"confirm-error\",\n                              })\n                              .then(async (result) => {\n                                 // remove the step from the hint\n                                 hint.stepRemove(step.id);\n                                 await hint.save();\n                                 // rebuild the step ui now that one has been removed\n                                 this.updateStepsUI(hint.id);\n                                 return false; // blocks the default click behavior\n                              })\n                              .fail(() => {\n                                 // webix.message(\"Cancel\");\n                              });\n                           return false;\n                        },\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   // this function moves a step up or down a position\n   async moveStep(step, hint, direction) {\n      let currPosition = hint.stepIDs.indexOf(step.id);\n      switch (direction) {\n         case \"up\":\n            hint.stepIDs.splice(\n               currPosition - 1,\n               0,\n               hint.stepIDs.splice(currPosition, 1)[0]\n            );\n            break;\n         default:\n            hint.stepIDs.splice(\n               currPosition + 1,\n               0,\n               hint.stepIDs.splice(currPosition, 1)[0]\n            );\n      }\n      await hint.save();\n      this.updateStepsUI(hint.id);\n   }\n\n   // this builds the list of page/tab options that a hint can be added to\n   getViewOptions(views) {\n      // this so it looks right/indented in a tree view:\n      // var tree = new webix.TreeCollection();\n      var options = [];\n\n      /**\n       * @method addOption\n       *\n       * @param {ABView} page\n       * @param {uuid} parentId\n       * @param {number} depth\n       */\n      var addOption = (object, parentId, depth) => {\n         // add to tree collection\n         if ([\"page\", \"tab\", \"viewcontainer\"].indexOf(object.key) != -1) {\n            var indent = \"\";\n            for (let i = 0; i < depth; i++) {\n               indent += \"<i style='display:inline-block; width: 10px;'></i>\";\n            }\n            let icon =\n               object.icon == \"braille\" ? \"external-link-square\" : object.icon;\n            var option = {\n               id: object.id,\n               value: `${indent} <i class=\"fa fa-${icon}\"></i> ${object.label}`,\n            };\n            options.push(option);\n         }\n\n         var pages = object.pages ? object.pages() : [];\n         pages.forEach((page, pageIndex) => {\n            addOption(page, object.id, depth + 1);\n         });\n\n         var views = object.views();\n         views.forEach((view, pageIndex) => {\n            addOption(view, object.id, depth + 1);\n         });\n      };\n      views.forEach((p, index) => {\n         addOption(p, null, 0);\n      });\n\n      return options;\n   }\n\n   // This creates a new hint and stores it on the application and view we want to display it on\n   async createTutorial(viewID, viewLabel) {\n      let hint = this.AB.hintNew({\n         name: viewLabel,\n         settings: { view: viewID },\n      });\n      await hint.save();\n      if (Array.isArray(this?.application?.hintIDs)) {\n         this.application.hintIDs.unshift(hint.id);\n      } else {\n         this.application.hintIDs = [hint.id];\n      }\n      this.application.save();\n      let hintView = this.application.views((view) => {\n         return view.id == viewID;\n      })[0];\n      hintView.settings.hintID = hint.id;\n      hintView.save();\n      $$(\"tutorial_list\").add(hint, 0);\n      if (this.AB.hints().length) {\n         $$(\"tutorial_list\").show();\n         $$(\"tutorial_list_noSelection\").hide();\n      }\n   }\n\n   // create a new step on a hint\n   async createStep(hintID) {\n      let step = this.AB.stepNew(null, hintID);\n      return step;\n   }\n\n   // store the data-cy info on a step after right clicking an element on the page\n   handleRightClick(event) {\n      function getCy(element) {\n         if (element?.dataset?.cy) {\n            return element.dataset.cy;\n         } else if (element?.parentElement) {\n            return getCy(element.parentElement);\n         } else {\n            webix.alert({\n               text: L(\"Sorry, try another element.\"),\n            });\n            return \"\";\n         }\n      }\n\n      if (document?.stepId) {\n         event.preventDefault();\n         event.stopPropagation();\n         let dataCy = getCy(event.target);\n         if (!dataCy) return false;\n         $$(\"step_form\" + document.stepId).setValues(\n            {\n               el: \"[data-cy='\" + dataCy + \"']\",\n            },\n            true\n         );\n      }\n      $$(\"stepManager\" + document.hintId).show();\n      $$(\"focusWindow\").hide();\n\n      document.removeEventListener(\"contextmenu\", this.handleRightClick, false);\n      document.body.classList.remove(\"findDataCy\");\n      delete document.stepId;\n      delete document.hintId;\n\n      return false;\n   }\n\n   // handlePageTabClick(event) {\n   //    event.preventDefault();\n   //    event.stopPropagation();\n   //    debugger;\n   //    // $$(\"stepform\" + document?.hintId).setValues(\n   //    //    {\n   //    //       view: \"[data-cy='\" + dataCy + \"']\",\n   //    //    },\n   //    //    true\n   //    // );\n\n   //    $$(\"stepManager\" + document.hintId).show();\n   //    $$(\"pageTabWindow\").hide();\n\n   //    document.removeEventListener(\"click\", this.handlePageTabClick, false);\n   //    delete document.hintId;\n\n   //    return false;\n   // }\n}\n\nexport default new PortalTutorialManager();\n","import ClassUI from \"./ClassUI.js\";\nimport ClassUIPage from \"./ClassUIPage.js\";\n\nimport PortalWorkInbox from \"./portal_work_inbox.js\";\nimport PortalWorkInboxTaskWindow from \"./portal_work_inbox_taskWindow.js\";\nimport PortalWorkUserProfileWindow from \"./portal_work_user_profile_window.js\";\nimport PortalWorkUserSwitcheroo from \"./portal_work_user_switcheroo.js\";\nimport PortalWorkUserQRWindow from \"./portal_work_user_qr_window.js\";\nimport PortalWorkUserMobileQR from \"./portal_work_user_mobile_qr.js\";\nimport PortalAccessLevelManager from \"./portal_access_level_manager.js\";\nimport TranslationTool from \"./portal_translation_tool.js\";\nimport TutorialManager from \"./portal_tutorial_manager.js\";\n\nclass PortalWork extends ClassUI {\n   constructor() {\n      super();\n   }\n\n   ui() {\n      return {\n         id: \"portal_work\",\n         rows: [\n            {\n               id: \"portal_work_network_warning\",\n               height: 30,\n               css: \"portal_work_warning_banner warning_custom_css\",\n               hidden: true,\n               cols: [\n                  { width: 5 },\n                  {\n                     id: \"portal_work_network_warning_label\",\n                     view: \"label\",\n                     align: \"center\",\n                  },\n                  {\n                     id: \"portal_work_network_warning_button\",\n                     view: \"button\",\n                     align: \"center\",\n                     hidden: true,\n                     width: 100,\n                     css: \"webix_transparent\",\n                  },\n                  { width: 5 },\n               ],\n            },\n            {\n               id: \"portal_work_switcheroo_user_switched\",\n               height: 30,\n               css: \"portal_work_switcheroo_user_switched\",\n               hidden: true,\n               cols: [\n                  {\n                     width: 5,\n                  },\n                  {\n                     id: \"portal_work_switcheroo_user_switched_label\",\n                     view: \"label\",\n                     align: \"center\",\n                  },\n                  {\n                     view: \"button\",\n                     value: '<div style=\"text-align: center; font-size: 12px; color:#FFFFFF\"><i class=\"fa-fw fa fa-times\"></i></div>',\n                     align: \"center\",\n                     width: 30,\n                     css: \"webix_transparent\",\n                     on: {\n                        onItemClick: () => {\n                           PortalWorkUserSwitcheroo.switcherooClear();\n                           $$(\"portal_work_switcheroo_user_switched\").hide();\n                        },\n                     },\n                  },\n                  {\n                     width: 5,\n                  },\n               ],\n            },\n            {\n               view: \"toolbar\",\n               id: \"mainToolbar\",\n               // borderless: true,\n               css: \"webix_dark mainToolbar\",\n               padding: 10,\n               cols: [\n                  {\n                     id: \"portal_work_menu_sidebar\",\n                     view: \"button\",\n                     type: \"icon\",\n                     width: 50,\n                     icon: \"fa fa-bars no-margin\",\n                     click: () => {\n                        let navSideBar = $$(\"navSidebar\");\n                        if (navSideBar.isVisible()) {\n                           navSideBar.hide();\n                        } else {\n                           navSideBar.show();\n                           let sidebarMenu = $$(\"abSidebarMenu\");\n                           if (sidebarMenu.getSelectedId() == \"\") {\n                              sidebarMenu.blockEvent();\n                              const firstID = sidebarMenu.getFirstId();\n                              sidebarMenu.select(firstID);\n                              sidebarMenu.unblockEvent();\n                           }\n                        }\n                     },\n                     on: {\n                        onAfterRender() {\n                           ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"label\",\n                     autowidth: true,\n                     id: \"portal_work_menu_title\",\n                     label: \"AppBuilder\",\n                     align: \"left\",\n                     on: {\n                        onAfterRender() {\n                           ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {},\n                  {\n                     id: \"portal_work_menu_pages\",\n                     css: \"appPages\",\n                     cols: [],\n                     on: {\n                        onAfterRender() {\n                           ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {},\n                  {\n                     id: \"inbox_icon\",\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"fa fa-envelope no-margin\",\n                     width: 40,\n                     // badge: 12,\n                     click: () => {\n                        PortalWorkInbox.show();\n                     },\n                     on: {\n                        onAfterRender() {\n                           ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     id: \"settings_icon\",\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"fa fa-cog fa-lg no-margin\",\n                     width: 40,\n                     hidden: true,\n                     popup: \"settingsMenu\",\n                     /* Look at this.refreshSettingsMenu() for menu options and actions */\n                     on: {\n                        onAfterRender() {\n                           ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     id: \"user_icon\",\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"fa fa-user-circle no-margin\",\n                     width: 40,\n                     popup: \"userMenu\",\n                     /* Look at Popup created below for menu options and actions */\n                     on: {\n                        onAfterRender() {\n                           ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     id: \"navSidebar\",\n                     hidden: true,\n                     autoheight: true,\n                     borderless: true,\n                     rows: [\n                        {\n                           id: \"abNavSidebarScrollView\",\n                           view: \"scrollview\",\n                           scroll: \"y\",\n                           css: \"darkScrollview\",\n                           body: {\n                              rows: [\n                                 {\n                                    view: \"sidebar\",\n                                    id: \"abSidebarMenu\",\n                                    borderless: true,\n                                    css: \"webix_dark mainSidebar\",\n                                    data: [],\n                                    on: {\n                                       onAfterRender() {\n                                          this.data.each((a) => {\n                                             ClassUI.CYPRESS_REF(\n                                                this.getItemNode(a.id),\n                                                a.id\n                                             );\n                                          });\n                                       },\n                                       onAfterSelect: (/* id */) => {\n                                          // this.selectApplication(id);\n                                       },\n                                       onItemClick: (id) => {\n                                          this.selectApplication(id);\n                                       },\n                                    },\n                                 },\n                              ],\n                           },\n                        },\n                        {\n                           view: \"template\",\n                           borderless: true,\n                           css: \"appDevDesigns\",\n                           height: 110,\n                        },\n                     ],\n                  },\n                  {\n                     id: \"abWorkPages\",\n                     template: \"No Applications Have Been Loaded.\",\n                  }, // this is where content goes\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n\n      this.storageKey = \"portal_work_state\";\n\n      this.pageContainers = {};\n\n      const L = (...params) => {\n         return this.label(...params);\n      };\n\n      const allInits = [];\n\n      allInits.push(PortalWorkUserProfileWindow.init(this.AB));\n      allInits.push(PortalWorkUserSwitcheroo.init(this.AB));\n\n      // {hash}  { ABViewPage.id : ClassUIPage() }\n      // track each of the page containers (instances of ClassUIPage) that\n      // are responsible for displaying the proper state of each of our\n      // Root Pages.\n\n      // Get all our ABApplications and loaded Plugins in allApplications\n      const allApplications = (\n         this.AB.applications(\n            (a) =>\n               a.isWebApp &&\n               a.isAccessibleForRoles(this.AB.Account.rolesAll() ?? [])\n         ) || []\n      ).concat(this.AB.plugins() || []);\n\n      // Build out our Navigation Side Bar Menu with our available\n      // ABApplications\n      const menu_data = [];\n\n      for (let i = 0; i < allApplications.length; i++) {\n         // TODO: implement Sorting on these before building UI\n         menu_data.push(this.uiSideBarMenuEntry(allApplications[i]));\n      }\n\n      $$(\"abSidebarMenu\").define(\"data\", menu_data);\n      this.sidebarResize();\n\n      PortalWorkUserMobileQR.init(AB);\n\n      const userMenuOptions = [\n         { id: \"user_profile\", label: L(\"User Profile\"), icon: \"user\" },\n         { id: \"user_logout\", label: L(\"Logout\"), icon: \"ban\" },\n      ];\n\n      // add in any Mobile App QR Codes:\n      const allMobile = this.AB.applications((a) => a.isMobile);\n      allMobile.forEach((m) => {\n         userMenuOptions.splice(1, 0, {\n            id: m.id, // \"pwa_app\",\n            label: m.label,\n            icon: m.icon.replace(\"fa-\", \"\"),\n         });\n      });\n\n      if (this.AB.Account.canSwitcheroo()) {\n         userMenuOptions.splice(1, 0, {\n            id: \"user_switcheroo\",\n            label: L(\"Switcheroo\"),\n            icon: \"user-secret\",\n         });\n      }\n\n      if (this.AB.Account.isSwitcherood()) {\n         $$(\"portal_work_switcheroo_user_switched_label\").setValue(\n            `<i class=\"fa-fw fa fa-user-secret\"></i>\n            ${L('You are viewing this site as \"{0}\"', [\n               this.AB.Account.username(),\n            ])}`\n         );\n         $$(\"portal_work_switcheroo_user_switched\").show();\n      }\n      /** @type {Object.<string, NetworkWarning>} */\n      this.networkWarnings = {\n         /**\n          * @typedef {object} NetworkWarning - define the display & behavior of\n          * a Network Warning\n          * @prop {string} label - warning message to display\n          * @prop {number} priority - 1 is the highest prioirity\n          * @prop {Function} [click] - click hanlder function\n          * @prop {string} [button] - label for the button\n          * @prop {string | number} [value] - to replace in button lable\n          * @prop {string} [css] - custom css to add to the warning ui\n          * @prop {Boolean} [active] - is the warning currently active\n          */\n         no_network: {\n            label: `<i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n            ${L(\"No network detected. Work will not be saved.\")}`,\n            priority: 1,\n         },\n         no_server: {\n            label: `<i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n            ${L(\n               \"Uh oh...we cannot communicate with our servers, please wait before saving data.\"\n            )}`,\n            priority: 2,\n            click: () => this.AB.Network._connectionCheck(),\n            button: `<i class=\"fa fa-refresh\" aria-hidden=\"true\"></i> #value# ${L(\n               \"requests\"\n            )}`,\n            value: 0,\n         },\n         slow: {\n            label: `<i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n            ${L(\"Slow Network Detected! This may affect your experience.\")}`,\n            priority: 5,\n            click: () => {\n               this.networkWarningClear(\"slow\");\n               this.networkWarnings.slow.disabled = true;\n            },\n            button: `<i class=\"fa fa-times\" aria-hidden=\"true\"></i> ${L(\n               \"dismiss\"\n            )}`,\n            css: \"background: #c98025\",\n         },\n      };\n\n      if (!navigator.onLine) this.networkWarningDisplay(\"no_network\");\n\n      window.addEventListener(\"offline\", () => {\n         this.networkWarningDisplay(\"no_network\");\n      });\n\n      window.addEventListener(\"online\", () => {\n         this.networkWarningClear(\"no_network\");\n      });\n\n      // document.body.addEventListener(\n      //    \"offline\",\n      //    function () {\n      //       debugger;\n      //       $$(\"portal_work_no_network_detected\").show();\n      //    },\n      //    false\n      // );\n      // document.body.addEventListener(\n      //    \"online\",\n      //    function () {\n      //       debugger;\n      //       $$(\"portal_work_no_network_detected\").hide();\n      //    },\n      //    false\n      // );\n\n      // Only add the QR Code option if the relay service is enabled\n      const { relay } = this.AB.Config.siteConfig();\n\n      if (relay) {\n         // Insert at userMenuOptions[2] so logout is still last\n         userMenuOptions.splice(2, 0, {\n            id: \"user_qr\",\n            label: L(\"Connect Mobile App\"),\n            icon: \"qrcode\",\n         });\n      }\n\n      // This is the User popup menu that opens when you click the user icon in the main nav\n      this.AB.Webix.ui({\n         view: \"popup\",\n         id: \"userMenu\",\n         width: 150,\n         body: {\n            view: \"list\",\n            data: userMenuOptions,\n            template: \"<i class='fa-fw fa fa-#icon#'></i> #label#\",\n            autoheight: true,\n            select: true,\n            on: {\n               onItemClick: (id) => {\n                  switch (id) {\n                     case \"user_profile\":\n                        PortalWorkUserProfileWindow.show();\n                        break;\n                     case \"user_switcheroo\":\n                        PortalWorkUserSwitcheroo.show();\n                        break;\n                     case \"user_logout\":\n                        AB.Account.logout();\n                        break;\n                     case \"user_qr\":\n                        PortalWorkUserQRWindow.init(AB);\n                        PortalWorkUserQRWindow.show();\n                        break;\n                     default:\n                        // was this one of our Mobile Apps?\n                        const mobileApp = this.AB.applicationByID(id);\n                        if (mobileApp) {\n                           PortalWorkUserMobileQR.load(mobileApp);\n                           PortalWorkUserMobileQR.show();\n                        } else {\n                           const item = userMenuOptions.filter(\n                              (o) => o.id == id\n                           )[0];\n                           this.AB.Webix.message(\n                              `<b>Not yet implemented</b><br/>\n                           Menu item:<i>${item.label}</i><br/>\n                           Menu ID:<i>${item.id}</i>`\n                           );\n                        }\n                  }\n                  $$(\"userMenu\").hide();\n               },\n\n               onAfterRender() {\n                  this.data.each((a) => {\n                     ClassUI.CYPRESS_REF(this.getItemNode(a.id), a.id);\n                  });\n               },\n            },\n         },\n      });\n\n      // Now Fill out Toolbar and Root Pages:\n      //\n      // Step 1: prepare the AppState so we can determine which options\n      // should be pre selected.\n      //\n      const AppState = (await this.AB.Storage.get(this.storageKey)) ?? {\n         lastSelectedApp: null,\n         // {string}  the ABApplication.id of the last App selected\n\n         lastPages: {},\n         // {hash}  { ABApplication.id : ABPage.id }\n         // a lookup of all the last selected Pages for each Application\n      };\n\n      this.AppState = AppState;\n\n      // set default selected App if not already set\n      // just choose the 1st App in the list (must have pages that we have\n      // access to)\n      if (!this.AppState.lastSelectedApp && menu_data.length)\n         for (let i = 0; i < menu_data.length; i++)\n            if (\n               (\n                  menu_data[i].abApplication\n                     .pages()\n                     .filter((p) => p.getUserAccess?.() > 0) || []\n               ).length > 0\n            ) {\n               this.AppState.lastSelectedApp = menu_data[i].abApplication.id;\n\n               break;\n            }\n\n      //\n      // Step 2: figure out the Default Page to be displayed.\n      //\n      let DefaultPage = null;\n      // {ABViewPage}\n      // The ABViewPage of the 1st page to display.\n\n      // sidebar and NavBar are already built at this point. So we can\n      // query them.\n      const $sideBar = $$(\"abSidebarMenu\");\n\n      if ($sideBar) {\n         // search the Menu entries to see which one matches our\n         // stored AppState\n         let foundMenuEntry = this.sidebarMenuEntryByID(\n            this.AppState.lastSelectedApp\n         );\n\n         if (!foundMenuEntry) {\n            // if we couldn't find the entry then our .lastSelectedApp\n            // must be referencing an Application we no longer have\n            // access to.\n            // So just pick the 1st app with pages\n            for (let i = 0; i < menu_data.length; i++) {\n               if ((menu_data[i].abApplication.pages() || []).length > 0) {\n                  foundMenuEntry =\n                     this.sidebarMenuEntryByID(menu_data[i].abApplication.id) ||\n                     null;\n\n                  if (foundMenuEntry) break;\n               }\n            }\n         }\n\n         if (foundMenuEntry) {\n            $sideBar.select(foundMenuEntry.id);\n            this.selectApplication(foundMenuEntry.id);\n\n            const defaultPageID =\n               this.AppState.lastPages[foundMenuEntry.abApplication.id];\n\n            DefaultPage = foundMenuEntry.abApplication.pages(\n               (p) => p.id === defaultPageID\n            )[0];\n\n            if (!DefaultPage) {\n               // then just pick the first one:\n               DefaultPage = foundMenuEntry.abApplication.pages()[0];\n            }\n         }\n      }\n\n      //\n      // Step 3: Prime the content area with placeholders for ALL\n      // Root Pages\n      //\n      const allPlaceholders = [];\n\n      for (let i = 0; i < allApplications.length; i++) {\n         const pages = allApplications[i].pages() || [];\n\n         for (let j = 0; j < pages.length; j++) {\n            if (pages[j].getUserAccess?.() === 0) continue;\n\n            allPlaceholders.push({\n               id: this.pageID(pages[j]),\n               template: `Page: ${pages[j].label || pages[j].name}`,\n            });\n         }\n      }\n\n      if (allPlaceholders.length > 0)\n         this.AB.Webix.ui(\n            {\n               view: \"multiview\",\n               keepViews: true,\n               animate: false,\n               cells: allPlaceholders,\n            },\n            $$(\"abWorkPages\")\n         );\n\n      //\n      // Step 4: initialize the DefaultPage\n      // when it is finished we can show that page and emit \"ready\" to\n      // signal we can transition to the Work Portal\n      //\n      if (!this.App) {\n         // page.component() require a common {ABComponent.App}\n         this.App = new this.AB.Class.ABComponent(\n            null,\n            \"portal_work\",\n            this.AB\n         ).App;\n      }\n\n      if (DefaultPage) {\n         const container = new ClassUIPage(\n            this.pageID(DefaultPage),\n            DefaultPage,\n            this.App,\n            this.AB\n         );\n         const containerInit = async () => {\n            await container.init(this.AB, true);\n            this.showPage(DefaultPage);\n         };\n\n         this.pageContainers[DefaultPage.id] = container;\n         allInits.push(containerInit());\n      }\n      // let pUI = DefaultPage.component(this.App);\n\n      // webix.ui(pUI.ui, $$(this.pageID(DefaultPage)));\n      // pUI.init();\n      // pUI.onShow();\n      // this.showPage(DefaultPage);\n\n      //\n      // Step 5: initialize the remaining Pages\n      //\n      for (let i = 0; i < allApplications.length; i++) {\n         const pages = allApplications[i].pages() || [];\n\n         for (let j = 0; j < pages.length; j++) {\n            if (pages[j].getUserAccess?.() === 0) continue;\n\n            if (!DefaultPage || pages[j].id !== DefaultPage.id) {\n               const cont = new ClassUIPage(\n                  this.pageID(pages[j]),\n                  pages[j],\n                  this.App,\n                  this.AB\n               );\n\n               this.pageContainers[pages[j].id] = cont;\n\n               allInits.push(cont.init(this.AB));\n\n               // let comp = page.component(commonComp.App);\n               // webix.ui(comp.ui, $$(this.pageID(page)));\n               // comp.init();\n               // comp.onShow();\n            }\n         }\n      }\n\n      this.refreshSettingsMenu();\n      //\n      // Step 6: Initialize the Inbox Items\n      //\n      PortalWorkInbox.on(\"updated\", () => {\n         const count = PortalWorkInbox.count();\n         $$(\"inbox_icon\").define({ badge: count ? count : false });\n         $$(\"inbox_icon\").refresh();\n      });\n\n      await PortalWorkInbox.init(this.AB);\n\n      //\n      // Step 7: As well as the Inbox Task Window\n      //\n      allInits.push(PortalWorkInboxTaskWindow.init(this.AB));\n\n      // Network and Queued operations Alert\n      this.AB.Network.on(\"queued\", () => {\n         const count = this.AB.Network.queueCount();\n         if (count > 0) {\n            this.networkWarningDisplay(\"no_server\", count);\n         } else {\n            this.networkWarningClear(\"no_server\");\n         }\n      });\n      this.AB.Network.on(\"queue.synced\", () => {\n         this.networkWarningDisplay(\"no_server\", 0);\n         this.networkWarningClear(\"no_server\");\n      });\n\n      if (this.AB.Network.isNetworkSlow()) this.networkWarningDisplay(\"slow\");\n      this.AB.Network.on(\"networkslow\", (isSlow) => {\n         isSlow\n            ? this.networkWarningDisplay(\"slow\")\n            : this.networkWarningClear(\"slow\");\n      });\n\n      this.emit(\"ready\");\n\n      // !!! HACK: Leave this for James to figure out why Menu Title isn't proper\n      // size on initial loading.\n      setTimeout(() => {\n         $$(\"portal_work_menu_title\").resize();\n      }, 200);\n\n      // Now attempt to flush any pending network operations:\n      this.AB.Network._connectionCheck();\n\n      // Be sure our UI elements that don't respond to onAfterRender()\n      // have their cypress references set:\n      [\"portal_work_menu_pages\"].forEach((eid) => {\n         ClassUI.CYPRESS_REF($$(eid));\n      });\n\n      await Promise.all(allInits);\n   }\n\n   /**\n    * Display a network warning banner. Will not update if a higher priority\n    * warning is already active, but will save the state in case the active\n    * warning is cleared before this one. Can be called without a key to\n    * update/clear exisiting warnings.\n    * @param {string?} key\n    */\n   networkWarningDisplay(key, value) {\n      if (key) this.networkWarnings[key].active = true;\n      if (key && value) this.networkWarnings[key].value = value;\n\n      // get the highest priority active warning\n      let warning;\n      for (const k in this.networkWarnings) {\n         const entry = this.networkWarnings[k];\n         if (!entry.active || entry.disabled) continue;\n         if (!warning || warning.priority > entry.priority) {\n            warning = entry;\n         }\n      }\n      if (!warning) {\n         // No active warnings so hide the banner\n         $$(\"portal_work_network_warning\").hide();\n         return;\n      }\n      $$(\"portal_work_network_warning_label\").setValue(warning.label);\n      const button = $$(\"portal_work_network_warning_button\");\n      if (warning.click) {\n         button.define(\"click\", warning.click);\n         const buttonText = (warning.button ?? \"\").replaceAll(\n            \"#value#\",\n            warning.value\n         );\n         button.define(\"label\", buttonText);\n         button.refresh();\n         button.show();\n      } else {\n         button.hide();\n      }\n      warning.css\n         ? this.AB.Webix.html.addStyle(\n              `.warning_custom_css{${warning.css}}`,\n              \"warning_custom_css\"\n           )\n         : this.AB.Webix.html.removeStyle(\"warning_custom_css\");\n      $$(\"portal_work_network_warning\").show();\n   }\n   /**\n    * Clear a network warning\n    * @param {string} key\n    */\n   networkWarningClear(key) {\n      this.networkWarnings[key].active = false;\n      // Call this.networkWarningDisplay() again in case another warning is still active\n      this.networkWarningDisplay();\n   }\n\n   /**\n    * pageID()\n    * return a commone webix.id for a given ABViewPage\n    * @param {ABViewPage || string} page\n    *       An instance of ABViewPage, OR a string of the ABViewPage.id\n    * @return {string}\n    */\n   pageID(page) {\n      return `page_${page.id || page}`;\n   }\n\n   selectApplication(id) {\n      const row = $$(\"abSidebarMenu\").getItem(id);\n\n      const pageButtons = [];\n      // {array}\n      // the webix menu buttons for each Page\n\n      let firstPage = true;\n      // {bool} firstPage\n      // should we choose the 1st page as being the active page?\n\n      let activePageID = null;\n      // {string}\n      // The ABViewPage.id of the active Page for the current Application.\n      if (this.AppState.lastSelectedApp != row.abApplication.id) {\n         // remember the current Application has been selected\n         this.AppState.lastSelectedApp = row.abApplication.id;\n         this.saveState();\n         // Need to Settings Menu if different for each app\n         this.refreshSettingsMenu();\n      }\n\n      // if the current Application already has an Active State Page marked\n      // we don't want the first page:\n      activePageID = this.AppState.lastPages[row.abApplication.id];\n      if (activePageID) {\n         firstPage = false;\n      }\n\n      // Build a Menu Button for each of the ABApplication Root Pages\n      (row.abApplication.pages() || []).forEach((p) => {\n         if (p.getUserAccess?.() == 0) return;\n         // Decide if current Page button should look selected.\n         let active = \"\";\n         if (firstPage || p.id == activePageID) {\n            active = \"activePage\";\n            firstPage = false;\n\n            // remember this one\n            this.AppState.lastPages[row.abApplication.id] = p.id;\n         }\n\n         let pbLabel = p.label;\n         if (\"function\" === typeof p.label) {\n            pbLabel = p.label();\n         }\n         pageButtons.push({\n            view: \"button\",\n            css: active,\n            type: \"icon\",\n            label: pbLabel,\n            autowidth: true,\n            icon: `fa fa-${p.icon}`,\n            abPage: p,\n            click: (item) => {\n               // when button is clicked, update the selected look\n               const pageButton = $$(item);\n\n               // Remove any other \"activePage\" entries\n               $$(\"portal_work_menu_pages\")\n                  .queryView(\n                     {\n                        css: \"activePage\",\n                     },\n                     \"all\"\n                  )\n                  .forEach((p) => {\n                     if (p != pageButton) {\n                        p.define(\"css\", \"\");\n                        p.$view.classList.remove(\"activePage\");\n                     }\n                  });\n\n               // make sure this one is marked\n               pageButton.define(\"css\", \"activePage\");\n               pageButton.$view.classList.add(\"activePage\");\n\n               // now trigger the page to display:\n               this.showPage(pageButton.data.abPage);\n            },\n            on: {\n               onAfterRender() {\n                  ClassUI.CYPRESS_REF(this, p.id);\n               },\n            },\n         });\n      });\n      webix.ui(pageButtons, $$(\"portal_work_menu_pages\"));\n\n      $$(\"portal_work_menu_title\").setValue(row.value);\n      $$(\"portal_work_menu_title\").resize();\n\n      // now everything is displayed\n      // default initial display to current activePage:\n      let selectedPage = null;\n      $$(\"portal_work_menu_pages\")\n         .queryView(\n            {\n               css: \"activePage\",\n            },\n            \"all\"\n         )\n         .forEach((p) => {\n            selectedPage = p;\n         });\n      this.showPage(selectedPage?.data?.abPage);\n\n      // hide the sidebar menu\n      const sideBar = $$(\"navSidebar\");\n      if (sideBar.isVisible()) {\n         sideBar.hide();\n      }\n   }\n\n   /**\n    * saveState()\n    * trigger a save of our current AppState.\n    * NOTE: we delay this so we can catch multiple saves in a short period\n    * of time.\n    */\n   saveState() {\n      if (this._saveTimeoutID) {\n         clearTimeout(this._saveTimeoutID);\n      }\n      this._saveTimeoutID = setTimeout(() => {\n         this.AB.Storage.set(this.storageKey, this.AppState);\n      }, 500);\n   }\n\n   show() {\n      $$(\"portal_work\").show();\n   }\n\n   showPage(page) {\n      // this could be a subpage\n      const pageUI = this.pageContainers[page?.id];\n\n      if (pageUI) {\n         pageUI.show();\n         this.AppState.lastPages[page.application.id] = page.id;\n         this.saveState();\n      }\n   }\n\n   /**\n    * @method sidebarMenuEntryByID()\n    * returns the sidebar menu entry that matches the given {menuID}\n    * @param {string|uuid} menuID\n    * @return {obj}\n    */\n   sidebarMenuEntryByID(menuID) {\n      const $sideBar = $$(\"abSidebarMenu\");\n\n      let foundMenuEntry = null;\n\n      if ($sideBar) {\n         // search the Menu entries to see which one matches our\n         // stored AppState\n\n         let id = $sideBar.getFirstId();\n         while (!foundMenuEntry && id) {\n            let entry = $sideBar.getItem(id);\n            if (entry.abApplication.id == menuID) {\n               foundMenuEntry = entry;\n            }\n            id = $sideBar.getNextId(id);\n         }\n      }\n\n      return foundMenuEntry;\n   }\n\n   sidebarResize() {\n      const sidebarMenu = $$(\"abSidebarMenu\");\n      const sideBarHeight = sidebarMenu.count() * 45 + 1;\n\n      sidebarMenu.define(\"height\", sideBarHeight);\n      sidebarMenu.resize();\n      // $$(\"abNavSidebarScrollView\").resize(true);\n   }\n\n   /**\n    * generate the Webix definition for a menu entry given the ABApplication\n    * the menu entry should represent.\n    * @param {ABApplication} app\n    * @return {obj} Webix.ui definition.\n    */\n   uiSideBarMenuEntry(app) {\n      return {\n         id: app.id,\n         icon: `fa ${app.icon}`,\n         value: app.label || app.name,\n         abApplication: app,\n         // This is never called:\n         // on: {\n         //    onAfterRender() {\n         //       debugger;\n         //       ClassUI.CYPRESS_REF(this, app.id);\n         //    },\n         // },\n      };\n   }\n\n   refreshSettingsMenu() {\n      const { uuid, roles } = this.AB.Config.userConfig();\n      const application = this.AB.applicationByID(\n         this.AppState.lastSelectedApp\n      );\n      const settingsMenuOptions = [];\n\n      if (!application) return $$(\"settings_icon\").hide();\n      if (application.isAccessManaged) {\n         let isManager = false;\n         if (\n            application.accessManagers.useAccount == \"1\" &&\n            application.accessManagers.account.indexOf(uuid) > -1\n         ) {\n            isManager = true;\n         }\n         if (!isManager && application.accessManagers.useRole == \"1\") {\n            roles.forEach((role) => {\n               if (application.accessManagers.role.indexOf(role.uuid) > -1) {\n                  isManager = true;\n               }\n            });\n         }\n         if (isManager) {\n            settingsMenuOptions.push({\n               id: \"accessLevel\",\n               label: this.label(\"Access Manager\"),\n               icon: \"lock\",\n            });\n         }\n      }\n      if (application.isTranslationManaged) {\n         let isManager = false;\n         if (\n            application.translationManagers.useAccount == \"1\" &&\n            application.translationManagers.account.indexOf(uuid) > -1\n         ) {\n            isManager = true;\n         }\n         if (!isManager && application.translationManagers.useRole == \"1\") {\n            roles.forEach((role) => {\n               if (\n                  application.translationManagers.role.indexOf(role.uuid) > -1\n               ) {\n                  isManager = true;\n               }\n            });\n         }\n         if (isManager) {\n            settingsMenuOptions.push({\n               id: \"translation\",\n               label: this.label(\"Translation Tool\"),\n               icon: \"language\",\n            });\n         }\n      }\n      if (application.isTutorialManaged) {\n         let isManager = false;\n         if (\n            application.tutorialManagers.useAccount == \"1\" &&\n            application.tutorialManagers.account.indexOf(uuid) > -1\n         ) {\n            isManager = true;\n         }\n         if (!isManager && application.tutorialManagers.useRole == \"1\") {\n            roles.forEach((role) => {\n               if (application.tutorialManagers.role.indexOf(role.uuid) > -1) {\n                  isManager = true;\n               }\n            });\n         }\n         if (isManager) {\n            settingsMenuOptions.push({\n               id: \"tutorial\",\n               label: this.label(\"Tutorial Manager\"),\n               icon: \"info-circle\",\n            });\n         }\n      }\n\n      if (settingsMenuOptions.length < 1) return $$(\"settings_icon\").hide();\n\n      $$(\"settings_icon\").show();\n\n      webix.ui({\n         view: \"popup\",\n         id: \"settingsMenu\",\n         width: 150,\n         body: {\n            view: \"list\",\n            data: settingsMenuOptions,\n            template: \"<i class='fa-fw fa fa-#icon#'></i> #label#\",\n            autoheight: true,\n            select: true,\n            on: {\n               onItemClick: (id /*, event */) => {\n                  switch (id) {\n                     case \"accessLevel\":\n                        PortalAccessLevelManager.init(this);\n                        PortalAccessLevelManager.show();\n                        break;\n                     case \"translation\":\n                        TranslationTool.init(this);\n                        TranslationTool.show();\n                        break;\n                     case \"tutorial\":\n                        TutorialManager.init(this);\n                        TutorialManager.show();\n                        break;\n                     default:\n                        //eslint-disable-next-line\n                        const item = settingsMenuOptions.filter(\n                           (o) => o.id == id\n                        )[0];\n                        webix.message(\n                           `<b>Not yet implemented</b><br/>\n                           Menu item:<i>${item.label}</i><br/>\n                           Menu ID:<i>${item.id}</i>`\n                        );\n                  }\n                  $$(\"settingsMenu\").hide();\n               },\n\n               onAfterRender() {\n                  this.data.each((a) => {\n                     ClassUI.CYPRESS_REF(this.getItemNode(a.id), a.id);\n                  });\n               },\n            },\n         },\n      });\n   }\n}\n\nexport default new PortalWork();\n","import ClassUI from \"./ClassUI.js\";\nimport PortalLoading from \"./portal_loading.js\";\nimport PortalAuth from \"./portal_auth.js\";\nimport PortalWork from \"./portal_work.js\";\n\nclass Portal extends ClassUI {\n   constructor() {\n      super();\n\n      this.ShownPortal = null;\n      // {UI.Portal} ShownPortal\n      // Keep track of which Portal is currently shown.\n\n      this.portalWorkReady = false;\n      // {bool}\n      // has the PortalWork UI emitted it's \"ready\" event?\n      //\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         fullscreen: true,\n         modal: true,\n         body: {\n            id: \"portal\",\n            view: \"multiview\",\n            keepViews: true,\n            animate: false,\n            rows: [PortalLoading.ui(), PortalAuth.ui(), PortalWork.ui()],\n         },\n      };\n   }\n\n   init(AB) {\n      this.AB = AB;\n\n      this.AB.on(\"portal.show\", (key) => {\n         this.showPortal(key);\n      });\n\n      var allInits = [];\n      // {array} allInits\n      // all the .init() {Promise}s that are being generated during our\n      // init().\n\n      allInits.push(PortalAuth.init(AB));\n\n      // if we are authenticated, then we make sure our loading & work portals\n      // are prepared.\n      if (this.AB.Account.isAuthenticated) {\n         // Setup our listeners BEFORE the .init()s\n         this.AB.Account.on(\"logout\", (data) => {\n            if (data?.redirect) {\n               // if we pass a redirect link follow it\n               window.document.location.href = data?.redirect;\n            } else {\n               // on logout show Auth Portal\n               this.showAuthPortal();\n            }\n         });\n\n         this.AB.Network.on(\"reauth\", () => {\n            // on logout show Auth Portal\n            this.showAuthPortal();\n         });\n\n         PortalWork.on(\"ready\", () => {\n            this.portalWorkReady = true;\n            this.showDefaultView();\n         });\n\n         // Now trigger our other .init()s\n         allInits.push(PortalLoading.init(AB));\n         allInits.push(PortalWork.init(AB));\n      }\n\n      return Promise.all(allInits).then(() => {\n         this.showDefaultView();\n      });\n   }\n\n   showAuthPortal(defaultView) {\n      if (this.ShownPortal != PortalAuth) {\n         PortalAuth.show(defaultView);\n         this.ShownPortal = PortalAuth;\n      }\n   }\n\n   showWorkPortal() {\n      if (this.portalWorkReady) {\n         if (this.ShownPortal != PortalWork) {\n            // when loading portal is done move to Work Portal\n            PortalWork.show();\n            this.ShownPortal = PortalWork;\n         }\n      } else {\n         if (!this.ShownPortal) {\n            // if we haven't already shown a portal ... show the loading\n            PortalLoading.show();\n         }\n      }\n   }\n\n   showDefaultView() {\n      // At this point, all inits() are complete\n\n      // if authenticated then show our default view:\n      if (this.AB.Account.isAuthenticated) {\n         // do we have a specified defaultView?\n         let defaultView = this.AB.Config.setting(\"view\");\n         if (defaultView) {\n            // defaultView should be in form:\n            //    \"auth_login_form\",\n            //    \"auth_login_passwordReset\",\n            //    \"work\"\n            var parts = defaultView.split(\"_\");\n            this.showPortal(parts[0], defaultView);\n         } else {\n            // then default to our work view:\n            if (this.portalWorkReady) {\n               this.showWorkPortal();\n            } else {\n               if (!this.ShownPortal) {\n                  // if we haven't already shown a portal ... show the loading\n                  PortalLoading.show();\n               }\n            }\n         }\n      } else {\n         this.showAuthPortal();\n      }\n   }\n\n   showPortal(key, defaultView) {\n      switch (key) {\n         case \"auth\":\n            this.showAuthPortal(defaultView);\n            break;\n\n         case \"work\":\n            this.showWorkPortal();\n            break;\n      }\n   }\n}\n\nexport default new Portal();\n","import ClassUI from \"./ClassUI.js\";\nimport Portal from \"./portal.js\";\n\nclass UI extends ClassUI {\n   constructor() {\n      super();\n\n      this.hiddenElements = [];\n   }\n\n   ui() {\n      return {\n         id: \"labelClickToEnter\",\n         view: \"label\",\n         label: \"Hello\",\n         on: {\n            onItemClick: (/* id, e */) => {\n               this.portalShow();\n            },\n         },\n      };\n   }\n\n   init(AB) {\n      this.AB = AB;\n      var entryLabel = this.AB.Tenant.textClickToEnter;\n      if (entryLabel) {\n         $$(\"labelClickToEnter\").define({\n            label: entryLabel,\n         });\n      }\n\n      // by not sending an id param, this creates it's own div.\n      this.popup = Portal.attach();\n\n      // AB.on(\"error\", (error) => {\n      //    console.error(\"ui.on(error): \", error);\n      // });\n\n      return Portal.init(AB).then(() => {\n         if (this.AB.Config.setting(\"autoenter\")) {\n            this.portalShow();\n         } else {\n            this.portalHide();\n         }\n      });\n   }\n\n   portalHide() {\n      // show our link to enter\n      this.popup.hide();\n   }\n\n   portalShow() {\n      // show our portal\n      this.popup.show();\n   }\n}\n\nexport default new UI();\n","import ClassUI from \"./ClassUI.js\";\n\nimport Switcheroo from \"./portal_work_user_switcheroo.js\";\n\nclass ErrorNoDefsUI extends ClassUI {\n   ui() {\n      const L = (...params) => {\n         return this.label(...params);\n      };\n      return {\n         rows: [\n            {\n               id: \"switched\",\n               height: 23,\n               css: \"portal_work_switcheroo_user_switched\",\n               hidden: true,\n               cols: [\n                  {\n                     width: 5,\n                  },\n                  {\n                     id: \"switched_label\",\n                     view: \"label\",\n                     align: \"center\",\n                  },\n                  {\n                     view: \"button\",\n                     value: '<div style=\"text-align: center; font-size: 12px; color:#FFFFFF\"><i class=\"fa-fw fa fa-times\"></i></div>',\n                     align: \"center\",\n                     width: 30,\n                     css: \"webix_transparent\",\n                     on: {\n                        onItemClick: () => {\n                           Switcheroo.init(this.AB, true);\n                           Switcheroo.switcherooClear();\n                           $$(\"switched\").hide();\n                        },\n                     },\n                  },\n                  {\n                     width: 5,\n                  },\n               ],\n            },\n            {\n               id: \"error_no_defs\",\n               css: \"portalLogin\",\n               cols: [\n                  {},\n                  {\n                     rows: [\n                        {},\n                        {\n                           width: 360,\n                           height: 200,\n                           rows: [\n                              {\n                                 css: \"portalLoginForm\",\n                                 padding: 30,\n                                 rows: [\n                                    {\n                                       id: \"error_no_defs_text\",\n                                       template: `<div style='text-align: center; font-size:14px;'>\n                                       ${L(\n                                          \"You don't have any Roles in the system defined.  Talk to an Administrator.\"\n                                       )}\n                                    </div>`,\n                                       borderless: true,\n                                    },\n                                 ],\n                              },\n                           ],\n                        },\n                        {},\n                     ],\n                  },\n                  {},\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   switcherooUser(user) {\n      const L = (...params) => {\n         return this.label(...params);\n      };\n      $$(\"switched\").show();\n      $$(\"switched_label\").setValue(\n         L('*You are viewing this site as \"{0}\"*', [this.AB.Account.username()])\n      );\n   }\n\n   preloadMessage(text) {\n      $$(\"error_no_defs_text\").setValues({ text });\n   }\n   destroy() {\n      $$(\"error_no_defs\").destructor();\n   }\n}\n\nexport default new ErrorNoDefsUI();\n","/*\n * Bootstrap.js\n * This file drives the setup and preparation of the Web Platform.\n * It's main job is to prepare all the local Resources for operation as\n * well the main ABFactory object that will drive the rest of the applications.\n */\n\nimport events from \"events\";\n\nconst EventEmitter = events.EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nimport initConfig from \"../init/initConfig.js\";\nimport initConnectListerner from \"../init/initConnectListerner.js\";\nimport initDiv from \"../init/initDiv.js\";\nimport initDefinitions from \"../init/initDefinitions.js\";\nimport initUser from \"../init/initUser.js\";\n// import initResources from \"../init/initResources.js\";\n\n// import JSZipUtils from \"jszip-utils/dist/jszip-utils.min.js\";\n\nimport Selectivity from \"../js/selectivity/selectivity.min.js\";\nimport selectivityCSS from \"../js/selectivity/selectivity.min.css\";\n\nimport UI from \"../ui/ui.js\";\nimport ErrorNoDefsUI from \"../ui/error_noDefs.js\";\n\nimport performance from \"../utils/performance.js\";\n\nclass Bootstrap extends EventEmitter {\n   constructor(definitions) {\n      super();\n      this.setMaxListeners(0);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // UI Related\n      //\n\n      this._div = null;\n      // {el} _div\n      // the HTML element that is the where our initial [click] here button\n      // should be displayed.  Our actual portal is a popup, but the base\n      // <div> can be used for an embedded view.\n\n      this._plugins = [];\n      // {array} ._plugins\n      // an array of the loaded plugins we need to register.\n\n      this._ui = null;\n      // {obj} ._ui\n      // the Webix Object that is our UI display\n\n      this.on(\"error\", (err) => {\n         performance.error(err);\n      });\n   }\n\n   async init(ab) {\n      // We rerun init after a sucessful login, at that point we already have AB.\n      // This means we can use `AB.Network` over the fetch API when loading\n      // config again. This prevents the session from being reset, which was\n      // happening inconsitently.\n      if (ab) this.AB = ab;\n\n      const loadABFactory = import(\n         /* webpackChunkName: \"AB\" */\n         /* webpackPrefetch: true */\n         \"../AppBuilder/ABFactory\"\n      );\n      // @const {Promise} loadABFactory Defer loading the ABFactory for a smaller\n      // inital file size, allowing us to show the loading UI sooner.\n      /**\n       * @type {Function} preloadMessage\n       * @description show a loading message\n       * @param {string} message to display on the loading screen\n       */\n      const preloadMessage = (m) =>\n         (document.getElementById(\"preload-text\").innerHTML = m);\n      /**\n       * @type {Function}\n       * @description remove the preload ui elements\n       */\n      const destroyPreloadUI = () =>\n         document.getElementById(\"preloader\").remove();\n\n      const networkTestWorker = new Worker(\n         new URL(\"../utils/networkTest.js\", import.meta.url)\n      );\n      let networkIsSlow = false;\n      networkTestWorker.onmessage = ({ data }) => {\n         if (networkIsSlow !== data) {\n            networkIsSlow = data;\n            const $uiWarning = document.getElementById(\n               \"preload_network_warning\"\n            );\n            $uiWarning.hidden = !networkIsSlow;\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: networkIsSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n\n      preloadMessage(\"Waiting for the API Server\");\n\n      performance.mark(\"bootstrap\", { op: \"function\" });\n      // on the web platform, we need to gather the appropriate configuration\n      // information before we can show the UI\n      // 1) Find or create the DIV element our UI is to attach to\n      //    this DIV element can contain settings pertainent to our setup\n      performance.mark(\"initDiv\", { op: \"ui.render\" });\n      await initDiv.init(this);\n      performance.measure(\"initDiv\");\n\n      // 2) Request the User's Configuration Information from the server.\n      performance.mark(\"initConfig\", { op: \"function\" });\n      preloadMessage(\"Getting Configuration Settings\");\n      await initConfig.init(this);\n      performance.measure(\"initConfig\");\n\n      await initUser.init(this);\n      const userInfo = Config.userConfig();\n\n      if (userInfo) {\n         // load definitions for current user\n         performance.setContext(\"user\", {\n            id: userInfo.id,\n         });\n      }\n      // 2.5) Load any plugins\n      performance.mark(\"loadPlugins\", { op: \"function\" });\n\n      // Plugins are now loaded via the Preloader and stored in\n      (window.__AB_Plugins || []).forEach((p) => {\n         this.addPlugin(p);\n      });\n      performance.measure(\"loadPlugins\");\n\n      // Make sure the BootStrap Object is available globally\n      // window.__ABBS = this;\n      /*\n      // Listen 'disconnect' event\n      initConnectListerner.init(this);\n\n      const allPluginsLoaded = [];\n      const tenantInfo = Config.tenantConfig();\n\n      if (tenantInfo) {\n         performance.setContext(\"tenant\", tenantInfo);\n         performance.setContext(\"tags\", { tenant: tenantInfo.id });\n         const plugins = Config.plugins() || [];\n\n         // Short Term Fix: Don't load ABDesigner for non builders (need a way\n         // to assign plugins to users/roles);\n         const designerIndex = plugins.indexOf(\"ABDesigner.js\");\n         if (designerIndex > -1) {\n            const builderRoles = [\n               \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\",\n               \"e1be4d22-1d00-4c34-b205-ef84b8334b19\",\n            ];\n            const userBuilderRoles = userInfo?.roles.filter(\n               (role) => builderRoles.indexOf(role.uuid) > -1\n            ).length;\n            // Remove if no builder roles\n            if (userBuilderRoles < 1 || userInfo == null) {\n               plugins.splice(designerIndex, 1);\n            }\n         }\n         plugins.forEach((p) => {\n            preloadMessage(`plugin (${p})`);\n            performance.mark(`plugin:${p}`, { op: \"resource.script\" });\n            const loading = loadScript(tenantInfo.id, p).then(() =>\n               performance.measure(`plugin:${p}`)\n            );\n            allPluginsLoaded.push(loading);\n         });\n      }\n      const pluginsLoading = Promise.all(allPluginsLoaded).then(() =>\n         performance.measure(\"loadPlugins\")\n      );\n*/\n\n      // 3) Now we have enough info, to create an instance of our\n      //    {ABFactory} that drives the rest of the AppBuilder objects\n      performance.mark(\"createABFactory\", { op: \"function\" });\n      preloadMessage(\"Starting AppBuilder\");\n\n      const { default: ABFactory } = await loadABFactory;\n      let definitions = Config.definitions() || null;\n\n      if (definitions) {\n         // NOTE: when loading up an unauthorized user,\n         // definitions will be null: we can skip the plugins\n         // Q: is it possible to load a plugin when unauthorized?\n         this._plugins.forEach((p) => {\n            definitions = definitions.concat(p.definitions());\n         });\n      }\n      this.AB = new ABFactory(definitions);\n\n      if (!window.AB) window.AB = this.AB;\n      // Make our Factory Global.\n      // Transition: we still have some UI code that depends on accessing\n      // our Factory as a Global var.  So until those are rewritten we will\n      // make our factory Global.\n      this.AB.Network.registerNetworkTestWorker(\n         networkTestWorker,\n         networkIsSlow\n      );\n      await this.AB.init();\n      // NOTE: special case: User has no Roles defined.\n      // direct them to our special ErrorNoDefsUI\n      if (userInfo && userInfo.roles.length == 0) {\n         performance.measure(\"createABFactory\");\n         ErrorNoDefsUI.init(this.AB);\n         ErrorNoDefsUI.attach();\n         if (Config.userReal()) {\n            ErrorNoDefsUI.switcherooUser(Config.userConfig());\n         }\n         destroyPreloadUI();\n         this.ui(ErrorNoDefsUI);\n\n         let err = new Error(\"No Definitions\");\n         err.code = \"ENODEFS\";\n         throw err;\n      }\n\n      // 3.5  prepare the plugins\n      this._plugins.forEach((p) => {\n         p.apply(this.AB);\n         const labels = p.labels(this.AB.Multilingual.currentLanguage());\n         this.AB.Multilingual.pluginLoadLabels(p.key, labels);\n      });\n      performance.measure(\"createABFactory\");\n\n      // 4) Now we can create the UI and send it the {ABFactory}\n      performance.mark(\"initUI\", { op: \"ui.render\" });\n      // webix recommends wrapping any webix code in the .ready()\n      // function that executes after page loading.\n      webix.ready(() => {\n         const locales = {\n            en: \"en-US\",\n            \"zh-hans\": \"zh-CN\",\n            th: \"th-TH\",\n         };\n         // locales - map ab languageCode to webix locale\n         const { languageCode } = AB.Config.userConfig() ?? {};\n         // save the webix locale used to set locale in ClassUIPage.renderPage()\n         window.webixLocale =\n            Object.prototype.hasOwnProperty.call(locales, languageCode) &&\n            Object.prototype.hasOwnProperty.call(\n               webix.i18n.locales,\n               locales[languageCode]\n            )\n               ? locales[languageCode]\n               : false;\n\n         // webix pro offers a feature that hides scroll bars by\n         // default for browsers that include them due to the user's\n         // UI. The experience becomes more like a touch interface\n         // with the exception that scroll bars appear when user\n         // hovers over a scrollable area\n         /* if (!Webix.env.touch  && Webix.env.scrollSize ) */\n         webix.CustomScroll.init();\n\n         const div = this.div();\n\n         UI.attach(div.id);\n         destroyPreloadUI();\n         this.ui(UI);\n         this.ui()\n            .init(this.AB)\n            .then(() => {\n               performance.measure(\"initUI\");\n               performance.measure(\"bootstrap\");\n            });\n         // this.ui().init() routine handles the remaining\n         // bootup/display process.\n      });\n   }\n\n   addPlugin(plugin) {\n      this._plugins.push(plugin);\n   }\n\n   alert(options) {\n      webix.alert(options);\n   }\n\n   div(el) {\n      if (el) {\n         this._div = el;\n         return;\n      }\n      return this._div;\n   }\n\n   error(...params) {\n      console.error(...params);\n      let message = params[0];\n      this.emit(message);\n   }\n\n   ui(UI) {\n      if (UI) {\n         this._ui = UI;\n         return;\n      }\n      return this._ui;\n   }\n}\n\nexport default new Bootstrap();\n\nfunction loadScript(tenant, p) {\n   return new Promise((resolve, reject) => {\n      const cb = () => resolve();\n\n      // Adding the script tag to the head as suggested before\n      const head = document.head;\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `/plugin/${tenant || \"??\"}/${p}`;\n\n      // Then bind the event to the callback function.\n      // There are several events for cross browser compatibility.\n      script.onreadystatechange = cb;\n      script.onload = cb;\n      script.onerror = () => {\n         reject(new Error(`Error loading plugin ${p}`));\n      };\n\n      // Fire the loading\n      head.appendChild(script);\n   });\n}\n","/*\n * initDiv.js\n * find or create an initial <div> for our Appbuilder portal\n */\nexport default {\n   init: (BS) => {\n      // BS {Bootstrap}\n      // The initial Bootstrap object found in \"./Bootstrap.js\"\n\n      return new Promise((resolve, reject) => {\n         // find our initial <div appbuilder-portal=\"default\" /> tag\n         var div = document.querySelector(\"div[appbuilder-portal]\");\n         if (!div) {\n            div = document.createElement(\"Div\");\n            div.setAttribute(\"appbuilder-portal-autoenter\", \"true\");\n            div.setAttribute(\"appbuilder-portal-fullscreen\", \"true\");\n            document.getElementsByTagName(\"body\")[0].appendChild(div);\n         }\n         // let loading = document.createElement(\"Div\");\n         // loading.style.justifyContent = \"center\";\n         // loading.style.alignItems = \"center\";\n         // loading.style.display = \"flex\";\n         // loading.style.height = \"100vh\";\n         // loading.style.width = \"100%\";\n         // loading.style.position = \"absolute\";\n         // loading.style.top = \"0\";\n         // loading.style.left = \"0\";\n         // // loading.style.animation = \"spinning 1s ease infinite\";\n         //\n         // loading.innerHTML = `<svg style=\"opacity: 0.6; animation: spinning 1s ease infinite; width: 25px; height: 25px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.2.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M304 48c0-26.5-21.5-48-48-48s-48 21.5-48 48s21.5 48 48 48s48-21.5 48-48zm0 416c0-26.5-21.5-48-48-48s-48 21.5-48 48s21.5 48 48 48s48-21.5 48-48zM48 304c26.5 0 48-21.5 48-48s-21.5-48-48-48s-48 21.5-48 48s21.5 48 48 48zm464-48c0-26.5-21.5-48-48-48s-48 21.5-48 48s21.5 48 48 48s48-21.5 48-48zM142.9 437c18.7-18.7 18.7-49.1 0-67.9s-49.1-18.7-67.9 0s-18.7 49.1 0 67.9s49.1 18.7 67.9 0zm0-294.2c18.7-18.7 18.7-49.1 0-67.9S93.7 56.2 75 75s-18.7 49.1 0 67.9s49.1 18.7 67.9 0zM369.1 437c18.7 18.7 49.1 18.7 67.9 0s18.7-49.1 0-67.9s-49.1-18.7-67.9 0s-18.7 49.1 0 67.9z\"/></svg>`;\n         // document.getElementsByTagName(\"body\")[0].appendChild(loading);\n         // const css = window.document.styleSheets[0];\n         // css.insertRule(\n         //    `@keyframes spinning {\n         //          0%   { transform: rotate(0deg); }\n         //          100% { transform: rotate(360deg); }\n         //    }`,\n         //    css.cssRules.length\n         // );\n         // make sure there is a div.id set:\n         if (!div.id) {\n            div.id = \"AppBuilder\";\n         }\n         BS.div(div);\n         BS.Config.settingsFromDiv(div); // set the autoEnter config\n         resolve();\n      });\n   },\n};\n","export default {\n   init: async (BS) => {\n      // BS {Bootstrap}\n      // The initial Bootstrap object found in \"./Bootstrap.js\"\n      try {\n         let configData = window.__AB_Config;\n         // Use `AB.Network` if available\n         // if (BS.AB) {\n         //    configData = await BS.AB.Network.get(\n         //       { url: \"/config\" },\n         //       { key: \"init_config\" }\n         //    );\n         // } else {\n         //    const headers = new Headers();\n         //    const token = BS.Config.setting(\"tenant\");\n         //    if (token) {\n         //       headers.append(\"tenant-token\", token);\n         //    }\n\n         //    //// DEV TESTING:\n         //    //// uncomment the api_sails/authTenant.js && index.ejs entries for these values\n         //    //// to test url prefix route resolutions:\n         //    // var prefix = AB.setting(\"prefix\");\n         //    // if (prefix) {\n         //    //    headers.append(\"Tenant-Test-Prefix\", prefix);\n         //    // }\n         //    //// DEV TESTING\n\n         //    const response = await fetch(\"/config\", { headers });\n         //    if (response.ok) {\n         //       const { data } = await response.json();\n         //       configData = data;\n         //    } else {\n         //       BS.error(`Error communicating with Server: ${response.status}`);\n         //    }\n         // }\n         // Hotfix 11/30/22, Since we no longer send settings on the div including in config.\n         BS.Config.settings(configData.settings);\n         delete configData.settings;\n         BS.Config.config(configData);\n      } catch (err) {\n         BS.error(\"initConfig: GET /config:\", err);\n         // HOTFIX: (12/15/2022) If the user visits /home directly /config is\n         // the first request made to sails and if we're not authenticated but\n         // using OKTA or CAS, we get a CORS error when trying to authenticate.\n         // Send the user to / to get authenticated correctly.\n         if (err.message == \"Failed to fetch\")\n            window.location.replace(window.location.origin);\n      }\n   },\n};\n","export default {\n   init: async (BS) => {\n      // BS {Bootstrap}\n      // The initial Bootstrap object found in \"./Bootstrap.js\"\n      try {\n         let configData = {\n            user: window.__AB_Config_User,\n            userReal: window.__AB_Config_User_real,\n         };\n         BS.Config.configUser(configData);\n      } catch (err) {\n         BS.error(\"initConfig: GET /config:\", err);\n         // HOTFIX: (12/15/2022) If the user visits /home directly /config is\n         // the first request made to sails and if we're not authenticated but\n         // using OKTA or CAS, we get a CORS error when trying to authenticate.\n         // Send the user to / to get authenticated correctly.\n         if (err.message == \"Failed to fetch\")\n            window.location.replace(window.location.origin);\n      }\n   },\n};\n","// Include all CSS here\nimport \"./styles/loader.css\";\nimport \"./js/webix/webix.css\";\nimport \"./js/webix/components/gantt/gantt.min.css\";\nimport \"./js/webix/components/reports/reports.min.css\";\nimport \"./js/webix/components/query/query.min.css\";\nimport \"./js/webix/components/scheduler/scheduler.min.css\";\nimport \"./js/webix/components/querybuilder/querybuilder.min.css\";\nimport \"./js/webix/components/hint/hint.css\";\nimport \"./styles/ui.css\";\n// NOTE: keep Font Awesome AFTER webix css so webix wont\n// override our icon stylesimport \"./styles/font-awesome.min.css\";\nimport \"./styles/font-awesome.min.css\";\n\nimport performance from \"./utils/performance\";\nperformance.init();\n\nimport Bootstrap from \"./init/Bootstrap.js\";\n// Bootstrap is responsible for initializing the platform.\n\n// Import webix dynamically so we load it before we load other files that need it\nimport(\n   /* webpackChunkName: \"webix\" */\n   /* webpackPreload: true */\n   \"./js/webix/webix.min.js\"\n).then(async (webix) => {\n   // Make sure webix is global object\n   window.webix = webix;\n   // Now load additional webix resources\n   import(\n      /* webpackChunkName: \"webix.resources\" */\n      /* webpackPreload: true */\n      \"./js/webix/webixResources\"\n   );\n\n   // __AB_preload should be created by our /config/preload script that gets\n   // loaded on the initial page load.\n   await window.__AB_preload;\n\n   Bootstrap.init().catch((err) => {\n      // This is a known error that has already been handled.\n      if (err.code == \"ENODEFS\") return;\n\n      var errorMSG = err.toString();\n\n      Bootstrap.alert({\n         type: \"alert-error\",\n         title: \"Error initializing Portal:\",\n         text: errorMSG,\n      });\n\n      Bootstrap.error(err);\n   });\n});\n","import { EventEmitter } from \"events\";\n\nclass ClassUI extends EventEmitter {\n   constructor(base, ids) {\n      super();\n\n      this.ids = {};\n      // {hash}\n      // An internal reference of webix.ids that we use to reference webix\n      // components.\n\n      // We can be called in several ways:\n      // 1) super(\"base_id\");\n      //    in this case we create a default this.ids.component = base_id;\n      //\n      // 2) super({ id1:\"id1\", id2:\"id2\", ... })\n      //    in this case we create a this.ids = base;\n      //    we look for a this.ids.base || or this.ids.component and use that\n      //    as our \"base\" reference.\n      //\n      // 3) super(base, ids);\n      //\n      if (base) {\n         if (\"string\" == typeof base) {\n            this.ids = {\n               component: base,\n            };\n         } else {\n            this.ids = base;\n            base = this.ids.base ?? this.ids.component;\n         }\n      }\n\n      // a shortcut way to enter the ids is to simply put the keys:\n      // {\n      //    form:\"\",\n      //    form_button:\"\",\n      //    ...\n      // }\n      // so we need to make sure the actual values are set according to\n      // `{base}_{key}` format.\n      //\n      if (ids) {\n         Object.keys(ids).forEach((k) => {\n            if (ids[k]) {\n               return (this.ids[k] = ids[k]);\n            }\n            this.ids[k] = `${base}_${k}`;\n         });\n      }\n\n      // verify this.ids are properly set:\n      Object.keys(this.ids).forEach((k) => {\n         this.ids[k] = this.ids[k] || `${base}_${k}`;\n      });\n\n      // and make sure there is a .component set:\n      this.ids.component = this.ids.component || base;\n   }\n\n   /**\n    * @method CYPRESS_REF()\n    * Attach a cypress \"data-cy\" attribute to the given element.  This is used\n    * for writing E2E tests and how we directly identify a webix widget we are\n    * referencing for our tests.\n    * @param {webix.object|webix.node|html.element} el\n    *        The element we are attempting to attach the data attribute to\n    *        There are a number of ways we might be sending this element\n    *        on a onAfterRender() callback on a Webix Object\n    *        by gathering the nodes of a Webix object directly\n    * @param {string} id\n    *        [optional] the value of the data-cy attribute\n    */\n   static CYPRESS_REF(el, id) {\n      if (!el) return;\n\n      id = id || el.config?.id;\n\n      // is this a webix object?\n      if (el.getInputNode) {\n         var node = el.getInputNode();\n         if (node) {\n            node.setAttribute(\"data-cy\", id);\n            return;\n         }\n      }\n\n      // this element has a webix $view\n      if (el.$view) {\n         el.$view.setAttribute(\"data-cy\", id);\n         return;\n      }\n\n      // this is probably a straight up DOM element:\n      el.setAttribute?.(\"data-cy\", id);\n   }\n\n   /**\n    * attach()\n    * cause this UI object to attach itself to a given DIV.ID\n    * of an existing HTML object.\n    * @param {string} id\n    *        the <DIV ID=\"id\"> value of the HTML element to display this UI\n    *        inside.\n    * @return {Webix View}\n    *        returns an instance of the Webix UI object generated by our\n    *        .ui() description.\n    */\n   attach(id) {\n      var ui = this.ui();\n      if (ui && id) {\n         ui.container = id;\n      }\n\n      this.el = webix.ui(ui);\n      return this.el;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   hide() {\n      if (this.ids?.component) {\n         $$(this.ids.component).hide();\n      }\n   }\n\n   label(key, ...params) {\n      if (this.AB) {\n         return this.AB.Multilingual.label(key, key, ...params);\n      }\n      console.error(\".labels() called before .AB was set!\");\n      return key;\n   }\n\n   /**\n    * ui()\n    * return a Webix user interface definition for this UI component.\n    * This should be just the json description, not an active instance.\n    * @return {obj}\n    */\n   ui() {\n      console.error(\n         \"ClassUI.ui(): it is expected that sub classes of ClassUI will implement their own ui() method.\"\n      );\n   }\n\n   show() {\n      if (this.ids?.component) {\n         $$(this.ids.component)?.show();\n      }\n   }\n\n   get WARNING_ICON() {\n      return `<span class=\"webix_sidebar_dir_icon webix_icon fa fa-warning pulseLight smalltext\"></span>`;\n   }\n\n   get WARNING_ICON_DARK() {\n      return this.WARNING_ICON.replace(\"pulseLight\", \"pulseDark\");\n   }\n}\n\nexport default ClassUI;\n","/**\n * Performance - utility to track performance of the web platform\n * Written initally for sentry, but could be extended to support others\n * tracking tools.\n * Also supports the User timing API for lighthouse / local dev\n */\n\nimport * as Sentry from \"@sentry/browser\";\n/* These come from the DefinePlugin in webpack  */\nlet webpackMode = \"development\";\nlet version, dsn;\ntry {\n   /* global WEBPACK_MODE SENTRY_DSN VERSION */\n   webpackMode = WEBPACK_MODE;\n   dsn = SENTRY_DSN;\n   version = VERSION;\n} catch (err) {\n   console.warn(\n      \"Error reading from webpack, check the DefinePlugin is working correctly\",\n      err\n   );\n}\n\nconst mode = dsn\n   ? \"sentry\"\n   : webpackMode === \"development\"\n   ? \"browser\"\n   : undefined;\n\n// Following are performance tracking sources, will be accessed through the\n// PerfomanceInterface\n\n/*\n * Default - performance tracking disabled\n */\nclass Performance {\n   init() {}\n   error() {}\n   mark() {}\n   measure() {}\n   notify(domain, error, info) {\n      console.groupCollapsed(`Notify ${domain}: ${error?.message ?? \"\"}`);\n      console.error(error);\n      console.log(\"info\", info);\n      console.groupEnd();\n   }\n   setContext() {}\n}\n\n/*\n * Sentry perfomance tracking\n */\nclass SentryPerformance extends Performance {\n   constructor() {\n      super();\n      this.childSpans = {};\n   }\n\n   init() {\n      Sentry.init({\n         dsn,\n         environment: webpackMode,\n         release: version,\n         integrations: [new Sentry.BrowserTracing()],\n         normalizeDepth: 5,\n         sampleRate: 0.05,\n         tracesSampleRate: 0.05,\n      });\n   }\n\n   error(err) {\n      Sentry.captureException(err);\n   }\n\n   mark(key, context = {}) {\n      context.name = key;\n      if (!this.mainSpan) {\n         this.mainSpanKey = key;\n         this.mainSpan = Sentry.startTransaction(context);\n      } else {\n         this.childSpans[key] = this.mainSpan.startChild(context);\n      }\n   }\n\n   measure(key) {\n      if (this.mainSpanKey === key) {\n         this.mainSpan.finish();\n         delete this.mainSpan;\n         delete this.mainSpanKey;\n         this.childSpans = {};\n      } else {\n         this.childSpans[key]?.finish?.();\n         delete this.childSpans[key];\n      }\n   }\n\n   notify(domain, error, info) {\n      const scope = new Sentry.Scope();\n      // Mark builder alerts as lower level in sentry\n      if (domain == \"builder\") scope.setLevel(\"warning\");\n      scope.setTag(\"domain\", domain);\n      scope.setContext(\"info\", info);\n      Sentry.captureException(error, scope);\n      // Also log to console:\n      super.notify(domain, error, info);\n   }\n\n   setContext(key, data) {\n      switch (key) {\n         case \"tags\":\n            Sentry.setTags(data);\n            break;\n         case \"user\":\n            Sentry.setUser(data);\n            break;\n         case \"breadcrumb\":\n            Sentry.addBreadcrumb(data);\n            break;\n         default:\n            Sentry.setContext(key, data);\n            break;\n      }\n   }\n}\n\n/*\n * Browser Performance tracking - uses the User Timing API\n */\nclass BrowserPerformnace extends Performance {\n   error(err) {\n      console.error(err);\n   }\n\n   mark(key, context) {\n      if (!this.mainSpanKey) {\n         this.mainSpanKey = key;\n      }\n      window.performance.mark(key, { detail: context });\n   }\n\n   measure(key) {\n      try {\n         const mark = window.performance.getEntriesByName(key, \"mark\")[0];\n         const measure = window.performance.measure(key, {\n            start: key,\n            detail: mark?.detail,\n         });\n         if (this.mainSpanKey === key) {\n            console.groupCollapsed(\n               `${measure.name} finished in ${measure.duration} ms`\n            );\n            const entries = window.performance.getEntriesByType(\"measure\");\n            if (entries.length > 1)\n               console.table(entries, [\"name\", \"duration\", \"startTime\"]);\n            else console.log(measure);\n            console.groupEnd();\n            delete this.mainSpanKey;\n            window.performance.clearMarks();\n            window.performance.clearMeasures();\n         }\n      } catch (e) {\n         // console.warn(e);\n      }\n   }\n}\n\n/**\n * hash of performance tracking sources\n */\nconst sources = {\n   sentry: SentryPerformance,\n   browser: BrowserPerformnace,\n};\n\n/**\n * Performance Interface that the rest of the app uses. Routes the calls to the\n * configured performance tracking source\n */\nclass PerformanceInterface {\n   constructor(mode) {\n      this.mode = mode;\n      this.initialized = false;\n      this._source = new (sources[mode] ?? Performance)();\n   }\n\n   /**\n    * initialize performance, should be called early in init\n    */\n   init() {\n      if (this.initialized) return;\n      this._source.init();\n      // console.log(\"Performance.init() complete\", mode);\n      this.initialized = true;\n   }\n\n   /**\n    * Capture an error\n    * @param {Error} error\n    */\n   error(err) {\n      this._source.error(err);\n   }\n\n   /**\n    * Start a performance tracking span. End by calling measure() with the same key.\n    * The first mark will be consider a parent, and subsequent marks become\n    * children until the initial mark is measured.\n    * @param {string} key unique key to track\n    * @param {object} [context] any additional context\n    */\n   mark(key, context) {\n      this._source.mark(key, context);\n   }\n\n   /**\n    * End a performance tracking span\n    * @param {string} key should match an existing mark\n    */\n   measure(key) {\n      this._source.measure(key);\n   }\n\n   /**\n    * Implements AB.notify which will log differently depending on our tracking\n    * option\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      this._source.notify(domain, error, info);\n   }\n\n   /**\n    * Set additional context to tracing/error events\n    * @param {string} key type of context (tag, user, etc)\n    * @pram {object} data\n    */\n   setContext(key, data) {\n      this._source.setContext(key, data);\n   }\n}\n\n// singleton\nlet performanceInterface;\n\n/**\n * Get/create the shared performance instance\n * @returns {PerformanceInterface}\n */\nfunction getPerformance() {\n   if (!performanceInterface)\n      performanceInterface = new PerformanceInterface(mode);\n   return performanceInterface;\n}\n\nexport default getPerformance();\n","__webpack_require__.O(0, [143], () => {\n\t__webpack_require__.E(480);\n\t__webpack_require__.E(944);\n}, 5);"],"names":["appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","settingsDefault","configDefaults","site","appbuilder","networkType","networkNumRetries","urlCoreServer","window","location","origin","storage","encrypted","constructor","this","_config","_configUser","_settings","config","json","Object","keys","forEach","k","defaultsDeep","configInbox","inbox","inboxMeta","configUser","setting","key","value","settingsFromDiv","div","d","val","getAttribute","split","pop","settings","definitions","error","console","labelConfig","labels","languageConfig","languages","metaConfig","meta","plugins","inboxConfig","inboxMetaConfig","siteConfig","tenantConfig","tenant","uiSettings","innerWidth","userConfig","user","userReal","PortalLoading","ClassUI","super","ui","id","view","label","init","AB","Promise","resolve","show","$$","PortalAuthLoginForm","self","L","Label","css","cols","rows","width","padding","template","borderless","height","type","background","elementsConfig","bottomPadding","elements","placeholder","name","attributes","validate","webix","rules","isEmail","invalidMessage","validateEvent","isNotEmpty","margin","paddingX","hotkey","click","form","hide","values","getValues","Network","post","url","data","catch","err","log","on","onAfterRender","hidden","emit","message","$errMsg","setHTML","context","response","code","status","reload","PortalAuthLoginResetPassword","Account","email","border","color","v","length","getValue","password","async","params","Multilingual","PortalAuthLoginResetRequest","autoheight","options","icon","autowidth","href","$tenant","Config","tenants","newOptions","t","opt","uuid","title","push","define","tID","Tenant","find","o","text","alert","ok","PortalAuthLogin","animate","allInits","all","defaultView","PortalAuth","ActivePortal","cells","then","pathname","performance","navigation","redirectCount","replace","ClassUIPage","containerID","page","App","initialized","pageStack","pageComponents","changePageEventIds","isRoot","render","showPage","myUI","application","datacollectionsIncluded","dc","renderPage","parView","getParentView","showBatch","initEvents","pageID","needToReloadPage","updatePageEventId","rootPageId","updateDatacollectionEventId","datacollectionId","webixLocale","setTimeout","i18n","setLocale","component","myContainer","popupTemplate","modal","position","resize","parseInt","popupWidth","popupHeight","head","align","button","queryView","dataCy","getInputNode","setAttribute","body","scroll","oldView","destructor","removeView","e","batch","oldPage","addView","pages","subpage","container","eventID","attachEvent","detachEvent","viewId","showPageID","activeID","activeUI","getChildViews","filter","onShow","Error","PortalWorkInboxAccordion","app","idUnitList","header","collapsed","uniteBy","templateHeader","headerHeight","obj","items","select","list","selectedItem","getItem","task","unitlist","src","formComponents","formData","onButton","processItem","each","a","getItemNode","notify","developer","info","unitID","parent","i","refresh","remove","getSelectedId","count","unitList","put","expand","initFormIOPreview","custom","formiopreview","PortalWorkInboxTaskwindow","idTaskMultiview","idTaskTitle","idTaskPager","state","left","maxWidth","top","maxHeight","unselectAll","size","group","master","onBeforePageChange","new_page","clearTask","views","taskHolder","index","setValue","blockEvent","getActiveId","unblockEvent","showTasks","selectedItemName","PortalWorkInbox","entries","processLookupHash","appLookupHash","appAccordionLists","multi","get","initDelayed","allAppAccordions","lang","language","createAccordian","addItem","processes","getProcessList","accordion","parse","item","createNew","definition","ids","appId","translate","appAccordion","p","process","uniteLabel","translations","entry","language_code","PortalWorkUserProfileWindow","imageUser","uploaderImage","formUserInfo","dataEmail","editModeEmail","buttonEditModeEmail","editModeButtonsEmail","dataLanguage","editModeLanguage","buttonEditModeLanguage","editModeButtonsLanguage","formNewPassword","fieldNewPassword","systemNotification","advanceOptions","acctImageID","imageID","imgTemplate","imgErrorDiv","onItemClick","zIndex","algin","inputName","apiOnly","multiple","accept","upload","objectUser","onFileUpload","$uploaderImage","$imageUser","disable","model","update","image_id","enable","onFileUploadError","inputWidth","$dataEmail","$editModeEmail","$buttonEditModeEmail","$editModeButtonsEmail","$dataLanguage","$editModeLanguage","$buttonEditModeLanguage","$editModeButtonsLanguage","getLanguages","languageCodeToWord","languageCode","$button","$advanceOptions","isVisible","$formNewPassword","$thisButton","clear","$systemNotification","sendEmailNotifications","Language","objectLanguage","findAll","language_label","$formUserInfo","populateLanguage","setValues","username","populate","myClass","userIcon","userName","switchBack","switchBackReplacer","close","switchUser","userID","headless","userList","delete","mainUserID","map","u","switchedUserID","isSwitcherood","PortalWorkUserQRWindow","classQrImageDom","$view","getElementsByClassName","onload","adjust","PortalWorkUserMobileQR","description","instructions","qrcode","taskPager","load","$title","$desc","$qrcode","PortalAccessLevelManager","accessLevels","accessLevelManagerBody","roles","newRolePopup","role","indexOf","buildAccessAccordion","collapse","portal","AppState","lastSelectedApp","translation","applicationByID","isAccessManaged","existingRoles","pageId","pageContainers","f","isRoleAccessManager","accessManagers","useRole","manageUsers","confirm","tree","mainPages","branch","access","updateAccessLevels","updateItem","itemToRemove","splice","toggleParent","element","parentElem","getParent","$parent","editable","editor","editValue","threeState","common","getAccessLevelTree","onClick","externalLink","event","target","tabView","tab","showIt","setInterval","clearInterval","onAfterEditStop","ignoreUpdate","old","onDataUpdate","eachSubItem","child","childData","parentBranch","getParentId","parentData","newAccordionItem","r","WARNING_ICON","Webix","TooltipControl","addTooltip","openAll","TreeCollection","addPage","parentId","accessLevel","add","defaults","subPages","childPage","childIndex","tabIndex","tabViewIndex","tIndex","PortalTranslationTool","containerDomID","translationToolBody","labelWidth","labelAlign","onChange","newVal","oldVal","buildTranslationAccordion","objectsIncluded","hintsIncluded","bottomLabel","languageList","ready","protoUI","EditAbility","tutorials","hints","objects","objectTree","tooltip","onAfterLoad","showProgress","extend","ProgressBar","getTranslationToolObjectsTree","propName","field","objectId","fieldId","objectByID","fields","option","languageDefault","hasLang","trans","save","progressBar","total","completed","viewTree","pageView","getTranslationToolViewsTree","order","buttonId","tutorialTree","getTranslationToolTutorialsTree","hint","h","step","hintId","_steps","objectsAccordionItem","viewsAccordionItem","hintsAccordionItem","getTranslations","domId","missingHint","missingTranslate","translateLang","hintLang","hintLabel","valueLabel","hintPrefix","translatePrefix","tabicon","labelIndex","menu","menuIndex","menuItem","menuItemIndex","formIndex","formInput","formInputIndex","property","chart","chartIndex","viewIndex","addBranch","object","fieldIndex","optionIndex","lastField","firstField","stepIDs","PortalTutorialManager","tutorialStepsManager","createStep","Array","isArray","stepUI","move","tutorialSettings","tutorialManagerBody","_hints","deleteHint","ev","result","hintID","destroy","fail","hintItem","steps","newTutorialPopup","lastPages","getText","trim","createTutorial","valid","disabled","el","active","currentTutorial","hasOwnProperty","getViewOptions","hintIDs","pageTabWindow","document","removeEventListener","handleRightClick","focusWindow","classList","updateStepsUI","viewsToRemove","addHighlightClass","currentTarget","formVals","stepId","querySelector","removeHighlightClass","addStepBelow","focusElements","querySelectorAll","addEventListener","class","moveStep","minWidth","deleteStep","stepRemove","direction","currPosition","addOption","depth","indent","pageIndex","viewID","viewLabel","hintNew","unshift","hintView","stepNew","preventDefault","stopPropagation","getCy","dataset","cy","parentElement","PortalWork","navSideBar","sidebarMenu","firstID","getFirstId","popup","onAfterSelect","selectApplication","storageKey","allApplications","applications","isWebApp","isAccessibleForRoles","rolesAll","concat","menu_data","uiSideBarMenuEntry","sidebarResize","userMenuOptions","isMobile","m","canSwitcheroo","networkWarnings","no_network","priority","no_server","_connectionCheck","slow","networkWarningClear","navigator","onLine","networkWarningDisplay","relay","logout","mobileApp","Storage","abApplication","getUserAccess","DefaultPage","$sideBar","foundMenuEntry","sidebarMenuEntryByID","defaultPageID","allPlaceholders","j","keepViews","Class","ABComponent","containerInit","cont","refreshSettingsMenu","badge","queueCount","isNetworkSlow","isSlow","eid","warning","buttonText","replaceAll","html","addStyle","removeStyle","row","pageButtons","firstPage","activePageID","saveState","pbLabel","abPage","pageButton","selectedPage","sideBar","_saveTimeoutID","clearTimeout","set","pageUI","menuID","getNextId","sideBarHeight","settingsMenuOptions","isManager","useAccount","account","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","Portal","ShownPortal","portalWorkReady","fullscreen","showPortal","isAuthenticated","redirect","showAuthPortal","showDefaultView","showWorkPortal","parts","UI","hiddenElements","portalShow","entryLabel","textClickToEnter","portalHide","ErrorNoDefsUI","switcherooUser","preloadMessage","EventEmitter","setMaxListeners","_div","_plugins","_ui","ab","loadABFactory","getElementById","innerHTML","destroyPreloadUI","networkTestWorker","Worker","URL","networkIsSlow","BS","onmessage","category","level","op","reject","createElement","getElementsByTagName","appendChild","configData","__AB_Config","initConfig","__AB_Config_User","__AB_Config_User_real","initUser","userInfo","__AB_Plugins","addPlugin","default","ABFactory","registerNetworkTestWorker","apply","currentLanguage","pluginLoadLabels","locales","en","th","prototype","call","CustomScroll","plugin","__AB_preload","errorMSG","toString","base","static","node","attach","changePage","WARNING_ICON_DARK","version","dsn","webpackMode","warn","mode","undefined","Performance","mark","measure","domain","groupCollapsed","groupEnd","setContext","sources","sentry","childSpans","environment","release","integrations","normalizeDepth","sampleRate","tracesSampleRate","mainSpan","startChild","mainSpanKey","finish","scope","setLevel","setTag","browser","detail","getEntriesByName","start","duration","getEntriesByType","table","clearMarks","clearMeasures","performanceInterface","_source","__webpack_require__","O","E"],"sourceRoot":""}