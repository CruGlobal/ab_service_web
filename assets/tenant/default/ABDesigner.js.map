{"version":3,"file":"ABDesigner.js","mappings":";;;;;;;;;;;;;;;;;;AAAgC;;AAEV;;AAEgB;;;AAGtC;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B;AACe;AACf,EAAE,wDAAe;;AAEjB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA,+CAAQ,cAAc,mDAAU;;;AAGhC;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,eAAe,gFAAuC;;AAEtD;AACA;AACA;AACA,mBAAmB,2CAAG;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AAMkB;;AAMD;;AAIC;;AAEe;AACI;;AAEL;;AAIL;;AAIO;;AAElC;AACA;AACA;AACA,mBAAmB,aAAa,GAAG,uBAAuB,IAAI,eAAe;AAC7E;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B;AACe;;AAEf,YAAY,gDAAM,GAAG;;AAErB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,+CAAQ,aAAa,kDAAO;;AAE5B;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mCAAmC;AAC9C;AACA,YAAY;AACZ;AACA,iCAAiC,6EAAoB;;AAErD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA,6CAA6C,UAAU;;AAEvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA,oCAAoC,oCAAoC;;AAExE,yBAAyB,uBAAuB;AAChD,OAAO;AACP;;AAEA,oCAAoC,mCAAmC;;AAEvE;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA,OAAO;;AAEP;;AAEA,kCAAkC,oCAAoC;;AAEtE;AACA,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,mCAAmC;AAC9C;AACA,YAAY;AACZ;AACA,yCAAyC,6EAAoB;;AAE7D;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uBAAuB,oBAAoB;AAC3C,KAAK;;AAEL;AACA,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,eAAe;AAC7B;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA,YAAY;AACZ;AACA,4BAA4B,6EAAoB;;AAEhD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA,IAAI,mEAAiB;;AAErB;;AAEA,uBAAuB,oBAAoB;AAC3C,KAAK;;AAEL;AACA,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA,+BAA+B,6EAAoB;;AAEnD;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH,aAAa;AACb,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA,+BAA+B,6EAAoB;;AAEnD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,qBAAqB,8CAAQ;;AAE7B,qBAAqB,kDAAQ;AAC7B,uCAAuC,kDAAQ;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,uBAAuB,UAAU;AACjC;;AAEA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,WAAW,UAAU;AACrB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE,uEAA4B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,yEAA8B;;AAEhC;AACA,EAAE,+CAAS;AACX;;AAEA;AACA;AACA;AACA,2CAA2C,4BAA4B;AACvE;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,8CAAQ;AACzB;;AAEA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,gDAAM,CAAC,8CAAI;AAClC,YAAY,gDAAM,GAAG,oBAAoB,sBAAsB;AAC/D;AACA,GAAG;;AAEH;AACA,EAAE,uDAAY;;AAEd;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,+CAAM;;AAExB,EAAE,gDAAM;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,sBAAsB,gDAAM,GAAG;;AAE/B,aAAa,mDAAU;AACvB;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,gBAAgB,kDAAQ;AACxB;;;AAGA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,SAAS,8CAAI;AACb;AACA,GAAG;AACH;;;AAGA;;AAM8B;;AAIb;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,YAAY,2DAAU;;AAEtB;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc,aAAa,cAAc,IAAI,4DAAkB;AAClG;AACA;;AAEA,oBAAoB,+CAAM;;AAE1B;;AAEA,EAAE,+CAAa;AACf,IAAI,yDAAa;;AAEjB;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvwBgC;;AAEQ;;AAEV;AACkB;;AAEyB;AACL;AACV;AACU;;AAEK;AACrB;AACE;AACa;AACD;AACN;AACqB;AAC3B;AACF;AACM;AACY;AACV;AACF;AACU;AACnB;AACyC;AAChC;AACT;AACK;AACP;AACe;AACJ;AACT;AACJ;;AAIX;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sCAAsC;AACzE;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B;AACe;AACf,EAAE,yDAAgB;AAClB;;AAEA,+CAAQ,UAAU,oDAAW;;;AAG7B,iBAAiB,+CAAM;AACvB,0BAA0B,wDAAe;;AAEzC;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA,kCAAkC,6EAAoB;AACtD;AACA,CAAC;;;AAGD;;AAEA;AACA,EAAE,+EAAkB;AACpB,EAAE,4EAAgB;AAClB,EAAE,uEAAW;AACb,EAAE,4EAAgB;AAClB;;AAEA;;AAEA;AACA,EAAE,8EAAmB;AACrB,EAAE,6DAAe;AACjB,EAAE,4EAAgB;AAClB,EAAE,8DAAgB;AAClB,EAAE,2EAAgB;AAClB,EAAE,wEAAa;AACf,EAAE,mFAAuB;AACzB,EAAE,8DAAgB;AAClB,EAAE,6DAAe;AACjB,EAAE,uEAAY;AACd,EAAE,sEAAwB;AAC1B,EAAE,iEAAmB;AACrB,EAAE,gEAAkB;AACpB,EAAE,qEAAuB;AACzB,EAAE,2DAAc;AAChB,EAAE,wFAA2B;AAC7B,EAAE,gEAAkB;AACpB,EAAE,2DAAc;AAChB,EAAE,qEAAU;AACZ,EAAE,0DAAa;AACf,EAAE,kEAAoB;AACtB,EAAE,uEAAY;AACd,EAAE,2DAAc;AAChB,EAAE,yDAAY;AACd;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,kEAAyB;AAC3B;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC3NgC;;AAEF;;AAE2C;AACL;AACA;;;AAGpE;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACe;AACf,EAAE,oDAAW;AACb;;AAEA,+CAAQ,kBAAkB,+CAAM;;;AAGhC;AACA,EAAE,+EAAkB;AACpB,EAAE,4EAAgB;AAClB,EAAE,4EAAgB;AAClB;;AAEA;AACA,EAAE,kEAAyB;AAC3B;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9BgC;;AAEA;AAC4B;AACI;AACF;AACV;;AAEd;;;AAGtC;AACA;AACA;AACA,mBAAmB,uBAAuB,IAAI,eAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wCAAwC;AACzE;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B;AACe;AACf,EAAE,wDAAe;AACjB;;AAEA,+CAAQ,SAAS,mDAAU;;AAE3B;AACA;AACA,EAAE,6CAAU;AACZ,EAAE,qEAAe;AACjB,EAAE,yEAAe;AACjB,EAAE,wEAAc;AAChB,EAAE,2DAAgB;AAClB;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1EiC;AACI;;AAErC,iEAAe;AACf;AACA,IAAI,6CAAU;AACd,IAAI,+CAAY;AAChB;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLiB;;AAIS;;AAIa;;AAExC;AACiB;;AAEjB;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACO;;AAEP;AACA,WAAW,+CAAK;;AAEhB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,SAAS,8CAAI;AACb;AACA,GAAG;AACH;;AAEO;AACP;AACA;;AAEO;AACP;;AAEA;AACA;;AAEO;AACP;AACA;;;AAGA;;AAEO;AACP,WAAW,sDAAK;;AAEhB;AACA;;AAEO;AACP,WAAW,sDAAK;;AAEhB;AACA;;AAEO;AACP,WAAW,sDAAK;AAChB;;AAEA;AACA;AACA;;AAEA;;AAEO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,gFAAgB;AACzB;;AAEO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,gFAAgB;AACzB;;AAEO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,gFAAgB;AACzB;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,gFAAgB;AACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1JgC;;AAMd;;AAE0C;;AAKpC;;AAIqB;;AAEN;;AAIC;;AAed;;AAIT;;AAOC;;AAM4B;;AAExB;;AAEtB,uBAAuB,2CAAG;;AAE1B;AACA;;AAEA;AACA;;AAEA;;AAEe;AACf;AACA;;AAEA,EAAE,6EAAiB;;AAEnB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,gBAAgB,gDAAM;AACtB;AACA;AACA;AACA;AACA,KAAK;;AAEL,+BAA+B;;AAE/B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,gDAAS;;AAE1B,IAAI,8CAAO;;AAEX,IAAI,gDAAS;;AAEb,IAAI,8CAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,eAAe,8CAAQ;;AAEvB;AACA,aAAa,gDAAS;;AAEtB,MAAM,gDAAS;AACf;;AAEA,IAAI,gDAAS;;AAEb;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,4BAA4B,gDAAS;AACrC,MAAM,8CAAO,oBAAoB,6BAA6B;;AAE9D;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,6BAA6B,gDAAS;AACtC,MAAM,8CAAO,qBAAqB,sBAAsB;;AAExD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe;AACf,OAAO;AACP;;AAEA;AACA,2BAA2B,gDAAS;AACpC,MAAM,8CAAO,mBAAmB,kCAAkC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe;AACf,OAAO;AACP;;AAEA;AACA,6BAA6B,gDAAS;AACtC,MAAM,8CAAO,qBAAqB,4BAA4B;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe,aAAa;AAC5B;AACA,OAAO;AACP;;AAEA;AACA,2BAA2B,gDAAS;AACpC,MAAM,8CAAO,mBAAmB,2BAA2B;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe,cAAc;AAC7B;AACA,OAAO;AACP;;AAEA;AACA,kCAAkC,gDAAS;AAC3C,MAAM,8CAAO,0BAA0B,oCAAoC;;AAE3E;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe,cAAc;AAC7B;AACA,OAAO;AACP;;AAEA;AACA,yCAAyC,gDAAS;AAClD,MAAM,8CAAO,iCAAiC,oBAAoB;;AAElE;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe,aAAa;AAC5B;AACA,OAAO;AACP;AACA;;AAEA;;AAEA,QAAQ,kDAAQ;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,gDAAS;AAC1B,IAAI,8CAAO;AACX;AACA;AACA;AACA,KAAK;AACL,IAAI,8CAAO;;AAEX,IAAI,gDAAS;;AAEb;AACA;;AAEA;;AAEA,QAAQ,kDAAQ;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL,eAAe,gDAAS;AACxB,IAAI,8CAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,8CAAO;;AAEX,IAAI,gDAAS;;AAEb;AACA;;AAEA;;AAEA;AACA;;AAEA,oBAAoB,cAAc,IAAI,kBAAkB,IAAI,mBAAmB,IAAI,cAAc;;AAEjG;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,kBAAkB,gDAAS;AAC3B,IAAI,8CAAO;AACX;AACA,KAAK;AACL,IAAI,8CAAO;;AAEX,IAAI,gDAAS;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,eAAe,0EAAU;;AAEzB,IAAI,gDAAS;;AAEb;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL,eAAe,gDAAS;AACxB,IAAI,8CAAO,SAAS,MAAM;AAC1B,IAAI,8CAAO;;AAEX,IAAI,gDAAS;;AAEb;AACA;;AAEA;AACA,qCAAqC,gDAAM,GAAG,qBAAqB;AACnE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,4DAAW;AAC3B,qBAAqB,6DAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,6DAAY;AACpB;AACA;;AAEA,QAAQ,6DAAY;AACpB;AACA;;AAEA,QAAQ,6DAAY;AACpB;AACA;;AAEA,QAAQ,6DAAY;AACpB;AACA;;AAEA,QAAQ,6DAAY;AACpB;AACA;;AAEA,QAAQ,6DAAY;AACpB;AACA;;AAEA,QAAQ,6DAAY;AACpB;AACA;;AAEA,QAAQ,6DAAY;AACpB;AACA;;AAEA,QAAQ,6DAAY;AACpB;AACA;;AAEA,QAAQ,6DAAY;AACpB;AACA;;AAEA;AACA;;AAEA;;AAEA,cAAc,gDAAM;AACpB;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,IAAI,iDAAU;;AAEd,IAAI,gDAAS;;AAEb;AACA;;AAEA;AACA,mBAAmB,4DAAW;;AAE9B;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAa;AAC3B;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,2EAAQ;AAC1C;AACA;AACA,aAAa,gDAAM;AACnB,UAAU;AACV;AACA;AACA,gBAAgB,8DAAa;AAC7B;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,cAAc,8DAAa;AAC3B;AACA,KAAK;;AAEL;;AAEA,IAAI,+EAAS;AACb;;AAEA;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B;;AAEA,qBAAqB,4DAAW;;AAEhC;AACA;AACA;AACA;AACA,gBAAgB,6DAAY;AAC5B,kBAAkB,+DAAc;AAChC;AACA;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,+DAAc,gCAAgC,6DAAY;AACxF,gCAAgC,6DAAY,8BAA8B,+DAAc;;AAExF;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP,qBAAqB,QAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,+DAAc;AAChC,SAAS;AACT;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,+DAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,+DAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,+DAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,+DAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP,MAAM,4EAAM;;AAEZ;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,+DAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,+DAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,+DAAc;;AAE5C;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,+DAAc;AAC5B,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc,+DAAc;AAC5B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B;;AAEA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,6DAAY;AAC1B,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,+DAAc;AAC5B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,+DAAc;AAC5B,gBAAgB,6DAAY;AAC5B,OAAO;;AAEP;AACA,KAAK;AACL;AACA,qBAAqB,4DAAW;;AAEhC;AACA;;AAEA;AACA,mDAAmD,gBAAgB;;AAEnE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,MAAM,8CAAO;AACb;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,MAAM,8CAAO;AACb;AACA,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;AACA,cAAc,gDAAM;AACpB,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;;AAEA,qBAAqB,yDAAU;;AAE/B,UAAU,gEAAiB;AAC3B,QAAQ,8CAAO;AACf;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B;;AAEA;;AAEA,yBAAyB,yDAAU;;AAEnC;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA,kBAAkB,+DAAc;AAChC,SAAS;AACT,mBAAmB,4DAAW;AAC9B;AACA,QAAQ;;AAER;AACA,oBAAoB,4DAAW;AAC/B;AACA;AACA;AACA,kBAAkB,8DAAa;AAC/B;AACA,SAAS;AACT;;AAEA,uCAAuC,4DAAW;;AAElD;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,uEAAuE,gDAAM;AAC7E,cAAc,6DAAY;AAC1B;AACA,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP,qBAAqB,4DAAW;;AAEhC;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,WAAW,uDAAK;AAChB;AACA;AACA,gBAAgB,+DAAc;AAC9B,kBAAkB,+DAAc;AAChC,SAAS;AACT;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,+DAAc;AAC5B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,+DAAc;AAC5B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA,qBAAqB,4DAAW;;AAEhC;;AAEA;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,gBAAgB,6DAAY;AAC5B,kBAAkB,+DAAc;AAChC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,QAAQ,8CAAO;AACf;AACA;AACA,SAAS;AACT,QAAQ;;AAER;AACA;AACA,UAAU,8CAAO;AACjB;AACA;AACA,oBAAoB,+DAAc;AAClC,WAAW;AACX;;AAEA;AACA;;;AAGA;AACA,KAAK;AACL;AACA;AACA,cAAc,6DAAY;AAC1B;AACA,gBAAgB,+DAAc;AAC9B;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,iBAAiB,6DAAY;AAC7B,mBAAmB,+DAAc;;AAEjC;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B;;AAEA;;AAEA,yBAAyB,4DAAW;;AAEpC;;AAEA;AACA;;AAEA;AACA;AACA,UAAU,8CAAO;AACjB;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,UAAU,8CAAO;AACjB;AACA,WAAW;AACX;AACA;;AAEA;AACA,KAAK;AACL;;AAEA,qBAAqB,4DAAW;;AAEhC,iBAAiB,6DAAY;AAC7B,mBAAmB,+DAAc;;AAEjC,cAAc,gDAAM;AACpB;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B,OAAO,aAAa;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,iBAAiB,6DAAY;AAC7B,mBAAmB,+DAAc;;AAEjC;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,iBAAiB,6DAAY;AAC7B,mBAAmB,+DAAc;;AAEjC;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA,qBAAqB,4DAAW;AAChC,eAAe,uDAAK;;AAEpB,iBAAiB,6DAAY;AAC7B,mBAAmB,+DAAc;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAAc;AAC9B;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,6BAA6B;;AAE7B;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,+DAAc;AAChC;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,QAAQ,+EAAS;;AAEjB;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,cAAc,6DAAY;AAC1B;AACA,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP,qBAAqB,4DAAW;;AAEhC,UAAU,6DAAY;AACtB;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA,kEAAkE,gBAAgB;;AAElF;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,6DAAY;AAC1B;AACA,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA,qBAAqB,4DAAW;AAChC;;AAEA;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,gDAAM,GAAG;AAChC;AACA,OAAO;;AAEP;AACA,uBAAuB,gDAAM,GAAG;AAChC;AACA,OAAO;;AAEP;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,gBAAgB,+DAAc;AAC9B;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP,iBAAiB,4DAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAa;AAC7B;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;;AAEP;AACA;AACA,MAAM,+EAAS;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,6DAAY;AAC1B,gBAAgB,+DAAc;AAC9B;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,+DAAc;AAC5B,gBAAgB,+DAAc;AAC9B,OAAO;AACP;AACA;;AAEA;AACA,cAAc,4DAAW;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iDAAO;AACX;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;A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A,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,IAAI;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,0BAA0B;AAC1B;;AAEA;AACA;AACA;;;AAGA;AACA,gCAAgC,6CAA6C;AAC7E;AACA;;AAEA;AACA,+BAA+B,2CAA2C;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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ACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,MAAM,kEAAK,yDAAyD,wDAAU;;AAE9E,qBAAqB,sEAAa;;AAElC,IAAI,gDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,QAAQ,gDAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,QAAQ,gDAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,IAAI,gDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,MAAM,+DAAE;;AAER,QAAQ,+DAAE;;AAEV,MAAM,gDAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,OAAO;AACP,MAAM;;AAEN;;AAEA,MAAM,gDAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;;AAEN,SAAS,+DAAE;AACX;AACA;AACA,SAAS,+DAAiB;;AAE1B,MAAM,gDAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA,IAAI,gDAAM;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,gDAAM;AACjC,wBAAwB;AACxB,aAAa;;AAEb;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,IAAI,kEAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAM;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA,MAAM,+DAAE;AACR,IAAI,gDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA,MAAM,kEAAK;AACX,IAAI,gDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,MAAM,+DAAE;AACR,IAAI,gDAAM;AACV;AACA,KAAK;AACL;;AAEA;AACA,yDAAyD,uBAAuB;;AAEhF,MAAM,iDAAO;;AAEb;AACA;AACA;;AAEA;AACA,IAAI,gDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAE,iDAAO;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvd4D;AACO;AACH;AACJ;AACF;AACd;;AAEU;;AAEtD,iEAAe;AACf;AACA,IAAI,iEAAmB;AACvB,IAAI,2EAAgB;AACpB,IAAI,yEAAe;AACnB,IAAI,uEAAa;AACjB,IAAI,sEAAY;AAChB,IAAI,mDAAe;AACnB;AACA;AACA,gCAAgC,2DAAkB;AAClD,CAAC;;;;;;;;;;;;;;;;;AChB6B;;AAQZ;;AAElB;AACA,OAAO,iDAAO;AACd;AACA;;AAEA,EAAE,iDAAO;AACT,SAAS,qDAAW;AACpB;AACA;AACA,GAAG;AACH;;AAEA;AACA,OAAO,iDAAO;AACd;AACA;;AAEA,EAAE,iDAAO;AACT;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;AAGe;;AAEf;AACA;AACA;;AAEA,wDAAwD,kEAAiB;AACzE,gCAAgC,sDAAK;;AAErC;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,mDAAE;AACR,MAAM,mDAAE;AACR;AACA;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KAAK;AACL;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,aAAa,wBAAwB;AACrC;AACA;AACA,WAAW,kEAAiB;;AAE5B;;AAEA,yBAAyB,SAAS;AAClC,QAAQ,mDAAE,gCAAgC,mDAAE;AAC5C;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACzH0C;;AAE1C;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACe;;AAEf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,QAAQ,mDAAE;AACV;AACA;;AAEA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,wCAAwC,YAAY;AACpD;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACrHgC;;AAE2C;AACjC;AACA;AACqB;;AAE/D;AACA;;AAEA;;AAEe;AACf;AACA;AACA,EAAE,sFAAuB;;AAEzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA,+CAAQ,2BAA2B,iFAAkB;;AAErD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,SAAS,mDAAE,gDAAgD,wEAAmB;AAC9E;;AAEA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;;AAEA;;AAEA,+BAA+B,mCAAmC;;AAElE;AACA;AACA;;AAEA;AACA,EAAE,gDAAO;AACT;;AAEA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;;AAEA,wCAAwC,qCAAqC;AAC7E;AACA;AACA;;AAEA,eAAe,+CAAM;;AAErB;AACA,0CAA0C,wEAAmB;AAC7D,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnLoE;AAC1B;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,QAAQ,mDAAE;AACV;AACA;;AAEA,QAAQ,mDAAE;;AAEV;AACA,4BAA4B,sCAAsC;AAClE;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,wDAAwD,iBAAiB;AACzE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA,MAAM,mDAAE;AACR;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,wEAAM;;AAErB;AACA;AACA,GAAG;;AAEH,SAAS,0EAAQ;AACjB;;;;;;;;;;;;;;;;;;;;;;;ACxM8D;AACW;AACF;;AAEb;AACJ;AACU;AACE;;AAElE,iEAAe;AACf,iBAAiB,wEAAc,EAAE,8EAAmB,EAAE,6EAAkB;AACxE;AACA,kCAAkC,6DAAoB;AACtD,gCAAgC,2DAAkB;AAClD,sCAAsC,iEAAwB;AAC9D,qCAAqC,gEAAuB;AAC5D,CAAC;;;;;;;;;;;;;;;;;;;;;AChB+B;;AAEiD;;AAE/C;;AAEQ;;AAIJ;;;AAGtC;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;AACf,kBAAkB,4FAAa;AAC/B;;AAEA,+CAAQ,oBAAoB,4FAAa;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;;AAEA;;AAEA,EAAE,mIAAoD;;AAEtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,gDAAM;AACnC,kBAAkB,mDAAE;AACpB,SAAS;;AAET;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAU,mDAAE;AACZ;AACA,iBAAiB,mDAAE;AACnB,SAAS;AACT,QAAQ;AACR;AACA,6CAA6C,mDAAE;AAC/C,SAAS;AACT;;AAEA,oBAAoB,qEAAO;;AAE3B;AACA;AACA,UAAU,sCAAsC;AAChD;AACA;AACA,KAAK;AACL;;AAEA;;;;;;;;;;;;;;;;;AChLyE;;AAErB;;AAEpD,iEAAe;AACf;AACA,IAAI,8EAAmB;AACvB;AACA,2BAA2B,0DAAiB;AAC5C,CAAC,EAAC;;;;;;;;;;;;;;;;;ACToD;AACtD;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kEAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;;;;;ACxByE;AACzE;AAC0D;AACb;AAC7C;AACA;AACA;AACA;AACe;AACf;AACA;AACA,oBAAoB,wEAAM;AAC1B;AACA;AACA,mBAAmB,kFAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU,mDAAE;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1D6C;AAC7C;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mDAAE;AACX,OAAO,mDAAE;AACT;AACA;AACA;AACA;AACA;AACA;AACA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;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;;AAGH;AACA;AACA,QAAQ,kEAAK;AACb;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA,aAAa,oDAAQ;;AAErB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,gDAAM;;AAER;;AAEA;AACA;AACA,IAAI,kEAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAM;AACV;AACA,KAAK;AACL;;AAEA;AACA,MAAM,gEAAe;AACrB,IAAI,gDAAM;AACV;AACA,KAAK;AACL;;AAEA;AACA,MAAM,+DAAE;AACR,IAAI,gDAAM;AACV;AACA;AACA,KAAK;AACL;;AAEA,EAAE,gDAAM;AACR;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,+DAAE;;AAER,IAAI,gDAAM;AACV;AACA;AACA;AACA;AACA,KAAK;;AAEL,IAAI,gDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,MAAM,kEAAK;AACX;AACA;;AAEA,IAAI,gDAAM;AACV;AACA;AACA,KAAK;;AAEL,I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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,mDAAE;AACjB;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM,SAAS,mDAAE;AACjB;AACA;AACA;AACA,MAAM,SAAS,mDAAE;AACjB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,gDAAM;;AAE7B,uBAAuB,6FAAsB,CAAC,uFAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA,SAAS,gFAAc,CAAC,wEAAM;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAM,mDAAE;AACR;AACA;;AAEA,MAAM,mDAAE;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,mDAAE;AACR;AACA;;AAEA,MAAM,mDAAE;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,wEAAM;AACnD;;AAEA;AACA,SAAS,mDAAE;AACX,IAAI,mDAAE;AACN;AACA;;AAEA;AACA,SAAS,mDAAE,gCAAgC,wDAAU;AACrD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qDAAqD,gFAAc;;AAEnE;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,wEAAM;AACxB,kBAAkB,wEAAM;AACxB;AACA;AACA;;AAEA;;AAEA;;AAEA,0BAA0B,gFAAc;AACxC;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8BAA8B,wEAAM;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC3YkB;;AAEc;;AAKS;;AAIX;;AAMA;;AAID;;AAIa;;AAEiC;;AAE3E;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA,EAAE,sFAAuB;;AAEzB;AACA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;;AAIH;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iDAAO;AACX,UAAU,mDAAE;AACZ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA,SAAS,mDAAE;AACX;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,qBAAqB,WAAW,wBAAwB;AACxD;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kEAAiB;AACxC,sBAAsB,kEAAiB;AACvC,sBAAsB,kEAAiB;;AAEvC;AACA;AACA,6CAA6C,sDAAK;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,uBAAuB,kEAAiB;AACxC,sBAAsB,kEAAiB;AACvC,sBAAsB,kEAAiB;;AAEvC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+CAAQ,cAAc,iFAAkB;;AAExC;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,yBAAyB,uDAAK;AAC9B;AACA;;AAEA;AACA,MAAM,mDAAE;AACR;AACA,MAAM,mDAAE;AACR;AACA;;AAEA;;AAEA;AACA,WAAW,sDAAK;AAChB;AACA,iBAAiB,sDAAK;;AAEtB,MAAM,mDAAE;AACR;AACA;;AAEA,MAAM,mDAAE;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,MAAM,mDAAE;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA,MAAM,mDAAE;AACR;AACA;;AAEA;AACA;;;AAGA;;AAEA,WAAW,sDAAK;AAChB;;AAEA;AACA;AACA,mCAAmC,uEAAK;;AAExC,IAAI,gDAAM;AACV;AACA;AACA,KAAK;AACL;;AAEA,iCAAiC,uDAAK;;AAEtC;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,gDAAM;AACR;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAM,mDAAE;AACR;AACA,IAAI,uEAAgB;AACpB;;AAEA,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;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;ACzMgC;;AAMU;;AAIR;;AAID;;AAE0C;;AAE3E;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACe;;AAEf,EAAE,sFAAuB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;;AAEA;AACA,SAAS,iEAAgB;AACzB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,wEAAM;AAC3B;AACA,mBAAmB,wEAAM;;AAEzB;AACA;AACA;AACA;;AAEA,sBAAsB,wEAAM;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,+DAAS;;AAEzB;AACA;;AAEA;;AAEA,+CAAQ,mCAAmC,iFAAkB;;AAE7D;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;;AAEA;AACA,mBAAmB,wEAAM;AACzB,wBAAwB,gFAAc;;AAEtC;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;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AEvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,8CAAI;AACb,WAAW,mDAAE;AACb,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;ACrOgC;;AAE2C;;AAKlC;;AAIvB;;AAIe;;AAEjC;;;AAGA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,aAAa;AACxB;AACe;;AAEf,EAAE,sFAAuB;;;AAGzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,WAAW,8CAAI;AACf;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA,wBAAwB,8CAAI;AAC5B;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;;AAEP,MAAM,oEAAa;AACnB;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,uEAAgB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAAQ,+BAA+B,iFAAkB;;;AAGzD;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,mDAAE;AACV;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7JgC;AAChC;AAC2E;AAC3E;AAKiC;AACjC;AAC6C;AAC7C;AAC6E;AAC7E;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,EAAE,sFAAuB;AACzB;AACA,8DAA8D,wEAA2B;AACzF;AACA;AACA;AACA,aAAa,mDAAE,iCAAiC,kEAAiB;AACjE,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,mDAAE;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAK;AAC1B;AACA,qBAAqB,sDAAK;AAC1B,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mDAAE;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAE;AAClB,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV;AACA,QAAQ,mDAAE;AACV;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV;AACA,QAAQ,mDAAE;AACV;AACA,wBAAwB,mDAAE;AAC1B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAK;AACb,WAAW,mDAAE;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mDAAE;AACZ;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAAQ,oBAAoB,iFAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACnNgC;;AAE2C;;AAE9B;;AAInB;;AAIY;;;AAGtC;;;AAGA;AACA;AACA;AACe;;AAEf,EAAE,sFAAuB;;;AAGzB;;AAEA,mBAAmB,6DAAa;;AAEhC;AACA;;AAEA,IAAI,yEAAW;;AAEf;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,kBAAkB;AAC5B;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,mDAAE;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+CAAQ,qBAAqB,iFAAkB;;;;;;;;;;;;;;;;;;;;AC/Gf;;AAE2C;;AAK1C;;AAEiB;;AAElD;;;AAGA;AACA;AACA;AACe;AACf,kBAAkB,iFAAkB;;AAEpC;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA,+CAAQ,sBAAsB,iFAAkB;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA,sEAAsE,yBAAyB;AAC/F;;;AAGA;;AAEA;AACA,uBAAuB,kEAAiB;AACxC;;AAEA;AACA;;AAEA;AACA,UAAU,wDAAO,WAAW,mDAAE;AAC9B;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC7FgC;;AAOd;;AAEwC;;AAEiB;;AAI7B;;;AAG/B;;AAEf,EAAE,sFAAuB;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,QAAQ,kDAAQ;AAChB,YAAY,wEAAM;AAClB,MAAM;AACN;AACA;;AAEA,uBAAuB,2FAAqB;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,QAAQ;AACR;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;;AAEA,4BAA4B,gDAAM;AAClC;AACA,OAAO;;AAEP,4BAA4B,gDAAM;AAClC;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wEAAM;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,8CAAI;AACzB;;AAEA,0BAA0B,2FAAqB;AAC/C,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,+CAAQ,qBAAqB,iFAAkB;;AAE/C;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,gDAAM,GAAG;AAClB;;;;;;;;;;;;;;;;;;;;;ACjNgC;;AAE2C;;AAE9B;;AAE9B;;AAEf,EAAE,sFAAuB;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,mDAAE;AACR;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,mDAAE;AACX;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA,+CAAQ,4BAA4B,iFAAkB;;;;AAItD;;AAEA;AACA,SAAS,mDAAE;AACX;;;;;;;;;;;;;;;;;;ACpFgD;AAChD;AAC6C;AAC7C;AAC6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE,yBAAyB,sDAAK;AACxC,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mDAAE;AACzD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV,oBAAoB,4DAAY;AAChC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV,oBAAoB,4DAAY;AAChC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV,sBAAsB,4DAAY;AAClC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV,oBAAoB,4DAAY;AAChC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACpHgC;;AAE2C;;AAKlC;;AAKR;;AAIJ;;AAE7B;;;AAGA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iFAAkB;;AAEpC;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;;AAEA,yBAAyB,kEAAiB;AAC1C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAI,uEAAgB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,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;AACL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,gBAAgB,gDAAM,GAAG;AACzB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,yEAAkB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,kEAAiB;;AAE1C;AACA,SAAS,gEAAe;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,iEAAgB;;AAExB;AACA,qBAAqB,wEAAM;AAC3B;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA,+CAAQ,gBAAgB,iFAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,OAAO;AACnB;AACO;;AAEP,0BAA0B,iFAAiB;;AAE3C,SAAS,4EAAU,CAAC,uEAAK;AACzB;;AAEA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,OAAO;AAClB;AACA,WAAW;AACX;AACO;;AAEP;AACA;AACA;;AAEA;;AAEA,SAAS,uEAAiB;AAC1B;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,0EAAoB;AACpC;AACA,GAAG;;AAEH,eAAe,gDAAM;;AAErB;AACA;;;;;;;;;;;;;;;;;;;;;;;AClZgC;AAChC;AAC2E;AAC3E;AAC6C;AAC7C;AACkD;AAClD;AACkE;AAClE;AAImE;AACnE;AACA;AACA;AACA;AACe;AACf;AACA,EAAE,sFAAuB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iHAAsB;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,iHAAsB;AACzC;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,+CAAQ,sBAAsB,iFAAkB;AAChD;AACA;AACA;AACA;AACA,SAAS,mDAAE;AACX,OAAO,wDAAU;AACjB,OAAO,mDAAE;AACT,QAAQ,wDAAU;AAClB;AACA;AACA;AACA,iBAAiB,gFAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mDAAE;AACZ;AACA;AACA,KAAK;AACL;AACA;AACA,UAAU,mDAAE;AACZ;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxF6C;;AAE7C;;AAEe;;AAEf;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,mDAAE,kCAAkC,mDAAE;AAC9C;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AClCgC;;AAEa;;AAE8B;;AAE1B;;;AAGlC;;AAEf,EAAE,sFAAuB;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,mDAAE,wCAAwC,mDAAE;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA,+CAAQ,wBAAwB,iFAAkB;;AAElD;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;A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BAAwB,mDAAE;AACpC;AACA;AACA;AACA,QAAQ,mDAAE;AACV;AACA;AACA;AACA,QAAQ,mDAAE,8BAA8B,wDAAU;AAClD;AACA;AACA;AACA,QAAQ,mDAAE;AACV;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,4DAAY;AAC9B;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAY;AAC7B;AACA,iBAAiB,wEAAM;AACvB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wEAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,yCAAyC,mDAAE,2BAA2B,mDAAE;AACxE,GAAG;AACH;AACA;AACA;AACA,0BAA0B,wEAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7K6C;;AAIH;;AAIP;;AAEnC;;;AAGA;AACA,WAAW,2BAA2B;AACtC,IAAI,4BAA4B;AAChC;AACA;AACe;;AAEf;AACA;AACA;;AAEA,QAAQ,mDAAE,wBAAwB,mDAAE;;AAEpC;AACA;AACA,0BAA0B,6EAAkB;AAC5C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,mDAAE,wBAAwB,mDAAE;;AAEpC;;AAEA;AACA;AACA,oBAAoB,6EAAW;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9DgC;AAChC;AAMkB;AAClB;AAC2E;AAC3E;AAIyC;AACzC;AAIiC;AACjC;AAC6C;AAC7C;AAC0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA,kBAAkB,iFAAkB;AACpC;AACA;AACA,WAAW,yDAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8CAAI,eAAe,sDAAY,GAAG,oBAAoB;AACnE;AACA;AACA;AACA,QAAQ,sDAAE;AACV;AACA,MAAM,SAAS,sDAAE;AACjB;AACA,MAAM,SAAS,sDAAE;AACjB;AACA,MAAM,SAAS,sDAAE;AACjB;AACA;AACA;AACA;AACA;AACA,QAAQ,yDAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yDAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oEAAa;AACnB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uEAAgB;AACpB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAAQ,+BAA+B,iFAAkB;AACzD;AACA;AACA;AACA;AACA,OAAO,iDAAO;AACd;AACA;AACA;AACA,SAAS,8CAAI;AACb,WAAW,gEAAkB;AAC7B,GAAG;AACH;;;;;;;;;;;;;;;;;;;;ACxLmC;AACnC;AAC6C;AAC7C;AACkD;AAClD;AAM0B;AAC1B;AACiD;AACjD;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iDAAO;AACX;AACA;AACA,UAAU,mDAAE;AACZ;AACA;AACA,gCAAgC,uEAA0B;AAC1D,UAAU;AACV;AACA,mBAAmB,6EAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mDAAE,8BAA8B,wDAAU;AACpD,8BAA8B,uEAA0B;AACxD;AACA;AACA,UAAU,mDAAE;AACZ,8BAA8B,2EAA8B;AAC5D;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,8EAAiC;AAC5C;AACA;AACA;AACA;AACA,aAAa,8EAAiC;AAC9C;AACA;AACA;AACA,WAAW,6DAAa;AACxB;AACA;AACA;AACA,cAAc,6DAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uEAA0B;AAC7E;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA,mBAAmB,6DAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC3HgC;;AAE2C;;AAE3C;AACkB;AACqB;AACb;AACH;AAMlB;;;AAGrC;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,gBAAgB;AAC3B,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B;AACe;AACf;AACA;;AAEA,EAAE,sFAAuB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,mDAAE,iCAAiC,wDAAU;AACxD;;AAEA;AACA;AACA;;AAEA,yBAAyB,kEAAiB;;AAE1C;;AAEA;AACA;;AAEA;AACA;;AAEA,yBAAyB,kEAAiB;AAC1C;;AAEA,mEAAmE,wEAAmB;;AAEtF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,wEAAmB;;AAE9D;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,wEAAmB;AAClE,GAAG;;;AAGH;AACA;AACA;AACA,iCAAiC,wEAAmB;;AAEpD;AACA;AACA;AACA;;AAEA,sCAAsC,YAAY;AAClD,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA,SAAS,mDAAE;AACX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,4DAAO;AACf,sCAAsC,8DAAS;AAC/C;;AAEA;AACA;;AAEA,2CAA2C,8DAAS;;AAEpD;AACA;AACA;;AAEA,6BAA6B,8DAAS,SAAS,8DAAS;AACxD,GAAG;;;AAGH;AACA;;AAEA,SAAS,mDAAE;AACX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,4DAAO;AACf,sCAAsC,8DAAS;AAC/C;;AAEA;AACA;;AAEA,2CAA2C,8DAAS;;AAEpD;AACA;AACA;;AAEA,2CAA2C,8DAAS;AACpD,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,SAAS,4DAAO;AAChB;AACA;;AAEA;;AAEA,2CAA2C,wEAAmB;;AAE9D;AACA;AACA;AACA;;AAEA,uCAAuC,uBAAuB;AAC9D,GAAG;;;AAGH;AACA;AACA;;AAEA,SAAS,mDAAE;AACX;AACA;;AAEA,SAAS,wDAAU;AACnB;AACA;AACA,MAAM;AACN;AACA;;AAEA,GAAG;;;AAGH;AACA;AACA;;AAEA,SAAS,mDAAE;AACX;AACA;;AAEA,SAAS,wDAAU;AACnB;AACA;AACA,MAAM;AACN;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;;AAEA,SAAS,mDAAE;AACX;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,SAAS,wDAAU;;AAEnB;AACA;;AAEA,MAAM;AACN;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,wEAAmB;AAChC;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,mDAAE,CAAC,sDAAK;AAC1B;AACA;AACA;;AAEA,mBAAmB,wEAAmB;;AAEtC,0BAA0B,8CAAI;AAC9B;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA,+CAAQ,0BAA0B,iFAAkB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,uBAAuB;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,sCAAsC,YAAY,YAAY,mBAAmB;AACjF;AACA;;AAEA,uBAAuB,qEAAO;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,wEAAM;AAC1B,sBAAsB,wEAAM;;AAE5B;AACA;AACA;AACA;AACA;;AAEA,oDAAoD,mBAAmB;AACvE;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,UAAU,QAAQ;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,QAAQ,wEAAmB;AAC3B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA,uBAAuB,8CAAI;AAC3B;AACA,GAAG;;AAEH;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5iBgC;;AAE2C;;AAE9B;AACQ;;AAErD;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACe;AACf,kBAAkB,iFAAkB;;AAEpC;AACA;AACA;;AAEA;AACA,OAAO,mDAAE;AACT,OAAO,mDAAE;AACT,OAAO,2DAAU;AACjB;AACA;AACA;;AAEA;;AAEA,2BAA2B,yBAAyB;AACpD,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA,+CAAQ,+BAA+B,iFAAkB;;AAEzD;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC/CgC;;AAE2C;;AAIzD;;AAEwC;AACQ;;AAEhB;;;AAGnC;AACf;AACA;;AAEA,EAAE,sFAAuB;;AAEzB;;AAEA;AACA;;AAEA;AACA,QAAQ,wDAAU;AAClB;AACA;;AAEA,sBAAsB,gFAAkB;;AAExC;;AAEA;AACA;AACA;;AAEA,MAAM,iDAAO;AACb;AACA,OAAO;;AAEP,MAAM,iDAAO;AACb;AACA,OAAO;AACP,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,wEAAM;AAC9C,QAAQ;AACR,0CAA0C,wEAAM;AAChD;;AAEA;;AAEA,GAAG;;AAEH;;AAEA,+CAAQ,oCAAoC,iFAAkB;;AAE9D;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvEgC;;AAE2C;;AAK1C;;AAIkB;;;AAGnD;;;AAGe;AACf;AACA;;AAEA,EAAE,sFAAuB;;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,8FAAmB;;AAErC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,SAAS,mDAAE;AACX;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,MAAM,sDAAK;AACX,MAAM;;AAEN;AACA,MAAM,sDAAK;AACX;AACA,GAAG;;AAEH;;AAEA;AACA;;;AAGA;AACA;AACA,MAAM,sDAAK;;AAEX,MAAM;AACN,MAAM,sDAAK;AACX;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;;AAGA,+CAAQ,iCAAiC,iFAAkB;;AAE3D;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;ACpJgC;;AAE2C;;AAE9B;AACK;AACA;;;AAGlD;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACe;AACf,kBAAkB,iFAAkB;;AAEpC;AACA;AACA;AACA;;AAEA,QAAQ,wDAAO;AACf;AACA;;AAEA,QAAQ,mDAAE,+BAA+B,wDAAU;AACnD;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,QAAQ,mDAAE;AACV;AACA;AACA,GAAG;AACH;;AAEA,+CAAQ,oBAAoB,iFAAkB;;AAE9C;;;;;;;;;;;;;;;;;;;ACzDgC;;AAE2C;;AAK1C;;;AAGjC;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACe;;AAEf,EAAE,sFAAuB;;;AAGzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA,+CAAQ,6BAA6B,iFAAkB;;AAEvD;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,OAAO,mDAAE;AACT;AACA;;AAEA,iBAAiB,kEAAiB;AAClC,qBAAqB,kEAAiB;;AAEtC;AACA;;;;;;;;;;;;;;;;;;;ACxDgC;;AAE2C;;AAI1C;;AAEjC;AACA;;;AAGA;AACA;AACA;AACe;;AAEf,EAAE,sFAAuB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,mDAAE;AACV;AACA;;AAEA,QAAQ,mDAAE;AACV;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+CAAQ,6BAA6B,iFAAkB;;;AAGvD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7JkF;AACpC;AACU;AACA;AACI;AACd;AACoB;AACE;AACM;AACtB;AACE;AACE;AACF;AACc;AAClB;AACN;AACM;AACF;AACJ;AACY;AACN;AACkC;AACxB;AACQ;AACA;AACJ;AAClB;AACQ;AACoB;AACtB;AACY;AACU;AACU;AACN;AAC1B;AACc;AACI;;AAEtE,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yEAAgC;AAC9E,4BAA4B,uDAAc;AAC1C,iCAAiC,4DAAmB;AACpD,iCAAiC,4DAAmB;AACpD,mCAAmC,8DAAqB;AACxD,4BAA4B,uDAAc;AAC1C,sCAAsC,iEAAwB;AAC9D,uCAAuC,kEAAyB;AAChE,0CAA0C,qEAA4B;AACtE,+BAA+B,0DAAiB;AAChD,gCAAgC,4DAAkB;AAClD,iCAAiC,6DAAmB;AACpD,gCAAgC,4DAAkB;AAClD,uCAAuC,mEAAyB;AAChE,8BAA8B,0DAAgB;AAC9C,2BAA2B,uDAAa;AACxC,8BAA8B,0DAAgB;AAC9C,6BAA6B,yDAAe;AAC5C,2BAA2B,uDAAa;AACxC,iCAAiC,6DAAmB;AACpD,8BAA8B,0DAAgB;AAC9C,mCAAmC,+DAAqB;AACxD,8CAA8C,2EAAiC;AAC/E,uCAAuC,mEAAyB;AAChE,uCAAuC,mEAAyB;AAChE,qCAAqC,iEAAuB;AAC5D,4BAA4B,wDAAc;AAC1C,gCAAgC,4DAAkB;AAClD,0CAA0C,sEAA4B;AACtE,+BAA+B,2DAAiB;AAChD,qCAAqC,iEAAuB;AAC5D,0CAA0C,sEAA4B;AACtE,+CAA+C,2EAAiC;AAChF,6CAA6C,wEAA8B;AAC3E,+BAA+B,2DAAiB;AAChD,sCAAsC,kEAAwB;AAC9D,wCAAwC,oEAA0B;AAClE,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACjHuC;;AAIL;;AAEpC;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,aAAa;AACxB;AACA,YAAY,eAAe;AAC3B;AACO;AACP;AACA;AACA;AACA,OAAO;;AAEP;AACA,EAAE,oEAAa;AACf,EAAE,kEAAiB;AACnB,EAAE,kEAAiB;;AAEnB;;AAEA;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA,WAAW;AACX,YAAY;AACZ;AACO;AACP;AACA;;;AAGA;AACA;AACA;AACA,WAAW;AACX,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW;AACX,WAAW,OAAO;AAClB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,WAAW;AACX,YAAY;AACZ;AACA;;AAEA;AACA;AACA,MAAM,8BAA8B;AACpC,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW;AACX,aAAa,MAAM,GAAG,OAAO;AAC7B,YAAY,OAAO;AACnB;AACO;;AAEP;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA,WAAW;AACX;;;AAGA;AACA;AACA;AACA,WAAW;AACX,aAAa,MAAM,GAAG,OAAO;AAC7B,YAAY,OAAO;AACnB;AACO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,YAAY,OAAO;AACnB;AACO;;AAEP;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;ACpHyB;;AAIK;;AAIY;;;AAGnC;;AAEP;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,OAAO;AACnB;AACO;;AAEP;AACA;;AAEA;;AAEA;AACA,mBAAmB,kEAAa;AAChC;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,4DAAY;AACnC;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,SAAS,4EAAU;AACnB;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;;AAEA,yBAAyB,qEAAqB;AAC9C,yBAAyB,qEAAqB;;AAE9C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,wDAAQ;AACnB,WAAW,wDAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe,qEAAqB;AACpC,qBAAqB,qEAAqB;;AAE1C;AACA;;;;;;;;;;;;;;;;AC7NA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,uBAAuB;;AAEvC;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA,YAAY,cAAc;AAC1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpOA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACe;;AAEf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjCkB;;AAIoB;;AAMZ;;;AAG1B;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,WAAW;AACtB;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,4DAAY;;AAE9B;AACA;;AAEA,2BAA2B,6DAAa;;AAExC;AACA;AACA,2BAA2B,mBAAmB;AAC9C,mBAAmB,4DAAgB;AACnC;AACA,2BAA2B,4DAAgB;AAC3C;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,EAAE,yEAAW;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,gDAAM;AACjB;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB;AACA;AACA;;AAEA;AACA,2CAA2C,mBAAmB;AAC9D,2BAA2B,4DAAgB;AAC3C;AACA,mCAAmC,4DAAgB;AACnD;AACA,GAAG;AACH;;;;;;;;;;;;;;;;ACpGe;AACf;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClC6C;;AAKnB;;AAIY;;AAII;;AAIS;;;AAGnD;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;;AAEA;;AAEA,qBAAqB,kEAAkB;;AAEvC;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA,kBAAkB,wEAAM;AACxB,gBAAgB,wEAAM;;AAEtB,iBAAiB,wFAAa;;AAE9B,kBAAkB,4DAAY;;AAE9B;AACA;;AAEA,EAAE,yEAAW;AACb;;AAEA,QAAQ,mDAAE,0BAA0B,mDAAE;AACtC;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,gFAAgF,iBAAiB;AACjG;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,gFAAgF,iBAAiB;AACjG;AACA;;;;;;;;;;;;;;;;;AChIkB;AAClB;AAGiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAM;AACV,6DAA6D;AAC7D;AACA;AACA;AACA,IAAI,gDAAM;AACV,2DAA2D;AAC3D;AACA;AACA,EAAE,iDAAO;AACT,6CAA6C,8CAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sDAAK;AAC5B;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wDAAwD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxI0B;;;AAG1B;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,6DAAa;AAChC;;AAEA;AACA,0CAA0C,OAAO,gBAAgB,sBAAsB;AACvF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,qBAAqB;;AAErC;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,mBAAmB,4DAAgB;AACnC;AACA,2BAA2B,4DAAgB;AAC3C;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjFyC;;AAEO;;;AAGjC;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAK;;AAErB;AACA;AACA;;AAEA;AACA,EAAE,oEAAa;AACf;;AAEA,EAAE,uEAAgB;AAClB;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAK;;AAErB;AACA;AACA;;AAEA;AACA,EAAE,uEAAgB;AAClB;;AAEA,EAAE,oEAAa;AACf;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjF0B;;AAIO;;AAKQ;;AAIC;;AAE1C;AACA;;;AAGA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mBAAmB,wEAAM;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,4DAAY;;AAE3B;AACA,kCAAkC,4DAAY;AAC9C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA,eAAe,4DAAY;;AAE3B;AACA;AACA;;AAEA;AACA,aAAa,mDAAE;AACf,KAAK;;AAEL;;AAEA;AACA,GAAG;;AAEH;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,8CAA8C;AACjE,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,+CAA+C;AACtE,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,uEAAgB;AACtB,MAAM,uEAAgB;AACtB,KAAK;;AAEL;AACA;AACA,MAAM,oEAAa;AACnB,MAAM,oEAAa;AACnB,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,uEAAgB;AACtB,MAAM,uEAAgB;AACtB,KAAK;;AAEL;AACA;AACA,MAAM,oEAAa;AACnB,MAAM,oEAAa;AACnB,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;;;;;;;AC5LkB;;AAKe;;AAElB;AACf;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kFAAkF,8CAAI;;AAEtF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA,MAAM,mDAAE;AACR;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA,SAAS,gDAAM;AACf;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA,EAAE,iDAAO;AACT;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,MAAM,mDAAE;AACR,UAAU,kEAAiB;AAC3B;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;ACpFkB;;AAKe;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,sBAAsB,kEAAiB;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA,sBAAsB,8CAAI;AAC1B;AACA,WAAW,sDAAK;;AAEhB,SAAS,gDAAM;;AAEf;AACA;AACA;;AAEA,MAAM;AACN,wCAAwC,8CAAI;AAC5C;;AAEA;AACA,GAAG,IAAI;AACP;;;AAGA;AACA,SAAS,gDAAM;AACf;;AAEA;AACA,GAAG,IAAI;AACP;;;AAGA;AACA;AACA,WAAW,sDAAK;;AAEhB,EAAE,iDAAO;;AAET;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA,EAAE,iDAAO;AACT;AACA,GAAG;AACH;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA,uBAAuB,gDAAM,GAAG;;AAEhC;AACA;AACA,6BAA6B,kEAAiB;AAC9C;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;ACjPe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCwC;AACL;AACW;AACL;AACF;;AAEY;AACW;AACS;AACE;AACT;AACS;AACR;;AAEzB;AACA;AACM;AACZ;AACQ;AAC8C;;;AAGxF,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA,IAAI,iDAAc;AAClB,IAAI,8CAAW;AACf,IAAI,oDAAgB;AACpB,IAAI,iDAAc;AAClB,IAAI,gDAAa;AACjB,IAAI,8DAAa;AACjB,IAAI,wEAAc;AAClB,IAAI,6EAAkB;AACtB,IAAI,8EAAmB;AACvB,IAAI,yEAAe;AACnB,IAAI,+EAAmB;AACvB,IAAI,2EAAe;AACnB;AACA,yBAAyB,qDAAW;AACpC,yBAAyB,qDAAW;AACpC,4BAA4B,wDAAc;AAC1C,sBAAsB,kDAAQ;AAC9B,sBAAsB,sDAAY;AAClC,+BAA+B,wFAAyB;AACxD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC/C4C;;AAIrB;;AAIkB;;AAKS;;AAEnD;;;AAGA;AACA,SAAS,wFAAa,CAAC,wEAAM,aAAa,wEAAM;AAChD;;;AAGA;AACA;AACA;AACA;AACA;;AAEO;;;AAGP;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,uBAAuB;AACnC;AACA,YAAY;AACZ;AACO;;AAEP;;AAEA;AACA,QAAQ,mDAAE;AACV;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,YAAY;AACZ;AACO;AACP;AACA,WAAW,mDAAE;AACb,GAAG;AACH;;;AAGA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,YAAY;AACZ;AACO;AACP,SAAS,wDAAS;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACO;;AAEP;;AAEA,sBAAsB,mDAAE;;AAExB;AACA,kBAAkB,wEAAM;AACxB,qBAAqB,wEAAM;AAC3B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,wEAAM;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,qFAAU;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;;;;ACzJoD;;AAEJ;;AAEhD;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,sBAAsB;AACjC;AACA,YAAY;AACZ;AACO;;AAEP;AACA;AACA;;AAEA;AACA,QAAQ,sDAAK;AACb;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACzBgC;;AAEiD;;AAI1C;;AAKrB;;;AAGlB;AACA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACe;;AAEf,EAAE,8FAAqB;;AAEvB;AACA,MAAM,kCAAkC,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,qCAAqC,YAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,mCAAmC,YAAY;AACrD,MAAM,mCAAmC,aAAa;AACtD,MAAM,4BAA4B;AAClC;;AAEA;AACA;AACA,eAAe;AACf;;AAEA,gBAAgB,8CAAI;AACpB,aAAa,kEAAK;AAClB,KAAK;;AAEL,qCAAqC;AACrC;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,UAAU,kEAAK;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,sBAAsB,mDAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+CAAQ,uBAAuB,yFAAgB;;;;;;;;;;;;;;;;;AClLO;;AAEI;;AAE1D,iEAAe;AACf;AACA,IAAI,qEAAS;AACb;AACA;AACA,kCAAkC,6DAAoB;AACtD,CAAC;;;;;;;;;;;;;;;;;ACRiB;AAC2B;;;AAG7C;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6CAA6C,gDAAM,GAAG,YAAY;;AAElE;AACA,iBAAiB,sDAAK;AACtB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yCAAyC,KAAK,KAAK,iBAAiB;AACpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,EAAE,gDAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACvM4D;AACF;AACO;AACA;AACF;AACU;AACnB;;AAEN;;AAEhD,iEAAe;AACf;AACA,IAAI,uEAAa;AACjB,IAAI,sEAAY;AAChB,IAAI,0EAAe;AACnB,IAAI,0EAAe;AACnB,IAAI,yEAAc;AAClB,IAAI,8EAAmB;AACvB,IAAI,qEAAS;AACb;AACA;AACA,6BAA6B,wDAAe;AAC5C,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;ACnB4B;;AAKH;;AAIF;;AAKP;;AAE0C;;;AAG5D;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,eAAe;AAC3B;AACA;;AAEA;;AAEA;;AAEA;;AAEA,wCAAwC,kBAAkB;AAC1D;AACA;;AAEA,sBAAsB,+DAAe;;AAErC,MAAM,mDAAE;AACR,wCAAwC,0EAAoC;AAC5E;;AAEA,MAAM,mDAAE,gDAAgD,mDAAE;AAC1D,wCAAwC,yEAAmC;AAC3E;;AAEA;AACA,MAAM,mDAAE,wCAAwC,mDAAE;;AAElD,cAAc,gDAAM,CAAC,gEAA0B;;AAE/C;AACA;;AAEA;AACA,MAAM,mDAAE;;AAER,cAAc,gDAAM,CAAC,gEAA0B;AAC/C,aAAa,wDAAU;AACvB,KAAK;;AAEL;AACA;;AAEA;AACA,MAAM,mDAAE,uCAAuC,+DAAiB;AAChE,cAAc,gDAAM,CAAC,kFAA4C;;AAEjE;;AAEA;;AAEA,gCAAgC,kEAAiB;;AAEjD;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;AACA,MAAM,mDAAE,wCAAwC,+DAAiB;AACjE,SAAS,mDAAE;AACX,cAAc,gDAAM,CAAC,4EAAsC;;AAE3D;AACA;;AAEA;AACA,MAAM,mDAAE;;AAER,cAAc,gDAAM,CAAC,8DAAwB;AAC7C;;AAEA;AACA,yEAAyE,mDAAE;AAC3E;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,MAAM,mDAAE;;AAER,cAAc,gDAAM,CAAC,mEAA6B;;AAElD;;AAEA;AACA,UAAU,mDAAE;AACZ;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,MAAM,mDAAE;AACR,MAAM,mDAAE;;AAER,cAAc,gDAAM,CAAC,uEAAiC;;AAEtD;AACA;;AAEA;AACA,MAAM,mDAAE;;AAER,cAAc,gDAAM,CAAC,4DAAsB;;AAE3C;AACA;;AAEA;AACA,MAAM,mDAAE;;AAER,cAAc,gDAAM,CAAC,gEAA0B;;AAE/C;AACA;;AAEA;AACA,MAAM,+DAAiB,oBAAoB,wDAAU;;AAErD,cAAc,gDAAM,CAAC,sEAAgC;;AAErD;AACA;;AAEA;AACA,MAAM,mDAAE,uCAAuC,wDAAU;;AAEzD,cAAc,gDAAM,CAAC,wEAAkC;;AAEvD;AACA;;AAEA;AACA,MAAM,mDAAE,6CAA6C,wDAAU;;AAE/D,cAAc,gDAAM,CAAC,yDAAmB;;AAExC;;AAEA;;AAEA;;AAEA,aAAa,+DAAe;AAC5B,KAAK;;AAEL;AACA;;AAEA;AACA,MAAM,mDAAE;AACR,oDAAoD,kEAA4B;AAChF;;AAEA;AACA,MAAM,mDAAE;AACR,cAAc,gDAAM,CAAC,yDAAmB;;AAExC;AACA,QAAQ,mDAAE,wCAAwC,wDAAU;AAC5D,gBAAgB,gDAAM;AACtB;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,eAAe;AAC3B;AACA;;AAEA;;AAEA,MAAM,mDAAE,+BAA+B,+DAAiB;AACxD;AACA;;AAEA,MAAM,mDAAE;AACR;AACA;;AAEA,MAAM,mDAAE;AACR;AACA;;AAEA,MAAM,mDAAE;AACR,OAAO,mDAAE;AACT,OAAO,+DAAiB;AACxB;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB;AACA,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;;AAEA,EAAE,iDAAO;AACT;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;;AAEpB,YAAY,eAAe;AAC3B;AACA;;AAEA,uBAAuB,kEAAiB;;AAExC;;AAEA;AACA;;AAEA;;AAEA,EAAE,iDAAO;;AAET;AACA;AACA;AACA,aAAa,mDAAE;AACf,aAAa,mDAAE;AACf,aAAa,mDAAE;AACf,aAAa,mDAAE;;AAEf;AACA,sDAAsD,yBAAyB;AAC/E,SAAS;AACT;AACA;AACA;AACA,iDAAiD,mDAAE;;AAEnD;AACA,6EAA6E,UAAU;;AAEvF,+CAA+C,0CAA0C;AACzF,SAAS;AACT;AACA;AACA;;AAEA;AACA,UAAU,mDAAE;AACZ;AACA,+CAA+C,gCAAgC;AAC/E,SAAS;AACT;;AAEA;AACA,WAAW,mDAAE;AACb,WAAW,mDAAE;AACb,WAAW,mDAAE;AACb,WAAW,mDAAE;AACb;;AAEA;AACA,sDAAsD,oBAAoB;AAC1E,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B,YAAY,UAAU;AACtB;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,eAAe;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,0CAA0C;AACzF;;AAEA,uBAAuB,kEAAiB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,eAAe;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,6BAA6B;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,eAAe;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,kDAAkD;AAC1D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,uBAAuB,kEAAiB;;AAExC,gBAAgB,mDAAE;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAyB;AAClE;AACA;AACA,SAAS;AACT,QAAQ;AACR,yCAAyC,8BAA8B;AACvE;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC5lBiE;AAC1B;;AAEiB;;;AAGxD,iEAAe;AACf;AACA,IAAI,0EAAe;AACnB,IAAI,gDAAa;AACjB;AACA;AACA,iCAAiC,4DAAmB;AACpD,CAAC;;;;;;;;;;;;;;;;;ACXgC;;AAIH;;;AAG9B;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACO;;AAEP;AACA;;AAEA,yBAAyB,kEAAiB;AAC1C;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,wDAAU;AACtC;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3C2E;;AAE3C;;AAEG;;AAKjB;;AAID;;AAIC;;AAElB;;;AAGe;AACf;AACA;;AAEA,EAAE,sFAAuB;;AAEzB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;;AAEA,IAAI,iDAAO;;AAEX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,gDAAM,eAAe,4BAA4B;;AAEvD;AACA;;AAEA;;AAEA;AACA,gBAAgB,8CAAQ,wBAAwB,iDAAS;;AAEzD;AACA,QAAQ,8CAAO,QAAQ,iBAAiB;AACxC;;AAEA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;;AAEA,IAAI,iDAAO;;AAEX,wBAAwB,8CAAQ,wBAAwB,iDAAS;;AAEjE;AACA,QAAQ,8CAAO,gBAAgB,mBAAmB;AAClD;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAAQ,qBAAqB,iFAAkB;;;;;;;;;;;;;;;;;AC7H4B;;AAErB;;AAEtD,iEAAe;AACf;AACA,IAAI,+EAAoB;AACxB;AACA;AACA,gCAAgC,2DAAkB;AAClD,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;ACFgB;;AAKY;;AAIS;;AAKZ;;AAEiC;;AAE5D;AACA,OAAO,iDAAO;AACd;AACA;;AAEA,EAAE,iDAAO;AACT,SAAS,qDAAW;AACpB;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,6CAAG,8CAA8C,wDAAU;AAC1E;;AAEA;;AAEA,wBAAwB,6CAAG,gCAAgC,6CAAG;;AAE9D;AACA;AACA,MAAM,6CAAG;AACT;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA,cAAc,gBAAgB;AAC9B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,wEAAgB;AACvC,0BAA0B,wEAAgB;AAC1C;;AAEA;AACA,IAAI,gDAAM,oBAAoB,8CAAI;;AAElC,qBAAqB,gDAAM;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,+DAAiB;AACjC;;AAEA;AACA,UAAU,6CAAG;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,mDAAE;;AAEV;;AAEA;AACA,gCAAgC,wDAAU;AAC1C;;AAEA;AACA,yBAAyB,6CAAG;AAC5B;AACA;;AAEA;AACA;AACA;AACA,WAAW,wDAAU,cAAc,mDAAE;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,mDAAE;;AAEV;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,0BAA0B;AACnE;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM,sDAAK;AACX;AACA;AACA;AACA;AACA,MAAM,sDAAK;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,mDAAE;AACT,MAAM,mDAAE;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,SAAS,mDAAE;AACX;;AAEA;;AAEA,WAAW,kEAAiB;;AAE5B;AACA,WAAW,mDAAE;AACb,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9TO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,2BAA2B;AAC3B;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACj1B4C;AACgB;AACI;;AAExB;;AAExC,iEAAe;AACf;AACA,IAAI,mDAAe;AACnB,IAAI,uEAAa;AACjB,IAAI,yEAAe;AACnB;AACA,yBAAyB,oDAAW;AACpC,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACRgB;;AAEc;;AAKF;;AAKS;;AAIT;;AASH;;AAE2C;;AAIhC;;;AAGtC;AACA;AACA;AACe;AACf,EAAE,uFAAiB;AACnB;;AAEA,+CAAQ,YAAY,kFAAY;;AAEhC;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AAC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AAEA,WAAW,kEAAK;AAChB;;AAEA;AACA,MAAM,+DAAE,wCAAwC,+DAAE;AAClD,WAAW,8CAAI,CAAC,8EAAiB;AACjC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAM,kEAAK;AACX,WAAW,kEAAK;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,+DAAE;AACR,WAAW,+DAAE;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,8EAAiB;AAC1B;AACA;AACA;;AAEA;AACA,UAAU,wDAAO,aAAa,+DAAE;AAChC;;AAEA;AACA,SAAS,+DAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,+DAAE;AACR;AACA;;AAEA;AACA,IAAI,+DAAE;AACN;AACA;AACA;;AAEA;AACA,WAAW,8EAAiB;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,IAAI,+DAAE;AACN,IAAI,8CAAI;AACR,aAAa,+DAAE;AACf,KAAK;AACL;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAM,wDAAO;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,+DAAiB;AACvB;AACA;;AAEA;AACA,OAAO,+DAAE;AACT;AACA;;AAEA;AACA,mBAAmB,iFAAoB;AACvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN,OAAO;AACP;AACA,MAAM;AACN;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;;AAET,SAAS,+DAAiB;;AAE1B,UAAU,+DAAE;AACZ;AACA;;AAEA;AACA;AACA,aAAa,4DAAc;AAC3B;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,YAAY,qEAAuB;AACnC,YAAY,0EAA4B;AACxC,YAAY,0EAA4B;AACxC;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAE;AACd;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,SAAS,+DAAE;AACX;AACA;;AAEA,YAAY,+DAAE;AACd;AACA;AACA;AACA,WAAW;AACX;;AAEA,YAAY,+DAAE;AACd;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA,MAAM,8CAAI;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA,MAAM,wDAAO;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,+DAAE;AACR;AACA,MAAM,wDAAU;AAChB;AACA;AACA;AACA;;AAEA,MAAM,+DAAE;AACR;AACA;;AAEA,MAAM,+DAAE;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK,+DAAE;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,+DAAE;AACb;;;AAGA;;AAEA,MAAM,kEAAK;AACX,MAAM,kEAAK;AACX,aAAa;AACb;;AAEA,MAAM,kEAAK;AACX,MAAM,kEAAK;AACX,aAAa;AACb;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,kEAAK;AACT,KAAK,wDAAO;AACZ,IAAI,+DAAE;AACN,KAAK,+DAAE;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,wDAAO;AACb;AACA;;AAEA,MAAM,+DAAE;AACR;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,WAAW,+DAAE;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,sEAAS,6BAA6B,sEAAS;AACxD;;;;;;;;;;;;;;;;;;AC97BwD;;AAEpB;;AAEpC,iEAAe;AACf;AACA,IAAI,qEAAW;AACf;AACA;AACA,uBAAuB,kDAAS;AAChC,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACNgB;;AAIkB;;;AAGpC;AACA;AACA;AACe;;AAEf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,gDAAM;AACnB;AACA,GAAG;;AAEH,aAAa,6CAAG;AAChB;AACA,mCAAmC,kEAAQ;AAC3C;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,gDAAM;AACnB;AACA,GAAG;;AAEH,aAAa,gDAAM;AACnB,WAAW,kEAAQ;AACnB,GAAG;;AAEH;AACA;;;AAGA;AACA,gBAAgB,gDAAM;AACtB;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;;;;;;;;;;AChIiE;;AAEX;;;AAGtD,iEAAe;AACf;AACA,IAAI,0EAAe;AACnB;AACA;AACA,wBAAwB,2DAAkB;AAC1C,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;ACRiD;AACnD;AACsE;AACtE;AAG0C;AAC1C;AAC0C;AAC1C;AACsD;AACtD;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oFAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8EAAG;AACnC;AACA;AACA,UAAU,kEAAK;AACf,8BAA8B,8EAAG;AACjC;AACA;AACA;AACA,UAAU,kEAAK;AACf;AACA;AACA;AACA;AACA,UAAU,+DAAE;AACZ;AACA;AACA;AACA,MAAM;AACN;AACA,UAAU,+DAAE;AACZ;AACA;AACA,kCAAkC,8EAAG;AACrC;AACA;AACA,UAAU,+DAAE;AACZ;AACA;AACA,8BAA8B,8EAAG;AACjC;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qFAAU;AAChB,MAAM;AACN,MAAM,qFAAU;AAChB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kBAAkB,8EAAG;AACrB;AACA;AACA;AACA,MAAM,qFAAU;AAChB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8EAAG;AACrB,oBAAoB,gFAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qFAAU;AAChB;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE,qFAAU;AACZ,EAAE,qFAAU;AACZ;AACA;AA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AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B,UAAU,SAAS,sDAAe;AAClC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;AAER;AACA,wDAAwD,OAAO,IAAI,YAAY;AAC/E,mBAAmB,sDAAe;AAClC,yBAAyB,sDAAe;AACxC,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA,MAAM;AACN;AACA,gDAAgD,MAAM,GAAG,YAAY;AACrE,iBAAiB,sDAAe;AAChC,uBAAuB,sDAAe;AACtC,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAoB,gDAAM;AAC1B;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,iDAAO;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,IAAI,iDAAO;AACX;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAI,iDAAO;AACX,IAAI,iDAAO;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iDAAO;AACb,MAAM,iDAAO;AACb,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,IAAI,iDAAO;AACX;;AAEA;AACA,IAAI,iDAAO;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI,iDAAO;AACX;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA,QAAQ;;AAER;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,+CAA+C,SAAS,YAAY,QAAQ;AAC5E,qBAAqB,sDAAe;AACpC,gCAAgC,sDAAe;AAC/C,WAAW;AACX,YAAY;AACZ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,iDAAO;;AAEX;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA,IAAI,iDAAO;AACX;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5ckB;;AAE4B;;AAEP;;;AAGvC;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,eAAe;AAC7B;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,4BAA4B;AACxC,YAAY,4BAA4B;AACxC;AACA;AACA,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,4BAA4B;AACzC,aAAa,4BAA4B;AACzC;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA,wBAAwB,oCAAoC;AAC5D;AACA;;AAEA,qBAAqB,uDAAc;;;AAGnC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,iDAAO;AACX;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,0BAA0B;;AAEvE;;AAEA;AACA;AACA;AACA,OAAO;;AAEP,uBAAuB,oBAAoB;AAC3C,MAAM;;AAEN;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAO,mDAAE,kCAAkC,mDAAE;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,mDAAE;AACR;AACA,IAAI;AACJ,oBAAoB,8CAAI;AACxB,WAAW,mDAAE;AACb;AACA;;AAEA,aAAa,8CAAI;AACjB;AACA,OAAO;AACP,KAAK;AACL;;AAEA;;AAEA;AACA;AACA,mBAAmB,6CAAG;AACtB;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;;AAEA,EAAE,iDAAO;AACT;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,mDAAE;AACV;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;AChOO;AACP;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACNsD;;AAEZ;;AAE1C,iEAAe;AACf;AACA,IAAI,qEAAS;AACb;AACA,0BAA0B,qDAAY;AACtC,CAAC;;;;;;;;;;;;;;;;;ACNiB;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,oDAAU;;AAEjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,8CAA8C,WAAW,sBAAsB,KAAK;AACpF;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,OAAO;AACP,MAAM;;AAEN;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEO;;AAEP;AACA,OAAO,6CAAG;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;;;ACpEqB;;AAIH;;;AAGX;;AAEP,MAAM,8CAAE;AACR;AACA;;AAEA,MAAM,8CAAE;AACR,eAAe,iDAAK;;AAEpB,cAAc,8CAAE;AAChB;AACA;;AAEA;AACA;;AAEA,MAAM,8CAAE;AACR,aAAa,6DAAiB;AAC9B;;AAEA;AACA;;AAEO;AACP,oBAAoB,6DAAiB;AACrC;;AAEO;AACP,sBAAsB,6DAAiB;AACvC;;AAEO;AACP,WAAW,6DAAiB;AAC5B;;AAEA;AACA,IAAI,iDAAO;AACX,UAAU,8CAAE;AACZ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;ACnEwC;;;AAGjC;;AAEP;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA,aAAa;AACb;AACO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA,aAAa;AACb;AACO;AACP;;AAEA,MAAM,8CAAE;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA,aAAa;AACb;AACO;AACP,WAAW,iDAAK;;AAEhB,SAAS,8CAAE;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC/DkB;;AAEe;;;AAG1B;AACP;AACA;AACA;;AAEO;;;AAGP;AACA;AACA;AACA,WAAW,aAAa;AACxB,YAAY,SAAS;AACrB;AACO;AACP,SAAS,8CAAE;AACX,SAAS,8CAAE;AACX,SAAS,8CAAE;AACX,SAAS,8CAAE;AACX,SAAS,8CAAE;AACX,SAAS,8CAAE;AACX,SAAS,8CAAE;AACX,SAAS,8CAAE;AACX,SAAS,8CAAE;AACX;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,WAAW;AACX;;;AAGA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACO;;AAEP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGO;;AAEP;AACA;AACA,IAAI,SAAS,8CAAE;AACf;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,gBAAgB;AAC3B;AACO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;;AAEA,SAAS,gDAAM;AACf;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;;;;;ACzJkB;;;AAGlB;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,QAAQ;AACpB;AACA,YAAY;AACZ;AACO;AACP;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,eAAe;AAC1B;AACA,YAAY;AACZ;AACO;AACP,SAAS,8CAAI;AACb;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA,YAAY;AACZ;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY;AACZ;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;;AAKiB;;;AAGjB;AACA;;AAEO;;AAEP;AACA,sBAAsB;AACtB;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oGAAoG,mBAAmB;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEO;;AAEP;AACA,eAAe,+CAAM;;AAErB,IAAI,kDAAgB;AACpB;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,KAAK,KAAK,YAAY,OAAO,MAAM,KAAK,KAAK,YAAY,WAAW,MAAM,KAAK,YAAY,aAAa,WAAW,MAAM,KAAK,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,MAAM,KAAK,YAAY,OAAO,KAAK,YAAY,QAAQ,MAAM,KAAK,KAAK,YAAY,aAAa,aAAa,aAAa,OAAO,MAAM,KAAK,KAAK,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,OAAO,MAAM,MAAM,KAAK,YAAY,WAAW,WAAW,YAAY,WAAW,MAAM,KAAK,UAAU,aAAa,WAAW,aAAa,WAAW,MAAM,KAAK,YAAY,OAAO,KAAK,UAAU,OAAO,MAAM,YAAY,YAAY,YAAY,OAAO,KAAK,UAAU,MAAM,KAAK,UAAU,OAAO,KAAK,UAAU,UAAU,UAAU,MAAM,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,MAAM,UAAU,UAAU,YAAY,WAAW,OAAO,QAAQ,KAAK,KAAK,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK,YAAY,OAAO,KAAK,UAAU,MAAM,MAAM,KAAK,KAAK,UAAU,UAAU,MAAM,KAAK,YAAY,WAAW,YAAY,OAAO,KAAK,UAAU,UAAU,YAAY,aAAa,WAAW,aAAa,cAAc,YAAY,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,OAAO,MAAM,KAAK,KAAK,YAAY,aAAa,WAAW,OAAO,YAAY,MAAM,YAAY,WAAW,OAAO,KAAK,YAAY,WAAW,OAAO,MAAM,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,cAAc,aAAa,aAAa,OAAO,KAAK,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,YAAY,OAAO,MAAM,KAAK,KAAK,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,aAAa,aAAa,OAAO,MAAM,MAAM,MAAM,YAAY,OAAO,MAAM,UAAU,MAAM,MAAM,KAAK,KAAK,WAAW,YAAY,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,OAAO,KAAK,YAAY,aAAa,aAAa,aAAa,OAAO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A;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACrGa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;;;;;;;;ACrBA;AACA,CAAC;AACD;AACA,KAAK,IAA0B;AAC/B;AACA;AACA,GAAG,KAAK,EAMN;AACF,CAAC,QAAQ,qBAAM,kBAAkB,qBAAM;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;ACzGgF;;AAEjC;;AAEhD,iEAAe;AACf;AACA,IAAI,kFAAuB;AAC3B;AACA;AACA,2BAA2B,0DAAa;AACxC,CAAC;;;;;;;;;;;;;;;;;ACPiB;;AAEc;;;AAGhC;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;;AAEf;;AAEA;AACA,sBAAsB,gDAAO;AAC7B;AACA,gBAAgB,8CAAI;AACpB,mBAAmB,8CAAI;AACvB,GAAG;AACH;;AAEA;;;AAGA;AACA;;AAEA,WAAW,QAAQ;AACnB,qDAAqD,SAAS,qBAAqB,QAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,6DAA6D,sBAAsB;AACnF;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,8CAAI;AACrB;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACxLkB;;AAOD;;AAEjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACe;AACf;;AAEA,gBAAgB,+CAAM;AACtB;AACA;AACA;AACA;;AAEA,iBAAiB,8CAAQ;;AAEzB;AACA;;AAEA,oBAAoB,8CAAI;AACxB,qBAAqB,8CAAI;AACzB;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,YAAY;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,oBAAoB,8CAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,gDAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,qBAAqB,8CAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,gDAAM;AACR;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,IAAI,gDAAM;AACV;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,EAAE,+CAAa;AACf,EAAE,+CAAa;AACf,EAAE,+CAAa;;AAEf;AACA,IAAI,+CAAa;AACjB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ,+CAAS;AACjB;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,+CAAM;AAC7C;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,MAAM,+CAAa;AACnB,MAAM,+CAAa;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA,MAAM,iDAAe;AACrB,MAAM,iDAAe;AACrB;;AAEA,IAAI,+CAAa;AACjB;;AAEA,EAAE,gDAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAe;AACjB,EAAE,iDAAe;AACjB,EAAE,iDAAe;AACjB,EAAE,iDAAe;;AAEjB;AACA;;AAEA,IAAI,+CAAS;AACb;;AAEA,EAAE,+CAAS;AACX;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC5cgC;;AAEA;;;AAGhC;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA,YAAY,eAAe;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,qBAAqB,0CAAQ;;AAE7B;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,gCAAgC,6CAAU;;AAE1C;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,uBAAuB,cAAc;AACrC,IAAI;AACJ;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B,WAAW,eAAe;AAC1B;AACe;;AAEf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,aAAa,QAAQ;AACrB;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD,MAAM;AACN;AACA,YAAY;AACZ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpMkB;;;AAGlB;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA,MAAM,oDAAU,UAAU,kDAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,oDAAU;AAChB;AACA;AACA;AACA;AACA;;AAEA,MAAM,kDAAQ;AACd;AACA;AACA;;AAEA,OAAO,oDAAU;AACjB;AACA;;AAEA,OAAO,iDAAO;AACd;AACA;;AAEA;;AAEA,EAAE,iDAAO;;AAET;AACA,yEAAyE,WAAW;;AAEpF;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAO;;AAEP;AACA,MAAM;AACN;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA,QAAQ,oDAAU,YAAY,kDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;AC5IiB;;;AAGlB;AACA;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA,6BAA6B,mCAAmC;AAChE,IAAI,kCAAkC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,UAAU;AAC3D,kBAAkB,YAAY,EAAE,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,QAAQ,kCAAkC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACe;;AAEf;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,iBAAiB,+CAA+C;AAChE;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iCAAiC;AACvD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY,SAAS;AACrB;AACA;;AAEA,iBAAiB;;AAEjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU,qBAAqB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,cAAc,mBAAmB;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8CAA8C,UAAU,kDAAQ,yBAAyB;;AAEzF;;AAEA,4BAA4B,kBAAkB;;AAE9C;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,iDAAO;;AAEpB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrgB0C;;AAE1C,iEAAe;AACf,0BAA0B,qDAAY;AACtC,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;ACMgB;;AAKW;;AAKH;;AAEoB;;AAS5B;;AAEsC;;;AAGxD;AACA;AACA;;AAEA;AACA,SAAS,kDAAQ;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB;AACA;;AAEA,YAAY,gDAAM,GAAG,IAAI,+BAA+B;;AAExD;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAE,gDAAM;AACR;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA,cAAc,gDAAS;AACvB,EAAE,iDAAU;;AAEZ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B;AACe;;AAEf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,6CAA6C,cAAc,WAAW,eAAe;AACrF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wBAAwB,gDAAS;AACjC,EAAE,8CAAO,QAAQ,+BAA+B;;AAEhD,EAAE,gDAAS;;AAEX;;AAEA;AACA;AACA;AACA,2BAA2B,kDAAQ,CAAC,8CAAI;AACxC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,kBAAkB,YAAY;AAC9B,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA,KAAK;;AAEL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,eAAe,uDAAO;;AAEtB;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA,SAAS,gDAAM;AACf;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ,wBAAwB;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,EAAE,gDAAS;;AAEX;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA,IAAI,gDAAS;AACb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,SAAS,8CAAI;AACb;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT;;AAEA;AACA;AACA,QAAQ,iDAAU;AAClB,QAAQ;AACR,QAAQ,iDAAU;AAClB;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,mBAAmB;AACnC,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,SAAS;AACzB;AACA,iDAAiD,kEAAkE;AACnH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,iDAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4BAA4B;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,YAAY,uBAAuB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,YAAY,uBAAuB;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,YAAY,uBAAuB;AACnC;AACA;;AAEA,MAAM,mDAAS;AACf;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,iCAAiC,kBAAkB;AACnD,kCAAkC,kBAAkB;;AAEpD;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,8BAA8B,kBAAkB;;AAEhD;;AAEA,gCAAgC,4BAA4B;AAC5D;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oCAAoC,sBAAsB;AAC1D;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAc,+CAAK;AACnB;AACA,GAAG;;AAEH;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA;;AAEA;AACA,EAAE,sDAAa;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAK;AACb,QAAQ,KAAK;AACb;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,uBAAuB;AAClC,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB;AACA,YAAY,uBAAuB;AACnC;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,iCAAiC,kCAAkC;;AAEnE;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,mCAAmC,4BAA4B;;AAE/D;AACA;;AAEA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,oCAAoC,kBAAkB;;AAEtD;;AAEA;AACA,EAAE,yDAAgB;AAClB;;AAEA,qCAAqC,kBAAkB;;AAEvD;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,YAAY,iBAAiB;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,iBAAiB;AACjC,gBAAgB,QAAQ;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,iBAAiB;AACjC,gBAAgB,QAAQ;AACxB;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA,YAAY,sBAAsB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,sBAAsB;AACtC,gBAAgB,QAAQ;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,sBAAsB;AACtC,gBAAgB,QAAQ;AACxB;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA,kDAAkD,yBAAyB;AAC3E;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yCAAyC;AAC7D;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,mDAAY;AAC5B,4CAA4C,sDAAY;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,mDAAY;AAClB,KAAK;AACL;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,gDAAM,GAAG,cAAc,aAAa;;AAElD;;AAEA;AACA,KAAK;AACL;;AAEA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,uDAAc;AACpC,oBAAoB,0DAAM;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,0DAAM;;AAE1B;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,gBAAgB,gCAAgC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,WAAW,cAAc,+BAA+B,cAAc;AACtE;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,kBAAkB,gDAAM;;AAExB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACt6CkB;;AAEgB;;AAElC;AACA;AACA;AACe;AACf;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;;AAEA,UAAU,gDAAM,GAAG,aAAa;;AAEhC;AACA;AACA;;AAEA,SAAS,8CAAM;AACf;;;;;;;;;;;;;;;;AC/CA;;AAE2C;;;AAG3C;AACA;AACA;AACA;AACA;AACe;AACf;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAE,8CAAO;;AAET;AACA,IAAI,8CAAO;AACX;;AAEA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,8CAAO;;AAEX;AACA,MAAM,8CAAO;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,IAAI,8CAAO;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,mBAAmB,8CAAO;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,mCAAmC,WAAW;AAC9C;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,mDAAmD;AACnD;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtPkB;;AAElB;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB,KAAK;AACvD,oCAAoC,oBAAoB;AACxD,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACe;AACf;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;;AAEA,WAAW,iDAAO;;AAElB,MAAM,oDAAU;AAChB;AACA;AACA;AACA;;AAEA,OAAO,kDAAQ;AACf;AACA;;AAEA;;AAEA;AACA,qBAAqB,8CAAI;;AAEzB;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA,MAAM,oDAAU;AAChB;AACA;AACA;AACA;;AAEA,OAAO,kDAAQ;AACf;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,0BAA0B,YAAY;AACtC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,UAAU;AACrB;AACA;;AAEA,WAAW,iDAAO;;AAElB;;AAEA;AACA;AACA,GAAG;;AAEH;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,iBAAiB,aAAa;AAC9B;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA,8BAA8B,cAAc;AAC5C;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,WAAW;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE,gDAAM,iBAAiB;AACzB;;;AAGA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,eAAe;AAC1B;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACpgBkB;;AAKY;;AAEuB;;AAET;;AAQ1B;;AAIQ;;AAE1B;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,iBAAiB;AAC5B;AACe;AACf;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,kBAAk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;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iDAAO;AACX;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA,kBAAkB,gDAAM;AACxB;;AAEA;AACA,OAAO;AACP;;AAEA,IAAI,iDAAO;AACX;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;;AAEA,IAAI,iDAAO;;AAEX,MAAM,iDAAO;;AAEb;AACA,QAAQ,iDAAO;AACf;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,SAAS;;AAET;AACA,QAAQ,iDAAO;AACf;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,wDAAS;AACb;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,MAAM,iDAAO;AACb,oBAAoB,wEAAsB;AAC1C;AACA,OAAO;AACP;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,iDAAO;AACX,kBAAkB,wEAAsB;;AAExC;;AAEA,MAAM,iDAAO;AACb;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;;AAEA,IAAI,wDAAS;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;;AAEA,+CAAQ,gBAAgB,mEAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACA;AACA,SAAS,iDAAO,CAAC,6CAAG;AACpB;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,uB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;;AAEhC;AACA;AACA;AACe;;AAEf,EAAE,gEAAiB;;AAEnB;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA,+CAAQ,qBAAqB,2DAAY;;AAEzC;AACA;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY,iBAAiB;AAC7B;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChCkC;;AAIR;;;AAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;;AAEf;;AAEA,eAAe,gDAAM;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,QAAQ,QAAQ;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,gBAAgB;;AAEpC;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,eAAe,gDAAM,GAAG;AACxB;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;;AAEA,uBAAuB,oDAAO;;AAE9B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/IyC;;AAEH;;;AAGtC,iEAAe;AACf;AACA,IAAI,iDAAc;AAClB;AACA;AACA,wBAAwB,mDAAU;AAClC,CAAC;;;;;;;;;;;;;;;;;ACXkE;;AAEnE;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,2CAA2C,4EAAwB;AACnE,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5OkB;;AAE6B;;AAES;;AAEZ;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACe;AACf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,+CAA+C,wBAAwB;AACvE;;AAEA;;AAEA;AACA,0CAA0C,4DAAY;;AAEtD,IAAI,iDAAU;;AAEd;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,YAAY,yDAAS;AACrB;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,QAAQ;AACR,YAAY,yDAAS;AACrB;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,IAAI,iEAAS;AACb,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,gDAAS;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtMkB;;AAEgC;;AAElD;AACA;;AAEA;;;AAGe;;AAEf;;AAEA,QAAQ,iDAAO;AACf;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;;AAExC,IAAI,iDAAO;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAE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A;AACA;;AAEA;AACA,QAAQ,8CAAO,uBAAuB,0BAA0B;AAChE;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA,SAAS,8CAAQ;AACjB;;;;;;;;;;;;;;;;;;;;ACzZ6B;;AAKJ;;AAKQ;;AAEjC;AACA;;AAKkB;;AAImB;;;AAGrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,mBAAmB,0DAAM;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yEAAyB;AAChD;;AAEA,gBAAgB,6DAAa;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,cAAc;AAC3B;AACA,cAAc,cAAc;AAC5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,iEAAS;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,SAAS;AACtB;AACA,cAAc,UAAU;AACxB;AACA;;AAEA;;AAEA;AACA,UAAU,4DAAY;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,iEAAiB;AAC1C,IAAI,iDAAU;;AAEd;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mCAAmC,kEAAc;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,kEAAc;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,gDAAS;AACf;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzayC;AACN;;AAEG;AACM;AACc;AACE;AACR;;;AAGpD,iEAAe;AACf;AACA,IAAI,iDAAc;AAClB,IAAI,8CAAW;AACf;AACA;AACA,wBAAwB,mDAAU;AAClC,2BAA2B,sDAAa;AACxC,kCAAkC,6DAAoB;AACtD,mCAAmC,8DAAqB;AACxD,+BAA+B,0DAAiB;AAChD,CAAC,EAAC;;;;;;;;;;;;;;;;;ACnB2B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B;AACe;AACf;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,uDAAc;AAChC,GAAG;;AAEH;;AAEA;;AAEA;AACA,yCAAyC,YAAY;AACrD,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClE4C;;AAE5C,iEAAe;AACf;AACA,2BAA2B,sDAAa;AACxC,CAAC;;;;;;;;;;;;;;;ACLD;AACA;AACA;AACe;;;AAGf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACxBoC;;AAEpC,iEAAe;AACf,uBAAuB,kDAAS;AAChC,CAAC,EAAC;;;;;;;;;;;;;;;;;;;ACF+B;;AAKf;;;AAGH;;AAEf;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,QAAQ,+CAAK;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,QAAQ,+CAAK;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,kDAAQ;AAChB;AACA;;AAEA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,gBAAgB;AAC7B,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA,SAAS,kDAAQ;AACjB;AACA,wBAAwB,0DAAM;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACpJsC;;AAEtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,QAAQ,mDAAS;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACjF2C;AACR;AACM;;AAET;AACc;;AAE9C,iEAAe;AACf;AACA,IAAI,kDAAe;AACnB,IAAI,8CAAW;AACf,IAAI,iDAAc;AAClB;AACA;AACA;AACA;AACA,qBAAqB,gDAAO;AAC5B,4BAA4B,uDAAc;AAC1C,CAAC,EAAC;;;;;;;;;;;;;;;;;;;ACXgB;;AAIA;;AAKe;;;AAGjC;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B,WAAW,gBAAgB;AAC3B;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,EAAE,+CAAQ;;AAEV;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,eAAe,0DAAM;AACrB,eAAe,0DAAM;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,uCAAuC,0DAAM;AAC7C,mCAAmC,0DAAM;;AAEzC;;AAEA;;AAEA,EAAE,gDAAS;AACX;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2DAA2D,2BAA2B;;AAEtF,qBAAqB,8EAA0B;AAC/C,mBAAmB,8EAA0B;;AAE7C;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB;AACA;AACA;AACA,IAAI,gDAAS;AACb;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,gDAAS;;AAErB,EAAE,8CAAO;AACT;AACA,GAAG;;AAEH,EAAE,iDAAU;;AAEZ,EAAE,gDAAS;;AAEX;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA,mBAAmB,gDAAS;;AAE5B,EAAE,8CAAO;AACT;AACA;AACA;AACA;AACA,GAAG;;AAEH,EAAE,8CAAO,eAAe,8CAA8C;;AAEtE;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,aAAa;AACb;AACA;AACA,MAAM,kDAAQ;AACd;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;;ACtSoD;;AAEpD,iEAAe;AACf;AACA,+BAA+B,0DAAiB;AAChD,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACCgB;;AASD;;AAEjB;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,gBAAgB,gBAAgB,oBAAoB;AAC/D,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACe;;AAEf;AACA;;AAEA,cAAc,mDAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,IAAI,iDAAO;AACX;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA;;AAEA;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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,OAAO;AACP,MAAM;AACN,qEAAqE,gDAAM,GAAG;AAC9E;AACA,OAAO;;AAEP;AACA,cAAc,8CAAI;AAClB;AACA,OAAO;AACP;;AAEA;AACA,IAAI,gDAAM;AACV;AACA;AACA,KAAK;;AAEL,IAAI,gDAAM;AACV;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA,SAAS,iDAAO;AAChB;AACA;;AAEA,gBAAgB,8CAAI;AACpB;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA,cAAc,gDAAM;AACpB;AACA,eAAe;AACf;AACA,KAAK,eAAe;;AAEpB;AACA,IAAI,iDAAO;AACX,WAAW,kDAAQ;AACnB;AACA;;AAEA,WAAW,kDAAQ;AACnB;AACA;AACA,KAAK;;AAEL,0BAA0B,gDAAM;AAChC;AACA,KAAK;;AAEL,eAAe,uDAAO;;AAEtB;AACA,IAAI,iDAAO;AACX;AACA,4BAA4B,6CAAG;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,MAAM,gDAAM;AACZ;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5WqC;AACrC;AACoD;AACpD;AAMkB;AAClB;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gDAAS;AAC7B;AACA,IAAI,8CAAO;AACX;AACA,sBAAsB,gDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6DAAS;AAChD,QAAQ;AACR;AACA;AACA,kCAAkC,6DAAS;AAC3C;AACA,QAAQ,iEAAS;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gDAAS;AACjB;AACA;AACA,MAAM,iEAAS;AACf,MAAM;AACN,MAAM,gDAAS;AACf;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gDAAS;AACf;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrGyC;AACa;AACnB;AACQ;;AAEb;AACc;;;AAG5C,iEAAe;AACf;AACA,IAAI,iDAAc;AAClB,IAAI,wDAAoB;AACxB,IAAI,8CAAW;AACf,IAAI,kDAAe;AACnB;AACA;AACA;AACA;AACA;AACA,oBAAoB,+CAAM;AAC1B,2BAA2B,sDAAa;AACxC,CAAC,EAAC;;;;;;;;;;;;;;;;;AClBgB;;AAElB;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACe;AACf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iDAAO;AACX;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;;AAEA,WAAW,gDAAM;AACjB;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,gDAAM;;AAE7B,EAAE,iDAAO;AACT;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN,gBAAgB;;AAEhB;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ,QAAQ;AAC5B,YAAY,QAAQ,QAAQ;AAC5B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxNsD;;AAEtD,iEAAe;AACf;AACA,gCAAgC,2DAAkB;AAClD,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;;ACLF;;AAEkC;;AAIjB;;AAMS;;AAKC;;AAIG;;AAIG;;AAEjC;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,4BAA4B;AAC5B,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,MAAM;AACN;AACA;AACe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,MAAM,gDAAM;AACZ,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,oDAAO;AAC/B,sBAAsB,yDAAQ;;AAE9B;AACA;AACA,qBAAqB,yDAAQ;;;AAG7B;AACA;;AAEA;AACA;;AAEA,MAAM,gDAAM;AACZ;AACA;AACA;AACA;AACA,OAAO,IAAI,sBAAsB;;AAEjC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,iDAAS;AACjB;;AAEA;AACA;AACA;;AAEA,IAAI,4DAAe;;AAEnB;;AAEA;AACA,MAAM,gDAAM;AACZ;AACA;AACA;AACA;AACA,OAAO,IAAI,sBAAsB;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ,4DAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,wDAAgB;;AAE/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,OAAO,YAAY,OAAO;AACzE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,mDAAW;;AAEf;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,IAAI,iDAAe;;AAEnB,IAAI,iDAAe;AACnB,IAAI,iDAAe;;AAEnB,IAAI,iDAAe;AACnB,IAAI,iDAAe;;AAEnB,IAAI,iDAAe;;AAEnB,IAAI,iDAAe;AACnB,IAAI,iDAAe;AACnB,IAAI,iDAAe;AACnB,IAAI,iDAAe;;AAEnB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,gDAAM,GAAG,+BAA+B;;AAEtD,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,sBAAsB,wDAAW;AACjC,oBAAoB,oDAAO;;AAE3B,MAAM,4DAAe;;AAErB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,sBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAc,gDAAM;AACpB;AACA;AACA,iBAAiB;AACjB;AACA,oBAAoB,yDAAQ;AAC5B;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA,QAAQ,+CAAa;AACrB,QAAQ,+CAAa;AACrB,QAAQ,+CAAa;AACrB,QAAQ,+CAAa;AACrB,QAAQ;;AAER;AACA,QAAQ,+CAAa;;AAErB;AACA,QAAQ,+CAAa;AACrB,QAAQ,+CAAa;;AAErB,QAAQ,+CAAa;AACrB,QAAQ,+CAAa;AACrB;;AAEA,MAAM,+CAAa;;AAEnB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,gDAAM;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9iB0C;AACC;;AAET;;;AAGlC,iEAAe;AACf;AACA,IAAI,kDAAc;AAClB,IAAI,kDAAe;AACnB;AACA,sBAAsB,iDAAQ;AAC9B,CAAC;;;;;;;;;;;;;;;;ACTiB;;AAElB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACe;;AAEf;AACA;;AAEA;;AAEA;;AAEA,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,uDAAuD,4BAA4B;AACnF;;AAEA;AACA;AACA;AACA,eAAe,iDAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;ACjQ4C;;AAE5C,iEAAe;AACf;AACA,2BAA2B,sDAAa;AACxC,CAAC,EAAC;;;;;;;;;;;;;;;;ACLF;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA,mDAAmD,qBAAqB;AACxE;;;;;;;;;;;;;;;;;;;;;;ACpIuC;AACJ;AACM;AACO;AACb;;AAES;;AAE5C,iEAAe;AACf;AACA,IAAI,gDAAa;AACjB,IAAI,8CAAW;AACf,IAAI,iDAAc;AAClB,IAAI,qDAAiB;AACrB,IAAI,8CAAW;AACf;AACA,2BAA2B,sDAAa;AACxC,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;ACd4B;AAC9B;AACiD;AACjD;AAIkB;AAClB;AAIoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,6DAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gDAAM;AACd;AACA;AACA,WAAW,6DAAS;AACpB;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,EAAE,8DAAU;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,SAAS,8CAAO;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mDAAQ,QAAQ,8CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAQ;AAChB,YAAY,mDAAQ,eAAe,8CAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAQ;AAChB,YAAY,mDAAQ,eAAe,8CAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,kDAAQ;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxVO;;AAEA;AACP;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACRgC;AAChC;AACqE;AACrE;AAIkB;AAClB;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,wEAAuB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAQ;AAChB;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAAQ,iBAAiB,mEAAkB;AAC3C;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,4BAA4B,QAAQ;AACvD;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,4BAA4B,QAAQ;AACvD;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,4BAA4B,QAAQ;AACvD;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAM;AACR;AACA;AACA;;;;;;;;;;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzC8C;AACM;AACpD;AACA,iEAAe;AACf;AACA;AACA;AACA;AACA,wCAAwC,uDAAc;AACtD,2CAA2C,0DAAiB;AAC5D,CAAC;;;;;;;;;;;;;;;;;ACVyC;AAC1C;AACoD;AACpD;AACA,iEAAe;AACf,iBAAiB,iDAA0B;AAC3C;AACA,0BAA0B,qDAAY;AACtC,CAAC;;;;;;;;;;;;;;;;;ACNyB;;AAEmC;;AAE7D;AACA;;;AAGe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA,SAAS,+DAAkB;AAC3B;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,kBAAkB;AACjE,KAAK;;AAEL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,SAAS,+DAAkB;;AAE3B;AACA;AACA,OAAO;;AAEP;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS,sEAAK;AACd;;;;;;;;;;;;;;;;;;AC9JgD;AACb;;AAED;;AAElC,iEAAe;AACf;AACA,IAAI,qDAAiB;AACrB,IAAI,8CAAW;AACf;AACA;AACA,sBAAsB,iDAAQ;AAC9B,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACVe;;AAIS;;AAE1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACe;;AAEf;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,uBAAuB,4BAA4B;;AAEnD;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAO;;AAEP,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,KAAK;;AAEL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,oDAAO;;AAEtB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,SAAS,gDAAU;AACnB;;;;;;;;;;;;;;;;AC/JkC;;AAElC,iEAAe;AACf;AACA;AACA;AACA,sBAAsB,iDAAQ;AAC9B,CAAC;;;;;;;;;;;;;;;;;;;;ACJiB;;AAMD;;AAKS;;AAOR;;AAKa;;AAE/B,2BAA2B;;AAE3B;AACA,SAAS,4DAAe,WAAW,8DAAiB;AACpD;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;;AAEf;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,aAAa,gBAAgB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mDAAmD,wDAAe;;AAElE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,YAAY;AACzB,aAAa,gBAAgB;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,kDAAgB;AACxC;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAI,oDAAkB;AACtB;;AAEA;AACA,IAAI,iDAAO;AACX;AACA,KAAK;AACL;;AAEA;AACA,IAAI,iDAAO;AACX;AACA,KAAK;AACL;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;;AAEA,mDAAmD,4BAA4B;AAC/E,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mDAAmD,4BAA4B;AAC/E,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAY,gDAAM;AAClB;AACA;AACA,KAAK,aAAa;;AAElB;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAI,8CAAO;;AAEX;AACA;;AAEA;AACA,IAAI,gDAAS;AACb;;;AAGA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA,eAAe,iDAAW;;AAE1B,IAAI,iDAAO,OAAO,4CAAS;AAC3B;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,YAAY;AACzB;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,cAAc;AAC3B;AACA,cAAc;AACd;AACA;;AAEA,cAAc,4DAAU;;AAExB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,cAAc;AACd;AACA;;AAEA,YAAY,gDAAM;AAClB;AACA;AACA,KAAK;;AAEL,cAAc,gDAAS;;AAEvB;;AAEA,IAAI,8CAAO;;AAEX;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,YAAY;AAC1B;AACA,cAAc,YAAY;AAC1B;AACA;;AAEA,cAAc,8CAAQ;;AAEtB;AACA;AACA;;AAEA;AACA,MAAM,4DAAU;AAChB,MAAM;AACN,MAAM,8CAAO;AACb;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,gBAAgB;AAC9B,cAAc,YAAY;AAC1B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,gBAAgB;AAC9B,cAAc,YAAY;AAC1B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,gBAAgB;AAC9B,cAAc,YAAY;AAC1B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,gBAAgB;AAC9B,cAAc,YAAY;AAC1B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,gBAAgB;AAC9B,cAAc,YAAY;AAC1B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,gBAAgB;AAC9B,cAAc,YAAY;AAC1B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,gBAAgB;AAC9B,cAAc,YAAY;AAC1B,cAAc,OAAO;AACrB;;;;;;;;;;;;;;;;ACxfoD;;AAEpD,iEAAe;AACf;AACA,+BAA+B,0DAAiB;AAChD,CAAC;;;;;;;;;;;;;;;;ACHiB;;;AAGlB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,WAAW;AACtB;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB,gDAAM,GAAG,8BAA8B;;AAExD;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9IyC;AACE;;AAEiB;;AAE5D,iEAAe;AACf;AACA,IAAI,iDAAc;AAClB,IAAI,kDAAe;AACnB;AACA;AACA;AACA;AACA,mCAAmC,8DAAqB;AACxD,CAAC,EAAC;;;;;;;;;;;;;;;;;;;ACZgB;;AAMD;;AAOO;;AAExB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACe;AACf;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO,oDAAK;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,gDAAU;;AAEpC;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,EAAE,+CAAa;AACf,EAAE,+CAAa;;AAEf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,iDAAe;AACnB,IAAI,iDAAe;AACnB;;AAEA;AACA;;AAEA;AACA,6CAA6C,kBAAkB;AAC/D;;AAEA;AACA;AACA;AACA;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gCAAgC,qEAAuB;AACvD;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,EAAE,kDAAO;AACT;AACA,GAAG;AACH;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,WAAW,6BAA6B;AACxC,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB;AACA,YAAY,sBAAsB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,OAAO;AAClB,WAAW,gCAAgC;AAC3C,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA,YAAY,iBAAiB;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA,OAAO,kDAAO;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,wBAAwB;AACnC,WAAW,OAAO;AAClB,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,6BAA6B;AACxC,WAAW,gBAAgB;AAC3B;AACA,YAAY,iBAAiB;AAC7B;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4EAA4E,iDAAM;AAClF;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA,4EAA4E,iDAAM;AAClF;AACA,GAAG;AACH;;AAEA;AACA,0DAA0D;AAC1D;;AAEA;AACA,uBAAuB,yCAAI;AAC3B;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACxgBmC;;AAEnC;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;;AAGA,EAAE,iDAAO;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM;AACN;;AAEA,MAAM;AACN;;AAEA,MAAM;AACN;;AAEA,MAAM;AACN;;AAEA,MAAM;AACN;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;;AAEA;;;;;;;;;;;;;;;;;ACpDgC;;;AAGhC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,WAAW,UAAU;AACrB;AACe;AACf;AACA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;;AAEtC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AAGA;AACA,SAAS,8CAAI;AACb;AACA,GAAG;AACH;;;;;;;;;;;;;;;ACtEe;AACf;AACA;AACA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,kBAAkB;AAC7B,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AClDkB;AAClB;AAIgC;AAChC;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,iDAAO;AACT,SAAS,kDAAQ;AACjB;AACA;AACA;AACA,SAAS,kDAAQ;AACjB;AACA;AACA,GAAG;AACH;AACA,wBAAwB,gDAAM;AAC9B;AACA,GAAG;AACH;AACA,aAAa,uDAAO;AACpB;AACA;AACA,EAAE,iDAAO;AACT;AACA,0BAA0B,6CAAG;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,IAAI,gDAAM;AACV;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,gBAAgB,0DAAU;AAC1B;AACA;AACA;AACA,EAAE,iDAAO;AACT;AACA,4BAA4B,kDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gDAAM,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAQ;AAClC;AACA;AACA,QAAQ,8CAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8CAAI;AACZ;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB,gDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3HgC;;AAEsB;;;AAGtD;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACe;AACf,EAAE,gEAAuB;AACzB;;AAEA,+CAAQ,qBAAqB,2DAAkB;;AAE/C;;;AAGA;;;AAGA,sBAAsB,6EAAoC;;AAE1D;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,qBAAqB,4EAAmC;;AAExD;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;ACnEkC;;AAElC;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACe;AACf;AACA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,gDAAM;AACV,IAAI;AACJ,IAAI,gDAAM;AACV;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACnEmC;;;AAGnC;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA,wBAAwB,0DAAa;;AAErC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE,sDAAa;;AAEf;;AAEA;AACA;;;;;;;;;;;;;;;;;AC3DmC;;;AAGpB;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;AC/BmC;;AAEe;;;AAGlD;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAE,wDAAS;;AAEX;AACA;AACA,4CAA4C,cAAc;AAC1D,GAAG;;AAEH,EAAE,wDAAS;AACX,4CAA4C,cAAc;AAC1D,GAAG;;AAEH;AACA,EAAE,wDAAS;AACX;AACA,yCAAyC,cAAc;AACvD,MAAM;AACN,oCAAoC,cAAc;AAClD;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,2BAA2B,0DAAa;;AAExC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE,sDAAa;;AAEf;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC3FkB;;;AAGlB;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB,EAAE,iDAAO;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,gDAAM;;AAE3B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,IAAI,iDAAO;;AAEX;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,IAAI,iDAAO;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;;AAEA;;;;;;;;;;;;;;;;;ACzJkC;;;AAGlC;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAE,gDAAM;AACR;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACnCmC;;;AAMA;;;AAGnC;AACA;AACA;AACA;AACA;AACA;AACe;;;AAGf;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,yDAAgB;;AAE3C;AACA,EAAE,sDAAa;;AAEf;AACA;;AAEA;AACA,EAAE,iDAAO;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,yDAAgB;;AAElB;AACA,EAAE,sDAAa;;AAEf;AACA;;AAEA;AACA,EAAE,iDAAO;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;;AChF6C;;;AAG7C;AACA;AACA;AACe;AACf,qBAAqB,0DAAU;AAC/B;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7BkB;;AAE2B;;AAKV;;AAKH;;;AAGhC;AACA;AACA;AACe;AACf;;AAEA,qBAAqB,0DAAU;AAC/B;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,8CAAI;;AAE1B;AACA;AACA,2BAA2B,yDAAgB;;AAE3C;AACA,EAAE,sDAAa;;AAEf;AACA,EAAE,gDAAM;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,IAAI,iDAAO;AACX;AACA,uBAAuB,2EAAoB;AAC3C,OAAO;AACP,KAAK;;AAEL,IAAI,iDAAO;AACX;AACA,yBAAyB,2EAAoB;AAC7C,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE,sDAAa;;AAEf;AACA,EAAE,gDAAM;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACpHmC;;;AAGnC;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,iDAAO;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iDAAO;AAC3B;;AAEA;AACA;AACA,oBAAoB,iDAAO;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;AAIA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACzGmC;;AAKH;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB;AACe;AACf;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sCAAsC,YAAY;AAClD;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT;AACA;;AAEA;AACA;AACA;AACA,QAAQ,6EAAsB;AAC9B;AACA;AACA;AACA,GAAG;;AAEH,EAAE,iDAAO;AACT;AACA;;AAEA;AACA;AACA;AACA,QAAQ,6EAAsB;AAC9B;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9IkB;;AAKc;;;AAGhC;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,gDAAM;AACR;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT;AACA,qBAAqB,6EAAsB;AAC3C,KAAK;AACL,GAAG;;AAEH,EAAE,iDAAO;AACT;AACA,uBAAuB,6EAAsB;AAC7C,KAAK;AACL,GAAG;;AAEH;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAE,gDAAM;AACR;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;;;;;AC1GkB;;AAKkB;;AAOJ;;;AAGhC;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE,iDAAO;AACT;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,IAAI,sFAA+B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,EAAE,iDAAO;AACT;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;;AAEA,EAAE,iDAAO;AACT,oBAAoB,mEAAY;;AAEhC;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB,6CAAG;AACrB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP,MAAM;;AAEN;AACA;AACA,sCAAsC,2EAAoB;AAC1D,QAAQ;AACR,oCAAoC,2EAAoB;AACxD,QAAQ;AACR,sCAAsC,6EAAsB;AAC5D;AACA;AACA,QAAQ;AACR,oCAAoC,6EAAsB;AAC1D;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;AACA,SAAS,gDAAM,GAAG;AAClB;;AAEA;AACA,SAAS,6CAAG;;AAEZ;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AAC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CA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3D4B;;AAE5B,iEAAe;AACf;AACA,mBAAmB,8CAAK;AACxB,CAAC,EAAC;;;;;;;;;;;;;;;;;;;ACAgB;;AAElB;AACA;AACA;;AAEmE;;AAIzC;;AAE1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB;AACe;AACf;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,gDAAM;AACV;AACA;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C,qBAAqB,wBAAwB;AAC7C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;;AAEA;;AAEA,SAAS,4DAAe;AACxB;AACA;;AAEA,w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qC,qBAAqB,aAAa;AACvE,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB,aAAa;AACvE,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB,aAAa;AACvE,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B;AACe;;AAEf;AACA;AACA;;AAEA;;AAEA,0BAA0B,gDAAM;;AAEhC;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA,kBAAkB,mCAAmC;AACrD;AACA;AACA,kBAAkB,sCAAsC;AACxD;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB;AACA,YAAY,sBAAsB;AAClC;AACA;;AAEA,MAAM,kDAAQ;AACd,eAAe;AACf;;AAEA,MAAM,kDAAQ;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B,gDAAM,qBAAqB,sDAAY,GAAG,mBAAmB;AACxF,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA,WAAW,gDAAM,iBAAiB,sDAAY,GAAG,mBAAmB;AACpE,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,yBAAyB;AACpC,WAAW,yBAAyB;AACpC;AACA,WAAW,yBAAyB;AACpC,WAAW,yBAAyB;AACpC,WAAW,yBAAyB;AACpC,WAAW,yBAAyB;AACpC,WAAW,yBAAyB;AACpC,WAAW,yBAA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kB,+CAAM;AACxB;;AAEA;AACA,MAAM,6CAAO;;AAEb;AACA,QAAQ,6CAAO;AACf;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,+CAAM;AAClC;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,6CAAO;;AAEzB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,MAAM,oDAAU;AAChB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;;AAGA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,8CAAQ;;AAE/B,2BAA2B,8CAAQ;AACnC;;AAEA;;AAEA,EAAE,iDAAO;AACT;;AAEA;AACA;AACA;;AAEA,sBAAsB,gDAAU;;AAEhC;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,SAAS,gDAAU;AACnB;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,gBAAgB,gDAAU;;AAE1B,yBAAyB,iDAAO;AAChC;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;;AAEA,MAAM,oDAAU;AAChB;AACA;;AAEA,EAAE,iDAAO;AACT;AACA,GAAG;;AAEH;AACA;;;;;;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jB;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU,QAAQ;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,EAAE,gDAAM,oBAAoB,sBAAsB,IAAI,wCAAwC;AAC9F;;;AAGA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA,yBAAyB,+CAAM;AAC/B;;AAEA,EAAE,gDAAU;;AAEZ,EAAE,iDAAO;AACT;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA,uBAAuB,+CAAM;AAC7B,qBAAqB,gDAAU;;AAE/B;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,EAAE,6CAAO;;AAET;AACA,gBAAgB,+CAAM;AACtB;AACA;AACA;;AAEA;AACA,+BAA+B,+CAAM;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;ACvkBoC;;AAEpC,iEAAe;AACf;AACA,uBAAuB,kDAAS;AAChC,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;ACHgB;AAClB;AAQkB;AAClB;AAC4C;AAC5C;AACoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iDAAO;AACX,MAAM,gDAAS;AACf,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA,gBAAgB,+CAAQ;AACxB;AACA;AACA,qBAAqB,6DAAS;AAC9B;AACA,EAAE,8CAAO;AACT;AACA;AACA,GAAG;AACH;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,YAAY;AACvB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA,cAAc,gDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8CAAO;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAI,iDAAU;AACd;AACA;AACA;AACA;AACA;AACA,eAAe,8CAAQ;AACvB;AACA;AACA,aAAa,gDAAS;AACtB;AACA,MAAM,gDAAS;AACf;AACA;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA,EAAE,8CAAO;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB;AACA,WAAW;AACX;AACA;AACA,yBAAyB,8CAAO;AAChC;AACA,SAAS,8CAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrP8C;;AAE9C,iEAAe;AACf;AACA,4BAA4B,uDAAc;AAC1C,CAAC,EAAC;;;;;;;;;;;;;;;;;ACHgB;;AAElB;;AAEA;AACA;AACA;AACe;;AAEf;AACA;;AAEA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI,gDAAM;AACV,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3DgC;;AAEhC,iEAAe;AACf;AACA,qBAAqB,gDAAO;AAC5B,CAAC;;;;;;;;;;;;;;;;;;;ACFiB;;AAOI;;AAMW;;AAEjC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA,6BAA6B,2BAA2B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACe;;AAEf;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,yDAAY;;AAE5B;AACA,wBAAwB,8DAAiB;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB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AAM,iDAAU;AAChB;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,MAAM,gDAAS;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AClFkB;;AAElB;AACA;;AAEA;;AAI6B;;AAKI;;;AAGjC;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,KAAK,2BAA2B;AAChC;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA,MAAM,kDAAQ;AACd;AACA;;AAEA,MAAM,kDAAQ;AACd;AACA;;AAEA;AACA;;AAEO;;AAEP;AACA;AACA;;AAEA,oBAAoB,0DAAM;;AAE1B,SAAS,4DAAQ;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGO;;AAEP,mBAAmB,0DAAM;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,0DAAM;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,4DAAQ;AACjB;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD,YAAY,eAAe;AAC3B;AACA,YAAY;AACZ;AACO;;AAEP;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,gDAAM;;AAErB,IAAI;AACJ;AACA;;AAEA;AACA,sBAAsB,uDAAO;AAC7B;AACA;;;;;;;;;;;;;;;;;;;;;;ACnPmC;AACM;AACa;;AAExB;AACc;AACA;;AAE5C,iEAAe;AACf;AACA,IAAI,8CAAW;AACf,IAAI,iDAAc;AAClB,IAAI,wDAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+CAAM;AAC1B,2BAA2B,sDAAa;AACxC,2BAA2B,sDAAa;AACxC,CAAC,EAAC;;;;;;;;;;;;;;;;;;;ACtB8B;;AAEkC;;;AAGlE;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B;AACe;;AAEf,kBAAkB,mEAAkB;;AAEpC;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,+CAAQ,uBAAuB,mEAAkB;;AAEjD;;;;;;;;;;;;;;;;ACrC0D;;AAE1D,iEAAe;AACf;AACA,kCAAkC,6DAAoB;AACtD,CAAC,EAAC;;;;;;;;;;;;;;;;;;;ACL8B;;AAEkC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;AACf,EAAE,wEAAuB;;AAEzB;AACA;;AAEA;;AAEA,+CAAQ,eAAe,mEAAkB;;;AAGzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;AACf;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AC7C4B;;AAE5B,iEAAe;AACf;AACA,mBAAmB,8CAAK;AACxB,CAAC,EAAC;;;;;;;;;;;;;;;;;;;ACEe;;AAIY;;AAIE;;AAE/B;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,+CAAM;AAC1B,sBAAsB,8CAAQ;AAC9B,2BAA2B,8CAAQ;;AAEnC;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,kDAAgB;AAChC,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI,oDAAkB;AACtB,GAAG;AACH;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,8CAAQ;AACrB;AACA;AACA;;;AAGA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,EAAE,8CAAQ;;AAEV;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS,8CAAQ;AACjB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA,aAAa,+CAAM;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,6CAAO;;AAET;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,oBAAoB,mCAAmC;AACvD;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAE,gDAAU;;AAEZ;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAE,gDAAU;;AAEZ;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,gDAAU;AACd;;AAEA,WAAW,6CAAO;AAClB;;AAEA,EAAE,gDAAU;;AAEZ;;AAEA,0CAA0C,UAAU;;AAEpD;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,WAAW,6CAAO;AAClB;;AAEA;;AAEA;;AAEA,0CAA0C,UAAU;;AAEpD;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,uDAAc;AAC5B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB;AACA;AACA;AACA,kBAAkB,+CAAM;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,gFAAgF,4DAAU;AAC1F,MAAM;AACN,kBAAkB,4DAAU;AAC5B;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACjhByC;AACE;;AAEP;;AAEpC,iEAAe;AACf;AACA,IAAI,iDAAc;AAClB,IAAI,kDAAe;AACnB;AACA,uBAAuB,kDAAS;AAChC,CAAC,EAAC;;;;;;;;;;;;;;;;;ACRgB;;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACe;;AAEf;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,+CAA+C,4DAA4D;AAC3G;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA,OAAO,iDAAO;AACd;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,IAAI,iDAAO;AACX;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA,6CAA6C,4DAA4D;AACzG;;;;;;;;;;;;;;;;;;ACtG0B;;AAKR;;;AAGH;;AAEf;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,UAAU,iDAAO;AACjB;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,8CAAI;AACzB;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,SAAS,4DAAe;AACxB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,+DAAkB,WAAW,iEAAoB;;AAE/D;AACA;;AAEA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;ACnHkB;;AAElB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB;AACe;;AAEf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,iDAAO;AACX;AACA;AACA;AACA,KAAK;;AAEL,IAAI,iDAAO;AACX;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxE4D;AACrB;;AAEH;AACc;AACE;;;AAGpD,iEAAe;AACf;AACA;AACA,IAAI,2DAAuB;AAC3B,IAAI,gDAAa;AACjB;AACA,uBAAuB,kDAAS;AAChC,8BAA8B,yDAAgB;AAC9C,+BAA+B,0DAAiB;AAChD,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;ACjBsC;AACxC;AAKoB;AACpB;AACiD;AACjD;AAIkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAAK;AACpC;AACA;AACA;AACA,QAAQ,oDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAW;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8CAAG;AAClB,IAAI;AACJ;AACA;AACA;AACA,mBAAmB,8CAAG;AACtB,mBAAmB,8CAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,iDAAO;AACT;AACA;AACA;AACA;AACA;AACA,8BAA8B,8CAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iDAAO;AACb;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,0BAA0B,8CAAG;AAC7B,GAAG;AACH;AACA,OAAO,kDAAQ,cAAc,kDAAQ;AACrC;AACA;AACA;AACA;AACA;AACA,0BAA0B,8CAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sDAAW;AACpB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC9MwC;AACxC;AAOoB;AACpB;AACiD;AACjD;AAIiC;AACjC;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACe;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAAK;AACpC;AACA;AACA;AACA,QAAQ,oDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qDAAU;AAChB;AACA;AACA;AACA,MAAM,qDAAU;AAChB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAW;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,iDAAO;AACT,6BAA6B,sDAAW;AACxC,6BAA6B,kDAAO;AACpC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sDAAW;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAM;AAClB,aAAa,0DAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1KkB;;AAIE;;;AAGpB;AACA;AACA;AACA;AACA;AACe;;AAEf;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACO;;AAEP;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,2BAA2B,iDAAM;AACjC;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;;AAEA,EAAE,iDAAO,mBAAmB;AAC5B,IAAI,iDAAO;AACX;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;ACzKA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACO;AACP;;AAEA;;AAEA,gBAAgB,qBAAqB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA,YAAY,SAAS;AACrB;AACA;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oDAAoD;;;AAGpD;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,aAAa;AACb;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;ACzIkB;;AAKE;;AAOF;;AAElB;;AAEO;;;AAGP;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACe;AACf;;AAEA;AACA,oBAAoB,kDAAQ,CAAC,8CAAI;AACjC;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,oDAAS;AAChB,OAAO,oDAAS;AAChB;;AAEA,EAAE,iDAAO;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI,iDAAO;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,EAAE,iDAAO;AACT;;AAEA,QAAQ,kDAAQ;AAChB,MAAM,qDAAU;AAChB;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,aAAa,gDAAS;;AAEtB,EAAE,8CAAO,SAAS,gBAAgB;;AAElC,EAAE,iDAAU;;AAEZ,EAAE,gDAAS;;AAEX;AACA;;AAEA,WAAW,kDAAQ;AACnB,QAAQ,8CAAO,SAAS,iBAAiB;AACzC,QAAQ;AACR;AACA,UAAU,8CAAO;AACjB;AACA;AACA,WAAW;AACX,UAAU;AACV,UAAU,8CAAO;AACjB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE,iDAAO;AACT;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;ACnKsD;AACR;AACZ;;AAElC,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAkB;AAClD,4BAA4B,uDAAc;AAC1C,sBAAsB,iDAAQ;AAC9B,CAAC;;;;;;;;;;;;;;;;;;;;;ACRiB;;AAE+B;;AAEH;;AAEH;;AAEW;;AAED;;AAEI;;AAEzD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,W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;AAEA;AACA,QAAQ,8CAAO;AACf;AACA,SAAS;AACT,QAAQ;AACR;;AAEA,QAAQ,8CAAO;AACf;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,iDAAO;AACX;AACA,KAAK;;AAEL;AACA,IAAI,iDAAO;AACX;AACA,KAAK;;AAEL;AACA,MAAM,gDAAS;AACf,MAAM,gDAAS;AACf;;AAEA,IAAI,iDAAO;AACX;AACA,KAAK;;AAEL;AACA,MAAM,gDAAS;AACf;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjTmC;;AAEnC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,uBAAuB;AAClC;AACA,aAAa;AACb;AACO;AACP;;AAEA,EAAE,iDAAO;AACT;AACA;;AAEA,IAAI,iDAAO;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA,SAAS,uEAA0B;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FkB;;AAKQ;;AAEqB;;;AAGxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGO;;AAEP;AACA;AACA;AACA;AACA;;;AAGA;AACA,mCAAmC,2BAA2B;AAC9D;AACA,WAAW,cAAc;AACzB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,eAAe,2BAA2B;AAC1C;AACA,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB;AACA,YAAY,QAAQ,iBAAiB;AACrC;AACO;;AAEP;;AAEA;AACA,sBAAsB,OAAO;AAC7B,OAAO,kDAAQ;AACf,gBAAgB;AAChB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uCAAuC,6DAAa;AACxD;AACA,IAAI;;AAEJ;AACA;AACA,oBAAoB,gDAAM;AAC1B;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;;AAGO;AACP,SAAS,wDAAc;AACvB;;;AAGO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,6DAAa;AACrB,QAAQ,4DAAY;;AAEpB,4CAA4C;AAC5C,0BAA0B,eAAe,IAAI,OAAO,IAAI;AACxD;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzMkB;;AAKI;;AAOI;;AAE1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,oBAAoB,2DAAc;;AAElC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,sCAAsC,kBAAkB,IAAI;;AAE5D;AACA,IAAI;AACJ;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;;AAEA;AACA;AACA;AACA,QAAQ,iBAAiB;AACzB,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,QAAQ,iBAAiB;AACzB,QAAQ;AACR;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACn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hC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,+BAA+B;AAC/B;AACA,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,YAAY;AACZ;AACO;AACP;;AAEA;AACA;;AAEA,SAAS,4DAAY;AACrB;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;AC1uBkC;AACF;;AAED;;AAE/B,qBAAqB,oDAAI,GAAG,sDAAsD,IAAI,gBAAgB;AACtG,oBAAoB,oDAAI,GAAG,oDAAoD,IAAI,qBAAqB;AACxG,uBAAuB,oDAAI,GAAG,qCAAqC,IAAI,cAAc;AACrF,uBAAuB,oDAAI,GAAG,oCAAoC,IAAI,gBAAgB;AACtF,uBAAuB,oDAAI,GAAG,oCAAoC,IAAI,gBAAgB;;AAEtF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA,+CAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uCAAuC;AAC/E,wCAAwC,yCAAyC;AACjF;AACA,iDAAiD,eAAe,eAAe,GAAG,gBAAgB,GAAG;AACrG;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY,MAAM;AAClB;AACO;AACP;AACA;AACA;AACA;AACA,SAAS,gDAAM;AACf;;;;;;;;;;;;;;;;AC7OkC;;;AAGlC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACe;AACf;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB,gDAAM,GAAG,8BAA8B;;AAExD;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA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B;AACO;;AAEP;;AAEA,OAAO,iDAAO;AACd;AACA;;AAEA,EAAE,iDAAO;AACT;;AAEA,QAAQ,iDAAO;AACf;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA,YAAY,uBAAuB;AACnC;AACO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,SAAS;AACrB;AACA,YAAY,uBAAuB;AACnC;AACO;AACP;AACA;;;AAGA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,SAAS;AACrB;AACA,YAAY,uBAAuB;AACnC;AACO;AACP;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;AACO;;AAEP,MAAM,qDAAW;AACjB;AACA;;AAEA,MAAM,kDAAQ;AACd;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,iDAAO,yBAAyB,cAAc;AAChE;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA,MAAM,iDAAO;;AAEb,MAAM,iDAAO;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wCAAwC;AACnD,WAAW,SAAS;AACpB;AACO;;AAEP;AACA,OAAO,iDAAO;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,iDAAO;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,iBAAiB;AAC5B;AACA,YAAY,wBAAwB;AACpC;AACO;;AAEP;;AAEA,EAAE,iDAAO;;AAET;;AAEA;AACA;AACA;;AAEA,SAAS,kDAAQ;AACjB;AACA;AACA,SAAS,kDAAQ;AACjB;AACA;AACA;AACA,UAAU,kDAAQ,gBAAgB,kDAAQ;AAC1C;AACA;;AAEA;AACA,QAAQ,UAAU,kDAAQ,iBAAiB,kDAAQ;AACnD;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;;AAEP;AACA;;AAEA;;AAEA;AACA,SAAS,gDAAM,GAAG,YAAY,YAAY;AAC1C;;;;;;;;;;;;;;;;;;ACtWoB;;AAEpB;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd,cAAc;AACd;;AAEO;AACP;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;;AAEA;AACA;;;AAGO;AACP;AACA;;;AAGO;AACP;AACA;AACA;;;AAGO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;;;;;;;;;;;AC/BkB;;AAElB;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY;AACZ;AACO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX;AACA,YAAY;AACZ;AACO;AACP;;AAEA,MAAM,iDAAO;AACb;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA,MAAM,iDAAO;AACb;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA,SAAS,+CAAK;AACd;AACA,GAAG;AACH;;AAEO;AACP;;AAEA,MAAM,iDAAO;AACb;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA,SAAS,+CAAK;AACd;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,MAAM;AAClB,YAAY,QAAQ;AACpB;AACA,YAAY;AACZ;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpJA;AACA,2CAA2C,sBAAsB;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA,YAAY;AACZ;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,YAAY;AACZ;AACO;AACP;AACA;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxBoB;;AAE2B;;AAE/C;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;;AAEA;;AAEA;;AAEA,cAAc,oBAAoB;;AAElC,QAAQ,wDAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,sBAAsB,wDAAc;;AAEpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;AChHA;AACA;AACA,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEoD;;;;;;;;;;;;;;;;;;;;;;;;ACNnC;;AAIG;;AAIA;;AAEb;AACP,UAAU,mDAAgB;AAC1B;;AAEO;;AAEP;AACA;AACA;;AAEO;;AAEP;AACA;AACA;;AAEO;;AAEP;AACA;AACA;;AAEO;AACP,sBAAsB,mDAAgB;;AAEtC;AACA;AACA;;AAEA;AACA,MAAM,gDAAK;AACX;AACA,IAAI;AACJ;AACA;AACA;;;AAGO;AACP,sBAAsB,mDAAgB;;AAEtC;AACA;;;;;;;;;;;;;;;;ACtDO;AACP;AACA;;;;;;;;;;;;;;;;ACFO;AACP;AACA;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,UAAU;AACrB;AACA,YAAY,eAAe;AAC3B;AACO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;AC9BkB;;;AAGX;AACP;AACA;;AAEO;AACP;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;;AAEO;;AAEP,aAAa,gDAAS;AACtB,EAAE,8CAAO,SAAS,6BAA6B;;AAE/C;AACA,IAAI,8CAAO;AACX;;AAEA;AACA;;AAEO;AACP,EAAE,8CAAO,QAAQ,6BAA6B;;AAE9C;AACA;;;;;;;;;;;;;;;;;;;;ACjCkB;AAClB;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,yDAAe;AACjC;AACA;AACA,eAAe,yDAAe;AAC9B;AACA;AACA,cAAc,yDAAe;AAC7B;AACA;AACA,EAAE,mDAAY;AACd;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,yDAAe;AACjC;AACA;AACA,EAAE,mDAAY;AACd;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB;AACO;AACP,eAAe,yDAAe;AAC9B;AACA;AACA,EAAE,mDAAY;AACd;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB;AACO;AACP,cAAc,yDAAe;AAC7B;AACA;AACA,EAAE,mDAAY;AACd;;;;;;;;;;;;;;;;;ACxDkB;;AAOA;;AAElB;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,kDAAQ;AACd,WAAW,gDAAM,GAAG,sCAAsC;AAC1D,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ,iCAAiC;AACrD;AACA;;AAEA;AACA;;AAEA;;AAEA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA,gBAAgB,gDAAS;;AAEzB,IAAI,8CAAO;AACX;AACA;AACA;AACA,kCAAkC;AAClC,KAAK;;AAEL;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACe;;AAEf,iBAAiB,gDAAM,GAAG;AAC1B;AACA;AACA,aAAa;AACb;AACA,GAAG,cAAc;AACjB;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,0CAA0C,+BAA+B;AACzE;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA,YAAY,gDAAM,GAAG;AACrB,cAAc,gDAAM,GAAG;AACvB;AACA;AACA;;AAEA;;AAEA;AACA,MAAM,YAAY,GAAG,YAAY,KAAK;AACtC;AACA;;AAEA;;AAEA;AACA,mBAAmB,gDAAS;AAC5B,EAAE,8CAAO,eAAe,YAAY;AACpC,EAAE,8CAAO;;AAET;;AAEA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,gDAAM;AAC1B;AACA,GAAG;;AAEH,qBAAqB,gDAAM;AAC3B;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA,oBAAoB,gDAAS;;AAE7B,EAAE,8CAAO;;AAET;AACA;AACA,EAAE,iDAAO;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,gDAAS;AACzB,IAAI,8CAAO,UAAU,YAAY;;AAEjC;;AAEA,IAAI,gDAAS;AACb,GAAG;;AAEH,EAAE,gDAAS;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,+CAA+C;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEwD;;;;;;;;;;;AC/UxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO,MAAM,KAAK,EAAE,KAAK,EAAE,KAAK;AAC3C,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,OAAO,EAAE,KAAK,EAAE,KAAK;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ,IAAI;AACvB,WAAW,QAAQ,IAAI;AACvB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,4BAA4B,8BAA8B;;AAE1D;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,gBAAgB;;AAEhB;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC;;AAElC,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,OAAO;AACxB;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,GAAG;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C,2BAA2B,cAAc;AACzC,2BAA2B,gCAAgC;AAC3D,yBAAyB,gCAAgC;AACzD;AACA,yBAAyB,4BAA4B;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB;AACA;AACA;AACA,4BAA4B,gCAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,UAAU;AACzB,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,UAAU;AACzB,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,mGAAmG,IAAI;AACvG;;AAEA,IAAI,IAA0C;AAC9C,IAAI,mCAAO;AACX;AACA,KAAK;AAAA,kGAAC;AACN,EAAE,KAAK,EAIN;;AAED,CAAC;;;;;;;;;;;;;;;;ACllFD;AACA,mBAAmB,aAAa;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;;AAEA;AACA;AACA,IAAI,2BAA2B,UAAU,QAAQ;;;AAGjD,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,GAAG,EAAC;AACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,iBAAiB;AAC7B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,UAAU;AACtB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB,YAAY,KAAK;AACjB;AACA,YAAY,KAAK;AACjB;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,UAAU;AACtB;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB;AACA,YAAY,QAAQ,WAAW;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,gGAAgG,aAAa;AAC7G;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,iBAAiB;AAC7B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,qBAAqB;AAC3C;;AAEA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,UAAU;AACtB;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wEAAwE,aAAa;AACrF;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA,YAAY,UAAU;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA,YAAY,UAAU;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA,2FAA2F,aAAa;AACxG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,WAAW,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,WAAW,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA,gGAAgG,eAAe;AAC/G;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEiU;;;;;;;;;;;;;;;;;;;;;;;;;;ACrrBjU;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,SAAS;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEgJ;;;;;;;;;;;;;;;;;;;;ACjgBxE;AACzC;AACwC;;AAEvE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA,eAAe,mDAAW;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB;AACA;;AAEA;AACA,gBAAgB,gBAAgB;AAChC;;AAEA;AACA,gBAAgB,SAAS;AACzB;;AAEA,EAAE,gDAAM;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAU,kDAAU;;AAEpB;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,kDAAU;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA,EAAE,iDAAO;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;;AAER;AACA;;AAEA,QAAQ,iDAAO;AACf;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA,MAAM;AACN;AACA,gBAAgB,kDAAU;AAC1B,QAAQ;AACR;AACA,qBAAqB,mDAAW;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA,eAAe,mDAAW;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C,WAAW;AACtD;;AAEA;;AAEA,eAAe,gDAAM,GAAG;AACxB;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,8CAAI;AACnB;AACA,KAAK;;AAEL;AACA,aAAa,gDAAM,GAAG;AACtB;AACA,OAAO;AACP;AACA,IAAI;;AAEJ;AACA,eAAe,8CAAI;AACnB;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAM,oDAAY;AAClB;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,MAAM,gDAAM;AACZ;AACA,OAAO;;AAEP;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,eAAe,mDAAW;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,WAAW,mDAAW;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;;AAEA,yBAAyB,0CAAM;AAC/B;AACA;AACA;AACA;;AAEA,EAAE,gDAAM,SAAS,YAAY;AAC7B;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,eAAe;AAC7B,cAAc,eAAe;AAC7B,cAAc,cAAc;AAC5B,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,cAAc;AAC5B;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,uBAAuB;AAClC;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B;AACpE;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,MAAM;;AAEN,wCAAwC,2BAA2B;AACnE;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,gDAAM,GAAG,aAAa,0BAA0B;AAC5E,mBAAmB,yCAAM,GAAG,aAAa;AACzC;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,UAAU;AACxB,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,gBAAgB,qBAAqB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,OAAO,IAAI;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,MAAM,kDAAQ;AACd;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,aAAa;AACb,GAAG;;AAEH;;AAEA;AACA;AACA,WAAW,gDAAM,GAAG,oCAAoC;AACxD,IAAI;AACJ,WAAW,gDAAM,GAAG,kEAAkE;AACtF;AACA;;AAEA;AACA,SAAS,gDAAM,GAAG,oCAAoC;AACtD;;AAEA;AACA;;AAEA,SAAS,gDAAM;AACf;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,6CAAG;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,QAAQ,kDAAQ;;AAEhB;AACA,mCAAmC;AACnC,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,gDAAM,sBAAsB,kBAAkB;AACvD;;AAEA;AACA,SAAS,gDAAM,sBAAsB,mBAAmB;AACxD;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;;AAEA,MAAM,kDAAQ;AACd,SAAS,mDAAW;AACpB,IAAI;AACJ;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb,IAAI;AACJ,WAAW,gDAAM,GAAG,yBAAyB;AAC7C;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,EAAE,iDAAO;;AAET;;AAEA;AACA,6CAA6C,gBAAgB;AAC7D,MAAM;AACN;AACA,MAAM,iDAAO;AACb;AACA,OAAO;AACP,MAAM;AACN;AACA;;AAEA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA,eAAe,mDAAW;;AAE1B;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE,iDAAO;;AAET;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;;AAEA,EAAE,iDAAO;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,QAAQ,oDAAY;AACpB,MAAM,iDAAO;AACb;AACA,OAAO;AACP,MAAM;AACN;AACA,MAAM,iDAAO;AACb;AACA,OAAO;AACP,MAAM;;AAEN;AACA;AACA;AACA;;AAEA,MAAM,iDAAO;AACb;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA,mFAAmF;;AAEnF;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B,6BAA6B;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAO;AACf;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAM,kDAAQ;AACd;AACA;;AAEA,eAAe,0BAA0B;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iDAAO;AACX;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA,YAAY,gDAAM,GAAG,+BAA+B,eAAe;;AAEnE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAE0B;;;;;;;;;;;;;;;;;;;;;AC9uDiD;;AAE3E;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAE,iDAAO;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE,mCAAmC,WAAW;AAC9C,oCAAoC,gBAAgB;;AAEpD,IAAI,iDAAO,QAAQ,8CAAI;AACvB;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC,yBAAyB,sBAAsB;AAC/C,yBAAyB,yBAAyB;AAClD,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,SAAS,8CAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO,eAAe,8CAAI;;AAE5B;AACA,QAAQ,gDAAM,GAAG;AACjB;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,YAAY;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAE,iDAAO,WAAW,8CAAI;AACxB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA,QAAQ,gDAAM,GAAG;;AAEjB;;AAEA;AACA;;AAEA;AACA,EAAE,iDAAO,YAAY,8CAAI;AACzB;AACA,GAAG;;AAEH;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,SAAS,gDAAM,GAAG;AAClB;AACA;AACA;AACA,UAAU,gDAAM,iBAAiB;AACjC,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,EAAE,iDAAO,kBAAkB,8CAAI;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI,gDAAM;AACV;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA,EAAE,gDAAM;AACR;AACA;AACA;AACA,GAAG;;AAEH,EAAE,iDAAO,eAAe,8CAAI;AAC5B;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB;AACA;;AAEA,wCAAwC,oBAAoB;;AAE5D;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,iDAAO;;AAET;AACA;;AAEA,EAAE,iDAAO;AACT;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,YAAY;AACxB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA,2CAA2C,YAAY;AACvD;;;;AAIA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,cAAc,gDAAM,GAAG;AACvB,wBAAwB;AACxB,KAAK;;AAEL;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA,YAAY,eAAe;AAC3B,YAAY,gBAAgB;AAC5B;AACA;;AAEA;;AAEA,aAAa,kDAAQ;;AAErB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,mCAAmC;AAClF,mDAAmD,mCAAmC;;AAEtF,EAAE,iDAAO;AACT,QAAQ,kDAAQ;AAChB;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAE8G;;;;;;;;;;;AC74B9G,gGAAsC;;AAEtC,uHAAuD;;;;;;;;;;;ACF1C;;AAEb;AACA,kCAAkC,6BAA6B;AAC/D;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,MAAM;AAClB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY,wBAAwB;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;;AAEA,qBAAqB;;AAErB,yBAAyB;;;;;;;;;;;ACvHZ;;AAEb,iBAAiB,mBAAO,CAAC,kEAAc;;AAEvC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA,gDAAgD,YAAY;AAC5D,MAAM,yBAAyB,GAAG,6BAA6B,KAAK,+BAA+B;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,0BAA0B;AACrC;AACA;AACA;AACA,qBAAqB,oDAAoD,IAAI,aAAa;AAC1F;AACA,eAAe;AACf,mBAAmB,mBAAmB,IAAI,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB,IAAI,oBAAoB;AAC/D;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,iEAAiE,YAAY;AAC7E;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;;;;;;;;;;;ACzMa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,sBAAsB,4DAA4D;AAClF;;AAEA,uDAAuD;AACvD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,kBAAkB,YAAY;AAC9B;AACA,iBAAiB,2BAA2B;AAC5C;;AAEA,cAAc,YAAY;AAC1B;AACA,iBAAiB,2BAA2B;AAC5C;;AAEA,cAAc,QAAQ;;AAEtB,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,uBAAuB;AAClC,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC,QAAQ;AAC7C;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA,yCAAyC,QAAQ;AACjD;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;;AAEZ,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA,oEAAoE;AACpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD,QAAQ;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA,MAAM;AACN,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,qCAAqC,QAAQ;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,OAAO;;AAEzB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,0DAA0D;AAC1E;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,YAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,wBAAwB;;AAExB,0CAA0C,QAAQ;AAClD,kDAAkD;;AAElD;AACA;AACA,gCAAgC;AAChC,gDAAgD;AAChD;AACA,oEAAoE;;AAEpE,wEAAwE;AACxE;AACA;;AAEA,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;AC95BA;;AAEA;;AAEA,8BAA8B,gBAAgB,QAAQ;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC;AACnC,eAAe,sBAAsB;AACrC;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC,8BAA8B;AAC9B,sCAAsC;AACtC,gCAAgC;AAChC,iCAAiC;AACjC,gCAAgC;AAChC,wCAAwC,OAAO;AAC/C,sCAAsC,OAAO;AAC7C,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,cAAc,yBAAyB;AACvC;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;;AAEA,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA,6CAA6C,gBAAgB;AAC7D;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB;AACxB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAU,qBAAqB;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV;AACA;;AAEA;AACA,0BAA0B,OAAO;AACjC;;AAEA,iDAAiD;AACjD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;;AAEA,+CAA+C;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA,yCAAyC,OAAO;;AAEhD;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,qCAAqC;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;;AAEA,sCAAsC;AACtC;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;A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;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACvGa;;AAEb;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACtCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACVa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEjF;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACXa;;AAEb;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA,iFAAiF;AACjF;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrEa;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;;AAEA,oBAAoB,mBAAmB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAc,eAAe;AAC7B;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,EAAE;AAC9B,8BAA8B,EAAE;;AAEhC;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA,cAAc,qBAAqB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,sDAAsD;AAClE;AACA,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEmM;;;;;;;;;;;;;;;;;AC9zB1I;;AAEzD,6BAAe,oCAAU;AACzB,kBAAkB,qEAAe;;AAEjC;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;AC/BA;;;;;;;;;;;ACAA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;AAEA;AACA,IAAI,SAAS,qBAAqB,YAAY;AAC9C;;AAEA,YAAY,mBAAO,CAAC,mCAAS;;AAE7B;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA,6BAAe,oCAAU;AACzB;AACA,OAAO;AACP;AACA;AACA,MAAM,mBAAO,CAAC,w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;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB;AACA;;AAEA,sBAAsB,qDAAQ;;AAE9B;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEiD;;AAEjD,6BAAe,oCAAU;AACzB;;AAEA,2BAA2B,4DAAgB;;AAE3C;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB;AACA;AACA,sBAAsB,qDAAQ;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA,4EAA4E;AAC5E,sBAAsB,QAAQ;AAC9B,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0FAA0F,EAAE;AAC5F;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,IAAI;AACpC;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA,sCAAsC;AACtC,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,KAAK;AACzB,oBAAoB,KAAK;AACzB;AACA;AACA;AACA,iCAAiC,YAAY,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,KAAK;AACzB,oBAAoB,KAAK;AACzB,oBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,KAAK;AACzB,oBAAoB,SAAS;AAC7B,oBAAoB,KAAK;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D,UAAU;AACvE;;AAEA;AACA;;AAEA;AACA,iEAAiE,gCAAgC;AACjG;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,6DAA6D,UAAU;AACvE;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA,WAAW;;AAEX;AACA;AACA;AACA,oBAAoB,KAAK;AACzB,oBAAoB,SAAS;AAC7B,oBAAoB,KAAK;AACzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACpaA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAkD;AAClD;AACA,CAAC,6BAAe,oCAAU;AAC1B;AACA,+BAA+B,4DAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEiD;;AAEjD,6BAAe,oCAAU;AACzB;AACA,8BAA8B,4DAAgB;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;;AAE9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,qDAAQ;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;;AAE3B,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEiD;;AAEjD,6BAAe,oCAAU;AACzB;AACA,8BAA8B,4DAAgB;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;;AAE9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB;AACA,sBAAsB,qDAAQ;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;;AAE9B;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB;AACA;;AAEA,sBAAsB,qDAAQ;;AAE9B;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,oBAAoB;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB;AACA,sBAAsB,qDAAQ;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,gBAAgB;AAChB,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,UAAU,uBAAuB;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB;AACA,sBAAsB,qDAAQ;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEiD;;AAEjD,6BAAe,oCAAU;AACzB;AACA;AACA,8BAA8B,4DAAgB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEsC;AAC2B;;AAEjE,6BAAe,oCAAU;AACzB;AACA;;AAEA,sBAAsB,qDAAQ;AAC9B;;AAEA,uBAAuB,+EAAS;;AAEhC;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,qCAAqC;;AAE3H;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,2CAA2C,6BAA6B;AACxE;AACA;;AAEA;AACA;;AAEA,8CAA8C,MAAM;AACpD;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACzUA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB;AACA;;AAEA,sBAAsB,qDAAQ;;AAE9B;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qCAAqC;AACnE,8BAA8B,0EAA0E;AACxG,gCAAgC;AAChC,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAU;AACzB;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AA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ACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,UAAU,GAAG,OAAO;AAC3E;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B,6BAA6B,WAAW;AACxC;AACA,sBAAsB;AACtB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B,6BAA6B,WAAW;AACxC;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;;AAEb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,IAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;AACA;AACA,0CAA0C,GAAG;AAC7C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,EAAE;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,4CAA4C,SAAS,IAAI,WAAW;AACpE;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,uCAAuC;AAC3D;AACA;AACA;AACA;AACA,kCAAkC,sBAAsB;AACxD;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC78BA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9KA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6BAA6B;;AAEpE;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0BAA0B;AAC1B;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB,0BAA0B;AAC1B;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,aAAa;;AAEb;AACA,oCAAoC,EAAE;AACtC;AACA,aAAa;;AAEb;AACA,kCAAkC,EAAE;AACpC;AACA,aAAa;;AAEb;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,aAAa;;AAEb;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA,aAAa;;AAEb;AACA,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,iDAAiD,EAAE;AACnD,kCAAkC,EAAE,cAAc;AAClD,gBAAgB;;AAEhB;AACA,sCAAsC,EAAE;AACxC,mCAAmC,EAAE,cAAc;AACnD,gBAAgB;;AAEhB;AACA,uCAAuC,EAAE;AACzC,oCAAoC,EAAE,cAAc;AACpD,gBAAgB;;AAEhB;AACA,qCAAqC,EAAE;AACvC,kCAAkC,EAAE,cAAc;AAClD,gBAAgB;;AAEhB;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA,mCAAmC,EAAE,cAAc;AACnD,gBAAgB;;AAEhB;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA,mCAAmC,EAAE,cAAc;AACnD,gBAAgB;;AAEhB;AACA,8CAA8C,EAAE;AAChD;AACA;AACA,qCAAqC,EAAE,cAAc;AACrD,gBAAgB;AAChB,aAAa;;AAEb;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA,2CAA2C,UAAU;AACrD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,6DAA6D;;AAE7D;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACneA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oCAAoC;AAC9D,0BAA0B,oCAAoC;AAC9D,0BAA0B,wCAAwC;AAClE,0BAA0B,oCAAoC;AAC9D;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA6D;AAC7D,gBAAgB;AAChB;AACA,kDAAkD;AAClD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD,aAAa;AACb,WAAW;AACX;AACA;AACA,8BAA8B,0BAA0B;AACxD,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC,iCAAiC;;AAEjC;AACA;;AAEA,uBAAuB,SAAS,GAAG,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACzkBA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B;AACtD,0BAA0B,4BAA4B;AACtD,0BAA0B,2BAA2B;AACrD,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAqD,aAAa,EAAE;AACpE;AACA,4CAA4C,EAAE,mBAAmB;;AAEjE;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD,YAAY,EAAE;AAClE;AACA,4CAA4C,EAAE,mBAAmB;;AAEjE;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACbkBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC3hBA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0BAA0B,4BAA4B;AACtD,0BAA0B,4BAA4B;AACtD,0BAA0B,2BAA2B;AACrD,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAqD,aAAa,EAAE;AACpE;AACA,4CAA4C,EAAE,mBAAmB;;AAEjE;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD,YAAY,EAAE;AAClE;AACA,4CAA4C,EAAE,mBAAmB;;AAEjE;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,0BAA0B,gCAAgC;AAC1D,0BAA0B,qCAAqC;AAC/D;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACbkBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC/pBA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACvHA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACvHA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B;AACtD,0BAA0B,4BAA4B;AACtD,0BAA0B,4BAA4B;AACtD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,KAAK,GAAG,SAAS;AAC7C;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;AACb,UAAU;;AAEV;AACA;;AAEA;AACA,oBAAoB,gBAAgB,IAAI,4BAA4B,qBAAqB,mBAAmB,8BAA8B,oBAAoB;AAC9J;;AAEA;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA,yBAAyB,gBAAgB;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,WAAW;AACX;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kCAAkC,qBAAqB,GAAG,yBAAyB;AACnF;AACA,WAAW;AACX;AACA;;AAEA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1NA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,+DAA+D,gBAAgB;AAC/E;AACA;AACA;AACA,6DAA6D,IAAI;AACjE;AACA,mCAAmC;AACnC;AACA,sFAAsF;AACtF,8FAA8F,0DAA0D;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB,oBAAoB;AACpB;AACA,aAAa;AACb;AACA;;AAEA;AACA,yBAAyB,GAAG;AAC5B;;AAEA;AACA,gCAAgC,qBAAqB,GAAG,mBAAmB;AAC3E;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2DAA2D,MAAM;AACjE;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,cAAc;;AAEd;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrVA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB,mBAAmB,oDAAW;;AAE9B;AACA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA,4BAA4B,aAAa;AACzC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oKAAoK,UAAU,WAAW;AAC3O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB,qCAAqC,OAAO;AAC5C;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB,iBAAiB,4BAA4B;AAC9G;AACA,uBAAuB;AACvB,qDAAqD,aAAa;AAClE,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,UAAU;;AAEV;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AClfA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACldA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC3IA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mBAAmB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB,0BAA0B,2BAA2B;AACrD;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtIA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB,mBAAmB,oDAAW;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,wDAAwD;AACxD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA,kDAAkD,oEAAoE,WAAW,oFAAoF,UAAU,WAAW;AAC1O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACpIA;AACA;AACA;AACA;;AAEoC;;AAEpC,6BAAe,oCAAU;AACzB;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gDAAgD;AACjE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;AACsC;;AAE5E,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA,qCAAqC,kFAAqB;;AAE1D;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,iDAAiD;AAClE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,aAAa,GAAG,iBAAiB;;AAEjE;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA,iBAAiB;AACjB;AACA,qBAAqB;AACrB,UAAU;AACV;AACA,qBAAqB;AACrB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS,GAAG,KAAK;AAC9D;AACA,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS,GAAG,QAAQ;AACjE;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY,GAAG,KAAK;AACjE;AACA,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY,GAAG,QAAQ;AACpE;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAc,GAAG,KAAK;AACnE;AACA,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAc,GAAG,QAAQ;AACtE;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uDAAuD,eAAe;AACtE;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC1XA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;AACsC;;AAE5E,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA,gCAAgC,kFAAqB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA,yDAAyD;AACzD,+DAA+D;;AAE/D;AACA;AACA;AACA;AACA,iBAAiB,wCAAwC;AACzD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mBAAmB,GAAG,KAAK;AAC9E;AACA,2CAA2C;AAC3C,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qBAAqB,GAAG,KAAK;AAChF;AACA,2CAA2C;AAC3C,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,aAAa,GAAG,iBAAiB;;AAEjE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACvdsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC9KA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA,qCAAqC,EAAE,iBAAiB;;AAExD;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb,UAAU;;AAEV;AACA;;AAEA,4CAA4C,QAAQ,EAAE,SAAS;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,UAAU;AAC9D;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;;;;;ACrOA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;;AAGV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,KAAK;AACjC,+BAA+B,SAAS,KAAK,iBAAiB;AAC9D,mBAAmB;;AAEnB;AACA;AACA,+BAA+B,KAAK,GAAG,SAAS;AAChD,kCAAkC,SAAS,KAAK,YAAY;AAC5D,sBAAsB;AACtB,mBAAmB;AACnB;AACA,cAAc;AACd;AACA;AACA;AACA,gBAAgB;AAChB;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,4BAA4B;AAC1C,cAAc,wCAAwC;AACtD;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA,aAAa;AACb;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0BAA0B,iBAAiB;AAC3C;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D,gCAAgC,wBAAwB;AACxD;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,gCAAgC,wBAAwB;AACxD;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mDAAmD,qBAAqB;AACxE;;AAEA,kDAAkD,oBAAoB;AACtE;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mDAAmD,qBAAqB;AACxE,kDAAkD,oBAAoB;AACtE;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtbA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AChHsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;AACsC;;AAE5E,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA,qCAAqC,kFAAqB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA,+DAA+D;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC7SA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;AACsC;;AAE5E,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA,qCAAqC,kFAAqB;;AAE1D;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,eAAe,mBAAmB;AAClC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA,2CAA2C;AAC3C,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD,6DAA6D,yBAAyB,IAAI,EAAE;AAC5F,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD,UAAU;;AAEV;AACA;AACA;AACA;AACA,iBAAiB,sDAAsD;AACvE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oCAAoC;AACjE,6BAA6B,yCAAyC;AACtE,6BAA6B,yCAAyC;AACtE;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,aAAa,GAAG,iBAAiB;;AAE9D;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA,qDAAqD,mBAAmB;AACxE;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,YAAY,OAAO;AACzC,iBAAiB,OAAO;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB,iBAAiB;AACxC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yBAAyB,OAAO,GAAG,IAAI,GAAG,iBAAiB;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,0BAA0B,iBAAiB;AAC3C;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA,0BAA0B,KAAK,YAAY,OAAO;AAClD,0BAA0B,OAAO;AACjC,0BAA0B,MAAM;AAChC;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA,mCAAmC;AACnC,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA,6BAA6B;AAC7B,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA,iBAAiB,iDAAiD;AAClE,mBAAmB,iDAAiD;AACpE,mBAAmB,iDAAiD;AACpE,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,KAAK;AACtB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB,gBAAgB;;AAEhB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACndA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4E;AAC5E;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;AACA;;AAEA,8BAA8B,oFAAmB;;AAEjD;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,sBAAsB,IAAI,GAAG,iBAAiB;AAC9C;AACA;AACA;AACA,UAAU;;AAEV,+CAA+C;;AAE/C,mCAAmC;AACnC;AACA,uCAAuC,2BAA2B;AAClE,UAAU;;AAEV,qCAAqC;AACrC;AACA;AACA;;AAEA,gCAAgC;;AAEhC,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO,GAAG,IAAI,GAAG,iBAAiB;AAC3D;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;;AAEnB;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;;AAEA;AACA;;AAEA,gDAAgD;AAChD;;AAEA;AACA;AACA,oBAAoB,KAAK;AACzB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA,gCAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACviBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,EAAE,GAAG,IAAI;AACtC,UAAU;;AAEV;;AAEA,kCAAkC;;AAElC,+BAA+B;;AAE/B,+BAA+B;AAC/B,qDAAqD;;AAErD,4CAA4C;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oCAAoC,OAAO,GAAG,IAAI;AAClD;;AAEA;AACA;AACA;AACA,6BAA6B,sBAAsB,GAAG,YAAY;AAClE,aAAa;;AAEb,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA,iBAAiB,iDAAiD;AAClE,mBAAmB,iDAAiD;AACpE,mBAAmB,iDAAiD;AACpE,mBAAmB;AACnB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,KAAK;AACtB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;;AAEA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AChSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,2BAA2B,cAAc;AACzC,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB,4BAA4B;AAC3E;AACA;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA,+BAA+B,4BAA4B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA,sBAAsB;AACtB;AACA,4BAA4B,4BAA4B;AACxD;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,0BAA0B,iBAAiB;AAC3C;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,gBAAgB;;AAEhB;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,aAAa;;AAEb;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC/ZA;AACA;AACA;AACA;AACA;AACA;AAC+C;AACR;;AAEvC;AACA;AACA;AAC+F;AAC/F;AACA;;AAEA,6BAAe,oCAAU;AACzB,0BAA0B,2DAAe;AACzC,sBAAsB,uDAAW;AACjC;;AAEA,+BAA+B,sGAAoB;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD,8CAA8C,YAAY;AAC1D,+CAA+C,YAAY;AAC3D,+CAA+C,YAAY;AAC3D,4CAA4C,YAAY;AACxD;;AAEA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AAC+C;AACR;;AAEsD;AAC7F;AACA;AACA;AACA;AAC2E;;AAE3E,6BAAe,oCAAU;AACzB,0BAA0B,2DAAe;AACzC,sBAAsB,uDAAW;AACjC;;AAEA,8BAA8B,qGAAmB;AACjD,qBAAqB,4FAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD,8CAA8C,YAAY;AAC1D,+CAA+C,YAAY;AAC3D,+CAA+C,YAAY;AAC3D,4CAA4C,YAAY;AACxD,6BAA6B,YAAY;AACzC;;AAEA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AACoC;AACzB;;AAEyB;;AAE7E,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B,4BAA4B,6DAAiB;AAC7C,yCAAyC,0EAA8B;AACvE;AACA;;AAEA,8BAA8B,oFAAmB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA,eAAe,UAAU;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA,wCAAwC;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA;;AAEA,oCAAoC;AACpC;;AAEA,sCAAsC;AACtC;;AAEA,kCAAkC;;AAElC,+BAA+B;AAC/B,kCAAkC;;AAElC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO,IAAI;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,SAAS;AACvC,kBAAkB;AAClB;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,2EAA2E;;AAE3E,4DAA4D;AAC5D;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;;AAEhB;AACA,mDAAmD;;AAEnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qCAAqC;;AAErC;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,4BAA4B,KAAK;AACjC,4BAA4B,YAAY;AACxC,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kCAAkC;;AAElC;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB,+CAA+C,iBAAiB,MAAM;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,KAAK;AAC/B,0BAA0B,KAAK;AAC/B;AACA,6DAA6D;AAC7D;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,gBAAgB,GAAG;AACnB,aAAa,GAAG;AAChB;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK,0BAA0B;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1sBA;AACA;AACA;AACA;AACA;AACoD;;AAEpD,6BAAe,oCAAU;AACzB,4BAA4B,6DAAiB;AAC7C;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA,6BAA6B;AAC7B;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB,6BAA6B;;AAE7B;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,KAAK;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA,aAAa;AACb;;AAEA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrKA;AACA;AACA;AACA;AACA;;AAEoD;AACpD;AACA;AACA;;AAEA,6BAAe,oCAAU;AACzB,4BAA4B,6DAAiB;AAC7C;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAU;;AAEV;AACA;;AAEA,6BAA6B;AAC7B;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,kCAAkC;AAClC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,+BAA+B,qCAAqC,GAAG;AACvE;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,yBAAyB,OAAO;AAChC,wBAAwB,OAAO;AAC/B,qCAAqC,OAAO;AAC5C,4BAA4B,OAAO;AACnC,2BAA2B,OAAO;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,sCAAsC;AACtC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,qCAAqC,qCAAqC,GAAG;AAC7E;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;AAClE,yCAAyC;AACzC;AACA,wCAAwC,mBAAmB;AAC3D;AACA,kDAAkD,iBAAiB;;AAEnE;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wBAAwB;AACvD;AACA,kCAAkC,wBAAwB;AAC1D,kCAAkC,0BAA0B;AAC5D,kCAAkC;AAClC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,gCAAgC,yCAAyC;AACzE,gCAAgC,qCAAqC;AACrE;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;AACA,2DAA2D,oBAAoB;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA;AACA;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,gBAAgB;;AAEhB;AACA,4CAA4C,YAAY,0CAA0C,YAAY;AAC9G,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,SAAS,GAAG,eAAe;AACpE,4CAA4C,cAAc,GAAG,SAAS,GAAG,YAAY;AACrF,6BAA6B;AAC7B,0CAA0C,eAAe;AACzD,4CAA4C,cAAc,GAAG,QAAQ;AACrE;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB;;AAEnB;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM,GAAG,KAAK;AACtD,2CAA2C,SAAS,GAAG,QAAQ;AAC/D,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,mBAAmB;;AAEnB;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,IAAI,EAAE,YAAY;;AAEhE;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;AACzD,gCAAgC;AAChC,6CAA6C,mBAAmB;AAChE,yCAAyC,iBAAiB;;AAE1D;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA,6BAA6B,wBAAwB;AACrD,6BAA6B,0BAA0B;AACvD,6BAA6B;AAC7B;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,uBAAuB,yCAAyC;AAChE,uBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,kDAAkD,oBAAoB;;AAEtE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA,mCAAmC,YAAY,0CAA0C,YAAY;AACrG;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,SAAS,GAAG,eAAe;AAC3D,mCAAmC,cAAc,GAAG,SAAS,GAAG,YAAY;AAC5E,oBAAoB;AACpB,iCAAiC,eAAe;AAChD,mCAAmC,cAAc,GAAG,QAAQ;AAC5D;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,MAAM,GAAG,KAAK;AAC7C;AACA,kCAAkC,SAAS,GAAG,QAAQ;AACtD,sBAAsB;AACtB,mBAAmB;AACnB;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D,IAAI,EAAE,YAAY;;AAE5E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,KAAK;AACzB,yBAAyB,KAAK;AAC9B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,wCAAwC;AACxC;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;AACA,iEAAiE;AACjE;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,sBAAsB;;AAEtB;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,EAAE,SAAS;AAClE;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACptCA;AACA;AACA;AACA;AACA;AACyC;AACW;;AAEpD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B,4BAA4B,6DAAiB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,gBAAgB;AACrD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;AACA,iBAAiB;AACjB;AACA,uDAAuD;AACvD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,wCAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;AACA,cAAc,iDAAiD;AAC/D;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iCAAiC;AACrE,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB,6DAA6D;AAC7D,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sCAAsC;;AAEtC,6BAA6B;AAC7B;AACA,eAAe;AACf;;AAEA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;;AAEA;AACA,gBAAgB;;AAEhB;AACA;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,mBAAmB;;AAEnB;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;AACA,8CAA8C,gBAAgB;AAC9D;;AAEA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iCAAiC;AACjC,oCAAoC;AACpC,gBAAgB;;AAEhB;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D;;AAE9D;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,4BAA4B;AAC3E,mBAAmB;;AAEnB;AACA;AACA,uBAAuB,+CAA+C;AACtE;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,iCAAiC;AAC9E,+BAA+B;AAC/B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kDAAkD,4BAA4B;AAC9E,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,0BAA0B;AAC1B,sEAAsE;AACtE,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,KAAK;AACzB,oBAAoB,KAAK;AACzB,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0FAA0F;;AAE1F;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC,sCAAsC;AACtC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F;;AAE7F;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB;;AAEtB;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,gBAAgB;AAChB,gBAAgB;AAChB;;AAEA;AACA;AACA,oBAAoB,KAAK;AACzB,qBAAqB;AACrB;AACA;;AAEA;AACA,0DAA0D;AAC1D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,sBAAsB;AACtB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;;AAEA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5pEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB;AACA;AACA,sBAAsB,qDAAQ;AAC9B;;AAEA;AACA,yDAAyD;AACzD,sBAAsB,QAAQ;AAC9B,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0FAA0F,EAAE;AAC5F;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;;AAEA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,EAAE;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnQA;AACA;AACA;AACA;;AAEkC;;AAElC,6BAAe,oCAAU;AACzB,+BAA+B,mDAAU;AACzC;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,EAAE,UAAU,EAAE,YAAY,EAAE,yBAAyB,EAAE;AACtH,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU,GAAG,OAAO;AAC/D;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACnPA;AACA;AACA;AACA;;AAE+B;;AAEmD;AACJ;;AAE9E,6BAAe,oCAAU;AACzB,kBAAkB,mDAAO;AACzB;AACA;;AAEA;AACA,oCAAoC,oFAAyB;AAC7D;;AAEA,8BAA8B,8EAAuB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,mCAAmC;AACnC;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kCAAkC;AAC/D,6BAA6B,8BAA8B;AAC3D;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACvcA;AACA;AACA;AACA;;AAEiD;;AAEjD,6BAAe,oCAAU;AACzB;;AAEA,2BAA2B,4DAAgB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC5WA;AACA;AACA;AACA;;AAE+B;;AAE/B,6BAAe,oCAAU;AACzB;;AAEA,kBAAkB,mDAAO;AACzB;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC3KA;AACA;AACA;AACA;;AAE+B;;AAE/B,6BAAe,oCAAU;AACzB;;AAEA,kBAAkB,mDAAO;AACzB;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACpMA;AACA;AACA;AACA;;AAE+B;;AAE/B,6BAAe,oCAAU;AACzB;;AAEA,kBAAkB,mDAAO;AACzB;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACpMA;AACA;AACA;AACA;;AAE+B;;AAE/B,6BAAe,oCAAU;AACzB;;AAEA,kBAAkB,mDAAO;AACzB;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrKA;AACA;AACA;AACA;;AAE+B;;AAE/B,6BAAe,oCAAU;AACzB;;AAEA,kBAAkB,mDAAO;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA,iCAAiC;AACjC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA,iCAAiC;AACjC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA,iCAAiC;AACjC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtQA;AACA;AACA;AACA;AAC+B;;AAE/B,6BAAe,oCAAU;AACzB,kBAAkB,mDAAO;AACzB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,yCAAyC,eAAe;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACvQA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAE+B;;AAE/B;AACA;AACA,OAAO;AACP;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,6BAAe,oCAAU;AACzB;AACA;AACA,qBAAqB,mDAAO;AAC5B;;AAEA;AACA,mEAAmE;AACnE,sBAAsB,QAAQ;AAC9B,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+FAA+F,EAAE;AACjG;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;;AAEA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,GAAG;AACtD;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,EAAE;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;;AAEA;;AAEA;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA,0CAA0C,GAAG;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrWA;AACA;AACA;AACA;;AAE2C;AACkC;;AAE7E,6BAAe,oCAAU;AACzB;;AAEA,wBAAwB,yDAAa;AACrC,4BAA4B,kFAAsB;AAClD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AACA;;AAEiD;;AAEjD,6BAAe,oCAAU;AACzB,2BAA2B,4DAAgB;AAC3C;AACA;;AAEA;;AAEA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,6BAA6B;AAC7B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACxXA;AACA;AACA;AACA;AAC+B;;AAE/B,6BAAe,oCAAU;AACzB,kBAAkB,mDAAO;AACzB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA,kCAAkC;;AAElC,0EAA0E;AAC1E,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2BAA2B;AACrD;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACpZA;AACA;AACA;AACA;;AAEiD;AACmC;AACA;;AAEpF,6BAAe,oCAAU;AACzB,2BAA2B,4DAAgB;AAC3C;AACA;;AAEA;;AAEA;;AAEA,2BAA2B,gFAA8B;AACzD;AACA,SAAS,KAAK;AACd;;AAEA,2BAA2B,gFAA8B;AACzD;AACA,SAAS,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,6BAA6B;AAC7B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0DAA0D,KAAK;AAC/D;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD,cAAc;AAChE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,aAAa;;AAEhE;AACA;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA,WAAW;AACX;AACA,UAAU;AACV;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACztBA;AACA;AACA;AACA;;AAE+B;;AAEkD;AACG;AACN;AACO;;AAEH;AACJ;;AAE9E,6BAAe,oCAAU;AACzB,kBAAkB,mDAAO;AACzB;AACA;;AAEA;AACA,oCAAoC,oFAAyB;AAC7D;;AAEA,8BAA8B,8EAAuB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA,2CAA2C,uFAAiB;AAC5D;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA,UAAU;;AAEV,gDAAgD,oFAAmB;AACnE;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV,wCAAwC,qFAAgB;AACxD;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV,6CAA6C,yFAAmB;AAChE;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,OAAO;AACzE;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6DAA6D;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1xBA;AACA;AACA;AACA;;AAE+B;;AAE/B,6BAAe,oCAAU;AACzB;;AAEA,kBAAkB,mDAAO;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACxLA;AACA;AACA;AACA;AAC+B;;AAE/B,6BAAe,oCAAU;AACzB,kBAAkB,mDAAO;AACzB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA,0CAA0C;;AAE1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AAC+B;;AAE/B,6BAAe,oCAAU;AACzB,kBAAkB,mDAAO;AACzB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB,EAAE;AACrD;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,4BAA4B;AAC5B,gCAAgC,WAAW;AAC3C,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA,+DAA+D;AAC/D,kDAAkD;AAClD,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,UAAU;AACV,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;;AAEA,iFAAiF;AACjF,8EAA8E;AAC9E;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,gCAAgC;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB,iBAAiB,SAAS;AAC1B,iBAAiB,sBAAsB;AACvC,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACzxBA;AACA;AACA;AACA;;AAEiD;;AAEjD,6BAAe,oCAAU;AACzB,2BAA2B,4DAAgB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B,gCAAgC;AAChC;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AChQA;AACA;AACA;AACA;;AAE+B;AACkC;;AAEjE,6BAAe,oCAAU;AACzB;;AAEA,kBAAkB,mDAAO;AACzB;AACA;;AAEA,oBAAoB,+EAAS;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AClOA;AACA;AACA;AACA;;AAE+B;;AAE/B,6BAAe,oCAAU;AACzB;;AAEA,kBAAkB,mDAAO;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,EAAE,aAAa;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC/MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEyC;;AAEzC,6BAAe,oCAAU;AACzB;AACA,sBAAsB,OAAO;AAC7B,sBAAsB,qDAAQ;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,KAAK,cAAc,KAAK;AACpD;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;;AAEA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,gBAAgB;AACzE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8CAA8C;AACxE,0BAA0B,wCAAwC;AAClE,0BAA0B,sCAAsC;AAChE,0BAA0B,8CAA8C;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAiD;AAC3E,0BAA0B,+CAA+C;AACzE;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oCAAoC;AACpE,gCAAgC,8BAA8B;AAC9D;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0BAA0B;AAC1B;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA,+BAA+B;AAC/B,gCAAgC,iBAAiB;AACjD;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,4BAA4B,4BAA4B;AACxD;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,0BAA0B,iBAAiB;AAC3C;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA,kCAAkC;AAClC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,KAAK;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACljBA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEyC;;AAEzC,6BAAe,oCAAU;AACzB;AACA,sBAAsB,OAAO;AAC7B,sBAAsB,qDAAQ;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC9OA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU,qBAAqB;AAC/B;;AAEA;AACA,UAAU;AACV,UAAU,eAAe;AACzB;;AAEA;AACA,UAAU;AACV,UAAU,gBAAgB;;AAE1B;AACA,UAAU;AACV,UAAU,gBAAgB;;AAE1B;AACA,UAAU;AACV,UAAU,kBAAkB;;AAE5B;AACA,UAAU;AACV,UAAU,kBAAkB;;AAE5B;AACA,UAAU;AACV,UAAU,eAAe;AACzB;AACA,IAAI;AACJ;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa;AACb;AACA;;AAEA;AACA,aAAa;AACb,wCAAwC,YAAY;AACpD;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW,QAAQ,kBAAkB;;AAEzD;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,WAAW,QAAQ,kBAAkB;;AAEzD;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,WAAW,QAAQ,kBAAkB;;AAE5D;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW,QAAQ,kBAAkB;;AAEzD;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,8CAA8C;AACxG;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0DAA0D,8CAA8C;AACxG;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0DAA0D,8CAA8C;AACxG;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0DAA0D,6CAA6C;AACvG;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0DAA0D,6CAA6C;AACvG;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0DAA0D,iDAAiD;AAC3G;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2CAA2C,MAAM;AACjD;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrlBA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,MAAM;AACjD;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEsC;;AAEtC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,WAAW,QAAQ,kBAAkB;AAC5D;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,6CAA6C;AACvG;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0DAA0D,yCAAyC;AACnG;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,0DAA0D,iDAAiD;AAC3G;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,MAAM;AACjD;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACa;AACA;;AAE/C,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;;AAE3B,sBAAsB,yDAAiB;AACvC,wBAAwB,uDAAmB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACoB;AACA;;AAEtD,6BAAe,oCAAU;AACzB,mBAAmB,2DAAsB;AACzC,mBAAmB,2DAAsB;AACzC,mBAAmB,qDAAQ;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACkC;AACM;AACxC;AACA;AACkH;;AAElH,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;AACA,iCAAiC,wGAAqC;;AAEtE,kBAAkB,wDAAW;;AAE7B;AACA,iEAAiE,cAAc,QAAQ;;AAEvF,8DAA8D,EAAE;;AAEhE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,gBAAgB;AAC7G;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC,mCAAmC,8BAA8B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,wCAAwC;AACxC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,KAAK;AAClE;AACA,2CAA2C;AAC3C,wCAAwC;AACxC;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,2CAA2C;AAC3C,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,8CAA8C;AAC9C,2CAA2C;AAC3C,wCAAwC;AACxC;AACA;AACA,kCAAkC;AAClC;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA,QAAQ;;AAER;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb,UAAU;;AAEV;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA,0BAA0B;AAC1B,eAAe;AACf,iBAAiB,oCAAoC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE,OAAO;AAClC,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,wCAAwC,EAAE;AAC1C,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEA;AACA,aAAa,MAAM;AACnB;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,yBAAyB,GAAG;AAC5B,aAAa;AACb,WAAW;AACX;AACA;AACA,wCAAwC,EAAE;AAC1C,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA,yBAAyB;AACzB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,cAAc;AACxD;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oCAAoC,OAAO,EAAE;AAC7C;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC,kBAAkB,WAAW,WAAW,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,GAAG;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sEAAsE,wBAAwB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,iBAAiB;;AAEjB;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC7wCA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACkC;;AAEpE,6BAAe,oCAAU;AACzB;AACA;;AAEA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,+BAA+B,oEAA2B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2BAA2B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,+BAA+B;AAC/B;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C,kDAAkD,KAAK;AACvD,kDAAkD,QAAQ;AAC1D,kDAAkD,KAAK;AACvD,oDAAoD,QAAQ;AAC5D,kDAAkD;AAClD;AACA,uDAAuD,MAAM;AAC7D,2DAA2D;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yFAAyF,OAAO;AAChG,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,aAAa;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,EAAE;AACzC,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE,OAAO;AACjD;AACA;AACA,4BAA4B;AAC5B,0BAA0B;AAC1B;AACA;AACA,oEAAoE,EAAE;AACtE;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gEAAgE,cAAc;AAC9E;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,aAAa,sBAAsB;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO,KAAK,gBAAgB;AAC/C,kCAAkC,QAAQ;AAC1C,+BAA+B,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS,sBAAsB,EAAE,gBAAgB;AACxD,6CAA6C,sBAAsB;AACnE;AACA;AACA,QAAQ;AACR,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5kBA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA,6BAAe,oCAAU;AACzB;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA,gBAAgB,QAAQ;AACxB;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY,GAAG,iBAAiB;AAChE,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACzLA;AACA;AACA;AACA;AACA;AACA;;AAE8D;;AAE9D,6BAAe,oCAAU;AACzB,wBAAwB,oEAAqB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE;;AAEnD;AACA,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,+GAA+G,cAAc,QAAQ,OAAO;AAC5I,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,iCAAiC,SAAS,GAAG,KAAK;AAClD;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS,GAAG,IAAI;AACnE;AACA,2CAA2C;AAC3C,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC,+BAA+B;AAC/B;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,mBAAmB;AACnB;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,cAAc;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,GAAG;AACpB,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,QAAQ;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,WAAW;AAClE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY,IAAI,MAAM;AAC9C;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;AACb,UAAU;AACV;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACrwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;;AAElC;AACA,IAAI;AACJ;AACA;;AAEA,6BAAe,oCAAU;AACzB;AACA,sBAAsB,qDAAQ;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,OAAO,QAAQ,UAAU;AACxD,+BAA+B,OAAO,QAAQ,UAAU;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA,sEAAsE;;AAEtE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,yBAAyB,QAAQ;AACjC,yBAAyB,QAAQ;AACjC,2BAA2B,QAAQ;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,qDAAqD;AAChF,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC7KA;AACA;AACA;AACA;AACA;AACA;AACkC;;AAElC,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,2EAA2E,cAAc;AACzF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACkC;AACY;AACF;AACQ;AACU;AACd;AAChD;;AAEA,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA,4BAA4B,2DAAc;AAC1C,6BAA6B,0DAAa;AAC1C,sCAAsC,mEAAsB;AAC5D,+BAA+B,4DAAe;AAC9C,+BAA+B,8DAAiB;;AAEhD;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA,aAAa;AACb;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,uBAAuB;AACvB;AACA,gBAAgB;AAChB,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,gCAAgC;AAChC;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;;;;;;;AC/ZA;AACA;AACA;AACA;AACA;AACA;AACkC;AACsC;AACU;;AAElF,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;;AAE3B,8BAA8B,wEAA2B;AACzD,mCAAmC,6EAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACkC;AACY;AAC4B;;AAE1E,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;;AAE3B,mBAAmB,0FAAW;;AAE9B;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B,8BAA8B,2DAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB;AACA,aAAa;AACb,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC5MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AAC0D;AACE;;AAE9F,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa,MAAM;;AAEnB;;AAEA,yBAAyB,gGAAuB;AAChD,0BAA0B,iGAAwB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,2DAA2D,IAAI;AAC/D,4BAA4B;AAC5B,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,SAAS;AAC1B;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,0BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACzRA;AACA;AACA;AACA;AACA;AACkC;AAClC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtSA;AACA;AACA;AACA;AACA;AACA;AACkC;AAClC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;ACjNkC;AACM;;AAEgC;AACH;AACU;;AAE/E,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,qBAAqB,+EAAiB,QAAQ,MAAM;AACpD,oBAAoB,wFAAkB;;AAEtC,oBAAoB,wDAAW,QAAQ,MAAM;;AAE7C;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;;AAEA,+BAA+B,oFAAe,QAAQ,KAAK;AAC3D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,4DAA4D,kBAAkB,wBAAwB,oBAAoB,gDAAgD,+BAA+B,4BAA4B,sBAAsB;AAC3P,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,4CAA4C;;AAEzE;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;;AAEA,+DAA+D;AAC/D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa;AACb;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACrOkC;AACuC;AACzE;;AAEA,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,qFAAe;AACvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,wCAAwC;AACxC;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,wCAAwC;AACxC;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,2CAA2C;AAC3C,wCAAwC;AACxC;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qCAAqC;AACrC,kCAAkC;AAClC;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B,oBAAoB,SAAS;AAC7B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA,aAAa;AACb,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,0CAA0C,cAAc;AACxD;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,oEAAoE;;AAEpE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;;AAEhB;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,YAAY;AACjE;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,wBAAwB;;AAEpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,GAAG;AACpB,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,uDAAuD,cAAc;AACrE;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACv9BA;AACA;AACA;AACA;AACA;AACA;;AAEkC;AAC4B;AACU;;AAExE,6BAAe,oCAAU;AACzB,uBAAuB,mEAAsB;AAC7C,4BAA4B,wEAA2B;;AAEvD,mBAAmB,qDAAQ;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;;AAEkC;AAC2B;AACE;;AAE/D;AACgE;;AAEhE,6BAAe,oCAAU;AACzB,gCAAgC,oEAAuB;;AAEvD,qBAAqB,uEAAa;AAClC,sBAAsB,wEAAc;AACpC;;AAEA;AACA,mBAAmB,qDAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA,UAAU,YAAY,WAAW,EAAE,SAAS;AAC5C;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kCAAkC,EAAE;AACpC,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,0DAA0D,EAAE;AAC5D;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;AAElC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,qCAAqC,IAAI,GAAG,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA,0BAA0B,gCAAgC;;AAE1D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA,sBAAsB;AACtB,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA,oEAAoE,sBAAsB;AAC1F;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACjWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiE;AAC/B;AAClC;;AAEA,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa,MAAM;;AAEnB;;AAEA,6BAA6B,6EAAW;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,2DAA2D,IAAI;AAC/D,4BAA4B;AAC5B,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA,6CAA6C;AAC7C,qDAAqD;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA,sBAAsB;AACtB,iDAAiD;AACjD;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,SAAS;AAC1B;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC9PA;AACA;AACA;AACA;AACA;AACkC;;AAElC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,gCAAgC;;AAE1D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvRA;AACA;AACA;AACA;AACA;AACA;;AAEkC;AAClC;;AAEqE;AACE;;AAEvE,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV,6BAA6B,+EAAiB;AAC9C,8BAA8B,gFAAkB;;AAEhD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,4DAA4D,kBAAkB,wBAAwB,oBAAoB,gDAAgD,+BAA+B,4BAA4B,sBAAsB;AAC3P,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,4CAA4C;AACnE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA;;AAEkC;AAClC;;AAEqF;;AAErF,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,wBAAwB,2FAAqB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEkC;AAClC;;AAE4D;;AAE5D,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,2BAA2B,uEAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;;AAEb;AACA,6CAA6C;AAC7C;AACA,aAAa;;AAEb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B;AAC3B,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACA;;AAEkC;AAClC;;AAE8E;AACL;;AAEzE,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,uBAAuB,0FAAe;AACtC,sBAAsB,sFAAc;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB;AACvB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,UAAU;;AAEV;;AAEA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC/SA;AACA;AACA;AACA;AACA;AACA;AACkC;;AAElC,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb,UAAU;AACV;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,gCAAgC,MAAM;AACnD,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACkC;AAClC;AACqD;;AAErD,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,yBAAyB,kEAAc;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV,mCAAmC;;AAEnC;AACA,2BAA2B,iBAAiB;AAC5C;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,+BAA+B;AAC/B,gCAAgC;AAChC;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD,8CAA8C,UAAU;AACxD,4CAA4C,WAAW;AACvD,+CAA+C,WAAW;AAC1D;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,yCAAyC,WAAW;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD,8CAA8C,UAAU;AACxD,4CAA4C,WAAW;AACvD,+CAA+C,WAAW;AAC1D;AACA,cAAc;AACd,kDAAkD,UAAU;AAC5D,yCAAyC,WAAW;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD,8CAA8C,UAAU;AACxD,4CAA4C,WAAW;AACvD,+CAA+C,WAAW;AAC1D;AACA;AACA,WAAW;AACX;;AAEA,mDAAmD;AACnD;AACA,+CAA+C,UAAU;AACzD,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD,2CAA2C,UAAU;AACrD,yCAAyC,WAAW;AACpD,4CAA4C,WAAW;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AChTA;AACA;AACA;AACA;AACA;AACA;AACkC;AACsB;AACU;;AAElE,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;AACA,oBAAoB,gEAAmB;AACvC,yBAAyB,qEAAwB;;AAEjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACkC;AACY;AACiB;;AAE/D,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA,qBAAqB,sEAAgB;AACrC;;AAEA;AACA;AACA;;AAEA,8BAA8B,2DAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,sEAAsE,gBAAgB;AACtF;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV,aAAa,gBAAgB;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACgC;AACJ;AACM;AACpE;AACA,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa,MAAM;;AAEnB;;AAEA,yBAAyB,gFAAa;AACtC,uBAAuB,8EAAW;AAClC,0BAA0B,iFAAc;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,wDAAwD,IAAI;AAC5D,4BAA4B;AAC5B,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,SAAS;AAC1B;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,0BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrRA;AACA;AACA;AACA;AACA;AACkC;AAClC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;AACkC;AACmB;;AAErD,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV,iCAAiC,8DAAW;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,gEAAgE,cAAc;;AAE9E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;AACb,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD,iCAAiC,cAAc;AAC/C;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,kEAAkE,EAAE;AACpE;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;;AAEA,+CAA+C,cAAc;AAC7D,6CAA6C,gBAAgB;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpeA;AACA;AACA;AACA;AACA;AACA;AACkC;AAClC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA,wDAAwD,IAAI,8BAA8B;AAC1F,wDAAwD,IAAI,UAAU;AACtE;AACA;AACA,wDAAwD,oBAAoB,SAAS;AACrF,wDAAwD,QAAQ,EAAE,UAAU;AAC5E;AACA,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChTA;AACA;AACA;AACA;AACA;AACkC;AACM;AACxC;;AAEA;;AAEA;;AAE4E;AACA;AACV;AACc;AACE;AACR;AACR;AACY;AACL;AACK;AACH;;AAEH;;AAED;AACH;AACE;;AAEF;;AAEpE,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,mBAAmB,gFAAmB,QAAQ,MAAM;AACpD,eAAe,iFAAe,QAAQ,MAAM;AAC5C,gBAAgB,kFAAgB,QAAQ,MAAM;;AAE9C,kBAAkB,wDAAW,QAAQ,MAAM;;AAE3C,eAAe,iFAAe,QAAQ,MAAM;;AAE5C;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B,KAAK;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,qFAAe,QAAQ,KAAK;AAC3D;AACA,UAAU;;AAEV;AACA,aAAa,SAAS;AACtB;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA,qCAAqC,kFAAiB;AACtD;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA,UAAU;;AAEV;AACA,oCAAoC,yFAAoB;AACxD;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA,UAAU;;AAEV;AACA,iDAAiD,kFAAiB;AAClE;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA,aAAa;AACb;;AAEA,kDAAkD,8EAAqB;AACvE;AACA,eAAe,KAAK;AACpB;;AAEA,gDAAgD,oFAAmB;AACnE;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA,UAAU;;AAEV,wCAAwC,qFAAgB;AACxD;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,8CAA8C,uFAAkB;AAChE;AACA,kBAAkB,KAAK;AACvB;AACA;;AAEA,wCAAwC,sFAAe;AACvD;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA,UAAU;;AAEV,+CAA+C,6EAAY;AAC3D;AACA,eAAe,KAAK;AACpB;;AAEA,+CAA+C,6EAAY;AAC3D;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA,aAAa;;AAEb,2CAA2C,wFAAkB;AAC7D;AACA,eAAe,KAAK;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,QAAQ;;AAER;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB,sDAAsD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB,uDAAuD;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB,8CAA8C;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB,gDAAgD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB,sDAAsD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB,sDAAsD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA,yBAAyB,0CAA0C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,4DAA4D,kBAAkB,wBAAwB,oBAAoB,gDAAgD,+BAA+B,4BAA4B,sBAAsB;AAC3P,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,4DAA4D,kBAAkB,wBAAwB,oBAAoB,gDAAgD,+BAA+B,4BAA4B,sBAAsB;AAC3P,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,gCAAgC,gCAAgC;AAChE;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,+DAA+D;AAC/D;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;;AAEV;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA,kDAAkD,cAAc;AAChaAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA,mCAAmC;;AAEnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC/oDA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;AAElC,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,sBAAsB,8CAA8C;AAC3H;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C;;AAE1C;AACA,qBAAqB;AACrB;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxOA;AACA;AACA;AACA;AACA;AACA;AACkC;AAClC,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,+BAA+B,SAAS,IAAI;AAC5C;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,oCAAoC,mBAAmB;AACvD;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1TA;AACA;AACA;AACA;AACA;AACA;AACkC;AAClC,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA,mBAAmB;AACnB;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6BAA6B,cAAc;;AAE3C,4CAA4C,OAAO;AACnD,6BAA6B,MAAM;AACnC;AACA;AACA,4BAA4B,gBAAgB;AAC5C,iBAAiB,aAAa;AAC9B;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;;AAEA,yBAAyB;;AAEzB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,EAAE,oBAAoB;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8DAA8D,MAAM;AACpE,2DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA,kCAAkC,EAAE,MAAM;AAC1C,uBAAuB,EAAE,SAAS;AAClC;AACA,gBAAgB;AAChB;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,+BAA+B,EAAE,aAAa;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC5PA;AACA;AACA;AACA;AACA;AACA;AACkC;AAClC,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mCAAmC;AACvD,oBAAoB,qCAAqC;AACzD,oBAAoB,iCAAiC;AACrD,oBAAoB,mCAAmC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,2BAA2B,mBAAmB,+BAA+B,KAAK;AAClF,aAAa;AACb;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACkC;AAClC,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA,eAAe,mBAAmB;AAClC;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AChIA;AACA;AACA;AACA;AACA;AACA;AACkC;;AAElC,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,sBAAsB,2DAA2D;AACxI;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACzQA;AACA;AACA;AACA;AACA;AACA;AACkC;AAC4B;;AAE9D,6BAAe,oCAAU;AACzB;AACA,mBAAmB,oEAAqB;AACxC,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;;AAE3B;AACA,mBAAmB,QAAQ;;AAE3B;AACA,mBAAmB,QAAQ;;AAE3B;AACA,mBAAmB,MAAM;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACkC;AAClC,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa;AACb;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,sBAAsB,0DAA0D;AACjJ;AACA,uDAAuD,sBAAsB,gDAAgD;AAC7H;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,oCAAoC,SAAS,GAAG,KAAK;AACrD;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC3WA;AACA;AACA;AACA;AACA;AACA;AACkC;AACiC;;AAEnE,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;AACA,0BAA0B,+EAAe;;AAEzC;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACkC;AAC0B;;AAE5D;;AAEA,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,2BAA2B,uEAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA,0CAA0C;;AAE1C;AACA,aAAa;AACb;;AAEA,iCAAiC;AACjC,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yHAAyH,gCAAgC,eAAe,iEAAiE,mBAAmB,uBAAuB,kBAAkB;AACrS;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,yBAAyB;AACzB;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,gCAAgC,WAAW;AAC3C;AACA,yBAAyB;AACzB,0BAA0B,YAAY;AACtC;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,oCAAoC,kCAAkC;AACtE;AACA;AACA,uCAAuC,KAAK;AAC5C;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C;AAC7C;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,eAAe,EAAE,KAAK;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB,EAAE,KAAK;AAC3E;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iFAAiF,mDAAmD;AACpI;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,yHAAyH,WAAW;AACpI;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;;AAEA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;;;;;AC32BA;AACA;AACA;AACA;AACA;AACA;AACkC;;AAElC,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,sBAAsB;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA,oBAAoB,wCAAwC;AAC5D,oBAAoB,yCAAyC;AAC7D;AACA;AACA;AACA;AACA,oBAAoB,+BAA+B;AACnD,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA,oBAAoB,+BAA+B;AACnD,oBAAoB,gCAAgC;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,wBAAwB;AAC1F;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,wBAAwB;AAC1F;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0CAA0C;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC3fA;AACA;AACA;AACA;AACA;AACA;AACkC;;AAElC,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,6BAA6B,cAAc;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,sBAAsB,gDAAgD;AAC7H;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;;AAE5C;AACA,qBAAqB;AACrB;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;;AAElC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;AACA;;AAEA;AACA,sBAAsB,OAAO;AAC7B,yBAAyB,OAAO;AAChC,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,6BAA6B;;AAEzE;AACA;AACA;AACA;AACA;AACA,iCAAiC,KAAK;AACtC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,yBAAyB;;AAEzB;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kCAAkC,cAAc;AAChD;AACA,yDAAyD,OAAO;AAChE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACxLA;AACA;AACA;AACA;AACA;AACA;AACkC;AACoC;AACF;AACI;;AAExE,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA,aAAa,mBAAmB;;AAEhC,wBAAwB,iFAAc,QAAQ,KAAK;;AAEnD,0BAA0B,mFAAgB,QAAQ,KAAK;AACvD;AACA;AACA;AACA,UAAU;AACV,yBAAyB,kFAAe,QAAQ,KAAK;AACrD;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA,QAAQ;;AAER;AACA;;AAEA;AACA;AACA,QAAQ;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,iCAAiC;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACyC;;AAE3E,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,+BAA+B,kFAAoB;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,iBAAiB,OAAO;AACxB;AACA,qDAAqD,aAAa;AAClE,iBAAiB,OAAO;AACxB;AACA,iBAAiB,OAAO;AACxB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACuC;;AAEzE,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,8BAA8B,iFAAmB;;AAEjD;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,iBAAiB,OAAO;AACxB;AACA,qDAAqD,aAAa;AAClE,iBAAiB,OAAO;AACxB;AACA,iBAAiB,OAAO;AACxB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AAC2C;;AAE7E,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,gCAAgC,mFAAqB,QAAQ,MAAM;;AAEnE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD,aAAa;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU,MAAM,QAAQ,GAAG,EAAE;AAC3D;AACA,kBAAkB;AAClB,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,iBAAiB,OAAO;AACxB;AACA,qDAAqD,aAAa;AAClE,iBAAiB,OAAO;AACxB;AACA,iBAAiB,OAAO;AACxB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACoC;AACH;AACE;;AAEM;AACF;AACI;;AAE7E,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,qBAAqB,+EAAkB,QAAQ,MAAM;AACrD,iBAAiB,gFAAc;AAC/B,kBAAkB,iFAAe;;AAEjC;AACA,+BAA+B,kFAAoB;AACnD,8BAA8B,iFAAmB;AACjD,gCAAgC,mFAAqB;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA,aAAa,QAAQ,gBAAgB;AACrC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClRA;AACA;AACA;AACA;AACA;AACA;AACkC;AACwB;AACU;;AAEpE,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;;AAE3B;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;;AAEA,4BAA4B,iEAAoB;AAChD,iCAAiC,sEAAyB;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4CAA4C;AAC7D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACkC;AACY;AACsB;;AAEpE,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B,8BAA8B,2DAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA,wBAAwB,4EAAmB;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxKA;AACA;AACA;AACA;AACA;AACA;AACkC;AAClC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;AC5MkC;AACM;;AAEwC;AACI;;AAEpF,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA,OAAO;AACP,+BAA+B;AAC/B,8BAA8B;AAC9B,2BAA2B;AAC3B;AACA,mBAAmB,4EAA+B;AAClD;AACA,qBAAqB,8EAAiC;;AAEtD,kBAAkB,wDAAW,QAAQ,MAAM;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,4DAA4D,kBAAkB,wBAAwB,oBAAoB,gDAAgD,+BAA+B,4BAA4B,sBAAsB;AAC3P,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC9PA;AACA;AACA;AACA;AACA;AACA;AACsF;AACQ;;AAE9F,6BAAe,oCAAU;AACzB,2BAA2B,iGAAgB;AAC3C,+BAA+B,qGAAoB;;AAEnD;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,4CAA4C,KAAK,KAAK,iBAAiB;AACvE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA;;AAEA,6BAAe,sCAAoB;AACnC;AACA;;;;;;;;;;;;;;;;;;;;;ACrLA;AACA;AACA;AACA;AACA;AACA;AACmE;;AAEK;;AAEQ;;AAErC;;AAEmC;;AAE9E;;AAEA,6BAAe,oCAAU;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,gDAAgD,kBAAkB;AAClE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,4CAA4C,kBAAkB;AAC9D;AACA;;AAEA,0BAA0B,8FAAe;;AAEzC;AACA;AACA,SAAS,8DAAE;AACX,UAAU,0EAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gDAAM;AACzB;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,8DAAE;AACZ,mBAAmB,gDAAM,CAAC,oFAA0B;AACpD,mBAAmB,mEAAU;AAC7B,UAAU;;AAEV;AACA;;AAEA;AACA;AACA,SAAS,8DAAE;AACX,SAAS,0EAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gDAAM;AACzB,YAAY,sGAA4C;AACxD;AACA;;AAEA;;AAEA;AACA,kBAAkB,6EAAiB;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,8DAAE;AACZ,mBAAmB,gDAAM;AACzB;;AAEA;AACA;AACA;AACA,gBAAgB,8DAAE;AAClB;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA,UAAU,8DAAE;AACZ,mBAAmB,gDAAM,CAAC,uFAA6B;AACvD;;AAEA;AACA;AACA,gBAAgB,8DAAE;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA,SAAS,8DAAE;AACX,SAAS,8DAAE;AACX;AACA,mBAAmB,gDAAM,CAAC,2FAAiC;;AAE3D;AACA;;AAEA;AACA,UAAU,8DAAE;AACZ;AACA,mBAAmB,gDAAM;;AAEzB;AACA;;AAEA;AACA,UAAU,8DAAE;AACZ,mBAAmB,gDAAM,CAAC,oFAA0B;;AAEpD;AACA;;AAEA;AACA,UAAU,0EAAiB,oBAAoB,mEAAU;AACzD,mBAAmB,gDAAM,CAAC,0FAAgC;;AAE1D;AACA;;AAEA;AACA,UAAU,8DAAE,uCAAuC,mEAAU;AAC7D,mBAAmB,gDAAM,CAAC,4FAAkC;;AAE5D;AACA;;AAEA;AACA;AACA,SAAS,8DAAE;AACX,UAAU,mEAAU;AACpB;AACA,mBAAmB,gDAAM,CAAC,6EAAmB;AAC7C;;AAEA;;AAEA;;AAEA;AACA,eAAe,8FAAe;AAC9B;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA,UAAU,8DAAE;AACZ;AACA;AACA,YAAY,sFAA4B;AACxC;AACA;;AAEA;AACA;AACA,UAAU,8DAAE;AACZ,mBAAmB,gDAAM;;AAEzB;AACA;AACA,YAAY,8DAAE;AACd,aAAa,mEAAU;AACvB;AACA,sBAAsB,gDAAM;AAC5B;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA,eAAe,eAAe;AAC9B;AACA;AACA;;AAEA,UAAU,8DAAE,+BAA+B,0EAAiB;AAC5D;AACA;;AAEA;AACA,SAAS,8DAAE;AACX,UAAU,8DAAE;AACZ,UAAU,0EAAiB;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,QAAQ;AACvB;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,iDAAO;AACb;;AAEA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,QAAQ;AACvB,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA,2BAA2B,6EAAiB;;AAE5C;;AAEA;AACA;;AAEA;;AAEA,MAAM,iDAAO;AACb;AACA;AACA;AACA;AACA,mBAAmB,8DAAE;AACrB,qBAAqB,8DAAE;AACvB,qBAAqB,8DAAE;AACvB,qBAAqB,8DAAE;AACvB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8DAAE;AACpB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8DAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA,mBAAmB,8DAAE;AACrB,qBAAqB,8DAAE;AACvB,qBAAqB,8DAAE;AACvB,qBAAqB,8DAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,gBAAgB;AAC/B,eAAe,UAAU;AACzB;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA,2BAA2B,6EAAiB;AAC5C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,2BAA2B,6EAAiB;;AAE5C,oBAAoB,8DAAE;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACvwBA;AACA;AACA;AACA;AACA;AACA;AACkC;AACY;;AAEL;AACG;AAC5C;AACoD;;AAEa;AACsB;;AAEvF;AACA,IAAI,OAAO;AACX;AACA;;AAE4D;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,6BAAe,oCAAU;AACzB;AACA;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA,sBAAsB,iFAAW;AACjC,2BAA2B,uEAAgB;;AAE3C;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;;AAEA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;;AAEA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;;AAEA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY,sBAAsB,aAAa;AAC7F,sBAAsB;AACtB,uBAAuB,4CAA4C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,eAAe;AAC5E,qCAAqC;AACrC;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uDAAuD,aAAa;AACpE,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,MAAM,8BAA8B,gBAAgB;AACtE;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAW;AACzC;AACA;AACA;AACA,sBAAsB,8FAAoB;AAC1C,gBAAgB;AAChB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,KAAK;AACtB,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AChvBA;AACA;AACA;AACA;AACA;AACA;AACkC;;AAElC,6BAAe,oCAAU;AACzB;AACA,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,WAAW;AAC5D,kCAAkC;AAClC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC,sCAAsC,gCAAgC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA,sCAAsC,cAAc;AACpD;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,YAAY,iBAAiB,kBAAkB,QAAQ,OAAO;AACpH,gDAAgD,MAAM;AACtD;AACA,0DAA0D,YAAY,gBAAgB;AACtF,iEAAiE,iBAAiB;AAClF,yCAAyC;AACzC;AACA,2CAA2C,sBAAsB;AACjE;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,gBAAgB;AAChB,iBAAiB,4CAA4C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC,0BAA0B;AAC7D;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qCAAqC;AACxE;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gBAAgB;AACzD;AACA,gEAAgE,iBAAiB;AACjF,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE,qCAAqC;AACrC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA,gBAAgB;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B,GAAG;AAC9B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB,EAAE,SAAS;AAC1D;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,wBAAwB,mBAAmB,GAAG,WAAW,KAAK,UAAU,EAAE;AAC1E;AACA,iBAAiB;AACjB,aAAa;AACb,2BAA2B,GAAG;AAC9B;AACA;AACA,mCAAmC,QAAQ;AAC3C,sBAAsB,2BAA2B;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,cAAc;AACd;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC5cA;AACA;AACA;AACA;AACA;AACA;AACkC;AACoB;AACU;;AAEhE,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;AACA;AACA;AACA;;AAEA,0BAA0B,+DAAkB;AAC5C,+BAA+B,oEAAuB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACkC;AACY;AACa;;AAE3D,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;AACA;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B,8BAA8B,2DAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,sEAAsE,gBAAgB;AACtF;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV,wBAAwB,wEAAc;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC7JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AAC6B;AACE;;AAEjE,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,aAAa,MAAM;;AAEnB;;AAEA,yBAAyB,8EAAY;AACrC,0BAA0B,+EAAa;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,2DAA2D,IAAI;AAC/D,4BAA4B;AAC5B,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qEAAqE;AACrE;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,SAAS;AAC1B;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,0BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtRA;AACA;AACA;AACA;AACA;AACkC;;AAElC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACkC;;AAElC,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACjNkC;AACM;;AAEwB;AACL;;AAE3D,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;AACA;;AAEA;AACA,gCAAgC,2EAAgB;AAChD,iCAAiC,qEAAiB,QAAQ,MAAM;AAChE;AACA;AACA,IAAI;;AAEJ,kBAAkB,wDAAW,QAAQ,MAAM;;AAE3C;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,4DAA4D,kBAAkB,wBAAwB,oBAAoB,gDAAgD,+BAA+B,4BAA4B,sBAAsB;AAC3P,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,sBAAsB;AACtB,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC3PA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;AAElC;AACA;;AAEA,6BAAe,oCAAU;AACzB,mBAAmB,qDAAQ;AAC3B;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB,mBAAmB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,wCAAwC;AACxC,qCAAqC;AACrC;AACA,+BAA+B;AAC/B,gCAAgC,mCAAmC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,2CAA2C;AAC3C,wCAAwC;AACxC,qCAAqC;AACrC;AACA,+BAA+B;AAC/B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA,4CAA4C;;AAE5C;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,qCAAqC,cAAc;;AAEnD;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,iBAAiB,MAAM;AACvB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B,kBAAkB,GAAG,QAAQ;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;;AAExC;AACA,qCAAqC;AACrC,+BAA+B;AAC/B,4BAA4B;AAC5B,yBAAyB;;AAEzB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB,UAAU;AACV;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA,wBAAwB,aAAa,EAAE,WAAW;;AAElD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB,mBAAmB;AACnB,oBAAoB,iBAAiB;AACrC;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,cAAc;;AAEnD;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb,UAAU;AACV;;AAEA;AACA;AACA;;AAEA,kCAAkC,cAAc;;AAEhD;AACA;AACA,qCAAqC;AACrC;AACA;AACA,4CAA4C;AAC5C,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxjCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,qCAAqC;AAChD;AACA;AACA,sCAAsC,MAAM,MAAM,MAAM,MAAM,MAAM;AACpE,UAAU;AACV,WAAW,MAAM,8BAA8B,KAAK;AACpD,WAAW,qCAAqC;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,GAAG;AACjB;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,SAAS;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,uBAAuB;AACvB;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,gBAAgB;AACtC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;;;;;;;UCxKA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACN+C;AACO;AACV;;AAEI;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+DAAkB;;AAEzC,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,gBAAgB,4DAAW;AAC3B,OAAO;AACP;AACA,gBAAgB,8DAAM,UAAU,iEAAS;AACzC,OAAO;AACP,IAAI;AACJ","sources":["webpack://abdesigner/./node_modules/bpmn-js/lib/BaseModeler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/BaseViewer.js","webpack://abdesigner/./node_modules/bpmn-js/lib/Modeler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/NavigatedViewer.js","webpack://abdesigner/./node_modules/bpmn-js/lib/Viewer.js","webpack://abdesigner/./node_modules/bpmn-js/lib/core/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/draw/BpmnRenderUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/draw/BpmnRenderer.js","webpack://abdesigner/./node_modules/bpmn-js/lib/draw/PathMap.js","webpack://abdesigner/./node_modules/bpmn-js/lib/draw/TextRenderer.js","webpack://abdesigner/./node_modules/bpmn-js/lib/draw/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/auto-place/BpmnAutoPlace.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/auto-place/BpmnAutoPlaceUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/auto-place/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/auto-resize/BpmnAutoResize.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/auto-resize/BpmnAutoResizeProvider.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/auto-resize/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/context-pad/ContextPadProvider.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/context-pad/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/copy-paste/BpmnCopyPaste.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/copy-paste/ModdleCopy.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/copy-paste/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/di-ordering/BpmnDiOrdering.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/di-ordering/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/distribute-elements/BpmnDistributeElements.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/distribute-elements/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/drilldown/DrilldownBreadcrumbs.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/drilldown/DrilldownCentering.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/drilldown/DrilldownOverlayBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/drilldown/SubprocessCompatibility.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/drilldown/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/editor-actions/BpmnEditorActions.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/editor-actions/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/grid-snapping/BpmnGridSnapping.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/grid-snapping/behavior/AutoPlaceBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/grid-snapping/behavior/CreateParticipantBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/grid-snapping/behavior/LayoutConnectionBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/grid-snapping/behavior/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/grid-snapping/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/interaction-events/BpmnInteractionEvents.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/interaction-events/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/keyboard/BpmnKeyboardBindings.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/keyboard/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/label-editing/LabelEditingPreview.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/label-editing/LabelEditingProvider.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/label-editing/LabelUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/label-editing/cmd/UpdateLabelHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/label-editing/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/BpmnFactory.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/BpmnLayouter.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/BpmnUpdater.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/ElementFactory.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/Modeling.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/AdaptiveLabelPositioningBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/AppendBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/AssociationBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/AttachEventBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/BoundaryEventBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/CreateBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/CreateDataObjectBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/CreateParticipantBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/DataInputAssociationBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/DataStoreBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/DeleteLaneBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/DetachEventBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/DropOnFlowBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/EventBasedGatewayBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/FixHoverBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/GroupBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/ImportDockingFix.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/IsHorizontalFix.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/LabelBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/MessageFlowBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/ModelingFeedback.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/RemoveElementBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/RemoveEmbeddedLabelBoundsBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/RemoveParticipantBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/ReplaceConnectionBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/ReplaceElementBehaviour.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/ResizeBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/ResizeLaneBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/RootElementReferenceBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/SpaceToolBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/SubProcessPlaneBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/SubProcessStartEventBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/ToggleCollapseConnectionBehaviour.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/ToggleElementCollapseBehaviour.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/UnclaimIdBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/UnsetDefaultFlowBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/UpdateFlowNodeRefsBehavior.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/util/CategoryUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/util/GeometricUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/util/LabelLayoutUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/util/LineAttachmentUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/behavior/util/LineIntersect.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/cmd/AddLaneHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/cmd/IdClaimHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/cmd/ResizeLaneHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/cmd/SetColorHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/cmd/SplitLaneHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/cmd/UpdateCanvasRootHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/cmd/UpdateFlowNodeRefsHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/cmd/UpdateModdlePropertiesHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/cmd/UpdatePropertiesHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/cmd/UpdateSemanticParentHandler.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/util/LaneUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/modeling/util/ModelingUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/ordering/BpmnOrderingProvider.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/ordering/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/palette/PaletteProvider.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/palette/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/popup-menu/ReplaceMenuProvider.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/popup-menu/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/popup-menu/util/TypeUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/replace-preview/BpmnReplacePreview.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/replace-preview/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/replace/BpmnReplace.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/replace/ReplaceOptions.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/replace/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/rules/BpmnRules.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/rules/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/search/BpmnSearchProvider.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/search/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/snapping/BpmnConnectSnapping.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/snapping/BpmnCreateMoveSnapping.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/snapping/BpmnSnappingUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/features/snapping/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/import/BpmnImporter.js","webpack://abdesigner/./node_modules/bpmn-js/lib/import/BpmnTreeWalker.js","webpack://abdesigner/./node_modules/bpmn-js/lib/import/Importer.js","webpack://abdesigner/./node_modules/bpmn-js/lib/import/Util.js","webpack://abdesigner/./node_modules/bpmn-js/lib/import/index.js","webpack://abdesigner/./node_modules/bpmn-js/lib/util/CompatibilityUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/util/DiUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/util/DrilldownUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/util/LabelUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/util/ModelUtil.js","webpack://abdesigner/./node_modules/bpmn-js/lib/util/PoweredByUtil.js","webpack://abdesigner/./node_modules/bpmn-js/node_modules/inherits/inherits_browser.js","webpack://abdesigner/./node_modules/bpmn-moddle/dist/index.esm.js","webpack://abdesigner/./node_modules/bpmn-js/dist/assets/bpmn-font/css/bpmn.css","webpack://abdesigner/./node_modules/bpmn-js/dist/assets/bpmn-js.css","webpack://abdesigner/./node_modules/bpmn-js/dist/assets/diagram-js.css","webpack://abdesigner/./styles/Designer.css","webpack://abdesigner/./node_modules/css-loader/dist/runtime/api.js","webpack://abdesigner/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://abdesigner/./node_modules/css.escape/css.escape.js","webpack://abdesigner/./node_modules/diagram-js-direct-editing/index.js","webpack://abdesigner/./node_modules/diagram-js-direct-editing/lib/DirectEditing.js","webpack://abdesigner/./node_modules/diagram-js-direct-editing/lib/TextBox.js","webpack://abdesigner/./node_modules/diagram-js/lib/Diagram.js","webpack://abdesigner/./node_modules/diagram-js/lib/command/CommandInterceptor.js","webpack://abdesigner/./node_modules/diagram-js/lib/command/CommandStack.js","webpack://abdesigner/./node_modules/diagram-js/lib/command/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/core/Canvas.js","webpack://abdesigner/./node_modules/diagram-js/lib/core/ElementFactory.js","webpack://abdesigner/./node_modules/diagram-js/lib/core/ElementRegistry.js","webpack://abdesigner/./node_modules/diagram-js/lib/core/EventBus.js","webpack://abdesigner/./node_modules/diagram-js/lib/core/GraphicsFactory.js","webpack://abdesigner/./node_modules/diagram-js/lib/core/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/draw/BaseRenderer.js","webpack://abdesigner/./node_modules/diagram-js/lib/draw/DefaultRenderer.js","webpack://abdesigner/./node_modules/diagram-js/lib/draw/Styles.js","webpack://abdesigner/./node_modules/diagram-js/lib/draw/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/align-elements/AlignElements.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/align-elements/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/attach-support/AttachSupport.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/attach-support/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/auto-place/AutoPlace.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/auto-place/AutoPlaceSelectionBehavior.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/auto-place/AutoPlaceUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/auto-place/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/auto-resize/AutoResize.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/auto-resize/AutoResizeProvider.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/auto-scroll/AutoScroll.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/auto-scroll/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/bendpoints/BendpointMove.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/bendpoints/BendpointMovePreview.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/bendpoints/BendpointSnapping.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/bendpoints/BendpointUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/bendpoints/Bendpoints.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/bendpoints/ConnectionSegmentMove.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/bendpoints/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/change-support/ChangeSupport.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/change-support/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/clipboard/Clipboard.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/clipboard/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/connect/Connect.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/connect/ConnectPreview.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/connect/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/connection-preview/ConnectionPreview.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/connection-preview/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/context-pad/ContextPad.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/context-pad/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/copy-paste/CopyPaste.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/copy-paste/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/create/Create.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/create/CreatePreview.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/create/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/distribute-elements/DistributeElements.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/distribute-elements/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/dragging/Dragging.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/dragging/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/editor-actions/EditorActions.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/editor-actions/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/global-connect/GlobalConnect.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/global-connect/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/grid-snapping/GridSnapping.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/grid-snapping/GridUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/grid-snapping/behavior/ResizeBehavior.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/grid-snapping/behavior/SpaceToolBehavior.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/grid-snapping/behavior/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/grid-snapping/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/hand-tool/HandTool.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/hand-tool/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/hover-fix/HoverFix.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/hover-fix/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/interaction-events/InteractionEvents.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/interaction-events/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/keyboard-move-selection/KeyboardMoveSelection.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/keyboard-move-selection/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/keyboard/Keyboard.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/keyboard/KeyboardBindings.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/keyboard/KeyboardUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/keyboard/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/label-support/LabelSupport.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/label-support/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/lasso-tool/LassoTool.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/lasso-tool/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/Modeling.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/AlignElementsHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/AppendShapeHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/CreateConnectionHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/CreateElementsHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/CreateLabelHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/CreateShapeHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/DeleteConnectionHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/DeleteElementsHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/DeleteShapeHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/DistributeElementsHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/LayoutConnectionHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/MoveConnectionHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/MoveElementsHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/MoveShapeHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/ReconnectConnectionHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/ReplaceShapeHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/ResizeShapeHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/SpaceToolHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/ToggleShapeCollapseHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/UpdateAttachmentHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/UpdateWaypointsHandler.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/helper/AnchorsHelper.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/helper/MoveClosure.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/modeling/cmd/helper/MoveHelper.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/mouse/Mouse.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/mouse/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/move/Move.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/move/MovePreview.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/move/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/ordering/OrderingProvider.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/outline/Outline.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/outline/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/overlays/Overlays.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/overlays/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/palette/Palette.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/palette/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/popup-menu/PopupMenu.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/popup-menu/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/preview-support/PreviewSupport.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/preview-support/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/replace/Replace.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/replace/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/resize/Resize.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/resize/ResizeHandles.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/resize/ResizePreview.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/resize/ResizeUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/resize/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/root-elements/RootElementsBehavior.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/root-elements/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/rules/RuleProvider.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/rules/Rules.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/rules/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/search-pad/SearchPad.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/search-pad/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/selection/Selection.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/selection/SelectionBehavior.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/selection/SelectionVisuals.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/selection/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/snapping/CreateMoveSnapping.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/snapping/ResizeSnapping.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/snapping/SnapContext.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/snapping/SnapUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/snapping/Snapping.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/snapping/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/space-tool/SpaceTool.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/space-tool/SpaceToolPreview.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/space-tool/SpaceUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/space-tool/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/tool-manager/ToolManager.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/tool-manager/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/tooltips/Tooltips.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/tooltips/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/touch/TouchFix.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/touch/TouchInteractionEvents.js","webpack://abdesigner/./node_modules/diagram-js/lib/features/touch/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/i18n/translate/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/i18n/translate/translate.js","webpack://abdesigner/./node_modules/diagram-js/lib/layout/BaseLayouter.js","webpack://abdesigner/./node_modules/diagram-js/lib/layout/CroppingConnectionDocking.js","webpack://abdesigner/./node_modules/diagram-js/lib/layout/LayoutUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/layout/ManhattanLayout.js","webpack://abdesigner/./node_modules/diagram-js/lib/model/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/navigation/keyboard-move/KeyboardMove.js","webpack://abdesigner/./node_modules/diagram-js/lib/navigation/keyboard-move/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/navigation/movecanvas/MoveCanvas.js","webpack://abdesigner/./node_modules/diagram-js/lib/navigation/movecanvas/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/navigation/touch/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/navigation/zoomscroll/ZoomScroll.js","webpack://abdesigner/./node_modules/diagram-js/lib/navigation/zoomscroll/ZoomUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/navigation/zoomscroll/index.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/AttachUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/ClickTrap.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/Collections.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/Cursor.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/Elements.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/EscapeUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/Event.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/Geometry.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/GraphicsUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/IdGenerator.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/LineIntersection.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/Math.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/Mouse.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/Platform.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/PositionUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/Removal.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/RenderUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/SvgTransformUtil.js","webpack://abdesigner/./node_modules/diagram-js/lib/util/Text.js","webpack://abdesigner/./node_modules/diagram-js/node_modules/inherits/inherits_browser.js","webpack://abdesigner/./node_modules/didi/dist/index.esm.js","webpack://abdesigner/./node_modules/hammerjs/hammer.js","webpack://abdesigner/./node_modules/ids/dist/index.esm.js","webpack://abdesigner/./node_modules/min-dash/dist/index.esm.js","webpack://abdesigner/./node_modules/min-dom/dist/index.esm.js","webpack://abdesigner/./node_modules/moddle-xml/dist/index.esm.js","webpack://abdesigner/./node_modules/moddle/dist/index.esm.js","webpack://abdesigner/./node_modules/object-refs/index.js","webpack://abdesigner/./node_modules/object-refs/lib/collection.js","webpack://abdesigner/./node_modules/object-refs/lib/refs.js","webpack://abdesigner/./node_modules/path-intersection/intersect.js","webpack://abdesigner/./node_modules/saxen/dist/index.esm.js","webpack://abdesigner/./node_modules/bpmn-js/dist/assets/bpmn-font/css/bpmn.css?93e5","webpack://abdesigner/./node_modules/bpmn-js/dist/assets/bpmn-js.css?2ede","webpack://abdesigner/./node_modules/bpmn-js/dist/assets/diagram-js.css?5afb","webpack://abdesigner/./styles/Designer.css?f03f","webpack://abdesigner/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://abdesigner/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://abdesigner/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://abdesigner/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://abdesigner/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://abdesigner/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://abdesigner/./node_modules/tiny-svg/dist/index.esm.js","webpack://abdesigner/./src/application.js","webpack://abdesigner/./src/definitions.js","webpack://abdesigner/./src/labels/en.js","webpack://abdesigner/./src/labels/labels.js","webpack://abdesigner/./src/rootPages/Designer/editors/EditorManager.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewCarousel.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewChart.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewChartArea.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewChartBar.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewChartLine.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewChartPie.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewComment.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewConditionalContainer.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewContainer.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewDataview.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewDetail.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewDocxBuilder.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewForm.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewGrid.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewLabel.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewLayout.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewMenu.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewPage.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewTab.js","webpack://abdesigner/./src/rootPages/Designer/editors/views/ABViewText.js","webpack://abdesigner/./src/rootPages/Designer/interface_common/ui_tab_form_popup.js","webpack://abdesigner/./src/rootPages/Designer/properties/PropertyManager.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABField.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldAutoIndex.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldBoolean.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldCalculate.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldCombine.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldConnect.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldDate.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldDateTime.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldEmail.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldFile.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldFormula.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldImage.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldJson.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldList.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldLongText.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldNumber.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldString.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldTextFormula.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldTree.js","webpack://abdesigner/./src/rootPages/Designer/properties/dataFields/ABFieldUser.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessEnd.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessParticipant.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessParticipant_selectManagersUI.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessTaskEmail.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessTaskService.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessTaskServiceCalculate.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessTaskServiceInsertRecord.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessTaskServiceQuery.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessTaskUser.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessTaskUserApproval.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessTaskUserExternal.js","webpack://abdesigner/./src/rootPages/Designer/properties/process/ABProcessTriggerLifecycle.js","webpack://abdesigner/./src/rootPages/Designer/properties/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://abdesigner/./src/rootPages/Designer/properties/rules/ABViewRule.js","webpack://abdesigner/./src/rootPages/Designer/properties/rules/ABViewRuleAction.js","webpack://abdesigner/./src/rootPages/Designer/properties/rules/ABViewRuleList.js","webpack://abdesigner/./src/rootPages/Designer/properties/rules/ABViewRuleListFormRecordRules.js","webpack://abdesigner/./src/rootPages/Designer/properties/rules/ABViewRuleListFormSubmitRules.js","webpack://abdesigner/./src/rootPages/Designer/properties/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://abdesigner/./src/rootPages/Designer/properties/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://abdesigner/./src/rootPages/Designer/properties/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://abdesigner/./src/rootPages/Designer/properties/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABView.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewCSVImporter.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewCarousel.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewChart.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewChartArea.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewChartBar.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewChartLine.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewChartPie.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewComment.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewConditionalContainer.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewContainer.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewDataview.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewDetail.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewDocxBuilder.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewForm.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewGrid.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewLabel.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewLayout.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewMenu.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewPage.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewTab.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/ABViewText.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/viewProperties/ABViewPropertyFilterData.js","webpack://abdesigner/./src/rootPages/Designer/properties/views/viewProperties/ABViewPropertyLinkPage.js","webpack://abdesigner/./src/rootPages/Designer/properties/workspaceViews/ABViewGantt.js","webpack://abdesigner/./src/rootPages/Designer/properties/workspaceViews/ABViewGrid.js","webpack://abdesigner/./src/rootPages/Designer/properties/workspaceViews/ABViewKanban.js","webpack://abdesigner/./src/rootPages/Designer/ui.js","webpack://abdesigner/./src/rootPages/Designer/ui_choose.js","webpack://abdesigner/./src/rootPages/Designer/ui_choose_form.js","webpack://abdesigner/./src/rootPages/Designer/ui_choose_list.js","webpack://abdesigner/./src/rootPages/Designer/ui_class.js","webpack://abdesigner/./src/rootPages/Designer/ui_common_list.js","webpack://abdesigner/./src/rootPages/Designer/ui_common_popupEditMenu.js","webpack://abdesigner/./src/rootPages/Designer/ui_warnings.js","webpack://abdesigner/./src/rootPages/Designer/ui_work.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_datacollection.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_datacollection_list.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_datacollection_list_newDatacollection.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_datacollection_list_newDatacollection_blank.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_datacollection_list_newDatacollection_import.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_datacollection_workspace.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_datacollection_workspace_properties.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface_list.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface_list_copyPage.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface_list_newPage.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface_list_newPage_blank.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface_workspace.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface_workspace_details.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface_workspace_details_properties.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface_workspace_editor.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface_workspace_editor_components.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_interface_workspace_editor_layout.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_list.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_list_newObject.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_list_newObject_blank.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_list_newObject_csv.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_list_newObject_import.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupCountColumns.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupCustomIndex.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupDefineLabel.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupExport.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupFilter.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupFrozenColumns.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupHeaderEditMenu.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupHideFields.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupImport.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupNewDataField.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupSortFields.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupSummaryColumns.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupTrack.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_popupViewSettings.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_view_gantt.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_view_grid.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_view_kanban.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_object_workspace_workspaceviews.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_process.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_process_list.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_process_list_newProcess.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_process_workspace.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_process_workspace_customBPMN.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_process_workspace_customBPMN_customEvents.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_process_workspace_customBPMN_paletteProvider.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_process_workspace_customBPMN_replaceMenuProvider.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_process_workspace_model.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_process_workspace_monitor.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_query.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_query_list.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_query_list_newQuery.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_query_list_newQuery_blank.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_query_list_newQuery_import.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_query_workspace.js","webpack://abdesigner/./src/rootPages/Designer/ui_work_query_workspace_design.js","webpack://abdesigner/./src/utils/CSVImporter.js","webpack://abdesigner/webpack/bootstrap","webpack://abdesigner/webpack/runtime/compat get default export","webpack://abdesigner/webpack/runtime/define property getters","webpack://abdesigner/webpack/runtime/global","webpack://abdesigner/webpack/runtime/hasOwnProperty shorthand","webpack://abdesigner/webpack/runtime/make namespace object","webpack://abdesigner/./index.js"],"sourcesContent":["import inherits from 'inherits';\n\nimport Ids from 'ids';\n\nimport BaseViewer from './BaseViewer';\n\n\n/**\n * A base modeler for BPMN 2.0 diagrams.\n *\n * Have a look at {@link Modeler} for a bundle that includes actual features.\n *\n * @param {Object} [options] configuration options to pass to the viewer\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\n * @param {string|number} [options.width] the width of the viewer\n * @param {string|number} [options.height] the height of the viewer\n * @param {Object} [options.moddleExtensions] extension packages to provide\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\n */\nexport default function BaseModeler(options) {\n  BaseViewer.call(this, options);\n\n  // hook ID collection into the modeler\n  this.on('import.parse.complete', function(event) {\n    if (!event.error) {\n      this._collectIds(event.definitions, event.elementsById);\n    }\n  }, this);\n\n  this.on('diagram.destroy', function() {\n    this.get('moddle').ids.clear();\n  }, this);\n}\n\ninherits(BaseModeler, BaseViewer);\n\n\n/**\n * Create a moddle instance, attaching ids to it.\n *\n * @param {Object} options\n */\nBaseModeler.prototype._createModdle = function(options) {\n  var moddle = BaseViewer.prototype._createModdle.call(this, options);\n\n  // attach ids to moddle to be able to track\n  // and validated ids in the BPMN 2.0 XML document\n  // tree\n  moddle.ids = new Ids([ 32, 36, 1 ]);\n\n  return moddle;\n};\n\n/**\n * Collect ids processed during parsing of the\n * definitions object.\n *\n * @param {ModdleElement} definitions\n * @param {Context} context\n */\nBaseModeler.prototype._collectIds = function(definitions, elementsById) {\n\n  var moddle = definitions.$model,\n      ids = moddle.ids,\n      id;\n\n  // remove references from previous import\n  ids.clear();\n\n  for (id in elementsById) {\n    ids.claim(id, elementsById[id]);\n  }\n};\n","/**\n * The code in the <project-logo></project-logo> area\n * must not be changed.\n *\n * @see http://bpmn.io/license for more information.\n */\nimport {\n  assign,\n  find,\n  isNumber,\n  omit\n} from 'min-dash';\n\nimport {\n  domify,\n  query as domQuery,\n  remove as domRemove\n} from 'min-dom';\n\nimport {\n  innerSVG\n} from 'tiny-svg';\n\nimport Diagram from 'diagram-js';\nimport BpmnModdle from 'bpmn-moddle';\n\nimport inherits from 'inherits';\n\nimport {\n  importBpmnDiagram\n} from './import/Importer';\n\nimport {\n  wrapForCompatibility\n} from './util/CompatibilityUtil';\n\n/**\n * A base viewer for BPMN 2.0 diagrams.\n *\n * Have a look at {@link Viewer}, {@link NavigatedViewer} or {@link Modeler} for\n * bundles that include actual features.\n *\n * @param {Object} [options] configuration options to pass to the viewer\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\n * @param {string|number} [options.width] the width of the viewer\n * @param {string|number} [options.height] the height of the viewer\n * @param {Object} [options.moddleExtensions] extension packages to provide\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\n */\nexport default function BaseViewer(options) {\n\n  options = assign({}, DEFAULT_OPTIONS, options);\n\n  this._moddle = this._createModdle(options);\n\n  this._container = this._createContainer(options);\n\n  /* <project-logo> */\n\n  addProjectLogo(this._container);\n\n  /* </project-logo> */\n\n  this._init(this._container, this._moddle, options);\n}\n\ninherits(BaseViewer, Diagram);\n\n/**\n* The importXML result.\n*\n* @typedef {Object} ImportXMLResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The importXML error.\n*\n* @typedef {Error} ImportXMLError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Parse and render a BPMN 2.0 diagram.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During import the viewer will fire life-cycle events:\n *\n *   * import.parse.start (about to read model from xml)\n *   * import.parse.complete (model read; may have worked or not)\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *   * import.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {string} xml the BPMN 2.0 xml\n * @param {ModdleElement<BPMNDiagram>|string} [bpmnDiagram] BPMN diagram or id of diagram to render (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportXMLResult, ImportXMLError>}\n */\nBaseViewer.prototype.importXML = wrapForCompatibility(function importXML(xml, bpmnDiagram) {\n\n  var self = this;\n\n  function ParseCompleteEvent(data) {\n\n    var event = self.get('eventBus').createEvent(data);\n\n    // TODO(nikku): remove with future bpmn-js version\n    Object.defineProperty(event, 'context', {\n      enumerable: true,\n      get: function() {\n\n        console.warn(new Error(\n          'import.parse.complete <context> is deprecated ' +\n          'and will be removed in future library versions'\n        ));\n\n        return {\n          warnings: data.warnings,\n          references: data.references,\n          elementsById: data.elementsById\n        };\n      }\n    });\n\n    return event;\n  }\n\n  return new Promise(function(resolve, reject) {\n\n    // hook in pre-parse listeners +\n    // allow xml manipulation\n    xml = self._emit('import.parse.start', { xml: xml }) || xml;\n\n    self._moddle.fromXML(xml, 'bpmn:Definitions').then(function(result) {\n      var definitions = result.rootElement;\n      var references = result.references;\n      var parseWarnings = result.warnings;\n      var elementsById = result.elementsById;\n\n      // hook in post parse listeners +\n      // allow definitions manipulation\n      definitions = self._emit('import.parse.complete', ParseCompleteEvent({\n        error: null,\n        definitions: definitions,\n        elementsById: elementsById,\n        references: references,\n        warnings: parseWarnings\n      })) || definitions;\n\n      self.importDefinitions(definitions, bpmnDiagram).then(function(result) {\n        var allWarnings = [].concat(parseWarnings, result.warnings || []);\n\n        self._emit('import.done', { error: null, warnings: allWarnings });\n\n        return resolve({ warnings: allWarnings });\n      }).catch(function(err) {\n        var allWarnings = [].concat(parseWarnings, err.warnings || []);\n\n        self._emit('import.done', { error: err, warnings: allWarnings });\n\n        return reject(addWarningsToError(err, allWarnings));\n      });\n    }).catch(function(err) {\n\n      self._emit('import.parse.complete', {\n        error: err\n      });\n\n      err = checkValidationError(err);\n\n      self._emit('import.done', { error: err, warnings: err.warnings });\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n* The importDefinitions result.\n*\n* @typedef {Object} ImportDefinitionsResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The importDefinitions error.\n*\n* @typedef {Error} ImportDefinitionsError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Import parsed definitions and render a BPMN 2.0 diagram.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During import the viewer will fire life-cycle events:\n *\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {ModdleElement<Definitions>} definitions parsed BPMN 2.0 definitions\n * @param {ModdleElement<BPMNDiagram>|string} [bpmnDiagram] BPMN diagram or id of diagram to render (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportDefinitionsResult, ImportDefinitionsError>}\n */\nBaseViewer.prototype.importDefinitions = wrapForCompatibility(function importDefinitions(definitions, bpmnDiagram) {\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n\n    self._setDefinitions(definitions);\n\n    self.open(bpmnDiagram).then(function(result) {\n\n      var warnings = result.warnings;\n\n      return resolve({ warnings: warnings });\n    }).catch(function(err) {\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The open result.\n *\n * @typedef {Object} OpenResult\n *\n * @property {Array<string>} warnings\n */\n\n/**\n* The open error.\n*\n* @typedef {Error} OpenError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Open diagram of previously imported XML.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During switch the viewer will fire life-cycle events:\n *\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {string|ModdleElement<BPMNDiagram>} [bpmnDiagramOrId] id or the diagram to open\n *\n * Returns {Promise<OpenResult, OpenError>}\n */\nBaseViewer.prototype.open = wrapForCompatibility(function open(bpmnDiagramOrId) {\n\n  var definitions = this._definitions;\n  var bpmnDiagram = bpmnDiagramOrId;\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n    if (!definitions) {\n      var err1 = new Error('no XML imported');\n\n      return reject(addWarningsToError(err1, []));\n    }\n\n    if (typeof bpmnDiagramOrId === 'string') {\n      bpmnDiagram = findBPMNDiagram(definitions, bpmnDiagramOrId);\n\n      if (!bpmnDiagram) {\n        var err2 = new Error('BPMNDiagram <' + bpmnDiagramOrId + '> not found');\n\n        return reject(addWarningsToError(err2, []));\n      }\n    }\n\n    // clear existing rendered diagram\n    // catch synchronous exceptions during #clear()\n    try {\n      self.clear();\n    } catch (error) {\n\n      return reject(addWarningsToError(error, []));\n    }\n\n    // perform graphical import\n    importBpmnDiagram(self, definitions, bpmnDiagram).then(function(result) {\n\n      var warnings = result.warnings;\n\n      return resolve({ warnings: warnings });\n    }).catch(function(err) {\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The saveXML result.\n *\n * @typedef {Object} SaveXMLResult\n *\n * @property {string} xml\n */\n\n/**\n * Export the currently displayed BPMN 2.0 diagram as\n * a BPMN 2.0 XML document.\n *\n * ## Life-Cycle Events\n *\n * During XML saving the viewer will fire life-cycle events:\n *\n *   * saveXML.start (before serialization)\n *   * saveXML.serialized (after xml generation)\n *   * saveXML.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {Object} [options] export options\n * @param {boolean} [options.format=false] output formatted XML\n * @param {boolean} [options.preamble=true] output preamble\n *\n * Returns {Promise<SaveXMLResult, Error>}\n */\nBaseViewer.prototype.saveXML = wrapForCompatibility(function saveXML(options) {\n\n  options = options || {};\n\n  var self = this;\n\n  var definitions = this._definitions;\n\n  return new Promise(function(resolve) {\n\n    if (!definitions) {\n      return resolve({\n        error: new Error('no definitions loaded')\n      });\n    }\n\n    // allow to fiddle around with definitions\n    definitions = self._emit('saveXML.start', {\n      definitions: definitions\n    }) || definitions;\n\n    self._moddle.toXML(definitions, options).then(function(result) {\n\n      var xml = result.xml;\n\n      xml = self._emit('saveXML.serialized', {\n        xml: xml\n      }) || xml;\n\n      return resolve({\n        xml: xml\n      });\n    });\n  }).catch(function(error) {\n    return { error: error };\n  }).then(function(result) {\n\n    self._emit('saveXML.done', result);\n\n    var error = result.error;\n\n    if (error) {\n      return Promise.reject(error);\n    }\n\n    return result;\n  });\n});\n\n/**\n * The saveSVG result.\n *\n * @typedef {Object} SaveSVGResult\n *\n * @property {string} svg\n */\n\n/**\n * Export the currently displayed BPMN 2.0 diagram as\n * an SVG image.\n *\n * ## Life-Cycle Events\n *\n * During SVG saving the viewer will fire life-cycle events:\n *\n *   * saveSVG.start (before serialization)\n *   * saveSVG.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {Object} [options]\n *\n * Returns {Promise<SaveSVGResult, Error>}\n */\nBaseViewer.prototype.saveSVG = wrapForCompatibility(function saveSVG(options) {\n\n  options = options || {};\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n\n    self._emit('saveSVG.start');\n\n    var svg, err;\n\n    try {\n      var canvas = self.get('canvas');\n\n      var contentNode = canvas.getActiveLayer(),\n          defsNode = domQuery('defs', canvas._svg);\n\n      var contents = innerSVG(contentNode),\n          defs = defsNode ? '<defs>' + innerSVG(defsNode) + '</defs>' : '';\n\n      var bbox = contentNode.getBBox();\n\n      svg =\n        '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n        '<!-- created with bpmn-js / http://bpmn.io -->\\n' +\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' +\n             'width=\"' + bbox.width + '\" height=\"' + bbox.height + '\" ' +\n             'viewBox=\"' + bbox.x + ' ' + bbox.y + ' ' + bbox.width + ' ' + bbox.height + '\" version=\"1.1\">' +\n          defs + contents +\n        '</svg>';\n    } catch (e) {\n      err = e;\n    }\n\n    self._emit('saveSVG.done', {\n      error: err,\n      svg: svg\n    });\n\n    if (!err) {\n      return resolve({ svg: svg });\n    }\n\n    return reject(err);\n  });\n});\n\n/**\n * Get a named diagram service.\n *\n * @example\n *\n * var elementRegistry = viewer.get('elementRegistry');\n * var startEventShape = elementRegistry.get('StartEvent_1');\n *\n * @param {string} name\n *\n * @return {Object} diagram service instance\n *\n * @method BaseViewer#get\n */\n\n/**\n * Invoke a function in the context of this viewer.\n *\n * @example\n *\n * viewer.invoke(function(elementRegistry) {\n *   var startEventShape = elementRegistry.get('StartEvent_1');\n * });\n *\n * @param {Function} fn to be invoked\n *\n * @return {Object} the functions return value\n *\n * @method BaseViewer#invoke\n */\n\n\nBaseViewer.prototype._setDefinitions = function(definitions) {\n  this._definitions = definitions;\n};\n\nBaseViewer.prototype.getModules = function() {\n  return this._modules;\n};\n\n/**\n * Remove all drawn elements from the viewer.\n *\n * After calling this method the viewer can still\n * be reused for opening another diagram.\n *\n * @method BaseViewer#clear\n */\nBaseViewer.prototype.clear = function() {\n  if (!this.getDefinitions()) {\n\n    // no diagram to clear\n    return;\n  }\n\n  // remove drawn elements\n  Diagram.prototype.clear.call(this);\n};\n\n/**\n * Destroy the viewer instance and remove all its\n * remainders from the document tree.\n */\nBaseViewer.prototype.destroy = function() {\n\n  // diagram destroy\n  Diagram.prototype.destroy.call(this);\n\n  // dom detach\n  domRemove(this._container);\n};\n\n/**\n * Register an event listener\n *\n * Remove a previously added listener via {@link #off(event, callback)}.\n *\n * @param {string} event\n * @param {number} [priority]\n * @param {Function} callback\n * @param {Object} [that]\n */\nBaseViewer.prototype.on = function(event, priority, callback, target) {\n  return this.get('eventBus').on(event, priority, callback, target);\n};\n\n/**\n * De-register an event listener\n *\n * @param {string} event\n * @param {Function} callback\n */\nBaseViewer.prototype.off = function(event, callback) {\n  this.get('eventBus').off(event, callback);\n};\n\nBaseViewer.prototype.attachTo = function(parentNode) {\n\n  if (!parentNode) {\n    throw new Error('parentNode required');\n  }\n\n  // ensure we detach from the\n  // previous, old parent\n  this.detach();\n\n  // unwrap jQuery if provided\n  if (parentNode.get && parentNode.constructor.prototype.jquery) {\n    parentNode = parentNode.get(0);\n  }\n\n  if (typeof parentNode === 'string') {\n    parentNode = domQuery(parentNode);\n  }\n\n  parentNode.appendChild(this._container);\n\n  this._emit('attach', {});\n\n  this.get('canvas').resized();\n};\n\nBaseViewer.prototype.getDefinitions = function() {\n  return this._definitions;\n};\n\nBaseViewer.prototype.detach = function() {\n\n  var container = this._container,\n      parentNode = container.parentNode;\n\n  if (!parentNode) {\n    return;\n  }\n\n  this._emit('detach', {});\n\n  parentNode.removeChild(container);\n};\n\nBaseViewer.prototype._init = function(container, moddle, options) {\n\n  var baseModules = options.modules || this.getModules(),\n      additionalModules = options.additionalModules || [],\n      staticModules = [\n        {\n          bpmnjs: [ 'value', this ],\n          moddle: [ 'value', moddle ]\n        }\n      ];\n\n  var diagramModules = [].concat(staticModules, baseModules, additionalModules);\n\n  var diagramOptions = assign(omit(options, [ 'additionalModules' ]), {\n    canvas: assign({}, options.canvas, { container: container }),\n    modules: diagramModules\n  });\n\n  // invoke diagram constructor\n  Diagram.call(this, diagramOptions);\n\n  if (options && options.container) {\n    this.attachTo(options.container);\n  }\n};\n\n/**\n * Emit an event on the underlying {@link EventBus}\n *\n * @param  {string} type\n * @param  {Object} event\n *\n * @return {Object} event processing result (if any)\n */\nBaseViewer.prototype._emit = function(type, event) {\n  return this.get('eventBus').fire(type, event);\n};\n\nBaseViewer.prototype._createContainer = function(options) {\n\n  var container = domify('<div class=\"bjs-container\"></div>');\n\n  assign(container.style, {\n    width: ensureUnit(options.width),\n    height: ensureUnit(options.height),\n    position: options.position\n  });\n\n  return container;\n};\n\nBaseViewer.prototype._createModdle = function(options) {\n  var moddleOptions = assign({}, this._moddleExtensions, options.moddleExtensions);\n\n  return new BpmnModdle(moddleOptions);\n};\n\nBaseViewer.prototype._modules = [];\n\n// helpers ///////////////\n\nfunction addWarningsToError(err, warningsAry) {\n  err.warnings = warningsAry;\n  return err;\n}\n\nfunction checkValidationError(err) {\n\n  // check if we can help the user by indicating wrong BPMN 2.0 xml\n  // (in case he or the exporting tool did not get that right)\n\n  var pattern = /unparsable content <([^>]+)> detected([\\s\\S]*)$/;\n  var match = pattern.exec(err.message);\n\n  if (match) {\n    err.message =\n      'unparsable content <' + match[1] + '> detected; ' +\n      'this may indicate an invalid BPMN 2.0 diagram file' + match[2];\n  }\n\n  return err;\n}\n\nvar DEFAULT_OPTIONS = {\n  width: '100%',\n  height: '100%',\n  position: 'relative'\n};\n\n\n/**\n * Ensure the passed argument is a proper unit (defaulting to px)\n */\nfunction ensureUnit(val) {\n  return val + (isNumber(val) ? 'px' : '');\n}\n\n\n/**\n * Find BPMNDiagram in definitions by ID\n *\n * @param {ModdleElement<Definitions>} definitions\n * @param {string} diagramId\n *\n * @return {ModdleElement<BPMNDiagram>|null}\n */\nfunction findBPMNDiagram(definitions, diagramId) {\n  if (!diagramId) {\n    return null;\n  }\n\n  return find(definitions.diagrams, function(element) {\n    return element.id === diagramId;\n  }) || null;\n}\n\n\n/* <project-logo> */\n\nimport {\n  open as openPoweredBy,\n  BPMNIO_IMG,\n  LINK_STYLES as BPMNIO_LINK_STYLES\n} from './util/PoweredByUtil';\n\nimport {\n  event as domEvent\n} from 'min-dom';\n\n/**\n * Adds the project logo to the diagram container as\n * required by the bpmn.io license.\n *\n * @see http://bpmn.io/license\n *\n * @param {Element} container\n */\nfunction addProjectLogo(container) {\n  var img = BPMNIO_IMG;\n\n  var linkMarkup =\n    '<a href=\"http://bpmn.io\" ' +\n       'target=\"_blank\" ' +\n       'class=\"bjs-powered-by\" ' +\n       'title=\"Powered by bpmn.io\" ' +\n       'style=\"position: absolute; bottom: 15px; right: 15px; z-index: 100; ' + BPMNIO_LINK_STYLES + '\">' +\n      img +\n    '</a>';\n\n  var linkElement = domify(linkMarkup);\n\n  container.appendChild(linkElement);\n\n  domEvent.bind(linkElement, 'click', function(event) {\n    openPoweredBy();\n\n    event.preventDefault();\n  });\n}\n\n/* </project-logo> */\n","import inherits from 'inherits';\n\nimport BaseModeler from './BaseModeler';\n\nimport Viewer from './Viewer';\nimport NavigatedViewer from './NavigatedViewer';\n\nimport KeyboardMoveModule from 'diagram-js/lib/navigation/keyboard-move';\nimport MoveCanvasModule from 'diagram-js/lib/navigation/movecanvas';\nimport TouchModule from 'diagram-js/lib/navigation/touch';\nimport ZoomScrollModule from 'diagram-js/lib/navigation/zoomscroll';\n\nimport AlignElementsModule from 'diagram-js/lib/features/align-elements';\nimport AutoPlaceModule from './features/auto-place';\nimport AutoResizeModule from './features/auto-resize';\nimport AutoScrollModule from 'diagram-js/lib/features/auto-scroll';\nimport BendpointsModule from 'diagram-js/lib/features/bendpoints';\nimport ConnectModule from 'diagram-js/lib/features/connect';\nimport ConnectionPreviewModule from 'diagram-js/lib/features/connection-preview';\nimport ContextPadModule from './features/context-pad';\nimport CopyPasteModule from './features/copy-paste';\nimport CreateModule from 'diagram-js/lib/features/create';\nimport DistributeElementsModule from './features/distribute-elements';\nimport EditorActionsModule from './features/editor-actions';\nimport GridSnappingModule from './features/grid-snapping';\nimport InteractionEventsModule from './features/interaction-events';\nimport KeyboardModule from './features/keyboard';\nimport KeyboardMoveSelectionModule from 'diagram-js/lib/features/keyboard-move-selection';\nimport LabelEditingModule from './features/label-editing';\nimport ModelingModule from './features/modeling';\nimport MoveModule from 'diagram-js/lib/features/move';\nimport PaletteModule from './features/palette';\nimport ReplacePreviewModule from './features/replace-preview';\nimport ResizeModule from 'diagram-js/lib/features/resize';\nimport SnappingModule from './features/snapping';\nimport SearchModule from './features/search';\n\nimport {\n  wrapForCompatibility\n} from './util/CompatibilityUtil';\n\nvar initialDiagram =\n  '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' +\n  '<bpmn:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' +\n                    'xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" ' +\n                    'xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" ' +\n                    'xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" ' +\n                    'targetNamespace=\"http://bpmn.io/schema/bpmn\" ' +\n                    'id=\"Definitions_1\">' +\n    '<bpmn:process id=\"Process_1\" isExecutable=\"false\">' +\n      '<bpmn:startEvent id=\"StartEvent_1\"/>' +\n    '</bpmn:process>' +\n    '<bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">' +\n      '<bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">' +\n        '<bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">' +\n          '<dc:Bounds height=\"36.0\" width=\"36.0\" x=\"173.0\" y=\"102.0\"/>' +\n        '</bpmndi:BPMNShape>' +\n      '</bpmndi:BPMNPlane>' +\n    '</bpmndi:BPMNDiagram>' +\n  '</bpmn:definitions>';\n\n\n/**\n * A modeler for BPMN 2.0 diagrams.\n *\n *\n * ## Extending the Modeler\n *\n * In order to extend the viewer pass extension modules to bootstrap via the\n * `additionalModules` option. An extension module is an object that exposes\n * named services.\n *\n * The following example depicts the integration of a simple\n * logging component that integrates with interaction events:\n *\n *\n * ```javascript\n *\n * // logging component\n * function InteractionLogger(eventBus) {\n *   eventBus.on('element.hover', function(event) {\n *     console.log()\n *   })\n * }\n *\n * InteractionLogger.$inject = [ 'eventBus' ]; // minification save\n *\n * // extension module\n * var extensionModule = {\n *   __init__: [ 'interactionLogger' ],\n *   interactionLogger: [ 'type', InteractionLogger ]\n * };\n *\n * // extend the viewer\n * var bpmnModeler = new Modeler({ additionalModules: [ extensionModule ] });\n * bpmnModeler.importXML(...);\n * ```\n *\n *\n * ## Customizing / Replacing Components\n *\n * You can replace individual diagram components by redefining them in override modules.\n * This works for all components, including those defined in the core.\n *\n * Pass in override modules via the `options.additionalModules` flag like this:\n *\n * ```javascript\n * function CustomContextPadProvider(contextPad) {\n *\n *   contextPad.registerProvider(this);\n *\n *   this.getContextPadEntries = function(element) {\n *     // no entries, effectively disable the context pad\n *     return {};\n *   };\n * }\n *\n * CustomContextPadProvider.$inject = [ 'contextPad' ];\n *\n * var overrideModule = {\n *   contextPadProvider: [ 'type', CustomContextPadProvider ]\n * };\n *\n * var bpmnModeler = new Modeler({ additionalModules: [ overrideModule ]});\n * ```\n *\n * @param {Object} [options] configuration options to pass to the viewer\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\n * @param {string|number} [options.width] the width of the viewer\n * @param {string|number} [options.height] the height of the viewer\n * @param {Object} [options.moddleExtensions] extension packages to provide\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\n */\nexport default function Modeler(options) {\n  BaseModeler.call(this, options);\n}\n\ninherits(Modeler, BaseModeler);\n\n\nModeler.Viewer = Viewer;\nModeler.NavigatedViewer = NavigatedViewer;\n\n/**\n* The createDiagram result.\n*\n* @typedef {Object} CreateDiagramResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The createDiagram error.\n*\n* @typedef {Error} CreateDiagramError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Create a new diagram to start modeling.\n *\n * Returns {Promise<CreateDiagramResult, CreateDiagramError>}\n */\nModeler.prototype.createDiagram = wrapForCompatibility(function createDiagram() {\n  return this.importXML(initialDiagram);\n});\n\n\nModeler.prototype._interactionModules = [\n\n  // non-modeling components\n  KeyboardMoveModule,\n  MoveCanvasModule,\n  TouchModule,\n  ZoomScrollModule\n];\n\nModeler.prototype._modelingModules = [\n\n  // modeling components\n  AlignElementsModule,\n  AutoPlaceModule,\n  AutoScrollModule,\n  AutoResizeModule,\n  BendpointsModule,\n  ConnectModule,\n  ConnectionPreviewModule,\n  ContextPadModule,\n  CopyPasteModule,\n  CreateModule,\n  DistributeElementsModule,\n  EditorActionsModule,\n  GridSnappingModule,\n  InteractionEventsModule,\n  KeyboardModule,\n  KeyboardMoveSelectionModule,\n  LabelEditingModule,\n  ModelingModule,\n  MoveModule,\n  PaletteModule,\n  ReplacePreviewModule,\n  ResizeModule,\n  SnappingModule,\n  SearchModule\n];\n\n\n// modules the modeler is composed of\n//\n// - viewer modules\n// - interaction modules\n// - modeling modules\n\nModeler.prototype._modules = [].concat(\n  Viewer.prototype._modules,\n  Modeler.prototype._interactionModules,\n  Modeler.prototype._modelingModules\n);\n","import inherits from 'inherits';\n\nimport Viewer from './Viewer';\n\nimport KeyboardMoveModule from 'diagram-js/lib/navigation/keyboard-move';\nimport MoveCanvasModule from 'diagram-js/lib/navigation/movecanvas';\nimport ZoomScrollModule from 'diagram-js/lib/navigation/zoomscroll';\n\n\n/**\n * A viewer that includes mouse navigation facilities\n *\n * @param {Object} options\n */\nexport default function NavigatedViewer(options) {\n  Viewer.call(this, options);\n}\n\ninherits(NavigatedViewer, Viewer);\n\n\nNavigatedViewer.prototype._navigationModules = [\n  KeyboardMoveModule,\n  MoveCanvasModule,\n  ZoomScrollModule\n];\n\nNavigatedViewer.prototype._modules = [].concat(\n  Viewer.prototype._modules,\n  NavigatedViewer.prototype._navigationModules\n);","import inherits from 'inherits';\n\nimport CoreModule from './core';\nimport TranslateModule from 'diagram-js/lib/i18n/translate';\nimport SelectionModule from 'diagram-js/lib/features/selection';\nimport OverlaysModule from 'diagram-js/lib/features/overlays';\nimport DrilldownModdule from './features/drilldown';\n\nimport BaseViewer from './BaseViewer';\n\n\n/**\n * A viewer for BPMN 2.0 diagrams.\n *\n * Have a look at {@link NavigatedViewer} or {@link Modeler} for bundles that include\n * additional features.\n *\n *\n * ## Extending the Viewer\n *\n * In order to extend the viewer pass extension modules to bootstrap via the\n * `additionalModules` option. An extension module is an object that exposes\n * named services.\n *\n * The following example depicts the integration of a simple\n * logging component that integrates with interaction events:\n *\n *\n * ```javascript\n *\n * // logging component\n * function InteractionLogger(eventBus) {\n *   eventBus.on('element.hover', function(event) {\n *     console.log()\n *   })\n * }\n *\n * InteractionLogger.$inject = [ 'eventBus' ]; // minification save\n *\n * // extension module\n * var extensionModule = {\n *   __init__: [ 'interactionLogger' ],\n *   interactionLogger: [ 'type', InteractionLogger ]\n * };\n *\n * // extend the viewer\n * var bpmnViewer = new Viewer({ additionalModules: [ extensionModule ] });\n * bpmnViewer.importXML(...);\n * ```\n *\n * @param {Object} [options] configuration options to pass to the viewer\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\n * @param {string|number} [options.width] the width of the viewer\n * @param {string|number} [options.height] the height of the viewer\n * @param {Object} [options.moddleExtensions] extension packages to provide\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\n */\nexport default function Viewer(options) {\n  BaseViewer.call(this, options);\n}\n\ninherits(Viewer, BaseViewer);\n\n// modules the viewer is composed of\nViewer.prototype._modules = [\n  CoreModule,\n  TranslateModule,\n  SelectionModule,\n  OverlaysModule,\n  DrilldownModdule\n];\n\n// default moddle extensions the viewer is composed of\nViewer.prototype._moddleExtensions = {};","import DrawModule from '../draw';\nimport ImportModule from '../import';\n\nexport default {\n  __depends__: [\n    DrawModule,\n    ImportModule\n  ]\n};","import {\n  every,\n  some\n} from 'min-dash';\n\nimport {\n  getDi\n} from '../util/ModelUtil';\n\nimport {\n  componentsToPath\n} from 'diagram-js/lib/util/RenderUtil';\n\n// re-export getDi for compatibility\nexport { getDi };\n\n// element utils //////////////////////\n\n/**\n * Checks if eventDefinition of the given element matches with semantic type.\n *\n * @return {boolean} true if element is of the given semantic type\n */\nexport function isTypedEvent(event, eventDefinitionType, filter) {\n\n  function matches(definition, filter) {\n    return every(filter, function(val, key) {\n\n      // we want a == conversion here, to be able to catch\n      // undefined == false and friends\n      /* jshint -W116 */\n      return definition[key] == val;\n    });\n  }\n\n  return some(event.eventDefinitions, function(definition) {\n    return definition.$type === eventDefinitionType && matches(event, filter);\n  });\n}\n\nexport function isThrowEvent(event) {\n  return (event.$type === 'bpmn:IntermediateThrowEvent') || (event.$type === 'bpmn:EndEvent');\n}\n\nexport function isCollection(element) {\n  var dataObject = element.dataObjectRef;\n\n  return element.isCollection || (dataObject && dataObject.isCollection);\n}\n\nexport function getSemantic(element) {\n  return element.businessObject;\n}\n\n\n// color access //////////////////////\n\nexport function getFillColor(element, defaultColor) {\n  var di = getDi(element);\n\n  return di.get('color:background-color') || di.get('bioc:fill') || defaultColor || 'white';\n}\n\nexport function getStrokeColor(element, defaultColor) {\n  var di = getDi(element);\n\n  return di.get('color:border-color') || di.get('bioc:stroke') || defaultColor || 'black';\n}\n\nexport function getLabelColor(element, defaultColor, defaultStrokeColor) {\n  var di = getDi(element),\n      label = di.get('label');\n\n  return label && label.get('color:color') || defaultColor ||\n    getStrokeColor(element, defaultStrokeColor);\n}\n\n// cropping path customizations //////////////////////\n\nexport function getCirclePath(shape) {\n\n  var cx = shape.x + shape.width / 2,\n      cy = shape.y + shape.height / 2,\n      radius = shape.width / 2;\n\n  var circlePath = [\n    ['M', cx, cy],\n    ['m', 0, -radius],\n    ['a', radius, radius, 0, 1, 1, 0, 2 * radius],\n    ['a', radius, radius, 0, 1, 1, 0, -2 * radius],\n    ['z']\n  ];\n\n  return componentsToPath(circlePath);\n}\n\nexport function getRoundRectPath(shape, borderRadius) {\n\n  var x = shape.x,\n      y = shape.y,\n      width = shape.width,\n      height = shape.height;\n\n  var roundRectPath = [\n    ['M', x + borderRadius, y],\n    ['l', width - borderRadius * 2, 0],\n    ['a', borderRadius, borderRadius, 0, 0, 1, borderRadius, borderRadius],\n    ['l', 0, height - borderRadius * 2],\n    ['a', borderRadius, borderRadius, 0, 0, 1, -borderRadius, borderRadius],\n    ['l', borderRadius * 2 - width, 0],\n    ['a', borderRadius, borderRadius, 0, 0, 1, -borderRadius, -borderRadius],\n    ['l', 0, borderRadius * 2 - height],\n    ['a', borderRadius, borderRadius, 0, 0, 1, borderRadius, -borderRadius],\n    ['z']\n  ];\n\n  return componentsToPath(roundRectPath);\n}\n\nexport function getDiamondPath(shape) {\n\n  var width = shape.width,\n      height = shape.height,\n      x = shape.x,\n      y = shape.y,\n      halfWidth = width / 2,\n      halfHeight = height / 2;\n\n  var diamondPath = [\n    ['M', x + halfWidth, y],\n    ['l', halfWidth, halfHeight],\n    ['l', -halfWidth, halfHeight],\n    ['l', -halfWidth, -halfHeight],\n    ['z']\n  ];\n\n  return componentsToPath(diamondPath);\n}\n\nexport function getRectPath(shape) {\n  var x = shape.x,\n      y = shape.y,\n      width = shape.width,\n      height = shape.height;\n\n  var rectPath = [\n    ['M', x, y],\n    ['l', width, 0],\n    ['l', 0, height],\n    ['l', -width, 0],\n    ['z']\n  ];\n\n  return componentsToPath(rectPath);\n}","import inherits from 'inherits';\n\nimport {\n  isObject,\n  assign,\n  forEach\n} from 'min-dash';\n\nimport BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\n\nimport {\n  isExpanded,\n  isEventSubProcess\n} from '../util/DiUtil';\n\nimport {\n  getLabel\n} from '../features/label-editing/LabelUtil';\n\nimport { is } from '../util/ModelUtil';\n\nimport {\n  createLine\n} from 'diagram-js/lib/util/RenderUtil';\n\nimport {\n  isTypedEvent,\n  isThrowEvent,\n  isCollection,\n  getDi,\n  getSemantic,\n  getCirclePath,\n  getRoundRectPath,\n  getDiamondPath,\n  getRectPath,\n  getFillColor,\n  getStrokeColor,\n  getLabelColor\n} from './BpmnRenderUtil';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  classes as svgClasses\n} from 'tiny-svg';\n\nimport {\n  rotate,\n  transform,\n  translate\n} from 'diagram-js/lib/util/SvgTransformUtil';\n\nimport Ids from 'ids';\n\nvar RENDERER_IDS = new Ids();\n\nvar TASK_BORDER_RADIUS = 10;\nvar INNER_OUTER_DIST = 3;\n\nvar DEFAULT_FILL_OPACITY = .95,\n    HIGH_FILL_OPACITY = .35;\n\nvar ELEMENT_LABEL_DISTANCE = 10;\n\nexport default function BpmnRenderer(\n    config, eventBus, styles, pathMap,\n    canvas, textRenderer, priority) {\n\n  BaseRenderer.call(this, eventBus, priority);\n\n  var defaultFillColor = config && config.defaultFillColor,\n      defaultStrokeColor = config && config.defaultStrokeColor,\n      defaultLabelColor = config && config.defaultLabelColor;\n\n  var rendererId = RENDERER_IDS.next();\n\n  var markers = {};\n\n  var computeStyle = styles.computeStyle;\n\n  function addMarker(id, options) {\n    var attrs = assign({\n      fill: 'black',\n      strokeWidth: 1,\n      strokeLinecap: 'round',\n      strokeDasharray: 'none'\n    }, options.attrs);\n\n    var ref = options.ref || { x: 0, y: 0 };\n\n    var scale = options.scale || 1;\n\n    // fix for safari / chrome / firefox bug not correctly\n    // resetting stroke dash array\n    if (attrs.strokeDasharray === 'none') {\n      attrs.strokeDasharray = [10000, 1];\n    }\n\n    var marker = svgCreate('marker');\n\n    svgAttr(options.element, attrs);\n\n    svgAppend(marker, options.element);\n\n    svgAttr(marker, {\n      id: id,\n      viewBox: '0 0 20 20',\n      refX: ref.x,\n      refY: ref.y,\n      markerWidth: 20 * scale,\n      markerHeight: 20 * scale,\n      orient: 'auto'\n    });\n\n    var defs = domQuery('defs', canvas._svg);\n\n    if (!defs) {\n      defs = svgCreate('defs');\n\n      svgAppend(canvas._svg, defs);\n    }\n\n    svgAppend(defs, marker);\n\n    markers[id] = marker;\n  }\n\n  function colorEscape(str) {\n\n    // only allow characters and numbers\n    return str.replace(/[^0-9a-zA-z]+/g, '_');\n  }\n\n  function marker(type, fill, stroke) {\n    var id = type + '-' + colorEscape(fill) + '-' + colorEscape(stroke) + '-' + rendererId;\n\n    if (!markers[id]) {\n      createMarker(id, type, fill, stroke);\n    }\n\n    return 'url(#' + id + ')';\n  }\n\n  function createMarker(id, type, fill, stroke) {\n\n    if (type === 'sequenceflow-end') {\n      var sequenceflowEnd = svgCreate('path');\n      svgAttr(sequenceflowEnd, { d: 'M 1 5 L 11 10 L 1 15 Z' });\n\n      addMarker(id, {\n        element: sequenceflowEnd,\n        ref: { x: 11, y: 10 },\n        scale: 0.5,\n        attrs: {\n          fill: stroke,\n          stroke: stroke\n        }\n      });\n    }\n\n    if (type === 'messageflow-start') {\n      var messageflowStart = svgCreate('circle');\n      svgAttr(messageflowStart, { cx: 6, cy: 6, r: 3.5 });\n\n      addMarker(id, {\n        element: messageflowStart,\n        attrs: {\n          fill: fill,\n          stroke: stroke\n        },\n        ref: { x: 6, y: 6 }\n      });\n    }\n\n    if (type === 'messageflow-end') {\n      var messageflowEnd = svgCreate('path');\n      svgAttr(messageflowEnd, { d: 'm 1 5 l 0 -3 l 7 3 l -7 3 z' });\n\n      addMarker(id, {\n        element: messageflowEnd,\n        attrs: {\n          fill: fill,\n          stroke: stroke,\n          strokeLinecap: 'butt'\n        },\n        ref: { x: 8.5, y: 5 }\n      });\n    }\n\n    if (type === 'association-start') {\n      var associationStart = svgCreate('path');\n      svgAttr(associationStart, { d: 'M 11 5 L 1 10 L 11 15' });\n\n      addMarker(id, {\n        element: associationStart,\n        attrs: {\n          fill: 'none',\n          stroke: stroke,\n          strokeWidth: 1.5\n        },\n        ref: { x: 1, y: 10 },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'association-end') {\n      var associationEnd = svgCreate('path');\n      svgAttr(associationEnd, { d: 'M 1 5 L 11 10 L 1 15' });\n\n      addMarker(id, {\n        element: associationEnd,\n        attrs: {\n          fill: 'none',\n          stroke: stroke,\n          strokeWidth: 1.5\n        },\n        ref: { x: 12, y: 10 },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'conditional-flow-marker') {\n      var conditionalflowMarker = svgCreate('path');\n      svgAttr(conditionalflowMarker, { d: 'M 0 10 L 8 6 L 16 10 L 8 14 Z' });\n\n      addMarker(id, {\n        element: conditionalflowMarker,\n        attrs: {\n          fill: fill,\n          stroke: stroke\n        },\n        ref: { x: -1, y: 10 },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'conditional-default-flow-marker') {\n      var conditionaldefaultflowMarker = svgCreate('path');\n      svgAttr(conditionaldefaultflowMarker, { d: 'M 6 4 L 10 16' });\n\n      addMarker(id, {\n        element: conditionaldefaultflowMarker,\n        attrs: {\n          stroke: stroke\n        },\n        ref: { x: 0, y: 10 },\n        scale: 0.5\n      });\n    }\n  }\n\n  function drawCircle(parentGfx, width, height, offset, attrs) {\n\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n\n    offset = offset || 0;\n\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n\n    if (attrs.fill === 'none') {\n      delete attrs.fillOpacity;\n    }\n\n    var cx = width / 2,\n        cy = height / 2;\n\n    var circle = svgCreate('circle');\n    svgAttr(circle, {\n      cx: cx,\n      cy: cy,\n      r: Math.round((width + height) / 4 - offset)\n    });\n    svgAttr(circle, attrs);\n\n    svgAppend(parentGfx, circle);\n\n    return circle;\n  }\n\n  function drawRect(parentGfx, width, height, r, offset, attrs) {\n\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n\n    offset = offset || 0;\n\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n\n    var rect = svgCreate('rect');\n    svgAttr(rect, {\n      x: offset,\n      y: offset,\n      width: width - offset * 2,\n      height: height - offset * 2,\n      rx: r,\n      ry: r\n    });\n    svgAttr(rect, attrs);\n\n    svgAppend(parentGfx, rect);\n\n    return rect;\n  }\n\n  function drawDiamond(parentGfx, width, height, attrs) {\n\n    var x_2 = width / 2;\n    var y_2 = height / 2;\n\n    var points = [{ x: x_2, y: 0 }, { x: width, y: y_2 }, { x: x_2, y: height }, { x: 0, y: y_2 }];\n\n    var pointsString = points.map(function(point) {\n      return point.x + ',' + point.y;\n    }).join(' ');\n\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n\n    var polygon = svgCreate('polygon');\n    svgAttr(polygon, {\n      points: pointsString\n    });\n    svgAttr(polygon, attrs);\n\n    svgAppend(parentGfx, polygon);\n\n    return polygon;\n  }\n\n  function drawLine(parentGfx, waypoints, attrs) {\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'none'\n    });\n\n    var line = createLine(waypoints, attrs);\n\n    svgAppend(parentGfx, line);\n\n    return line;\n  }\n\n  function drawPath(parentGfx, d, attrs) {\n\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\n      strokeWidth: 2,\n      stroke: 'black'\n    });\n\n    var path = svgCreate('path');\n    svgAttr(path, { d: d });\n    svgAttr(path, attrs);\n\n    svgAppend(parentGfx, path);\n\n    return path;\n  }\n\n  function drawMarker(type, parentGfx, path, attrs) {\n    return drawPath(parentGfx, path, assign({ 'data-marker': type }, attrs));\n  }\n\n  function renderer(type) {\n    return handlers[type];\n  }\n\n  function as(type) {\n    return function(parentGfx, element) {\n      return renderer(type)(parentGfx, element);\n    };\n  }\n\n  function renderEventContent(element, parentGfx) {\n\n    var event = getSemantic(element);\n    var isThrowing = isThrowEvent(event);\n\n    if (event.eventDefinitions && event.eventDefinitions.length>1) {\n      if (event.parallelMultiple) {\n        return renderer('bpmn:ParallelMultipleEventDefinition')(parentGfx, element, isThrowing);\n      }\n      else {\n        return renderer('bpmn:MultipleEventDefinition')(parentGfx, element, isThrowing);\n      }\n    }\n\n    if (isTypedEvent(event, 'bpmn:MessageEventDefinition')) {\n      return renderer('bpmn:MessageEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:TimerEventDefinition')) {\n      return renderer('bpmn:TimerEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:ConditionalEventDefinition')) {\n      return renderer('bpmn:ConditionalEventDefinition')(parentGfx, element);\n    }\n\n    if (isTypedEvent(event, 'bpmn:SignalEventDefinition')) {\n      return renderer('bpmn:SignalEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:EscalationEventDefinition')) {\n      return renderer('bpmn:EscalationEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:LinkEventDefinition')) {\n      return renderer('bpmn:LinkEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:ErrorEventDefinition')) {\n      return renderer('bpmn:ErrorEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition')) {\n      return renderer('bpmn:CancelEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CompensateEventDefinition')) {\n      return renderer('bpmn:CompensateEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:TerminateEventDefinition')) {\n      return renderer('bpmn:TerminateEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    return null;\n  }\n\n  function renderLabel(parentGfx, label, options) {\n\n    options = assign({\n      size: {\n        width: 100\n      }\n    }, options);\n\n    var text = textRenderer.createText(label || '', options);\n\n    svgClasses(text).add('djs-label');\n\n    svgAppend(parentGfx, text);\n\n    return text;\n  }\n\n  function renderEmbeddedLabel(parentGfx, element, align) {\n    var semantic = getSemantic(element);\n\n    return renderLabel(parentGfx, semantic.name, {\n      box: element,\n      align: align,\n      padding: 5,\n      style: {\n        fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor)\n      }\n    });\n  }\n\n  function renderExternalLabel(parentGfx, element) {\n\n    var box = {\n      width: 90,\n      height: 30,\n      x: element.width / 2 + element.x,\n      y: element.height / 2 + element.y\n    };\n\n    return renderLabel(parentGfx, getLabel(element), {\n      box: box,\n      fitBox: true,\n      style: assign(\n        {},\n        textRenderer.getExternalStyle(),\n        {\n          fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor)\n        }\n      )\n    });\n  }\n\n  function renderLaneLabel(parentGfx, text, element) {\n    var textBox = renderLabel(parentGfx, text, {\n      box: {\n        height: 30,\n        width: element.height\n      },\n      align: 'center-middle',\n      style: {\n        fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor)\n      }\n    });\n\n    var top = -1 * element.height;\n\n    transform(textBox, 0, -top, 270);\n  }\n\n  function createPathFromConnection(connection) {\n    var waypoints = connection.waypoints;\n\n    var pathData = 'm  ' + waypoints[0].x + ',' + waypoints[0].y;\n    for (var i = 1; i < waypoints.length; i++) {\n      pathData += 'L' + waypoints[i].x + ',' + waypoints[i].y + ' ';\n    }\n    return pathData;\n  }\n\n  var handlers = this.handlers = {\n    'bpmn:Event': function(parentGfx, element, attrs) {\n\n      if (!('fillOpacity' in attrs)) {\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\n      }\n\n      return drawCircle(parentGfx, element.width, element.height, attrs);\n    },\n    'bpmn:StartEvent': function(parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var semantic = getSemantic(element);\n\n      if (!semantic.isInterrupting) {\n        attrs = {\n          strokeDasharray: '6',\n          strokeLinecap: 'round',\n          fill: getFillColor(element, defaultFillColor),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        };\n      }\n\n      var circle = renderer('bpmn:Event')(parentGfx, element, attrs);\n\n      renderEventContent(element, parentGfx);\n\n      return circle;\n    },\n    'bpmn:MessageEventDefinition': function(parentGfx, element, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MESSAGE', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.235,\n          my: 0.315\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(element, defaultStrokeColor) : getFillColor(element, defaultFillColor);\n      var stroke = isThrowing ? getFillColor(element, defaultFillColor) : getStrokeColor(element, defaultStrokeColor);\n\n      var messagePath = drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: stroke\n      });\n\n      return messagePath;\n    },\n    'bpmn:TimerEventDefinition': function(parentGfx, element) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 0.2 * element.height, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var pathData = pathMap.getScaledPath('EVENT_TIMER_WH', {\n        xScaleFactor: 0.75,\n        yScaleFactor: 0.75,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.5,\n          my: 0.5\n        }\n      });\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 2,\n        strokeLinecap: 'square',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      for (var i = 0;i < 12; i++) {\n\n        var linePathData = pathMap.getScaledPath('EVENT_TIMER_LINE', {\n          xScaleFactor: 0.75,\n          yScaleFactor: 0.75,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.5,\n            my: 0.5\n          }\n        });\n\n        var width = element.width / 2;\n        var height = element.height / 2;\n\n        drawPath(parentGfx, linePathData, {\n          strokeWidth: 1,\n          strokeLinecap: 'square',\n          transform: 'rotate(' + (i * 30) + ',' + height + ',' + width + ')',\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n      }\n\n      return circle;\n    },\n    'bpmn:EscalationEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ESCALATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:ConditionalEventDefinition': function(parentGfx, event) {\n      var pathData = pathMap.getScaledPath('EVENT_CONDITIONAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.222\n        }\n      });\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:LinkEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_LINK', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.57,\n          my: 0.263\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:ErrorEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ERROR', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.2,\n          my: 0.722\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:CancelEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_CANCEL_45', {\n        xScaleFactor: 1.0,\n        yScaleFactor: 1.0,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.638,\n          my: -0.055\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      var path = drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n\n      rotate(path, 45);\n\n      return path;\n    },\n    'bpmn:CompensateEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.22,\n          my: 0.5\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:SignalEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_SIGNAL', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:MultipleEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MULTIPLE', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.222,\n          my: 0.36\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill\n      });\n    },\n    'bpmn:ParallelMultipleEventDefinition': function(parentGfx, event) {\n      var pathData = pathMap.getScaledPath('EVENT_PARALLEL_MULTIPLE', {\n        xScaleFactor: 1.2,\n        yScaleFactor: 1.2,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.458,\n          my: 0.194\n        }\n      });\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(event, defaultStrokeColor),\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:EndEvent': function(parentGfx, element) {\n      var circle = renderer('bpmn:Event')(parentGfx, element, {\n        strokeWidth: 4,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      renderEventContent(element, parentGfx, true);\n\n      return circle;\n    },\n    'bpmn:TerminateEventDefinition': function(parentGfx, element) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 8, {\n        strokeWidth: 4,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return circle;\n    },\n    'bpmn:IntermediateEvent': function(parentGfx, element) {\n      var outer = renderer('bpmn:Event')(parentGfx, element, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      /* inner */\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {\n        strokeWidth: 1,\n        fill: getFillColor(element, 'none'),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      renderEventContent(element, parentGfx);\n\n      return outer;\n    },\n    'bpmn:IntermediateCatchEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:IntermediateThrowEvent': as('bpmn:IntermediateEvent'),\n\n    'bpmn:Activity': function(parentGfx, element, attrs) {\n\n      attrs = attrs || {};\n\n      if (!('fillOpacity' in attrs)) {\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\n      }\n\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, attrs);\n    },\n\n    'bpmn:Task': function(parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\n\n      renderEmbeddedLabel(parentGfx, element, 'center-middle');\n      attachTaskMarkers(parentGfx, element);\n\n      return rect;\n    },\n    'bpmn:ServiceTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathDataBG = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 12,\n          y: 18\n        }\n      });\n\n      /* service bg */ drawPath(parentGfx, pathDataBG, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var fillPathData = pathMap.getScaledPath('TASK_TYPE_SERVICE_FILL', {\n        abspos: {\n          x: 17.2,\n          y: 18\n        }\n      });\n\n      /* service fill */ drawPath(parentGfx, fillPathData, {\n        strokeWidth: 0,\n        fill: getFillColor(element, defaultFillColor)\n      });\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 17,\n          y: 22\n        }\n      });\n\n      /* service */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:UserTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var x = 15;\n      var y = 12;\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_USER_1', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 0.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var pathData2 = pathMap.getScaledPath('TASK_TYPE_USER_2', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user2 path */ drawPath(parentGfx, pathData2, {\n        strokeWidth: 0.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var pathData3 = pathMap.getScaledPath('TASK_TYPE_USER_3', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user3 path */ drawPath(parentGfx, pathData3, {\n        strokeWidth: 0.5,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:ManualTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL', {\n        abspos: {\n          x: 17,\n          y: 15\n        }\n      });\n\n      /* manual path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 0.5, // 0.25,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:SendTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: 21,\n        containerHeight: 14,\n        position: {\n          mx: 0.285,\n          my: 0.357\n        }\n      });\n\n      /* send path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getFillColor(element, defaultFillColor)\n      });\n\n      return task;\n    },\n    'bpmn:ReceiveTask' : function(parentGfx, element) {\n      var semantic = getSemantic(element);\n\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData;\n\n      if (semantic.instantiate) {\n        drawCircle(parentGfx, 28, 28, 20 * 0.22, { strokeWidth: 1 });\n\n        pathData = pathMap.getScaledPath('TASK_TYPE_INSTANTIATING_SEND', {\n          abspos: {\n            x: 7.77,\n            y: 9.52\n          }\n        });\n      } else {\n\n        pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n          xScaleFactor: 0.9,\n          yScaleFactor: 0.9,\n          containerWidth: 21,\n          containerHeight: 14,\n          position: {\n            mx: 0.3,\n            my: 0.4\n          }\n        });\n      }\n\n      /* receive path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:ScriptTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT', {\n        abspos: {\n          x: 15,\n          y: 20\n        }\n      });\n\n      /* script path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:BusinessRuleTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_HEADER', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n\n      var businessHeaderPath = drawPath(parentGfx, headerPathData);\n      svgAttr(businessHeaderPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, '#aaaaaa'),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var headerData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_MAIN', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n\n      var businessPath = drawPath(parentGfx, headerData);\n      svgAttr(businessPath, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:SubProcess': function(parentGfx, element, attrs) {\n      attrs = assign({\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs);\n\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\n\n      var expanded = isExpanded(element);\n\n      if (isEventSubProcess(element)) {\n        svgAttr(rect, {\n          strokeDasharray: '1,2'\n        });\n      }\n\n      renderEmbeddedLabel(parentGfx, element, expanded ? 'center-top' : 'center-middle');\n\n      if (expanded) {\n        attachTaskMarkers(parentGfx, element);\n      } else {\n        attachTaskMarkers(parentGfx, element, ['SubProcessMarker']);\n      }\n\n      return rect;\n    },\n    'bpmn:AdHocSubProcess': function(parentGfx, element) {\n      return renderer('bpmn:SubProcess')(parentGfx, element);\n    },\n    'bpmn:Transaction': function(parentGfx, element) {\n      var outer = renderer('bpmn:SubProcess')(parentGfx, element);\n\n      var innerAttrs = styles.style([ 'no-fill', 'no-events' ], {\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      /* inner path */ drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS - 2, INNER_OUTER_DIST, innerAttrs);\n\n      return outer;\n    },\n    'bpmn:CallActivity': function(parentGfx, element) {\n      return renderer('bpmn:SubProcess')(parentGfx, element, {\n        strokeWidth: 5\n      });\n    },\n    'bpmn:Participant': function(parentGfx, element) {\n\n      var attrs = {\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var lane = renderer('bpmn:Lane')(parentGfx, element, attrs);\n\n      var expandedPool = isExpanded(element);\n\n      if (expandedPool) {\n        drawLine(parentGfx, [\n          { x: 30, y: 0 },\n          { x: 30, y: element.height }\n        ], {\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n        var text = getSemantic(element).name;\n        renderLaneLabel(parentGfx, text, element);\n      } else {\n\n        // Collapsed pool draw text inline\n        var text2 = getSemantic(element).name;\n        renderLabel(parentGfx, text2, {\n          box: element, align: 'center-middle',\n          style: {\n            fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor)\n          }\n        });\n      }\n\n      var participantMultiplicity = !!(getSemantic(element).participantMultiplicity);\n\n      if (participantMultiplicity) {\n        renderer('ParticipantMultiplicityMarker')(parentGfx, element);\n      }\n\n      return lane;\n    },\n    'bpmn:Lane': function(parentGfx, element, attrs) {\n      var rect = drawRect(parentGfx, element.width, element.height, 0, assign({\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: HIGH_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs));\n\n      var semantic = getSemantic(element);\n\n      if (semantic.$type === 'bpmn:Lane') {\n        var text = semantic.name;\n        renderLaneLabel(parentGfx, text, element);\n      }\n\n      return rect;\n    },\n    'bpmn:InclusiveGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      /* circle path */\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.24, {\n        strokeWidth: 2.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return diamond;\n    },\n    'bpmn:ExclusiveGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_EXCLUSIVE', {\n        xScaleFactor: 0.4,\n        yScaleFactor: 0.4,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.32,\n          my: 0.3\n        }\n      });\n\n      if ((getDi(element).isMarkerVisible)) {\n        drawPath(parentGfx, pathData, {\n          strokeWidth: 1,\n          fill: getStrokeColor(element, defaultStrokeColor),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n      }\n\n      return diamond;\n    },\n    'bpmn:ComplexGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_COMPLEX', {\n        xScaleFactor: 0.5,\n        yScaleFactor:0.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.26\n        }\n      });\n\n      /* complex path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return diamond;\n    },\n    'bpmn:ParallelGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n        xScaleFactor: 0.6,\n        yScaleFactor:0.6,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.2\n        }\n      });\n\n      /* parallel path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return diamond;\n    },\n    'bpmn:EventBasedGateway': function(parentGfx, element) {\n\n      var semantic = getSemantic(element);\n\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      /* outer circle path */ drawCircle(parentGfx, element.width, element.height, element.height * 0.20, {\n        strokeWidth: 1,\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var type = semantic.eventGatewayType;\n      var instantiate = !!semantic.instantiate;\n\n      function drawEvent() {\n\n        var pathData = pathMap.getScaledPath('GATEWAY_EVENT_BASED', {\n          xScaleFactor: 0.18,\n          yScaleFactor: 0.18,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.36,\n            my: 0.44\n          }\n        });\n\n        var attrs = {\n          strokeWidth: 2,\n          fill: getFillColor(element, 'none'),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        };\n\n        /* event path */ drawPath(parentGfx, pathData, attrs);\n      }\n\n      if (type === 'Parallel') {\n\n        var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n          xScaleFactor: 0.4,\n          yScaleFactor:0.4,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.474,\n            my: 0.296\n          }\n        });\n\n        var parallelPath = drawPath(parentGfx, pathData);\n        svgAttr(parallelPath, {\n          strokeWidth: 1,\n          fill: 'none'\n        });\n      } else if (type === 'Exclusive') {\n\n        if (!instantiate) {\n          var innerCircle = drawCircle(parentGfx, element.width, element.height, element.height * 0.26);\n          svgAttr(innerCircle, {\n            strokeWidth: 1,\n            fill: 'none',\n            stroke: getStrokeColor(element, defaultStrokeColor)\n          });\n        }\n\n        drawEvent();\n      }\n\n\n      return diamond;\n    },\n    'bpmn:Gateway': function(parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      return drawDiamond(parentGfx, element.width, element.height, attrs);\n    },\n    'bpmn:SequenceFlow': function(parentGfx, element) {\n      var pathData = createPathFromConnection(element);\n\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      var attrs = {\n        strokeLinejoin: 'round',\n        markerEnd: marker('sequenceflow-end', fill, stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var path = drawPath(parentGfx, pathData, attrs);\n\n      var sequenceFlow = getSemantic(element);\n\n      var source;\n\n      if (element.source) {\n        source = element.source.businessObject;\n\n        // conditional flow marker\n        if (sequenceFlow.conditionExpression && source.$instanceOf('bpmn:Activity')) {\n          svgAttr(path, {\n            markerStart: marker('conditional-flow-marker', fill, stroke)\n          });\n        }\n\n        // default marker\n        if (source.default && (source.$instanceOf('bpmn:Gateway') || source.$instanceOf('bpmn:Activity')) &&\n            source.default === sequenceFlow) {\n          svgAttr(path, {\n            markerStart: marker('conditional-default-flow-marker', fill, stroke)\n          });\n        }\n      }\n\n      return path;\n    },\n    'bpmn:Association': function(parentGfx, element, attrs) {\n\n      var semantic = getSemantic(element);\n\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      attrs = assign({\n        strokeDasharray: '0.5, 5',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs || {});\n\n      if (semantic.associationDirection === 'One' ||\n          semantic.associationDirection === 'Both') {\n        attrs.markerEnd = marker('association-end', fill, stroke);\n      }\n\n      if (semantic.associationDirection === 'Both') {\n        attrs.markerStart = marker('association-start', fill, stroke);\n      }\n\n      return drawLine(parentGfx, element.waypoints, attrs);\n    },\n    'bpmn:DataInputAssociation': function(parentGfx, element) {\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      return renderer('bpmn:Association')(parentGfx, element, {\n        markerEnd: marker('association-end', fill, stroke)\n      });\n    },\n    'bpmn:DataOutputAssociation': function(parentGfx, element) {\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      return renderer('bpmn:Association')(parentGfx, element, {\n        markerEnd: marker('association-end', fill, stroke)\n      });\n    },\n    'bpmn:MessageFlow': function(parentGfx, element) {\n\n      var semantic = getSemantic(element),\n          di = getDi(element);\n\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      var pathData = createPathFromConnection(element);\n\n      var attrs = {\n        markerEnd: marker('messageflow-end', fill, stroke),\n        markerStart: marker('messageflow-start', fill, stroke),\n        strokeDasharray: '10, 12',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n        strokeWidth: '1.5px',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var path = drawPath(parentGfx, pathData, attrs);\n\n      if (semantic.messageRef) {\n        var midPoint = path.getPointAtLength(path.getTotalLength() / 2);\n\n        var markerPathData = pathMap.getScaledPath('MESSAGE_FLOW_MARKER', {\n          abspos: {\n            x: midPoint.x,\n            y: midPoint.y\n          }\n        });\n\n        var messageAttrs = { strokeWidth: 1 };\n\n        if (di.messageVisibleKind === 'initiating') {\n          messageAttrs.fill = 'white';\n          messageAttrs.stroke = 'black';\n        } else {\n          messageAttrs.fill = '#888';\n          messageAttrs.stroke = 'white';\n        }\n\n        var message = drawPath(parentGfx, markerPathData, messageAttrs);\n\n        var labelText = semantic.messageRef.name;\n        var label = renderLabel(parentGfx, labelText, {\n          align: 'center-top',\n          fitBox: true,\n          style: {\n            fill: getStrokeColor(element, defaultLabelColor, defaultStrokeColor)\n          }\n        });\n\n        var messageBounds = message.getBBox(),\n            labelBounds = label.getBBox();\n\n        var translateX = midPoint.x - labelBounds.width / 2,\n            translateY = midPoint.y + messageBounds.height / 2 + ELEMENT_LABEL_DISTANCE;\n\n        transform(label, translateX, translateY, 0);\n\n      }\n\n      return path;\n    },\n    'bpmn:DataObject': function(parentGfx, element) {\n      var pathData = pathMap.getScaledPath('DATA_OBJECT_PATH', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.474,\n          my: 0.296\n        }\n      });\n\n      var elementObject = drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var semantic = getSemantic(element);\n\n      if (isCollection(semantic)) {\n        renderDataItemCollection(parentGfx, element);\n      }\n\n      return elementObject;\n    },\n    'bpmn:DataObjectReference': as('bpmn:DataObject'),\n    'bpmn:DataInput': function(parentGfx, element) {\n\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n\n      // page\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\n\n      /* input arrow path */ drawPath(parentGfx, arrowPathData, { strokeWidth: 1 });\n\n      return elementObject;\n    },\n    'bpmn:DataOutput': function(parentGfx, element) {\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n\n      // page\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\n\n      /* output arrow path */ drawPath(parentGfx, arrowPathData, {\n        strokeWidth: 1,\n        fill: 'black'\n      });\n\n      return elementObject;\n    },\n    'bpmn:DataStoreReference': function(parentGfx, element) {\n      var DATA_STORE_PATH = pathMap.getScaledPath('DATA_STORE', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0,\n          my: 0.133\n        }\n      });\n\n      var elementStore = drawPath(parentGfx, DATA_STORE_PATH, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return elementStore;\n    },\n    'bpmn:BoundaryEvent': function(parentGfx, element) {\n\n      var semantic = getSemantic(element),\n          cancel = semantic.cancelActivity;\n\n      var attrs = {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      if (!cancel) {\n        attrs.strokeDasharray = '6';\n        attrs.strokeLinecap = 'round';\n      }\n\n      // apply fillOpacity\n      var outerAttrs = assign({}, attrs, {\n        fillOpacity: 1\n      });\n\n      // apply no-fill\n      var innerAttrs = assign({}, attrs, {\n        fill: 'none'\n      });\n\n      var outer = renderer('bpmn:Event')(parentGfx, element, outerAttrs);\n\n      /* inner path */ drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, innerAttrs);\n\n      renderEventContent(element, parentGfx);\n\n      return outer;\n    },\n    'bpmn:Group': function(parentGfx, element) {\n\n      var group = drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, {\n        stroke: getStrokeColor(element, defaultStrokeColor),\n        strokeWidth: 1,\n        strokeDasharray: '8,3,1,3',\n        fill: 'none',\n        pointerEvents: 'none'\n      });\n\n      return group;\n    },\n    'label': function(parentGfx, element) {\n      return renderExternalLabel(parentGfx, element);\n    },\n    'bpmn:TextAnnotation': function(parentGfx, element) {\n      var style = {\n        'fill': 'none',\n        'stroke': 'none'\n      };\n\n      var textElement = drawRect(parentGfx, element.width, element.height, 0, 0, style);\n\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n\n      drawPath(parentGfx, textPathData, {\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var text = getSemantic(element).text || '';\n      renderLabel(parentGfx, text, {\n        box: element,\n        align: 'left-top',\n        padding: 5,\n        style: {\n          fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor)\n        }\n      });\n\n      return textElement;\n    },\n    'ParticipantMultiplicityMarker': function(parentGfx, element) {\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2) / element.width),\n          my: (element.height - 15) / element.height\n        }\n      });\n\n      drawMarker('participant-multiplicity', parentGfx, markerPath, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'SubProcessMarker': function(parentGfx, element) {\n      var markerRect = drawRect(parentGfx, 14, 14, 0, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      // Process marker is placed in the middle of the box\n      // therefore fixed values can be used here\n      translate(markerRect, element.width / 2 - 7.5, element.height - 20);\n\n      var markerPath = pathMap.getScaledPath('MARKER_SUB_PROCESS', {\n        xScaleFactor: 1.5,\n        yScaleFactor: 1.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 - 7.5) / element.width,\n          my: (element.height - 20) / element.height\n        }\n      });\n\n      drawMarker('sub-process', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'ParallelMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.parallel) / element.width),\n          my: (element.height - 20) / element.height\n        }\n      });\n\n      drawMarker('parallel', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'SequentialMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_SEQUENTIAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.seq) / element.width),\n          my: (element.height - 19) / element.height\n        }\n      });\n\n      drawMarker('sequential', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'CompensationMarker': function(parentGfx, element, position) {\n      var markerMath = pathMap.getScaledPath('MARKER_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.compensation) / element.width),\n          my: (element.height - 13) / element.height\n        }\n      });\n\n      drawMarker('compensation', parentGfx, markerMath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'LoopMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_LOOP', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.loop) / element.width),\n          my: (element.height - 7) / element.height\n        }\n      });\n\n      drawMarker('loop', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor),\n        strokeLinecap: 'round',\n        strokeMiterlimit: 0.5\n      });\n    },\n    'AdhocMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_ADHOC', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.adhoc) / element.width),\n          my: (element.height - 15) / element.height\n        }\n      });\n\n      drawMarker('adhoc', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    }\n  };\n\n  function attachTaskMarkers(parentGfx, element, taskMarkers) {\n    var obj = getSemantic(element);\n\n    var subprocess = taskMarkers && taskMarkers.indexOf('SubProcessMarker') !== -1;\n    var position;\n\n    if (subprocess) {\n      position = {\n        seq: -21,\n        parallel: -22,\n        compensation: -42,\n        loop: -18,\n        adhoc: 10\n      };\n    } else {\n      position = {\n        seq: -3,\n        parallel: -6,\n        compensation: -27,\n        loop: 0,\n        adhoc: 10\n      };\n    }\n\n    forEach(taskMarkers, function(marker) {\n      renderer(marker)(parentGfx, element, position);\n    });\n\n    if (obj.isForCompensation) {\n      renderer('CompensationMarker')(parentGfx, element, position);\n    }\n\n    if (obj.$type === 'bpmn:AdHocSubProcess') {\n      renderer('AdhocMarker')(parentGfx, element, position);\n    }\n\n    var loopCharacteristics = obj.loopCharacteristics,\n        isSequential = loopCharacteristics && loopCharacteristics.isSequential;\n\n    if (loopCharacteristics) {\n\n      if (isSequential === undefined) {\n        renderer('LoopMarker')(parentGfx, element, position);\n      }\n\n      if (isSequential === false) {\n        renderer('ParallelMarker')(parentGfx, element, position);\n      }\n\n      if (isSequential === true) {\n        renderer('SequentialMarker')(parentGfx, element, position);\n      }\n    }\n  }\n\n  function renderDataItemCollection(parentGfx, element) {\n\n    var yPosition = (element.height - 18) / element.height;\n\n    var pathData = pathMap.getScaledPath('DATA_OBJECT_COLLECTION_PATH', {\n      xScaleFactor: 1,\n      yScaleFactor: 1,\n      containerWidth: element.width,\n      containerHeight: element.height,\n      position: {\n        mx: 0.33,\n        my: yPosition\n      }\n    });\n\n    /* collection path */ drawPath(parentGfx, pathData, {\n      strokeWidth: 2\n    });\n  }\n\n\n  // extension API, use at your own risk\n  this._drawPath = drawPath;\n\n  this._renderer = renderer;\n}\n\n\ninherits(BpmnRenderer, BaseRenderer);\n\nBpmnRenderer.$inject = [\n  'config.bpmnRenderer',\n  'eventBus',\n  'styles',\n  'pathMap',\n  'canvas',\n  'textRenderer'\n];\n\n\nBpmnRenderer.prototype.canRender = function(element) {\n  return is(element, 'bpmn:BaseElement');\n};\n\nBpmnRenderer.prototype.drawShape = function(parentGfx, element) {\n  var type = element.type;\n  var h = this._renderer(type);\n\n  /* jshint -W040 */\n  return h(parentGfx, element);\n};\n\nBpmnRenderer.prototype.drawConnection = function(parentGfx, element) {\n  var type = element.type;\n  var h = this._renderer(type);\n\n  /* jshint -W040 */\n  return h(parentGfx, element);\n};\n\nBpmnRenderer.prototype.getShapePath = function(element) {\n\n  if (is(element, 'bpmn:Event')) {\n    return getCirclePath(element);\n  }\n\n  if (is(element, 'bpmn:Activity')) {\n    return getRoundRectPath(element, TASK_BORDER_RADIUS);\n  }\n\n  if (is(element, 'bpmn:Gateway')) {\n    return getDiamondPath(element);\n  }\n\n  return getRectPath(element);\n};\n","/**\n * Map containing SVG paths needed by BpmnRenderer.\n */\n\nexport default function PathMap() {\n\n  /**\n   * Contains a map of path elements\n   *\n   * <h1>Path definition</h1>\n   * A parameterized path is defined like this:\n   * <pre>\n   * 'GATEWAY_PARALLEL': {\n   *   d: 'm {mx},{my} {e.x0},0 0,{e.x1} {e.x1},0 0,{e.y0} -{e.x1},0 0,{e.y1} ' +\n          '-{e.x0},0 0,-{e.y1} -{e.x1},0 0,-{e.y0} {e.x1},0 z',\n   *   height: 17.5,\n   *   width:  17.5,\n   *   heightElements: [2.5, 7.5],\n   *   widthElements: [2.5, 7.5]\n   * }\n   * </pre>\n   * <p>It's important to specify a correct <b>height and width</b> for the path as the scaling\n   * is based on the ratio between the specified height and width in this object and the\n   * height and width that is set as scale target (Note x,y coordinates will be scaled with\n   * individual ratios).</p>\n   * <p>The '<b>heightElements</b>' and '<b>widthElements</b>' array must contain the values that will be scaled.\n   * The scaling is based on the computed ratios.\n   * Coordinates on the y axis should be in the <b>heightElement</b>'s array, they will be scaled using\n   * the computed ratio coefficient.\n   * In the parameterized path the scaled values can be accessed through the 'e' object in {} brackets.\n   *   <ul>\n   *    <li>The values for the y axis can be accessed in the path string using {e.y0}, {e.y1}, ....</li>\n   *    <li>The values for the x axis can be accessed in the path string using {e.x0}, {e.x1}, ....</li>\n   *   </ul>\n   *   The numbers x0, x1 respectively y0, y1, ... map to the corresponding array index.\n   * </p>\n   */\n  this.pathMap = {\n    'EVENT_MESSAGE': {\n      d: 'm {mx},{my} l 0,{e.y1} l {e.x1},0 l 0,-{e.y1} z l {e.x0},{e.y0} l {e.x0},-{e.y0}',\n      height: 36,\n      width:  36,\n      heightElements: [6, 14],\n      widthElements: [10.5, 21]\n    },\n    'EVENT_SIGNAL': {\n      d: 'M {mx},{my} l {e.x0},{e.y0} l -{e.x1},0 Z',\n      height: 36,\n      width: 36,\n      heightElements: [18],\n      widthElements: [10, 20]\n    },\n    'EVENT_ESCALATION': {\n      d: 'M {mx},{my} l {e.x0},{e.y0} l -{e.x0},-{e.y1} l -{e.x0},{e.y1} Z',\n      height: 36,\n      width: 36,\n      heightElements: [20, 7],\n      widthElements: [8]\n    },\n    'EVENT_CONDITIONAL': {\n      d: 'M {e.x0},{e.y0} l {e.x1},0 l 0,{e.y2} l -{e.x1},0 Z ' +\n         'M {e.x2},{e.y3} l {e.x0},0 ' +\n         'M {e.x2},{e.y4} l {e.x0},0 ' +\n         'M {e.x2},{e.y5} l {e.x0},0 ' +\n         'M {e.x2},{e.y6} l {e.x0},0 ' +\n         'M {e.x2},{e.y7} l {e.x0},0 ' +\n         'M {e.x2},{e.y8} l {e.x0},0 ',\n      height: 36,\n      width:  36,\n      heightElements: [8.5, 14.5, 18, 11.5, 14.5, 17.5, 20.5, 23.5, 26.5],\n      widthElements:  [10.5, 14.5, 12.5]\n    },\n    'EVENT_LINK': {\n      d: 'm {mx},{my} 0,{e.y0} -{e.x1},0 0,{e.y1} {e.x1},0 0,{e.y0} {e.x0},-{e.y2} -{e.x0},-{e.y2} z',\n      height: 36,\n      width: 36,\n      heightElements: [4.4375, 6.75, 7.8125],\n      widthElements: [9.84375, 13.5]\n    },\n    'EVENT_ERROR': {\n      d: 'm {mx},{my} {e.x0},-{e.y0} {e.x1},-{e.y1} {e.x2},{e.y2} {e.x3},-{e.y3} -{e.x4},{e.y4} -{e.x5},-{e.y5} z',\n      height: 36,\n      width: 36,\n      heightElements: [0.023, 8.737, 8.151, 16.564, 10.591, 8.714],\n      widthElements: [0.085, 6.672, 6.97, 4.273, 5.337, 6.636]\n    },\n    'EVENT_CANCEL_45': {\n      d: 'm {mx},{my} -{e.x1},0 0,{e.x0} {e.x1},0 0,{e.y1} {e.x0},0 ' +\n        '0,-{e.y1} {e.x1},0 0,-{e.y0} -{e.x1},0 0,-{e.y1} -{e.x0},0 z',\n      height: 36,\n      width: 36,\n      heightElements: [4.75, 8.5],\n      widthElements: [4.75, 8.5]\n    },\n    'EVENT_COMPENSATION': {\n      d: 'm {mx},{my} {e.x0},-{e.y0} 0,{e.y1} z m {e.x1},-{e.y2} {e.x2},-{e.y3} 0,{e.y1} -{e.x2},-{e.y3} z',\n      height: 36,\n      width: 36,\n      heightElements: [6.5, 13, 0.4, 6.1],\n      widthElements: [9, 9.3, 8.7]\n    },\n    'EVENT_TIMER_WH': {\n      d: 'M {mx},{my} l {e.x0},-{e.y0} m -{e.x0},{e.y0} l {e.x1},{e.y1} ',\n      height: 36,\n      width:  36,\n      heightElements: [10, 2],\n      widthElements: [3, 7]\n    },\n    'EVENT_TIMER_LINE': {\n      d:  'M {mx},{my} ' +\n          'm {e.x0},{e.y0} l -{e.x1},{e.y1} ',\n      height: 36,\n      width:  36,\n      heightElements: [10, 3],\n      widthElements: [0, 0]\n    },\n    'EVENT_MULTIPLE': {\n      d:'m {mx},{my} {e.x1},-{e.y0} {e.x1},{e.y0} -{e.x0},{e.y1} -{e.x2},0 z',\n      height: 36,\n      width:  36,\n      heightElements: [6.28099, 12.56199],\n      widthElements: [3.1405, 9.42149, 12.56198]\n    },\n    'EVENT_PARALLEL_MULTIPLE': {\n      d:'m {mx},{my} {e.x0},0 0,{e.y1} {e.x1},0 0,{e.y0} -{e.x1},0 0,{e.y1} ' +\n        '-{e.x0},0 0,-{e.y1} -{e.x1},0 0,-{e.y0} {e.x1},0 z',\n      height: 36,\n      width:  36,\n      heightElements: [2.56228, 7.68683],\n      widthElements: [2.56228, 7.68683]\n    },\n    'GATEWAY_EXCLUSIVE': {\n      d:'m {mx},{my} {e.x0},{e.y0} {e.x1},{e.y0} {e.x2},0 {e.x4},{e.y2} ' +\n                    '{e.x4},{e.y1} {e.x2},0 {e.x1},{e.y3} {e.x0},{e.y3} ' +\n                    '{e.x3},0 {e.x5},{e.y1} {e.x5},{e.y2} {e.x3},0 z',\n      height: 17.5,\n      width:  17.5,\n      heightElements: [8.5, 6.5312, -6.5312, -8.5],\n      widthElements:  [6.5, -6.5, 3, -3, 5, -5]\n    },\n    'GATEWAY_PARALLEL': {\n      d:'m {mx},{my} 0,{e.y1} -{e.x1},0 0,{e.y0} {e.x1},0 0,{e.y1} {e.x0},0 ' +\n        '0,-{e.y1} {e.x1},0 0,-{e.y0} -{e.x1},0 0,-{e.y1} -{e.x0},0 z',\n      height: 30,\n      width:  30,\n      heightElements: [5, 12.5],\n      widthElements: [5, 12.5]\n    },\n    'GATEWAY_EVENT_BASED': {\n      d:'m {mx},{my} {e.x0},{e.y0} {e.x0},{e.y1} {e.x1},{e.y2} {e.x2},0 z',\n      height: 11,\n      width:  11,\n      heightElements: [-6, 6, 12, -12],\n      widthElements: [9, -3, -12]\n    },\n    'GATEWAY_COMPLEX': {\n      d:'m {mx},{my} 0,{e.y0} -{e.x0},-{e.y1} -{e.x1},{e.y2} {e.x0},{e.y1} -{e.x2},0 0,{e.y3} ' +\n        '{e.x2},0  -{e.x0},{e.y1} l {e.x1},{e.y2} {e.x0},-{e.y1} 0,{e.y0} {e.x3},0 0,-{e.y0} {e.x0},{e.y1} ' +\n        '{e.x1},-{e.y2} -{e.x0},-{e.y1} {e.x2},0 0,-{e.y3} -{e.x2},0 {e.x0},-{e.y1} -{e.x1},-{e.y2} ' +\n        '-{e.x0},{e.y1} 0,-{e.y0} -{e.x3},0 z',\n      height: 17.125,\n      width:  17.125,\n      heightElements: [4.875, 3.4375, 2.125, 3],\n      widthElements: [3.4375, 2.125, 4.875, 3]\n    },\n    'DATA_OBJECT_PATH': {\n      d:'m 0,0 {e.x1},0 {e.x0},{e.y0} 0,{e.y1} -{e.x2},0 0,-{e.y2} {e.x1},0 0,{e.y0} {e.x0},0',\n      height: 61,\n      width:  51,\n      heightElements: [10, 50, 60],\n      widthElements: [10, 40, 50, 60]\n    },\n    'DATA_OBJECT_COLLECTION_PATH': {\n      d: 'm{mx},{my} m 3,2 l 0,10 m 3,-10 l 0,10 m 3,-10 l 0,10',\n      height: 10,\n      width: 10,\n      heightElements: [],\n      widthElements: []\n    },\n    'DATA_ARROW': {\n      d:'m 5,9 9,0 0,-3 5,5 -5,5 0,-3 -9,0 z',\n      height: 61,\n      width:  51,\n      heightElements: [],\n      widthElements: []\n    },\n    'DATA_STORE': {\n      d:'m  {mx},{my} ' +\n        'l  0,{e.y2} ' +\n        'c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0 ' +\n        'l  0,-{e.y2} ' +\n        'c -{e.x0},-{e.y1} -{e.x1},-{e.y1} -{e.x2},0' +\n        'c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0 ' +\n        'm  -{e.x2},{e.y0}' +\n        'c  {e.x0},{e.y1} {e.x1},{e.y1} {e.x2},0' +\n        'm  -{e.x2},{e.y0}' +\n        'c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0',\n      height: 61,\n      width:  61,\n      heightElements: [7, 10, 45],\n      widthElements:  [2, 58, 60]\n    },\n    'TEXT_ANNOTATION': {\n      d: 'm {mx}, {my} m 10,0 l -10,0 l 0,{e.y0} l 10,0',\n      height: 30,\n      width: 10,\n      heightElements: [30],\n      widthElements: [10]\n    },\n    'MARKER_SUB_PROCESS': {\n      d: 'm{mx},{my} m 7,2 l 0,10 m -5,-5 l 10,0',\n      height: 10,\n      width: 10,\n      heightElements: [],\n      widthElements: []\n    },\n    'MARKER_PARALLEL': {\n      d: 'm{mx},{my} m 3,2 l 0,10 m 3,-10 l 0,10 m 3,-10 l 0,10',\n      height: 10,\n      width: 10,\n      heightElements: [],\n      widthElements: []\n    },\n    'MARKER_SEQUENTIAL': {\n      d: 'm{mx},{my} m 0,3 l 10,0 m -10,3 l 10,0 m -10,3 l 10,0',\n      height: 10,\n      width: 10,\n      heightElements: [],\n      widthElements: []\n    },\n    'MARKER_COMPENSATION': {\n      d: 'm {mx},{my} 7,-5 0,10 z m 7.1,-0.3 6.9,-4.7 0,10 -6.9,-4.7 z',\n      height: 10,\n      width: 21,\n      heightElements: [],\n      widthElements: []\n    },\n    'MARKER_LOOP': {\n      d: 'm {mx},{my} c 3.526979,0 6.386161,-2.829858 6.386161,-6.320661 0,-3.490806 -2.859182,-6.320661 ' +\n        '-6.386161,-6.320661 -3.526978,0 -6.38616,2.829855 -6.38616,6.320661 0,1.745402 ' +\n        '0.714797,3.325567 1.870463,4.469381 0.577834,0.571908 1.265885,1.034728 2.029916,1.35457 ' +\n        'l -0.718163,-3.909793 m 0.718163,3.909793 -3.885211,0.802902',\n      height: 13.9,\n      width: 13.7,\n      heightElements: [],\n      widthElements: []\n    },\n    'MARKER_ADHOC': {\n      d: 'm {mx},{my} m 0.84461,2.64411 c 1.05533,-1.23780996 2.64337,-2.07882 4.29653,-1.97997996 2.05163,0.0805 ' +\n        '3.85579,1.15803 5.76082,1.79107 1.06385,0.34139996 2.24454,0.1438 3.18759,-0.43767 0.61743,-0.33642 ' +\n        '1.2775,-0.64078 1.7542,-1.17511 0,0.56023 0,1.12046 0,1.6807 -0.98706,0.96237996 -2.29792,1.62393996 ' +\n        '-3.6918,1.66181996 -1.24459,0.0927 -2.46671,-0.2491 -3.59505,-0.74812 -1.35789,-0.55965 ' +\n        '-2.75133,-1.33436996 -4.27027,-1.18121996 -1.37741,0.14601 -2.41842,1.13685996 -3.44288,1.96782996 z',\n      height: 4,\n      width: 15,\n      heightElements: [],\n      widthElements: []\n    },\n    'TASK_TYPE_SEND': {\n      d: 'm {mx},{my} l 0,{e.y1} l {e.x1},0 l 0,-{e.y1} z l {e.x0},{e.y0} l {e.x0},-{e.y0}',\n      height: 14,\n      width:  21,\n      heightElements: [6, 14],\n      widthElements: [10.5, 21]\n    },\n    'TASK_TYPE_SCRIPT': {\n      d: 'm {mx},{my} c 9.966553,-6.27276 -8.000926,-7.91932 2.968968,-14.938 l -8.802728,0 ' +\n        'c -10.969894,7.01868 6.997585,8.66524 -2.968967,14.938 z ' +\n        'm -7,-12 l 5,0 ' +\n        'm -4.5,3 l 4.5,0 ' +\n        'm -3,3 l 5,0' +\n        'm -4,3 l 5,0',\n      height: 15,\n      width:  12.6,\n      heightElements: [6, 14],\n      widthElements: [10.5, 21]\n    },\n    'TASK_TYPE_USER_1': {\n      d: 'm {mx},{my} c 0.909,-0.845 1.594,-2.049 1.594,-3.385 0,-2.554 -1.805,-4.62199999 ' +\n        '-4.357,-4.62199999 -2.55199998,0 -4.28799998,2.06799999 -4.28799998,4.62199999 0,1.348 ' +\n        '0.974,2.562 1.89599998,3.405 -0.52899998,0.187 -5.669,2.097 -5.794,4.7560005 v 6.718 ' +\n        'h 17 v -6.718 c 0,-2.2980005 -5.5279996,-4.5950005 -6.0509996,-4.7760005 z' +\n        'm -8,6 l 0,5.5 m 11,0 l 0,-5'\n    },\n    'TASK_TYPE_USER_2': {\n      d: 'm {mx},{my} m 2.162,1.009 c 0,2.4470005 -2.158,4.4310005 -4.821,4.4310005 ' +\n        '-2.66499998,0 -4.822,-1.981 -4.822,-4.4310005 '\n    },\n    'TASK_TYPE_USER_3': {\n      d: 'm {mx},{my} m -6.9,-3.80 c 0,0 2.25099998,-2.358 4.27399998,-1.177 2.024,1.181 4.221,1.537 ' +\n        '4.124,0.965 -0.098,-0.57 -0.117,-3.79099999 -4.191,-4.13599999 -3.57499998,0.001 ' +\n        '-4.20799998,3.36699999 -4.20699998,4.34799999 z'\n    },\n    'TASK_TYPE_MANUAL': {\n      d: 'm {mx},{my} c 0.234,-0.01 5.604,0.008 8.029,0.004 0.808,0 1.271,-0.172 1.417,-0.752 0.227,-0.898 ' +\n        '-0.334,-1.314 -1.338,-1.316 -2.467,-0.01 -7.886,-0.004 -8.108,-0.004 -0.014,-0.079 0.016,-0.533 0,-0.61 ' +\n        '0.195,-0.042 8.507,0.006 9.616,0.002 0.877,-0.007 1.35,-0.438 1.353,-1.208 0.003,-0.768 -0.479,-1.09 ' +\n        '-1.35,-1.091 -2.968,-0.002 -9.619,-0.013 -9.619,-0.013 v -0.591 c 0,0 5.052,-0.016 7.225,-0.016 ' +\n        '0.888,-0.002 1.354,-0.416 1.351,-1.193 -0.006,-0.761 -0.492,-1.196 -1.361,-1.196 -3.473,-0.005 ' +\n        '-10.86,-0.003 -11.0829995,-0.003 -0.022,-0.047 -0.045,-0.094 -0.069,-0.139 0.3939995,-0.319 ' +\n        '2.0409995,-1.626 2.4149995,-2.017 0.469,-0.4870005 0.519,-1.1650005 0.162,-1.6040005 -0.414,-0.511 ' +\n        '-0.973,-0.5 -1.48,-0.236 -1.4609995,0.764 -6.5999995,3.6430005 -7.7329995,4.2710005 -0.9,0.499 ' +\n        '-1.516,1.253 -1.882,2.19 -0.37000002,0.95 -0.17,2.01 -0.166,2.979 0.004,0.718 -0.27300002,1.345 ' +\n        '-0.055,2.063 0.629,2.087 2.425,3.312 4.859,3.318 4.6179995,0.014 9.2379995,-0.139 13.8569995,-0.158 ' +\n        '0.755,-0.004 1.171,-0.301 1.182,-1.033 0.012,-0.754 -0.423,-0.969 -1.183,-0.973 -1.778,-0.01 ' +\n        '-5.824,-0.004 -6.04,-0.004 10e-4,-0.084 0.003,-0.586 10e-4,-0.67 z'\n    },\n    'TASK_TYPE_INSTANTIATING_SEND': {\n      d: 'm {mx},{my} l 0,8.4 l 12.6,0 l 0,-8.4 z l 6.3,3.6 l 6.3,-3.6'\n    },\n    'TASK_TYPE_SERVICE': {\n      d: 'm {mx},{my} v -1.71335 c 0.352326,-0.0705 0.703932,-0.17838 1.047628,-0.32133 ' +\n        '0.344416,-0.14465 0.665822,-0.32133 0.966377,-0.52145 l 1.19431,1.18005 1.567487,-1.57688 ' +\n        '-1.195028,-1.18014 c 0.403376,-0.61394 0.683079,-1.29908 0.825447,-2.01824 l 1.622133,-0.01 ' +\n        'v -2.2196 l -1.636514,0.01 c -0.07333,-0.35153 -0.178319,-0.70024 -0.323564,-1.04372 ' +\n        '-0.145244,-0.34406 -0.321407,-0.6644 -0.522735,-0.96217 l 1.131035,-1.13631 -1.583305,-1.56293 ' +\n        '-1.129598,1.13589 c -0.614052,-0.40108 -1.302883,-0.68093 -2.022633,-0.82247 l 0.0093,-1.61852 ' +\n        'h -2.241173 l 0.0042,1.63124 c -0.353763,0.0736 -0.705369,0.17977 -1.049785,0.32371 -0.344415,0.14437 ' +\n        '-0.665102,0.32092 -0.9635006,0.52046 l -1.1698628,-1.15823 -1.5667691,1.5792 1.1684265,1.15669 ' +\n        'c -0.4026573,0.61283 -0.68308,1.29797 -0.8247287,2.01713 l -1.6588041,0.003 v 2.22174 ' +\n        'l 1.6724648,-0.006 c 0.073327,0.35077 0.1797598,0.70243 0.3242851,1.04472 0.1452428,0.34448 ' +\n        '0.3214064,0.6644 0.5227339,0.96066 l -1.1993431,1.19723 1.5840256,1.56011 1.1964668,-1.19348 ' +\n        'c 0.6140517,0.40346 1.3028827,0.68232 2.0233517,0.82331 l 7.19e-4,1.69892 h 2.226848 z ' +\n        'm 0.221462,-3.9957 c -1.788948,0.7502 -3.8576,-0.0928 -4.6097055,-1.87438 -0.7521065,-1.78321 ' +\n        '0.090598,-3.84627 1.8802645,-4.59604 1.78823,-0.74936 3.856881,0.0929 4.608987,1.87437 ' +\n        '0.752106,1.78165 -0.0906,3.84612 -1.879546,4.59605 z'\n    },\n    'TASK_TYPE_SERVICE_FILL': {\n      d: 'm {mx},{my} c -1.788948,0.7502 -3.8576,-0.0928 -4.6097055,-1.87438 -0.7521065,-1.78321 ' +\n        '0.090598,-3.84627 1.8802645,-4.59604 1.78823,-0.74936 3.856881,0.0929 4.608987,1.87437 ' +\n        '0.752106,1.78165 -0.0906,3.84612 -1.879546,4.59605 z'\n    },\n    'TASK_TYPE_BUSINESS_RULE_HEADER': {\n      d: 'm {mx},{my} 0,4 20,0 0,-4 z'\n    },\n    'TASK_TYPE_BUSINESS_RULE_MAIN': {\n      d: 'm {mx},{my} 0,12 20,0 0,-12 z' +\n        'm 0,8 l 20,0 ' +\n        'm -13,-4 l 0,8'\n    },\n    'MESSAGE_FLOW_MARKER': {\n      d: 'm {mx},{my} m -10.5 ,-7 l 0,14 l 21,0 l 0,-14 z l 10.5,6 l 10.5,-6'\n    }\n  };\n\n  this.getRawPath = function getRawPath(pathId) {\n    return this.pathMap[pathId].d;\n  };\n\n  /**\n   * Scales the path to the given height and width.\n   * <h1>Use case</h1>\n   * <p>Use case is to scale the content of elements (event, gateways) based\n   * on the element bounding box's size.\n   * </p>\n   * <h1>Why not transform</h1>\n   * <p>Scaling a path with transform() will also scale the stroke and IE does not support\n   * the option 'non-scaling-stroke' to prevent this.\n   * Also there are use cases where only some parts of a path should be\n   * scaled.</p>\n   *\n   * @param {string} pathId The ID of the path.\n   * @param {Object} param <p>\n   *   Example param object scales the path to 60% size of the container (data.width, data.height).\n   *   <pre>\n   *   {\n   *     xScaleFactor: 0.6,\n   *     yScaleFactor:0.6,\n   *     containerWidth: data.width,\n   *     containerHeight: data.height,\n   *     position: {\n   *       mx: 0.46,\n   *       my: 0.2,\n   *     }\n   *   }\n   *   </pre>\n   *   <ul>\n   *    <li>targetpathwidth = xScaleFactor * containerWidth</li>\n   *    <li>targetpathheight = yScaleFactor * containerHeight</li>\n   *    <li>Position is used to set the starting coordinate of the path. M is computed:\n    *    <ul>\n    *      <li>position.x * containerWidth</li>\n    *      <li>position.y * containerHeight</li>\n    *    </ul>\n    *    Center of the container <pre> position: {\n   *       mx: 0.5,\n   *       my: 0.5,\n   *     }</pre>\n   *     Upper left corner of the container\n   *     <pre> position: {\n   *       mx: 0.0,\n   *       my: 0.0,\n   *     }</pre>\n   *    </li>\n   *   </ul>\n   * </p>\n   *\n   */\n  this.getScaledPath = function getScaledPath(pathId, param) {\n    var rawPath = this.pathMap[pathId];\n\n    // positioning\n    // compute the start point of the path\n    var mx, my;\n\n    if (param.abspos) {\n      mx = param.abspos.x;\n      my = param.abspos.y;\n    } else {\n      mx = param.containerWidth * param.position.mx;\n      my = param.containerHeight * param.position.my;\n    }\n\n    var coordinates = {}; // map for the scaled coordinates\n    if (param.position) {\n\n      // path\n      var heightRatio = (param.containerHeight / rawPath.height) * param.yScaleFactor;\n      var widthRatio = (param.containerWidth / rawPath.width) * param.xScaleFactor;\n\n\n      // Apply height ratio\n      for (var heightIndex = 0; heightIndex < rawPath.heightElements.length; heightIndex++) {\n        coordinates['y' + heightIndex] = rawPath.heightElements[heightIndex] * heightRatio;\n      }\n\n      // Apply width ratio\n      for (var widthIndex = 0; widthIndex < rawPath.widthElements.length; widthIndex++) {\n        coordinates['x' + widthIndex] = rawPath.widthElements[widthIndex] * widthRatio;\n      }\n    }\n\n    // Apply value to raw path\n    var path = format(\n      rawPath.d, {\n        mx: mx,\n        my: my,\n        e: coordinates\n      }\n    );\n    return path;\n  };\n}\n\n// helpers //////////////////////\n\n// copied and adjusted from https://github.com/adobe-webplatform/Snap.svg/blob/master/src/svg.js\nvar tokenRegex = /\\{([^{}]+)\\}/g,\n    objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g; // matches .xxxxx or [\"xxxxx\"] to run over object properties\n\nfunction replacer(all, key, obj) {\n  var res = obj;\n  key.replace(objNotationRegex, function(all, name, quote, quotedName, isFunc) {\n    name = name || quotedName;\n    if (res) {\n      if (name in res) {\n        res = res[name];\n      }\n      typeof res == 'function' && isFunc && (res = res());\n    }\n  });\n  res = (res == null || res == obj ? all : res) + '';\n\n  return res;\n}\n\nfunction format(str, obj) {\n  return String(str).replace(tokenRegex, function(all, key) {\n    return replacer(all, key, obj);\n  });\n}\n","import { assign } from 'min-dash';\n\nimport TextUtil from 'diagram-js/lib/util/Text';\n\nvar DEFAULT_FONT_SIZE = 12;\nvar LINE_HEIGHT_RATIO = 1.2;\n\nvar MIN_TEXT_ANNOTATION_HEIGHT = 30;\n\n\nexport default function TextRenderer(config) {\n\n  var defaultStyle = assign({\n    fontFamily: 'Arial, sans-serif',\n    fontSize: DEFAULT_FONT_SIZE,\n    fontWeight: 'normal',\n    lineHeight: LINE_HEIGHT_RATIO\n  }, config && config.defaultStyle || {});\n\n  var fontSize = parseInt(defaultStyle.fontSize, 10) - 1;\n\n  var externalStyle = assign({}, defaultStyle, {\n    fontSize: fontSize\n  }, config && config.externalStyle || {});\n\n  var textUtil = new TextUtil({\n    style: defaultStyle\n  });\n\n  /**\n   * Get the new bounds of an externally rendered,\n   * layouted label.\n   *\n   * @param  {Bounds} bounds\n   * @param  {string} text\n   *\n   * @return {Bounds}\n   */\n  this.getExternalLabelBounds = function(bounds, text) {\n\n    var layoutedDimensions = textUtil.getDimensions(text, {\n      box: {\n        width: 90,\n        height: 30,\n        x: bounds.width / 2 + bounds.x,\n        y: bounds.height / 2 + bounds.y\n      },\n      style: externalStyle\n    });\n\n    // resize label shape to fit label text\n    return {\n      x: Math.round(bounds.x + bounds.width / 2 - layoutedDimensions.width / 2),\n      y: Math.round(bounds.y),\n      width: Math.ceil(layoutedDimensions.width),\n      height: Math.ceil(layoutedDimensions.height)\n    };\n\n  };\n\n  /**\n   * Get the new bounds of text annotation.\n   *\n   * @param  {Bounds} bounds\n   * @param  {string} text\n   *\n   * @return {Bounds}\n   */\n  this.getTextAnnotationBounds = function(bounds, text) {\n\n    var layoutedDimensions = textUtil.getDimensions(text, {\n      box: bounds,\n      style: defaultStyle,\n      align: 'left-top',\n      padding: 5\n    });\n\n    return {\n      x: bounds.x,\n      y: bounds.y,\n      width: bounds.width,\n      height: Math.max(MIN_TEXT_ANNOTATION_HEIGHT, Math.round(layoutedDimensions.height))\n    };\n  };\n\n  /**\n   * Create a layouted text element.\n   *\n   * @param {string} text\n   * @param {Object} [options]\n   *\n   * @return {SVGElement} rendered text\n   */\n  this.createText = function(text, options) {\n    return textUtil.createText(text, options || {});\n  };\n\n  /**\n   * Get default text style.\n   */\n  this.getDefaultStyle = function() {\n    return defaultStyle;\n  };\n\n  /**\n   * Get the external text style.\n   */\n  this.getExternalStyle = function() {\n    return externalStyle;\n  };\n\n}\n\nTextRenderer.$inject = [\n  'config.textRenderer'\n];","import BpmnRenderer from './BpmnRenderer';\nimport TextRenderer from './TextRenderer';\n\nimport PathMap from './PathMap';\n\nexport default {\n  __init__: [ 'bpmnRenderer' ],\n  bpmnRenderer: [ 'type', BpmnRenderer ],\n  textRenderer: [ 'type', TextRenderer ],\n  pathMap: [ 'type', PathMap ]\n};\n","import { getNewShapePosition } from './BpmnAutoPlaceUtil';\n\n\n/**\n * BPMN auto-place behavior.\n *\n * @param {EventBus} eventBus\n */\nexport default function AutoPlace(eventBus) {\n  eventBus.on('autoPlace', function(context) {\n    var shape = context.shape,\n        source = context.source;\n\n    return getNewShapePosition(source, shape);\n  });\n}\n\nAutoPlace.$inject = [ 'eventBus' ];","import { is } from '../../util/ModelUtil';\nimport { isAny } from '../modeling/util/ModelingUtil';\n\nimport {\n  getMid,\n  asTRBL,\n  getOrientation\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  findFreePosition,\n  generateGetNextPosition,\n  getConnectedDistance\n} from 'diagram-js/lib/features/auto-place/AutoPlaceUtil';\n\n\n/**\n * Find the new position for the target element to\n * connect to source.\n *\n * @param  {djs.model.Shape} source\n * @param  {djs.model.Shape} element\n *\n * @return {Point}\n */\nexport function getNewShapePosition(source, element) {\n\n  if (is(element, 'bpmn:TextAnnotation')) {\n    return getTextAnnotationPosition(source, element);\n  }\n\n  if (isAny(element, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ])) {\n    return getDataElementPosition(source, element);\n  }\n\n  if (is(element, 'bpmn:FlowNode')) {\n    return getFlowNodePosition(source, element);\n  }\n}\n\n/**\n * Always try to place element right of source;\n * compute actual distance from previous nodes in flow.\n */\nexport function getFlowNodePosition(source, element) {\n\n  var sourceTrbl = asTRBL(source);\n  var sourceMid = getMid(source);\n\n  var horizontalDistance = getConnectedDistance(source, {\n    filter: function(connection) {\n      return is(connection, 'bpmn:SequenceFlow');\n    }\n  });\n\n  var margin = 30,\n      minDistance = 80,\n      orientation = 'left';\n\n  if (is(source, 'bpmn:BoundaryEvent')) {\n    orientation = getOrientation(source, source.host, -25);\n\n    if (orientation.indexOf('top') !== -1) {\n      margin *= -1;\n    }\n  }\n\n  var position = {\n    x: sourceTrbl.right + horizontalDistance + element.width / 2,\n    y: sourceMid.y + getVerticalDistance(orientation, minDistance)\n  };\n\n  var nextPositionDirection = {\n    y: {\n      margin: margin,\n      minDistance: minDistance\n    }\n  };\n\n  return findFreePosition(source, element, position, generateGetNextPosition(nextPositionDirection));\n}\n\n\nfunction getVerticalDistance(orientation, minDistance) {\n  if (orientation.indexOf('top') != -1) {\n    return -1 * minDistance;\n  } else if (orientation.indexOf('bottom') != -1) {\n    return minDistance;\n  } else {\n    return 0;\n  }\n}\n\n\n/**\n * Always try to place text annotations top right of source.\n */\nexport function getTextAnnotationPosition(source, element) {\n\n  var sourceTrbl = asTRBL(source);\n\n  var position = {\n    x: sourceTrbl.right + element.width / 2,\n    y: sourceTrbl.top - 50 - element.height / 2\n  };\n\n  var nextPositionDirection = {\n    y: {\n      margin: -30,\n      minDistance: 20\n    }\n  };\n\n  return findFreePosition(source, element, position, generateGetNextPosition(nextPositionDirection));\n}\n\n\n/**\n * Always put element bottom right of source.\n */\nexport function getDataElementPosition(source, element) {\n\n  var sourceTrbl = asTRBL(source);\n\n  var position = {\n    x: sourceTrbl.right - 10 + element.width / 2,\n    y: sourceTrbl.bottom + 40 + element.width / 2\n  };\n\n  var nextPositionDirection = {\n    x: {\n      margin: 30,\n      minDistance: 30\n    }\n  };\n\n  return findFreePosition(source, element, position, generateGetNextPosition(nextPositionDirection));\n}","import AutoPlaceModule from 'diagram-js/lib/features/auto-place';\n\nimport BpmnAutoPlace from './BpmnAutoPlace';\n\nexport default {\n  __depends__: [ AutoPlaceModule ],\n  __init__: [ 'bpmnAutoPlace' ],\n  bpmnAutoPlace: [ 'type', BpmnAutoPlace ]\n};","import AutoResize from 'diagram-js/lib/features/auto-resize/AutoResize';\n\nimport inherits from 'inherits';\n\nimport { is } from '../../util/ModelUtil';\n\n\n/**\n * Sub class of the AutoResize module which implements a BPMN\n * specific resize function.\n */\nexport default function BpmnAutoResize(injector) {\n\n  injector.invoke(AutoResize, this);\n}\n\nBpmnAutoResize.$inject = [\n  'injector'\n];\n\ninherits(BpmnAutoResize, AutoResize);\n\n\n/**\n * Resize shapes and lanes.\n *\n * @param {djs.model.Shape} target\n * @param {Bounds} newBounds\n * @param {Object} hints\n */\nBpmnAutoResize.prototype.resize = function(target, newBounds, hints) {\n\n  if (is(target, 'bpmn:Participant')) {\n    this._modeling.resizeLane(target, newBounds, null, hints);\n  } else {\n    this._modeling.resizeShape(target, newBounds, null, hints);\n  }\n};","import { is } from '../../util/ModelUtil';\n\nimport inherits from 'inherits';\n\nimport { forEach } from 'min-dash';\n\nimport AutoResizeProvider from 'diagram-js/lib/features/auto-resize/AutoResizeProvider';\n\n\n/**\n * This module is a provider for automatically resizing parent BPMN elements\n */\nexport default function BpmnAutoResizeProvider(eventBus, modeling) {\n  AutoResizeProvider.call(this, eventBus);\n\n  this._modeling = modeling;\n}\n\ninherits(BpmnAutoResizeProvider, AutoResizeProvider);\n\nBpmnAutoResizeProvider.$inject = [\n  'eventBus',\n  'modeling'\n];\n\n\n/**\n * Check if the given target can be expanded\n *\n * @param  {djs.model.Shape} target\n *\n * @return {boolean}\n */\nBpmnAutoResizeProvider.prototype.canResize = function(elements, target) {\n\n  // do not resize plane elements:\n  // root elements, collapsed sub-processes\n  if (is(target.di, 'bpmndi:BPMNPlane')) {\n    return false;\n  }\n\n  if (!is(target, 'bpmn:Participant') && !is(target, 'bpmn:Lane') && !(is(target, 'bpmn:SubProcess'))) {\n    return false;\n  }\n\n  var canResize = true;\n\n  forEach(elements, function(element) {\n\n    if (is(element, 'bpmn:Lane') || element.labelTarget) {\n      canResize = false;\n      return;\n    }\n  });\n\n  return canResize;\n};\n","import BpmnAutoResize from './BpmnAutoResize';\nimport BpmnAutoResizeProvider from './BpmnAutoResizeProvider';\n\n\nexport default {\n  __init__: [\n    'bpmnAutoResize',\n    'bpmnAutoResizeProvider'\n  ],\n  bpmnAutoResize: [ 'type', BpmnAutoResize ],\n  bpmnAutoResizeProvider: [ 'type', BpmnAutoResizeProvider ]\n};\n","import {\n  assign,\n  forEach,\n  isArray\n} from 'min-dash';\n\nimport {\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  isExpanded,\n  isEventSubProcess\n} from '../../util/DiUtil';\n\nimport {\n  isAny\n} from '../modeling/util/ModelingUtil';\n\nimport {\n  getChildLanes\n} from '../modeling/util/LaneUtil';\n\nimport {\n  hasPrimaryModifier\n} from 'diagram-js/lib/util/Mouse';\n\n\n/**\n * A provider for BPMN 2.0 elements context pad\n */\nexport default function ContextPadProvider(\n    config, injector, eventBus,\n    contextPad, modeling, elementFactory,\n    connect, create, popupMenu,\n    canvas, rules, translate) {\n\n  config = config || {};\n\n  contextPad.registerProvider(this);\n\n  this._contextPad = contextPad;\n\n  this._modeling = modeling;\n\n  this._elementFactory = elementFactory;\n  this._connect = connect;\n  this._create = create;\n  this._popupMenu = popupMenu;\n  this._canvas = canvas;\n  this._rules = rules;\n  this._translate = translate;\n\n  if (config.autoPlace !== false) {\n    this._autoPlace = injector.get('autoPlace', false);\n  }\n\n  eventBus.on('create.end', 250, function(event) {\n    var context = event.context,\n        shape = context.shape;\n\n    if (!hasPrimaryModifier(event) || !contextPad.isOpen(shape)) {\n      return;\n    }\n\n    var entries = contextPad.getEntries(shape);\n\n    if (entries.replace) {\n      entries.replace.action.click(event, shape);\n    }\n  });\n}\n\nContextPadProvider.$inject = [\n  'config.contextPad',\n  'injector',\n  'eventBus',\n  'contextPad',\n  'modeling',\n  'elementFactory',\n  'connect',\n  'create',\n  'popupMenu',\n  'canvas',\n  'rules',\n  'translate'\n];\n\n\nContextPadProvider.prototype.getContextPadEntries = function(element) {\n\n  var contextPad = this._contextPad,\n      modeling = this._modeling,\n\n      elementFactory = this._elementFactory,\n      connect = this._connect,\n      create = this._create,\n      popupMenu = this._popupMenu,\n      canvas = this._canvas,\n      rules = this._rules,\n      autoPlace = this._autoPlace,\n      translate = this._translate;\n\n  var actions = {};\n\n  if (element.type === 'label') {\n    return actions;\n  }\n\n  var businessObject = element.businessObject;\n\n  function startConnect(event, element) {\n    connect.start(event, element);\n  }\n\n  function removeElement(e) {\n    modeling.removeElements([ element ]);\n  }\n\n  function getReplaceMenuPosition(element) {\n\n    var Y_OFFSET = 5;\n\n    var diagramContainer = canvas.getContainer(),\n        pad = contextPad.getPad(element).html;\n\n    var diagramRect = diagramContainer.getBoundingClientRect(),\n        padRect = pad.getBoundingClientRect();\n\n    var top = padRect.top - diagramRect.top;\n    var left = padRect.left - diagramRect.left;\n\n    var pos = {\n      x: left,\n      y: top + padRect.height + Y_OFFSET\n    };\n\n    return pos;\n  }\n\n\n  /**\n   * Create an append action\n   *\n   * @param {string} type\n   * @param {string} className\n   * @param {string} [title]\n   * @param {Object} [options]\n   *\n   * @return {Object} descriptor\n   */\n  function appendAction(type, className, title, options) {\n\n    if (typeof title !== 'string') {\n      options = title;\n      title = translate('Append {type}', { type: type.replace(/^bpmn:/, '') });\n    }\n\n    function appendStart(event, element) {\n\n      var shape = elementFactory.createShape(assign({ type: type }, options));\n      create.start(event, shape, {\n        source: element\n      });\n    }\n\n\n    var append = autoPlace ? function(event, element) {\n      var shape = elementFactory.createShape(assign({ type: type }, options));\n\n      autoPlace.append(element, shape);\n    } : appendStart;\n\n\n    return {\n      group: 'model',\n      className: className,\n      title: title,\n      action: {\n        dragstart: appendStart,\n        click: append\n      }\n    };\n  }\n\n  function splitLaneHandler(count) {\n\n    return function(event, element) {\n\n      // actual split\n      modeling.splitLane(element, count);\n\n      // refresh context pad after split to\n      // get rid of split icons\n      contextPad.open(element, true);\n    };\n  }\n\n\n  if (isAny(businessObject, [ 'bpmn:Lane', 'bpmn:Participant' ]) && isExpanded(element)) {\n\n    var childLanes = getChildLanes(element);\n\n    assign(actions, {\n      'lane-insert-above': {\n        group: 'lane-insert-above',\n        className: 'bpmn-icon-lane-insert-above',\n        title: translate('Add Lane above'),\n        action: {\n          click: function(event, element) {\n            modeling.addLane(element, 'top');\n          }\n        }\n      }\n    });\n\n    if (childLanes.length < 2) {\n\n      if (element.height >= 120) {\n        assign(actions, {\n          'lane-divide-two': {\n            group: 'lane-divide',\n            className: 'bpmn-icon-lane-divide-two',\n            title: translate('Divide into two Lanes'),\n            action: {\n              click: splitLaneHandler(2)\n            }\n          }\n        });\n      }\n\n      if (element.height >= 180) {\n        assign(actions, {\n          'lane-divide-three': {\n            group: 'lane-divide',\n            className: 'bpmn-icon-lane-divide-three',\n            title: translate('Divide into three Lanes'),\n            action: {\n              click: splitLaneHandler(3)\n            }\n          }\n        });\n      }\n    }\n\n    assign(actions, {\n      'lane-insert-below': {\n        group: 'lane-insert-below',\n        className: 'bpmn-icon-lane-insert-below',\n        title: translate('Add Lane below'),\n        action: {\n          click: function(event, element) {\n            modeling.addLane(element, 'bottom');\n          }\n        }\n      }\n    });\n\n  }\n\n  if (is(businessObject, 'bpmn:FlowNode')) {\n\n    if (is(businessObject, 'bpmn:EventBasedGateway')) {\n\n      assign(actions, {\n        'append.receive-task': appendAction(\n          'bpmn:ReceiveTask',\n          'bpmn-icon-receive-task',\n          translate('Append ReceiveTask')\n        ),\n        'append.message-intermediate-event': appendAction(\n          'bpmn:IntermediateCatchEvent',\n          'bpmn-icon-intermediate-event-catch-message',\n          translate('Append MessageIntermediateCatchEvent'),\n          { eventDefinitionType: 'bpmn:MessageEventDefinition' }\n        ),\n        'append.timer-intermediate-event': appendAction(\n          'bpmn:IntermediateCatchEvent',\n          'bpmn-icon-intermediate-event-catch-timer',\n          translate('Append TimerIntermediateCatchEvent'),\n          { eventDefinitionType: 'bpmn:TimerEventDefinition' }\n        ),\n        'append.condition-intermediate-event': appendAction(\n          'bpmn:IntermediateCatchEvent',\n          'bpmn-icon-intermediate-event-catch-condition',\n          translate('Append ConditionIntermediateCatchEvent'),\n          { eventDefinitionType: 'bpmn:ConditionalEventDefinition' }\n        ),\n        'append.signal-intermediate-event': appendAction(\n          'bpmn:IntermediateCatchEvent',\n          'bpmn-icon-intermediate-event-catch-signal',\n          translate('Append SignalIntermediateCatchEvent'),\n          { eventDefinitionType: 'bpmn:SignalEventDefinition' }\n        )\n      });\n    } else\n\n    if (isEventType(businessObject, 'bpmn:BoundaryEvent', 'bpmn:CompensateEventDefinition')) {\n\n      assign(actions, {\n        'append.compensation-activity':\n            appendAction(\n              'bpmn:Task',\n              'bpmn-icon-task',\n              translate('Append compensation activity'),\n              {\n                isForCompensation: true\n              }\n            )\n      });\n    } else\n\n    if (!is(businessObject, 'bpmn:EndEvent') &&\n        !businessObject.isForCompensation &&\n        !isEventType(businessObject, 'bpmn:IntermediateThrowEvent', 'bpmn:LinkEventDefinition') &&\n        !isEventSubProcess(businessObject)) {\n\n      assign(actions, {\n        'append.end-event': appendAction(\n          'bpmn:EndEvent',\n          'bpmn-icon-end-event-none',\n          translate('Append EndEvent')\n        ),\n        'append.gateway': appendAction(\n          'bpmn:ExclusiveGateway',\n          'bpmn-icon-gateway-none',\n          translate('Append Gateway')\n        ),\n        'append.append-task': appendAction(\n          'bpmn:Task',\n          'bpmn-icon-task',\n          translate('Append Task')\n        ),\n        'append.intermediate-event': appendAction(\n          'bpmn:IntermediateThrowEvent',\n          'bpmn-icon-intermediate-event-none',\n          translate('Append Intermediate/Boundary Event')\n        )\n      });\n    }\n  }\n\n  if (!popupMenu.isEmpty(element, 'bpmn-replace')) {\n\n    // Replace menu entry\n    assign(actions, {\n      'replace': {\n        group: 'edit',\n        className: 'bpmn-icon-screw-wrench',\n        title: translate('Change type'),\n        action: {\n          click: function(event, element) {\n\n            var position = assign(getReplaceMenuPosition(element), {\n              cursor: { x: event.x, y: event.y }\n            });\n\n            popupMenu.open(element, 'bpmn-replace', position);\n          }\n        }\n      }\n    });\n  }\n\n  if (\n    isAny(businessObject, [\n      'bpmn:FlowNode',\n      'bpmn:InteractionNode',\n      'bpmn:DataObjectReference',\n      'bpmn:DataStoreReference',\n    ])\n  ) {\n    assign(actions, {\n      'append.text-annotation': appendAction(\n        'bpmn:TextAnnotation',\n        'bpmn-icon-text-annotation'\n      ),\n\n      'connect': {\n        group: 'connect',\n        className: 'bpmn-icon-connection-multi',\n        title: translate(\n          'Connect using ' +\n            (businessObject.isForCompensation\n              ? ''\n              : 'Sequence/MessageFlow or ') +\n            'Association'\n        ),\n        action: {\n          click: startConnect,\n          dragstart: startConnect,\n        },\n      },\n    });\n  }\n\n  if (is(businessObject, 'bpmn:TextAnnotation')) {\n    assign(actions, {\n      'connect': {\n        group: 'connect',\n        className: 'bpmn-icon-connection-multi',\n        title: translate('Connect using Association'),\n        action: {\n          click: startConnect,\n          dragstart: startConnect,\n        },\n      },\n    });\n  }\n\n  if (isAny(businessObject, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ])) {\n    assign(actions, {\n      'connect': {\n        group: 'connect',\n        className: 'bpmn-icon-connection-multi',\n        title: translate('Connect using DataInputAssociation'),\n        action: {\n          click: startConnect,\n          dragstart: startConnect\n        }\n      }\n    });\n  }\n\n  if (is(businessObject, 'bpmn:Group')) {\n    assign(actions, {\n      'append.text-annotation': appendAction('bpmn:TextAnnotation', 'bpmn-icon-text-annotation')\n    });\n  }\n\n  // delete element entry, only show if allowed by rules\n  var deleteAllowed = rules.allowed('elements.delete', { elements: [ element ] });\n\n  if (isArray(deleteAllowed)) {\n\n    // was the element returned as a deletion candidate?\n    deleteAllowed = deleteAllowed[0] === element;\n  }\n\n  if (deleteAllowed) {\n    assign(actions, {\n      'delete': {\n        group: 'edit',\n        className: 'bpmn-icon-trash',\n        title: translate('Remove'),\n        action: {\n          click: removeElement\n        }\n      }\n    });\n  }\n\n  return actions;\n};\n\n\n// helpers /////////\n\nfunction isEventType(eventBo, type, definition) {\n\n  var isType = eventBo.$instanceOf(type);\n  var isDefinition = false;\n\n  var definitions = eventBo.eventDefinitions || [];\n  forEach(definitions, function(def) {\n    if (def.$type === definition) {\n      isDefinition = true;\n    }\n  });\n\n  return isType && isDefinition;\n}\n","import DirectEditingModule from 'diagram-js-direct-editing';\nimport ContextPadModule from 'diagram-js/lib/features/context-pad';\nimport SelectionModule from 'diagram-js/lib/features/selection';\nimport ConnectModule from 'diagram-js/lib/features/connect';\nimport CreateModule from 'diagram-js/lib/features/create';\nimport PopupMenuModule from '../popup-menu';\n\nimport ContextPadProvider from './ContextPadProvider';\n\nexport default {\n  __depends__: [\n    DirectEditingModule,\n    ContextPadModule,\n    SelectionModule,\n    ConnectModule,\n    CreateModule,\n    PopupMenuModule\n  ],\n  __init__: [ 'contextPadProvider' ],\n  contextPadProvider: [ 'type', ContextPadProvider ]\n};","import {\n  getBusinessObject,\n  getDi,\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  forEach,\n  isArray,\n  isUndefined,\n  omit,\n  reduce\n} from 'min-dash';\n\nfunction copyProperties(source, target, properties) {\n  if (!isArray(properties)) {\n    properties = [ properties ];\n  }\n\n  forEach(properties, function(property) {\n    if (!isUndefined(source[property])) {\n      target[property] = source[property];\n    }\n  });\n}\n\nfunction removeProperties(element, properties) {\n  if (!isArray(properties)) {\n    properties = [ properties ];\n  }\n\n  forEach(properties, function(property) {\n    if (element[property]) {\n      delete element[property];\n    }\n  });\n}\n\nvar LOW_PRIORITY = 750;\n\n\nexport default function BpmnCopyPaste(bpmnFactory, eventBus, moddleCopy) {\n\n  eventBus.on('copyPaste.copyElement', LOW_PRIORITY, function(context) {\n    var descriptor = context.descriptor,\n        element = context.element;\n\n    var businessObject = descriptor.oldBusinessObject = getBusinessObject(element);\n    var di = descriptor.oldDi = getDi(element);\n\n    descriptor.type = element.type;\n\n    copyProperties(businessObject, descriptor, 'name');\n\n    copyProperties(di, descriptor, 'isExpanded');\n\n    if (isLabel(descriptor)) {\n      return descriptor;\n    }\n\n    // default sequence flow\n    if (businessObject.default) {\n      descriptor.default = businessObject.default.id;\n    }\n  });\n\n  eventBus.on('moddleCopy.canCopyProperty', function(context) {\n    var parent = context.parent,\n        property = context.property,\n        propertyName = context.propertyName,\n        bpmnProcess;\n\n    if (\n      propertyName === 'processRef' &&\n      is(parent, 'bpmn:Participant') &&\n      is(property, 'bpmn:Process')\n    ) {\n      bpmnProcess = bpmnFactory.create('bpmn:Process');\n\n      // return copy of process\n      return moddleCopy.copyElement(property, bpmnProcess);\n    }\n  });\n\n  var references;\n\n  function resolveReferences(descriptor, cache) {\n    var businessObject = getBusinessObject(descriptor);\n\n    // default sequence flows\n    if (descriptor.default) {\n\n      // relationship cannot be resolved immediately\n      references[ descriptor.default ] = {\n        element: businessObject,\n        property: 'default'\n      };\n    }\n\n    // boundary events\n    if (descriptor.host) {\n\n      // relationship can be resolved immediately\n      getBusinessObject(descriptor).attachedToRef = getBusinessObject(cache[ descriptor.host ]);\n    }\n\n    references = omit(references, reduce(references, function(array, reference, key) {\n      var element = reference.element,\n          property = reference.property;\n\n      if (key === descriptor.id) {\n        element[ property ] = businessObject;\n\n        array.push(descriptor.id);\n      }\n\n      return array;\n    }, []));\n  }\n\n  eventBus.on('copyPaste.pasteElements', function() {\n    references = {};\n  });\n\n  eventBus.on('copyPaste.pasteElement', function(context) {\n    var cache = context.cache,\n        descriptor = context.descriptor,\n        oldBusinessObject = descriptor.oldBusinessObject,\n        oldDi = descriptor.oldDi,\n        newBusinessObject, newDi;\n\n    // do NOT copy business object if external label\n    if (isLabel(descriptor)) {\n      descriptor.businessObject = getBusinessObject(cache[ descriptor.labelTarget ]);\n      descriptor.di = getDi(cache[ descriptor.labelTarget ]);\n\n      return;\n    }\n\n    newBusinessObject = bpmnFactory.create(oldBusinessObject.$type);\n\n    descriptor.businessObject = moddleCopy.copyElement(\n      oldBusinessObject,\n      newBusinessObject\n    );\n\n    newDi = bpmnFactory.create(oldDi.$type);\n    newDi.bpmnElement = newBusinessObject;\n\n    descriptor.di = moddleCopy.copyElement(\n      oldDi,\n      newDi\n    );\n\n    // resolve references e.g. default sequence flow\n    resolveReferences(descriptor, cache);\n\n    copyProperties(descriptor, newBusinessObject, [\n      'isExpanded',\n      'name'\n    ]);\n\n    removeProperties(descriptor, 'oldBusinessObject');\n  });\n\n}\n\n\nBpmnCopyPaste.$inject = [\n  'bpmnFactory',\n  'eventBus',\n  'moddleCopy'\n];\n\n// helpers //////////\n\nfunction isLabel(element) {\n  return !!element.labelTarget;\n}\n","import {\n  find,\n  forEach,\n  isArray,\n  isDefined,\n  isObject,\n  matchPattern,\n  reduce,\n  has,\n  sortBy\n} from 'min-dash';\n\nvar DISALLOWED_PROPERTIES = [\n  'artifacts',\n  'dataInputAssociations',\n  'dataOutputAssociations',\n  'default',\n  'flowElements',\n  'lanes',\n  'incoming',\n  'outgoing'\n];\n\n/**\n * @typedef {Function} <moddleCopy.canCopyProperties> listener\n *\n * @param {Object} context\n * @param {Array<string>} context.propertyNames\n * @param {ModdleElement} context.sourceElement\n * @param {ModdleElement} context.targetElement\n *\n * @returns {Array<string>|boolean} - Return properties to be copied or false to disallow\n * copying.\n */\n\n/**\n * @typedef {Function} <moddleCopy.canCopyProperty> listener\n *\n * @param {Object} context\n * @param {ModdleElement} context.parent\n * @param {*} context.property\n * @param {string} context.propertyName\n *\n * @returns {*|boolean} - Return copied property or false to disallow\n * copying.\n */\n\n/**\n * @typedef {Function} <moddleCopy.canSetCopiedProperty> listener\n *\n * @param {Object} context\n * @param {ModdleElement} context.parent\n * @param {*} context.property\n * @param {string} context.propertyName\n *\n * @returns {boolean} - Return false to disallow\n * setting copied property.\n */\n\n/**\n * Utility for copying model properties from source element to target element.\n *\n * @param {EventBus} eventBus\n * @param {BpmnFactory} bpmnFactory\n * @param {BpmnModdle} moddle\n */\nexport default function ModdleCopy(eventBus, bpmnFactory, moddle) {\n  this._bpmnFactory = bpmnFactory;\n  this._eventBus = eventBus;\n  this._moddle = moddle;\n\n  // copy extension elements last\n  eventBus.on('moddleCopy.canCopyProperties', function(context) {\n    var propertyNames = context.propertyNames;\n\n    if (!propertyNames || !propertyNames.length) {\n      return;\n    }\n\n    return sortBy(propertyNames, function(propertyName) {\n      return propertyName === 'extensionElements';\n    });\n  });\n\n  // default check whether property can be copied\n  eventBus.on('moddleCopy.canCopyProperty', function(context) {\n    var parent = context.parent,\n        parentDescriptor = isObject(parent) && parent.$descriptor,\n        propertyName = context.propertyName;\n\n    if (propertyName && DISALLOWED_PROPERTIES.indexOf(propertyName) !== -1) {\n\n      // disallow copying property\n      return false;\n    }\n\n    if (propertyName &&\n      parentDescriptor &&\n      !find(parentDescriptor.properties, matchPattern({ name: propertyName }))) {\n\n      // disallow copying property\n      return false;\n    }\n  });\n\n  // do NOT allow to copy empty extension elements\n  eventBus.on('moddleCopy.canSetCopiedProperty', function(context) {\n    var property = context.property;\n\n    if (is(property, 'bpmn:ExtensionElements') && (!property.values || !property.values.length)) {\n\n      // disallow setting copied property\n      return false;\n    }\n  });\n}\n\nModdleCopy.$inject = [\n  'eventBus',\n  'bpmnFactory',\n  'moddle'\n];\n\n/**\n * Copy model properties of source element to target element.\n *\n * @param {ModdleElement} sourceElement\n * @param {ModdleElement} targetElement\n * @param {Array<string>} [propertyNames]\n *\n * @param {ModdleElement}\n */\nModdleCopy.prototype.copyElement = function(sourceElement, targetElement, propertyNames) {\n  var self = this;\n\n  if (propertyNames && !isArray(propertyNames)) {\n    propertyNames = [ propertyNames ];\n  }\n\n  propertyNames = propertyNames || getPropertyNames(sourceElement.$descriptor);\n\n  var canCopyProperties = this._eventBus.fire('moddleCopy.canCopyProperties', {\n    propertyNames: propertyNames,\n    sourceElement: sourceElement,\n    targetElement: targetElement\n  });\n\n  if (canCopyProperties === false) {\n    return targetElement;\n  }\n\n  if (isArray(canCopyProperties)) {\n    propertyNames = canCopyProperties;\n  }\n\n  // copy properties\n  forEach(propertyNames, function(propertyName) {\n    var sourceProperty;\n\n    if (has(sourceElement, propertyName)) {\n      sourceProperty = sourceElement.get(propertyName);\n    }\n\n    var copiedProperty = self.copyProperty(sourceProperty, targetElement, propertyName);\n\n    var canSetProperty = self._eventBus.fire('moddleCopy.canSetCopiedProperty', {\n      parent: targetElement,\n      property: copiedProperty,\n      propertyName: propertyName\n    });\n\n    if (canSetProperty === false) {\n      return;\n    }\n\n    if (isDefined(copiedProperty)) {\n      targetElement.set(propertyName, copiedProperty);\n    }\n  });\n\n  return targetElement;\n};\n\n/**\n * Copy model property.\n *\n * @param {*} property\n * @param {ModdleElement} parent\n * @param {string} propertyName\n *\n * @returns {*}\n */\nModdleCopy.prototype.copyProperty = function(property, parent, propertyName) {\n  var self = this;\n\n  // allow others to copy property\n  var copiedProperty = this._eventBus.fire('moddleCopy.canCopyProperty', {\n    parent: parent,\n    property: property,\n    propertyName: propertyName\n  });\n\n  // return if copying is NOT allowed\n  if (copiedProperty === false) {\n    return;\n  }\n\n  if (copiedProperty) {\n    if (isObject(copiedProperty) && copiedProperty.$type && !copiedProperty.$parent) {\n      copiedProperty.$parent = parent;\n    }\n\n    return copiedProperty;\n  }\n\n  var propertyDescriptor = this._moddle.getPropertyDescriptor(parent, propertyName);\n\n  // do NOT copy references\n  if (propertyDescriptor.isReference) {\n    return;\n  }\n\n  // copy id\n  if (propertyDescriptor.isId) {\n    return this._copyId(property, parent);\n  }\n\n  // copy arrays\n  if (isArray(property)) {\n    return reduce(property, function(childProperties, childProperty) {\n\n      // recursion\n      copiedProperty = self.copyProperty(childProperty, parent, propertyName);\n\n      // copying might NOT be allowed\n      if (copiedProperty) {\n        copiedProperty.$parent = parent;\n\n        return childProperties.concat(copiedProperty);\n      }\n\n      return childProperties;\n    }, []);\n  }\n\n  // copy model elements\n  if (isObject(property) && property.$type) {\n    if (this._moddle.getElementDescriptor(property).isGeneric) {\n      return;\n    }\n\n    copiedProperty = self._bpmnFactory.create(property.$type);\n\n    copiedProperty.$parent = parent;\n\n    // recursion\n    copiedProperty = self.copyElement(property, copiedProperty);\n\n    return copiedProperty;\n  }\n\n  // copy primitive properties\n  return property;\n};\n\nModdleCopy.prototype._copyId = function(id, element) {\n\n  // disallow if already taken\n  if (this._moddle.ids.assigned(id)) {\n    return;\n  } else {\n\n    this._moddle.ids.claim(id, element);\n    return id;\n  }\n};\n\n// helpers //////////\n\nexport function getPropertyNames(descriptor, keepDefaultProperties) {\n  return reduce(descriptor.properties, function(properties, property) {\n\n    if (keepDefaultProperties && property.default) {\n      return properties;\n    }\n\n    return properties.concat(property.name);\n  }, []);\n}\n\nfunction is(element, type) {\n  return element && (typeof element.$instanceOf === 'function') && element.$instanceOf(type);\n}","import CopyPasteModule from 'diagram-js/lib/features/copy-paste';\n\nimport BpmnCopyPaste from './BpmnCopyPaste';\nimport ModdleCopy from './ModdleCopy';\n\nexport default {\n  __depends__: [\n    CopyPasteModule\n  ],\n  __init__: [ 'bpmnCopyPaste', 'moddleCopy' ],\n  bpmnCopyPaste: [ 'type', BpmnCopyPaste ],\n  moddleCopy: [ 'type', ModdleCopy ]\n};\n","import { getDi } from '../../util/ModelUtil';\n\nimport {\n  filter,\n  forEach,\n  map\n} from 'min-dash';\n\nimport { selfAndAllChildren } from 'diagram-js/lib/util/Elements';\n\n\nvar HIGH_PRIORITY = 2000;\n\nexport default function BpmnDiOrdering(eventBus, canvas) {\n\n  eventBus.on('saveXML.start', HIGH_PRIORITY, orderDi);\n\n  function orderDi() {\n    var rootElements = canvas.getRootElements();\n\n    forEach(rootElements, function(root) {\n      var rootDi = getDi(root),\n          elements,\n          diElements;\n\n      elements = selfAndAllChildren([ root ], false);\n\n      // only bpmndi:Shape and bpmndi:Edge can be direct children of bpmndi:Plane\n      elements = filter(elements, function(element) {\n        return element !== root && !element.labelTarget;\n      });\n\n      diElements = map(elements, getDi);\n\n      rootDi.set('planeElement', diElements);\n    });\n  }\n}\n\nBpmnDiOrdering.$inject = [ 'eventBus', 'canvas' ];\n","import BpmnDiOrdering from '../di-ordering/BpmnDiOrdering';\n\nexport default {\n  __init__: [\n    'bpmnDiOrdering'\n  ],\n  bpmnDiOrdering: [ 'type', BpmnDiOrdering ]\n};","import {\n  filter\n} from 'min-dash';\n\nimport {\n  isAny\n} from '../modeling/util/ModelingUtil';\n\n\n/**\n * Registers element exclude filters for elements that\n * currently do not support distribution.\n */\nexport default function BpmnDistributeElements(distributeElements) {\n\n  distributeElements.registerFilter(function(elements) {\n    return filter(elements, function(element) {\n      var cannotDistribute = isAny(element, [\n        'bpmn:Association',\n        'bpmn:BoundaryEvent',\n        'bpmn:DataInputAssociation',\n        'bpmn:DataOutputAssociation',\n        'bpmn:Lane',\n        'bpmn:MessageFlow',\n        'bpmn:Participant',\n        'bpmn:SequenceFlow',\n        'bpmn:TextAnnotation'\n      ]);\n\n      return !(element.labelTarget || cannotDistribute);\n    });\n  });\n}\n\nBpmnDistributeElements.$inject = [ 'distributeElements' ];","import DistributeElementsModule from 'diagram-js/lib/features/distribute-elements';\n\nimport BpmnDistributeElements from './BpmnDistributeElements';\n\n\nexport default {\n  __depends__: [\n    DistributeElementsModule\n  ],\n  __init__: [ 'bpmnDistributeElements' ],\n  bpmnDistributeElements: [ 'type', BpmnDistributeElements ]\n};\n","import { domify, classes } from 'min-dom';\nimport { find } from 'min-dash';\n\nimport { escapeHTML } from 'diagram-js/lib/util/EscapeUtil';\nimport { getBusinessObject, is } from '../../util/ModelUtil';\nimport {\n  getPlaneIdFromShape\n} from '../../util/DrilldownUtil';\n\nvar OPEN_CLASS = 'bjs-breadcrumbs-shown';\n\n\n/**\n * Adds overlays that allow switching planes on collapsed subprocesses.\n *\n * @param {eventBus} eventBus\n * @param {elementRegistry} elementRegistry\n * @param {overlays} overlays\n * @param {canvas} canvas\n */\nexport default function DrilldownBreadcrumbs(eventBus, elementRegistry, overlays, canvas) {\n  var breadcrumbs = domify('<ul class=\"bjs-breadcrumbs\"></ul>');\n  var container = canvas.getContainer();\n  var containerClasses = classes(container);\n  container.appendChild(breadcrumbs);\n\n  var boParents = [];\n\n  // update breadcrumbs if name or ID of the primary shape changes\n  eventBus.on('element.changed', function(e) {\n    var shape = e.element,\n        bo = getBusinessObject(shape);\n\n    var isPresent = find(boParents, function(el) {\n      return el === bo;\n    });\n\n    if (!isPresent) {\n      return;\n    }\n\n    updateBreadcrumbs();\n  });\n\n  /**\n   * Updates the displayed breadcrumbs. If no element is provided, only the\n   * labels are updated.\n   *\n   * @param {djs.model.Base} [element]\n   */\n  function updateBreadcrumbs(element) {\n    if (element) {\n      boParents = getBoParentChain(element);\n    }\n\n    var path = boParents.map(function(parent) {\n      var title = escapeHTML(parent.name || parent.id);\n      var link = domify('<li><span class=\"bjs-crumb\"><a title=\"' + title + '\">' + title + '</a></span></li>');\n\n      var parentPlane = canvas.findRoot(getPlaneIdFromShape(parent)) || canvas.findRoot(parent.id);\n\n      // when the root is a collaboration, the process does not have a corresponding\n      // element in the elementRegisty. Instead, we search for the corresponding participant\n      if (!parentPlane && is(parent, 'bpmn:Process')) {\n        var participant = elementRegistry.find(function(element) {\n          var bo = getBusinessObject(element);\n          return bo && bo.processRef && bo.processRef === parent;\n        });\n\n        parentPlane = canvas.findRoot(participant.id);\n      }\n\n      link.addEventListener('click', function() {\n        canvas.setRootElement(parentPlane);\n      });\n\n      return link;\n    });\n\n    breadcrumbs.innerHTML = '';\n\n    // show breadcrumbs and expose state to .djs-container\n    var visible = path.length > 1;\n    containerClasses.toggle(OPEN_CLASS, visible);\n\n    path.forEach(function(el) {\n      breadcrumbs.appendChild(el);\n    });\n  }\n\n  eventBus.on('root.set', function(event) {\n    updateBreadcrumbs(event.element);\n  });\n\n}\n\nDrilldownBreadcrumbs.$inject = [ 'eventBus', 'elementRegistry', 'overlays', 'canvas' ];\n\n\n// helpers //////////\n\n/**\n * Returns the parents for the element using the business object chain,\n * starting with the root element.\n *\n * @param {djs.model.Shape} child\n *\n * @returns {Array<djs.model.Shape>} parents\n */\nfunction getBoParentChain(child) {\n  var bo = getBusinessObject(child);\n\n  var parents = [];\n\n  for (var element = bo; element; element = element.$parent) {\n    if (is(element, 'bpmn:SubProcess') || is(element, 'bpmn:Process')) {\n      parents.push(element);\n    }\n  }\n\n  return parents.reverse();\n}","import { is } from '../../util/ModelUtil';\n\n/**\n * Move collapsed subprocesses into view when drilling down.\n *\n * Zoom and scroll are saved in a session.\n *\n * @param {eventBus} eventBus\n * @param {canvas} canvas\n */\nexport default function DrilldownCentering(eventBus, canvas) {\n\n  var currentRoot = null;\n  var positionMap = new Map();\n\n  eventBus.on('root.set', function(event) {\n    var newRoot = event.element;\n    var currentViewbox = canvas.viewbox();\n    var storedViewbox = positionMap.get(newRoot);\n\n    positionMap.set(currentRoot, {\n      x: currentViewbox.x,\n      y: currentViewbox.y,\n      zoom: currentViewbox.scale\n    });\n\n    currentRoot = newRoot;\n\n    // current root was replaced with a collaboration, we don't update the viewbox\n    if (is(newRoot, 'bpmn:Collaboration') && !storedViewbox) {\n      return;\n    }\n\n    storedViewbox = storedViewbox || { x: 0, y: 0, zoom: 1 };\n\n    var dx = (currentViewbox.x - storedViewbox.x) * currentViewbox.scale,\n        dy = (currentViewbox.y - storedViewbox.y) * currentViewbox.scale;\n\n    if (dx !== 0 || dy !== 0) {\n      canvas.scroll({\n        dx: dx,\n        dy: dy\n      });\n    }\n\n    if (storedViewbox.zoom !== currentViewbox.scale) {\n      canvas.zoom(storedViewbox.zoom, { x: 0, y: 0 });\n    }\n  });\n\n  eventBus.on('diagram.clear', function() {\n    positionMap.clear();\n    currentRoot = null;\n  });\n\n}\n\nDrilldownCentering.$inject = [ 'eventBus', 'canvas' ];\n\n\n/**\n * ES5 Map implementation. Works.\n */\nfunction Map() {\n\n  this._entries = [];\n\n  this.set = function(key, value) {\n\n    var found = false;\n\n    for (var k in this._entries) {\n      if (this._entries[k][0] === key) {\n        this._entries[k][1] = value;\n\n        found = true;\n\n        break;\n      }\n    }\n\n    if (!found) {\n      this._entries.push([ key, value ]);\n    }\n  };\n\n  this.get = function(key) {\n\n    for (var k in this._entries) {\n      if (this._entries[k][0] === key) {\n        return this._entries[k][1];\n      }\n    }\n\n    return null;\n  };\n\n  this.clear = function() {\n    this._entries.length = 0;\n  };\n\n  this.remove = function(key) {\n\n    var idx = -1;\n\n    for (var k in this._entries) {\n      if (this._entries[k][0] === key) {\n        idx = k;\n\n        break;\n      }\n    }\n\n    if (idx !== -1) {\n      this._entries.splice(idx, 1);\n    }\n  };\n}","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from '../../util/ModelUtil';\nimport { classes, domify } from 'min-dom';\nimport { getPlaneIdFromShape } from '../../util/DrilldownUtil';\n\nvar LOW_PRIORITY = 250;\nvar ARROW_DOWN_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M4.81801948,3.50735931 L10.4996894,9.1896894 L10.5,4 L12,4 L12,12 L4,12 L4,10.5 L9.6896894,10.4996894 L3.75735931,4.56801948 C3.46446609,4.27512627 3.46446609,3.80025253 3.75735931,3.50735931 C4.05025253,3.21446609 4.52512627,3.21446609 4.81801948,3.50735931 Z\"/></svg>';\n\nvar EMPTY_MARKER = 'bjs-drilldown-empty';\n\nexport default function DrilldownOverlayBehavior(\n    canvas, eventBus, elementRegistry, overlays\n) {\n  CommandInterceptor.call(this, eventBus);\n\n  this._canvas = canvas;\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n  this._overlays = overlays;\n\n  var self = this;\n\n  this.executed('shape.toggleCollapse', LOW_PRIORITY, function(context) {\n    var shape = context.shape;\n\n    // Add overlay to the collapsed shape\n    if (self.canDrillDown(shape)) {\n      self.addOverlay(shape);\n    } else {\n      self.removeOverlay(shape);\n    }\n  }, true);\n\n\n  this.reverted('shape.toggleCollapse', LOW_PRIORITY, function(context) {\n    var shape = context.shape;\n\n    // Add overlay to the collapsed shape\n    if (self.canDrillDown(shape)) {\n      self.addOverlay(shape);\n    } else {\n      self.removeOverlay(shape);\n    }\n  }, true);\n\n\n  this.executed(['shape.create', 'shape.move', 'shape.delete'], LOW_PRIORITY,\n    function(context) {\n      var oldParent = context.oldParent,\n          newParent = context.newParent || context.parent,\n          shape = context.shape;\n\n      // Add overlay to the collapsed shape\n      if (self.canDrillDown(shape)) {\n        self.addOverlay(shape);\n      }\n\n      self.updateDrilldownOverlay(oldParent);\n      self.updateDrilldownOverlay(newParent);\n      self.updateDrilldownOverlay(shape);\n    }, true);\n\n\n  this.reverted(['shape.create', 'shape.move', 'shape.delete'], LOW_PRIORITY,\n    function(context) {\n      var oldParent = context.oldParent,\n          newParent = context.newParent || context.parent,\n          shape = context.shape;\n\n      // Add overlay to the collapsed shape\n      if (self.canDrillDown(shape)) {\n        self.addOverlay(shape);\n      }\n\n      self.updateDrilldownOverlay(oldParent);\n      self.updateDrilldownOverlay(newParent);\n      self.updateDrilldownOverlay(shape);\n    }, true);\n\n\n  eventBus.on('import.done', function() {\n    elementRegistry.filter(function(e) {\n      return self.canDrillDown(e);\n    }).map(function(el) {\n      self.addOverlay(el);\n    });\n  });\n\n}\n\ninherits(DrilldownOverlayBehavior, CommandInterceptor);\n\nDrilldownOverlayBehavior.prototype.updateDrilldownOverlay = function(shape) {\n  var canvas = this._canvas;\n\n  if (!shape) {\n    return;\n  }\n\n  var root = canvas.findRoot(shape);\n  if (root) {\n    this.updateOverlayVisibility(root);\n  }\n};\n\n\nDrilldownOverlayBehavior.prototype.canDrillDown = function(element) {\n  var canvas = this._canvas;\n  return is(element, 'bpmn:SubProcess') && canvas.findRoot(getPlaneIdFromShape(element));\n};\n\n/**\n * Updates visibility of the drilldown overlay. If the plane has no elements,\n * the drilldown will be only shown when the element is selected.\n *\n * @param {djs.model.Shape|djs.model.Root} element collapsed shape or root element\n */\nDrilldownOverlayBehavior.prototype.updateOverlayVisibility = function(element) {\n  var overlays = this._overlays;\n\n  var bo = element.businessObject;\n\n  var overlay = overlays.get({ element: bo.id, type: 'drilldown' })[0];\n\n  if (!overlay) {\n    return;\n  }\n\n  var hasContent = bo && bo.flowElements && bo.flowElements.length;\n  classes(overlay.html).toggle(EMPTY_MARKER, !hasContent);\n};\n\n/**\n * Attaches a drilldown button to the given element. We assume that the plane has\n * the same id as the element.\n *\n * @param {djs.model.Shape} element collapsed shape\n */\nDrilldownOverlayBehavior.prototype.addOverlay = function(element) {\n  var canvas = this._canvas;\n  var overlays = this._overlays;\n\n  var existingOverlays = overlays.get({ element: element, type: 'drilldown' });\n  if (existingOverlays.length) {\n    this.removeOverlay(element);\n  }\n\n  var button = domify('<button class=\"bjs-drilldown\">' + ARROW_DOWN_SVG + '</button>');\n\n  button.addEventListener('click', function() {\n    canvas.setRootElement(canvas.findRoot(getPlaneIdFromShape(element)));\n  });\n\n  overlays.add(element, 'drilldown', {\n    position: {\n      bottom: -7,\n      right: -8\n    },\n    html: button\n  });\n\n  this.updateOverlayVisibility(element);\n};\n\nDrilldownOverlayBehavior.prototype.removeOverlay = function(element) {\n  var overlays = this._overlays;\n\n  overlays.remove({\n    element: element,\n    type: 'drilldown'\n  });\n};\n\nDrilldownOverlayBehavior.$inject = [\n  'canvas',\n  'eventBus',\n  'elementRegistry',\n  'overlays'\n];","\nimport { asBounds, asTRBL } from 'diagram-js/lib/layout/LayoutUtil';\nimport { is } from '../../util/ModelUtil';\n\nvar DEFAULT_POSITION = {\n  x: 180,\n  y: 160\n};\n\n/**\n * Hook into `import.render.start` and create new planes for diagrams with\n * collapsed subprocesses and all dis on the same plane.\n *\n * @param {eventBus} eventBus\n * @param {moddle} moddle\n */\nexport default function SubprocessCompatibility(eventBus, moddle) {\n  this._eventBus = eventBus;\n  this._moddle = moddle;\n\n  var self = this;\n\n  eventBus.on('import.render.start', 1500, function(e, context) {\n    self.handleImport(context.definitions);\n  });\n}\n\nSubprocessCompatibility.prototype.handleImport = function(definitions) {\n  if (!definitions.diagrams) {\n    return;\n  }\n\n  var self = this;\n  this._definitions = definitions;\n  this._processToDiagramMap = {};\n\n  definitions.diagrams.forEach(function(diagram) {\n    if (!diagram.plane || !diagram.plane.bpmnElement) {\n      return;\n    }\n\n    self._processToDiagramMap[diagram.plane.bpmnElement.id] = diagram;\n  });\n\n  var newDiagrams = [];\n  definitions.diagrams.forEach(function(diagram) {\n    var createdDiagrams = self.createNewDiagrams(diagram.plane);\n    Array.prototype.push.apply(newDiagrams, createdDiagrams);\n  });\n\n  newDiagrams.forEach(function(diagram) {\n    self.movePlaneElementsToOrigin(diagram.plane);\n  });\n};\n\n\n/**\n * Moves all DI elements from collapsed subprocesses to a new plane.\n *\n * @param {Object} plane\n * @return {Array} new diagrams created for the collapsed subprocesses\n */\nSubprocessCompatibility.prototype.createNewDiagrams = function(plane) {\n  var self = this;\n\n  var collapsedElements = [];\n  var elementsToMove = [];\n\n  plane.get('planeElement').forEach(function(diElement) {\n    var bo = diElement.bpmnElement;\n\n    if (!bo) {\n      return;\n    }\n\n    var parent = bo.$parent;\n\n    if (is(bo, 'bpmn:SubProcess') && !diElement.isExpanded) {\n      collapsedElements.push(bo);\n    }\n\n    if (is(parent, 'bpmn:SubProcess') && parent !== plane.bpmnElement) {\n\n      // don't change the array while we iterate over it\n      elementsToMove.push({ diElement: diElement, parent: parent });\n    }\n  });\n\n  var newDiagrams = [];\n\n  // create new planes for all collapsed subprocesses, even when they are empty\n  collapsedElements.forEach(function(element) {\n    if (!self._processToDiagramMap[element.id]) {\n      var diagram = self.createDiagram(element);\n      self._processToDiagramMap[element.id] = diagram;\n      newDiagrams.push(diagram);\n    }\n  });\n\n  elementsToMove.forEach(function(element) {\n    var diElement = element.diElement;\n    var parent = element.parent;\n\n    // parent is expanded, get nearest collapsed parent\n    while (parent && collapsedElements.indexOf(parent) === -1) {\n      parent = parent.$parent;\n    }\n\n    // false positive, all parents are expanded\n    if (!parent) {\n      return;\n    }\n\n    var diagram = self._processToDiagramMap[parent.id];\n    self.moveToDiPlane(diElement, diagram.plane);\n  });\n\n  return newDiagrams;\n};\n\nSubprocessCompatibility.prototype.movePlaneElementsToOrigin = function(plane) {\n  var elements = plane.get('planeElement');\n\n  // get bounding box of all elements\n  var planeBounds = getPlaneBounds(plane);\n\n  var offset = {\n    x: planeBounds.x - DEFAULT_POSITION.x,\n    y: planeBounds.y - DEFAULT_POSITION.y\n  };\n\n  elements.forEach(function(diElement) {\n    if (diElement.waypoint) {\n      diElement.waypoint.forEach(function(waypoint) {\n        waypoint.x = waypoint.x - offset.x;\n        waypoint.y = waypoint.y - offset.y;\n      });\n    } else if (diElement.bounds) {\n      diElement.bounds.x = diElement.bounds.x - offset.x;\n      diElement.bounds.y = diElement.bounds.y - offset.y;\n    }\n  });\n};\n\n\nSubprocessCompatibility.prototype.moveToDiPlane = function(diElement, newPlane) {\n  var containingDiagram = findRootDiagram(diElement);\n\n  // remove DI from old Plane and add it to the new one\n  var parentPlaneElement = containingDiagram.plane.get('planeElement');\n  parentPlaneElement.splice(parentPlaneElement.indexOf(diElement), 1);\n  newPlane.get('planeElement').push(diElement);\n};\n\n\nSubprocessCompatibility.prototype.createDiagram = function(bo) {\n  var plane = this._moddle.create('bpmndi:BPMNPlane', { bpmnElement: bo });\n  var diagram = this._moddle.create('bpmndi:BPMNDiagram', {\n    plane: plane\n  });\n  plane.$parent = diagram;\n  plane.bpmnElement = bo;\n  diagram.$parent = this._definitions;\n  this._definitions.diagrams.push(diagram);\n  return diagram;\n};\n\nSubprocessCompatibility.$inject = [ 'eventBus', 'moddle' ];\n\n\n// helpers\n\nfunction findRootDiagram(element) {\n  if (is(element, 'bpmndi:BPMNDiagram')) {\n    return element;\n  } else {\n    return findRootDiagram(element.$parent);\n  }\n}\n\nfunction getPlaneBounds(plane) {\n  var planeTrbl = {\n    top: Infinity,\n    right: -Infinity,\n    bottom: -Infinity,\n    left: Infinity\n  };\n\n  plane.planeElement.forEach(function(element) {\n    if (!element.bounds) {\n      return;\n    }\n\n    var trbl = asTRBL(element.bounds);\n\n    planeTrbl.top = Math.min(trbl.top, planeTrbl.top);\n    planeTrbl.left = Math.min(trbl.left, planeTrbl.left);\n  });\n\n  return asBounds(planeTrbl);\n}\n","import OverlaysModule from 'diagram-js/lib/features/overlays';\nimport ChangeSupportModule from 'diagram-js/lib/features/change-support';\nimport RootElementsModule from 'diagram-js/lib/features/root-elements';\n\nimport DrilldownBreadcrumbs from './DrilldownBreadcrumbs';\nimport DrilldownCentering from './DrilldownCentering';\nimport SubprocessCompatibility from './SubprocessCompatibility';\nimport DrilldownOverlayBehavior from './DrilldownOverlayBehavior';\n\nexport default {\n  __depends__: [ OverlaysModule, ChangeSupportModule, RootElementsModule ],\n  __init__: [ 'drilldownBreadcrumbs', 'drilldownOverlayBehavior', 'drilldownCentering', 'subprocessCompatibility'],\n  drilldownBreadcrumbs: [ 'type', DrilldownBreadcrumbs ],\n  drilldownCentering: [ 'type', DrilldownCentering ],\n  drilldownOverlayBehavior: [ 'type', DrilldownOverlayBehavior ],\n  subprocessCompatibility: [ 'type', SubprocessCompatibility ]\n};","import inherits from 'inherits';\n\nimport EditorActions from 'diagram-js/lib/features/editor-actions/EditorActions';\n\nimport { filter } from 'min-dash';\n\nimport { is } from '../../util/ModelUtil';\n\nimport {\n  getBBox\n} from 'diagram-js/lib/util/Elements';\n\n\n/**\n * Registers and executes BPMN specific editor actions.\n *\n * @param {Injector} injector\n */\nexport default function BpmnEditorActions(injector) {\n  injector.invoke(EditorActions, this);\n}\n\ninherits(BpmnEditorActions, EditorActions);\n\nBpmnEditorActions.$inject = [\n  'injector'\n];\n\n/**\n * Register default actions.\n *\n * @param {Injector} injector\n */\nBpmnEditorActions.prototype._registerDefaultActions = function(injector) {\n\n  // (0) invoke super method\n\n  EditorActions.prototype._registerDefaultActions.call(this, injector);\n\n  // (1) retrieve optional components to integrate with\n\n  var canvas = injector.get('canvas', false);\n  var elementRegistry = injector.get('elementRegistry', false);\n  var selection = injector.get('selection', false);\n  var spaceTool = injector.get('spaceTool', false);\n  var lassoTool = injector.get('lassoTool', false);\n  var handTool = injector.get('handTool', false);\n  var globalConnect = injector.get('globalConnect', false);\n  var distributeElements = injector.get('distributeElements', false);\n  var alignElements = injector.get('alignElements', false);\n  var directEditing = injector.get('directEditing', false);\n  var searchPad = injector.get('searchPad', false);\n  var modeling = injector.get('modeling', false);\n\n  // (2) check components and register actions\n\n  if (canvas && elementRegistry && selection) {\n    this._registerAction('selectElements', function() {\n\n      // select all elements except for the invisible\n      // root element\n      var rootElement = canvas.getRootElement();\n\n      var elements = elementRegistry.filter(function(element) {\n        return element !== rootElement;\n      });\n\n      selection.select(elements);\n\n      return elements;\n    });\n  }\n\n  if (spaceTool) {\n    this._registerAction('spaceTool', function() {\n      spaceTool.toggle();\n    });\n  }\n\n  if (lassoTool) {\n    this._registerAction('lassoTool', function() {\n      lassoTool.toggle();\n    });\n  }\n\n  if (handTool) {\n    this._registerAction('handTool', function() {\n      handTool.toggle();\n    });\n  }\n\n  if (globalConnect) {\n    this._registerAction('globalConnectTool', function() {\n      globalConnect.toggle();\n    });\n  }\n\n  if (selection && distributeElements) {\n    this._registerAction('distributeElements', function(opts) {\n      var currentSelection = selection.get(),\n          type = opts.type;\n\n      if (currentSelection.length) {\n        distributeElements.trigger(currentSelection, type);\n      }\n    });\n  }\n\n  if (selection && alignElements) {\n    this._registerAction('alignElements', function(opts) {\n      var currentSelection = selection.get(),\n          aligneableElements = [],\n          type = opts.type;\n\n      if (currentSelection.length) {\n        aligneableElements = filter(currentSelection, function(element) {\n          return !is(element, 'bpmn:Lane');\n        });\n\n        alignElements.trigger(aligneableElements, type);\n      }\n    });\n  }\n\n  if (selection && modeling) {\n    this._registerAction('setColor', function(opts) {\n      var currentSelection = selection.get();\n\n      if (currentSelection.length) {\n        modeling.setColor(currentSelection, opts);\n      }\n    });\n  }\n\n  if (selection && directEditing) {\n    this._registerAction('directEditing', function() {\n      var currentSelection = selection.get();\n\n      if (currentSelection.length) {\n        directEditing.activate(currentSelection[0]);\n      }\n    });\n  }\n\n  if (searchPad) {\n    this._registerAction('find', function() {\n      searchPad.toggle();\n    });\n  }\n\n  if (canvas && modeling) {\n    this._registerAction('moveToOrigin', function() {\n      var rootElement = canvas.getRootElement(),\n          boundingBox,\n          elements;\n\n      if (is(rootElement, 'bpmn:Collaboration')) {\n        elements = elementRegistry.filter(function(element) {\n          return is(element.parent, 'bpmn:Collaboration');\n        });\n      } else {\n        elements = elementRegistry.filter(function(element) {\n          return element !== rootElement && !is(element.parent, 'bpmn:SubProcess');\n        });\n      }\n\n      boundingBox = getBBox(elements);\n\n      modeling.moveElements(\n        elements,\n        { x: -boundingBox.x, y: -boundingBox.y },\n        rootElement\n      );\n    });\n  }\n\n};","import EditorActionsModule from 'diagram-js/lib/features/editor-actions';\n\nimport BpmnEditorActions from './BpmnEditorActions';\n\nexport default {\n  __depends__: [\n    EditorActionsModule\n  ],\n  editorActions: [ 'type', BpmnEditorActions ]\n};\n","import { isAny } from '../modeling/util/ModelingUtil';\r\n\r\nexport default function BpmnGridSnapping(eventBus) {\r\n  eventBus.on([\r\n    'create.init',\r\n    'shape.move.init'\r\n  ], function(event) {\r\n    var context = event.context,\r\n        shape = event.shape;\r\n\r\n    if (isAny(shape, [\r\n      'bpmn:Participant',\r\n      'bpmn:SubProcess',\r\n      'bpmn:TextAnnotation'\r\n    ])) {\r\n      if (!context.gridSnappingContext) {\r\n        context.gridSnappingContext = {};\r\n      }\r\n\r\n      context.gridSnappingContext.snapLocation = 'top-left';\r\n    }\r\n  });\r\n}\r\n\r\nBpmnGridSnapping.$inject = [ 'eventBus' ];","import { getNewShapePosition } from '../../auto-place/BpmnAutoPlaceUtil';\r\n\r\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nvar HIGH_PRIORITY = 2000;\r\n\r\n\r\nexport default function AutoPlaceBehavior(eventBus, gridSnapping) {\r\n  eventBus.on('autoPlace', HIGH_PRIORITY, function(context) {\r\n    var source = context.source,\r\n        sourceMid = getMid(source),\r\n        shape = context.shape;\r\n\r\n    var position = getNewShapePosition(source, shape);\r\n\r\n    [ 'x', 'y' ].forEach(function(axis) {\r\n      var options = {};\r\n\r\n      // do not snap if x/y equal\r\n      if (position[ axis ] === sourceMid[ axis ]) {\r\n        return;\r\n      }\r\n\r\n      if (position[ axis ] > sourceMid[ axis ]) {\r\n        options.min = position[ axis ];\r\n      } else {\r\n        options.max = position[ axis ];\r\n      }\r\n\r\n      if (is(shape, 'bpmn:TextAnnotation')) {\r\n\r\n        if (isHorizontal(axis)) {\r\n          options.offset = -shape.width / 2;\r\n        } else {\r\n          options.offset = -shape.height / 2;\r\n        }\r\n\r\n      }\r\n\r\n      position[ axis ] = gridSnapping.snapValue(position[ axis ], options);\r\n\r\n    });\r\n\r\n    // must be returned to be considered by auto place\r\n    return position;\r\n  });\r\n}\r\n\r\nAutoPlaceBehavior.$inject = [\r\n  'eventBus',\r\n  'gridSnapping'\r\n];\r\n\r\n// helpers //////////\r\n\r\nfunction isHorizontal(axis) {\r\n  return axis === 'x';\r\n}","import { is } from '../../../util/ModelUtil';\r\n\r\nvar HIGHER_PRIORITY = 1750;\r\n\r\n\r\nexport default function CreateParticipantBehavior(canvas, eventBus, gridSnapping) {\r\n  eventBus.on([\r\n    'create.start',\r\n    'shape.move.start'\r\n  ], HIGHER_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        rootElement = canvas.getRootElement();\r\n\r\n    if (!is(shape, 'bpmn:Participant') ||\r\n      !is(rootElement, 'bpmn:Process') ||\r\n      !rootElement.children.length) {\r\n      return;\r\n    }\r\n\r\n    var createConstraints = context.createConstraints;\r\n\r\n    if (!createConstraints) {\r\n      return;\r\n    }\r\n\r\n    shape.width = gridSnapping.snapValue(shape.width, { min: shape.width });\r\n    shape.height = gridSnapping.snapValue(shape.height, { min: shape.height });\r\n  });\r\n}\r\n\r\nCreateParticipantBehavior.$inject = [\r\n  'canvas',\r\n  'eventBus',\r\n  'gridSnapping'\r\n];","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { pointsAligned } from 'diagram-js/lib/util/Geometry';\n\nimport {\n  assign\n} from 'min-dash';\n\nvar HIGH_PRIORITY = 3000;\n\n\n/**\n * Snaps connections with Manhattan layout.\n */\nexport default function LayoutConnectionBehavior(eventBus, gridSnapping, modeling) {\n  CommandInterceptor.call(this, eventBus);\n\n  this._gridSnapping = gridSnapping;\n\n  var self = this;\n\n  this.postExecuted([\n    'connection.create',\n    'connection.layout'\n  ], HIGH_PRIORITY, function(event) {\n    var context = event.context,\n        connection = context.connection,\n        hints = context.hints || {},\n        waypoints = connection.waypoints;\n\n    if (hints.connectionStart || hints.connectionEnd || hints.createElementsBehavior === false) {\n      return;\n    }\n\n    if (!hasMiddleSegments(waypoints)) {\n      return;\n    }\n\n    modeling.updateWaypoints(connection, self.snapMiddleSegments(waypoints));\n  });\n}\n\nLayoutConnectionBehavior.$inject = [\n  'eventBus',\n  'gridSnapping',\n  'modeling'\n];\n\ninherits(LayoutConnectionBehavior, CommandInterceptor);\n\n/**\n * Snap middle segments of a given connection.\n *\n * @param {Array<Point>} waypoints\n *\n * @returns {Array<Point>}\n */\nLayoutConnectionBehavior.prototype.snapMiddleSegments = function(waypoints) {\n  var gridSnapping = this._gridSnapping,\n      snapped;\n\n  waypoints = waypoints.slice();\n\n  for (var i = 1; i < waypoints.length - 2; i++) {\n\n    snapped = snapSegment(gridSnapping, waypoints[i], waypoints[i + 1]);\n\n    waypoints[i] = snapped[0];\n    waypoints[i + 1] = snapped[1];\n  }\n\n  return waypoints;\n};\n\n\n// helpers //////////\n\n/**\n * Check whether a connection has a middle segments.\n *\n * @param {Array} waypoints\n *\n * @returns {boolean}\n */\nfunction hasMiddleSegments(waypoints) {\n  return waypoints.length > 3;\n}\n\n/**\n * Check whether an alignment is horizontal.\n *\n * @param {string} aligned\n *\n * @returns {boolean}\n */\nfunction horizontallyAligned(aligned) {\n  return aligned === 'h';\n}\n\n/**\n * Check whether an alignment is vertical.\n *\n * @param {string} aligned\n *\n * @returns {boolean}\n */\nfunction verticallyAligned(aligned) {\n  return aligned === 'v';\n}\n\n/**\n * Get middle segments from a given connection.\n *\n * @param {Array} waypoints\n *\n * @returns {Array}\n */\nfunction snapSegment(gridSnapping, segmentStart, segmentEnd) {\n\n  var aligned = pointsAligned(segmentStart, segmentEnd);\n\n  var snapped = {};\n\n  if (horizontallyAligned(aligned)) {\n\n    // snap horizontally\n    snapped.y = gridSnapping.snapValue(segmentStart.y);\n  }\n\n  if (verticallyAligned(aligned)) {\n\n    // snap vertically\n    snapped.x = gridSnapping.snapValue(segmentStart.x);\n  }\n\n  if ('x' in snapped || 'y' in snapped) {\n    segmentStart = assign({}, segmentStart, snapped);\n    segmentEnd = assign({}, segmentEnd, snapped);\n  }\n\n  return [ segmentStart, segmentEnd ];\n}","import AutoPlaceBehavior from './AutoPlaceBehavior';\r\nimport CreateParticipantBehavior from './CreateParticipantBehavior';\r\nimport LayoutConnectionBehavior from './LayoutConnectionBehavior';\r\n\r\nexport default {\r\n  __init__: [\r\n    'gridSnappingAutoPlaceBehavior',\r\n    'gridSnappingCreateParticipantBehavior',\r\n    'gridSnappingLayoutConnectionBehavior',\r\n  ],\r\n  gridSnappingAutoPlaceBehavior: [ 'type', AutoPlaceBehavior ],\r\n  gridSnappingCreateParticipantBehavior: [ 'type', CreateParticipantBehavior ],\r\n  gridSnappingLayoutConnectionBehavior: [ 'type', LayoutConnectionBehavior ]\r\n};","import BpmnGridSnapping from './BpmnGridSnapping';\r\nimport GridSnappingModule from 'diagram-js/lib/features/grid-snapping';\r\n\r\nimport GridSnappingBehaviorModule from './behavior';\r\n\r\nexport default {\r\n  __depends__: [\r\n    GridSnappingModule,\r\n    GridSnappingBehaviorModule\r\n  ],\r\n  __init__: [ 'bpmnGridSnapping' ],\r\n  bpmnGridSnapping: [ 'type', BpmnGridSnapping ]\r\n};","import { is } from '../../util/ModelUtil';\n\nimport { isExpanded } from '../../util/DiUtil';\n\nvar LABEL_WIDTH = 30,\n    LABEL_HEIGHT = 30;\n\n\n/**\n * BPMN-specific hit zones and interaction fixes.\n *\n * @param {EventBus} eventBus\n * @param {InteractionEvents} interactionEvents\n */\nexport default function BpmnInteractionEvents(eventBus, interactionEvents) {\n\n  this._interactionEvents = interactionEvents;\n\n  var self = this;\n\n  eventBus.on([\n    'interactionEvents.createHit',\n    'interactionEvents.updateHit'\n  ], function(context) {\n    var element = context.element,\n        gfx = context.gfx;\n\n    if (is(element, 'bpmn:Lane')) {\n      return self.createParticipantHit(element, gfx);\n    } else\n\n    if (is(element, 'bpmn:Participant')) {\n      if (isExpanded(element)) {\n        return self.createParticipantHit(element, gfx);\n      } else {\n        return self.createDefaultHit(element, gfx);\n      }\n    } else\n\n    if (is(element, 'bpmn:SubProcess')) {\n      if (isExpanded(element)) {\n        return self.createSubProcessHit(element, gfx);\n      } else {\n        return self.createDefaultHit(element, gfx);\n      }\n    }\n  });\n\n}\n\nBpmnInteractionEvents.$inject = [\n  'eventBus',\n  'interactionEvents'\n];\n\n\nBpmnInteractionEvents.prototype.createDefaultHit = function(element, gfx) {\n  this._interactionEvents.removeHits(gfx);\n\n  this._interactionEvents.createDefaultHit(element, gfx);\n\n  // indicate that we created a hit\n  return true;\n};\n\nBpmnInteractionEvents.prototype.createParticipantHit = function(element, gfx) {\n\n  // remove existing hits\n  this._interactionEvents.removeHits(gfx);\n\n  // add outline hit\n  this._interactionEvents.createBoxHit(gfx, 'click-stroke', {\n    width: element.width,\n    height: element.height\n  });\n\n  // add label hit\n  this._interactionEvents.createBoxHit(gfx, 'all', {\n    width: LABEL_WIDTH,\n    height: element.height\n  });\n\n  // indicate that we created a hit\n  return true;\n};\n\nBpmnInteractionEvents.prototype.createSubProcessHit = function(element, gfx) {\n\n  // remove existing hits\n  this._interactionEvents.removeHits(gfx);\n\n  // add outline hit\n  this._interactionEvents.createBoxHit(gfx, 'click-stroke', {\n    width: element.width,\n    height: element.height\n  });\n\n  // add label hit\n  this._interactionEvents.createBoxHit(gfx, 'all', {\n    width: element.width,\n    height: LABEL_HEIGHT\n  });\n\n  // indicate that we created a hit\n  return true;\n};","import BpmnInteractionEvents from './BpmnInteractionEvents';\n\nexport default {\n  __init__: [ 'bpmnInteractionEvents' ],\n  bpmnInteractionEvents: [ 'type', BpmnInteractionEvents ]\n};","import inherits from 'inherits';\n\nimport KeyboardBindings from 'diagram-js/lib/features/keyboard/KeyboardBindings';\n\n\n/**\n * BPMN 2.0 specific keyboard bindings.\n *\n * @param {Injector} injector\n */\nexport default function BpmnKeyboardBindings(injector) {\n  injector.invoke(KeyboardBindings, this);\n}\n\ninherits(BpmnKeyboardBindings, KeyboardBindings);\n\nBpmnKeyboardBindings.$inject = [\n  'injector'\n];\n\n\n/**\n * Register available keyboard bindings.\n *\n * @param {Keyboard} keyboard\n * @param {EditorActions} editorActions\n */\nBpmnKeyboardBindings.prototype.registerBindings = function(keyboard, editorActions) {\n\n  // inherit default bindings\n  KeyboardBindings.prototype.registerBindings.call(this, keyboard, editorActions);\n\n  /**\n   * Add keyboard binding if respective editor action\n   * is registered.\n   *\n   * @param {string} action name\n   * @param {Function} fn that implements the key binding\n   */\n  function addListener(action, fn) {\n\n    if (editorActions.isRegistered(action)) {\n      keyboard.addListener(fn);\n    }\n  }\n\n  // select all elements\n  // CTRL + A\n  addListener('selectElements', function(context) {\n\n    var event = context.keyEvent;\n\n    if (keyboard.isKey(['a', 'A'], event) && keyboard.isCmd(event)) {\n      editorActions.trigger('selectElements');\n\n      return true;\n    }\n  });\n\n  // search labels\n  // CTRL + F\n  addListener('find', function(context) {\n\n    var event = context.keyEvent;\n\n    if (keyboard.isKey(['f', 'F'], event) && keyboard.isCmd(event)) {\n      editorActions.trigger('find');\n\n      return true;\n    }\n  });\n\n  // activate space tool\n  // S\n  addListener('spaceTool', function(context) {\n\n    var event = context.keyEvent;\n\n    if (keyboard.hasModifier(event)) {\n      return;\n    }\n\n    if (keyboard.isKey(['s', 'S'], event)) {\n      editorActions.trigger('spaceTool');\n\n      return true;\n    }\n  });\n\n  // activate lasso tool\n  // L\n  addListener('lassoTool', function(context) {\n\n    var event = context.keyEvent;\n\n    if (keyboard.hasModifier(event)) {\n      return;\n    }\n\n    if (keyboard.isKey(['l', 'L'], event)) {\n      editorActions.trigger('lassoTool');\n\n      return true;\n    }\n  });\n\n  // activate hand tool\n  // H\n  addListener('handTool', function(context) {\n\n    var event = context.keyEvent;\n\n    if (keyboard.hasModifier(event)) {\n      return;\n    }\n\n    if (keyboard.isKey(['h', 'H'], event)) {\n      editorActions.trigger('handTool');\n\n      return true;\n    }\n  });\n\n  // activate global connect tool\n  // C\n  addListener('globalConnectTool', function(context) {\n\n    var event = context.keyEvent;\n\n    if (keyboard.hasModifier(event)) {\n      return;\n    }\n\n    if (keyboard.isKey(['c', 'C'], event)) {\n      editorActions.trigger('globalConnectTool');\n\n      return true;\n    }\n  });\n\n  // activate direct editing\n  // E\n  addListener('directEditing', function(context) {\n\n    var event = context.keyEvent;\n\n    if (keyboard.hasModifier(event)) {\n      return;\n    }\n\n    if (keyboard.isKey(['e', 'E'], event)) {\n      editorActions.trigger('directEditing');\n\n      return true;\n    }\n  });\n\n};","import KeyboardModule from 'diagram-js/lib/features/keyboard';\n\nimport BpmnKeyboardBindings from './BpmnKeyboardBindings';\n\nexport default {\n  __depends__: [\n    KeyboardModule\n  ],\n  __init__: [ 'keyboardBindings' ],\n  keyboardBindings: [ 'type', BpmnKeyboardBindings ]\n};\n","import {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  getDi,\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  translate\n} from 'diagram-js/lib/util/SvgTransformUtil';\n\nvar MARKER_HIDDEN = 'djs-element-hidden',\n    MARKER_LABEL_HIDDEN = 'djs-label-hidden';\n\n\nexport default function LabelEditingPreview(\n    eventBus, canvas, elementRegistry,\n    pathMap) {\n\n  var self = this;\n\n  var defaultLayer = canvas.getDefaultLayer();\n\n  var element, absoluteElementBBox, gfx;\n\n  eventBus.on('directEditing.activate', function(context) {\n    var activeProvider = context.active;\n\n    element = activeProvider.element.label || activeProvider.element;\n\n    // text annotation\n    if (is(element, 'bpmn:TextAnnotation')) {\n      absoluteElementBBox = canvas.getAbsoluteBBox(element);\n\n      gfx = svgCreate('g');\n\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n\n      var path = self.path = svgCreate('path');\n\n      svgAttr(path, {\n        d: textPathData,\n        strokeWidth: 2,\n        stroke: getStrokeColor(element)\n      });\n\n      svgAppend(gfx, path);\n\n      svgAppend(defaultLayer, gfx);\n\n      translate(gfx, element.x, element.y);\n    }\n\n    if (is(element, 'bpmn:TextAnnotation') ||\n        element.labelTarget) {\n      canvas.addMarker(element, MARKER_HIDDEN);\n    } else if (is(element, 'bpmn:Task') ||\n               is(element, 'bpmn:CallActivity') ||\n               is(element, 'bpmn:SubProcess') ||\n               is(element, 'bpmn:Participant')) {\n      canvas.addMarker(element, MARKER_LABEL_HIDDEN);\n    }\n  });\n\n  eventBus.on('directEditing.resize', function(context) {\n\n    // text annotation\n    if (is(element, 'bpmn:TextAnnotation')) {\n      var height = context.height,\n          dy = context.dy;\n\n      var newElementHeight = Math.max(element.height / absoluteElementBBox.height * (height + dy), 0);\n\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: newElementHeight,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n\n      svgAttr(self.path, {\n        d: textPathData\n      });\n    }\n  });\n\n  eventBus.on([ 'directEditing.complete', 'directEditing.cancel' ], function(context) {\n    var activeProvider = context.active;\n\n    if (activeProvider) {\n      canvas.removeMarker(activeProvider.element.label || activeProvider.element, MARKER_HIDDEN);\n      canvas.removeMarker(element, MARKER_LABEL_HIDDEN);\n    }\n\n    element = undefined;\n    absoluteElementBBox = undefined;\n\n    if (gfx) {\n      svgRemove(gfx);\n\n      gfx = undefined;\n    }\n  });\n}\n\nLabelEditingPreview.$inject = [\n  'eventBus',\n  'canvas',\n  'elementRegistry',\n  'pathMap'\n];\n\n\n// helpers ///////////////////\n\nfunction getStrokeColor(element, defaultColor) {\n  var di = getDi(element);\n\n  return di.get('stroke') || defaultColor || 'black';\n}","import {\n  assign\n} from 'min-dash';\n\nimport {\n  getLabel\n} from './LabelUtil';\n\nimport {\n  getBusinessObject,\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  createCategoryValue\n} from '../modeling/behavior/util/CategoryUtil';\n\nimport { isAny } from '../modeling/util/ModelingUtil';\nimport { isExpanded } from '../../util/DiUtil';\n\nimport {\n  getExternalLabelMid,\n  isLabelExternal,\n  hasExternalLabel,\n  isLabel\n} from '../../util/LabelUtil';\n\n\nexport default function LabelEditingProvider(\n    eventBus, bpmnFactory, canvas, directEditing,\n    modeling, resizeHandles, textRenderer) {\n\n  this._bpmnFactory = bpmnFactory;\n  this._canvas = canvas;\n  this._modeling = modeling;\n  this._textRenderer = textRenderer;\n\n  directEditing.registerProvider(this);\n\n  // listen to dblclick on non-root elements\n  eventBus.on('element.dblclick', function(event) {\n    activateDirectEdit(event.element, true);\n  });\n\n  // complete on followup canvas operation\n  eventBus.on([\n    'autoPlace.start',\n    'canvas.viewbox.changing',\n    'drag.init',\n    'element.mousedown',\n    'popupMenu.open',\n    'root.set'\n  ], function(event) {\n\n    if (directEditing.isActive()) {\n      directEditing.complete();\n    }\n  });\n\n  // cancel on command stack changes\n  eventBus.on([ 'commandStack.changed' ], function(e) {\n    if (directEditing.isActive()) {\n      directEditing.cancel();\n    }\n  });\n\n\n  eventBus.on('directEditing.activate', function(event) {\n    resizeHandles.removeResizers();\n  });\n\n  eventBus.on('create.end', 500, function(event) {\n\n    var context = event.context,\n        element = context.shape,\n        canExecute = event.context.canExecute,\n        isTouch = event.isTouch;\n\n    // TODO(nikku): we need to find a way to support the\n    // direct editing on mobile devices; right now this will\n    // break for desworkflowediting on mobile devices\n    // as it breaks the user interaction workflow\n\n    // TODO(nre): we should temporarily focus the edited element\n    // here and release the focused viewport after the direct edit\n    // operation is finished\n    if (isTouch) {\n      return;\n    }\n\n    if (!canExecute) {\n      return;\n    }\n\n    if (context.hints && context.hints.createElementsBehavior === false) {\n      return;\n    }\n\n    activateDirectEdit(element);\n  });\n\n  eventBus.on('autoPlace.end', 500, function(event) {\n    activateDirectEdit(event.shape);\n  });\n\n\n  function activateDirectEdit(element, force) {\n    if (force ||\n        isAny(element, [ 'bpmn:Task', 'bpmn:TextAnnotation' ]) ||\n        isCollapsedSubProcess(element)) {\n\n      directEditing.activate(element);\n    }\n  }\n\n}\n\nLabelEditingProvider.$inject = [\n  'eventBus',\n  'bpmnFactory',\n  'canvas',\n  'directEditing',\n  'modeling',\n  'resizeHandles',\n  'textRenderer'\n];\n\n\n/**\n * Activate direct editing for activities and text annotations.\n *\n * @param  {djs.model.Base} element\n *\n * @return {Object} an object with properties bounds (position and size), text and options\n */\nLabelEditingProvider.prototype.activate = function(element) {\n\n  // text\n  var text = getLabel(element);\n\n  if (text === undefined) {\n    return;\n  }\n\n  var context = {\n    text: text\n  };\n\n  // bounds\n  var bounds = this.getEditingBBox(element);\n\n  assign(context, bounds);\n\n  var options = {};\n\n  // tasks\n  if (\n    isAny(element, [\n      'bpmn:Task',\n      'bpmn:Participant',\n      'bpmn:Lane',\n      'bpmn:CallActivity'\n    ]) ||\n    isCollapsedSubProcess(element)\n  ) {\n    assign(options, {\n      centerVertically: true\n    });\n  }\n\n  // external labels\n  if (isLabelExternal(element)) {\n    assign(options, {\n      autoResize: true\n    });\n  }\n\n  // text annotations\n  if (is(element, 'bpmn:TextAnnotation')) {\n    assign(options, {\n      resizable: true,\n      autoResize: true\n    });\n  }\n\n  assign(context, {\n    options: options\n  });\n\n  return context;\n};\n\n\n/**\n * Get the editing bounding box based on the element's size and position\n *\n * @param  {djs.model.Base} element\n *\n * @return {Object} an object containing information about position\n *                  and size (fixed or minimum and/or maximum)\n */\nLabelEditingProvider.prototype.getEditingBBox = function(element) {\n  var canvas = this._canvas;\n\n  var target = element.label || element;\n\n  var bbox = canvas.getAbsoluteBBox(target);\n\n  var mid = {\n    x: bbox.x + bbox.width / 2,\n    y: bbox.y + bbox.height / 2\n  };\n\n  // default position\n  var bounds = { x: bbox.x, y: bbox.y };\n\n  var zoom = canvas.zoom();\n\n  var defaultStyle = this._textRenderer.getDefaultStyle(),\n      externalStyle = this._textRenderer.getExternalStyle();\n\n  // take zoom into account\n  var externalFontSize = externalStyle.fontSize * zoom,\n      externalLineHeight = externalStyle.lineHeight,\n      defaultFontSize = defaultStyle.fontSize * zoom,\n      defaultLineHeight = defaultStyle.lineHeight;\n\n  var style = {\n    fontFamily: this._textRenderer.getDefaultStyle().fontFamily,\n    fontWeight: this._textRenderer.getDefaultStyle().fontWeight\n  };\n\n  // adjust for expanded pools AND lanes\n  if (is(element, 'bpmn:Lane') || isExpandedPool(element)) {\n\n    assign(bounds, {\n      width: bbox.height,\n      height: 30 * zoom,\n      x: bbox.x - bbox.height / 2 + (15 * zoom),\n      y: mid.y - (30 * zoom) / 2\n    });\n\n    assign(style, {\n      fontSize: defaultFontSize + 'px',\n      lineHeight: defaultLineHeight,\n      paddingTop: (7 * zoom) + 'px',\n      paddingBottom: (7 * zoom) + 'px',\n      paddingLeft: (5 * zoom) + 'px',\n      paddingRight: (5 * zoom) + 'px',\n      transform: 'rotate(-90deg)'\n    });\n  }\n\n\n  // internal labels for tasks and collapsed call activities,\n  // sub processes and participants\n  if (isAny(element, [ 'bpmn:Task', 'bpmn:CallActivity']) ||\n      isCollapsedPool(element) ||\n      isCollapsedSubProcess(element)) {\n\n    assign(bounds, {\n      width: bbox.width,\n      height: bbox.height\n    });\n\n    assign(style, {\n      fontSize: defaultFontSize + 'px',\n      lineHeight: defaultLineHeight,\n      paddingTop: (7 * zoom) + 'px',\n      paddingBottom: (7 * zoom) + 'px',\n      paddingLeft: (5 * zoom) + 'px',\n      paddingRight: (5 * zoom) + 'px'\n    });\n  }\n\n\n  // internal labels for expanded sub processes\n  if (isExpandedSubProcess(element)) {\n    assign(bounds, {\n      width: bbox.width,\n      x: bbox.x\n    });\n\n    assign(style, {\n      fontSize: defaultFontSize + 'px',\n      lineHeight: defaultLineHeight,\n      paddingTop: (7 * zoom) + 'px',\n      paddingBottom: (7 * zoom) + 'px',\n      paddingLeft: (5 * zoom) + 'px',\n      paddingRight: (5 * zoom) + 'px'\n    });\n  }\n\n  var width = 90 * zoom,\n      paddingTop = 7 * zoom,\n      paddingBottom = 4 * zoom;\n\n  // external labels for events, data elements, gateways, groups and connections\n  if (target.labelTarget) {\n    assign(bounds, {\n      width: width,\n      height: bbox.height + paddingTop + paddingBottom,\n      x: mid.x - width / 2,\n      y: bbox.y - paddingTop\n    });\n\n    assign(style, {\n      fontSize: externalFontSize + 'px',\n      lineHeight: externalLineHeight,\n      paddingTop: paddingTop + 'px',\n      paddingBottom: paddingBottom + 'px'\n    });\n  }\n\n  // external label not yet created\n  if (isLabelExternal(target)\n      && !hasExternalLabel(target)\n      && !isLabel(target)) {\n\n    var externalLabelMid = getExternalLabelMid(element);\n\n    var absoluteBBox = canvas.getAbsoluteBBox({\n      x: externalLabelMid.x,\n      y: externalLabelMid.y,\n      width: 0,\n      height: 0\n    });\n\n    var height = externalFontSize + paddingTop + paddingBottom;\n\n    assign(bounds, {\n      width: width,\n      height: height,\n      x: absoluteBBox.x - width / 2,\n      y: absoluteBBox.y - height / 2\n    });\n\n    assign(style, {\n      fontSize: externalFontSize + 'px',\n      lineHeight: externalLineHeight,\n      paddingTop: paddingTop + 'px',\n      paddingBottom: paddingBottom + 'px'\n    });\n  }\n\n  // text annotations\n  if (is(element, 'bpmn:TextAnnotation')) {\n    assign(bounds, {\n      width: bbox.width,\n      height: bbox.height,\n      minWidth: 30 * zoom,\n      minHeight: 10 * zoom\n    });\n\n    assign(style, {\n      textAlign: 'left',\n      paddingTop: (5 * zoom) + 'px',\n      paddingBottom: (7 * zoom) + 'px',\n      paddingLeft: (7 * zoom) + 'px',\n      paddingRight: (5 * zoom) + 'px',\n      fontSize: defaultFontSize + 'px',\n      lineHeight: defaultLineHeight\n    });\n  }\n\n  return { bounds: bounds, style: style };\n};\n\n\nLabelEditingProvider.prototype.update = function(\n    element, newLabel,\n    activeContextText, bounds) {\n\n  var newBounds,\n      bbox;\n\n  if (is(element, 'bpmn:TextAnnotation')) {\n\n    bbox = this._canvas.getAbsoluteBBox(element);\n\n    newBounds = {\n      x: element.x,\n      y: element.y,\n      width: element.width / bbox.width * bounds.width,\n      height: element.height / bbox.height * bounds.height\n    };\n  }\n\n  if (is(element, 'bpmn:Group')) {\n\n    var businessObject = getBusinessObject(element);\n\n    // initialize categoryValue if not existing\n    if (!businessObject.categoryValueRef) {\n\n      var rootElement = this._canvas.getRootElement(),\n          definitions = getBusinessObject(rootElement).$parent;\n\n      var categoryValue = createCategoryValue(definitions, this._bpmnFactory);\n\n      getBusinessObject(element).categoryValueRef = categoryValue;\n    }\n\n  }\n\n  if (isEmptyText(newLabel)) {\n    newLabel = null;\n  }\n\n  this._modeling.updateLabel(element, newLabel, newBounds);\n};\n\n\n\n// helpers //////////////////////\n\nfunction isCollapsedSubProcess(element) {\n  return is(element, 'bpmn:SubProcess') && !isExpanded(element);\n}\n\nfunction isExpandedSubProcess(element) {\n  return is(element, 'bpmn:SubProcess') && isExpanded(element);\n}\n\nfunction isCollapsedPool(element) {\n  return is(element, 'bpmn:Participant') && !isExpanded(element);\n}\n\nfunction isExpandedPool(element) {\n  return is(element, 'bpmn:Participant') && isExpanded(element);\n}\n\nfunction isEmptyText(label) {\n  return !label || !label.trim();\n}","import { is } from '../../util/ModelUtil';\n\nfunction getLabelAttr(semantic) {\n  if (\n    is(semantic, 'bpmn:FlowElement') ||\n    is(semantic, 'bpmn:Participant') ||\n    is(semantic, 'bpmn:Lane') ||\n    is(semantic, 'bpmn:SequenceFlow') ||\n    is(semantic, 'bpmn:MessageFlow') ||\n    is(semantic, 'bpmn:DataInput') ||\n    is(semantic, 'bpmn:DataOutput')\n  ) {\n    return 'name';\n  }\n\n  if (is(semantic, 'bpmn:TextAnnotation')) {\n    return 'text';\n  }\n\n  if (is(semantic, 'bpmn:Group')) {\n    return 'categoryValueRef';\n  }\n}\n\nfunction getCategoryValue(semantic) {\n  var categoryValueRef = semantic['categoryValueRef'];\n\n  if (!categoryValueRef) {\n    return '';\n  }\n\n\n  return categoryValueRef.value || '';\n}\n\nexport function getLabel(element) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n\n    if (attr === 'categoryValueRef') {\n\n      return getCategoryValue(semantic);\n    }\n\n    return semantic[attr] || '';\n  }\n}\n\n\nexport function setLabel(element, text, isExternal) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n\n    if (attr === 'categoryValueRef') {\n      semantic['categoryValueRef'].value = text;\n    } else {\n      semantic[attr] = text;\n    }\n\n  }\n\n  return element;\n}","import {\n  setLabel,\n  getLabel\n} from '../LabelUtil';\n\nimport {\n  getExternalLabelMid,\n  isLabelExternal,\n  hasExternalLabel,\n  isLabel\n} from '../../../util/LabelUtil';\n\nimport {\n  getDi,\n  is\n} from '../../../util/ModelUtil';\n\nvar NULL_DIMENSIONS = {\n  width: 0,\n  height: 0\n};\n\n\n/**\n * A handler that updates the text of a BPMN element.\n */\nexport default function UpdateLabelHandler(modeling, textRenderer, bpmnFactory) {\n\n  /**\n   * Creates an empty `diLabel` attribute for embedded labels.\n   *\n   * @param {djs.model.Base} element\n   * @param {string} text\n   */\n  function ensureInternalLabelDi(element, text) {\n    if (isLabelExternal(element)) {\n      return;\n    }\n\n    var di = getDi(element);\n\n    if (text && !di.label) {\n      di.label = bpmnFactory.create('bpmndi:BPMNLabel');\n    }\n\n    if (!text && di.label) {\n      di.label = null;\n    }\n  }\n\n\n  /**\n   * Set the label and return the changed elements.\n   *\n   * Element parameter can be label itself or connection (i.e. sequence flow).\n   *\n   * @param {djs.model.Base} element\n   * @param {string} text\n   */\n  function setText(element, text) {\n\n    // external label if present\n    var label = element.label || element;\n\n    var labelTarget = element.labelTarget || element;\n\n    setLabel(label, text, labelTarget !== label);\n\n    ensureInternalLabelDi(element, text);\n\n    return [ label, labelTarget ];\n  }\n\n  function preExecute(ctx) {\n    var element = ctx.element,\n        businessObject = element.businessObject,\n        newLabel = ctx.newLabel;\n\n    if (!isLabel(element)\n        && isLabelExternal(element)\n        && !hasExternalLabel(element)\n        && !isEmptyText(newLabel)) {\n\n      // create label\n      var paddingTop = 7;\n\n      var labelCenter = getExternalLabelMid(element);\n\n      labelCenter = {\n        x: labelCenter.x,\n        y: labelCenter.y + paddingTop\n      };\n\n      modeling.createLabel(element, labelCenter, {\n        id: businessObject.id + '_label',\n        businessObject: businessObject,\n        di: element.di\n      });\n    }\n  }\n\n  function execute(ctx) {\n    ctx.oldLabel = getLabel(ctx.element);\n    return setText(ctx.element, ctx.newLabel);\n  }\n\n  function revert(ctx) {\n    return setText(ctx.element, ctx.oldLabel);\n  }\n\n  function postExecute(ctx) {\n    var element = ctx.element,\n        label = element.label || element,\n        newLabel = ctx.newLabel,\n        newBounds = ctx.newBounds,\n        hints = ctx.hints || {};\n\n    // ignore internal labels for elements except text annotations\n    if (!isLabel(label) && !is(label, 'bpmn:TextAnnotation')) {\n      return;\n    }\n\n    if (isLabel(label) && isEmptyText(newLabel)) {\n\n      if (hints.removeShape !== false) {\n        modeling.removeShape(label, { unsetLabel: false });\n      }\n\n      return;\n    }\n\n    var text = getLabel(label);\n\n    // resize element based on label _or_ pre-defined bounds\n    if (typeof newBounds === 'undefined') {\n      newBounds = textRenderer.getExternalLabelBounds(label, text);\n    }\n\n    // setting newBounds to false or _null_ will\n    // disable the postExecute resize operation\n    if (newBounds) {\n      modeling.resizeShape(label, newBounds, NULL_DIMENSIONS);\n    }\n  }\n\n  // API\n\n  this.preExecute = preExecute;\n  this.execute = execute;\n  this.revert = revert;\n  this.postExecute = postExecute;\n}\n\nUpdateLabelHandler.$inject = [\n  'modeling',\n  'textRenderer',\n  'bpmnFactory'\n];\n\n\n// helpers ///////////////////////\n\nfunction isEmptyText(label) {\n  return !label || !label.trim();\n}","import ChangeSupportModule from 'diagram-js/lib/features/change-support';\nimport ResizeModule from 'diagram-js/lib/features/resize';\nimport DirectEditingModule from 'diagram-js-direct-editing';\n\nimport LabelEditingProvider from './LabelEditingProvider';\nimport LabelEditingPreview from './LabelEditingPreview';\n\n\nexport default {\n  __depends__: [\n    ChangeSupportModule,\n    ResizeModule,\n    DirectEditingModule\n  ],\n  __init__: [\n    'labelEditingProvider',\n    'labelEditingPreview'\n  ],\n  labelEditingProvider: [ 'type', LabelEditingProvider ],\n  labelEditingPreview: [ 'type', LabelEditingPreview ]\n};\n","import {\n  map,\n  assign,\n  pick\n} from 'min-dash';\n\nimport {\n  isAny\n} from './util/ModelingUtil';\n\nimport {\n  is\n} from '../../util/ModelUtil';\n\n\nexport default function BpmnFactory(moddle) {\n  this._model = moddle;\n}\n\nBpmnFactory.$inject = [ 'moddle' ];\n\n\nBpmnFactory.prototype._needsId = function(element) {\n  return isAny(element, [\n    'bpmn:RootElement',\n    'bpmn:FlowElement',\n    'bpmn:MessageFlow',\n    'bpmn:DataAssociation',\n    'bpmn:Artifact',\n    'bpmn:Participant',\n    'bpmn:Lane',\n    'bpmn:LaneSet',\n    'bpmn:Process',\n    'bpmn:Collaboration',\n    'bpmndi:BPMNShape',\n    'bpmndi:BPMNEdge',\n    'bpmndi:BPMNDiagram',\n    'bpmndi:BPMNPlane',\n    'bpmn:Property',\n    'bpmn:CategoryValue'\n  ]);\n};\n\nBpmnFactory.prototype._ensureId = function(element) {\n  if (element.id) {\n    this._model.ids.claim(element.id, element);\n    return;\n  }\n\n  // generate semantic ids for elements\n  // bpmn:SequenceFlow -> SequenceFlow_ID\n  var prefix;\n\n  if (is(element, 'bpmn:Activity')) {\n    prefix = 'Activity';\n  } else if (is(element, 'bpmn:Event')) {\n    prefix = 'Event';\n  } else if (is(element, 'bpmn:Gateway')) {\n    prefix = 'Gateway';\n  } else if (isAny(element, [ 'bpmn:SequenceFlow', 'bpmn:MessageFlow' ])) {\n    prefix = 'Flow';\n  } else {\n    prefix = (element.$type || '').replace(/^[^:]*:/g, '');\n  }\n\n  prefix += '_';\n\n  if (!element.id && this._needsId(element)) {\n    element.id = this._model.ids.nextPrefixed(prefix, element);\n  }\n};\n\n\nBpmnFactory.prototype.create = function(type, attrs) {\n  var element = this._model.create(type, attrs || {});\n\n  this._ensureId(element);\n\n  return element;\n};\n\n\nBpmnFactory.prototype.createDiLabel = function() {\n  return this.create('bpmndi:BPMNLabel', {\n    bounds: this.createDiBounds()\n  });\n};\n\n\nBpmnFactory.prototype.createDiShape = function(semantic, attrs) {\n  return this.create('bpmndi:BPMNShape', assign({\n    bpmnElement: semantic,\n    bounds: this.createDiBounds()\n  }, attrs));\n};\n\n\nBpmnFactory.prototype.createDiBounds = function(bounds) {\n  return this.create('dc:Bounds', bounds);\n};\n\n\nBpmnFactory.prototype.createDiWaypoints = function(waypoints) {\n  var self = this;\n\n  return map(waypoints, function(pos) {\n    return self.createDiWaypoint(pos);\n  });\n};\n\nBpmnFactory.prototype.createDiWaypoint = function(point) {\n  return this.create('dc:Point', pick(point, [ 'x', 'y' ]));\n};\n\n\nBpmnFactory.prototype.createDiEdge = function(semantic, attrs) {\n  return this.create('bpmndi:BPMNEdge', assign({\n    bpmnElement: semantic,\n    waypoint: this.createDiWaypoints([])\n  }, attrs));\n};\n\nBpmnFactory.prototype.createDiPlane = function(semantic, attrs) {\n  return this.create('bpmndi:BPMNPlane', assign({\n    bpmnElement: semantic\n  }, attrs));\n};","import inherits from 'inherits';\n\nimport {\n  assign\n} from 'min-dash';\n\nimport BaseLayouter from 'diagram-js/lib/layout/BaseLayouter';\n\nimport {\n  repairConnection,\n  withoutRedundantPoints\n} from 'diagram-js/lib/layout/ManhattanLayout';\n\nimport {\n  getMid,\n  getOrientation\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  isExpanded\n} from '../../util/DiUtil';\n\nimport { is } from '../../util/ModelUtil';\n\nvar ATTACH_ORIENTATION_PADDING = -10,\n    BOUNDARY_TO_HOST_THRESHOLD = 40;\n\nvar oppositeOrientationMapping = {\n  'top': 'bottom',\n  'top-right': 'bottom-left',\n  'top-left': 'bottom-right',\n  'right': 'left',\n  'bottom': 'top',\n  'bottom-right': 'top-left',\n  'bottom-left': 'top-right',\n  'left': 'right'\n};\n\nvar orientationDirectionMapping = {\n  top: 't',\n  right: 'r',\n  bottom: 'b',\n  left: 'l'\n};\n\n\nexport default function BpmnLayouter() {}\n\ninherits(BpmnLayouter, BaseLayouter);\n\n\nBpmnLayouter.prototype.layoutConnection = function(connection, hints) {\n  if (!hints) {\n    hints = {};\n  }\n\n  var source = hints.source || connection.source,\n      target = hints.target || connection.target,\n      waypoints = hints.waypoints || connection.waypoints,\n      connectionStart = hints.connectionStart,\n      connectionEnd = hints.connectionEnd;\n\n  var manhattanOptions,\n      updatedWaypoints;\n\n  if (!connectionStart) {\n    connectionStart = getConnectionDocking(waypoints && waypoints[ 0 ], source);\n  }\n\n  if (!connectionEnd) {\n    connectionEnd = getConnectionDocking(waypoints && waypoints[ waypoints.length - 1 ], target);\n  }\n\n  // TODO(nikku): support vertical modeling\n  // and invert preferredLayouts accordingly\n\n  if (is(connection, 'bpmn:Association') ||\n      is(connection, 'bpmn:DataAssociation')) {\n\n    if (waypoints && !isCompensationAssociation(source, target)) {\n      return [].concat([ connectionStart ], waypoints.slice(1, -1), [ connectionEnd ]);\n    }\n  }\n\n  if (is(connection, 'bpmn:MessageFlow')) {\n    manhattanOptions = getMessageFlowManhattanOptions(source, target);\n  } else if (is(connection, 'bpmn:SequenceFlow') || isCompensationAssociation(source, target)) {\n\n    // layout all connection between flow elements h:h, except for\n    // (1) outgoing of boundary events -> layout based on attach orientation and target orientation\n    // (2) incoming/outgoing of gateways -> v:h for outgoing, h:v for incoming\n    // (3) loops\n    if (source === target) {\n      manhattanOptions = {\n        preferredLayouts: getLoopPreferredLayout(source, connection)\n      };\n    } else if (is(source, 'bpmn:BoundaryEvent')) {\n      manhattanOptions = {\n        preferredLayouts: getBoundaryEventPreferredLayouts(source, target, connectionEnd)\n      };\n    } else if (isExpandedSubProcess(source) || isExpandedSubProcess(target)) {\n      manhattanOptions = getSubProcessManhattanOptions(source);\n    } else if (is(source, 'bpmn:Gateway')) {\n      manhattanOptions = {\n        preferredLayouts: [ 'v:h' ]\n      };\n    } else if (is(target, 'bpmn:Gateway')) {\n      manhattanOptions = {\n        preferredLayouts: [ 'h:v' ]\n      };\n    } else {\n      manhattanOptions = {\n        preferredLayouts: [ 'h:h' ]\n      };\n    }\n  }\n\n  if (manhattanOptions) {\n    manhattanOptions = assign(manhattanOptions, hints);\n\n    updatedWaypoints = withoutRedundantPoints(repairConnection(\n      source,\n      target,\n      connectionStart,\n      connectionEnd,\n      waypoints,\n      manhattanOptions\n    ));\n  }\n\n  return updatedWaypoints || [ connectionStart, connectionEnd ];\n};\n\n\n// helpers //////////\n\nfunction getAttachOrientation(attachedElement) {\n  var hostElement = attachedElement.host;\n\n  return getOrientation(getMid(attachedElement), hostElement, ATTACH_ORIENTATION_PADDING);\n}\n\nfunction getMessageFlowManhattanOptions(source, target) {\n  return {\n    preferredLayouts: [ 'straight', 'v:v' ],\n    preserveDocking: getMessageFlowPreserveDocking(source, target)\n  };\n}\n\nfunction getMessageFlowPreserveDocking(source, target) {\n\n  // (1) docking element connected to participant has precedence\n  if (is(target, 'bpmn:Participant')) {\n    return 'source';\n  }\n\n  if (is(source, 'bpmn:Participant')) {\n    return 'target';\n  }\n\n  // (2) docking element connected to expanded sub-process has precedence\n  if (isExpandedSubProcess(target)) {\n    return 'source';\n  }\n\n  if (isExpandedSubProcess(source)) {\n    return 'target';\n  }\n\n  // (3) docking event has precedence\n  if (is(target, 'bpmn:Event')) {\n    return 'target';\n  }\n\n  if (is(source, 'bpmn:Event')) {\n    return 'source';\n  }\n\n  return null;\n}\n\nfunction getSubProcessManhattanOptions(source) {\n  return {\n    preferredLayouts: [ 'straight', 'h:h' ],\n    preserveDocking: getSubProcessPreserveDocking(source)\n  };\n}\n\nfunction getSubProcessPreserveDocking(source) {\n  return isExpandedSubProcess(source) ? 'target' : 'source';\n}\n\nfunction getConnectionDocking(point, shape) {\n  return point ? (point.original || point) : getMid(shape);\n}\n\nfunction isCompensationAssociation(source, target) {\n  return is(target, 'bpmn:Activity') &&\n    is(source, 'bpmn:BoundaryEvent') &&\n    target.businessObject.isForCompensation;\n}\n\nfunction isExpandedSubProcess(element) {\n  return is(element, 'bpmn:SubProcess') && isExpanded(element);\n}\n\nfunction isSame(a, b) {\n  return a === b;\n}\n\nfunction isAnyOrientation(orientation, orientations) {\n  return orientations.indexOf(orientation) !== -1;\n}\n\nfunction getHorizontalOrientation(orientation) {\n  var matches = /right|left/.exec(orientation);\n\n  return matches && matches[0];\n}\n\nfunction getVerticalOrientation(orientation) {\n  var matches = /top|bottom/.exec(orientation);\n\n  return matches && matches[0];\n}\n\nfunction isOppositeOrientation(a, b) {\n  return oppositeOrientationMapping[a] === b;\n}\n\nfunction isOppositeHorizontalOrientation(a, b) {\n  var horizontalOrientation = getHorizontalOrientation(a);\n\n  var oppositeHorizontalOrientation = oppositeOrientationMapping[horizontalOrientation];\n\n  return b.indexOf(oppositeHorizontalOrientation) !== -1;\n}\n\nfunction isOppositeVerticalOrientation(a, b) {\n  var verticalOrientation = getVerticalOrientation(a);\n\n  var oppositeVerticalOrientation = oppositeOrientationMapping[verticalOrientation];\n\n  return b.indexOf(oppositeVerticalOrientation) !== -1;\n}\n\nfunction isHorizontalOrientation(orientation) {\n  return orientation === 'right' || orientation === 'left';\n}\n\nfunction getLoopPreferredLayout(source, connection) {\n  var waypoints = connection.waypoints;\n\n  var orientation = waypoints && waypoints.length && getOrientation(waypoints[0], source);\n\n  if (orientation === 'top') {\n    return [ 't:r' ];\n  } else if (orientation === 'right') {\n    return [ 'r:b' ];\n  } else if (orientation === 'left') {\n    return [ 'l:t' ];\n  }\n\n  return [ 'b:l' ];\n}\n\nfunction getBoundaryEventPreferredLayouts(source, target, end) {\n  var sourceMid = getMid(source),\n      targetMid = getMid(target),\n      attachOrientation = getAttachOrientation(source),\n      sourceLayout,\n      targetLayout;\n\n  var isLoop = isSame(source.host, target);\n\n  var attachedToSide = isAnyOrientation(attachOrientation, [ 'top', 'right', 'bottom', 'left' ]);\n\n  var targetOrientation = getOrientation(targetMid, sourceMid, {\n    x: source.width / 2 + target.width / 2,\n    y: source.height / 2 + target.height / 2\n  });\n\n  if (isLoop) {\n    return getBoundaryEventLoopLayout(attachOrientation, attachedToSide, source, target, end);\n  }\n\n  // source layout\n  sourceLayout = getBoundaryEventSourceLayout(attachOrientation, targetOrientation, attachedToSide);\n\n  // target layout\n  targetLayout = getBoundaryEventTargetLayout(attachOrientation, targetOrientation, attachedToSide);\n\n  return [ sourceLayout + ':' + targetLayout ];\n}\n\nfunction getBoundaryEventLoopLayout(attachOrientation, attachedToSide, source, target, end) {\n  var orientation = attachedToSide ? attachOrientation : getVerticalOrientation(attachOrientation),\n      sourceLayout = orientationDirectionMapping[ orientation ],\n      targetLayout;\n\n  if (attachedToSide) {\n    if (isHorizontalOrientation(attachOrientation)) {\n      targetLayout = shouldConnectToSameSide('y', source, target, end) ? 'h' : 'b';\n    } else {\n      targetLayout = shouldConnectToSameSide('x', source, target, end) ? 'v' : 'l';\n    }\n  } else {\n    targetLayout = 'v';\n  }\n\n  return [ sourceLayout + ':' + targetLayout ];\n}\n\nfunction shouldConnectToSameSide(axis, source, target, end) {\n  var threshold = BOUNDARY_TO_HOST_THRESHOLD;\n\n  return !(\n    areCloseOnAxis(axis, end, target, threshold) ||\n    areCloseOnAxis(axis, end, {\n      x: target.x + target.width,\n      y: target.y + target.height\n    }, threshold) ||\n    areCloseOnAxis(axis, end, getMid(source), threshold)\n  );\n}\n\nfunction areCloseOnAxis(axis, a, b, threshold) {\n  return Math.abs(a[ axis ] - b[ axis ]) < threshold;\n}\n\nfunction getBoundaryEventSourceLayout(attachOrientation, targetOrientation, attachedToSide) {\n\n  // attached to either top, right, bottom or left side\n  if (attachedToSide) {\n    return orientationDirectionMapping[ attachOrientation ];\n  }\n\n  // attached to either top-right, top-left, bottom-right or bottom-left corner\n\n  // same vertical or opposite horizontal orientation\n  if (isSame(\n    getVerticalOrientation(attachOrientation), getVerticalOrientation(targetOrientation)\n  ) || isOppositeOrientation(\n    getHorizontalOrientation(attachOrientation), getHorizontalOrientation(targetOrientation)\n  )) {\n    return orientationDirectionMapping[ getVerticalOrientation(attachOrientation) ];\n  }\n\n  // fallback\n  return orientationDirectionMapping[ getHorizontalOrientation(attachOrientation) ];\n}\n\nfunction getBoundaryEventTargetLayout(attachOrientation, targetOrientation, attachedToSide) {\n\n  // attached to either top, right, bottom or left side\n  if (attachedToSide) {\n    if (isHorizontalOrientation(attachOrientation)) {\n\n      // orientation is right or left\n\n      // opposite horizontal orientation or same orientation\n      if (\n        isOppositeHorizontalOrientation(attachOrientation, targetOrientation) ||\n        isSame(attachOrientation, targetOrientation)\n      ) {\n        return 'h';\n      }\n\n      // fallback\n      return 'v';\n    } else {\n\n      // orientation is top or bottom\n\n      // opposite vertical orientation or same orientation\n      if (\n        isOppositeVerticalOrientation(attachOrientation, targetOrientation) ||\n        isSame(attachOrientation, targetOrientation)\n      ) {\n        return 'v';\n      }\n\n      // fallback\n      return 'h';\n    }\n  }\n\n  // attached to either top-right, top-left, bottom-right or bottom-left corner\n\n  // orientation is right, left\n  // or same vertical orientation but also right or left\n  if (isHorizontalOrientation(targetOrientation) ||\n    (isSame(getVerticalOrientation(attachOrientation), getVerticalOrientation(targetOrientation)) &&\n      getHorizontalOrientation(targetOrientation))) {\n    return 'h';\n  } else {\n    return 'v';\n  }\n}\n","import {\n  assign,\n  forEach\n} from 'min-dash';\n\nimport inherits from 'inherits';\n\nimport {\n  remove as collectionRemove,\n  add as collectionAdd\n} from 'diagram-js/lib/util/Collections';\n\nimport {\n  Label\n} from 'diagram-js/lib/model';\n\nimport {\n  getBusinessObject,\n  getDi,\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  isAny\n} from './util/ModelingUtil';\n\nimport {\n  delta\n} from 'diagram-js/lib/util/PositionUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\n/**\n * A handler responsible for updating the underlying BPMN 2.0 XML + DI\n * once changes on the diagram happen\n */\nexport default function BpmnUpdater(\n    eventBus, bpmnFactory, connectionDocking,\n    translate) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  this._bpmnFactory = bpmnFactory;\n  this._translate = translate;\n\n  var self = this;\n\n\n\n  // connection cropping //////////////////////\n\n  // crop connection ends during create/update\n  function cropConnection(e) {\n    var context = e.context,\n        hints = context.hints || {},\n        connection;\n\n    if (!context.cropped && hints.createElementsBehavior !== false) {\n      connection = context.connection;\n      connection.waypoints = connectionDocking.getCroppedWaypoints(connection);\n      context.cropped = true;\n    }\n  }\n\n  this.executed([\n    'connection.layout',\n    'connection.create'\n  ], cropConnection);\n\n  this.reverted([ 'connection.layout' ], function(e) {\n    delete e.context.cropped;\n  });\n\n\n\n  // BPMN + DI update //////////////////////\n\n\n  // update parent\n  function updateParent(e) {\n    var context = e.context;\n\n    self.updateParent(context.shape || context.connection, context.oldParent);\n  }\n\n  function reverseUpdateParent(e) {\n    var context = e.context;\n\n    var element = context.shape || context.connection,\n\n        // oldParent is the (old) new parent, because we are undoing\n        oldParent = context.parent || context.newParent;\n\n    self.updateParent(element, oldParent);\n  }\n\n  this.executed([\n    'shape.move',\n    'shape.create',\n    'shape.delete',\n    'connection.create',\n    'connection.move',\n    'connection.delete'\n  ], ifBpmn(updateParent));\n\n  this.reverted([\n    'shape.move',\n    'shape.create',\n    'shape.delete',\n    'connection.create',\n    'connection.move',\n    'connection.delete'\n  ], ifBpmn(reverseUpdateParent));\n\n  /*\n   * ## Updating Parent\n   *\n   * When morphing a Process into a Collaboration or vice-versa,\n   * make sure that both the *semantic* and *di* parent of each element\n   * is updated.\n   *\n   */\n  function updateRoot(event) {\n    var context = event.context,\n        oldRoot = context.oldRoot,\n        children = oldRoot.children;\n\n    forEach(children, function(child) {\n      if (is(child, 'bpmn:BaseElement')) {\n        self.updateParent(child);\n      }\n    });\n  }\n\n  this.executed([ 'canvas.updateRoot' ], updateRoot);\n  this.reverted([ 'canvas.updateRoot' ], updateRoot);\n\n\n  // update bounds\n  function updateBounds(e) {\n    var shape = e.context.shape;\n\n    if (!is(shape, 'bpmn:BaseElement')) {\n      return;\n    }\n\n    self.updateBounds(shape);\n  }\n\n  this.executed([ 'shape.move', 'shape.create', 'shape.resize' ], ifBpmn(function(event) {\n\n    // exclude labels because they're handled separately during shape.changed\n    if (event.context.shape.type === 'label') {\n      return;\n    }\n\n    updateBounds(event);\n  }));\n\n  this.reverted([ 'shape.move', 'shape.create', 'shape.resize' ], ifBpmn(function(event) {\n\n    // exclude labels because they're handled separately during shape.changed\n    if (event.context.shape.type === 'label') {\n      return;\n    }\n\n    updateBounds(event);\n  }));\n\n  // Handle labels separately. This is necessary, because the label bounds have to be updated\n  // every time its shape changes, not only on move, create and resize.\n  eventBus.on('shape.changed', function(event) {\n    if (event.element.type === 'label') {\n      updateBounds({ context: { shape: event.element } });\n    }\n  });\n\n  // attach / detach connection\n  function updateConnection(e) {\n    self.updateConnection(e.context);\n  }\n\n  this.executed([\n    'connection.create',\n    'connection.move',\n    'connection.delete',\n    'connection.reconnect'\n  ], ifBpmn(updateConnection));\n\n  this.reverted([\n    'connection.create',\n    'connection.move',\n    'connection.delete',\n    'connection.reconnect'\n  ], ifBpmn(updateConnection));\n\n\n  // update waypoints\n  function updateConnectionWaypoints(e) {\n    self.updateConnectionWaypoints(e.context.connection);\n  }\n\n  this.executed([\n    'connection.layout',\n    'connection.move',\n    'connection.updateWaypoints',\n  ], ifBpmn(updateConnectionWaypoints));\n\n  this.reverted([\n    'connection.layout',\n    'connection.move',\n    'connection.updateWaypoints',\n  ], ifBpmn(updateConnectionWaypoints));\n\n  // update conditional/default flows\n  this.executed('connection.reconnect', ifBpmn(function(event) {\n    var context = event.context,\n        connection = context.connection,\n        oldSource = context.oldSource,\n        newSource = context.newSource,\n        connectionBo = getBusinessObject(connection),\n        oldSourceBo = getBusinessObject(oldSource),\n        newSourceBo = getBusinessObject(newSource);\n\n    // remove condition from connection on reconnect to new source\n    // if new source can NOT have condional sequence flow\n    if (connectionBo.conditionExpression && !isAny(newSourceBo, [\n      'bpmn:Activity',\n      'bpmn:ExclusiveGateway',\n      'bpmn:InclusiveGateway'\n    ])) {\n      context.oldConditionExpression = connectionBo.conditionExpression;\n\n      delete connectionBo.conditionExpression;\n    }\n\n    // remove default from old source flow on reconnect to new source\n    // if source changed\n    if (oldSource !== newSource && oldSourceBo.default === connectionBo) {\n      context.oldDefault = oldSourceBo.default;\n\n      delete oldSourceBo.default;\n    }\n  }));\n\n  this.reverted('connection.reconnect', ifBpmn(function(event) {\n    var context = event.context,\n        connection = context.connection,\n        oldSource = context.oldSource,\n        newSource = context.newSource,\n        connectionBo = getBusinessObject(connection),\n        oldSourceBo = getBusinessObject(oldSource),\n        newSourceBo = getBusinessObject(newSource);\n\n    // add condition to connection on revert reconnect to new source\n    if (context.oldConditionExpression) {\n      connectionBo.conditionExpression = context.oldConditionExpression;\n    }\n\n    // add default to old source on revert reconnect to new source\n    if (context.oldDefault) {\n      oldSourceBo.default = context.oldDefault;\n\n      delete newSourceBo.default;\n    }\n  }));\n\n  // update attachments\n  function updateAttachment(e) {\n    self.updateAttachment(e.context);\n  }\n\n  this.executed([ 'element.updateAttachment' ], ifBpmn(updateAttachment));\n  this.reverted([ 'element.updateAttachment' ], ifBpmn(updateAttachment));\n}\n\ninherits(BpmnUpdater, CommandInterceptor);\n\nBpmnUpdater.$inject = [\n  'eventBus',\n  'bpmnFactory',\n  'connectionDocking',\n  'translate'\n];\n\n\n// implementation //////////////////////\n\nBpmnUpdater.prototype.updateAttachment = function(context) {\n\n  var shape = context.shape,\n      businessObject = shape.businessObject,\n      host = shape.host;\n\n  businessObject.attachedToRef = host && host.businessObject;\n};\n\nBpmnUpdater.prototype.updateParent = function(element, oldParent) {\n\n  // do not update BPMN 2.0 label parent\n  if (element instanceof Label) {\n    return;\n  }\n\n  // data stores in collaborations are handled separately by DataStoreBehavior\n  if (is(element, 'bpmn:DataStoreReference') &&\n      element.parent &&\n      is(element.parent, 'bpmn:Collaboration')) {\n    return;\n  }\n\n  var parentShape = element.parent;\n\n  var businessObject = element.businessObject,\n      di = getDi(element),\n      parentBusinessObject = parentShape && parentShape.businessObject,\n      parentDi = getDi(parentShape);\n\n  if (is(element, 'bpmn:FlowNode')) {\n    this.updateFlowNodeRefs(businessObject, parentBusinessObject, oldParent && oldParent.businessObject);\n  }\n\n  if (is(element, 'bpmn:DataOutputAssociation')) {\n    if (element.source) {\n      parentBusinessObject = element.source.businessObject;\n    } else {\n      parentBusinessObject = null;\n    }\n  }\n\n  if (is(element, 'bpmn:DataInputAssociation')) {\n    if (element.target) {\n      parentBusinessObject = element.target.businessObject;\n    } else {\n      parentBusinessObject = null;\n    }\n  }\n\n  this.updateSemanticParent(businessObject, parentBusinessObject);\n\n  if (is(element, 'bpmn:DataObjectReference') && businessObject.dataObjectRef) {\n    this.updateSemanticParent(businessObject.dataObjectRef, parentBusinessObject);\n  }\n\n  this.updateDiParent(di, parentDi);\n};\n\n\nBpmnUpdater.prototype.updateBounds = function(shape) {\n\n  var di = getDi(shape),\n      embeddedLabelBounds = getEmbeddedLabelBounds(shape);\n\n  // update embedded label bounds if possible\n  if (embeddedLabelBounds) {\n    var embeddedLabelBoundsDelta = delta(embeddedLabelBounds, di.get('bounds'));\n\n    assign(embeddedLabelBounds, {\n      x: shape.x + embeddedLabelBoundsDelta.x,\n      y: shape.y + embeddedLabelBoundsDelta.y\n    });\n  }\n\n  var target = (shape instanceof Label) ? this._getLabel(di) : di;\n\n  var bounds = target.bounds;\n\n  if (!bounds) {\n    bounds = this._bpmnFactory.createDiBounds();\n    target.set('bounds', bounds);\n  }\n\n  assign(bounds, {\n    x: shape.x,\n    y: shape.y,\n    width: shape.width,\n    height: shape.height\n  });\n};\n\nBpmnUpdater.prototype.updateFlowNodeRefs = function(businessObject, newContainment, oldContainment) {\n\n  if (oldContainment === newContainment) {\n    return;\n  }\n\n  var oldRefs, newRefs;\n\n  if (is (oldContainment, 'bpmn:Lane')) {\n    oldRefs = oldContainment.get('flowNodeRef');\n    collectionRemove(oldRefs, businessObject);\n  }\n\n  if (is(newContainment, 'bpmn:Lane')) {\n    newRefs = newContainment.get('flowNodeRef');\n    collectionAdd(newRefs, businessObject);\n  }\n};\n\n\n// update existing sourceElement and targetElement di information\nBpmnUpdater.prototype.updateDiConnection = function(connection, newSource, newTarget) {\n  var connectionDi = getDi(connection),\n      newSourceDi = getDi(newSource),\n      newTargetDi = getDi(newTarget);\n\n  if (connectionDi.sourceElement && connectionDi.sourceElement.bpmnElement !== getBusinessObject(newSource)) {\n    connectionDi.sourceElement = newSource && newSourceDi;\n  }\n\n  if (connectionDi.targetElement && connectionDi.targetElement.bpmnElement !== getBusinessObject(newTarget)) {\n    connectionDi.targetElement = newTarget && newTargetDi;\n  }\n\n};\n\n\nBpmnUpdater.prototype.updateDiParent = function(di, parentDi) {\n\n  if (parentDi && !is(parentDi, 'bpmndi:BPMNPlane')) {\n    parentDi = parentDi.$parent;\n  }\n\n  if (di.$parent === parentDi) {\n    return;\n  }\n\n  var planeElements = (parentDi || di.$parent).get('planeElement');\n\n  if (parentDi) {\n    planeElements.push(di);\n    di.$parent = parentDi;\n  } else {\n    collectionRemove(planeElements, di);\n    di.$parent = null;\n  }\n};\n\nfunction getDefinitions(element) {\n  while (element && !is(element, 'bpmn:Definitions')) {\n    element = element.$parent;\n  }\n\n  return element;\n}\n\nBpmnUpdater.prototype.getLaneSet = function(container) {\n\n  var laneSet, laneSets;\n\n  // bpmn:Lane\n  if (is(container, 'bpmn:Lane')) {\n    laneSet = container.childLaneSet;\n\n    if (!laneSet) {\n      laneSet = this._bpmnFactory.create('bpmn:LaneSet');\n      container.childLaneSet = laneSet;\n      laneSet.$parent = container;\n    }\n\n    return laneSet;\n  }\n\n  // bpmn:Participant\n  if (is(container, 'bpmn:Participant')) {\n    container = container.processRef;\n  }\n\n  // bpmn:FlowElementsContainer\n  laneSets = container.get('laneSets');\n  laneSet = laneSets[0];\n\n  if (!laneSet) {\n    laneSet = this._bpmnFactory.create('bpmn:LaneSet');\n    laneSet.$parent = container;\n    laneSets.push(laneSet);\n  }\n\n  return laneSet;\n};\n\nBpmnUpdater.prototype.updateSemanticParent = function(businessObject, newParent, visualParent) {\n\n  var containment,\n      translate = this._translate;\n\n  if (businessObject.$parent === newParent) {\n    return;\n  }\n\n  if (is(businessObject, 'bpmn:DataInput') || is(businessObject, 'bpmn:DataOutput')) {\n\n    if (is(newParent, 'bpmn:Participant') && 'processRef' in newParent) {\n      newParent = newParent.processRef;\n    }\n\n    // already in correct ioSpecification\n    if ('ioSpecification' in newParent && newParent.ioSpecification === businessObject.$parent) {\n      return;\n    }\n  }\n\n  if (is(businessObject, 'bpmn:Lane')) {\n\n    if (newParent) {\n      newParent = this.getLaneSet(newParent);\n    }\n\n    containment = 'lanes';\n  } else\n\n  if (is(businessObject, 'bpmn:FlowElement')) {\n\n    if (newParent) {\n\n      if (is(newParent, 'bpmn:Participant')) {\n        newParent = newParent.processRef;\n      } else\n\n      if (is(newParent, 'bpmn:Lane')) {\n        do {\n\n          // unwrap Lane -> LaneSet -> (Lane | FlowElementsContainer)\n          newParent = newParent.$parent.$parent;\n        } while (is(newParent, 'bpmn:Lane'));\n\n      }\n    }\n\n    containment = 'flowElements';\n\n  } else\n\n  if (is(businessObject, 'bpmn:Artifact')) {\n\n    while (newParent &&\n           !is(newParent, 'bpmn:Process') &&\n           !is(newParent, 'bpmn:SubProcess') &&\n           !is(newParent, 'bpmn:Collaboration')) {\n\n      if (is(newParent, 'bpmn:Participant')) {\n        newParent = newParent.processRef;\n        break;\n      } else {\n        newParent = newParent.$parent;\n      }\n    }\n\n    containment = 'artifacts';\n  } else\n\n  if (is(businessObject, 'bpmn:MessageFlow')) {\n    containment = 'messageFlows';\n\n  } else\n\n  if (is(businessObject, 'bpmn:Participant')) {\n    containment = 'participants';\n\n    // make sure the participants process is properly attached / detached\n    // from the XML document\n\n    var process = businessObject.processRef,\n        definitions;\n\n    if (process) {\n      definitions = getDefinitions(businessObject.$parent || newParent);\n\n      if (businessObject.$parent) {\n        collectionRemove(definitions.get('rootElements'), process);\n        process.$parent = null;\n      }\n\n      if (newParent) {\n        collectionAdd(definitions.get('rootElements'), process);\n        process.$parent = definitions;\n      }\n    }\n  } else\n\n  if (is(businessObject, 'bpmn:DataOutputAssociation')) {\n    containment = 'dataOutputAssociations';\n  } else\n\n  if (is(businessObject, 'bpmn:DataInputAssociation')) {\n    containment = 'dataInputAssociations';\n  }\n\n  if (!containment) {\n    throw new Error(translate(\n      'no parent for {element} in {parent}',\n      {\n        element: businessObject.id,\n        parent: newParent.id\n      }\n    ));\n  }\n\n  var children;\n\n  if (businessObject.$parent) {\n\n    // remove from old parent\n    children = businessObject.$parent.get(containment);\n    collectionRemove(children, businessObject);\n  }\n\n  if (!newParent) {\n    businessObject.$parent = null;\n  } else {\n\n    // add to new parent\n    children = newParent.get(containment);\n    children.push(businessObject);\n    businessObject.$parent = newParent;\n  }\n\n  if (visualParent) {\n    var diChildren = visualParent.get(containment);\n\n    collectionRemove(children, businessObject);\n\n    if (newParent) {\n\n      if (!diChildren) {\n        diChildren = [];\n        newParent.set(containment, diChildren);\n      }\n\n      diChildren.push(businessObject);\n    }\n  }\n};\n\n\nBpmnUpdater.prototype.updateConnectionWaypoints = function(connection) {\n  var di = getDi(connection);\n\n  di.set('waypoint', this._bpmnFactory.createDiWaypoints(connection.waypoints));\n};\n\n\nBpmnUpdater.prototype.updateConnection = function(context) {\n  var connection = context.connection,\n      businessObject = getBusinessObject(connection),\n      newSource = connection.source,\n      newSourceBo = getBusinessObject(newSource),\n      newTarget = connection.target,\n      newTargetBo = getBusinessObject(connection.target),\n      visualParent;\n\n  if (!is(businessObject, 'bpmn:DataAssociation')) {\n\n    var inverseSet = is(businessObject, 'bpmn:SequenceFlow');\n\n    if (businessObject.sourceRef !== newSourceBo) {\n      if (inverseSet) {\n        collectionRemove(businessObject.sourceRef && businessObject.sourceRef.get('outgoing'), businessObject);\n\n        if (newSourceBo && newSourceBo.get('outgoing')) {\n          newSourceBo.get('outgoing').push(businessObject);\n        }\n      }\n\n      businessObject.sourceRef = newSourceBo;\n    }\n\n    if (businessObject.targetRef !== newTargetBo) {\n      if (inverseSet) {\n        collectionRemove(businessObject.targetRef && businessObject.targetRef.get('incoming'), businessObject);\n\n        if (newTargetBo && newTargetBo.get('incoming')) {\n          newTargetBo.get('incoming').push(businessObject);\n        }\n      }\n\n      businessObject.targetRef = newTargetBo;\n    }\n  } else\n\n  if (is(businessObject, 'bpmn:DataInputAssociation')) {\n\n    // handle obnoxious isMsome sourceRef\n    businessObject.get('sourceRef')[0] = newSourceBo;\n\n    visualParent = context.parent || context.newParent || newTargetBo;\n\n    this.updateSemanticParent(businessObject, newTargetBo, visualParent);\n  } else\n\n  if (is(businessObject, 'bpmn:DataOutputAssociation')) {\n    visualParent = context.parent || context.newParent || newSourceBo;\n\n    this.updateSemanticParent(businessObject, newSourceBo, visualParent);\n\n    // targetRef = new target\n    businessObject.targetRef = newTargetBo;\n  }\n\n  this.updateConnectionWaypoints(connection);\n\n  this.updateDiConnection(connection, newSource, newTarget);\n};\n\n\n// helpers //////////////////////\n\nBpmnUpdater.prototype._getLabel = function(di) {\n  if (!di.label) {\n    di.label = this._bpmnFactory.createDiLabel();\n  }\n\n  return di.label;\n};\n\n\n/**\n * Make sure the event listener is only called\n * if the touched element is a BPMN element.\n *\n * @param  {Function} fn\n * @return {Function} guarded function\n */\nfunction ifBpmn(fn) {\n\n  return function(event) {\n\n    var context = event.context,\n        element = context.shape || context.connection;\n\n    if (is(element, 'bpmn:BaseElement')) {\n      fn(event);\n    }\n  };\n}\n\n/**\n * Return dc:Bounds of bpmndi:BPMNLabel if exists.\n *\n * @param {djs.model.shape} shape\n *\n * @returns {Object|undefined}\n */\nfunction getEmbeddedLabelBounds(shape) {\n  if (!is(shape, 'bpmn:Activity')) {\n    return;\n  }\n\n  var di = getDi(shape);\n\n  if (!di) {\n    return;\n  }\n\n  var label = di.get('label');\n\n  if (!label) {\n    return;\n  }\n\n  return label.get('bounds');\n}","import {\n  assign,\n  forEach,\n  isObject\n} from 'min-dash';\n\nimport inherits from 'inherits';\n\nimport {\n  getBusinessObject,\n  getDi,\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  isAny\n} from '../modeling/util/ModelingUtil';\n\nimport {\n  isExpanded\n} from '../../util/DiUtil';\n\nimport BaseElementFactory from 'diagram-js/lib/core/ElementFactory';\n\nimport {\n  DEFAULT_LABEL_SIZE\n} from '../../util/LabelUtil';\n\nimport {\n  ensureCompatDiRef\n} from '../../util/CompatibilityUtil';\n\n\n/**\n * A bpmn-aware factory for diagram-js shapes\n */\nexport default function ElementFactory(bpmnFactory, moddle, translate) {\n  BaseElementFactory.call(this);\n\n  this._bpmnFactory = bpmnFactory;\n  this._moddle = moddle;\n  this._translate = translate;\n}\n\ninherits(ElementFactory, BaseElementFactory);\n\nElementFactory.$inject = [\n  'bpmnFactory',\n  'moddle',\n  'translate'\n];\n\nElementFactory.prototype.baseCreate = BaseElementFactory.prototype.create;\n\nElementFactory.prototype.create = function(elementType, attrs) {\n\n  // no special magic for labels,\n  // we assume their businessObjects have already been created\n  // and wired via attrs\n  if (elementType === 'label') {\n    var di = attrs.di || this._bpmnFactory.createDiLabel();\n    return this.baseCreate(elementType, assign({ type: 'label', di: di }, DEFAULT_LABEL_SIZE, attrs));\n  }\n\n  return this.createBpmnElement(elementType, attrs);\n};\n\nElementFactory.prototype.createBpmnElement = function(elementType, attrs) {\n  var size,\n      translate = this._translate;\n\n  attrs = attrs || {};\n\n  var businessObject = attrs.businessObject,\n      di = attrs.di;\n\n  if (!businessObject) {\n    if (!attrs.type) {\n      throw new Error(translate('no shape type specified'));\n    }\n\n    businessObject = this._bpmnFactory.create(attrs.type);\n\n    ensureCompatDiRef(businessObject);\n  }\n\n  if (!isModdleDi(di)) {\n    var diAttrs = assign(\n      di || {},\n      { id: businessObject.id + '_di' }\n    );\n\n    if (elementType === 'root') {\n      di = this._bpmnFactory.createDiPlane(businessObject, diAttrs);\n    } else\n    if (elementType === 'connection') {\n      di = this._bpmnFactory.createDiEdge(businessObject, diAttrs);\n    } else {\n      di = this._bpmnFactory.createDiShape(businessObject, diAttrs);\n    }\n  }\n\n  if (is(businessObject, 'bpmn:Group')) {\n    attrs = assign({\n      isFrame: true\n    }, attrs);\n  }\n\n  applyAttributes(businessObject, attrs, [\n    'processRef',\n    'isInterrupting',\n    'associationDirection',\n    'isForCompensation'\n  ]);\n\n  if (attrs.isExpanded) {\n    applyAttribute(di, attrs, 'isExpanded');\n  }\n\n  if (is(businessObject, 'bpmn:SubProcess')) {\n    attrs.collapsed = !isExpanded(businessObject, di);\n  }\n\n  if (is(businessObject, 'bpmn:ExclusiveGateway')) {\n    di.isMarkerVisible = true;\n  }\n\n  var eventDefinitions,\n      newEventDefinition;\n\n  if (attrs.eventDefinitionType) {\n    eventDefinitions = businessObject.get('eventDefinitions') || [];\n    newEventDefinition = this._bpmnFactory.create(attrs.eventDefinitionType, attrs.eventDefinitionAttrs);\n\n    if (attrs.eventDefinitionType === 'bpmn:ConditionalEventDefinition') {\n      newEventDefinition.condition = this._bpmnFactory.create('bpmn:FormalExpression');\n    }\n\n    eventDefinitions.push(newEventDefinition);\n\n    newEventDefinition.$parent = businessObject;\n    businessObject.eventDefinitions = eventDefinitions;\n\n    delete attrs.eventDefinitionType;\n  }\n\n  size = this.getDefaultSize(businessObject, di);\n\n  attrs = assign({\n    id: businessObject.id\n  }, size, attrs, {\n    businessObject: businessObject,\n    di: di\n  });\n\n  return this.baseCreate(elementType, attrs);\n};\n\n\nElementFactory.prototype.getDefaultSize = function(element, di) {\n\n  var bo = getBusinessObject(element);\n  di = di || getDi(element);\n\n  if (is(bo, 'bpmn:SubProcess')) {\n    if (isExpanded(bo, di)) {\n      return { width: 350, height: 200 };\n    } else {\n      return { width: 100, height: 80 };\n    }\n  }\n\n  if (is(bo, 'bpmn:Task')) {\n    return { width: 100, height: 80 };\n  }\n\n  if (is(bo, 'bpmn:Gateway')) {\n    return { width: 50, height: 50 };\n  }\n\n  if (is(bo, 'bpmn:Event')) {\n    return { width: 36, height: 36 };\n  }\n\n  if (is(bo, 'bpmn:Participant')) {\n    if (isExpanded(bo, di)) {\n      return { width: 600, height: 250 };\n    } else {\n      return { width: 400, height: 60 };\n    }\n  }\n\n  if (is(bo, 'bpmn:Lane')) {\n    return { width: 400, height: 100 };\n  }\n\n  if (is(bo, 'bpmn:DataObjectReference')) {\n    return { width: 36, height: 50 };\n  }\n\n  if (is(bo, 'bpmn:DataStoreReference')) {\n    return { width: 50, height: 50 };\n  }\n\n  if (is(bo, 'bpmn:TextAnnotation')) {\n    return { width: 100, height: 30 };\n  }\n\n  if (is(bo, 'bpmn:Group')) {\n    return { width: 300, height: 300 };\n  }\n\n  return { width: 100, height: 80 };\n};\n\n\n/**\n * Create participant.\n *\n * @param {boolean|Object} [attrs] attrs\n *\n * @returns {djs.model.Shape}\n */\nElementFactory.prototype.createParticipantShape = function(attrs) {\n\n  if (!isObject(attrs)) {\n    attrs = { isExpanded: attrs };\n  }\n\n  attrs = assign({ type: 'bpmn:Participant' }, attrs || {});\n\n  // participants are expanded by default\n  if (attrs.isExpanded !== false) {\n    attrs.processRef = this._bpmnFactory.create('bpmn:Process');\n  }\n\n  return this.createShape(attrs);\n};\n\n\n// helpers //////////////////////\n\n/**\n * Apply attributes from a map to the given element,\n * remove attribute from the map on application.\n *\n * @param {Base} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {Array<string>} attributeNames name of attributes to apply\n */\nfunction applyAttributes(element, attrs, attributeNames) {\n\n  forEach(attributeNames, function(property) {\n    if (attrs[property] !== undefined) {\n      applyAttribute(element, attrs, property);\n    }\n  });\n}\n\n/**\n * Apply named property to element and drain it from the attrs\n * collection.\n *\n * @param {Base} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {string} attributeName to apply\n */\nfunction applyAttribute(element, attrs, attributeName) {\n  element[attributeName] = attrs[attributeName];\n\n  delete attrs[attributeName];\n}\n\n\nfunction isModdleDi(element) {\n  return isAny(element, [\n    'bpmndi:BPMNShape',\n    'bpmndi:BPMNEdge',\n    'bpmndi:BPMNDiagram',\n    'bpmndi:BPMNPlane',\n  ]);\n}","import inherits from 'inherits';\n\nimport BaseModeling from 'diagram-js/lib/features/modeling/Modeling';\n\nimport UpdateModdlePropertiesHandler from './cmd/UpdateModdlePropertiesHandler';\nimport UpdatePropertiesHandler from './cmd/UpdatePropertiesHandler';\nimport UpdateCanvasRootHandler from './cmd/UpdateCanvasRootHandler';\nimport AddLaneHandler from './cmd/AddLaneHandler';\nimport SplitLaneHandler from './cmd/SplitLaneHandler';\nimport ResizeLaneHandler from './cmd/ResizeLaneHandler';\nimport UpdateFlowNodeRefsHandler from './cmd/UpdateFlowNodeRefsHandler';\nimport IdClaimHandler from './cmd/IdClaimHandler';\nimport SetColorHandler from './cmd/SetColorHandler';\n\nimport UpdateLabelHandler from '../label-editing/cmd/UpdateLabelHandler';\n\n\n/**\n * BPMN 2.0 modeling features activator\n *\n * @param {EventBus} eventBus\n * @param {ElementFactory} elementFactory\n * @param {CommandStack} commandStack\n * @param {BpmnRules} bpmnRules\n */\nexport default function Modeling(\n    eventBus, elementFactory, commandStack,\n    bpmnRules) {\n\n  BaseModeling.call(this, eventBus, elementFactory, commandStack);\n\n  this._bpmnRules = bpmnRules;\n}\n\ninherits(Modeling, BaseModeling);\n\nModeling.$inject = [\n  'eventBus',\n  'elementFactory',\n  'commandStack',\n  'bpmnRules'\n];\n\n\nModeling.prototype.getHandlers = function() {\n  var handlers = BaseModeling.prototype.getHandlers.call(this);\n\n  handlers['element.updateModdleProperties'] = UpdateModdlePropertiesHandler;\n  handlers['element.updateProperties'] = UpdatePropertiesHandler;\n  handlers['canvas.updateRoot'] = UpdateCanvasRootHandler;\n  handlers['lane.add'] = AddLaneHandler;\n  handlers['lane.resize'] = ResizeLaneHandler;\n  handlers['lane.split'] = SplitLaneHandler;\n  handlers['lane.updateRefs'] = UpdateFlowNodeRefsHandler;\n  handlers['id.updateClaim'] = IdClaimHandler;\n  handlers['element.setColor'] = SetColorHandler;\n  handlers['element.updateLabel'] = UpdateLabelHandler;\n\n  return handlers;\n};\n\n\nModeling.prototype.updateLabel = function(element, newLabel, newBounds, hints) {\n  this._commandStack.execute('element.updateLabel', {\n    element: element,\n    newLabel: newLabel,\n    newBounds: newBounds,\n    hints: hints || {}\n  });\n};\n\n\nModeling.prototype.connect = function(source, target, attrs, hints) {\n\n  var bpmnRules = this._bpmnRules;\n\n  if (!attrs) {\n    attrs = bpmnRules.canConnect(source, target);\n  }\n\n  if (!attrs) {\n    return;\n  }\n\n  return this.createConnection(source, target, attrs, source.parent, hints);\n};\n\n\nModeling.prototype.updateModdleProperties = function(element, moddleElement, properties) {\n  this._commandStack.execute('element.updateModdleProperties', {\n    element: element,\n    moddleElement: moddleElement,\n    properties: properties\n  });\n};\n\nModeling.prototype.updateProperties = function(element, properties) {\n  this._commandStack.execute('element.updateProperties', {\n    element: element,\n    properties: properties\n  });\n};\n\nModeling.prototype.resizeLane = function(laneShape, newBounds, balanced) {\n  this._commandStack.execute('lane.resize', {\n    shape: laneShape,\n    newBounds: newBounds,\n    balanced: balanced\n  });\n};\n\nModeling.prototype.addLane = function(targetLaneShape, location) {\n  var context = {\n    shape: targetLaneShape,\n    location: location\n  };\n\n  this._commandStack.execute('lane.add', context);\n\n  return context.newLane;\n};\n\nModeling.prototype.splitLane = function(targetLane, count) {\n  this._commandStack.execute('lane.split', {\n    shape: targetLane,\n    count: count\n  });\n};\n\n/**\n * Transform the current diagram into a collaboration.\n *\n * @return {djs.model.Root} the new root element\n */\nModeling.prototype.makeCollaboration = function() {\n\n  var collaborationElement = this._create('root', {\n    type: 'bpmn:Collaboration'\n  });\n\n  var context = {\n    newRoot: collaborationElement\n  };\n\n  this._commandStack.execute('canvas.updateRoot', context);\n\n  return collaborationElement;\n};\n\nModeling.prototype.updateLaneRefs = function(flowNodeShapes, laneShapes) {\n\n  this._commandStack.execute('lane.updateRefs', {\n    flowNodeShapes: flowNodeShapes,\n    laneShapes: laneShapes\n  });\n};\n\n/**\n * Transform the current diagram into a process.\n *\n * @return {djs.model.Root} the new root element\n */\nModeling.prototype.makeProcess = function() {\n\n  var processElement = this._create('root', {\n    type: 'bpmn:Process'\n  });\n\n  var context = {\n    newRoot: processElement\n  };\n\n  this._commandStack.execute('canvas.updateRoot', context);\n};\n\n\nModeling.prototype.claimId = function(id, moddleElement) {\n  this._commandStack.execute('id.updateClaim', {\n    id: id,\n    element: moddleElement,\n    claiming: true\n  });\n};\n\n\nModeling.prototype.unclaimId = function(id, moddleElement) {\n  this._commandStack.execute('id.updateClaim', {\n    id: id,\n    element: moddleElement\n  });\n};\n\nModeling.prototype.setColor = function(elements, colors) {\n  if (!elements.length) {\n    elements = [ elements ];\n  }\n\n  this._commandStack.execute('element.setColor', {\n    elements: elements,\n    colors: colors\n  });\n};\n","import inherits from 'inherits';\n\nimport {\n  getOrientation,\n  getMid,\n  asTRBL\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  substract\n} from 'diagram-js/lib/util/Math';\n\nimport {\n  hasExternalLabel\n} from '../../../util/LabelUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nvar ALIGNMENTS = [\n  'top',\n  'bottom',\n  'left',\n  'right'\n];\n\nvar ELEMENT_LABEL_DISTANCE = 10;\n\n/**\n * A component that makes sure that external labels are added\n * together with respective elements and properly updated (DI wise)\n * during move.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function AdaptiveLabelPositioningBehavior(eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  this.postExecuted([\n    'connection.create',\n    'connection.layout',\n    'connection.updateWaypoints'\n  ], function(event) {\n    var context = event.context,\n        connection = context.connection,\n        source = connection.source,\n        target = connection.target,\n        hints = context.hints || {};\n\n    if (hints.createElementsBehavior !== false) {\n      checkLabelAdjustment(source);\n      checkLabelAdjustment(target);\n    }\n  });\n\n\n  this.postExecuted([\n    'label.create'\n  ], function(event) {\n    var context = event.context,\n        shape = context.shape,\n        hints = context.hints || {};\n\n    if (hints.createElementsBehavior !== false) {\n      checkLabelAdjustment(shape.labelTarget);\n    }\n  });\n\n\n  this.postExecuted([\n    'elements.create'\n  ], function(event) {\n    var context = event.context,\n        elements = context.elements,\n        hints = context.hints || {};\n\n    if (hints.createElementsBehavior !== false) {\n      elements.forEach(function(element) {\n        checkLabelAdjustment(element);\n      });\n    }\n  });\n\n  function checkLabelAdjustment(element) {\n\n    // skip non-existing labels\n    if (!hasExternalLabel(element)) {\n      return;\n    }\n\n    var optimalPosition = getOptimalPosition(element);\n\n    // no optimal position found\n    if (!optimalPosition) {\n      return;\n    }\n\n    adjustLabelPosition(element, optimalPosition);\n  }\n\n  function adjustLabelPosition(element, orientation) {\n\n    var elementMid = getMid(element),\n        label = element.label,\n        labelMid = getMid(label);\n\n    // ignore labels that are being created\n    if (!label.parent) {\n      return;\n    }\n\n    var elementTrbl = asTRBL(element);\n\n    var newLabelMid;\n\n    switch (orientation) {\n    case 'top':\n      newLabelMid = {\n        x: elementMid.x,\n        y: elementTrbl.top - ELEMENT_LABEL_DISTANCE - label.height / 2\n      };\n\n      break;\n\n    case 'left':\n\n      newLabelMid = {\n        x: elementTrbl.left - ELEMENT_LABEL_DISTANCE - label.width / 2,\n        y: elementMid.y\n      };\n\n      break;\n\n    case 'bottom':\n\n      newLabelMid = {\n        x: elementMid.x,\n        y: elementTrbl.bottom + ELEMENT_LABEL_DISTANCE + label.height / 2\n      };\n\n      break;\n\n    case 'right':\n\n      newLabelMid = {\n        x: elementTrbl.right + ELEMENT_LABEL_DISTANCE + label.width / 2,\n        y: elementMid.y\n      };\n\n      break;\n    }\n\n    var delta = substract(newLabelMid, labelMid);\n\n    modeling.moveShape(label, delta);\n  }\n\n}\n\ninherits(AdaptiveLabelPositioningBehavior, CommandInterceptor);\n\nAdaptiveLabelPositioningBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];\n\n\n// helpers //////////////////////\n\n/**\n * Return alignments which are taken by a boundary's host element\n *\n * @param {Shape} element\n *\n * @return {Array<string>}\n */\nfunction getTakenHostAlignments(element) {\n\n  var hostElement = element.host,\n      elementMid = getMid(element),\n      hostOrientation = getOrientation(elementMid, hostElement);\n\n  var freeAlignments;\n\n  // check whether there is a multi-orientation, e.g. 'top-left'\n  if (hostOrientation.indexOf('-') >= 0) {\n    freeAlignments = hostOrientation.split('-');\n  } else {\n    freeAlignments = [ hostOrientation ];\n  }\n\n  var takenAlignments = ALIGNMENTS.filter(function(alignment) {\n\n    return freeAlignments.indexOf(alignment) === -1;\n  });\n\n  return takenAlignments;\n\n}\n\n/**\n * Return alignments which are taken by related connections\n *\n * @param {Shape} element\n *\n * @return {Array<string>}\n */\nfunction getTakenConnectionAlignments(element) {\n\n  var elementMid = getMid(element);\n\n  var takenAlignments = [].concat(\n    element.incoming.map(function(c) {\n      return c.waypoints[c.waypoints.length - 2 ];\n    }),\n    element.outgoing.map(function(c) {\n      return c.waypoints[1];\n    })\n  ).map(function(point) {\n    return getApproximateOrientation(elementMid, point);\n  });\n\n  return takenAlignments;\n}\n\n/**\n * Return the optimal label position around an element\n * or _undefined_, if none was found.\n *\n * @param  {Shape} element\n *\n * @return {string} positioning identifier\n */\nfunction getOptimalPosition(element) {\n\n  var labelMid = getMid(element.label);\n\n  var elementMid = getMid(element);\n\n  var labelOrientation = getApproximateOrientation(elementMid, labelMid);\n\n  if (!isAligned(labelOrientation)) {\n    return;\n  }\n\n  var takenAlignments = getTakenConnectionAlignments(element);\n\n  if (element.host) {\n    var takenHostAlignments = getTakenHostAlignments(element);\n\n    takenAlignments = takenAlignments.concat(takenHostAlignments);\n  }\n\n  var freeAlignments = ALIGNMENTS.filter(function(alignment) {\n\n    return takenAlignments.indexOf(alignment) === -1;\n  });\n\n  // NOTHING TO DO; label already aligned a.O.K.\n  if (freeAlignments.indexOf(labelOrientation) !== -1) {\n    return;\n  }\n\n  return freeAlignments[0];\n}\n\nfunction getApproximateOrientation(p0, p1) {\n  return getOrientation(p1, p0, 5);\n}\n\nfunction isAligned(orientation) {\n  return ALIGNMENTS.indexOf(orientation) !== -1;\n}\n","import inherits from 'inherits';\n\nimport { is } from '../../../util/ModelUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\n\nexport default function AppendBehavior(eventBus, elementFactory, bpmnRules) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  // assign correct shape position unless already set\n\n  this.preExecute('shape.append', function(context) {\n\n    var source = context.source,\n        shape = context.shape;\n\n    if (!context.position) {\n\n      if (is(shape, 'bpmn:TextAnnotation')) {\n        context.position = {\n          x: source.x + source.width / 2 + 75,\n          y: source.y - (50) - shape.height / 2\n        };\n      } else {\n        context.position = {\n          x: source.x + source.width + 80 + shape.width / 2,\n          y: source.y + source.height / 2\n        };\n      }\n    }\n  }, true);\n}\n\ninherits(AppendBehavior, CommandInterceptor);\n\nAppendBehavior.$inject = [\n  'eventBus',\n  'elementFactory',\n  'bpmnRules'\n];","import inherits from 'inherits';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  filter,\r\n  forEach\r\n} from 'min-dash';\r\n\r\n\r\nexport default function AssociationBehavior(injector, modeling) {\r\n  injector.invoke(CommandInterceptor, this);\r\n\r\n  this.postExecute('shape.move', function(context) {\r\n    var newParent = context.newParent,\r\n        shape = context.shape;\r\n\r\n    var associations = filter(shape.incoming.concat(shape.outgoing), function(connection) {\r\n      return is(connection, 'bpmn:Association');\r\n    });\r\n\r\n    forEach(associations, function(association) {\r\n      modeling.moveConnection(association, { x: 0, y: 0 }, newParent);\r\n    });\r\n  }, true);\r\n}\r\n\r\ninherits(AssociationBehavior, CommandInterceptor);\r\n\r\nAssociationBehavior.$inject = [\r\n  'injector',\r\n  'modeling'\r\n];","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { getBusinessObject } from '../../../util/ModelUtil';\n\nimport { isAny } from '../util/ModelingUtil';\n\nimport { isLabel } from '../../../util/LabelUtil';\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * Replace intermediate event with boundary event when creating or moving results in attached event.\n */\nexport default function AttachEventBehavior(bpmnReplace, injector) {\n  injector.invoke(CommandInterceptor, this);\n\n  this._bpmnReplace = bpmnReplace;\n\n  var self = this;\n\n  this.postExecuted('elements.create', LOW_PRIORITY, function(context) {\n    var elements = context.elements;\n\n    elements = elements.filter(function(shape) {\n      var host = shape.host;\n\n      return shouldReplace(shape, host);\n    });\n\n    if (elements.length !== 1) {\n      return;\n    }\n\n    elements.map(function(element) {\n      return elements.indexOf(element);\n    }).forEach(function(index) {\n      var host = elements[ index ];\n\n      context.elements[ index ] = self.replaceShape(elements[ index ], host);\n    });\n  }, true);\n\n\n  this.preExecute('elements.move', LOW_PRIORITY, function(context) {\n    var shapes = context.shapes,\n        host = context.newHost;\n\n    if (shapes.length !== 1) {\n      return;\n    }\n\n    var shape = shapes[0];\n\n    if (shouldReplace(shape, host)) {\n      context.shapes = [ self.replaceShape(shape, host) ];\n    }\n  }, true);\n}\n\nAttachEventBehavior.$inject = [\n  'bpmnReplace',\n  'injector'\n];\n\ninherits(AttachEventBehavior, CommandInterceptor);\n\nAttachEventBehavior.prototype.replaceShape = function(shape, host) {\n  var eventDefinition = getEventDefinition(shape);\n\n  var boundaryEvent = {\n    type: 'bpmn:BoundaryEvent',\n    host: host\n  };\n\n  if (eventDefinition) {\n    boundaryEvent.eventDefinitionType = eventDefinition.$type;\n  }\n\n  return this._bpmnReplace.replaceElement(shape, boundaryEvent, { layoutConnection: false });\n};\n\n\n// helpers //////////\n\nfunction getEventDefinition(element) {\n  var businessObject = getBusinessObject(element),\n      eventDefinitions = businessObject.eventDefinitions;\n\n  return eventDefinitions && eventDefinitions[0];\n}\n\nfunction shouldReplace(shape, host) {\n  return !isLabel(shape) &&\n    isAny(shape, [ 'bpmn:IntermediateThrowEvent', 'bpmn:IntermediateCatchEvent' ]) && !!host;\n}\n","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\n\nimport {\n  filter,\n  forEach\n} from 'min-dash';\n\nvar HIGH_PRIORITY = 2000;\n\n\n/**\n * BPMN specific boundary event behavior\n */\nexport default function BoundaryEventBehavior(eventBus, moddle, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  function getBoundaryEvents(element) {\n    return filter(element.attachers, function(attacher) {\n      return is(attacher, 'bpmn:BoundaryEvent');\n    });\n  }\n\n  // remove after connecting to event-based gateway\n  this.postExecute('connection.create', function(event) {\n    var source = event.context.source,\n        target = event.context.target,\n        boundaryEvents = getBoundaryEvents(target);\n\n    if (\n      is(source, 'bpmn:EventBasedGateway') &&\n      is(target, 'bpmn:ReceiveTask') &&\n      boundaryEvents.length > 0\n    ) {\n      modeling.removeElements(boundaryEvents);\n    }\n\n  });\n\n  // remove after replacing connected gateway with event-based gateway\n  this.postExecute('connection.reconnect', function(event) {\n    var oldSource = event.context.oldSource,\n        newSource = event.context.newSource;\n\n    if (is(oldSource, 'bpmn:Gateway') &&\n        is(newSource, 'bpmn:EventBasedGateway')) {\n      forEach(newSource.outgoing, function(connection) {\n        var target = connection.target,\n            attachedboundaryEvents = getBoundaryEvents(target);\n\n        if (is(target, 'bpmn:ReceiveTask') &&\n            attachedboundaryEvents.length > 0) {\n          modeling.removeElements(attachedboundaryEvents);\n        }\n      });\n    }\n  });\n\n  // copy reference to root element on replace\n  eventBus.on('moddleCopy.canCopyProperty', HIGH_PRIORITY, function(context) {\n    var parent = context.parent,\n        property = context.property,\n        propertyName = context.propertyName;\n\n    var propertyDescriptor = moddle.getPropertyDescriptor(parent, propertyName);\n\n    if (propertyDescriptor && propertyDescriptor.isReference && is(property, 'bpmn:RootElement')) {\n      parent.set(propertyName, property);\n    }\n  });\n}\n\nBoundaryEventBehavior.$inject = [\n  'eventBus',\n  'moddle',\n  'modeling'\n];\n\ninherits(BoundaryEventBehavior, CommandInterceptor);","import inherits from 'inherits';\n\nimport { is } from '../../../util/ModelUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { getParent } from '../util/ModelingUtil';\n\n\nexport default function CreateBehavior(injector) {\n  injector.invoke(CommandInterceptor, this);\n\n  this.preExecute('shape.create', 1500, function(event) {\n    var context = event.context,\n        parent = context.parent,\n        shape = context.shape;\n\n    if (is(parent, 'bpmn:Lane') && !is(shape, 'bpmn:Lane')) {\n      context.parent = getParent(parent, 'bpmn:Participant');\n    }\n  });\n\n}\n\n\nCreateBehavior.$inject = [ 'injector' ];\n\ninherits(CreateBehavior, CommandInterceptor);","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\n\n\n/**\n * BPMN specific create data object behavior\n */\nexport default function CreateDataObjectBehavior(eventBus, bpmnFactory, moddle) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  this.preExecute('shape.create', function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:DataObjectReference') && shape.type !== 'label') {\n\n      // create a DataObject every time a DataObjectReference is created\n      var dataObject = bpmnFactory.create('bpmn:DataObject');\n\n      // set the reference to the DataObject\n      shape.businessObject.dataObjectRef = dataObject;\n    }\n  });\n\n}\n\nCreateDataObjectBehavior.$inject = [\n  'eventBus',\n  'bpmnFactory',\n  'moddle'\n];\n\ninherits(CreateDataObjectBehavior, CommandInterceptor);","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { getBusinessObject, is } from '../../../util/ModelUtil';\n\nimport { isLabel } from '../../../util/LabelUtil';\n\nimport { getBBox } from 'diagram-js/lib/util/Elements';\n\nimport {\n  assign,\n  find\n} from 'min-dash';\n\nimport { asTRBL } from 'diagram-js/lib/layout/LayoutUtil';\n\nvar HORIZONTAL_PARTICIPANT_PADDING = 20,\n    VERTICAL_PARTICIPANT_PADDING = 20;\n\nexport var PARTICIPANT_BORDER_WIDTH = 30;\n\nvar HIGH_PRIORITY = 2000;\n\n\n/**\n * BPMN-specific behavior for creating participants.\n */\nexport default function CreateParticipantBehavior(canvas, eventBus, modeling) {\n  CommandInterceptor.call(this, eventBus);\n\n  // fit participant\n  eventBus.on([\n    'create.start',\n    'shape.move.start'\n  ], HIGH_PRIORITY, function(event) {\n    var context = event.context,\n        shape = context.shape,\n        rootElement = canvas.getRootElement();\n\n    if (!is(shape, 'bpmn:Participant') ||\n      !is(rootElement, 'bpmn:Process') ||\n      !rootElement.children.length) {\n      return;\n    }\n\n    // ignore connections, groups and labels\n    var children = rootElement.children.filter(function(element) {\n      return !is(element, 'bpmn:Group') &&\n        !isLabel(element) &&\n        !isConnection(element);\n    });\n\n    // ensure for available children to calculate bounds\n    if (!children.length) {\n      return;\n    }\n\n    var childrenBBox = getBBox(children);\n\n    var participantBounds = getParticipantBounds(shape, childrenBBox);\n\n    // assign width and height\n    assign(shape, participantBounds);\n\n    // assign create constraints\n    context.createConstraints = getParticipantCreateConstraints(shape, childrenBBox);\n  });\n\n  // force hovering process when creating first participant\n  eventBus.on('create.start', HIGH_PRIORITY, function(event) {\n    var context = event.context,\n        shape = context.shape,\n        rootElement = canvas.getRootElement(),\n        rootElementGfx = canvas.getGraphics(rootElement);\n\n    function ensureHoveringProcess(event) {\n      event.element = rootElement;\n      event.gfx = rootElementGfx;\n    }\n\n    if (is(shape, 'bpmn:Participant') && is(rootElement, 'bpmn:Process')) {\n      eventBus.on('element.hover', HIGH_PRIORITY, ensureHoveringProcess);\n\n      eventBus.once('create.cleanup', function() {\n        eventBus.off('element.hover', ensureHoveringProcess);\n      });\n    }\n  });\n\n  // turn process into collaboration when creating first participant\n  function getOrCreateCollaboration() {\n    var rootElement = canvas.getRootElement();\n\n    if (is(rootElement, 'bpmn:Collaboration')) {\n      return rootElement;\n    }\n\n    return modeling.makeCollaboration();\n  }\n\n  // when creating mutliple elements through `elements.create` parent must be set to collaboration\n  // and passed to `shape.create` as hint\n  this.preExecute('elements.create', HIGH_PRIORITY, function(context) {\n    var elements = context.elements,\n        parent = context.parent,\n        participant = findParticipant(elements),\n        hints;\n\n    if (participant && is(parent, 'bpmn:Process')) {\n      context.parent = getOrCreateCollaboration();\n\n      hints = context.hints = context.hints || {};\n\n      hints.participant = participant;\n      hints.process = parent;\n      hints.processRef = getBusinessObject(participant).get('processRef');\n    }\n  }, true);\n\n  // when creating single shape through `shape.create` parent must be set to collaboration\n  // unless it was already set through `elements.create`\n  this.preExecute('shape.create', function(context) {\n    var parent = context.parent,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Participant') && is(parent, 'bpmn:Process')) {\n      context.parent = getOrCreateCollaboration();\n\n      context.process = parent;\n      context.processRef = getBusinessObject(shape).get('processRef');\n    }\n  }, true);\n\n  // #execute necessary because #preExecute not called on CommandStack#redo\n  this.execute('shape.create', function(context) {\n    var hints = context.hints || {},\n        process = context.process || hints.process,\n        shape = context.shape,\n        participant = hints.participant;\n\n    // both shape.create and elements.create must be handled\n    if (process && (!participant || shape === participant)) {\n\n      // monkey-patch process ref\n      getBusinessObject(shape).set('processRef', getBusinessObject(process));\n    }\n  }, true);\n\n  this.revert('shape.create', function(context) {\n    var hints = context.hints || {},\n        process = context.process || hints.process,\n        processRef = context.processRef || hints.processRef,\n        shape = context.shape,\n        participant = hints.participant;\n\n    // both shape.create and elements.create must be handled\n    if (process && (!participant || shape === participant)) {\n\n      // monkey-patch process ref\n      getBusinessObject(shape).set('processRef', processRef);\n    }\n  }, true);\n\n  this.postExecute('shape.create', function(context) {\n    var hints = context.hints || {},\n        process = context.process || context.hints.process,\n        shape = context.shape,\n        participant = hints.participant;\n\n    if (process) {\n      var children = process.children.slice();\n\n      // both shape.create and elements.create must be handled\n      if (!participant) {\n        modeling.moveElements(children, { x: 0, y: 0 }, shape);\n      } else if (shape === participant) {\n        modeling.moveElements(children, { x: 0, y: 0 }, participant);\n      }\n    }\n  }, true);\n}\n\nCreateParticipantBehavior.$inject = [\n  'canvas',\n  'eventBus',\n  'modeling'\n];\n\ninherits(CreateParticipantBehavior, CommandInterceptor);\n\n// helpers //////////\n\nfunction getParticipantBounds(shape, childrenBBox) {\n  childrenBBox = {\n    width: childrenBBox.width + HORIZONTAL_PARTICIPANT_PADDING * 2 + PARTICIPANT_BORDER_WIDTH,\n    height: childrenBBox.height + VERTICAL_PARTICIPANT_PADDING * 2\n  };\n\n  var width = Math.max(shape.width, childrenBBox.width),\n      height = Math.max(shape.height, childrenBBox.height);\n\n  return {\n    x: -width / 2,\n    y: -height / 2,\n    width: width,\n    height: height\n  };\n}\n\nfunction getParticipantCreateConstraints(shape, childrenBBox) {\n  childrenBBox = asTRBL(childrenBBox);\n\n  return {\n    bottom: childrenBBox.top + shape.height / 2 - VERTICAL_PARTICIPANT_PADDING,\n    left: childrenBBox.right - shape.width / 2 + HORIZONTAL_PARTICIPANT_PADDING,\n    top: childrenBBox.bottom - shape.height / 2 + VERTICAL_PARTICIPANT_PADDING,\n    right: childrenBBox.left + shape.width / 2 - HORIZONTAL_PARTICIPANT_PADDING - PARTICIPANT_BORDER_WIDTH\n  };\n}\n\nfunction isConnection(element) {\n  return !!element.waypoints;\n}\n\nfunction findParticipant(elements) {\n  return find(elements, function(element) {\n    return is(element, 'bpmn:Participant');\n  });\n}","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from 'diagram-js/lib/util/Collections';\n\nimport {\n  find\n} from 'min-dash';\n\nimport {\n  is\n} from '../../../util/ModelUtil';\n\nvar TARGET_REF_PLACEHOLDER_NAME = '__targetRef_placeholder';\n\n\n/**\n * This behavior makes sure we always set a fake\n * DataInputAssociation#targetRef as demanded by the BPMN 2.0\n * XSD schema.\n *\n * The reference is set to a bpmn:Property{ name: '__targetRef_placeholder' }\n * which is created on the fly and cleaned up afterwards if not needed\n * anymore.\n *\n * @param {EventBus} eventBus\n * @param {BpmnFactory} bpmnFactory\n */\nexport default function DataInputAssociationBehavior(eventBus, bpmnFactory) {\n\n  CommandInterceptor.call(this, eventBus);\n\n\n  this.executed([\n    'connection.create',\n    'connection.delete',\n    'connection.move',\n    'connection.reconnect'\n  ], ifDataInputAssociation(fixTargetRef));\n\n  this.reverted([\n    'connection.create',\n    'connection.delete',\n    'connection.move',\n    'connection.reconnect'\n  ], ifDataInputAssociation(fixTargetRef));\n\n\n  function usesTargetRef(element, targetRef, removedConnection) {\n\n    var inputAssociations = element.get('dataInputAssociations');\n\n    return find(inputAssociations, function(association) {\n      return association !== removedConnection &&\n             association.targetRef === targetRef;\n    });\n  }\n\n  function getTargetRef(element, create) {\n\n    var properties = element.get('properties');\n\n    var targetRefProp = find(properties, function(p) {\n      return p.name === TARGET_REF_PLACEHOLDER_NAME;\n    });\n\n    if (!targetRefProp && create) {\n      targetRefProp = bpmnFactory.create('bpmn:Property', {\n        name: TARGET_REF_PLACEHOLDER_NAME\n      });\n\n      collectionAdd(properties, targetRefProp);\n    }\n\n    return targetRefProp;\n  }\n\n  function cleanupTargetRef(element, connection) {\n\n    var targetRefProp = getTargetRef(element);\n\n    if (!targetRefProp) {\n      return;\n    }\n\n    if (!usesTargetRef(element, targetRefProp, connection)) {\n      collectionRemove(element.get('properties'), targetRefProp);\n    }\n  }\n\n  /**\n   * Make sure targetRef is set to a valid property or\n   * `null` if the connection is detached.\n   *\n   * @param {Event} event\n   */\n  function fixTargetRef(event) {\n\n    var context = event.context,\n        connection = context.connection,\n        connectionBo = connection.businessObject,\n        target = connection.target,\n        targetBo = target && target.businessObject,\n        newTarget = context.newTarget,\n        newTargetBo = newTarget && newTarget.businessObject,\n        oldTarget = context.oldTarget || context.target,\n        oldTargetBo = oldTarget && oldTarget.businessObject;\n\n    var dataAssociation = connection.businessObject,\n        targetRefProp;\n\n    if (oldTargetBo && oldTargetBo !== targetBo) {\n      cleanupTargetRef(oldTargetBo, connectionBo);\n    }\n\n    if (newTargetBo && newTargetBo !== targetBo) {\n      cleanupTargetRef(newTargetBo, connectionBo);\n    }\n\n    if (targetBo) {\n      targetRefProp = getTargetRef(targetBo, true);\n      dataAssociation.targetRef = targetRefProp;\n    } else {\n      dataAssociation.targetRef = null;\n    }\n  }\n}\n\nDataInputAssociationBehavior.$inject = [\n  'eventBus',\n  'bpmnFactory'\n];\n\ninherits(DataInputAssociationBehavior, CommandInterceptor);\n\n\n/**\n * Only call the given function when the event\n * touches a bpmn:DataInputAssociation.\n *\n * @param {Function} fn\n * @return {Function}\n */\nfunction ifDataInputAssociation(fn) {\n\n  return function(event) {\n    var context = event.context,\n        connection = context.connection;\n\n    if (is(connection, 'bpmn:DataInputAssociation')) {\n      return fn(event);\n    }\n  };\n}","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  getBusinessObject,\r\n  getDi,\r\n  is\r\n} from '../../../util/ModelUtil';\r\n\r\nimport { isAny } from '../util/ModelingUtil';\r\n\r\nimport UpdateSemanticParentHandler from '../cmd/UpdateSemanticParentHandler';\r\n\r\n\r\n/**\r\n * BPMN specific data store behavior\r\n */\r\nexport default function DataStoreBehavior(\r\n    canvas, commandStack, elementRegistry,\r\n    eventBus) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  commandStack.registerHandler('dataStore.updateContainment', UpdateSemanticParentHandler);\r\n\r\n  function getFirstParticipantWithProcessRef() {\r\n    return elementRegistry.filter(function(element) {\r\n      return is(element, 'bpmn:Participant') && getBusinessObject(element).processRef;\r\n    })[0];\r\n  }\r\n\r\n  function getDataStores(element) {\r\n    return element.children.filter(function(child) {\r\n      return is(child, 'bpmn:DataStoreReference') && !child.labelTarget;\r\n    });\r\n  }\r\n\r\n  function updateDataStoreParent(dataStore, newDataStoreParent) {\r\n    var dataStoreBo = dataStore.businessObject || dataStore;\r\n\r\n    newDataStoreParent = newDataStoreParent || getFirstParticipantWithProcessRef();\r\n\r\n    if (newDataStoreParent) {\r\n      var newDataStoreParentBo = newDataStoreParent.businessObject || newDataStoreParent;\r\n\r\n      commandStack.execute('dataStore.updateContainment', {\r\n        dataStoreBo: dataStoreBo,\r\n        dataStoreDi: getDi(dataStore),\r\n        newSemanticParent: newDataStoreParentBo.processRef || newDataStoreParentBo,\r\n        newDiParent: getDi(newDataStoreParent)\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  // disable auto-resize for data stores\r\n  this.preExecute('shape.create', function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    if (is(shape, 'bpmn:DataStoreReference') &&\r\n        shape.type !== 'label') {\r\n\r\n      if (!context.hints) {\r\n        context.hints = {};\r\n      }\r\n\r\n      // prevent auto resizing\r\n      context.hints.autoResize = false;\r\n    }\r\n  });\r\n\r\n\r\n  // disable auto-resize for data stores\r\n  this.preExecute('elements.move', function(event) {\r\n    var context = event.context,\r\n        shapes = context.shapes;\r\n\r\n    var dataStoreReferences = shapes.filter(function(shape) {\r\n      return is(shape, 'bpmn:DataStoreReference');\r\n    });\r\n\r\n    if (dataStoreReferences.length) {\r\n      if (!context.hints) {\r\n        context.hints = {};\r\n      }\r\n\r\n      // prevent auto resizing for data store references\r\n      context.hints.autoResize = shapes.filter(function(shape) {\r\n        return !is(shape, 'bpmn:DataStoreReference');\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n  // update parent on data store created\r\n  this.postExecute('shape.create', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        parent = shape.parent;\r\n\r\n\r\n    if (is(shape, 'bpmn:DataStoreReference') &&\r\n        shape.type !== 'label' &&\r\n        is(parent, 'bpmn:Collaboration')) {\r\n\r\n      updateDataStoreParent(shape);\r\n    }\r\n  });\r\n\r\n\r\n  // update parent on data store moved\r\n  this.postExecute('shape.move', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        oldParent = context.oldParent,\r\n        parent = shape.parent;\r\n\r\n    if (is(oldParent, 'bpmn:Collaboration')) {\r\n\r\n      // do nothing if not necessary\r\n      return;\r\n    }\r\n\r\n    if (is(shape, 'bpmn:DataStoreReference') &&\r\n        shape.type !== 'label' &&\r\n        is(parent, 'bpmn:Collaboration')) {\r\n\r\n      var participant = is(oldParent, 'bpmn:Participant') ?\r\n        oldParent :\r\n        getAncestor(oldParent, 'bpmn:Participant');\r\n\r\n      updateDataStoreParent(shape, participant);\r\n    }\r\n  });\r\n\r\n\r\n  // update data store parents on participant or subprocess deleted\r\n  this.postExecute('shape.delete', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        rootElement = canvas.getRootElement();\r\n\r\n    if (isAny(shape, [ 'bpmn:Participant', 'bpmn:SubProcess' ])\r\n        && is(rootElement, 'bpmn:Collaboration')) {\r\n      getDataStores(rootElement)\r\n        .filter(function(dataStore) {\r\n          return isDescendant(dataStore, shape);\r\n        })\r\n        .forEach(function(dataStore) {\r\n          updateDataStoreParent(dataStore);\r\n        });\r\n    }\r\n  });\r\n\r\n  // update data store parents on collaboration -> process\r\n  this.postExecute('canvas.updateRoot', function(event) {\r\n    var context = event.context,\r\n        oldRoot = context.oldRoot,\r\n        newRoot = context.newRoot;\r\n\r\n    var dataStores = getDataStores(oldRoot);\r\n\r\n    dataStores.forEach(function(dataStore) {\r\n\r\n      if (is(newRoot, 'bpmn:Process')) {\r\n        updateDataStoreParent(dataStore, newRoot);\r\n      }\r\n\r\n    });\r\n  });\r\n}\r\n\r\nDataStoreBehavior.$inject = [\r\n  'canvas',\r\n  'commandStack',\r\n  'elementRegistry',\r\n  'eventBus',\r\n];\r\n\r\ninherits(DataStoreBehavior, CommandInterceptor);\r\n\r\n\r\n// helpers //////////\r\n\r\nfunction isDescendant(descendant, ancestor) {\r\n  var descendantBo = descendant.businessObject || descendant,\r\n      ancestorBo = ancestor.businessObject || ancestor;\r\n\r\n  while (descendantBo.$parent) {\r\n    if (descendantBo.$parent === ancestorBo.processRef || ancestorBo) {\r\n      return true;\r\n    }\r\n\r\n    descendantBo = descendantBo.$parent;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction getAncestor(element, type) {\r\n\r\n  while (element.parent) {\r\n    if (is(element.parent, type)) {\r\n      return element.parent;\r\n    }\r\n\r\n    element = element.parent;\r\n  }\r\n}","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\n\nimport {\n  getChildLanes\n} from '../util/LaneUtil';\n\nimport {\n  eachElement\n} from 'diagram-js/lib/util/Elements';\n\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * BPMN specific delete lane behavior\n */\nexport default function DeleteLaneBehavior(eventBus, modeling, spaceTool) {\n\n  CommandInterceptor.call(this, eventBus);\n\n\n  function compensateLaneDelete(shape, oldParent) {\n\n    var siblings = getChildLanes(oldParent);\n\n    var topAffected = [];\n    var bottomAffected = [];\n\n    eachElement(siblings, function(element) {\n\n      if (element.y > shape.y) {\n        bottomAffected.push(element);\n      } else {\n        topAffected.push(element);\n      }\n\n      return element.children;\n    });\n\n    if (!siblings.length) {\n      return;\n    }\n\n    var offset;\n\n    if (bottomAffected.length && topAffected.length) {\n      offset = shape.height / 2;\n    } else {\n      offset = shape.height;\n    }\n\n    var topAdjustments,\n        bottomAdjustments;\n\n    if (topAffected.length) {\n      topAdjustments = spaceTool.calculateAdjustments(\n        topAffected, 'y', offset, shape.y - 10);\n\n      spaceTool.makeSpace(\n        topAdjustments.movingShapes,\n        topAdjustments.resizingShapes,\n        { x: 0, y: offset }, 's');\n    }\n\n    if (bottomAffected.length) {\n      bottomAdjustments = spaceTool.calculateAdjustments(\n        bottomAffected, 'y', -offset, shape.y + shape.height + 10);\n\n      spaceTool.makeSpace(\n        bottomAdjustments.movingShapes,\n        bottomAdjustments.resizingShapes,\n        { x: 0, y: -offset }, 'n');\n    }\n  }\n\n\n  /**\n   * Adjust sizes of other lanes after lane deletion\n   */\n  this.postExecuted('shape.delete', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        hints = context.hints,\n        shape = context.shape,\n        oldParent = context.oldParent;\n\n    // only compensate lane deletes\n    if (!is(shape, 'bpmn:Lane')) {\n      return;\n    }\n\n    // compensate root deletes only\n    if (hints && hints.nested) {\n      return;\n    }\n\n    compensateLaneDelete(shape, oldParent);\n  });\n}\n\nDeleteLaneBehavior.$inject = [\n  'eventBus',\n  'modeling',\n  'spaceTool'\n];\n\ninherits(DeleteLaneBehavior, CommandInterceptor);","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getBusinessObject,\n  is\n} from '../../../util/ModelUtil';\n\nimport { isLabel } from '../../../util/LabelUtil';\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * Replace boundary event with intermediate event when creating or moving results in detached event.\n */\nexport default function DetachEventBehavior(bpmnReplace, injector) {\n  injector.invoke(CommandInterceptor, this);\n\n  this._bpmnReplace = bpmnReplace;\n\n  var self = this;\n\n  this.postExecuted('elements.create', LOW_PRIORITY, function(context) {\n    var elements = context.elements;\n\n    elements.filter(function(shape) {\n      var host = shape.host;\n\n      return shouldReplace(shape, host);\n    }).map(function(shape) {\n      return elements.indexOf(shape);\n    }).forEach(function(index) {\n      context.elements[ index ] = self.replaceShape(elements[ index ]);\n    });\n  }, true);\n\n  this.preExecute('elements.move', LOW_PRIORITY, function(context) {\n    var shapes = context.shapes,\n        newHost = context.newHost;\n\n    shapes.forEach(function(shape, index) {\n      var host = shape.host;\n\n      if (shouldReplace(shape, includes(shapes, host) ? host : newHost)) {\n        shapes[ index ] = self.replaceShape(shape);\n      }\n    });\n  }, true);\n}\n\nDetachEventBehavior.$inject = [\n  'bpmnReplace',\n  'injector'\n];\n\ninherits(DetachEventBehavior, CommandInterceptor);\n\nDetachEventBehavior.prototype.replaceShape = function(shape) {\n  var eventDefinition = getEventDefinition(shape),\n      intermediateEvent;\n\n  if (eventDefinition) {\n    intermediateEvent = {\n      type: 'bpmn:IntermediateCatchEvent',\n      eventDefinitionType: eventDefinition.$type\n    };\n  } else {\n    intermediateEvent = {\n      type: 'bpmn:IntermediateThrowEvent'\n    };\n  }\n\n  return this._bpmnReplace.replaceElement(shape, intermediateEvent, { layoutConnection: false });\n};\n\n\n// helpers //////////\n\nfunction getEventDefinition(element) {\n  var businessObject = getBusinessObject(element),\n      eventDefinitions = businessObject.eventDefinitions;\n\n  return eventDefinitions && eventDefinitions[0];\n}\n\nfunction shouldReplace(shape, host) {\n  return !isLabel(shape) && is(shape, 'bpmn:BoundaryEvent') && !host;\n}\n\nfunction includes(array, item) {\n  return array.indexOf(item) !== -1;\n}","import inherits from 'inherits';\n\nimport {\n  assign,\n  filter,\n  find,\n  isNumber\n} from 'min-dash';\n\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getApproxIntersection\n} from 'diagram-js/lib/util/LineIntersection';\n\n\nexport default function DropOnFlowBehavior(eventBus, bpmnRules, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Reconnect start / end of a connection after\n   * dropping an element on a flow.\n   */\n\n  function insertShape(shape, targetFlow, positionOrBounds) {\n    var waypoints = targetFlow.waypoints,\n        waypointsBefore,\n        waypointsAfter,\n        dockingPoint,\n        source,\n        target,\n        incomingConnection,\n        outgoingConnection,\n        oldOutgoing = shape.outgoing.slice(),\n        oldIncoming = shape.incoming.slice();\n\n    var mid;\n\n    if (isNumber(positionOrBounds.width)) {\n      mid = getMid(positionOrBounds);\n    } else {\n      mid = positionOrBounds;\n    }\n\n    var intersection = getApproxIntersection(waypoints, mid);\n\n    if (intersection) {\n      waypointsBefore = waypoints.slice(0, intersection.index);\n      waypointsAfter = waypoints.slice(intersection.index + (intersection.bendpoint ? 1 : 0));\n\n      // due to inaccuracy intersection might have been found\n      if (!waypointsBefore.length || !waypointsAfter.length) {\n        return;\n      }\n\n      dockingPoint = intersection.bendpoint ? waypoints[intersection.index] : mid;\n\n      // if last waypointBefore is inside shape's bounds, ignore docking point\n      if (waypointsBefore.length === 1 || !isPointInsideBBox(shape, waypointsBefore[waypointsBefore.length-1])) {\n        waypointsBefore.push(copy(dockingPoint));\n      }\n\n      // if first waypointAfter is inside shape's bounds, ignore docking point\n      if (waypointsAfter.length === 1 || !isPointInsideBBox(shape, waypointsAfter[0])) {\n        waypointsAfter.unshift(copy(dockingPoint));\n      }\n    }\n\n    source = targetFlow.source;\n    target = targetFlow.target;\n\n    if (bpmnRules.canConnect(source, shape, targetFlow)) {\n\n      // reconnect source -> inserted shape\n      modeling.reconnectEnd(targetFlow, shape, waypointsBefore || mid);\n\n      incomingConnection = targetFlow;\n    }\n\n    if (bpmnRules.canConnect(shape, target, targetFlow)) {\n\n      if (!incomingConnection) {\n\n        // reconnect inserted shape -> end\n        modeling.reconnectStart(targetFlow, shape, waypointsAfter || mid);\n\n        outgoingConnection = targetFlow;\n      } else {\n        outgoingConnection = modeling.connect(\n          shape, target, { type: targetFlow.type, waypoints: waypointsAfter }\n        );\n      }\n    }\n\n    var duplicateConnections = [].concat(\n\n      incomingConnection && filter(oldIncoming, function(connection) {\n        return connection.source === incomingConnection.source;\n      }) || [],\n\n      outgoingConnection && filter(oldOutgoing, function(connection) {\n        return connection.target === outgoingConnection.target;\n      }) || []\n    );\n\n    if (duplicateConnections.length) {\n      modeling.removeElements(duplicateConnections);\n    }\n  }\n\n  this.preExecute('elements.move', function(context) {\n\n    var newParent = context.newParent,\n        shapes = context.shapes,\n        delta = context.delta,\n        shape = shapes[0];\n\n    if (!shape || !newParent) {\n      return;\n    }\n\n    // if the new parent is a connection,\n    // change it to the new parent's parent\n    if (newParent && newParent.waypoints) {\n      context.newParent = newParent = newParent.parent;\n    }\n\n    var shapeMid = getMid(shape);\n    var newShapeMid = {\n      x: shapeMid.x + delta.x,\n      y: shapeMid.y + delta.y\n    };\n\n    // find a connection which intersects with the\n    // element's mid point\n    var connection = find(newParent.children, function(element) {\n      var canInsert = bpmnRules.canInsert(shapes, element);\n\n      return canInsert && getApproxIntersection(element.waypoints, newShapeMid);\n    });\n\n    if (connection) {\n      context.targetFlow = connection;\n      context.position = newShapeMid;\n    }\n\n  }, true);\n\n  this.postExecuted('elements.move', function(context) {\n\n    var shapes = context.shapes,\n        targetFlow = context.targetFlow,\n        position = context.position;\n\n    if (targetFlow) {\n      insertShape(shapes[0], targetFlow, position);\n    }\n\n  }, true);\n\n  this.preExecute('shape.create', function(context) {\n\n    var parent = context.parent,\n        shape = context.shape;\n\n    if (bpmnRules.canInsert(shape, parent)) {\n      context.targetFlow = parent;\n      context.parent = parent.parent;\n    }\n  }, true);\n\n  this.postExecuted('shape.create', function(context) {\n\n    var shape = context.shape,\n        targetFlow = context.targetFlow,\n        positionOrBounds = context.position;\n\n    if (targetFlow) {\n      insertShape(shape, targetFlow, positionOrBounds);\n    }\n  }, true);\n}\n\ninherits(DropOnFlowBehavior, CommandInterceptor);\n\nDropOnFlowBehavior.$inject = [\n  'eventBus',\n  'bpmnRules',\n  'modeling'\n];\n\n\n// helpers /////////////////////\n\nfunction isPointInsideBBox(bbox, point) {\n  var x = point.x,\n      y = point.y;\n\n  return x >= bbox.x &&\n    x <= bbox.x + bbox.width &&\n    y >= bbox.y &&\n    y <= bbox.y + bbox.height;\n}\n\nfunction copy(obj) {\n  return assign({}, obj);\n}\n\n","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\n\nexport default function EventBasedGatewayBehavior(eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Remove existing sequence flows of event-based target before connecting\n   * from event-based gateway.\n   */\n  this.preExecuted('connection.create', function(event) {\n\n    var context = event.context,\n        source = context.source,\n        target = context.target,\n        existingIncomingConnections = target.incoming.slice();\n\n    if (context.hints && context.hints.createElementsBehavior === false) {\n      return;\n    }\n\n    if (\n      is(source, 'bpmn:EventBasedGateway') &&\n      target.incoming.length\n    ) {\n\n      existingIncomingConnections.filter(isSequenceFlow)\n        .forEach(function(sequenceFlow) {\n          modeling.removeConnection(sequenceFlow);\n        });\n    }\n  });\n\n  /**\n   *  After replacing shape with event-based gateway, remove incoming sequence\n   *  flows of event-based targets which do not belong to event-based gateway\n   *  source.\n   */\n  this.preExecuted('shape.replace', function(event) {\n\n    var newShape = event.context.newShape,\n        newShapeTargets,\n        newShapeTargetsIncomingSequenceFlows;\n\n    if (!is(newShape, 'bpmn:EventBasedGateway')) {\n      return;\n    }\n\n    newShapeTargets = newShape.outgoing.filter(isSequenceFlow)\n      .map(function(sequenceFlow) {\n        return sequenceFlow.target;\n      });\n\n    newShapeTargetsIncomingSequenceFlows = newShapeTargets.reduce(function(sequenceFlows, target) {\n      var incomingSequenceFlows = target.incoming.filter(isSequenceFlow);\n\n      return sequenceFlows.concat(incomingSequenceFlows);\n    }, []);\n\n    newShapeTargetsIncomingSequenceFlows.forEach(function(sequenceFlow) {\n      if (sequenceFlow.source !== newShape) {\n        modeling.removeConnection(sequenceFlow);\n      }\n    });\n  });\n}\n\nEventBasedGatewayBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];\n\ninherits(EventBasedGatewayBehavior, CommandInterceptor);\n\n\n\n// helpers //////////////////////\n\nfunction isSequenceFlow(connection) {\n  return is(connection, 'bpmn:SequenceFlow');\n}\n","import { getLanesRoot } from '../util/LaneUtil';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport { isAny } from '../util/ModelingUtil';\r\n\r\nvar HIGH_PRIORITY = 1500;\r\nvar HIGHEST_PRIORITY = 2000;\r\n\r\n\r\n/**\r\n * Correct hover targets in certain situations to improve diagram interaction.\r\n *\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\r\nexport default function FixHoverBehavior(elementRegistry, eventBus, canvas) {\r\n\r\n  eventBus.on([\r\n    'create.hover',\r\n    'create.move',\r\n    'create.out',\r\n    'create.end',\r\n    'shape.move.hover',\r\n    'shape.move.move',\r\n    'shape.move.out',\r\n    'shape.move.end'\r\n  ], HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape || event.shape,\r\n        hover = event.hover;\r\n\r\n    // ensure elements are not dropped onto a bpmn:Lane but onto\r\n    // the underlying bpmn:Participant\r\n    if (is(hover, 'bpmn:Lane') && !isAny(shape, [ 'bpmn:Lane', 'bpmn:Participant' ])) {\r\n      event.hover = getLanesRoot(hover);\r\n      event.hoverGfx = elementRegistry.getGraphics(event.hover);\r\n    }\r\n\r\n    var rootElement = canvas.getRootElement();\r\n\r\n    // ensure bpmn:Group and label elements are dropped\r\n    // always onto the root\r\n    if (hover !== rootElement && (shape.labelTarget || is(shape, 'bpmn:Group'))) {\r\n      event.hover = rootElement;\r\n      event.hoverGfx = elementRegistry.getGraphics(event.hover);\r\n    }\r\n  });\r\n\r\n  eventBus.on([\r\n    'connect.hover',\r\n    'connect.out',\r\n    'connect.end',\r\n    'connect.cleanup',\r\n    'global-connect.hover',\r\n    'global-connect.out',\r\n    'global-connect.end',\r\n    'global-connect.cleanup'\r\n  ], HIGH_PRIORITY, function(event) {\r\n    var hover = event.hover;\r\n\r\n    // ensure connections start/end on bpmn:Participant,\r\n    // not the underlying bpmn:Lane\r\n    if (is(hover, 'bpmn:Lane')) {\r\n      event.hover = getLanesRoot(hover) || hover;\r\n      event.hoverGfx = elementRegistry.getGraphics(event.hover);\r\n    }\r\n  });\r\n\r\n\r\n  eventBus.on([\r\n    'bendpoint.move.hover'\r\n  ], HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        hover = event.hover,\r\n        type = context.type;\r\n\r\n    // ensure reconnect start/end on bpmn:Participant,\r\n    // not the underlying bpmn:Lane\r\n    if (is(hover, 'bpmn:Lane') && /reconnect/.test(type)) {\r\n      event.hover = getLanesRoot(hover) || hover;\r\n      event.hoverGfx = elementRegistry.getGraphics(event.hover);\r\n    }\r\n  });\r\n\r\n\r\n  eventBus.on([\r\n    'connect.start'\r\n  ], HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        start = context.start;\r\n\r\n    // ensure connect start on bpmn:Participant,\r\n    // not the underlying bpmn:Lane\r\n    if (is(start, 'bpmn:Lane')) {\r\n      context.start = getLanesRoot(start) || start;\r\n    }\r\n  });\r\n\r\n\r\n  // allow movement of participants from lanes\r\n  eventBus.on('shape.move.start', HIGHEST_PRIORITY, function(event) {\r\n    var shape = event.shape;\r\n\r\n    if (is(shape, 'bpmn:Lane')) {\r\n      event.shape = getLanesRoot(shape) || shape;\r\n    }\r\n  });\r\n\r\n}\r\n\r\nFixHoverBehavior.$inject = [\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'canvas'\r\n];","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from 'diagram-js/lib/util/Collections';\n\nimport {\n  getBusinessObject,\n  is\n} from '../../../util/ModelUtil';\n\nimport {\n  createCategoryValue\n} from './util/CategoryUtil';\n\nvar HIGH_PRIORITY = 2000;\n\n\n/**\n * BPMN specific Group behavior\n */\nexport default function GroupBehavior(\n    bpmnFactory,\n    bpmnjs,\n    elementRegistry,\n    eventBus,\n    injector,\n    moddleCopy\n) {\n  injector.invoke(CommandInterceptor, this);\n\n  /**\n   * Removes a referenced category value for a given group shape\n   *\n   * @param {djs.model.Shape} shape\n   */\n  function removeReferencedCategoryValue(shape) {\n\n    var businessObject = getBusinessObject(shape),\n        categoryValue = businessObject.categoryValueRef;\n\n    if (!categoryValue) {\n      return;\n    }\n\n    var category = categoryValue.$parent;\n\n    if (!categoryValue) {\n      return;\n    }\n\n    collectionRemove(category.categoryValue, categoryValue);\n\n    // cleanup category if it is empty\n    if (category && !category.categoryValue.length) {\n      removeCategory(category);\n    }\n  }\n\n  /**\n   * Removes a given category from the definitions\n   *\n   * @param {ModdleElement} category\n   */\n  function removeCategory(category) {\n\n    var definitions = bpmnjs.getDefinitions();\n\n    collectionRemove(definitions.get('rootElements'), category);\n  }\n\n  /**\n   * Returns all group element in the current registry\n   *\n   * @return {Array<djs.model.shape>} a list of group shapes\n   */\n  function getGroupElements() {\n    return elementRegistry.filter(function(e) {\n      return is(e, 'bpmn:Group');\n    });\n  }\n\n  /**\n   * Returns true if given categoryValue is referenced in one of the given elements\n   *\n   * @param {Array<djs.model.shape>} elements\n   * @param {ModdleElement} categoryValue\n   * @return {boolean}\n   */\n  function isReferenced(elements, categoryValue) {\n    return elements.some(function(e) {\n\n      var businessObject = getBusinessObject(e);\n\n      return businessObject.categoryValueRef\n        && businessObject.categoryValueRef === categoryValue;\n    });\n  }\n\n  /**\n   * remove referenced category + value when group was deleted\n   */\n  this.executed('shape.delete', function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Group')) {\n\n      var businessObject = getBusinessObject(shape),\n          categoryValueRef = businessObject.categoryValueRef,\n          groupElements = getGroupElements();\n\n      if (!isReferenced(groupElements, categoryValueRef)) {\n        removeReferencedCategoryValue(shape);\n      }\n    }\n  });\n\n  /**\n   * re-attach removed category\n   */\n  this.reverted('shape.delete', function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Group')) {\n\n      var businessObject = getBusinessObject(shape),\n          categoryValueRef = businessObject.categoryValueRef,\n          definitions = bpmnjs.getDefinitions(),\n          category = categoryValueRef ? categoryValueRef.$parent : null;\n\n      collectionAdd(category.get('categoryValue'), categoryValueRef);\n      collectionAdd(definitions.get('rootElements'), category);\n    }\n  });\n\n  /**\n   * create new category + value when group was created\n   */\n  this.execute('shape.create', function(event) {\n    var context = event.context,\n        shape = context.shape,\n        businessObject = getBusinessObject(shape);\n\n    if (is(businessObject, 'bpmn:Group') && !businessObject.categoryValueRef) {\n\n      var definitions = bpmnjs.getDefinitions(),\n          categoryValue = createCategoryValue(definitions, bpmnFactory);\n\n      // link the reference to the Group\n      businessObject.categoryValueRef = categoryValue;\n    }\n  });\n\n\n  this.revert('shape.create', function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Group')) {\n      removeReferencedCategoryValue(shape);\n\n      delete getBusinessObject(shape).categoryValueRef;\n\n    }\n  });\n\n  // copy bpmn:CategoryValue when copying element\n  eventBus.on('moddleCopy.canCopyProperty', HIGH_PRIORITY, function(context) {\n    var property = context.property,\n        categoryValue;\n\n    if (is(property, 'bpmn:CategoryValue')) {\n      categoryValue = createCategoryValue(bpmnjs.getDefinitions(), bpmnFactory);\n\n      // return copy of category\n      return moddleCopy.copyElement(property, categoryValue);\n    }\n  });\n\n}\n\nGroupBehavior.$inject = [\n  'bpmnFactory',\n  'bpmnjs',\n  'elementRegistry',\n  'eventBus',\n  'injector',\n  'moddleCopy'\n];\n\ninherits(GroupBehavior, CommandInterceptor);","import {\n  getMid\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport lineIntersect from './util/LineIntersect';\n\n\n/**\n * Fix broken dockings after DI imports.\n *\n * @param {EventBus} eventBus\n */\nexport default function ImportDockingFix(eventBus) {\n\n  function adjustDocking(startPoint, nextPoint, elementMid) {\n\n    var elementTop = {\n      x: elementMid.x,\n      y: elementMid.y - 50\n    };\n\n    var elementLeft = {\n      x: elementMid.x - 50,\n      y: elementMid.y\n    };\n\n    var verticalIntersect = lineIntersect(startPoint, nextPoint, elementMid, elementTop),\n        horizontalIntersect = lineIntersect(startPoint, nextPoint, elementMid, elementLeft);\n\n    // original is horizontal or vertical center cross intersection\n    var centerIntersect;\n\n    if (verticalIntersect && horizontalIntersect) {\n      if (getDistance(verticalIntersect, elementMid) > getDistance(horizontalIntersect, elementMid)) {\n        centerIntersect = horizontalIntersect;\n      } else {\n        centerIntersect = verticalIntersect;\n      }\n    } else {\n      centerIntersect = verticalIntersect || horizontalIntersect;\n    }\n\n    startPoint.original = centerIntersect;\n  }\n\n  function fixDockings(connection) {\n    var waypoints = connection.waypoints;\n\n    adjustDocking(\n      waypoints[0],\n      waypoints[1],\n      getMid(connection.source)\n    );\n\n    adjustDocking(\n      waypoints[waypoints.length - 1],\n      waypoints[waypoints.length - 2],\n      getMid(connection.target)\n    );\n  }\n\n  eventBus.on('bpmnElement.added', function(e) {\n\n    var element = e.element;\n\n    if (element.waypoints) {\n      fixDockings(element);\n    }\n  });\n}\n\nImportDockingFix.$inject = [\n  'eventBus'\n];\n\n\n// helpers //////////////////////\n\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getBusinessObject,\n  getDi\n} from '../../../util/ModelUtil';\n\nimport {\n  isAny\n} from '../util/ModelingUtil';\n\n/**\n * A component that makes sure that each created or updated\n * Pool and Lane is assigned an isHorizontal property set to true.\n *\n * @param {EventBus} eventBus\n */\nexport default function IsHorizontalFix(eventBus) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  var elementTypesToUpdate = [\n    'bpmn:Participant',\n    'bpmn:Lane'\n  ];\n\n  this.executed([ 'shape.move', 'shape.create', 'shape.resize' ], function(event) {\n    var shape = event.context.shape,\n        bo = getBusinessObject(shape),\n        di = getDi(shape);\n\n    if (isAny(bo, elementTypesToUpdate) && !di.get('isHorizontal')) {\n\n      // set attribute directly to avoid modeling#updateProperty side effects\n      di.set('isHorizontal', true);\n    }\n  });\n\n}\n\nIsHorizontalFix.$inject = [ 'eventBus' ];\n\ninherits(IsHorizontalFix, CommandInterceptor);\n","import {\n  assign\n} from 'min-dash';\n\nimport inherits from 'inherits';\n\nimport {\n  is,\n  getBusinessObject,\n  getDi\n} from '../../../util/ModelUtil';\n\nimport {\n  isLabelExternal,\n  getExternalLabelMid,\n  hasExternalLabel,\n  isLabel\n} from '../../../util/LabelUtil';\n\nimport {\n  getLabel\n} from '../../label-editing/LabelUtil';\n\nimport {\n  getLabelAdjustment\n} from './util/LabelLayoutUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getNewAttachPoint\n} from 'diagram-js/lib/util/AttachUtil';\n\nimport {\n  getMid,\n  roundPoint\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  delta\n} from 'diagram-js/lib/util/PositionUtil';\n\nimport {\n  sortBy\n} from 'min-dash';\n\nimport {\n  getDistancePointLine,\n  perpendicularFoot\n} from './util/GeometricUtil';\n\nvar DEFAULT_LABEL_DIMENSIONS = {\n  width: 90,\n  height: 20\n};\n\nvar NAME_PROPERTY = 'name';\nvar TEXT_PROPERTY = 'text';\n\n/**\n * A component that makes sure that external labels are added\n * together with respective elements and properly updated (DI wise)\n * during move.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n * @param {BpmnFactory} bpmnFactory\n * @param {TextRenderer} textRenderer\n */\nexport default function LabelBehavior(\n    eventBus, modeling, bpmnFactory,\n    textRenderer) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  // update label if name property was updated\n  this.postExecute('element.updateProperties', function(e) {\n    var context = e.context,\n        element = context.element,\n        properties = context.properties;\n\n    if (NAME_PROPERTY in properties) {\n      modeling.updateLabel(element, properties[NAME_PROPERTY]);\n    }\n\n    if (TEXT_PROPERTY in properties\n        && is(element, 'bpmn:TextAnnotation')) {\n\n      var newBounds = textRenderer.getTextAnnotationBounds(\n        {\n          x: element.x,\n          y: element.y,\n          width: element.width,\n          height: element.height\n        },\n        properties[TEXT_PROPERTY] || ''\n      );\n\n      modeling.updateLabel(element, properties.text, newBounds);\n    }\n  });\n\n  // create label shape after shape/connection was created\n  this.postExecute([ 'shape.create', 'connection.create' ], function(e) {\n    var context = e.context,\n        hints = context.hints || {};\n\n    if (hints.createElementsBehavior === false) {\n      return;\n    }\n\n    var element = context.shape || context.connection,\n        businessObject = element.businessObject;\n\n    if (isLabel(element) || !isLabelExternal(element)) {\n      return;\n    }\n\n    // only create label if attribute available\n    if (!getLabel(element)) {\n      return;\n    }\n\n    var labelCenter = getExternalLabelMid(element);\n\n    // we don't care about x and y\n    var labelDimensions = textRenderer.getExternalLabelBounds(\n      DEFAULT_LABEL_DIMENSIONS,\n      getLabel(element)\n    );\n\n    modeling.createLabel(element, labelCenter, {\n      id: businessObject.id + '_label',\n      businessObject: businessObject,\n      width: labelDimensions.width,\n      height: labelDimensions.height\n    });\n  });\n\n  // update label after label shape was deleted\n  this.postExecute('shape.delete', function(event) {\n    var context = event.context,\n        labelTarget = context.labelTarget,\n        hints = context.hints || {};\n\n    // check if label\n    if (labelTarget && hints.unsetLabel !== false) {\n      modeling.updateLabel(labelTarget, null, null, { removeShape: false });\n    }\n  });\n\n  // update di information on label creation\n  this.postExecute([ 'label.create' ], function(event) {\n\n    var context = event.context,\n        element = context.shape,\n        labelTarget = context.labelTarget,\n        di;\n\n    // we want to trigger on real labels only\n    if (!labelTarget) {\n      return;\n    }\n\n    // we want to trigger on BPMN elements only\n    if (!is(labelTarget, 'bpmn:BaseElement')) {\n      return;\n    }\n\n    di = getDi(labelTarget);\n\n    if (!di.label) {\n      di.label = bpmnFactory.create('bpmndi:BPMNLabel', {\n        bounds: bpmnFactory.create('dc:Bounds')\n      });\n\n      element.di = di;\n    }\n\n    assign(di.label.bounds, {\n      x: element.x,\n      y: element.y,\n      width: element.width,\n      height: element.height\n    });\n  });\n\n  function getVisibleLabelAdjustment(event) {\n\n    var context = event.context,\n        connection = context.connection,\n        label = connection.label,\n        hints = assign({}, context.hints),\n        newWaypoints = context.newWaypoints || connection.waypoints,\n        oldWaypoints = context.oldWaypoints;\n\n\n    if (typeof hints.startChanged === 'undefined') {\n      hints.startChanged = !!hints.connectionStart;\n    }\n\n    if (typeof hints.endChanged === 'undefined') {\n      hints.endChanged = !!hints.connectionEnd;\n    }\n\n    return getLabelAdjustment(label, newWaypoints, oldWaypoints, hints);\n  }\n\n  this.postExecute([\n    'connection.layout',\n    'connection.updateWaypoints'\n  ], function(event) {\n    var context = event.context,\n        hints = context.hints || {};\n\n    if (hints.labelBehavior === false) {\n      return;\n    }\n\n    var connection = context.connection,\n        label = connection.label,\n        labelAdjustment;\n\n    // handle missing label as well as the case\n    // that the label parent does not exist (yet),\n    // because it is being pasted / created via multi element create\n    //\n    // Cf. https://github.com/bpmn-io/bpmn-js/pull/1227\n    if (!label || !label.parent) {\n      return;\n    }\n\n    labelAdjustment = getVisibleLabelAdjustment(event);\n\n    modeling.moveShape(label, labelAdjustment);\n  });\n\n\n  // keep label position on shape replace\n  this.postExecute([ 'shape.replace' ], function(event) {\n    var context = event.context,\n        newShape = context.newShape,\n        oldShape = context.oldShape;\n\n    var businessObject = getBusinessObject(newShape);\n\n    if (businessObject\n      && isLabelExternal(businessObject)\n      && oldShape.label\n      && newShape.label) {\n      newShape.label.x = oldShape.label.x;\n      newShape.label.y = oldShape.label.y;\n    }\n  });\n\n\n  // move external label after resizing\n  this.postExecute('shape.resize', function(event) {\n\n    var context = event.context,\n        shape = context.shape,\n        newBounds = context.newBounds,\n        oldBounds = context.oldBounds;\n\n    if (hasExternalLabel(shape)) {\n\n      var label = shape.label,\n          labelMid = getMid(label),\n          edges = asEdges(oldBounds);\n\n      // get nearest border point to label as reference point\n      var referencePoint = getReferencePoint(labelMid, edges);\n\n      var delta = getReferencePointDelta(referencePoint, oldBounds, newBounds);\n\n      modeling.moveShape(label, delta);\n\n    }\n\n  });\n\n}\n\ninherits(LabelBehavior, CommandInterceptor);\n\nLabelBehavior.$inject = [\n  'eventBus',\n  'modeling',\n  'bpmnFactory',\n  'textRenderer'\n];\n\n// helpers //////////////////////\n\n/**\n * Calculates a reference point delta relative to a new position\n * of a certain element's bounds\n *\n * @param {Point} point\n * @param {Bounds} oldBounds\n * @param {Bounds} newBounds\n *\n * @return {Delta} delta\n */\nexport function getReferencePointDelta(referencePoint, oldBounds, newBounds) {\n\n  var newReferencePoint = getNewAttachPoint(referencePoint, oldBounds, newBounds);\n\n  return roundPoint(delta(newReferencePoint, referencePoint));\n}\n\n/**\n * Generates the nearest point (reference point) for a given point\n * onto given set of lines\n *\n * @param {Array<Point, Point>} lines\n * @param {Point} point\n *\n * @param {Point}\n */\nexport function getReferencePoint(point, lines) {\n\n  if (!lines.length) {\n    return;\n  }\n\n  var nearestLine = getNearestLine(point, lines);\n\n  return perpendicularFoot(point, nearestLine);\n}\n\n/**\n * Convert the given bounds to a lines array containing all edges\n *\n * @param {Bounds|Point} bounds\n *\n * @return Array<Point>\n */\nexport function asEdges(bounds) {\n  return [\n    [ // top\n      {\n        x: bounds.x,\n        y: bounds.y\n      },\n      {\n        x: bounds.x + (bounds.width || 0),\n        y: bounds.y\n      }\n    ],\n    [ // right\n      {\n        x: bounds.x + (bounds.width || 0),\n        y: bounds.y\n      },\n      {\n        x: bounds.x + (bounds.width || 0),\n        y: bounds.y + (bounds.height || 0)\n      }\n    ],\n    [ // bottom\n      {\n        x: bounds.x,\n        y: bounds.y + (bounds.height || 0)\n      },\n      {\n        x: bounds.x + (bounds.width || 0),\n        y: bounds.y + (bounds.height || 0)\n      }\n    ],\n    [ // left\n      {\n        x: bounds.x,\n        y: bounds.y\n      },\n      {\n        x: bounds.x,\n        y: bounds.y + (bounds.height || 0)\n      }\n    ]\n  ];\n}\n\n/**\n * Returns the nearest line for a given point by distance\n * @param {Point} point\n * @param Array<Point> lines\n *\n * @return Array<Point>\n */\nfunction getNearestLine(point, lines) {\n\n  var distances = lines.map(function(l) {\n    return {\n      line: l,\n      distance: getDistancePointLine(point, l)\n    };\n  });\n\n  var sorted = sortBy(distances, 'distance');\n\n  return sorted[0].line;\n}\n","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport { isExpanded } from '../../../util/DiUtil';\r\n\r\nimport { selfAndAllChildren } from 'diagram-js/lib/util/Elements';\r\n\r\nimport {\r\n  getResizedSourceAnchor,\r\n  getResizedTargetAnchor\r\n} from 'diagram-js/lib/features/modeling/cmd/helper/AnchorsHelper';\r\n\r\n/**\r\n * BPMN-specific message flow behavior.\r\n */\r\nexport default function MessageFlowBehavior(eventBus, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this.postExecute('shape.replace', function(context) {\r\n    var oldShape = context.oldShape,\r\n        newShape = context.newShape;\r\n\r\n    if (!isParticipantCollapse(oldShape, newShape)) {\r\n      return;\r\n    }\r\n\r\n    var messageFlows = getMessageFlows(oldShape);\r\n\r\n    messageFlows.incoming.forEach(function(incoming) {\r\n      var anchor = getResizedTargetAnchor(incoming, newShape, oldShape);\r\n\r\n      modeling.reconnectEnd(incoming, newShape, anchor);\r\n    });\r\n\r\n    messageFlows.outgoing.forEach(function(outgoing) {\r\n      var anchor = getResizedSourceAnchor(outgoing, newShape, oldShape);\r\n\r\n      modeling.reconnectStart(outgoing, newShape, anchor);\r\n    });\r\n  }, true);\r\n\r\n}\r\n\r\nMessageFlowBehavior.$inject = [ 'eventBus', 'modeling' ];\r\n\r\ninherits(MessageFlowBehavior, CommandInterceptor);\r\n\r\n// helpers //////////\r\n\r\nfunction isParticipantCollapse(oldShape, newShape) {\r\n  return is(oldShape, 'bpmn:Participant')\r\n    && isExpanded(oldShape)\r\n    && is(newShape, 'bpmn:Participant')\r\n    && !isExpanded(newShape);\r\n}\r\n\r\nfunction getMessageFlows(parent) {\r\n  var elements = selfAndAllChildren([ parent ], false);\r\n\r\n  var incoming = [],\r\n      outgoing = [];\r\n\r\n  elements.forEach(function(element) {\r\n    if (element === parent) {\r\n      return;\r\n    }\r\n\r\n    element.incoming.forEach(function(connection) {\r\n      if (is(connection, 'bpmn:MessageFlow')) {\r\n        incoming.push(connection);\r\n      }\r\n    });\r\n\r\n    element.outgoing.forEach(function(connection) {\r\n      if (is(connection, 'bpmn:MessageFlow')) {\r\n        outgoing.push(connection);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return {\r\n    incoming: incoming,\r\n    outgoing: outgoing\r\n  };\r\n}","import { is } from '../../../util/ModelUtil';\n\nvar COLLAB_ERR_MSG = 'flow elements must be children of pools/participants';\n\nexport default function ModelingFeedback(eventBus, tooltips, translate) {\n\n  function showError(position, message, timeout) {\n    tooltips.add({\n      position: {\n        x: position.x + 5,\n        y: position.y + 5\n      },\n      type: 'error',\n      timeout: timeout || 2000,\n      html: '<div>' + message + '</div>'\n    });\n  }\n\n  eventBus.on([ 'shape.move.rejected', 'create.rejected' ], function(event) {\n    var context = event.context,\n        shape = context.shape,\n        target = context.target;\n\n    if (is(target, 'bpmn:Collaboration') && is(shape, 'bpmn:FlowNode')) {\n      showError(event, translate(COLLAB_ERR_MSG));\n    }\n  });\n\n}\n\nModelingFeedback.$inject = [\n  'eventBus',\n  'tooltips',\n  'translate'\n];\n","import inherits from 'inherits';\n\nimport { is } from '../../../util/ModelUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport lineIntersect from './util/LineIntersect';\n\n\nexport default function RemoveElementBehavior(eventBus, bpmnRules, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Combine sequence flows when deleting an element\n   * if there is one incoming and one outgoing\n   * sequence flow\n   */\n  this.preExecute('shape.delete', function(e) {\n\n    var shape = e.context.shape;\n\n    // only handle [a] -> [shape] -> [b] patterns\n    if (shape.incoming.length !== 1 || shape.outgoing.length !== 1) {\n      return;\n    }\n\n    var inConnection = shape.incoming[0],\n        outConnection = shape.outgoing[0];\n\n    // only handle sequence flows\n    if (!is(inConnection, 'bpmn:SequenceFlow') || !is(outConnection, 'bpmn:SequenceFlow')) {\n      return;\n    }\n\n    if (bpmnRules.canConnect(inConnection.source, outConnection.target, inConnection)) {\n\n      // compute new, combined waypoints\n      var newWaypoints = getNewWaypoints(inConnection.waypoints, outConnection.waypoints);\n\n      modeling.reconnectEnd(inConnection, outConnection.target, newWaypoints);\n    }\n  });\n\n}\n\ninherits(RemoveElementBehavior, CommandInterceptor);\n\nRemoveElementBehavior.$inject = [\n  'eventBus',\n  'bpmnRules',\n  'modeling'\n];\n\n\n// helpers //////////////////////\n\nfunction getDocking(point) {\n  return point.original || point;\n}\n\n\nfunction getNewWaypoints(inWaypoints, outWaypoints) {\n\n  var intersection = lineIntersect(\n    getDocking(inWaypoints[inWaypoints.length - 2]),\n    getDocking(inWaypoints[inWaypoints.length - 1]),\n    getDocking(outWaypoints[1]),\n    getDocking(outWaypoints[0]));\n\n  if (intersection) {\n    return [].concat(\n      inWaypoints.slice(0, inWaypoints.length - 1),\n      [ intersection ],\n      outWaypoints.slice(1));\n  } else {\n    return [\n      getDocking(inWaypoints[0]),\n      getDocking(outWaypoints[outWaypoints.length - 1])\n    ];\n  }\n}","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { getDi } from '../../../util/ModelUtil';\n\n/**\n * BPMN specific behavior ensuring that bpmndi:Label's dc:Bounds are removed\n * when shape is resized.\n */\nexport default function RemoveEmbeddedLabelBoundsBehavior(eventBus, modeling) {\n  CommandInterceptor.call(this, eventBus);\n\n  this.preExecute('shape.resize', function(context) {\n    var shape = context.shape;\n\n    var di = getDi(shape),\n        label = di && di.get('label'),\n        bounds = label && label.get('bounds');\n\n    if (bounds) {\n      modeling.updateModdleProperties(shape, label, {\n        bounds: undefined\n      });\n    }\n  }, true);\n}\n\ninherits(RemoveEmbeddedLabelBoundsBehavior, CommandInterceptor);\n\nRemoveEmbeddedLabelBoundsBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\n\n\n/**\n * BPMN specific remove behavior\n */\nexport default function RemoveParticipantBehavior(eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n\n  /**\n   * morph collaboration diagram into process diagram\n   * after the last participant has been removed\n   */\n\n  this.preExecute('shape.delete', function(context) {\n\n    var shape = context.shape,\n        parent = shape.parent;\n\n    // activate the behavior if the shape to be removed\n    // is a participant\n    if (is(shape, 'bpmn:Participant')) {\n      context.collaborationRoot = parent;\n    }\n  }, true);\n\n  this.postExecute('shape.delete', function(context) {\n\n    var collaborationRoot = context.collaborationRoot;\n\n    if (collaborationRoot && !collaborationRoot.businessObject.participants.length) {\n\n      // replace empty collaboration with process diagram\n      modeling.makeProcess();\n    }\n  }, true);\n\n}\n\nRemoveParticipantBehavior.$inject = [ 'eventBus', 'modeling' ];\n\ninherits(RemoveParticipantBehavior, CommandInterceptor);","import {\n  forEach,\n  find,\n  matchPattern\n} from 'min-dash';\n\nimport inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\n\n\nexport default function ReplaceConnectionBehavior(eventBus, modeling, bpmnRules, injector) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  var dragging = injector.get('dragging', false);\n\n  function fixConnection(connection) {\n\n    var source = connection.source,\n        target = connection.target,\n        parent = connection.parent;\n\n    // do not do anything if connection\n    // is already deleted (may happen due to other\n    // behaviors plugged-in before)\n    if (!parent) {\n      return;\n    }\n\n    var replacementType,\n        remove;\n\n    /**\n     * Check if incoming or outgoing connections\n     * can stay or could be substituted with an\n     * appropriate replacement.\n     *\n     * This holds true for SequenceFlow <> MessageFlow.\n     */\n\n    if (is(connection, 'bpmn:SequenceFlow')) {\n      if (!bpmnRules.canConnectSequenceFlow(source, target)) {\n        remove = true;\n      }\n\n      if (bpmnRules.canConnectMessageFlow(source, target)) {\n        replacementType = 'bpmn:MessageFlow';\n      }\n    }\n\n    // transform message flows into sequence flows, if possible\n\n    if (is(connection, 'bpmn:MessageFlow')) {\n\n      if (!bpmnRules.canConnectMessageFlow(source, target)) {\n        remove = true;\n      }\n\n      if (bpmnRules.canConnectSequenceFlow(source, target)) {\n        replacementType = 'bpmn:SequenceFlow';\n      }\n    }\n\n    if (is(connection, 'bpmn:Association') && !bpmnRules.canConnectAssociation(source, target)) {\n      remove = true;\n    }\n\n\n    // remove invalid connection,\n    // unless it has been removed already\n    if (remove) {\n      modeling.removeConnection(connection);\n    }\n\n    // replace SequenceFlow <> MessageFlow\n\n    if (replacementType) {\n      modeling.connect(source, target, {\n        type: replacementType,\n        waypoints: connection.waypoints.slice()\n      });\n    }\n  }\n\n  function replaceReconnectedConnection(event) {\n\n    var context = event.context,\n        connection = context.connection,\n        source = context.newSource || connection.source,\n        target = context.newTarget || connection.target,\n        allowed,\n        replacement;\n\n    allowed = bpmnRules.canConnect(source, target);\n\n    if (!allowed || allowed.type === connection.type) {\n      return;\n    }\n\n    replacement = modeling.connect(source, target, {\n      type: allowed.type,\n      waypoints: connection.waypoints.slice()\n    });\n\n    // remove old connection\n    modeling.removeConnection(connection);\n\n    // replace connection in context to reconnect end/start\n    context.connection = replacement;\n\n    if (dragging) {\n      cleanDraggingSelection(connection, replacement);\n    }\n  }\n\n  // monkey-patch selection saved in dragging in order to re-select it when operation is finished\n  function cleanDraggingSelection(oldConnection, newConnection) {\n    var context = dragging.context(),\n        previousSelection = context && context.payload.previousSelection,\n        index;\n\n    // do nothing if not dragging or no selection was present\n    if (!previousSelection || !previousSelection.length) {\n      return;\n    }\n\n    index = previousSelection.indexOf(oldConnection);\n\n    if (index === -1) {\n      return;\n    }\n\n    previousSelection.splice(index, 1, newConnection);\n  }\n\n  // lifecycle hooks\n\n  this.postExecuted('elements.move', function(context) {\n\n    var closure = context.closure,\n        allConnections = closure.allConnections;\n\n    forEach(allConnections, fixConnection);\n  }, true);\n\n  this.preExecute('connection.reconnect', replaceReconnectedConnection);\n\n  this.postExecuted('element.updateProperties', function(event) {\n    var context = event.context,\n        properties = context.properties,\n        element = context.element,\n        businessObject = element.businessObject,\n        connection;\n\n    // remove condition on change to default\n    if (properties.default) {\n      connection = find(\n        element.outgoing,\n        matchPattern({ id: element.businessObject.default.id })\n      );\n\n      if (connection) {\n        modeling.updateProperties(connection, { conditionExpression: undefined });\n      }\n    }\n\n    // remove default from source on change to conditional\n    if (properties.conditionExpression && businessObject.sourceRef.default === businessObject) {\n      modeling.updateProperties(element.source, { default: undefined });\n    }\n  });\n}\n\ninherits(ReplaceConnectionBehavior, CommandInterceptor);\n\nReplaceConnectionBehavior.$inject = [\n  'eventBus',\n  'modeling',\n  'bpmnRules',\n  'injector'\n];\n","import inherits from 'inherits';\n\nimport { forEach } from 'min-dash';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { isEventSubProcess } from '../../../util/DiUtil';\n\n\n/**\n * BPMN-specific replace behavior.\n */\nexport default function ReplaceElementBehaviour(\n    bpmnReplace,\n    bpmnRules,\n    elementRegistry,\n    injector,\n    modeling,\n    selection\n) {\n  injector.invoke(CommandInterceptor, this);\n\n  this._bpmnReplace = bpmnReplace;\n  this._elementRegistry = elementRegistry;\n  this._selection = selection;\n\n  // replace elements on create, e.g. during copy-paste\n  this.postExecuted([ 'elements.create' ], 500, function(event) {\n    var context = event.context,\n        target = context.parent,\n        elements = context.elements;\n\n    var canReplace = bpmnRules.canReplace(elements, target);\n\n    if (canReplace) {\n      this.replaceElements(elements, canReplace.replacements);\n    }\n  }, this);\n\n  // replace elements on move\n  this.postExecuted([ 'elements.move' ], 500, function(event) {\n    var context = event.context,\n        target = context.newParent,\n        newHost = context.newHost,\n        elements = [];\n\n    forEach(context.closure.topLevel, function(topLevelElements) {\n      if (isEventSubProcess(topLevelElements)) {\n        elements = elements.concat(topLevelElements.children);\n      } else {\n        elements = elements.concat(topLevelElements);\n      }\n    });\n\n    // set target to host if attaching\n    if (elements.length === 1 && newHost) {\n      target = newHost;\n    }\n\n    var canReplace = bpmnRules.canReplace(elements, target);\n\n    if (canReplace) {\n      this.replaceElements(elements, canReplace.replacements, newHost);\n    }\n  }, this);\n\n  // update attachments on host replace\n  this.postExecute([ 'shape.replace' ], 1500, function(e) {\n    var context = e.context,\n        oldShape = context.oldShape,\n        newShape = context.newShape,\n        attachers = oldShape.attachers,\n        canReplace;\n\n    if (attachers && attachers.length) {\n      canReplace = bpmnRules.canReplace(attachers, newShape);\n\n      this.replaceElements(attachers, canReplace.replacements);\n    }\n\n  }, this);\n\n  // keep ID on shape replace\n  this.postExecuted([ 'shape.replace' ], 1500, function(e) {\n    var context = e.context,\n        oldShape = context.oldShape,\n        newShape = context.newShape;\n\n    modeling.unclaimId(oldShape.businessObject.id, oldShape.businessObject);\n    modeling.updateProperties(newShape, { id: oldShape.id });\n  });\n}\n\ninherits(ReplaceElementBehaviour, CommandInterceptor);\n\nReplaceElementBehaviour.prototype.replaceElements = function(elements, newElements) {\n  var elementRegistry = this._elementRegistry,\n      bpmnReplace = this._bpmnReplace,\n      selection = this._selection;\n\n  forEach(newElements, function(replacement) {\n    var newElement = {\n      type: replacement.newElementType\n    };\n\n    var oldElement = elementRegistry.get(replacement.oldElementId);\n\n    var idx = elements.indexOf(oldElement);\n\n    elements[idx] = bpmnReplace.replaceElement(oldElement, newElement, { select: false });\n  });\n\n  if (newElements) {\n    selection.select(elements);\n  }\n};\n\nReplaceElementBehaviour.$inject = [\n  'bpmnReplace',\n  'bpmnRules',\n  'elementRegistry',\n  'injector',\n  'modeling',\n  'selection'\n];\n","import { is } from '../../../util/ModelUtil';\r\n\r\nimport { isExpanded } from '../../../util/DiUtil';\r\n\r\nimport {\r\n  asTRBL\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  collectLanes,\r\n  getLanesRoot\r\n} from '../util/LaneUtil';\r\n\r\nvar HIGH_PRIORITY = 1500;\r\n\r\nexport var LANE_MIN_DIMENSIONS = { width: 300, height: 60 };\r\n\r\nexport var PARTICIPANT_MIN_DIMENSIONS = { width: 300, height: 150 };\r\n\r\nexport var SUB_PROCESS_MIN_DIMENSIONS = { width: 140, height: 120 };\r\n\r\nexport var TEXT_ANNOTATION_MIN_DIMENSIONS = { width: 50, height: 30 };\r\n\r\n/**\r\n * Set minimum bounds/resize constraints on resize.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nexport default function ResizeBehavior(eventBus) {\r\n  eventBus.on('resize.start', HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        direction = context.direction,\r\n        balanced = context.balanced;\r\n\r\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\r\n      context.resizeConstraints = getParticipantResizeConstraints(shape, direction, balanced);\r\n    }\r\n\r\n    if (is(shape, 'bpmn:Participant')) {\r\n      context.minDimensions = PARTICIPANT_MIN_DIMENSIONS;\r\n    }\r\n\r\n    if (is(shape, 'bpmn:SubProcess') && isExpanded(shape)) {\r\n      context.minDimensions = SUB_PROCESS_MIN_DIMENSIONS;\r\n    }\r\n\r\n    if (is(shape, 'bpmn:TextAnnotation')) {\r\n      context.minDimensions = TEXT_ANNOTATION_MIN_DIMENSIONS;\r\n    }\r\n  });\r\n}\r\n\r\nResizeBehavior.$inject = [ 'eventBus' ];\r\n\r\n\r\nvar abs = Math.abs,\r\n    min = Math.min,\r\n    max = Math.max;\r\n\r\n\r\nfunction addToTrbl(trbl, attr, value, choice) {\r\n  var current = trbl[attr];\r\n\r\n  // make sure to set the value if it does not exist\r\n  // or apply the correct value by comparing against\r\n  // choice(value, currentValue)\r\n  trbl[attr] = current === undefined ? value : choice(value, current);\r\n}\r\n\r\nfunction addMin(trbl, attr, value) {\r\n  return addToTrbl(trbl, attr, value, min);\r\n}\r\n\r\nfunction addMax(trbl, attr, value) {\r\n  return addToTrbl(trbl, attr, value, max);\r\n}\r\n\r\nvar LANE_RIGHT_PADDING = 20,\r\n    LANE_LEFT_PADDING = 50,\r\n    LANE_TOP_PADDING = 20,\r\n    LANE_BOTTOM_PADDING = 20;\r\n\r\nexport function getParticipantResizeConstraints(laneShape, resizeDirection, balanced) {\r\n  var lanesRoot = getLanesRoot(laneShape);\r\n\r\n  var isFirst = true,\r\n      isLast = true;\r\n\r\n  // max top/bottom size for lanes\r\n  var allLanes = collectLanes(lanesRoot, [ lanesRoot ]);\r\n\r\n  var laneTrbl = asTRBL(laneShape);\r\n\r\n  var maxTrbl = {},\r\n      minTrbl = {};\r\n\r\n  if (/e/.test(resizeDirection)) {\r\n    minTrbl.right = laneTrbl.left + LANE_MIN_DIMENSIONS.width;\r\n  } else\r\n  if (/w/.test(resizeDirection)) {\r\n    minTrbl.left = laneTrbl.right - LANE_MIN_DIMENSIONS.width;\r\n  }\r\n\r\n  allLanes.forEach(function(other) {\r\n\r\n    var otherTrbl = asTRBL(other);\r\n\r\n    if (/n/.test(resizeDirection)) {\r\n\r\n      if (otherTrbl.top < (laneTrbl.top - 10)) {\r\n        isFirst = false;\r\n      }\r\n\r\n      // max top size (based on next element)\r\n      if (balanced && abs(laneTrbl.top - otherTrbl.bottom) < 10) {\r\n        addMax(maxTrbl, 'top', otherTrbl.top + LANE_MIN_DIMENSIONS.height);\r\n      }\r\n\r\n      // min top size (based on self or nested element)\r\n      if (abs(laneTrbl.top - otherTrbl.top) < 5) {\r\n        addMin(minTrbl, 'top', otherTrbl.bottom - LANE_MIN_DIMENSIONS.height);\r\n      }\r\n    }\r\n\r\n    if (/s/.test(resizeDirection)) {\r\n\r\n      if (otherTrbl.bottom > (laneTrbl.bottom + 10)) {\r\n        isLast = false;\r\n      }\r\n\r\n      // max bottom size (based on previous element)\r\n      if (balanced && abs(laneTrbl.bottom - otherTrbl.top) < 10) {\r\n        addMin(maxTrbl, 'bottom', otherTrbl.bottom - LANE_MIN_DIMENSIONS.height);\r\n      }\r\n\r\n      // min bottom size (based on self or nested element)\r\n      if (abs(laneTrbl.bottom - otherTrbl.bottom) < 5) {\r\n        addMax(minTrbl, 'bottom', otherTrbl.top + LANE_MIN_DIMENSIONS.height);\r\n      }\r\n    }\r\n  });\r\n\r\n  // max top/bottom/left/right size based on flow nodes\r\n  var flowElements = lanesRoot.children.filter(function(s) {\r\n    return !s.hidden && !s.waypoints && (is(s, 'bpmn:FlowElement') || is(s, 'bpmn:Artifact'));\r\n  });\r\n\r\n  flowElements.forEach(function(flowElement) {\r\n\r\n    var flowElementTrbl = asTRBL(flowElement);\r\n\r\n    if (isFirst && /n/.test(resizeDirection)) {\r\n      addMin(minTrbl, 'top', flowElementTrbl.top - LANE_TOP_PADDING);\r\n    }\r\n\r\n    if (/e/.test(resizeDirection)) {\r\n      addMax(minTrbl, 'right', flowElementTrbl.right + LANE_RIGHT_PADDING);\r\n    }\r\n\r\n    if (isLast && /s/.test(resizeDirection)) {\r\n      addMax(minTrbl, 'bottom', flowElementTrbl.bottom + LANE_BOTTOM_PADDING);\r\n    }\r\n\r\n    if (/w/.test(resizeDirection)) {\r\n      addMin(minTrbl, 'left', flowElementTrbl.left - LANE_LEFT_PADDING);\r\n    }\r\n  });\r\n\r\n  return {\r\n    min: minTrbl,\r\n    max: maxTrbl\r\n  };\r\n}","import { is } from '../../../util/ModelUtil';\n\nimport {\n  roundBounds\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  hasPrimaryModifier\n} from 'diagram-js/lib/util/Mouse';\n\nvar SLIGHTLY_HIGHER_PRIORITY = 1001;\n\n\n/**\n * Invoke {@link Modeling#resizeLane} instead of\n * {@link Modeling#resizeShape} when resizing a Lane\n * or Participant shape.\n */\nexport default function ResizeLaneBehavior(eventBus, modeling) {\n\n  eventBus.on('resize.start', SLIGHTLY_HIGHER_PRIORITY + 500, function(event) {\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\n\n      // should we resize the opposite lane(s) in\n      // order to compensate for the resize operation?\n      context.balanced = !hasPrimaryModifier(event);\n    }\n  });\n\n  /**\n   * Intercept resize end and call resize lane function instead.\n   */\n  eventBus.on('resize.end', SLIGHTLY_HIGHER_PRIORITY, function(event) {\n    var context = event.context,\n        shape = context.shape,\n        canExecute = context.canExecute,\n        newBounds = context.newBounds;\n\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\n\n      if (canExecute) {\n\n        // ensure we have actual pixel values for new bounds\n        // (important when zoom level was > 1 during move)\n        newBounds = roundBounds(newBounds);\n\n        // perform the actual resize\n        modeling.resizeLane(shape, newBounds, context.balanced);\n      }\n\n      // stop propagation\n      return false;\n    }\n  });\n}\n\nResizeLaneBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];\n","import inherits from 'inherits';\r\n\r\nimport {\r\n  find,\r\n  isArray,\r\n  matchPattern,\r\n  some\r\n} from 'min-dash';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  add as collectionAdd,\r\n  remove as collectionRemove\r\n} from 'diagram-js/lib/util/Collections';\r\n\r\nimport {\r\n  getBusinessObject,\r\n  is\r\n} from '../../../util/ModelUtil';\r\n\r\nimport { isAny } from '../util/ModelingUtil';\r\n\r\nimport { hasEventDefinition } from '../../../util/DiUtil';\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n\r\n/**\r\n * Add referenced root elements (error, escalation, message, signal) if they don't exist.\r\n * Copy referenced root elements on copy & paste.\r\n */\r\nexport default function RootElementReferenceBehavior(\r\n    bpmnjs, eventBus, injector, moddleCopy, bpmnFactory\r\n) {\r\n  injector.invoke(CommandInterceptor, this);\r\n\r\n  function canHaveRootElementReference(element) {\r\n    return isAny(element, [ 'bpmn:ReceiveTask', 'bpmn:SendTask' ]) ||\r\n      hasAnyEventDefinition(element, [\r\n        'bpmn:ErrorEventDefinition',\r\n        'bpmn:EscalationEventDefinition',\r\n        'bpmn:MessageEventDefinition',\r\n        'bpmn:SignalEventDefinition'\r\n      ]);\r\n  }\r\n\r\n  function hasRootElement(rootElement) {\r\n    var definitions = bpmnjs.getDefinitions(),\r\n        rootElements = definitions.get('rootElements');\r\n\r\n    return !!find(rootElements, matchPattern({ id: rootElement.id }));\r\n  }\r\n\r\n  function getRootElementReferencePropertyName(eventDefinition) {\r\n    if (is(eventDefinition, 'bpmn:ErrorEventDefinition')) {\r\n      return 'errorRef';\r\n    } else if (is(eventDefinition, 'bpmn:EscalationEventDefinition')) {\r\n      return 'escalationRef';\r\n    } else if (is(eventDefinition, 'bpmn:MessageEventDefinition')) {\r\n      return 'messageRef';\r\n    } else if (is(eventDefinition, 'bpmn:SignalEventDefinition')) {\r\n      return 'signalRef';\r\n    }\r\n  }\r\n\r\n  function getRootElement(businessObject) {\r\n    if (isAny(businessObject, [ 'bpmn:ReceiveTask', 'bpmn:SendTask' ])) {\r\n      return businessObject.get('messageRef');\r\n    }\r\n\r\n    var eventDefinitions = businessObject.get('eventDefinitions'),\r\n        eventDefinition = eventDefinitions[ 0 ];\r\n\r\n    return eventDefinition.get(getRootElementReferencePropertyName(eventDefinition));\r\n  }\r\n\r\n  function setRootElement(businessObject, rootElement) {\r\n    if (isAny(businessObject, [ 'bpmn:ReceiveTask', 'bpmn:SendTask' ])) {\r\n      return businessObject.set('messageRef', rootElement);\r\n    }\r\n\r\n    var eventDefinitions = businessObject.get('eventDefinitions'),\r\n        eventDefinition = eventDefinitions[ 0 ];\r\n\r\n    return eventDefinition.set(getRootElementReferencePropertyName(eventDefinition), rootElement);\r\n  }\r\n\r\n  // create shape\r\n  this.executed('shape.create', function(context) {\r\n    var shape = context.shape;\r\n\r\n    if (!canHaveRootElementReference(shape)) {\r\n      return;\r\n    }\r\n\r\n    var businessObject = getBusinessObject(shape),\r\n        rootElement = getRootElement(businessObject),\r\n        rootElements;\r\n\r\n    if (rootElement && !hasRootElement(rootElement)) {\r\n      rootElements = bpmnjs.getDefinitions().get('rootElements');\r\n\r\n      // add root element\r\n      collectionAdd(rootElements, rootElement);\r\n\r\n      context.addedRootElement = rootElement;\r\n    }\r\n  }, true);\r\n\r\n  this.reverted('shape.create', function(context) {\r\n    var addedRootElement = context.addedRootElement;\r\n\r\n    if (!addedRootElement) {\r\n      return;\r\n    }\r\n\r\n    var rootElements = bpmnjs.getDefinitions().get('rootElements');\r\n\r\n    // remove root element\r\n    collectionRemove(rootElements, addedRootElement);\r\n  }, true);\r\n\r\n  eventBus.on('copyPaste.copyElement', function(context) {\r\n    var descriptor = context.descriptor,\r\n        element = context.element;\r\n\r\n    if (!canHaveRootElementReference(element)) {\r\n      return;\r\n    }\r\n\r\n    var businessObject = getBusinessObject(element),\r\n        rootElement = getRootElement(businessObject);\r\n\r\n    if (rootElement) {\r\n      descriptor.referencedRootElement = rootElement;\r\n    }\r\n  });\r\n\r\n  eventBus.on('copyPaste.pasteElement', LOW_PRIORITY, function(context) {\r\n    var descriptor = context.descriptor,\r\n        businessObject = descriptor.businessObject;\r\n\r\n    if (!canHaveRootElementReference(businessObject)) {\r\n      return;\r\n    }\r\n\r\n    var referencedRootElement = descriptor.referencedRootElement;\r\n\r\n    if (!referencedRootElement) {\r\n      return;\r\n    }\r\n\r\n    if (!hasRootElement(referencedRootElement)) {\r\n      referencedRootElement = moddleCopy.copyElement(\r\n        referencedRootElement,\r\n        bpmnFactory.create(referencedRootElement.$type)\r\n      );\r\n    }\r\n\r\n    setRootElement(businessObject, referencedRootElement);\r\n  });\r\n}\r\n\r\nRootElementReferenceBehavior.$inject = [\r\n  'bpmnjs',\r\n  'eventBus',\r\n  'injector',\r\n  'moddleCopy',\r\n  'bpmnFactory'\r\n];\r\n\r\ninherits(RootElementReferenceBehavior, CommandInterceptor);\r\n\r\n// helpers //////////\r\n\r\nfunction hasAnyEventDefinition(element, types) {\r\n  if (!isArray(types)) {\r\n    types = [ types ];\r\n  }\r\n\r\n  return some(types, function(type) {\r\n    return hasEventDefinition(element, type);\r\n  });\r\n}","import { forEach } from 'min-dash';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport { isExpanded } from '../../../util/DiUtil';\r\n\r\nimport {\r\n  LANE_MIN_DIMENSIONS,\r\n  PARTICIPANT_MIN_DIMENSIONS,\r\n  SUB_PROCESS_MIN_DIMENSIONS,\r\n  TEXT_ANNOTATION_MIN_DIMENSIONS\r\n} from './ResizeBehavior';\r\n\r\nimport { getChildLanes } from '../util/LaneUtil';\r\n\r\nvar max = Math.max;\r\n\r\n\r\nexport default function SpaceToolBehavior(eventBus) {\r\n  eventBus.on('spaceTool.getMinDimensions', function(context) {\r\n    var shapes = context.shapes,\r\n        axis = context.axis,\r\n        start = context.start,\r\n        minDimensions = {};\r\n\r\n    forEach(shapes, function(shape) {\r\n      var id = shape.id;\r\n\r\n      if (is(shape, 'bpmn:Participant')) {\r\n\r\n        if (isHorizontal(axis)) {\r\n          minDimensions[ id ] = PARTICIPANT_MIN_DIMENSIONS;\r\n        } else {\r\n          minDimensions[ id ] = {\r\n            width: PARTICIPANT_MIN_DIMENSIONS.width,\r\n            height: getParticipantMinHeight(shape, start)\r\n          };\r\n        }\r\n\r\n      }\r\n\r\n      if (is(shape, 'bpmn:SubProcess') && isExpanded(shape)) {\r\n        minDimensions[ id ] = SUB_PROCESS_MIN_DIMENSIONS;\r\n      }\r\n\r\n      if (is(shape, 'bpmn:TextAnnotation')) {\r\n        minDimensions[ id ] = TEXT_ANNOTATION_MIN_DIMENSIONS;\r\n      }\r\n    });\r\n\r\n    return minDimensions;\r\n  });\r\n}\r\n\r\nSpaceToolBehavior.$inject = [ 'eventBus' ];\r\n\r\n\r\n// helpers //////////\r\nfunction isHorizontal(axis) {\r\n  return axis === 'x';\r\n}\r\n\r\n/**\r\n * Get minimum height for participant taking lanes into account.\r\n *\r\n * @param {<djs.model.Shape>} participant\r\n * @param {number} start\r\n *\r\n * @returns {Object}\r\n */\r\nfunction getParticipantMinHeight(participant, start) {\r\n  var lanesMinHeight;\r\n\r\n  if (!hasChildLanes(participant)) {\r\n    return PARTICIPANT_MIN_DIMENSIONS.height;\r\n  }\r\n\r\n  lanesMinHeight = getLanesMinHeight(participant, start);\r\n\r\n  return max(PARTICIPANT_MIN_DIMENSIONS.height, lanesMinHeight);\r\n}\r\n\r\nfunction hasChildLanes(element) {\r\n  return !!getChildLanes(element).length;\r\n}\r\n\r\nfunction getLanesMinHeight(participant, resizeStart) {\r\n  var lanes = getChildLanes(participant),\r\n      resizedLane;\r\n\r\n  // find the nested lane which is currently resized\r\n  resizedLane = findResizedLane(lanes, resizeStart);\r\n\r\n  // resized lane cannot shrink below the minimum height\r\n  // but remaining lanes' dimensions are kept intact\r\n  return participant.height - resizedLane.height + LANE_MIN_DIMENSIONS.height;\r\n}\r\n\r\n/**\r\n * Find nested lane which is currently resized.\r\n *\r\n * @param {Array<djs.model.Shape>} lanes\r\n * @param {number} resizeStart\r\n */\r\nfunction findResizedLane(lanes, resizeStart) {\r\n  var i, lane, childLanes;\r\n\r\n  for (i = 0; i < lanes.length; i++) {\r\n    lane = lanes[i];\r\n\r\n    // resizing current lane or a lane nested\r\n    if (resizeStart >= lane.y && resizeStart <= lane.y + lane.height) {\r\n      childLanes = getChildLanes(lane);\r\n\r\n      // a nested lane is resized\r\n      if (childLanes.length) {\r\n        return findResizedLane(childLanes, resizeStart);\r\n      }\r\n\r\n      // current lane is the resized one\r\n      return lane;\r\n    }\r\n  }\r\n}\r\n","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { find } from 'min-dash';\nimport { isExpanded } from '../../../util/DiUtil';\nimport { getBusinessObject, getDi, is } from '../../../util/ModelUtil';\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\nimport { getBBox } from 'diagram-js/lib/util/Elements';\nimport {\n  getPlaneIdFromShape,\n  getShapeIdFromPlane,\n  isPlane,\n  toPlaneId\n} from '../../../util/DrilldownUtil';\n\n\nvar LOW_PRIORITY = 400;\nvar HIGH_PRIORITY = 600;\n\nvar DEFAULT_POSITION = {\n  x: 180,\n  y: 160\n};\n\n\n/**\n * Creates bpmndi:BPMNPlane elements and canvas planes when collapsed subprocesses are created.\n *\n *\n * @param {Canvas} canvas\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n * @param {ElementFactory} elementFactory\n * @param {BpmnFactory} bpmnFactory\n * @param {Bpmnjs} bpmnjs\n * @param {ElementRegistry} elementRegistry\n */\nexport default function SubProcessPlaneBehavior(\n    canvas, eventBus, modeling,\n    elementFactory, bpmnFactory, bpmnjs, elementRegistry) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  this._canvas = canvas;\n  this._eventBus = eventBus;\n  this._modeling = modeling;\n  this._elementFactory = elementFactory;\n  this._bpmnFactory = bpmnFactory;\n  this._bpmnjs = bpmnjs;\n  this._elementRegistry = elementRegistry;\n\n  var self = this;\n\n  function isCollapsedSubProcess(element) {\n    return is(element, 'bpmn:SubProcess') && !isExpanded(element);\n  }\n\n  function createRoot(context) {\n    var shape = context.shape,\n        rootElement = context.newRootElement;\n\n    var businessObject = getBusinessObject(shape);\n\n    rootElement = self._addDiagram(rootElement || businessObject);\n\n    context.newRootElement = canvas.addRootElement(rootElement);\n  }\n\n  function removeRoot(context) {\n    var shape = context.shape;\n\n    var businessObject = getBusinessObject(shape);\n    self._removeDiagram(businessObject);\n\n    var rootElement = context.newRootElement = elementRegistry.get(getPlaneIdFromShape(businessObject));\n\n    canvas.removeRootElement(rootElement);\n  }\n\n  // add plane elements for newly created sub-processes\n  // this ensures we can actually drill down into the element\n  this.executed('shape.create', function(context) {\n    var shape = context.shape;\n    if (!isCollapsedSubProcess(shape)) {\n      return;\n    }\n\n    createRoot(context);\n  }, true);\n\n\n  this.postExecuted('shape.create', function(context) {\n    var shape = context.shape,\n        rootElement = context.newRootElement;\n\n    if (!rootElement || !shape.children) {\n      return;\n    }\n\n    self._showRecursively(shape.children);\n\n    self._moveChildrenToShape(shape, rootElement);\n  }, true);\n\n\n  this.reverted('shape.create', function(context) {\n    var shape = context.shape;\n    if (!isCollapsedSubProcess(shape)) {\n      return;\n    }\n\n    removeRoot(context);\n  }, true);\n\n\n  this.preExecuted('shape.delete', function(context) {\n    var shape = context.shape;\n    if (!isCollapsedSubProcess(shape)) {\n      return;\n    }\n\n    var attachedRoot = elementRegistry.get(getPlaneIdFromShape(shape));\n\n    if (!attachedRoot) {\n      return;\n    }\n\n    modeling.removeElements(attachedRoot.children.slice());\n  }, true);\n\n\n  this.executed('shape.delete', function(context) {\n    var shape = context.shape;\n    if (!isCollapsedSubProcess(shape)) {\n      return;\n    }\n    removeRoot(context);\n  }, true);\n\n\n  this.reverted('shape.delete', function(context) {\n    var shape = context.shape;\n    if (!isCollapsedSubProcess(shape)) {\n      return;\n    }\n\n    createRoot(context);\n  }, true);\n\n\n  this.preExecuted('shape.replace', function(context) {\n    var oldShape = context.oldShape;\n    var newShape = context.newShape;\n\n    if (!isCollapsedSubProcess(oldShape) || !isCollapsedSubProcess(newShape)) {\n      return;\n    }\n\n    // old plane could have content,\n    // we remove it so it is not recursively deleted from 'shape.delete'\n    context.oldRoot = canvas.removeRootElement(getPlaneIdFromShape(oldShape));\n  }, true);\n\n\n  this.postExecuted('shape.replace', function(context) {\n    var newShape = context.newShape,\n        source = context.oldRoot,\n        target = canvas.findRoot(getPlaneIdFromShape(newShape));\n\n    if (!source || !target) {\n      return;\n    }\n    var elements = source.children;\n\n    modeling.moveElements(elements, { x: 0, y: 0 }, target);\n  }, true);\n\n\n  // rename primary elements when the secondary element changes\n  // this ensures rootElement.id = element.id + '_plane'\n  this.executed('element.updateProperties', function(context) {\n    var shape = context.element;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    var properties = context.properties;\n    var oldProperties = context.oldProperties;\n\n    var oldId = oldProperties.id,\n        newId = properties.id;\n\n    if (oldId === newId) {\n      return;\n    }\n\n    if (isPlane(shape)) {\n      elementRegistry.updateId(shape, toPlaneId(newId));\n      elementRegistry.updateId(oldId, newId);\n\n      return;\n    }\n\n    var planeElement = elementRegistry.get(toPlaneId(oldId));\n\n    if (!planeElement) {\n      return;\n    }\n\n    elementRegistry.updateId(toPlaneId(oldId), toPlaneId(newId));\n  }, true);\n\n\n  this.reverted('element.updateProperties', function(context) {\n    var shape = context.element;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    var properties = context.properties;\n    var oldProperties = context.oldProperties;\n\n    var oldId = oldProperties.id,\n        newId = properties.id;\n\n    if (oldId === newId) {\n      return;\n    }\n\n    if (isPlane(shape)) {\n      elementRegistry.updateId(shape, toPlaneId(oldId));\n      elementRegistry.updateId(newId, oldId);\n\n      return;\n    }\n\n    var planeElement = elementRegistry.get(toPlaneId(newId));\n\n    if (!planeElement) {\n      return;\n    }\n\n    elementRegistry.updateId(planeElement, toPlaneId(oldId));\n  }, true);\n\n  // re-throw element.changed to re-render primary shape if associated plane has\n  // changed (e.g. bpmn:name property has changed)\n  eventBus.on('element.changed', function(context) {\n    var element = context.element;\n\n    if (!isPlane(element)) {\n      return;\n    }\n\n    var plane = element;\n\n    var primaryShape = elementRegistry.get(getShapeIdFromPlane(plane));\n\n    // do not re-throw if no associated primary shape (e.g. bpmn:Process)\n    if (!primaryShape || primaryShape === plane) {\n      return;\n    }\n\n    eventBus.fire('element.changed', { element: primaryShape });\n  });\n\n\n  // create/remove plane for the subprocess\n  this.executed('shape.toggleCollapse', LOW_PRIORITY, function(context) {\n    var shape = context.shape;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    if (!isExpanded(shape)) {\n      createRoot(context);\n      self._showRecursively(shape.children);\n    } else {\n      removeRoot(context);\n    }\n\n  }, true);\n\n\n  // create/remove plane for the subprocess\n  this.reverted('shape.toggleCollapse', LOW_PRIORITY, function(context) {\n    var shape = context.shape;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    if (!isExpanded(shape)) {\n      createRoot(context);\n      self._showRecursively(shape.children);\n    } else {\n      removeRoot(context);\n    }\n\n  }, true);\n\n  // move elements between planes\n  this.postExecuted('shape.toggleCollapse', HIGH_PRIORITY, function(context) {\n    var shape = context.shape;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    var rootElement = context.newRootElement;\n\n    if (!rootElement) {\n      return;\n    }\n\n    if (!isExpanded(shape)) {\n\n      // collapsed\n      self._moveChildrenToShape(shape, rootElement);\n\n    } else {\n      self._moveChildrenToShape(rootElement, shape);\n    }\n  }, true);\n\n\n  // copy-paste ///////////\n\n  // add elements in plane to tree\n  eventBus.on('copyPaste.createTree', function(context) {\n    var element = context.element,\n        children = context.children;\n\n    if (!isCollapsedSubProcess(element)) {\n      return;\n    }\n\n    var id = getPlaneIdFromShape(element);\n    var parent = elementRegistry.get(id);\n\n    if (parent) {\n\n      // do not copy invisible root element\n      children.push.apply(children, parent.children);\n    }\n  });\n\n  // set plane children as direct children of collapsed shape\n  eventBus.on('copyPaste.copyElement', function(context) {\n    var descriptor = context.descriptor,\n        element = context.element,\n        elements = context.elements;\n\n    var parent = element.parent;\n\n    var isPlane = is(getDi(parent), 'bpmndi:BPMNPlane');\n    if (!isPlane) {\n      return;\n    }\n\n    var parentId = getShapeIdFromPlane(parent);\n\n    var referencedShape = find(elements, function(element) {\n      return element.id === parentId;\n    });\n\n    if (!referencedShape) {\n      return;\n    }\n\n    descriptor.parent = referencedShape.id;\n  });\n\n  // hide children during pasting\n  eventBus.on('copyPaste.pasteElement', function(context) {\n    var descriptor = context.descriptor;\n\n    if (!descriptor.parent) {\n      return;\n    }\n\n    if (isCollapsedSubProcess(descriptor.parent) || descriptor.parent.hidden) {\n      descriptor.hidden = true;\n    }\n  });\n\n}\n\ninherits(SubProcessPlaneBehavior, CommandInterceptor);\n\n/**\n * Moves the child elements from source to target.\n *\n * If the target is a plane, the children are moved to the top left corner.\n * Otherwise, the center of the target is used.\n *\n * @param {Object|djs.model.Base} source\n * @param {Object|djs.model.Base} target\n */\nSubProcessPlaneBehavior.prototype._moveChildrenToShape = function(source, target) {\n  var modeling = this._modeling;\n\n  var children = source.children;\n  var offset;\n\n  if (!children) {\n    return;\n  }\n\n  // only change plane if there are no visible children, but don't move them\n  var visibleChildren = children.filter(function(child) {\n    return !child.hidden;\n  });\n\n  if (!visibleChildren.length) {\n    modeling.moveElements(children, { x: 0, y: 0 }, target, { autoResize: false });\n    return;\n  }\n\n  var childrenBounds = getBBox(visibleChildren);\n\n  // target is a plane\n  if (!target.x) {\n    offset = {\n      x: DEFAULT_POSITION.x - childrenBounds.x,\n      y: DEFAULT_POSITION.y - childrenBounds.y\n    };\n  }\n\n  // source is a plane\n  else {\n\n    // move relative to the center of the shape\n    var targetMid = getMid(target);\n    var childrenMid = getMid(childrenBounds);\n\n    offset = {\n      x: targetMid.x - childrenMid.x,\n      y: targetMid.y - childrenMid.y\n    };\n  }\n\n  modeling.moveElements(children, offset, target, { autoResize: false });\n};\n\n/**\n * Sets `hidden` property on all children of the given shape.\n *\n * @param {Array} elements\n * @param {Boolean} [hidden]\n * @returns {Array} all child elements\n */\nSubProcessPlaneBehavior.prototype._showRecursively = function(elements, hidden) {\n  var self = this;\n\n  var result = [];\n  elements.forEach(function(element) {\n    element.hidden = !!hidden;\n\n    result = result.concat(element);\n\n    if (element.children) {\n      result = result.concat(\n        self._showRecursively(element.children, element.collapsed || hidden)\n      );\n    }\n  });\n\n  return result;\n};\n\n/**\n* Adds a given rootElement to the bpmnDi diagrams.\n*\n* @param {Object} rootElement\n* @returns {Object} planeElement\n*/\nSubProcessPlaneBehavior.prototype._addDiagram = function(planeElement) {\n  var bpmnjs = this._bpmnjs;\n  var diagrams = bpmnjs.getDefinitions().diagrams;\n\n  if (!planeElement.businessObject) {\n    planeElement = this._createNewDiagram(planeElement);\n  }\n\n  diagrams.push(planeElement.di.$parent);\n\n  return planeElement;\n};\n\n\n/**\n* Creates a new plane element for the given sub process.\n*\n* @param {Object} bpmnElement\n*\n* @return {Object} new diagram element\n*/\nSubProcessPlaneBehavior.prototype._createNewDiagram = function(bpmnElement) {\n  var bpmnFactory = this._bpmnFactory;\n  var elementFactory = this._elementFactory;\n\n  var diPlane = bpmnFactory.create('bpmndi:BPMNPlane', {\n    bpmnElement: bpmnElement\n  });\n  var diDiagram = bpmnFactory.create('bpmndi:BPMNDiagram', {\n    plane: diPlane\n  });\n  diPlane.$parent = diDiagram;\n\n  // add a virtual element (not being drawn),\n  // a copy cat of our BpmnImporter code\n  var planeElement = elementFactory.createRoot({\n    id: getPlaneIdFromShape(bpmnElement),\n    type: bpmnElement.$type,\n    di: diPlane,\n    businessObject: bpmnElement,\n    collapsed: true\n  });\n\n  return planeElement;\n};\n\n/**\n * Removes the diagram for a given root element\n *\n * @param {Object} rootElement\n * @returns {Object} removed bpmndi:BPMNDiagram\n */\nSubProcessPlaneBehavior.prototype._removeDiagram = function(rootElement) {\n  var bpmnjs = this._bpmnjs;\n\n  var diagrams = bpmnjs.getDefinitions().diagrams;\n\n  var removedDiagram = find(diagrams, function(diagram) {\n    return diagram.plane.bpmnElement.id === rootElement.id;\n  });\n\n  diagrams.splice(diagrams.indexOf(removedDiagram), 1);\n\n  return removedDiagram;\n};\n\n\nSubProcessPlaneBehavior.$inject = [\n  'canvas',\n  'eventBus',\n  'modeling',\n  'elementFactory',\n  'bpmnFactory',\n  'bpmnjs',\n  'elementRegistry'\n];\n","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil.js';\n\n/**\n * Add start event replacing element with expanded sub process.\n *\n * @param {Injector} injector\n * @param {Modeling} modeling\n */\nexport default function SubProcessStartEventBehavior(injector, modeling) {\n  injector.invoke(CommandInterceptor, this);\n\n  this.postExecuted('shape.replace', function(event) {\n    var oldShape = event.context.oldShape,\n        newShape = event.context.newShape;\n\n    if (\n      !is(newShape, 'bpmn:SubProcess') ||\n      !is(oldShape, 'bpmn:Task') ||\n      !isExpanded(newShape)\n    ) {\n      return;\n    }\n\n    var position = getStartEventPosition(newShape);\n\n    modeling.createShape({ type: 'bpmn:StartEvent' }, position, newShape);\n  });\n}\n\nSubProcessStartEventBehavior.$inject = [\n  'injector',\n  'modeling'\n];\n\ninherits(SubProcessStartEventBehavior, CommandInterceptor);\n\n// helpers //////////\n\nfunction getStartEventPosition(shape) {\n  return {\n    x: shape.x + shape.width / 6,\n    y: shape.y + shape.height / 2\n  };\n}\n","\nimport inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  forEach\n} from 'min-dash';\n\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\nimport { selfAndAllChildren } from 'diagram-js/lib/util/Elements';\n\nimport { isExpanded } from '../../../util/DiUtil';\n\n\nexport default function ToggleCollapseConnectionBehaviour(\n    eventBus, modeling\n) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  this.postExecuted('shape.toggleCollapse', 1500, function(context) {\n\n    // var shape = context.shape;\n    var shape = context.shape;\n\n    // only change connections when collapsing\n    if (isExpanded(shape)) {\n      return;\n    }\n\n    var allChildren = selfAndAllChildren(shape);\n\n    allChildren.forEach(function(child) {\n\n      // Ensure that the connection array is not modified during iteration\n      var incomingConnections = child.incoming.slice(),\n          outgoingConnections = child.outgoing.slice();\n\n      forEach(incomingConnections, function(c) {\n        handleConnection(c, true);\n      });\n\n      forEach(outgoingConnections, function(c) {\n        handleConnection(c, false);\n      });\n    });\n\n\n    function handleConnection(c, incoming) {\n      if (allChildren.indexOf(c.source) !== -1 && allChildren.indexOf(c.target) !== -1) {\n        return;\n      }\n\n      if (incoming) {\n        modeling.reconnectEnd(c, shape, getMid(shape));\n      } else {\n        modeling.reconnectStart(c, shape, getMid(shape));\n      }\n\n    }\n\n  }, true);\n\n}\n\ninherits(ToggleCollapseConnectionBehaviour, CommandInterceptor);\n\nToggleCollapseConnectionBehaviour.$inject = [\n  'eventBus',\n  'modeling',\n];\n\n\n","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getDi,\n  is\n} from '../../../util/ModelUtil';\n\nimport {\n  computeChildrenBBox\n} from 'diagram-js/lib/features/resize/ResizeUtil';\n\n\nvar LOW_PRIORITY = 500;\n\n\nexport default function ToggleElementCollapseBehaviour(\n    eventBus, elementFactory, modeling,\n    resize) {\n\n  CommandInterceptor.call(this, eventBus);\n\n\n  function hideEmptyLabels(children) {\n    if (children.length) {\n      children.forEach(function(child) {\n        if (child.type === 'label' && !child.businessObject.name) {\n          child.hidden = true;\n        }\n      });\n    }\n  }\n\n  function expandedBounds(shape, defaultSize) {\n    var children = shape.children,\n        newBounds = defaultSize,\n        visibleElements,\n        visibleBBox;\n\n    visibleElements = filterVisible(children).concat([ shape ]);\n\n    visibleBBox = computeChildrenBBox(visibleElements);\n\n    if (visibleBBox) {\n\n      // center to visibleBBox with max(defaultSize, childrenBounds)\n      newBounds.width = Math.max(visibleBBox.width, newBounds.width);\n      newBounds.height = Math.max(visibleBBox.height, newBounds.height);\n\n      newBounds.x = visibleBBox.x + (visibleBBox.width - newBounds.width) / 2;\n      newBounds.y = visibleBBox.y + (visibleBBox.height - newBounds.height) / 2;\n    } else {\n\n      // center to collapsed shape with defaultSize\n      newBounds.x = shape.x + (shape.width - newBounds.width) / 2;\n      newBounds.y = shape.y + (shape.height - newBounds.height) / 2;\n    }\n\n    return newBounds;\n  }\n\n  function collapsedBounds(shape, defaultSize) {\n\n    return {\n      x: shape.x + (shape.width - defaultSize.width) / 2,\n      y: shape.y + (shape.height - defaultSize.height) / 2,\n      width: defaultSize.width,\n      height: defaultSize.height\n    };\n  }\n\n  this.executed([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\n\n    var context = e.context,\n        shape = context.shape;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    if (!shape.collapsed) {\n\n      // all children got made visible through djs, hide empty labels\n      hideEmptyLabels(shape.children);\n\n      // remove collapsed marker\n      getDi(shape).isExpanded = true;\n    } else {\n\n      // place collapsed marker\n      getDi(shape).isExpanded = false;\n    }\n  });\n\n  this.reverted([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\n\n    var context = e.context;\n    var shape = context.shape;\n\n\n    // revert removing/placing collapsed marker\n    if (!shape.collapsed) {\n      getDi(shape).isExpanded = true;\n\n    } else {\n      getDi(shape).isExpanded = false;\n    }\n  });\n\n  this.postExecuted([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\n    var shape = e.context.shape,\n        defaultSize = elementFactory.getDefaultSize(shape),\n        newBounds;\n\n    if (shape.collapsed) {\n\n      // resize to default size of collapsed shapes\n      newBounds = collapsedBounds(shape, defaultSize);\n    } else {\n\n      // resize to bounds of max(visible children, defaultSize)\n      newBounds = expandedBounds(shape, defaultSize);\n    }\n\n    modeling.resizeShape(shape, newBounds, null, {\n      autoResize: shape.collapsed ? false : 'nwse'\n    });\n  });\n\n}\n\n\ninherits(ToggleElementCollapseBehaviour, CommandInterceptor);\n\nToggleElementCollapseBehaviour.$inject = [\n  'eventBus',\n  'elementFactory',\n  'modeling'\n];\n\n\n// helpers //////////////////////\n\nfunction filterVisible(elements) {\n  return elements.filter(function(e) {\n    return !e.hidden;\n  });\n}","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil';\nimport { isLabel } from '../../../util/LabelUtil';\n\n\n/**\n * Unclaims model IDs on element deletion.\n *\n * @param {Canvas} canvas\n * @param {Injector} injector\n * @param {Moddle} moddle\n * @param {Modeling} modeling\n */\nexport default function UnclaimIdBehavior(canvas, injector, moddle, modeling) {\n  injector.invoke(CommandInterceptor, this);\n\n  this.preExecute('shape.delete', function(event) {\n    var context = event.context,\n        shape = context.shape,\n        shapeBo = shape.businessObject;\n\n    if (isLabel(shape)) {\n      return;\n    }\n\n    if (is(shape, 'bpmn:Participant') && isExpanded(shape)) {\n      moddle.ids.unclaim(shapeBo.processRef.id);\n    }\n\n    modeling.unclaimId(shapeBo.id, shapeBo);\n  });\n\n\n  this.preExecute('connection.delete', function(event) {\n    var context = event.context,\n        connection = context.connection,\n        connectionBo = connection.businessObject;\n\n    modeling.unclaimId(connectionBo.id, connectionBo);\n  });\n\n  this.preExecute('canvas.updateRoot', function() {\n    var rootElement = canvas.getRootElement(),\n        rootElementBo = rootElement.businessObject;\n\n    if (is(rootElement, 'bpmn:Collaboration')) {\n      moddle.ids.unclaim(rootElementBo.id);\n    }\n  });\n}\n\ninherits(UnclaimIdBehavior, CommandInterceptor);\n\nUnclaimIdBehavior.$inject = [ 'canvas', 'injector', 'moddle', 'modeling' ];","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getBusinessObject,\n  is\n} from '../../../util/ModelUtil';\n\n\n/**\n * A behavior that unsets the Default property of\n * sequence flow source on element delete, if the\n * removed element is the Gateway or Task's default flow.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function DeleteSequenceFlowBehavior(eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n\n  this.preExecute('connection.delete', function(event) {\n    var context = event.context,\n        connection = context.connection,\n        source = connection.source;\n\n    if (isDefaultFlow(connection, source)) {\n      modeling.updateProperties(source, {\n        'default': null\n      });\n    }\n  });\n}\n\ninherits(DeleteSequenceFlowBehavior, CommandInterceptor);\n\nDeleteSequenceFlowBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];\n\n\n// helpers //////////////////////\n\nfunction isDefaultFlow(connection, source) {\n\n  if (!is(connection, 'bpmn:SequenceFlow')) {\n    return false;\n  }\n\n  var sourceBo = getBusinessObject(source),\n      sequenceFlow = getBusinessObject(connection);\n\n  return sourceBo.get('default') === sequenceFlow;\n}","import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  is\n} from '../../../util/ModelUtil';\n\nvar LOW_PRIORITY = 500,\n    HIGH_PRIORITY = 5000;\n\n\n/**\n * BPMN specific delete lane behavior\n */\nexport default function UpdateFlowNodeRefsBehavior(eventBus, modeling, translate) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Ok, this is it:\n   *\n   * We have to update the Lane#flowNodeRefs _and_\n   * FlowNode#lanes with every FlowNode move/resize and\n   * Lane move/resize.\n   *\n   * We want to group that stuff to recompute containments\n   * as efficient as possible.\n   *\n   * Yea!\n   */\n\n  // the update context\n  var context;\n\n\n  function initContext() {\n    context = context || new UpdateContext();\n    context.enter();\n\n    return context;\n  }\n\n  function getContext() {\n    if (!context) {\n      throw new Error(translate('out of bounds release'));\n    }\n\n    return context;\n  }\n\n  function releaseContext() {\n\n    if (!context) {\n      throw new Error(translate('out of bounds release'));\n    }\n\n    var triggerUpdate = context.leave();\n\n    if (triggerUpdate) {\n      modeling.updateLaneRefs(context.flowNodes, context.lanes);\n\n      context = null;\n    }\n\n    return triggerUpdate;\n  }\n\n\n  var laneRefUpdateEvents = [\n    'spaceTool',\n    'lane.add',\n    'lane.resize',\n    'lane.split',\n    'elements.create',\n    'elements.delete',\n    'elements.move',\n    'shape.create',\n    'shape.delete',\n    'shape.move',\n    'shape.resize'\n  ];\n\n\n  // listen to a lot of stuff to group lane updates\n\n  this.preExecute(laneRefUpdateEvents, HIGH_PRIORITY, function(event) {\n    initContext();\n  });\n\n  this.postExecuted(laneRefUpdateEvents, LOW_PRIORITY, function(event) {\n    releaseContext();\n  });\n\n\n  // Mark flow nodes + lanes that need an update\n\n  this.preExecute([\n    'shape.create',\n    'shape.move',\n    'shape.delete',\n    'shape.resize'\n  ], function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    var updateContext = getContext();\n\n    // no need to update labels\n    if (shape.labelTarget) {\n      return;\n    }\n\n    if (is(shape, 'bpmn:Lane')) {\n      updateContext.addLane(shape);\n    }\n\n    if (is(shape, 'bpmn:FlowNode')) {\n      updateContext.addFlowNode(shape);\n    }\n  });\n}\n\nUpdateFlowNodeRefsBehavior.$inject = [\n  'eventBus',\n  'modeling' ,\n  'translate'\n];\n\ninherits(UpdateFlowNodeRefsBehavior, CommandInterceptor);\n\n\nfunction UpdateContext() {\n\n  this.flowNodes = [];\n  this.lanes = [];\n\n  this.counter = 0;\n\n  this.addLane = function(lane) {\n    this.lanes.push(lane);\n  };\n\n  this.addFlowNode = function(flowNode) {\n    this.flowNodes.push(flowNode);\n  };\n\n  this.enter = function() {\n    this.counter++;\n  };\n\n  this.leave = function() {\n    this.counter--;\n\n    return !this.counter;\n  };\n}","import AdaptiveLabelPositioningBehavior from './AdaptiveLabelPositioningBehavior';\nimport AppendBehavior from './AppendBehavior';\nimport AssociationBehavior from './AssociationBehavior';\nimport AttachEventBehavior from './AttachEventBehavior';\nimport BoundaryEventBehavior from './BoundaryEventBehavior';\nimport CreateBehavior from './CreateBehavior';\nimport CreateDataObjectBehavior from './CreateDataObjectBehavior';\nimport CreateParticipantBehavior from './CreateParticipantBehavior';\nimport DataInputAssociationBehavior from './DataInputAssociationBehavior';\nimport DataStoreBehavior from './DataStoreBehavior';\nimport DeleteLaneBehavior from './DeleteLaneBehavior';\nimport DetachEventBehavior from './DetachEventBehavior';\nimport DropOnFlowBehavior from './DropOnFlowBehavior';\nimport EventBasedGatewayBehavior from './EventBasedGatewayBehavior';\nimport FixHoverBehavior from './FixHoverBehavior';\nimport GroupBehavior from './GroupBehavior';\nimport ImportDockingFix from './ImportDockingFix';\nimport IsHorizontalFix from './IsHorizontalFix';\nimport LabelBehavior from './LabelBehavior';\nimport MessageFlowBehavior from './MessageFlowBehavior';\nimport ModelingFeedback from './ModelingFeedback';\nimport RemoveEmbeddedLabelBoundsBehavior from './RemoveEmbeddedLabelBoundsBehavior';\nimport RemoveElementBehavior from './RemoveElementBehavior';\nimport RemoveParticipantBehavior from './RemoveParticipantBehavior';\nimport ReplaceConnectionBehavior from './ReplaceConnectionBehavior';\nimport ReplaceElementBehaviour from './ReplaceElementBehaviour';\nimport ResizeBehavior from './ResizeBehavior';\nimport ResizeLaneBehavior from './ResizeLaneBehavior';\nimport RootElementReferenceBehavior from './RootElementReferenceBehavior';\nimport SpaceToolBehavior from './SpaceToolBehavior';\nimport SubProcessPlaneBehavior from './SubProcessPlaneBehavior';\nimport SubProcessStartEventBehavior from './SubProcessStartEventBehavior';\nimport ToggleCollapseConnectionBehaviour from './ToggleCollapseConnectionBehaviour';\nimport ToggleElementCollapseBehaviour from './ToggleElementCollapseBehaviour';\nimport UnclaimIdBehavior from './UnclaimIdBehavior';\nimport UnsetDefaultFlowBehavior from './UnsetDefaultFlowBehavior';\nimport UpdateFlowNodeRefsBehavior from './UpdateFlowNodeRefsBehavior';\n\nexport default {\n  __init__: [\n    'adaptiveLabelPositioningBehavior',\n    'appendBehavior',\n    'associationBehavior',\n    'attachEventBehavior',\n    'boundaryEventBehavior',\n    'createBehavior',\n    'createDataObjectBehavior',\n    'createParticipantBehavior',\n    'dataInputAssociationBehavior',\n    'dataStoreBehavior',\n    'deleteLaneBehavior',\n    'detachEventBehavior',\n    'dropOnFlowBehavior',\n    'eventBasedGatewayBehavior',\n    'fixHoverBehavior',\n    'groupBehavior',\n    'importDockingFix',\n    'isHorizontalFix',\n    'labelBehavior',\n    'messageFlowBehavior',\n    'modelingFeedback',\n    'removeElementBehavior',\n    'removeEmbeddedLabelBoundsBehavior',\n    'removeParticipantBehavior',\n    'replaceConnectionBehavior',\n    'replaceElementBehaviour',\n    'resizeBehavior',\n    'resizeLaneBehavior',\n    'rootElementReferenceBehavior',\n    'spaceToolBehavior',\n    'subProcessPlaneBehavior',\n    'subProcessStartEventBehavior',\n    'toggleCollapseConnectionBehaviour',\n    'toggleElementCollapseBehaviour',\n    'unclaimIdBehavior',\n    'updateFlowNodeRefsBehavior',\n    'unsetDefaultFlowBehavior'\n  ],\n  adaptiveLabelPositioningBehavior: [ 'type', AdaptiveLabelPositioningBehavior ],\n  appendBehavior: [ 'type', AppendBehavior ],\n  associationBehavior: [ 'type', AssociationBehavior ],\n  attachEventBehavior: [ 'type', AttachEventBehavior ],\n  boundaryEventBehavior: [ 'type', BoundaryEventBehavior ],\n  createBehavior: [ 'type', CreateBehavior ],\n  createDataObjectBehavior: [ 'type', CreateDataObjectBehavior ],\n  createParticipantBehavior: [ 'type', CreateParticipantBehavior ],\n  dataInputAssociationBehavior: [ 'type', DataInputAssociationBehavior ],\n  dataStoreBehavior: [ 'type', DataStoreBehavior ],\n  deleteLaneBehavior: [ 'type', DeleteLaneBehavior ],\n  detachEventBehavior: [ 'type', DetachEventBehavior ],\n  dropOnFlowBehavior: [ 'type', DropOnFlowBehavior ],\n  eventBasedGatewayBehavior: [ 'type', EventBasedGatewayBehavior ],\n  fixHoverBehavior: [ 'type', FixHoverBehavior ],\n  groupBehavior: [ 'type', GroupBehavior ],\n  importDockingFix: [ 'type', ImportDockingFix ],\n  isHorizontalFix: [ 'type', IsHorizontalFix ],\n  labelBehavior: [ 'type', LabelBehavior ],\n  messageFlowBehavior: [ 'type', MessageFlowBehavior ],\n  modelingFeedback: [ 'type', ModelingFeedback ],\n  removeElementBehavior: [ 'type', RemoveElementBehavior ],\n  removeEmbeddedLabelBoundsBehavior: ['type', RemoveEmbeddedLabelBoundsBehavior ],\n  removeParticipantBehavior: [ 'type', RemoveParticipantBehavior ],\n  replaceConnectionBehavior: [ 'type', ReplaceConnectionBehavior ],\n  replaceElementBehaviour: [ 'type', ReplaceElementBehaviour ],\n  resizeBehavior: [ 'type', ResizeBehavior ],\n  resizeLaneBehavior: [ 'type', ResizeLaneBehavior ],\n  rootElementReferenceBehavior: [ 'type', RootElementReferenceBehavior ],\n  spaceToolBehavior: [ 'type', SpaceToolBehavior ],\n  subProcessPlaneBehavior: [ 'type', SubProcessPlaneBehavior ],\n  subProcessStartEventBehavior: [ 'type', SubProcessStartEventBehavior ],\n  toggleCollapseConnectionBehaviour: [ 'type', ToggleCollapseConnectionBehaviour ],\n  toggleElementCollapseBehaviour : [ 'type', ToggleElementCollapseBehaviour ],\n  unclaimIdBehavior: [ 'type', UnclaimIdBehavior ],\n  unsetDefaultFlowBehavior: [ 'type', UnsetDefaultFlowBehavior ],\n  updateFlowNodeRefsBehavior: [ 'type', UpdateFlowNodeRefsBehavior ]\n};\n","import {\n  add as collectionAdd\n} from 'diagram-js/lib/util/Collections';\n\nimport {\n  getBusinessObject\n} from '../../../../util/ModelUtil';\n\n/**\n * Creates a new bpmn:CategoryValue inside a new bpmn:Category\n *\n * @param {ModdleElement} definitions\n * @param {BpmnFactory} bpmnFactory\n *\n * @return {ModdleElement} categoryValue.\n */\nexport function createCategoryValue(definitions, bpmnFactory) {\n  var categoryValue = bpmnFactory.create('bpmn:CategoryValue'),\n      category = bpmnFactory.create('bpmn:Category', {\n        categoryValue: [ categoryValue ]\n      });\n\n  // add to correct place\n  collectionAdd(definitions.get('rootElements'), category);\n  getBusinessObject(category).$parent = definitions;\n  getBusinessObject(categoryValue).$parent = category;\n\n  return categoryValue;\n\n}","/**\n * Returns the length of a vector\n *\n * @param {Vector}\n * @return {Float}\n */\nexport function vectorLength(v) {\n  return Math.sqrt(Math.pow(v.x, 2) + Math.pow(v.y, 2));\n}\n\n\n/**\n * Calculates the angle between a line a the yAxis\n *\n * @param {Array}\n * @return {Float}\n */\nexport function getAngle(line) {\n\n  // return value is between 0, 180 and -180, -0\n  // @janstuemmel: maybe replace return a/b with b/a\n  return Math.atan((line[1].y - line[0].y) / (line[1].x - line[0].x));\n}\n\n\n/**\n * Rotates a vector by a given angle\n *\n * @param {Vector}\n * @param {Float} Angle in radians\n * @return {Vector}\n */\nexport function rotateVector(vector, angle) {\n  return (!angle) ? vector : {\n    x: Math.cos(angle) * vector.x - Math.sin(angle) * vector.y,\n    y: Math.sin(angle) * vector.x + Math.cos(angle) * vector.y\n  };\n}\n\n\n/**\n * Solves a 2D equation system\n * a + r*b = c, where a,b,c are 2D vectors\n *\n * @param {Vector}\n * @param {Vector}\n * @param {Vector}\n * @return {Float}\n */\nfunction solveLambaSystem(a, b, c) {\n\n  // the 2d system\n  var system = [\n    { n: a[0] - c[0], lambda: b[0] },\n    { n: a[1] - c[1], lambda: b[1] }\n  ];\n\n  // solve\n  var n = system[0].n * b[0] + system[1].n * b[1],\n      l = system[0].lambda * b[0] + system[1].lambda * b[1];\n\n  return -n/l;\n}\n\n\n/**\n * Position of perpendicular foot\n *\n * @param {Point}\n * @param [ {Point}, {Point} ] line defined through two points\n * @return {Point} the perpendicular foot position\n */\nexport function perpendicularFoot(point, line) {\n\n  var a = line[0], b = line[1];\n\n  // relative position of b from a\n  var bd = { x: b.x - a.x, y: b.y - a.y };\n\n  // solve equation system to the parametrized vectors param real value\n  var r = solveLambaSystem([ a.x, a.y ], [ bd.x, bd.y ], [ point.x, point.y ]);\n\n  return { x: a.x + r*bd.x, y: a.y + r*bd.y };\n}\n\n\n/**\n * Calculates the distance between a point and a line\n *\n * @param {Point}\n * @param [ {Point}, {Point} ] line defined through two points\n * @return {Float} distance\n */\nexport function getDistancePointLine(point, line) {\n\n  var pfPoint = perpendicularFoot(point, line);\n\n  // distance vector\n  var connectionVector = {\n    x: pfPoint.x - point.x,\n    y: pfPoint.y - point.y\n  };\n\n  return vectorLength(connectionVector);\n}\n\n\n/**\n * Calculates the distance between two points\n *\n * @param {Point}\n * @param {Point}\n * @return {Float} distance\n */\nexport function getDistancePointPoint(point1, point2) {\n\n  return vectorLength({\n    x: point1.x - point2.x,\n    y: point1.y - point2.y\n  });\n}","import {\n  getDistancePointPoint,\n  rotateVector,\n  getAngle\n} from './GeometricUtil';\n\nimport {\n  getAttachment\n} from './LineAttachmentUtil';\n\nimport {\n  roundPoint\n} from 'diagram-js/lib/layout/LayoutUtil';\n\n\nexport function findNewLabelLineStartIndex(oldWaypoints, newWaypoints, attachment, hints) {\n\n  var index = attachment.segmentIndex;\n\n  var offset = newWaypoints.length - oldWaypoints.length;\n\n  // segmentMove happened\n  if (hints.segmentMove) {\n\n    var oldSegmentStartIndex = hints.segmentMove.segmentStartIndex,\n        newSegmentStartIndex = hints.segmentMove.newSegmentStartIndex;\n\n    // if label was on moved segment return new segment index\n    if (index === oldSegmentStartIndex) {\n      return newSegmentStartIndex;\n    }\n\n    // label is after new segment index\n    if (index >= newSegmentStartIndex) {\n      return (index+offset < newSegmentStartIndex) ? newSegmentStartIndex : index+offset;\n    }\n\n    // if label is before new segment index\n    return index;\n  }\n\n  // bendpointMove happened\n  if (hints.bendpointMove) {\n\n    var insert = hints.bendpointMove.insert,\n        bendpointIndex = hints.bendpointMove.bendpointIndex,\n        newIndex;\n\n    // waypoints length didnt change\n    if (offset === 0) {\n      return index;\n    }\n\n    // label behind new/removed bendpoint\n    if (index >= bendpointIndex) {\n      newIndex = insert ? index + 1 : index - 1;\n    }\n\n    // label before new/removed bendpoint\n    if (index < bendpointIndex) {\n\n      newIndex = index;\n\n      // decide label should take right or left segment\n      if (insert && attachment.type !== 'bendpoint' && bendpointIndex-1 === index) {\n\n        var rel = relativePositionMidWaypoint(newWaypoints, bendpointIndex);\n\n        if (rel < attachment.relativeLocation) {\n          newIndex++;\n        }\n      }\n    }\n\n    return newIndex;\n  }\n\n  // start/end changed\n  if (offset === 0) {\n    return index;\n  }\n\n  if (hints.connectionStart) {\n    return (index === 0) ? 0 : null;\n  }\n\n  if (hints.connectionEnd) {\n    return (index === oldWaypoints.length - 2) ? newWaypoints.length - 2 : null;\n  }\n\n  // if nothing fits, return null\n  return null;\n}\n\n\n/**\n * Calculate the required adjustment (move delta) for the given label\n * after the connection waypoints got updated.\n *\n * @param {djs.model.Label} label\n * @param {Array<Point>} newWaypoints\n * @param {Array<Point>} oldWaypoints\n * @param {Object} hints\n *\n * @return {Point} delta\n */\nexport function getLabelAdjustment(label, newWaypoints, oldWaypoints, hints) {\n\n  var x = 0,\n      y = 0;\n\n  var labelPosition = getLabelMid(label);\n\n  // get closest attachment\n  var attachment = getAttachment(labelPosition, oldWaypoints),\n      oldLabelLineIndex = attachment.segmentIndex,\n      newLabelLineIndex = findNewLabelLineStartIndex(oldWaypoints, newWaypoints, attachment, hints);\n\n  if (newLabelLineIndex === null) {\n    return { x: x, y: y };\n  }\n\n  // should never happen\n  // TODO(@janstuemmel): throw an error here when connectionSegmentMove is refactored\n  if (newLabelLineIndex < 0 ||\n      newLabelLineIndex > newWaypoints.length - 2) {\n    return { x: x, y: y };\n  }\n\n  var oldLabelLine = getLine(oldWaypoints, oldLabelLineIndex),\n      newLabelLine = getLine(newWaypoints, newLabelLineIndex),\n      oldFoot = attachment.position;\n\n  var relativeFootPosition = getRelativeFootPosition(oldLabelLine, oldFoot),\n      angleDelta = getAngleDelta(oldLabelLine, newLabelLine);\n\n  // special rule if label on bendpoint\n  if (attachment.type === 'bendpoint') {\n\n    var offset = newWaypoints.length - oldWaypoints.length,\n        oldBendpointIndex = attachment.bendpointIndex,\n        oldBendpoint = oldWaypoints[oldBendpointIndex];\n\n    // bendpoint position hasn't changed, return same position\n    if (newWaypoints.indexOf(oldBendpoint) !== -1) {\n      return { x: x, y: y };\n    }\n\n    // new bendpoint and old bendpoint have same index, then just return the offset\n    if (offset === 0) {\n      var newBendpoint = newWaypoints[oldBendpointIndex];\n\n      return {\n        x: newBendpoint.x - attachment.position.x,\n        y: newBendpoint.y - attachment.position.y\n      };\n    }\n\n    // if bendpoints get removed\n    if (offset < 0 && oldBendpointIndex !== 0 && oldBendpointIndex < oldWaypoints.length - 1) {\n      relativeFootPosition = relativePositionMidWaypoint(oldWaypoints, oldBendpointIndex);\n    }\n  }\n\n  var newFoot = {\n    x: (newLabelLine[1].x - newLabelLine[0].x) * relativeFootPosition + newLabelLine[0].x,\n    y: (newLabelLine[1].y - newLabelLine[0].y) * relativeFootPosition + newLabelLine[0].y\n  };\n\n  // the rotated vector to label\n  var newLabelVector = rotateVector({\n    x: labelPosition.x - oldFoot.x,\n    y: labelPosition.y - oldFoot.y\n  }, angleDelta);\n\n  // the new relative position\n  x = newFoot.x + newLabelVector.x - labelPosition.x;\n  y = newFoot.y + newLabelVector.y - labelPosition.y;\n\n  return roundPoint({\n    x: x,\n    y: y\n  });\n}\n\n\n// HELPERS //////////////////////\n\nfunction relativePositionMidWaypoint(waypoints, idx) {\n\n  var distanceSegment1 = getDistancePointPoint(waypoints[idx-1], waypoints[idx]),\n      distanceSegment2 = getDistancePointPoint(waypoints[idx], waypoints[idx+1]);\n\n  var relativePosition = distanceSegment1 / (distanceSegment1 + distanceSegment2);\n\n  return relativePosition;\n}\n\nfunction getLabelMid(label) {\n  return {\n    x: label.x + label.width / 2,\n    y: label.y + label.height / 2\n  };\n}\n\nfunction getAngleDelta(l1, l2) {\n  var a1 = getAngle(l1),\n      a2 = getAngle(l2);\n  return a2 - a1;\n}\n\nfunction getLine(waypoints, idx) {\n  return [ waypoints[idx], waypoints[idx+1] ];\n}\n\nfunction getRelativeFootPosition(line, foot) {\n\n  var length = getDistancePointPoint(line[0], line[1]),\n      lengthToFoot = getDistancePointPoint(line[0], foot);\n\n  return length === 0 ? 0 : lengthToFoot / length;\n}\n","var sqrt = Math.sqrt,\n    min = Math.min,\n    max = Math.max,\n    abs = Math.abs;\n\n/**\n * Calculate the square (power to two) of a number.\n *\n * @param {number} n\n *\n * @return {number}\n */\nfunction sq(n) {\n  return Math.pow(n, 2);\n}\n\n/**\n * Get distance between two points.\n *\n * @param {Point} p1\n * @param {Point} p2\n *\n * @return {number}\n */\nfunction getDistance(p1, p2) {\n  return sqrt(sq(p1.x - p2.x) + sq(p1.y - p2.y));\n}\n\n/**\n * Return the attachment of the given point on the specified line.\n *\n * The attachment is either a bendpoint (attached to the given point)\n * or segment (attached to a location on a line segment) attachment:\n *\n * ```javascript\n * var pointAttachment = {\n *   type: 'bendpoint',\n *   bendpointIndex: 3,\n *   position: { x: 10, y: 10 } // the attach point on the line\n * };\n *\n * var segmentAttachment = {\n *   type: 'segment',\n *   segmentIndex: 2,\n *   relativeLocation: 0.31, // attach point location between 0 (at start) and 1 (at end)\n *   position: { x: 10, y: 10 } // the attach point on the line\n * };\n * ```\n *\n * @param {Point} point\n * @param {Array<Point>} line\n *\n * @return {Object} attachment\n */\nexport function getAttachment(point, line) {\n\n  var idx = 0,\n      segmentStart,\n      segmentEnd,\n      segmentStartDistance,\n      segmentEndDistance,\n      attachmentPosition,\n      minDistance,\n      intersections,\n      attachment,\n      attachmentDistance,\n      closestAttachmentDistance,\n      closestAttachment;\n\n  for (idx = 0; idx < line.length - 1; idx++) {\n\n    segmentStart = line[idx];\n    segmentEnd = line[idx + 1];\n\n    if (pointsEqual(segmentStart, segmentEnd)) {\n      intersections = [ segmentStart ];\n    } else {\n      segmentStartDistance = getDistance(point, segmentStart);\n      segmentEndDistance = getDistance(point, segmentEnd);\n\n      minDistance = min(segmentStartDistance, segmentEndDistance);\n\n      intersections = getCircleSegmentIntersections(segmentStart, segmentEnd, point, minDistance);\n    }\n\n    if (intersections.length < 1) {\n      throw new Error('expected between [1, 2] circle -> line intersections');\n    }\n\n    // one intersection -> bendpoint attachment\n    if (intersections.length === 1) {\n      attachment = {\n        type: 'bendpoint',\n        position: intersections[0],\n        segmentIndex: idx,\n        bendpointIndex: pointsEqual(segmentStart, intersections[0]) ? idx : idx + 1\n      };\n    }\n\n    // two intersections -> segment attachment\n    if (intersections.length === 2) {\n\n      attachmentPosition = mid(intersections[0], intersections[1]);\n\n      attachment = {\n        type: 'segment',\n        position: attachmentPosition,\n        segmentIndex: idx,\n        relativeLocation: getDistance(segmentStart, attachmentPosition) / getDistance(segmentStart, segmentEnd)\n      };\n    }\n\n    attachmentDistance = getDistance(attachment.position, point);\n\n    if (!closestAttachment || closestAttachmentDistance > attachmentDistance) {\n      closestAttachment = attachment;\n      closestAttachmentDistance = attachmentDistance;\n    }\n  }\n\n  return closestAttachment;\n}\n\n/**\n * Gets the intersection between a circle and a line segment.\n *\n * @param {Point} s1 segment start\n * @param {Point} s2 segment end\n * @param {Point} cc circle center\n * @param {number} cr circle radius\n *\n * @return {Array<Point>} intersections\n */\nfunction getCircleSegmentIntersections(s1, s2, cc, cr) {\n\n  var baX = s2.x - s1.x;\n  var baY = s2.y - s1.y;\n  var caX = cc.x - s1.x;\n  var caY = cc.y - s1.y;\n\n  var a = baX * baX + baY * baY;\n  var bBy2 = baX * caX + baY * caY;\n  var c = caX * caX + caY * caY - cr * cr;\n\n  var pBy2 = bBy2 / a;\n  var q = c / a;\n\n  var disc = pBy2 * pBy2 - q;\n\n  // check against negative value to work around\n  // negative, very close to zero results (-4e-15)\n  // being produced in some environments\n  if (disc < 0 && disc > -0.000001) {\n    disc = 0;\n  }\n\n  if (disc < 0) {\n    return [];\n  }\n\n  // if disc == 0 ... dealt with later\n  var tmpSqrt = sqrt(disc);\n  var abScalingFactor1 = -pBy2 + tmpSqrt;\n  var abScalingFactor2 = -pBy2 - tmpSqrt;\n\n  var i1 = {\n    x: s1.x - baX * abScalingFactor1,\n    y: s1.y - baY * abScalingFactor1\n  };\n\n  if (disc === 0) { // abScalingFactor1 == abScalingFactor2\n    return [ i1 ];\n  }\n\n  var i2 = {\n    x: s1.x - baX * abScalingFactor2,\n    y: s1.y - baY * abScalingFactor2\n  };\n\n  // return only points on line segment\n  return [ i1, i2 ].filter(function(p) {\n    return isPointInSegment(p, s1, s2);\n  });\n}\n\n\nfunction isPointInSegment(p, segmentStart, segmentEnd) {\n  return (\n    fenced(p.x, segmentStart.x, segmentEnd.x) &&\n    fenced(p.y, segmentStart.y, segmentEnd.y)\n  );\n}\n\nfunction fenced(n, rangeStart, rangeEnd) {\n\n  // use matching threshold to work around\n  // precision errors in intersection computation\n\n  return (\n    n >= min(rangeStart, rangeEnd) - EQUAL_THRESHOLD &&\n    n <= max(rangeStart, rangeEnd) + EQUAL_THRESHOLD\n  );\n}\n\n/**\n * Calculate mid of two points.\n *\n * @param {Point} p1\n * @param {Point} p2\n *\n * @return {Point}\n */\nfunction mid(p1, p2) {\n\n  return {\n    x: (p1.x + p2.x) / 2,\n    y: (p1.y + p2.y) / 2\n  };\n}\n\nvar EQUAL_THRESHOLD = 0.1;\n\nfunction pointsEqual(p1, p2) {\n\n  return (\n    abs(p1.x - p2.x) <= EQUAL_THRESHOLD &&\n    abs(p1.y - p2.y) <= EQUAL_THRESHOLD\n  );\n}\n","/**\n * Returns the intersection between two line segments a and b.\n *\n * @param {Point} l1s\n * @param {Point} l1e\n * @param {Point} l2s\n * @param {Point} l2e\n *\n * @return {Point}\n */\nexport default function lineIntersect(l1s, l1e, l2s, l2e) {\n\n  // if the lines intersect, the result contains the x and y of the\n  // intersection (treating the lines as infinite) and booleans for\n  // whether line segment 1 or line segment 2 contain the point\n  var denominator, a, b, c, numerator;\n\n  denominator = ((l2e.y - l2s.y) * (l1e.x - l1s.x)) - ((l2e.x - l2s.x) * (l1e.y - l1s.y));\n\n  if (denominator == 0) {\n    return null;\n  }\n\n  a = l1s.y - l2s.y;\n  b = l1s.x - l2s.x;\n  numerator = ((l2e.x - l2s.x) * a) - ((l2e.y - l2s.y) * b);\n\n  c = numerator / denominator;\n\n  // if we cast these lines infinitely in\n  // both directions, they intersect here\n  return {\n    x: Math.round(l1s.x + (c * (l1e.x - l1s.x))),\n    y: Math.round(l1s.y + (c * (l1e.y - l1s.y)))\n  };\n}","import {\n  filter\n} from 'min-dash';\n\nimport {\n  eachElement\n} from 'diagram-js/lib/util/Elements';\n\nimport {\n  getLanesRoot,\n  getChildLanes,\n  LANE_INDENTATION\n} from '../util/LaneUtil';\n\n\n/**\n * A handler that allows us to add a new lane\n * above or below an existing one.\n *\n * @param {Modeling} modeling\n * @param {SpaceTool} spaceTool\n */\nexport default function AddLaneHandler(modeling, spaceTool) {\n  this._modeling = modeling;\n  this._spaceTool = spaceTool;\n}\n\nAddLaneHandler.$inject = [\n  'modeling',\n  'spaceTool'\n];\n\n\nAddLaneHandler.prototype.preExecute = function(context) {\n\n  var spaceTool = this._spaceTool,\n      modeling = this._modeling;\n\n  var shape = context.shape,\n      location = context.location;\n\n  var lanesRoot = getLanesRoot(shape);\n\n  var isRoot = lanesRoot === shape,\n      laneParent = isRoot ? shape : shape.parent;\n\n  var existingChildLanes = getChildLanes(laneParent);\n\n  // (0) add a lane if we currently got none and are adding to root\n  if (!existingChildLanes.length) {\n    modeling.createShape({ type: 'bpmn:Lane' }, {\n      x: shape.x + LANE_INDENTATION,\n      y: shape.y,\n      width: shape.width - LANE_INDENTATION,\n      height: shape.height\n    }, laneParent);\n  }\n\n  // (1) collect affected elements to create necessary space\n  var allAffected = [];\n\n  eachElement(lanesRoot, function(element) {\n    allAffected.push(element);\n\n    // handle element labels in the diagram root\n    if (element.label) {\n      allAffected.push(element.label);\n    }\n\n    if (element === shape) {\n      return [];\n    }\n\n    return filter(element.children, function(c) {\n      return c !== shape;\n    });\n  });\n\n  var offset = location === 'top' ? -120 : 120,\n      lanePosition = location === 'top' ? shape.y : shape.y + shape.height,\n      spacePos = lanePosition + (location === 'top' ? 10 : -10),\n      direction = location === 'top' ? 'n' : 's';\n\n  var adjustments = spaceTool.calculateAdjustments(allAffected, 'y', offset, spacePos);\n\n  spaceTool.makeSpace(\n    adjustments.movingShapes,\n    adjustments.resizingShapes,\n    { x: 0, y: offset },\n    direction,\n    spacePos\n  );\n\n  // (2) create new lane at open space\n  context.newLane = modeling.createShape({ type: 'bpmn:Lane' }, {\n    x: shape.x + (isRoot ? LANE_INDENTATION : 0),\n    y: lanePosition - (location === 'top' ? 120 : 0),\n    width: shape.width - (isRoot ? LANE_INDENTATION : 0),\n    height: 120\n  }, laneParent);\n};\n","export default function IdClaimHandler(moddle) {\n  this._moddle = moddle;\n}\n\nIdClaimHandler.$inject = [ 'moddle' ];\n\n\nIdClaimHandler.prototype.execute = function(context) {\n  var ids = this._moddle.ids,\n      id = context.id,\n      element = context.element,\n      claiming = context.claiming;\n\n  if (claiming) {\n    ids.claim(id, element);\n  } else {\n    ids.unclaim(id);\n  }\n};\n\n/**\n * Command revert implementation.\n */\nIdClaimHandler.prototype.revert = function(context) {\n  var ids = this._moddle.ids,\n      id = context.id,\n      element = context.element,\n      claiming = context.claiming;\n\n  if (claiming) {\n    ids.unclaim(id);\n  } else {\n    ids.claim(id, element);\n  }\n};\n\n","import { is } from '../../../util/ModelUtil';\n\nimport {\n  getLanesRoot,\n  computeLanesResize\n} from '../util/LaneUtil';\n\nimport {\n  eachElement\n} from 'diagram-js/lib/util/Elements';\n\nimport {\n  asTRBL\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  substractTRBL\n} from 'diagram-js/lib/features/resize/ResizeUtil';\n\n\n/**\n * A handler that resizes a lane.\n *\n * @param {Modeling} modeling\n */\nexport default function ResizeLaneHandler(modeling, spaceTool) {\n  this._modeling = modeling;\n  this._spaceTool = spaceTool;\n}\n\nResizeLaneHandler.$inject = [\n  'modeling',\n  'spaceTool'\n];\n\n\nResizeLaneHandler.prototype.preExecute = function(context) {\n\n  var shape = context.shape,\n      newBounds = context.newBounds,\n      balanced = context.balanced;\n\n  if (balanced !== false) {\n    this.resizeBalanced(shape, newBounds);\n  } else {\n    this.resizeSpace(shape, newBounds);\n  }\n};\n\n\n/**\n * Resize balanced, adjusting next / previous lane sizes.\n *\n * @param {djs.model.Shape} shape\n * @param {Bounds} newBounds\n */\nResizeLaneHandler.prototype.resizeBalanced = function(shape, newBounds) {\n\n  var modeling = this._modeling;\n\n  var resizeNeeded = computeLanesResize(shape, newBounds);\n\n  // resize the lane\n  modeling.resizeShape(shape, newBounds);\n\n  // resize other lanes as needed\n  resizeNeeded.forEach(function(r) {\n    modeling.resizeShape(r.shape, r.newBounds);\n  });\n};\n\n\n/**\n * Resize, making actual space and moving below / above elements.\n *\n * @param {djs.model.Shape} shape\n * @param {Bounds} newBounds\n */\nResizeLaneHandler.prototype.resizeSpace = function(shape, newBounds) {\n  var spaceTool = this._spaceTool;\n\n  var shapeTrbl = asTRBL(shape),\n      newTrbl = asTRBL(newBounds);\n\n  var trblDiff = substractTRBL(newTrbl, shapeTrbl);\n\n  var lanesRoot = getLanesRoot(shape);\n\n  var allAffected = [],\n      allLanes = [];\n\n  eachElement(lanesRoot, function(element) {\n    allAffected.push(element);\n\n    if (is(element, 'bpmn:Lane') || is(element, 'bpmn:Participant')) {\n      allLanes.push(element);\n    }\n\n    return element.children;\n  });\n\n  var change,\n      spacePos,\n      direction,\n      offset,\n      adjustments;\n\n  if (trblDiff.bottom || trblDiff.top) {\n\n    change = trblDiff.bottom || trblDiff.top;\n    spacePos = shape.y + (trblDiff.bottom ? shape.height : 0) + (trblDiff.bottom ? -10 : 10);\n    direction = trblDiff.bottom ? 's' : 'n';\n\n    offset = trblDiff.top > 0 || trblDiff.bottom < 0 ? -change : change;\n\n    adjustments = spaceTool.calculateAdjustments(allAffected, 'y', offset, spacePos);\n\n    spaceTool.makeSpace(adjustments.movingShapes, adjustments.resizingShapes, { x: 0, y: change }, direction);\n  }\n\n\n  if (trblDiff.left || trblDiff.right) {\n\n    change = trblDiff.right || trblDiff.left;\n    spacePos = shape.x + (trblDiff.right ? shape.width : 0) + (trblDiff.right ? -10 : 100);\n    direction = trblDiff.right ? 'e' : 'w';\n\n    offset = trblDiff.left > 0 || trblDiff.right < 0 ? -change : change;\n\n    adjustments = spaceTool.calculateAdjustments(allLanes, 'x', offset, spacePos);\n\n    spaceTool.makeSpace(adjustments.movingShapes, adjustments.resizingShapes, { x: change, y: 0 }, direction);\n  }\n};","import {\r\n  assign,\r\n  forEach,\r\n  isString,\r\n  pick\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getDi\r\n} from '../../../util/ModelUtil';\r\n\r\nvar DEFAULT_COLORS = {\r\n  fill: undefined,\r\n  stroke: undefined\r\n};\r\n\r\n\r\nexport default function SetColorHandler(commandStack) {\r\n  this._commandStack = commandStack;\r\n\r\n  this._normalizeColor = function(color) {\r\n\r\n    // Remove color for falsy values.\r\n    if (!color) {\r\n      return undefined;\r\n    }\r\n\r\n    if (isString(color)) {\r\n      var hexColor = colorToHex(color);\r\n\r\n      if (hexColor) {\r\n        return hexColor;\r\n      }\r\n    }\r\n\r\n    throw new Error('invalid color value: ' + color);\r\n  };\r\n}\r\n\r\nSetColorHandler.$inject = [\r\n  'commandStack'\r\n];\r\n\r\n\r\nSetColorHandler.prototype.postExecute = function(context) {\r\n  var elements = context.elements,\r\n      colors = context.colors || DEFAULT_COLORS;\r\n\r\n  var self = this;\r\n\r\n  var di = {};\r\n\r\n  if ('fill' in colors) {\r\n    assign(di, {\r\n      'background-color': this._normalizeColor(colors.fill) });\r\n  }\r\n\r\n  if ('stroke' in colors) {\r\n    assign(di, {\r\n      'border-color': this._normalizeColor(colors.stroke) });\r\n  }\r\n\r\n  forEach(elements, function(element) {\r\n    var assignedDi = isConnection(element) ? pick(di, [ 'border-color' ]) : di;\r\n\r\n    // TODO @barmac: remove once we drop bpmn.io properties\r\n    ensureLegacySupport(assignedDi);\r\n\r\n    if (element.labelTarget) {\r\n\r\n      // set label colors as bpmndi:BPMNLabel#color\r\n      self._commandStack.execute('element.updateModdleProperties', {\r\n        element: element,\r\n        moddleElement: getDi(element).label,\r\n        properties: {\r\n          color: di['background-color']\r\n        }\r\n      });\r\n    } else {\r\n\r\n      // set colors bpmndi:BPMNEdge or bpmndi:BPMNShape\r\n      self._commandStack.execute('element.updateProperties', {\r\n        element: element,\r\n        properties: {\r\n          di: assignedDi\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n};\r\n\r\n/**\r\n * Convert color from rgb(a)/hsl to hex. Returns `null` for unknown color names and for colors\r\n * with alpha less than 1.0. This depends on `<canvas>` serialization of the `context.fillStyle`.\r\n * Cf. https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-fillstyle\r\n *\r\n * @example\r\n * ```js\r\n * var color = 'fuchsia';\r\n * console.log(colorToHex(color));\r\n * // \"#ff00ff\"\r\n * color = 'rgba(1,2,3,0.4)';\r\n * console.log(colorToHex(color));\r\n * // null\r\n * ```\r\n *\r\n * @param {string} color\r\n * @returns {string|null}\r\n */\r\nfunction colorToHex(color) {\r\n  var context = document.createElement('canvas').getContext('2d');\r\n\r\n  // (0) Start with transparent to account for browser default values.\r\n  context.fillStyle = 'transparent';\r\n\r\n  // (1) Assign color so that it's serialized.\r\n  context.fillStyle = color;\r\n\r\n  // (2) Return null for non-hex serialization result.\r\n  return /^#[0-9a-fA-F]{6}$/.test(context.fillStyle) ? context.fillStyle : null;\r\n}\r\n\r\nfunction isConnection(element) {\r\n  return !!element.waypoints;\r\n}\r\n\r\n/**\r\n * Add legacy properties if required.\r\n * @param {{ 'border-color': string?, 'background-color': string? }} di\r\n */\r\nfunction ensureLegacySupport(di) {\r\n  if ('border-color' in di) {\r\n    di.stroke = di['border-color'];\r\n  }\r\n\r\n  if ('background-color' in di) {\r\n    di.fill = di['background-color'];\r\n  }\r\n}\r\n","import {\n  getChildLanes,\n  LANE_INDENTATION\n} from '../util/LaneUtil';\n\n\n/**\n * A handler that splits a lane into a number of sub-lanes,\n * creating new sub lanes, if necessary.\n *\n * @param {Modeling} modeling\n */\nexport default function SplitLaneHandler(modeling, translate) {\n  this._modeling = modeling;\n  this._translate = translate;\n}\n\nSplitLaneHandler.$inject = [\n  'modeling',\n  'translate'\n];\n\n\nSplitLaneHandler.prototype.preExecute = function(context) {\n\n  var modeling = this._modeling,\n      translate = this._translate;\n\n  var shape = context.shape,\n      newLanesCount = context.count;\n\n  var childLanes = getChildLanes(shape),\n      existingLanesCount = childLanes.length;\n\n  if (existingLanesCount > newLanesCount) {\n    throw new Error(translate('more than {count} child lanes', { count: newLanesCount }));\n  }\n\n  var newLanesHeight = Math.round(shape.height / newLanesCount);\n\n  // Iterate from top to bottom in child lane order,\n  // resizing existing lanes and creating new ones\n  // so that they split the parent proportionally.\n  //\n  // Due to rounding related errors, the bottom lane\n  // needs to take up all the remaining space.\n  var laneY,\n      laneHeight,\n      laneBounds,\n      newLaneAttrs,\n      idx;\n\n  for (idx = 0; idx < newLanesCount; idx++) {\n\n    laneY = shape.y + idx * newLanesHeight;\n\n    // if bottom lane\n    if (idx === newLanesCount - 1) {\n      laneHeight = shape.height - (newLanesHeight * idx);\n    } else {\n      laneHeight = newLanesHeight;\n    }\n\n    laneBounds = {\n      x: shape.x + LANE_INDENTATION,\n      y: laneY,\n      width: shape.width - LANE_INDENTATION,\n      height: laneHeight\n    };\n\n    if (idx < existingLanesCount) {\n\n      // resize existing lane\n      modeling.resizeShape(childLanes[idx], laneBounds);\n    } else {\n\n      // create a new lane at position\n      newLaneAttrs = {\n        type: 'bpmn:Lane'\n      };\n\n      modeling.createShape(newLaneAttrs, laneBounds, shape);\n    }\n  }\n};\n","import {\n  add as collectionAdd,\n  remove as collectionRemove\n} from 'diagram-js/lib/util/Collections';\n\nimport { getDi } from '../../../util/ModelUtil';\n\n\nexport default function UpdateCanvasRootHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\n\nUpdateCanvasRootHandler.$inject = [\n  'canvas',\n  'modeling'\n];\n\n\nUpdateCanvasRootHandler.prototype.execute = function(context) {\n\n  var canvas = this._canvas;\n\n  var newRoot = context.newRoot,\n      newRootBusinessObject = newRoot.businessObject,\n      oldRoot = canvas.getRootElement(),\n      oldRootBusinessObject = oldRoot.businessObject,\n      bpmnDefinitions = oldRootBusinessObject.$parent,\n      diPlane = getDi(oldRoot);\n\n  // (1) replace process old <> new root\n  canvas.setRootElement(newRoot);\n  canvas.removeRootElement(oldRoot);\n\n  // (2) update root elements\n  collectionAdd(bpmnDefinitions.rootElements, newRootBusinessObject);\n  newRootBusinessObject.$parent = bpmnDefinitions;\n\n  collectionRemove(bpmnDefinitions.rootElements, oldRootBusinessObject);\n  oldRootBusinessObject.$parent = null;\n\n  // (3) wire di\n  oldRoot.di = null;\n\n  diPlane.bpmnElement = newRootBusinessObject;\n  newRoot.di = diPlane;\n\n  context.oldRoot = oldRoot;\n\n  // TODO(nikku): return changed elements?\n  // return [ newRoot, oldRoot ];\n};\n\n\nUpdateCanvasRootHandler.prototype.revert = function(context) {\n\n  var canvas = this._canvas;\n\n  var newRoot = context.newRoot,\n      newRootBusinessObject = newRoot.businessObject,\n      oldRoot = context.oldRoot,\n      oldRootBusinessObject = oldRoot.businessObject,\n      bpmnDefinitions = newRootBusinessObject.$parent,\n      diPlane = getDi(newRoot);\n\n  // (1) replace process old <> new root\n  canvas.setRootElement(oldRoot);\n  canvas.removeRootElement(newRoot);\n\n  // (2) update root elements\n  collectionRemove(bpmnDefinitions.rootElements, newRootBusinessObject);\n  newRootBusinessObject.$parent = null;\n\n  collectionAdd(bpmnDefinitions.rootElements, oldRootBusinessObject);\n  oldRootBusinessObject.$parent = bpmnDefinitions;\n\n  // (3) wire di\n  newRoot.di = null;\n\n  diPlane.bpmnElement = oldRootBusinessObject;\n  oldRoot.di = diPlane;\n\n  // TODO(nikku): return changed elements?\n  // return [ newRoot, oldRoot ];\n};","import {\n  collectLanes,\n  getLanesRoot\n} from '../util/LaneUtil';\n\nimport {\n  is\n} from '../../../util/ModelUtil';\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from 'diagram-js/lib/util/Collections';\n\nimport {\n  asTRBL\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nvar FLOW_NODE_REFS_ATTR = 'flowNodeRef',\n    LANES_ATTR = 'lanes';\n\n\n/**\n * A handler that updates lane refs on changed elements\n */\nexport default function UpdateFlowNodeRefsHandler(elementRegistry) {\n  this._elementRegistry = elementRegistry;\n}\n\nUpdateFlowNodeRefsHandler.$inject = [\n  'elementRegistry'\n];\n\n\nUpdateFlowNodeRefsHandler.prototype.computeUpdates = function(flowNodeShapes, laneShapes) {\n\n  var handledNodes = [];\n\n  var updates = [];\n\n  var participantCache = {};\n\n  var allFlowNodeShapes = [];\n\n  function isInLaneShape(element, laneShape) {\n\n    var laneTrbl = asTRBL(laneShape);\n\n    var elementMid = {\n      x: element.x + element.width / 2,\n      y: element.y + element.height / 2\n    };\n\n    return elementMid.x > laneTrbl.left &&\n           elementMid.x < laneTrbl.right &&\n           elementMid.y > laneTrbl.top &&\n           elementMid.y < laneTrbl.bottom;\n  }\n\n  function addFlowNodeShape(flowNodeShape) {\n    if (handledNodes.indexOf(flowNodeShape) === -1) {\n      allFlowNodeShapes.push(flowNodeShape);\n      handledNodes.push(flowNodeShape);\n    }\n  }\n\n  function getAllLaneShapes(flowNodeShape) {\n\n    var root = getLanesRoot(flowNodeShape);\n\n    if (!participantCache[root.id]) {\n      participantCache[root.id] = collectLanes(root);\n    }\n\n    return participantCache[root.id];\n  }\n\n  function getNewLanes(flowNodeShape) {\n    if (!flowNodeShape.parent) {\n      return [];\n    }\n\n    var allLaneShapes = getAllLaneShapes(flowNodeShape);\n\n    return allLaneShapes.filter(function(l) {\n      return isInLaneShape(flowNodeShape, l);\n    }).map(function(shape) {\n      return shape.businessObject;\n    });\n  }\n\n  laneShapes.forEach(function(laneShape) {\n    var root = getLanesRoot(laneShape);\n\n    if (!root || handledNodes.indexOf(root) !== -1) {\n      return;\n    }\n\n    var children = root.children.filter(function(c) {\n      return is(c, 'bpmn:FlowNode');\n    });\n\n    children.forEach(addFlowNodeShape);\n\n    handledNodes.push(root);\n  });\n\n  flowNodeShapes.forEach(addFlowNodeShape);\n\n\n  allFlowNodeShapes.forEach(function(flowNodeShape) {\n\n    var flowNode = flowNodeShape.businessObject;\n\n    var lanes = flowNode.get(LANES_ATTR),\n        remove = lanes.slice(),\n        add = getNewLanes(flowNodeShape);\n\n    updates.push({ flowNode: flowNode, remove: remove, add: add });\n  });\n\n  laneShapes.forEach(function(laneShape) {\n\n    var lane = laneShape.businessObject;\n\n    // lane got removed XX-)\n    if (!laneShape.parent) {\n      lane.get(FLOW_NODE_REFS_ATTR).forEach(function(flowNode) {\n        updates.push({ flowNode: flowNode, remove: [ lane ], add: [] });\n      });\n    }\n  });\n\n  return updates;\n};\n\nUpdateFlowNodeRefsHandler.prototype.execute = function(context) {\n\n  var updates = context.updates;\n\n  if (!updates) {\n    updates = context.updates = this.computeUpdates(context.flowNodeShapes, context.laneShapes);\n  }\n\n\n  updates.forEach(function(update) {\n\n    var flowNode = update.flowNode,\n        lanes = flowNode.get(LANES_ATTR);\n\n    // unwire old\n    update.remove.forEach(function(oldLane) {\n      collectionRemove(lanes, oldLane);\n      collectionRemove(oldLane.get(FLOW_NODE_REFS_ATTR), flowNode);\n    });\n\n    // wire new\n    update.add.forEach(function(newLane) {\n      collectionAdd(lanes, newLane);\n      collectionAdd(newLane.get(FLOW_NODE_REFS_ATTR), flowNode);\n    });\n  });\n\n  // TODO(nikku): return changed elements\n  // return [ ... ];\n};\n\n\nUpdateFlowNodeRefsHandler.prototype.revert = function(context) {\n\n  var updates = context.updates;\n\n  updates.forEach(function(update) {\n\n    var flowNode = update.flowNode,\n        lanes = flowNode.get(LANES_ATTR);\n\n    // unwire new\n    update.add.forEach(function(newLane) {\n      collectionRemove(lanes, newLane);\n      collectionRemove(newLane.get(FLOW_NODE_REFS_ATTR), flowNode);\n    });\n\n    // wire old\n    update.remove.forEach(function(oldLane) {\n      collectionAdd(lanes, oldLane);\n      collectionAdd(oldLane.get(FLOW_NODE_REFS_ATTR), flowNode);\n    });\n  });\n\n  // TODO(nikku): return changed elements\n  // return [ ... ];\n};\n","import {\n  reduce,\n  keys,\n  forEach\n} from 'min-dash';\n\nimport {\n  is,\n  getBusinessObject\n} from '../../../util/ModelUtil';\n\nexport default function UpdateModdlePropertiesHandler(elementRegistry) {\n  this._elementRegistry = elementRegistry;\n}\n\nUpdateModdlePropertiesHandler.$inject = ['elementRegistry'];\n\nUpdateModdlePropertiesHandler.prototype.execute = function(context) {\n\n  var element = context.element,\n      moddleElement = context.moddleElement,\n      properties = context.properties;\n\n  if (!moddleElement) {\n    throw new Error('<moddleElement> required');\n  }\n\n  var changed = context.changed || this.getVisualReferences(moddleElement).concat(element);\n  var oldProperties = context.oldProperties || getModdleProperties(moddleElement, keys(properties));\n\n  setModdleProperties(moddleElement, properties);\n\n  context.oldProperties = oldProperties;\n  context.changed = changed;\n\n  return changed;\n};\n\nUpdateModdlePropertiesHandler.prototype.revert = function(context) {\n  var oldProperties = context.oldProperties,\n      moddleElement = context.moddleElement,\n      changed = context.changed;\n\n  setModdleProperties(moddleElement, oldProperties);\n\n  return changed;\n};\n\n/**\n * Return visual references of given moddle element within the diagram.\n *\n * @param {ModdleElement} moddleElement\n *\n * @return {Array<djs.model.Element>}\n */\nUpdateModdlePropertiesHandler.prototype.getVisualReferences = function(moddleElement) {\n\n  var elementRegistry = this._elementRegistry;\n\n  if (is(moddleElement, 'bpmn:DataObject')) {\n    return getAllDataObjectReferences(moddleElement, elementRegistry);\n  }\n\n  return [];\n};\n\n\n// helpers /////////////////\n\nfunction getModdleProperties(moddleElement, propertyNames) {\n  return reduce(propertyNames, function(result, key) {\n    result[key] = moddleElement.get(key);\n    return result;\n  }, {});\n}\n\nfunction setModdleProperties(moddleElement, properties) {\n  forEach(properties, function(value, key) {\n    moddleElement.set(key, value);\n  });\n}\n\nfunction getAllDataObjectReferences(dataObject, elementRegistry) {\n  return elementRegistry.filter(function(element) {\n    return (\n      is(element, 'bpmn:DataObjectReference') &&\n          getBusinessObject(element).dataObjectRef === dataObject\n    );\n  });\n}\n","import {\n  reduce,\n  keys,\n  forEach,\n  assign\n} from 'min-dash';\n\nimport {\n  getBusinessObject,\n  getDi\n} from '../../../util/ModelUtil';\n\nvar DEFAULT_FLOW = 'default',\n    ID = 'id',\n    DI = 'di';\n\nvar NULL_DIMENSIONS = {\n  width: 0,\n  height: 0\n};\n\n/**\n * A handler that implements a BPMN 2.0 property update.\n *\n * This should be used to set simple properties on elements with\n * an underlying BPMN business object.\n *\n * Use respective diagram-js provided handlers if you would\n * like to perform automated modeling.\n */\nexport default function UpdatePropertiesHandler(\n    elementRegistry, moddle, translate,\n    modeling, textRenderer) {\n\n  this._elementRegistry = elementRegistry;\n  this._moddle = moddle;\n  this._translate = translate;\n  this._modeling = modeling;\n  this._textRenderer = textRenderer;\n}\n\nUpdatePropertiesHandler.$inject = [\n  'elementRegistry',\n  'moddle',\n  'translate',\n  'modeling',\n  'textRenderer'\n];\n\n\n// api //////////////////////\n\n/**\n * Updates a BPMN element with a list of new properties\n *\n * @param {Object} context\n * @param {djs.model.Base} context.element the element to update\n * @param {Object} context.properties a list of properties to set on the element's\n *                                    businessObject (the BPMN model element)\n *\n * @return {Array<djs.model.Base>} the updated element\n */\nUpdatePropertiesHandler.prototype.execute = function(context) {\n\n  var element = context.element,\n      changed = [ element ],\n      translate = this._translate;\n\n  if (!element) {\n    throw new Error(translate('element required'));\n  }\n\n  var elementRegistry = this._elementRegistry,\n      ids = this._moddle.ids;\n\n  var businessObject = element.businessObject,\n      properties = unwrapBusinessObjects(context.properties),\n      oldProperties = context.oldProperties || getProperties(element, properties);\n\n  if (isIdChange(properties, businessObject)) {\n    ids.unclaim(businessObject[ID]);\n\n    elementRegistry.updateId(element, properties[ID]);\n\n    ids.claim(properties[ID], businessObject);\n  }\n\n  // correctly indicate visual changes on default flow updates\n  if (DEFAULT_FLOW in properties) {\n\n    if (properties[DEFAULT_FLOW]) {\n      changed.push(elementRegistry.get(properties[DEFAULT_FLOW].id));\n    }\n\n    if (businessObject[DEFAULT_FLOW]) {\n      changed.push(elementRegistry.get(businessObject[DEFAULT_FLOW].id));\n    }\n  }\n\n  // update properties\n  setProperties(element, properties);\n\n  // store old values\n  context.oldProperties = oldProperties;\n  context.changed = changed;\n\n  // indicate changed on objects affected by the update\n  return changed;\n};\n\n\nUpdatePropertiesHandler.prototype.postExecute = function(context) {\n  var element = context.element,\n      label = element.label;\n\n  var text = label && getBusinessObject(label).name;\n\n  if (!text) {\n    return;\n  }\n\n  // get layouted text bounds and resize external\n  // external label accordingly\n  var newLabelBounds = this._textRenderer.getExternalLabelBounds(label, text);\n\n  this._modeling.resizeShape(label, newLabelBounds, NULL_DIMENSIONS);\n};\n\n/**\n * Reverts the update on a BPMN elements properties.\n *\n * @param  {Object} context\n *\n * @return {djs.model.Base} the updated element\n */\nUpdatePropertiesHandler.prototype.revert = function(context) {\n\n  var element = context.element,\n      properties = context.properties,\n      oldProperties = context.oldProperties,\n      businessObject = element.businessObject,\n      elementRegistry = this._elementRegistry,\n      ids = this._moddle.ids;\n\n  // update properties\n  setProperties(element, oldProperties);\n\n  if (isIdChange(properties, businessObject)) {\n    ids.unclaim(properties[ID]);\n\n    elementRegistry.updateId(element, oldProperties[ID]);\n\n    ids.claim(oldProperties[ID], businessObject);\n  }\n\n  return context.changed;\n};\n\n\nfunction isIdChange(properties, businessObject) {\n  return ID in properties && properties[ID] !== businessObject[ID];\n}\n\n\nfunction getProperties(element, properties) {\n  var propertyNames = keys(properties),\n      businessObject = element.businessObject,\n      di = getDi(element);\n\n  return reduce(propertyNames, function(result, key) {\n\n    // handle DI separately\n    if (key !== DI) {\n      result[key] = businessObject.get(key);\n\n    } else {\n      result[key] = getDiProperties(di, keys(properties.di));\n    }\n\n    return result;\n  }, {});\n}\n\n\nfunction getDiProperties(di, propertyNames) {\n  return reduce(propertyNames, function(result, key) {\n    result[key] = di && di.get(key);\n\n    return result;\n  }, {});\n}\n\n\nfunction setProperties(element, properties) {\n  var businessObject = element.businessObject,\n      di = getDi(element);\n\n  forEach(properties, function(value, key) {\n\n    if (key !== DI) {\n      businessObject.set(key, value);\n    } else {\n\n      // only update, if di exists\n      if (di) {\n        setDiProperties(di, value);\n      }\n    }\n  });\n}\n\n\nfunction setDiProperties(di, properties) {\n  forEach(properties, function(value, key) {\n    di.set(key, value);\n  });\n}\n\n\nvar referencePropertyNames = [ 'default' ];\n\n/**\n * Make sure we unwrap the actual business object\n * behind diagram element that may have been\n * passed as arguments.\n *\n * @param  {Object} properties\n *\n * @return {Object} unwrappedProps\n */\nfunction unwrapBusinessObjects(properties) {\n\n  var unwrappedProps = assign({}, properties);\n\n  referencePropertyNames.forEach(function(name) {\n    if (name in properties) {\n      unwrappedProps[name] = getBusinessObject(unwrappedProps[name]);\n    }\n  });\n\n  return unwrappedProps;\n}","export default function UpdateSemanticParentHandler(bpmnUpdater) {\r\n  this._bpmnUpdater = bpmnUpdater;\r\n}\r\n\r\nUpdateSemanticParentHandler.$inject = [ 'bpmnUpdater' ];\r\n\r\n\r\nUpdateSemanticParentHandler.prototype.execute = function(context) {\r\n  var dataStoreBo = context.dataStoreBo,\r\n      dataStoreDi = context.dataStoreDi,\r\n      newSemanticParent = context.newSemanticParent,\r\n      newDiParent = context.newDiParent;\r\n\r\n  context.oldSemanticParent = dataStoreBo.$parent;\r\n  context.oldDiParent = dataStoreDi.$parent;\r\n\r\n  // update semantic parent\r\n  this._bpmnUpdater.updateSemanticParent(dataStoreBo, newSemanticParent);\r\n\r\n  // update DI parent\r\n  this._bpmnUpdater.updateDiParent(dataStoreDi, newDiParent);\r\n};\r\n\r\nUpdateSemanticParentHandler.prototype.revert = function(context) {\r\n  var dataStoreBo = context.dataStoreBo,\r\n      dataStoreDi = context.dataStoreDi,\r\n      oldSemanticParent = context.oldSemanticParent,\r\n      oldDiParent = context.oldDiParent;\r\n\r\n  // update semantic parent\r\n  this._bpmnUpdater.updateSemanticParent(dataStoreBo, oldSemanticParent);\r\n\r\n  // update DI parent\r\n  this._bpmnUpdater.updateDiParent(dataStoreDi, oldDiParent);\r\n};\r\n\r\n","import BehaviorModule from './behavior';\nimport RulesModule from '../rules';\nimport DiOrderingModule from '../di-ordering';\nimport OrderingModule from '../ordering';\nimport ReplaceModule from '../replace';\n\nimport CommandModule from 'diagram-js/lib/command';\nimport TooltipsModule from 'diagram-js/lib/features/tooltips';\nimport LabelSupportModule from 'diagram-js/lib/features/label-support';\nimport AttachSupportModule from 'diagram-js/lib/features/attach-support';\nimport SelectionModule from 'diagram-js/lib/features/selection';\nimport ChangeSupportModule from 'diagram-js/lib/features/change-support';\nimport SpaceToolModule from 'diagram-js/lib/features/space-tool';\n\nimport BpmnFactory from './BpmnFactory';\nimport BpmnUpdater from './BpmnUpdater';\nimport ElementFactory from './ElementFactory';\nimport Modeling from './Modeling';\nimport BpmnLayouter from './BpmnLayouter';\nimport CroppingConnectionDocking from 'diagram-js/lib/layout/CroppingConnectionDocking';\n\n\nexport default {\n  __init__: [\n    'modeling',\n    'bpmnUpdater'\n  ],\n  __depends__: [\n    BehaviorModule,\n    RulesModule,\n    DiOrderingModule,\n    OrderingModule,\n    ReplaceModule,\n    CommandModule,\n    TooltipsModule,\n    LabelSupportModule,\n    AttachSupportModule,\n    SelectionModule,\n    ChangeSupportModule,\n    SpaceToolModule\n  ],\n  bpmnFactory: [ 'type', BpmnFactory ],\n  bpmnUpdater: [ 'type', BpmnUpdater ],\n  elementFactory: [ 'type', ElementFactory ],\n  modeling: [ 'type', Modeling ],\n  layouter: [ 'type', BpmnLayouter ],\n  connectionDocking: [ 'type', CroppingConnectionDocking ]\n};","import { is } from '../../../util/ModelUtil';\n\nimport {\n  getParent\n} from './ModelingUtil';\n\nimport {\n  asTRBL\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  substractTRBL,\n  resizeTRBL\n} from 'diagram-js/lib/features/resize/ResizeUtil';\n\nvar abs = Math.abs;\n\n\nfunction getTRBLResize(oldBounds, newBounds) {\n  return substractTRBL(asTRBL(newBounds), asTRBL(oldBounds));\n}\n\n\nvar LANE_PARENTS = [\n  'bpmn:Participant',\n  'bpmn:Process',\n  'bpmn:SubProcess'\n];\n\nexport var LANE_INDENTATION = 30;\n\n\n/**\n * Collect all lane shapes in the given paren\n *\n * @param  {djs.model.Shape} shape\n * @param  {Array<djs.model.Base>} [collectedShapes]\n *\n * @return {Array<djs.model.Base>}\n */\nexport function collectLanes(shape, collectedShapes) {\n\n  collectedShapes = collectedShapes || [];\n\n  shape.children.filter(function(s) {\n    if (is(s, 'bpmn:Lane')) {\n      collectLanes(s, collectedShapes);\n\n      collectedShapes.push(s);\n    }\n  });\n\n  return collectedShapes;\n}\n\n\n/**\n * Return the lane children of the given element.\n *\n * @param {djs.model.Shape} shape\n *\n * @return {Array<djs.model.Shape>}\n */\nexport function getChildLanes(shape) {\n  return shape.children.filter(function(c) {\n    return is(c, 'bpmn:Lane');\n  });\n}\n\n\n/**\n * Return the root element containing the given lane shape\n *\n * @param {djs.model.Shape} shape\n *\n * @return {djs.model.Shape}\n */\nexport function getLanesRoot(shape) {\n  return getParent(shape, LANE_PARENTS) || shape;\n}\n\n\n/**\n * Compute the required resize operations for lanes\n * adjacent to the given shape, assuming it will be\n * resized to the given new bounds.\n *\n * @param {djs.model.Shape} shape\n * @param {Bounds} newBounds\n *\n * @return {Array<Object>}\n */\nexport function computeLanesResize(shape, newBounds) {\n\n  var rootElement = getLanesRoot(shape);\n\n  var initialShapes = is(rootElement, 'bpmn:Process') ? [] : [ rootElement ];\n\n  var allLanes = collectLanes(rootElement, initialShapes),\n      shapeTrbl = asTRBL(shape),\n      shapeNewTrbl = asTRBL(newBounds),\n      trblResize = getTRBLResize(shape, newBounds),\n      resizeNeeded = [];\n\n  allLanes.forEach(function(other) {\n\n    if (other === shape) {\n      return;\n    }\n\n    var topResize = 0,\n        rightResize = trblResize.right,\n        bottomResize = 0,\n        leftResize = trblResize.left;\n\n    var otherTrbl = asTRBL(other);\n\n    if (trblResize.top) {\n      if (abs(otherTrbl.bottom - shapeTrbl.top) < 10) {\n        bottomResize = shapeNewTrbl.top - otherTrbl.bottom;\n      }\n\n      if (abs(otherTrbl.top - shapeTrbl.top) < 5) {\n        topResize = shapeNewTrbl.top - otherTrbl.top;\n      }\n    }\n\n    if (trblResize.bottom) {\n      if (abs(otherTrbl.top - shapeTrbl.bottom) < 10) {\n        topResize = shapeNewTrbl.bottom - otherTrbl.top;\n      }\n\n      if (abs(otherTrbl.bottom - shapeTrbl.bottom) < 5) {\n        bottomResize = shapeNewTrbl.bottom - otherTrbl.bottom;\n      }\n    }\n\n    if (topResize || rightResize || bottomResize || leftResize) {\n\n      resizeNeeded.push({\n        shape: other,\n        newBounds: resizeTRBL(other, {\n          top: topResize,\n          right: rightResize,\n          bottom: bottomResize,\n          left: leftResize\n        })\n      });\n    }\n\n  });\n\n  return resizeNeeded;\n}","export { is, isAny } from '../../../util/ModelUtil';\n\nimport { isAny } from '../../../util/ModelUtil';\n\n/**\n * Return the parent of the element with any of the given types.\n *\n * @param {djs.model.Base} element\n * @param {string|Array<string>} anyType\n *\n * @return {djs.model.Base}\n */\nexport function getParent(element, anyType) {\n\n  if (typeof anyType === 'string') {\n    anyType = [ anyType ];\n  }\n\n  while ((element = element.parent)) {\n    if (isAny(element, anyType)) {\n      return element;\n    }\n  }\n\n  return null;\n}","import inherits from 'inherits';\n\nimport OrderingProvider from 'diagram-js/lib/features/ordering/OrderingProvider';\n\nimport {\n  isAny\n} from '../modeling/util/ModelingUtil';\n\nimport {\n  findIndex,\n  find\n} from 'min-dash';\n\n\n/**\n * a simple ordering provider that makes sure:\n *\n * (0) labels and groups are rendered always on top\n * (1) elements are ordered by a {level} property\n */\nexport default function BpmnOrderingProvider(eventBus, canvas, translate) {\n\n  OrderingProvider.call(this, eventBus);\n\n  var orders = [\n    { type: 'bpmn:SubProcess', order: { level: 6 } },\n    {\n      type: 'bpmn:SequenceFlow',\n      order: {\n        level: 3,\n        containers: [\n          'bpmn:Participant',\n          'bpmn:FlowElementsContainer'\n        ]\n      }\n    },\n\n    // handle DataAssociation(s) like message flows and render them always on top\n    {\n      type: 'bpmn:DataAssociation',\n      order: {\n        level: 9,\n        containers: [\n          'bpmn:Collaboration',\n          'bpmn:FlowElementsContainer'\n        ]\n      }\n    },\n    {\n      type: 'bpmn:MessageFlow', order: {\n        level: 9,\n        containers: [ 'bpmn:Collaboration' ]\n      }\n    },\n    {\n      type: 'bpmn:Association',\n      order: {\n        level: 6,\n        containers: [\n          'bpmn:Participant',\n          'bpmn:FlowElementsContainer',\n          'bpmn:Collaboration'\n        ]\n      }\n    },\n    { type: 'bpmn:BoundaryEvent', order: { level: 8 } },\n    {\n      type: 'bpmn:Group',\n      order: {\n        level: 10,\n        containers: [\n          'bpmn:Collaboration',\n          'bpmn:FlowElementsContainer'\n        ]\n      }\n    },\n    { type: 'bpmn:FlowElement', order: { level: 5 } },\n    { type: 'bpmn:Participant', order: { level: -2 } },\n    { type: 'bpmn:Lane', order: { level: -1 } }\n  ];\n\n  function computeOrder(element) {\n    if (element.labelTarget) {\n      return { level: 10 };\n    }\n\n    var entry = find(orders, function(o) {\n      return isAny(element, [ o.type ]);\n    });\n\n    return entry && entry.order || { level: 1 };\n  }\n\n  function getOrder(element) {\n\n    var order = element.order;\n\n    if (!order) {\n      element.order = order = computeOrder(element);\n    }\n\n    if (!order) {\n      throw new Error('no order for <' + element.id + '>');\n    }\n\n    return order;\n  }\n\n  function findActualParent(element, newParent, containers) {\n\n    var actualParent = newParent;\n\n    while (actualParent) {\n\n      if (isAny(actualParent, containers)) {\n        break;\n      }\n\n      actualParent = actualParent.parent;\n    }\n\n    if (!actualParent) {\n      throw new Error('no parent for <' + element.id + '> in <' + (newParent && newParent.id) + '>');\n    }\n\n    return actualParent;\n  }\n\n  this.getOrdering = function(element, newParent) {\n\n    // render labels always on top\n    if (element.labelTarget) {\n      return {\n        parent: canvas.findRoot(element.labelTarget) || canvas.getRootElement(),\n        index: -1\n      };\n    }\n\n    var elementOrder = getOrder(element);\n\n    if (elementOrder.containers) {\n      newParent = findActualParent(element, newParent, elementOrder.containers);\n    }\n\n    var currentIndex = newParent.children.indexOf(element);\n\n    var insertIndex = findIndex(newParent.children, function(child) {\n\n      // do not compare with labels, they are created\n      // in the wrong order (right after elements) during import and\n      // mess up the positioning.\n      if (!element.labelTarget && child.labelTarget) {\n        return false;\n      }\n\n      return elementOrder.level < getOrder(child).level;\n    });\n\n\n    // if the element is already in the child list at\n    // a smaller index, we need to adjust the insert index.\n    // this takes into account that the element is being removed\n    // before being re-inserted\n    if (insertIndex !== -1) {\n      if (currentIndex !== -1 && currentIndex < insertIndex) {\n        insertIndex -= 1;\n      }\n    }\n\n    return {\n      index: insertIndex,\n      parent: newParent\n    };\n  };\n}\n\nBpmnOrderingProvider.$inject = [ 'eventBus', 'canvas', 'translate' ];\n\ninherits(BpmnOrderingProvider, OrderingProvider);","import translate from 'diagram-js/lib/i18n/translate';\n\nimport BpmnOrderingProvider from './BpmnOrderingProvider';\n\nexport default {\n  __depends__: [\n    translate\n  ],\n  __init__: [ 'bpmnOrderingProvider' ],\n  bpmnOrderingProvider: [ 'type', BpmnOrderingProvider ]\n};","import {\n  assign\n} from 'min-dash';\nimport { getDi } from '../../util/ModelUtil';\n\n\n/**\n * A palette provider for BPMN 2.0 elements.\n */\nexport default function PaletteProvider(\n    palette, create, elementFactory,\n    spaceTool, lassoTool, handTool,\n    globalConnect, translate) {\n\n  this._palette = palette;\n  this._create = create;\n  this._elementFactory = elementFactory;\n  this._spaceTool = spaceTool;\n  this._lassoTool = lassoTool;\n  this._handTool = handTool;\n  this._globalConnect = globalConnect;\n  this._translate = translate;\n\n  palette.registerProvider(this);\n}\n\nPaletteProvider.$inject = [\n  'palette',\n  'create',\n  'elementFactory',\n  'spaceTool',\n  'lassoTool',\n  'handTool',\n  'globalConnect',\n  'translate'\n];\n\n\nPaletteProvider.prototype.getPaletteEntries = function(element) {\n\n  var actions = {},\n      create = this._create,\n      elementFactory = this._elementFactory,\n      spaceTool = this._spaceTool,\n      lassoTool = this._lassoTool,\n      handTool = this._handTool,\n      globalConnect = this._globalConnect,\n      translate = this._translate;\n\n  function createAction(type, group, className, title, options) {\n\n    function createListener(event) {\n      var shape = elementFactory.createShape(assign({ type: type }, options));\n\n      if (options) {\n        var di = getDi(shape);\n        di.isExpanded = options.isExpanded;\n      }\n\n      create.start(event, shape);\n    }\n\n    var shortType = type.replace(/^bpmn:/, '');\n\n    return {\n      group: group,\n      className: className,\n      title: title || translate('Create {type}', { type: shortType }),\n      action: {\n        dragstart: createListener,\n        click: createListener\n      }\n    };\n  }\n\n  function createSubprocess(event) {\n    var subProcess = elementFactory.createShape({\n      type: 'bpmn:SubProcess',\n      x: 0,\n      y: 0,\n      isExpanded: true\n    });\n\n    var startEvent = elementFactory.createShape({\n      type: 'bpmn:StartEvent',\n      x: 40,\n      y: 82,\n      parent: subProcess\n    });\n\n    create.start(event, [ subProcess, startEvent ], {\n      hints: {\n        autoSelect: [ subProcess ]\n      }\n    });\n  }\n\n  function createParticipant(event) {\n    create.start(event, elementFactory.createParticipantShape());\n  }\n\n  assign(actions, {\n    'hand-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-hand-tool',\n      title: translate('Activate the hand tool'),\n      action: {\n        click: function(event) {\n          handTool.activateHand(event);\n        }\n      }\n    },\n    'lasso-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-lasso-tool',\n      title: translate('Activate the lasso tool'),\n      action: {\n        click: function(event) {\n          lassoTool.activateSelection(event);\n        }\n      }\n    },\n    'space-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-space-tool',\n      title: translate('Activate the create/remove space tool'),\n      action: {\n        click: function(event) {\n          spaceTool.activateSelection(event);\n        }\n      }\n    },\n    'global-connect-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-connection-multi',\n      title: translate('Activate the global connect tool'),\n      action: {\n        click: function(event) {\n          globalConnect.start(event);\n        }\n      }\n    },\n    'tool-separator': {\n      group: 'tools',\n      separator: true\n    },\n    'create.start-event': createAction(\n      'bpmn:StartEvent', 'event', 'bpmn-icon-start-event-none',\n      translate('Create StartEvent')\n    ),\n    'create.intermediate-event': createAction(\n      'bpmn:IntermediateThrowEvent', 'event', 'bpmn-icon-intermediate-event-none',\n      translate('Create Intermediate/Boundary Event')\n    ),\n    'create.end-event': createAction(\n      'bpmn:EndEvent', 'event', 'bpmn-icon-end-event-none',\n      translate('Create EndEvent')\n    ),\n    'create.exclusive-gateway': createAction(\n      'bpmn:ExclusiveGateway', 'gateway', 'bpmn-icon-gateway-none',\n      translate('Create Gateway')\n    ),\n    'create.task': createAction(\n      'bpmn:Task', 'activity', 'bpmn-icon-task',\n      translate('Create Task')\n    ),\n    'create.data-object': createAction(\n      'bpmn:DataObjectReference', 'data-object', 'bpmn-icon-data-object',\n      translate('Create DataObjectReference')\n    ),\n    'create.data-store': createAction(\n      'bpmn:DataStoreReference', 'data-store', 'bpmn-icon-data-store',\n      translate('Create DataStoreReference')\n    ),\n    'create.subprocess-expanded': {\n      group: 'activity',\n      className: 'bpmn-icon-subprocess-expanded',\n      title: translate('Create expanded SubProcess'),\n      action: {\n        dragstart: createSubprocess,\n        click: createSubprocess\n      }\n    },\n    'create.participant-expanded': {\n      group: 'collaboration',\n      className: 'bpmn-icon-participant',\n      title: translate('Create Pool/Participant'),\n      action: {\n        dragstart: createParticipant,\n        click: createParticipant\n      }\n    },\n    'create.group': createAction(\n      'bpmn:Group', 'artifact', 'bpmn-icon-group',\n      translate('Create Group')\n    ),\n  });\n\n  return actions;\n};\n","import PaletteModule from 'diagram-js/lib/features/palette';\nimport CreateModule from 'diagram-js/lib/features/create';\nimport SpaceToolModule from 'diagram-js/lib/features/space-tool';\nimport LassoToolModule from 'diagram-js/lib/features/lasso-tool';\nimport HandToolModule from 'diagram-js/lib/features/hand-tool';\nimport GlobalConnectModule from 'diagram-js/lib/features/global-connect';\nimport translate from 'diagram-js/lib/i18n/translate';\n\nimport PaletteProvider from './PaletteProvider';\n\nexport default {\n  __depends__: [\n    PaletteModule,\n    CreateModule,\n    SpaceToolModule,\n    LassoToolModule,\n    HandToolModule,\n    GlobalConnectModule,\n    translate\n  ],\n  __init__: [ 'paletteProvider' ],\n  paletteProvider: [ 'type', PaletteProvider ]\n};\n","import {\n  getBusinessObject,\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  isEventSubProcess,\n  isExpanded\n} from '../../util/DiUtil';\n\nimport {\n  isDifferentType\n} from './util/TypeUtil';\n\nimport {\n  forEach,\n  filter\n} from 'min-dash';\n\nimport * as replaceOptions from '../replace/ReplaceOptions';\n\n\n/**\n * This module is an element agnostic replace menu provider for the popup menu.\n */\nexport default function ReplaceMenuProvider(\n    bpmnFactory, popupMenu, modeling, moddle,\n    bpmnReplace, rules, translate) {\n\n  this._bpmnFactory = bpmnFactory;\n  this._popupMenu = popupMenu;\n  this._modeling = modeling;\n  this._moddle = moddle;\n  this._bpmnReplace = bpmnReplace;\n  this._rules = rules;\n  this._translate = translate;\n\n  this.register();\n}\n\nReplaceMenuProvider.$inject = [\n  'bpmnFactory',\n  'popupMenu',\n  'modeling',\n  'moddle',\n  'bpmnReplace',\n  'rules',\n  'translate'\n];\n\n\n/**\n * Register replace menu provider in the popup menu\n */\nReplaceMenuProvider.prototype.register = function() {\n  this._popupMenu.registerProvider('bpmn-replace', this);\n};\n\n\n/**\n * Get all entries from replaceOptions for the given element and apply filters\n * on them. Get for example only elements, which are different from the current one.\n *\n * @param {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu entry items\n */\nReplaceMenuProvider.prototype.getEntries = function(element) {\n\n  var businessObject = element.businessObject;\n\n  var rules = this._rules;\n\n  var entries;\n\n  if (!rules.allowed('shape.replace', { element: element })) {\n    return [];\n  }\n\n  var differentType = isDifferentType(element);\n\n  if (is(businessObject, 'bpmn:DataObjectReference')) {\n    return this._createEntries(element, replaceOptions.DATA_OBJECT_REFERENCE);\n  }\n\n  if (is(businessObject, 'bpmn:DataStoreReference') && !is(element.parent, 'bpmn:Collaboration')) {\n    return this._createEntries(element, replaceOptions.DATA_STORE_REFERENCE);\n  }\n\n  // start events outside sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && !is(businessObject.$parent, 'bpmn:SubProcess')) {\n\n    entries = filter(replaceOptions.START_EVENT, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // expanded/collapsed pools\n  if (is(businessObject, 'bpmn:Participant')) {\n\n    entries = filter(replaceOptions.PARTICIPANT, function(entry) {\n      return isExpanded(element) !== entry.target.isExpanded;\n    });\n\n    return this._createEntries(element, entries);\n  }\n\n  // start events inside event sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && isEventSubProcess(businessObject.$parent)) {\n    entries = filter(replaceOptions.EVENT_SUB_PROCESS_START_EVENT, function(entry) {\n\n      var target = entry.target;\n\n      var isInterrupting = target.isInterrupting !== false;\n\n      var isInterruptingEqual = getBusinessObject(element).isInterrupting === isInterrupting;\n\n      // filters elements which types and event definition are equal but have have different interrupting types\n      return differentType(entry) || !differentType(entry) && !isInterruptingEqual;\n\n    });\n\n    return this._createEntries(element, entries);\n  }\n\n  // start events inside sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && !isEventSubProcess(businessObject.$parent)\n      && is(businessObject.$parent, 'bpmn:SubProcess')) {\n    entries = filter(replaceOptions.START_EVENT_SUB_PROCESS, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // end events\n  if (is(businessObject, 'bpmn:EndEvent')) {\n\n    entries = filter(replaceOptions.END_EVENT, function(entry) {\n      var target = entry.target;\n\n      // hide cancel end events outside transactions\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' && !is(businessObject.$parent, 'bpmn:Transaction')) {\n        return false;\n      }\n\n      return differentType(entry);\n    });\n\n    return this._createEntries(element, entries);\n  }\n\n  // boundary events\n  if (is(businessObject, 'bpmn:BoundaryEvent')) {\n\n    entries = filter(replaceOptions.BOUNDARY_EVENT, function(entry) {\n\n      var target = entry.target;\n\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' &&\n         !is(businessObject.attachedToRef, 'bpmn:Transaction')) {\n        return false;\n      }\n      var cancelActivity = target.cancelActivity !== false;\n\n      var isCancelActivityEqual = businessObject.cancelActivity == cancelActivity;\n\n      return differentType(entry) || !differentType(entry) && !isCancelActivityEqual;\n    });\n\n    return this._createEntries(element, entries);\n  }\n\n  // intermediate events\n  if (is(businessObject, 'bpmn:IntermediateCatchEvent') ||\n      is(businessObject, 'bpmn:IntermediateThrowEvent')) {\n\n    entries = filter(replaceOptions.INTERMEDIATE_EVENT, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // gateways\n  if (is(businessObject, 'bpmn:Gateway')) {\n\n    entries = filter(replaceOptions.GATEWAY, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // transactions\n  if (is(businessObject, 'bpmn:Transaction')) {\n\n    entries = filter(replaceOptions.TRANSACTION, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // expanded event sub processes\n  if (isEventSubProcess(businessObject) && isExpanded(element)) {\n\n    entries = filter(replaceOptions.EVENT_SUB_PROCESS, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // expanded sub processes\n  if (is(businessObject, 'bpmn:SubProcess') && isExpanded(element)) {\n\n    entries = filter(replaceOptions.SUBPROCESS_EXPANDED, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // collapsed ad hoc sub processes\n  if (is(businessObject, 'bpmn:AdHocSubProcess') && !isExpanded(element)) {\n\n    entries = filter(replaceOptions.TASK, function(entry) {\n\n      var target = entry.target;\n\n      var isTargetSubProcess = target.type === 'bpmn:SubProcess';\n\n      var isTargetExpanded = target.isExpanded === true;\n\n      return isDifferentType(element, target) && (!isTargetSubProcess || isTargetExpanded);\n    });\n\n    return this._createEntries(element, entries);\n  }\n\n  // sequence flows\n  if (is(businessObject, 'bpmn:SequenceFlow')) {\n    return this._createSequenceFlowEntries(element, replaceOptions.SEQUENCE_FLOW);\n  }\n\n  // flow nodes\n  if (is(businessObject, 'bpmn:FlowNode')) {\n    entries = filter(replaceOptions.TASK, differentType);\n\n    // collapsed SubProcess can not be replaced with itself\n    if (is(businessObject, 'bpmn:SubProcess') && !isExpanded(element)) {\n      entries = filter(entries, function(entry) {\n        return entry.label !== 'Sub Process (collapsed)';\n      });\n    }\n\n    return this._createEntries(element, entries);\n  }\n\n  return [];\n};\n\n\n/**\n * Get a list of header items for the given element. This includes buttons\n * for multi instance markers and for the ad hoc marker.\n *\n * @param {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu entry items\n */\nReplaceMenuProvider.prototype.getHeaderEntries = function(element) {\n\n  var headerEntries = [];\n\n  if (is(element, 'bpmn:Activity') && !isEventSubProcess(element)) {\n    headerEntries = headerEntries.concat(this._getLoopEntries(element));\n  }\n\n  if (is(element, 'bpmn:DataObjectReference')) {\n    headerEntries = headerEntries.concat(this._getDataObjectIsCollection(element));\n  }\n\n  if (is(element, 'bpmn:Participant')) {\n    headerEntries = headerEntries.concat(this._getParticipantMultiplicity(element));\n  }\n\n  if (is(element, 'bpmn:SubProcess') &&\n      !is(element, 'bpmn:Transaction') &&\n      !isEventSubProcess(element)) {\n    headerEntries.push(this._getAdHocEntry(element));\n  }\n\n  return headerEntries;\n};\n\n\n/**\n * Creates an array of menu entry objects for a given element and filters the replaceOptions\n * according to a filter function.\n *\n * @param  {djs.model.Base} element\n * @param  {Object} replaceOptions\n *\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._createEntries = function(element, replaceOptions) {\n  var menuEntries = [];\n\n  var self = this;\n\n  forEach(replaceOptions, function(definition) {\n    var entry = self._createMenuEntry(definition, element);\n\n    menuEntries.push(entry);\n  });\n\n  return menuEntries;\n};\n\n/**\n * Creates an array of menu entry objects for a given sequence flow.\n *\n * @param  {djs.model.Base} element\n * @param  {Object} replaceOptions\n\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._createSequenceFlowEntries = function(element, replaceOptions) {\n\n  var businessObject = getBusinessObject(element);\n\n  var menuEntries = [];\n\n  var modeling = this._modeling,\n      moddle = this._moddle;\n\n  var self = this;\n\n  forEach(replaceOptions, function(entry) {\n\n    switch (entry.actionName) {\n    case 'replace-with-default-flow':\n      if (businessObject.sourceRef.default !== businessObject &&\n            (is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') ||\n             is(businessObject.sourceRef, 'bpmn:InclusiveGateway') ||\n             is(businessObject.sourceRef, 'bpmn:ComplexGateway') ||\n             is(businessObject.sourceRef, 'bpmn:Activity'))) {\n\n        menuEntries.push(self._createMenuEntry(entry, element, function() {\n          modeling.updateProperties(element.source, { default: businessObject });\n        }));\n      }\n      break;\n    case 'replace-with-conditional-flow':\n      if (!businessObject.conditionExpression && is(businessObject.sourceRef, 'bpmn:Activity')) {\n\n        menuEntries.push(self._createMenuEntry(entry, element, function() {\n          var conditionExpression = moddle.create('bpmn:FormalExpression', { body: '' });\n\n          modeling.updateProperties(element, { conditionExpression: conditionExpression });\n        }));\n      }\n      break;\n    default:\n\n      // default flows\n      if (is(businessObject.sourceRef, 'bpmn:Activity') && businessObject.conditionExpression) {\n        return menuEntries.push(self._createMenuEntry(entry, element, function() {\n          modeling.updateProperties(element, { conditionExpression: undefined });\n        }));\n      }\n\n      // conditional flows\n      if ((is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') ||\n           is(businessObject.sourceRef, 'bpmn:InclusiveGateway') ||\n           is(businessObject.sourceRef, 'bpmn:ComplexGateway') ||\n           is(businessObject.sourceRef, 'bpmn:Activity')) &&\n           businessObject.sourceRef.default === businessObject) {\n\n        return menuEntries.push(self._createMenuEntry(entry, element, function() {\n          modeling.updateProperties(element.source, { default: undefined });\n        }));\n      }\n    }\n  });\n\n  return menuEntries;\n};\n\n\n/**\n * Creates and returns a single menu entry item.\n *\n * @param  {Object} definition a single replace options definition object\n * @param  {djs.model.Base} element\n * @param  {Function} [action] an action callback function which gets called when\n *                             the menu entry is being triggered.\n *\n * @return {Object} menu entry item\n */\nReplaceMenuProvider.prototype._createMenuEntry = function(definition, element, action) {\n  var translate = this._translate;\n  var replaceElement = this._bpmnReplace.replaceElement;\n\n  var replaceAction = function() {\n    return replaceElement(element, definition.target);\n  };\n\n  var label = definition.label;\n  if (label && typeof label === 'function') {\n    label = label(element);\n  }\n\n  action = action || replaceAction;\n\n  var menuEntry = {\n    label: translate(label),\n    className: definition.className,\n    id: definition.actionName,\n    action: action\n  };\n\n  return menuEntry;\n};\n\n/**\n * Get a list of menu items containing buttons for multi instance markers\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._getLoopEntries = function(element) {\n\n  var self = this;\n  var translate = this._translate;\n\n  function toggleLoopEntry(event, entry) {\n    var loopCharacteristics;\n\n    if (entry.active) {\n      loopCharacteristics = undefined;\n    } else {\n      loopCharacteristics = self._moddle.create(entry.options.loopCharacteristics);\n\n      if (entry.options.isSequential) {\n        loopCharacteristics.isSequential = entry.options.isSequential;\n      }\n    }\n    self._modeling.updateProperties(element, { loopCharacteristics: loopCharacteristics });\n  }\n\n  var businessObject = getBusinessObject(element),\n      loopCharacteristics = businessObject.loopCharacteristics;\n\n  var isSequential,\n      isLoop,\n      isParallel;\n\n  if (loopCharacteristics) {\n    isSequential = loopCharacteristics.isSequential;\n    isLoop = loopCharacteristics.isSequential === undefined;\n    isParallel = loopCharacteristics.isSequential !== undefined && !loopCharacteristics.isSequential;\n  }\n\n\n  var loopEntries = [\n    {\n      id: 'toggle-parallel-mi',\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Parallel Multi Instance'),\n      active: isParallel,\n      action: toggleLoopEntry,\n      options: {\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\n        isSequential: false\n      }\n    },\n    {\n      id: 'toggle-sequential-mi',\n      className: 'bpmn-icon-sequential-mi-marker',\n      title: translate('Sequential Multi Instance'),\n      active: isSequential,\n      action: toggleLoopEntry,\n      options: {\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\n        isSequential: true\n      }\n    },\n    {\n      id: 'toggle-loop',\n      className: 'bpmn-icon-loop-marker',\n      title: translate('Loop'),\n      active: isLoop,\n      action: toggleLoopEntry,\n      options: {\n        loopCharacteristics: 'bpmn:StandardLoopCharacteristics'\n      }\n    }\n  ];\n  return loopEntries;\n};\n\n/**\n * Get a list of menu items containing a button for the collection marker\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._getDataObjectIsCollection = function(element) {\n\n  var self = this;\n  var translate = this._translate;\n\n  function toggleIsCollection(event, entry) {\n    self._modeling.updateModdleProperties(\n      element,\n      dataObject,\n      { isCollection: !entry.active });\n  }\n\n  var dataObject = element.businessObject.dataObjectRef,\n      isCollection = dataObject.isCollection;\n\n  var dataObjectEntries = [\n    {\n      id: 'toggle-is-collection',\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Collection'),\n      active: isCollection,\n      action: toggleIsCollection,\n    }\n  ];\n  return dataObjectEntries;\n};\n\n/**\n * Get a list of menu items containing a button for the participant multiplicity marker\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._getParticipantMultiplicity = function(element) {\n\n  var self = this;\n  var bpmnFactory = this._bpmnFactory;\n  var translate = this._translate;\n\n  function toggleParticipantMultiplicity(event, entry) {\n    var isActive = entry.active;\n    var participantMultiplicity;\n\n    if (!isActive) {\n      participantMultiplicity = bpmnFactory.create('bpmn:ParticipantMultiplicity');\n    }\n\n    self._modeling.updateProperties(\n      element,\n      { participantMultiplicity: participantMultiplicity });\n  }\n\n  var participantMultiplicity = element.businessObject.participantMultiplicity;\n\n  var participantEntries = [\n    {\n      id: 'toggle-participant-multiplicity',\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Participant Multiplicity'),\n      active: !!participantMultiplicity,\n      action: toggleParticipantMultiplicity,\n    }\n  ];\n  return participantEntries;\n};\n\n\n/**\n * Get the menu items containing a button for the ad hoc marker\n *\n * @param  {djs.model.Base} element\n *\n * @return {Object} a menu item\n */\nReplaceMenuProvider.prototype._getAdHocEntry = function(element) {\n  var translate = this._translate;\n  var businessObject = getBusinessObject(element);\n\n  var isAdHoc = is(businessObject, 'bpmn:AdHocSubProcess');\n\n  var replaceElement = this._bpmnReplace.replaceElement;\n\n  var adHocEntry = {\n    id: 'toggle-adhoc',\n    className: 'bpmn-icon-ad-hoc-marker',\n    title: translate('Ad-hoc'),\n    active: isAdHoc,\n    action: function(event, entry) {\n      if (isAdHoc) {\n        return replaceElement(element, { type: 'bpmn:SubProcess' }, {\n          autoResize: false,\n          layoutConnection: false\n        });\n      } else {\n        return replaceElement(element, { type: 'bpmn:AdHocSubProcess' }, {\n          autoResize: false,\n          layoutConnection: false\n        });\n      }\n    }\n  };\n\n  return adHocEntry;\n};\n","import PopupMenuModule from 'diagram-js/lib/features/popup-menu';\nimport ReplaceModule from '../replace';\n\nimport ReplaceMenuProvider from './ReplaceMenuProvider';\n\n\nexport default {\n  __depends__: [\n    PopupMenuModule,\n    ReplaceModule\n  ],\n  __init__: [ 'replaceMenuProvider' ],\n  replaceMenuProvider: [ 'type', ReplaceMenuProvider ]\n};","import {\n  getBusinessObject\n} from '../../../util/ModelUtil';\n\nimport {\n  isExpanded\n} from '../../../util/DiUtil';\n\n\n/**\n * Returns true, if an element is from a different type\n * than a target definition. Takes into account the type,\n * event definition type and triggeredByEvent property.\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean}\n */\nexport function isDifferentType(element) {\n\n  return function(entry) {\n    var target = entry.target;\n\n    var businessObject = getBusinessObject(element),\n        eventDefinition = businessObject.eventDefinitions && businessObject.eventDefinitions[0];\n\n    var isTypeEqual = businessObject.$type === target.type;\n\n    var isEventDefinitionEqual = (\n      (eventDefinition && eventDefinition.$type) === target.eventDefinitionType\n    );\n\n    var isTriggeredByEventEqual = (\n      businessObject.triggeredByEvent === target.triggeredByEvent\n    );\n\n    var isExpandedEqual = (\n      target.isExpanded === undefined ||\n      target.isExpanded === isExpanded(element)\n    );\n\n    return !isTypeEqual || !isEventDefinitionEqual || !isTriggeredByEventEqual || !isExpandedEqual;\n  };\n}","import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport inherits from 'inherits';\n\nimport cssEscape from 'css.escape';\n\nimport {\n  assign,\n  forEach\n} from 'min-dash';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  attr as svgAttr\n} from 'tiny-svg';\n\nvar LOW_PRIORITY = 250;\n\n\nexport default function BpmnReplacePreview(\n    eventBus, elementRegistry, elementFactory,\n    canvas, previewSupport) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Replace the visuals of all elements in the context which can be replaced\n   *\n   * @param  {Object} context\n   */\n  function replaceVisual(context) {\n\n    var replacements = context.canExecute.replacements;\n\n    forEach(replacements, function(replacement) {\n\n      var id = replacement.oldElementId;\n\n      var newElement = {\n        type: replacement.newElementType\n      };\n\n      // if the visual of the element is already replaced\n      if (context.visualReplacements[id]) {\n        return;\n      }\n\n      var element = elementRegistry.get(id);\n\n      assign(newElement, { x: element.x, y: element.y });\n\n      // create a temporary shape\n      var tempShape = elementFactory.createShape(newElement);\n\n      canvas.addShape(tempShape, element.parent);\n\n      // select the original SVG element related to the element and hide it\n      var gfx = domQuery('[data-element-id=\"' + cssEscape(element.id) + '\"]', context.dragGroup);\n\n      if (gfx) {\n        svgAttr(gfx, { display: 'none' });\n      }\n\n      // clone the gfx of the temporary shape and add it to the drag group\n      var dragger = previewSupport.addDragger(tempShape, context.dragGroup);\n\n      context.visualReplacements[id] = dragger;\n\n      canvas.removeShape(tempShape);\n    });\n  }\n\n  /**\n   * Restore the original visuals of the previously replaced elements\n   *\n   * @param  {Object} context\n   */\n  function restoreVisual(context) {\n\n    var visualReplacements = context.visualReplacements;\n\n    forEach(visualReplacements, function(dragger, id) {\n\n      var originalGfx = domQuery('[data-element-id=\"' + cssEscape(id) + '\"]', context.dragGroup);\n\n      if (originalGfx) {\n        svgAttr(originalGfx, { display: 'inline' });\n      }\n\n      dragger.remove();\n\n      if (visualReplacements[id]) {\n        delete visualReplacements[id];\n      }\n    });\n  }\n\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        canExecute = context.canExecute;\n\n    if (!context.visualReplacements) {\n      context.visualReplacements = {};\n    }\n\n    if (canExecute && canExecute.replacements) {\n      replaceVisual(context);\n    } else {\n      restoreVisual(context);\n    }\n  });\n}\n\nBpmnReplacePreview.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'elementFactory',\n  'canvas',\n  'previewSupport'\n];\n\ninherits(BpmnReplacePreview, CommandInterceptor);","import PreviewSupportModule from 'diagram-js/lib/features/preview-support';\n\nimport BpmnReplacePreview from './BpmnReplacePreview';\n\nexport default {\n  __depends__: [\n    PreviewSupportModule\n  ],\n  __init__: [ 'bpmnReplacePreview' ],\n  bpmnReplacePreview: [ 'type', BpmnReplacePreview ]\n};\n","import {\n  pick,\n  assign,\n  filter,\n  forEach,\n  isArray,\n  isUndefined,\n  has\n} from 'min-dash';\n\nimport {\n  is,\n  getBusinessObject\n} from '../../util/ModelUtil';\n\nimport {\n  isAny\n} from '../modeling/util/ModelingUtil';\n\nimport {\n  isExpanded,\n  isEventSubProcess\n} from '../../util/DiUtil';\n\nimport { getPropertyNames } from '../copy-paste/ModdleCopy';\n\nfunction copyProperties(source, target, properties) {\n  if (!isArray(properties)) {\n    properties = [ properties ];\n  }\n\n  forEach(properties, function(property) {\n    if (!isUndefined(source[property])) {\n      target[property] = source[property];\n    }\n  });\n}\n\n\nvar CUSTOM_PROPERTIES = [\n  'cancelActivity',\n  'instantiate',\n  'eventGatewayType',\n  'triggeredByEvent',\n  'isInterrupting'\n];\n\n/**\n * Check if element should be collapsed or expanded.\n */\nfunction shouldToggleCollapsed(element, targetElement) {\n\n  var oldCollapsed = (\n    element && has(element, 'collapsed') ? element.collapsed : !isExpanded(element)\n  );\n\n  var targetCollapsed;\n\n  if (targetElement && (has(targetElement, 'collapsed') || has(targetElement, 'isExpanded'))) {\n\n    // property is explicitly set so use it\n    targetCollapsed = (\n      has(targetElement, 'collapsed') ? targetElement.collapsed : !targetElement.isExpanded\n    );\n  } else {\n\n    // keep old state\n    targetCollapsed = oldCollapsed;\n  }\n\n  if (oldCollapsed !== targetCollapsed) {\n    return true;\n  }\n\n  return false;\n}\n\n\n/**\n * This module takes care of replacing BPMN elements\n */\nexport default function BpmnReplace(\n    bpmnFactory,\n    elementFactory,\n    moddleCopy,\n    modeling,\n    replace,\n    rules,\n    selection\n) {\n\n  /**\n   * Prepares a new business object for the replacement element\n   * and triggers the replace operation.\n   *\n   * @param  {djs.model.Base} element\n   * @param  {Object} target\n   * @param  {Object} [hints]\n   *\n   * @return {djs.model.Base} the newly created element\n   */\n  function replaceElement(element, target, hints) {\n\n    hints = hints || {};\n\n    var type = target.type,\n        oldBusinessObject = element.businessObject;\n\n    if (isSubProcess(oldBusinessObject) && type === 'bpmn:SubProcess') {\n      if (shouldToggleCollapsed(element, target)) {\n\n        // expanding or collapsing process\n        modeling.toggleCollapse(element);\n\n        return element;\n      }\n    }\n\n    var newBusinessObject = bpmnFactory.create(type);\n\n    var newElement = {\n      type: type,\n      businessObject: newBusinessObject,\n    };\n\n    newElement.di = {};\n\n    // colors will be set to DI\n    copyProperties(element.di, newElement.di, [\n      'fill',\n      'stroke',\n      'background-color',\n      'border-color',\n      'color'\n    ]);\n\n    var elementProps = getPropertyNames(oldBusinessObject.$descriptor),\n        newElementProps = getPropertyNames(newBusinessObject.$descriptor, true),\n        copyProps = intersection(elementProps, newElementProps);\n\n    // initialize special properties defined in target definition\n    assign(newBusinessObject, pick(target, CUSTOM_PROPERTIES));\n\n    var properties = filter(copyProps, function(propertyName) {\n\n      // copying event definitions, unless we replace\n      if (propertyName === 'eventDefinitions') {\n        return hasEventDefinition(element, target.eventDefinitionType);\n      }\n\n      // retain loop characteristics if the target element\n      // is not an event sub process\n      if (propertyName === 'loopCharacteristics') {\n        return !isEventSubProcess(newBusinessObject);\n      }\n\n      // so the applied properties from 'target' don't get lost\n      if (has(newBusinessObject, propertyName)) {\n        return false;\n      }\n\n      if (propertyName === 'processRef' && target.isExpanded === false) {\n        return false;\n      }\n\n      if (propertyName === 'triggeredByEvent') {\n        return false;\n      }\n\n      return true;\n    });\n\n    newBusinessObject = moddleCopy.copyElement(\n      oldBusinessObject,\n      newBusinessObject,\n      properties\n    );\n\n    // initialize custom BPMN extensions\n    if (target.eventDefinitionType) {\n\n      // only initialize with new eventDefinition\n      // if we did not set an event definition yet,\n      // i.e. because we copied it\n      if (!hasEventDefinition(newBusinessObject, target.eventDefinitionType)) {\n        newElement.eventDefinitionType = target.eventDefinitionType;\n        newElement.eventDefinitionAttrs = target.eventDefinitionAttrs;\n      }\n    }\n\n    if (is(oldBusinessObject, 'bpmn:Activity')) {\n\n      if (isSubProcess(oldBusinessObject)) {\n\n        // no toggeling, so keep old state\n        newElement.isExpanded = isExpanded(element);\n      }\n\n      // else if property is explicitly set, use it\n      else if (target && has(target, 'isExpanded')) {\n        newElement.isExpanded = target.isExpanded;\n      }\n\n      // TODO: need also to respect min/max Size\n      // copy size, from an expanded subprocess to an expanded alternative subprocess\n      // except bpmn:Task, because Task is always expanded\n      if ((isExpanded(element) && !is(oldBusinessObject, 'bpmn:Task')) && newElement.isExpanded) {\n        newElement.width = element.width;\n        newElement.height = element.height;\n      }\n    }\n\n    // remove children if not expanding sub process\n    if (isSubProcess(oldBusinessObject) && !isSubProcess(newBusinessObject)) {\n      hints.moveChildren = false;\n    }\n\n    // transform collapsed/expanded pools\n    if (is(oldBusinessObject, 'bpmn:Participant')) {\n\n      // create expanded pool\n      if (target.isExpanded === true) {\n        newBusinessObject.processRef = bpmnFactory.create('bpmn:Process');\n      } else {\n\n        // remove children when transforming to collapsed pool\n        hints.moveChildren = false;\n      }\n\n      // apply same width and default height\n      newElement.width = element.width;\n      newElement.height = elementFactory.getDefaultSize(newElement).height;\n    }\n\n    if (!rules.allowed('shape.resize', { shape: newBusinessObject })) {\n      newElement.height = elementFactory.getDefaultSize(newElement).height;\n      newElement.width = elementFactory.getDefaultSize(newElement).width;\n    }\n\n    newBusinessObject.name = oldBusinessObject.name;\n\n    // retain default flow's reference between inclusive <-> exclusive gateways and activities\n    if (\n      isAny(oldBusinessObject, [\n        'bpmn:ExclusiveGateway',\n        'bpmn:InclusiveGateway',\n        'bpmn:Activity'\n      ]) &&\n      isAny(newBusinessObject, [\n        'bpmn:ExclusiveGateway',\n        'bpmn:InclusiveGateway',\n        'bpmn:Activity'\n      ])\n    ) {\n      newBusinessObject.default = oldBusinessObject.default;\n    }\n\n    if (\n      target.host &&\n      !is(oldBusinessObject, 'bpmn:BoundaryEvent') &&\n      is(newBusinessObject, 'bpmn:BoundaryEvent')\n    ) {\n      newElement.host = target.host;\n    }\n\n    // The DataStoreReference element is 14px wider than the DataObjectReference element\n    // This ensures that they stay centered on the x axis when replaced\n    if (\n      newElement.type === 'bpmn:DataStoreReference' ||\n      newElement.type === 'bpmn:DataObjectReference'\n    ) {\n      newElement.x = element.x + (element.width - newElement.width) / 2;\n    }\n\n\n    newElement = replace.replaceElement(element, newElement, hints);\n\n    if (hints.select !== false) {\n      selection.select(newElement);\n    }\n\n    return newElement;\n  }\n\n  this.replaceElement = replaceElement;\n}\n\nBpmnReplace.$inject = [\n  'bpmnFactory',\n  'elementFactory',\n  'moddleCopy',\n  'modeling',\n  'replace',\n  'rules',\n  'selection'\n];\n\n\nfunction isSubProcess(bo) {\n  return is(bo, 'bpmn:SubProcess');\n}\n\nfunction hasEventDefinition(element, type) {\n\n  var bo = getBusinessObject(element);\n\n  return type && bo.get('eventDefinitions').some(function(definition) {\n    return is(definition, type);\n  });\n}\n\n/**\n * Compute intersection between two arrays.\n */\nfunction intersection(a1, a2) {\n  return a1.filter(function(el) {\n    return a2.indexOf(el) !== -1;\n  });\n}\n","export var START_EVENT = [\n  {\n    label: 'Start Event',\n    actionName: 'replace-with-none-start',\n    className: 'bpmn-icon-start-event-none',\n    target: {\n      type: 'bpmn:StartEvent'\n    }\n  },\n  {\n    label: 'Intermediate Throw Event',\n    actionName: 'replace-with-none-intermediate-throwing',\n    className: 'bpmn-icon-intermediate-event-none',\n    target: {\n      type: 'bpmn:IntermediateThrowEvent'\n    }\n  },\n  {\n    label: 'End Event',\n    actionName: 'replace-with-none-end',\n    className: 'bpmn-icon-end-event-none',\n    target: {\n      type: 'bpmn:EndEvent'\n    }\n  },\n  {\n    label: 'Message Start Event',\n    actionName: 'replace-with-message-start',\n    className: 'bpmn-icon-start-event-message',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\n    }\n  },\n  {\n    label: 'Timer Start Event',\n    actionName: 'replace-with-timer-start',\n    className: 'bpmn-icon-start-event-timer',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\n    }\n  },\n  {\n    label: 'Conditional Start Event',\n    actionName: 'replace-with-conditional-start',\n    className: 'bpmn-icon-start-event-condition',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\n    }\n  },\n  {\n    label: 'Signal Start Event',\n    actionName: 'replace-with-signal-start',\n    className: 'bpmn-icon-start-event-signal',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\n    }\n  }\n];\n\nexport var START_EVENT_SUB_PROCESS = [\n  {\n    label: 'Start Event',\n    actionName: 'replace-with-none-start',\n    className: 'bpmn-icon-start-event-none',\n    target: {\n      type: 'bpmn:StartEvent'\n    }\n  },\n  {\n    label: 'Intermediate Throw Event',\n    actionName: 'replace-with-none-intermediate-throwing',\n    className: 'bpmn-icon-intermediate-event-none',\n    target: {\n      type: 'bpmn:IntermediateThrowEvent'\n    }\n  },\n  {\n    label: 'End Event',\n    actionName: 'replace-with-none-end',\n    className: 'bpmn-icon-end-event-none',\n    target: {\n      type: 'bpmn:EndEvent'\n    }\n  }\n];\n\nexport var INTERMEDIATE_EVENT = [\n  {\n    label: 'Start Event',\n    actionName: 'replace-with-none-start',\n    className: 'bpmn-icon-start-event-none',\n    target: {\n      type: 'bpmn:StartEvent'\n    }\n  },\n  {\n    label: 'Intermediate Throw Event',\n    actionName: 'replace-with-none-intermediate-throw',\n    className: 'bpmn-icon-intermediate-event-none',\n    target: {\n      type: 'bpmn:IntermediateThrowEvent'\n    }\n  },\n  {\n    label: 'End Event',\n    actionName: 'replace-with-none-end',\n    className: 'bpmn-icon-end-event-none',\n    target: {\n      type: 'bpmn:EndEvent'\n    }\n  },\n  {\n    label: 'Message Intermediate Catch Event',\n    actionName: 'replace-with-message-intermediate-catch',\n    className: 'bpmn-icon-intermediate-event-catch-message',\n    target: {\n      type: 'bpmn:IntermediateCatchEvent',\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\n    }\n  },\n  {\n    label: 'Message Intermediate Throw Event',\n    actionName: 'replace-with-message-intermediate-throw',\n    className: 'bpmn-icon-intermediate-event-throw-message',\n    target: {\n      type: 'bpmn:IntermediateThrowEvent',\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\n    }\n  },\n  {\n    label: 'Timer Intermediate Catch Event',\n    actionName: 'replace-with-timer-intermediate-catch',\n    className: 'bpmn-icon-intermediate-event-catch-timer',\n    target: {\n      type: 'bpmn:IntermediateCatchEvent',\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\n    }\n  },\n  {\n    label: 'Escalation Intermediate Throw Event',\n    actionName: 'replace-with-escalation-intermediate-throw',\n    className: 'bpmn-icon-intermediate-event-throw-escalation',\n    target: {\n      type: 'bpmn:IntermediateThrowEvent',\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\n    }\n  },\n  {\n    label: 'Conditional Intermediate Catch Event',\n    actionName: 'replace-with-conditional-intermediate-catch',\n    className: 'bpmn-icon-intermediate-event-catch-condition',\n    target: {\n      type: 'bpmn:IntermediateCatchEvent',\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\n    }\n  },\n  {\n    label: 'Link Intermediate Catch Event',\n    actionName: 'replace-with-link-intermediate-catch',\n    className: 'bpmn-icon-intermediate-event-catch-link',\n    target: {\n      type: 'bpmn:IntermediateCatchEvent',\n      eventDefinitionType: 'bpmn:LinkEventDefinition',\n      eventDefinitionAttrs: {\n        name: ''\n      }\n    }\n  },\n  {\n    label: 'Link Intermediate Throw Event',\n    actionName: 'replace-with-link-intermediate-throw',\n    className: 'bpmn-icon-intermediate-event-throw-link',\n    target: {\n      type: 'bpmn:IntermediateThrowEvent',\n      eventDefinitionType: 'bpmn:LinkEventDefinition',\n      eventDefinitionAttrs: {\n        name: ''\n      }\n    }\n  },\n  {\n    label: 'Compensation Intermediate Throw Event',\n    actionName: 'replace-with-compensation-intermediate-throw',\n    className: 'bpmn-icon-intermediate-event-throw-compensation',\n    target: {\n      type: 'bpmn:IntermediateThrowEvent',\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\n    }\n  },\n  {\n    label: 'Signal Intermediate Catch Event',\n    actionName: 'replace-with-signal-intermediate-catch',\n    className: 'bpmn-icon-intermediate-event-catch-signal',\n    target: {\n      type: 'bpmn:IntermediateCatchEvent',\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\n    }\n  },\n  {\n    label: 'Signal Intermediate Throw Event',\n    actionName: 'replace-with-signal-intermediate-throw',\n    className: 'bpmn-icon-intermediate-event-throw-signal',\n    target: {\n      type: 'bpmn:IntermediateThrowEvent',\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\n    }\n  }\n];\n\nexport var END_EVENT = [\n  {\n    label: 'Start Event',\n    actionName: 'replace-with-none-start',\n    className: 'bpmn-icon-start-event-none',\n    target: {\n      type: 'bpmn:StartEvent'\n    }\n  },\n  {\n    label: 'Intermediate Throw Event',\n    actionName: 'replace-with-none-intermediate-throw',\n    className: 'bpmn-icon-intermediate-event-none',\n    target: {\n      type: 'bpmn:IntermediateThrowEvent'\n    }\n  },\n  {\n    label: 'End Event',\n    actionName: 'replace-with-none-end',\n    className: 'bpmn-icon-end-event-none',\n    target: {\n      type: 'bpmn:EndEvent'\n    }\n  },\n  {\n    label: 'Message End Event',\n    actionName: 'replace-with-message-end',\n    className: 'bpmn-icon-end-event-message',\n    target: {\n      type: 'bpmn:EndEvent',\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\n    }\n  },\n  {\n    label: 'Escalation End Event',\n    actionName: 'replace-with-escalation-end',\n    className: 'bpmn-icon-end-event-escalation',\n    target: {\n      type: 'bpmn:EndEvent',\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\n    }\n  },\n  {\n    label: 'Error End Event',\n    actionName: 'replace-with-error-end',\n    className: 'bpmn-icon-end-event-error',\n    target: {\n      type: 'bpmn:EndEvent',\n      eventDefinitionType: 'bpmn:ErrorEventDefinition'\n    }\n  },\n  {\n    label: 'Cancel End Event',\n    actionName: 'replace-with-cancel-end',\n    className: 'bpmn-icon-end-event-cancel',\n    target: {\n      type: 'bpmn:EndEvent',\n      eventDefinitionType: 'bpmn:CancelEventDefinition'\n    }\n  },\n  {\n    label: 'Compensation End Event',\n    actionName: 'replace-with-compensation-end',\n    className: 'bpmn-icon-end-event-compensation',\n    target: {\n      type: 'bpmn:EndEvent',\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\n    }\n  },\n  {\n    label: 'Signal End Event',\n    actionName: 'replace-with-signal-end',\n    className: 'bpmn-icon-end-event-signal',\n    target: {\n      type: 'bpmn:EndEvent',\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\n    }\n  },\n  {\n    label: 'Terminate End Event',\n    actionName: 'replace-with-terminate-end',\n    className: 'bpmn-icon-end-event-terminate',\n    target: {\n      type: 'bpmn:EndEvent',\n      eventDefinitionType: 'bpmn:TerminateEventDefinition'\n    }\n  }\n];\n\nexport var GATEWAY = [\n  {\n    label: 'Exclusive Gateway',\n    actionName: 'replace-with-exclusive-gateway',\n    className: 'bpmn-icon-gateway-xor',\n    target: {\n      type: 'bpmn:ExclusiveGateway'\n    }\n  },\n  {\n    label: 'Parallel Gateway',\n    actionName: 'replace-with-parallel-gateway',\n    className: 'bpmn-icon-gateway-parallel',\n    target: {\n      type: 'bpmn:ParallelGateway'\n    }\n  },\n  {\n    label: 'Inclusive Gateway',\n    actionName: 'replace-with-inclusive-gateway',\n    className: 'bpmn-icon-gateway-or',\n    target: {\n      type: 'bpmn:InclusiveGateway'\n    }\n  },\n  {\n    label: 'Complex Gateway',\n    actionName: 'replace-with-complex-gateway',\n    className: 'bpmn-icon-gateway-complex',\n    target: {\n      type: 'bpmn:ComplexGateway'\n    }\n  },\n  {\n    label: 'Event based Gateway',\n    actionName: 'replace-with-event-based-gateway',\n    className: 'bpmn-icon-gateway-eventbased',\n    target: {\n      type: 'bpmn:EventBasedGateway',\n      instantiate: false,\n      eventGatewayType: 'Exclusive'\n    }\n  }\n\n  // Gateways deactivated until https://github.com/bpmn-io/bpmn-js/issues/194\n  // {\n  //   label: 'Event based instantiating Gateway',\n  //   actionName: 'replace-with-exclusive-event-based-gateway',\n  //   className: 'bpmn-icon-exclusive-event-based',\n  //   target: {\n  //     type: 'bpmn:EventBasedGateway'\n  //   },\n  //   options: {\n  //     businessObject: { instantiate: true, eventGatewayType: 'Exclusive' }\n  //   }\n  // },\n  // {\n  //   label: 'Parallel Event based instantiating Gateway',\n  //   actionName: 'replace-with-parallel-event-based-instantiate-gateway',\n  //   className: 'bpmn-icon-parallel-event-based-instantiate-gateway',\n  //   target: {\n  //     type: 'bpmn:EventBasedGateway'\n  //   },\n  //   options: {\n  //     businessObject: { instantiate: true, eventGatewayType: 'Parallel' }\n  //   }\n  // }\n];\n\nexport var SUBPROCESS_EXPANDED = [\n  {\n    label: 'Transaction',\n    actionName: 'replace-with-transaction',\n    className: 'bpmn-icon-transaction',\n    target: {\n      type: 'bpmn:Transaction',\n      isExpanded: true\n    }\n  },\n  {\n    label: 'Event Sub Process',\n    actionName: 'replace-with-event-subprocess',\n    className: 'bpmn-icon-event-subprocess-expanded',\n    target: {\n      type: 'bpmn:SubProcess',\n      triggeredByEvent: true,\n      isExpanded: true\n    }\n  },\n  {\n    label: 'Sub Process (collapsed)',\n    actionName: 'replace-with-collapsed-subprocess',\n    className: 'bpmn-icon-subprocess-collapsed',\n    target: {\n      type: 'bpmn:SubProcess',\n      isExpanded: false\n    }\n  }\n];\n\nexport var TRANSACTION = [\n  {\n    label: 'Sub Process',\n    actionName: 'replace-with-subprocess',\n    className: 'bpmn-icon-subprocess-expanded',\n    target: {\n      type: 'bpmn:SubProcess',\n      isExpanded: true\n    }\n  },\n  {\n    label: 'Event Sub Process',\n    actionName: 'replace-with-event-subprocess',\n    className: 'bpmn-icon-event-subprocess-expanded',\n    target: {\n      type: 'bpmn:SubProcess',\n      triggeredByEvent: true,\n      isExpanded: true\n    }\n  }\n];\n\nexport var EVENT_SUB_PROCESS = [\n  {\n    label: 'Sub Process',\n    actionName: 'replace-with-subprocess',\n    className: 'bpmn-icon-subprocess-expanded',\n    target: {\n      type: 'bpmn:SubProcess',\n      isExpanded: true\n    }\n  },\n  {\n    label: 'Transaction',\n    actionName: 'replace-with-transaction',\n    className: 'bpmn-icon-transaction',\n    target: {\n      type: 'bpmn:Transaction',\n      isExpanded: true\n    }\n  }\n];\n\nexport var TASK = [\n  {\n    label: 'Task',\n    actionName: 'replace-with-task',\n    className: 'bpmn-icon-task',\n    target: {\n      type: 'bpmn:Task'\n    }\n  },\n  {\n    label: 'Send Task',\n    actionName: 'replace-with-send-task',\n    className: 'bpmn-icon-send',\n    target: {\n      type: 'bpmn:SendTask'\n    }\n  },\n  {\n    label: 'Receive Task',\n    actionName: 'replace-with-receive-task',\n    className: 'bpmn-icon-receive',\n    target: {\n      type: 'bpmn:ReceiveTask'\n    }\n  },\n  {\n    label: 'User Task',\n    actionName: 'replace-with-user-task',\n    className: 'bpmn-icon-user',\n    target: {\n      type: 'bpmn:UserTask'\n    }\n  },\n  {\n    label: 'Manual Task',\n    actionName: 'replace-with-manual-task',\n    className: 'bpmn-icon-manual',\n    target: {\n      type: 'bpmn:ManualTask'\n    }\n  },\n  {\n    label: 'Business Rule Task',\n    actionName: 'replace-with-rule-task',\n    className: 'bpmn-icon-business-rule',\n    target: {\n      type: 'bpmn:BusinessRuleTask'\n    }\n  },\n  {\n    label: 'Service Task',\n    actionName: 'replace-with-service-task',\n    className: 'bpmn-icon-service',\n    target: {\n      type: 'bpmn:ServiceTask'\n    }\n  },\n  {\n    label: 'Script Task',\n    actionName: 'replace-with-script-task',\n    className: 'bpmn-icon-script',\n    target: {\n      type: 'bpmn:ScriptTask'\n    }\n  },\n  {\n    label: 'Call Activity',\n    actionName: 'replace-with-call-activity',\n    className: 'bpmn-icon-call-activity',\n    target: {\n      type: 'bpmn:CallActivity'\n    }\n  },\n  {\n    label: 'Sub Process (collapsed)',\n    actionName: 'replace-with-collapsed-subprocess',\n    className: 'bpmn-icon-subprocess-collapsed',\n    target: {\n      type: 'bpmn:SubProcess',\n      isExpanded: false\n    }\n  },\n  {\n    label: 'Sub Process (expanded)',\n    actionName: 'replace-with-expanded-subprocess',\n    className: 'bpmn-icon-subprocess-expanded',\n    target: {\n      type: 'bpmn:SubProcess',\n      isExpanded: true\n    }\n  }\n];\n\nexport var DATA_OBJECT_REFERENCE = [\n  {\n    label: 'Data Store Reference',\n    actionName: 'replace-with-data-store-reference',\n    className: 'bpmn-icon-data-store',\n    target: {\n      type: 'bpmn:DataStoreReference'\n    }\n  }\n];\n\nexport var DATA_STORE_REFERENCE = [\n  {\n    label: 'Data Object Reference',\n    actionName: 'replace-with-data-object-reference',\n    className: 'bpmn-icon-data-object',\n    target: {\n      type: 'bpmn:DataObjectReference'\n    }\n  }\n];\n\nexport var BOUNDARY_EVENT = [\n  {\n    label: 'Message Boundary Event',\n    actionName: 'replace-with-message-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-message',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\n    }\n  },\n  {\n    label: 'Timer Boundary Event',\n    actionName: 'replace-with-timer-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-timer',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\n    }\n  },\n  {\n    label: 'Escalation Boundary Event',\n    actionName: 'replace-with-escalation-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-escalation',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\n    }\n  },\n  {\n    label: 'Conditional Boundary Event',\n    actionName: 'replace-with-conditional-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-condition',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\n    }\n  },\n  {\n    label: 'Error Boundary Event',\n    actionName: 'replace-with-error-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-error',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:ErrorEventDefinition'\n    }\n  },\n  {\n    label: 'Cancel Boundary Event',\n    actionName: 'replace-with-cancel-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-cancel',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:CancelEventDefinition'\n    }\n  },\n  {\n    label: 'Signal Boundary Event',\n    actionName: 'replace-with-signal-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-signal',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\n    }\n  },\n  {\n    label: 'Compensation Boundary Event',\n    actionName: 'replace-with-compensation-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-compensation',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\n    }\n  },\n  {\n    label: 'Message Boundary Event (non-interrupting)',\n    actionName: 'replace-with-non-interrupting-message-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-message',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:MessageEventDefinition',\n      cancelActivity: false\n    }\n  },\n  {\n    label: 'Timer Boundary Event (non-interrupting)',\n    actionName: 'replace-with-non-interrupting-timer-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-timer',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:TimerEventDefinition',\n      cancelActivity: false\n    }\n  },\n  {\n    label: 'Escalation Boundary Event (non-interrupting)',\n    actionName: 'replace-with-non-interrupting-escalation-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-escalation',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:EscalationEventDefinition',\n      cancelActivity: false\n    }\n  },\n  {\n    label: 'Conditional Boundary Event (non-interrupting)',\n    actionName: 'replace-with-non-interrupting-conditional-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-condition',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition',\n      cancelActivity: false\n    }\n  },\n  {\n    label: 'Signal Boundary Event (non-interrupting)',\n    actionName: 'replace-with-non-interrupting-signal-boundary',\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-signal',\n    target: {\n      type: 'bpmn:BoundaryEvent',\n      eventDefinitionType: 'bpmn:SignalEventDefinition',\n      cancelActivity: false\n    }\n  }\n];\n\nexport var EVENT_SUB_PROCESS_START_EVENT = [\n  {\n    label: 'Message Start Event',\n    actionName: 'replace-with-message-start',\n    className: 'bpmn-icon-start-event-message',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\n    }\n  },\n  {\n    label: 'Timer Start Event',\n    actionName: 'replace-with-timer-start',\n    className: 'bpmn-icon-start-event-timer',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\n    }\n  },\n  {\n    label: 'Conditional Start Event',\n    actionName: 'replace-with-conditional-start',\n    className: 'bpmn-icon-start-event-condition',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\n    }\n  },\n  {\n    label: 'Signal Start Event',\n    actionName: 'replace-with-signal-start',\n    className: 'bpmn-icon-start-event-signal',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\n    }\n  },\n  {\n    label: 'Error Start Event',\n    actionName: 'replace-with-error-start',\n    className: 'bpmn-icon-start-event-error',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:ErrorEventDefinition'\n    }\n  },\n  {\n    label: 'Escalation Start Event',\n    actionName: 'replace-with-escalation-start',\n    className: 'bpmn-icon-start-event-escalation',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\n    }\n  },\n  {\n    label: 'Compensation Start Event',\n    actionName: 'replace-with-compensation-start',\n    className: 'bpmn-icon-start-event-compensation',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\n    }\n  },\n  {\n    label: 'Message Start Event (non-interrupting)',\n    actionName: 'replace-with-non-interrupting-message-start',\n    className: 'bpmn-icon-start-event-non-interrupting-message',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:MessageEventDefinition',\n      isInterrupting: false\n    }\n  },\n  {\n    label: 'Timer Start Event (non-interrupting)',\n    actionName: 'replace-with-non-interrupting-timer-start',\n    className: 'bpmn-icon-start-event-non-interrupting-timer',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:TimerEventDefinition',\n      isInterrupting: false\n    }\n  },\n  {\n    label: 'Conditional Start Event (non-interrupting)',\n    actionName: 'replace-with-non-interrupting-conditional-start',\n    className: 'bpmn-icon-start-event-non-interrupting-condition',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition',\n      isInterrupting: false\n    }\n  },\n  {\n    label: 'Signal Start Event (non-interrupting)',\n    actionName: 'replace-with-non-interrupting-signal-start',\n    className: 'bpmn-icon-start-event-non-interrupting-signal',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:SignalEventDefinition',\n      isInterrupting: false\n    }\n  },\n  {\n    label: 'Escalation Start Event (non-interrupting)',\n    actionName: 'replace-with-non-interrupting-escalation-start',\n    className: 'bpmn-icon-start-event-non-interrupting-escalation',\n    target: {\n      type: 'bpmn:StartEvent',\n      eventDefinitionType: 'bpmn:EscalationEventDefinition',\n      isInterrupting: false\n    }\n  }\n];\n\nexport var SEQUENCE_FLOW = [\n  {\n    label: 'Sequence Flow',\n    actionName: 'replace-with-sequence-flow',\n    className: 'bpmn-icon-connection'\n  },\n  {\n    label: 'Default Flow',\n    actionName: 'replace-with-default-flow',\n    className: 'bpmn-icon-default-flow'\n  },\n  {\n    label: 'Conditional Flow',\n    actionName: 'replace-with-conditional-flow',\n    className: 'bpmn-icon-conditional-flow'\n  }\n];\n\nexport var PARTICIPANT = [\n  {\n    label: 'Expanded Pool',\n    actionName: 'replace-with-expanded-pool',\n    className: 'bpmn-icon-participant',\n    target: {\n      type: 'bpmn:Participant',\n      isExpanded: true\n    }\n  },\n  {\n    label: function(element) {\n      var label = 'Empty Pool';\n\n      if (element.children && element.children.length) {\n        label += ' (removes content)';\n      }\n\n      return label;\n    },\n    actionName: 'replace-with-collapsed-pool',\n\n    // TODO(@janstuemmel): maybe design new icon\n    className: 'bpmn-icon-lane',\n    target: {\n      type: 'bpmn:Participant',\n      isExpanded: false\n    }\n  }\n];\n","import CopyPasteModule from '../copy-paste';\nimport ReplaceModule from 'diagram-js/lib/features/replace';\nimport SelectionModule from 'diagram-js/lib/features/selection';\n\nimport BpmnReplace from './BpmnReplace';\n\nexport default {\n  __depends__: [\n    CopyPasteModule,\n    ReplaceModule,\n    SelectionModule\n  ],\n  bpmnReplace: [ 'type', BpmnReplace ]\n};\n","import {\n  every,\n  find,\n  forEach,\n  some\n} from 'min-dash';\n\nimport inherits from 'inherits';\n\nimport {\n  is,\n  getBusinessObject\n} from '../../util/ModelUtil';\n\nimport {\n  getParent,\n  isAny\n} from '../modeling/util/ModelingUtil';\n\nimport {\n  isLabel\n} from '../../util/LabelUtil';\n\nimport {\n  isExpanded,\n  isEventSubProcess,\n  isInterrupting,\n  hasErrorEventDefinition,\n  hasEscalationEventDefinition,\n  hasCompensateEventDefinition\n} from '../../util/DiUtil';\n\nimport RuleProvider from 'diagram-js/lib/features/rules/RuleProvider';\n\nimport {\n  getBoundaryAttachment as isBoundaryAttachment\n} from '../snapping/BpmnSnappingUtil';\n\n\n/**\n * BPMN specific modeling rule\n */\nexport default function BpmnRules(eventBus) {\n  RuleProvider.call(this, eventBus);\n}\n\ninherits(BpmnRules, RuleProvider);\n\nBpmnRules.$inject = [ 'eventBus' ];\n\nBpmnRules.prototype.init = function() {\n\n  this.addRule('connection.start', function(context) {\n    var source = context.source;\n\n    return canStartConnection(source);\n  });\n\n  this.addRule('connection.create', function(context) {\n    var source = context.source,\n        target = context.target,\n        hints = context.hints || {},\n        targetParent = hints.targetParent,\n        targetAttach = hints.targetAttach;\n\n    // don't allow incoming connections on\n    // newly created boundary events\n    // to boundary events\n    if (targetAttach) {\n      return false;\n    }\n\n    // temporarily set target parent for scoping\n    // checks to work\n    if (targetParent) {\n      target.parent = targetParent;\n    }\n\n    try {\n      return canConnect(source, target);\n    } finally {\n\n      // unset temporary target parent\n      if (targetParent) {\n        target.parent = null;\n      }\n    }\n  });\n\n  this.addRule('connection.reconnect', function(context) {\n\n    var connection = context.connection,\n        source = context.source,\n        target = context.target;\n\n    return canConnect(source, target, connection);\n  });\n\n  this.addRule('connection.updateWaypoints', function(context) {\n    return {\n      type: context.connection.type\n    };\n  });\n\n  this.addRule('shape.resize', function(context) {\n\n    var shape = context.shape,\n        newBounds = context.newBounds;\n\n    return canResize(shape, newBounds);\n  });\n\n  this.addRule('elements.create', function(context) {\n    var elements = context.elements,\n        position = context.position,\n        target = context.target;\n\n    if (isConnection(target) && !canInsert(elements, target, position)) {\n      return false;\n    }\n\n    return every(elements, function(element) {\n      if (isConnection(element)) {\n        return canConnect(element.source, element.target, element);\n      }\n\n      if (element.host) {\n        return canAttach(element, element.host, null, position);\n      }\n\n      return canCreate(element, target, null, position);\n    });\n  });\n\n  this.addRule('elements.move', function(context) {\n\n    var target = context.target,\n        shapes = context.shapes,\n        position = context.position;\n\n    return canAttach(shapes, target, null, position) ||\n           canReplace(shapes, target, position) ||\n           canMove(shapes, target, position) ||\n           canInsert(shapes, target, position);\n  });\n\n  this.addRule('shape.create', function(context) {\n    return canCreate(\n      context.shape,\n      context.target,\n      context.source,\n      context.position\n    );\n  });\n\n  this.addRule('shape.attach', function(context) {\n\n    return canAttach(\n      context.shape,\n      context.target,\n      null,\n      context.position\n    );\n  });\n\n  this.addRule('element.copy', function(context) {\n    var element = context.element,\n        elements = context.elements;\n\n    return canCopy(elements, element);\n  });\n};\n\nBpmnRules.prototype.canConnectMessageFlow = canConnectMessageFlow;\n\nBpmnRules.prototype.canConnectSequenceFlow = canConnectSequenceFlow;\n\nBpmnRules.prototype.canConnectDataAssociation = canConnectDataAssociation;\n\nBpmnRules.prototype.canConnectAssociation = canConnectAssociation;\n\nBpmnRules.prototype.canMove = canMove;\n\nBpmnRules.prototype.canAttach = canAttach;\n\nBpmnRules.prototype.canReplace = canReplace;\n\nBpmnRules.prototype.canDrop = canDrop;\n\nBpmnRules.prototype.canInsert = canInsert;\n\nBpmnRules.prototype.canCreate = canCreate;\n\nBpmnRules.prototype.canConnect = canConnect;\n\nBpmnRules.prototype.canResize = canResize;\n\nBpmnRules.prototype.canCopy = canCopy;\n\n/**\n * Utility functions for rule checking\n */\n\n/**\n * Checks if given element can be used for starting connection.\n *\n * @param  {Element} source\n * @return {boolean}\n */\nfunction canStartConnection(element) {\n  if (nonExistingOrLabel(element)) {\n    return null;\n  }\n\n  return isAny(element, [\n    'bpmn:FlowNode',\n    'bpmn:InteractionNode',\n    'bpmn:DataObjectReference',\n    'bpmn:DataStoreReference',\n    'bpmn:Group',\n    'bpmn:TextAnnotation'\n  ]);\n}\n\nfunction nonExistingOrLabel(element) {\n  return !element || isLabel(element);\n}\n\nfunction isSame(a, b) {\n  return a === b;\n}\n\nfunction getOrganizationalParent(element) {\n\n  do {\n    if (is(element, 'bpmn:Process')) {\n      return getBusinessObject(element);\n    }\n\n    if (is(element, 'bpmn:Participant')) {\n      return (\n        getBusinessObject(element).processRef ||\n        getBusinessObject(element)\n      );\n    }\n  } while ((element = element.parent));\n\n}\n\nfunction isTextAnnotation(element) {\n  return is(element, 'bpmn:TextAnnotation');\n}\n\nfunction isGroup(element) {\n  return is(element, 'bpmn:Group') && !element.labelTarget;\n}\n\nfunction isCompensationBoundary(element) {\n  return is(element, 'bpmn:BoundaryEvent') &&\n         hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\n}\n\nfunction isForCompensation(e) {\n  return getBusinessObject(e).isForCompensation;\n}\n\nfunction isSameOrganization(a, b) {\n  var parentA = getOrganizationalParent(a),\n      parentB = getOrganizationalParent(b);\n\n  return parentA === parentB;\n}\n\nfunction isMessageFlowSource(element) {\n  return (\n    is(element, 'bpmn:InteractionNode') &&\n    !is(element, 'bpmn:BoundaryEvent') && (\n      !is(element, 'bpmn:Event') || (\n        is(element, 'bpmn:ThrowEvent') &&\n        hasEventDefinitionOrNone(element, 'bpmn:MessageEventDefinition')\n      )\n    )\n  );\n}\n\nfunction isMessageFlowTarget(element) {\n  return (\n    is(element, 'bpmn:InteractionNode') &&\n    !isForCompensation(element) && (\n      !is(element, 'bpmn:Event') || (\n        is(element, 'bpmn:CatchEvent') &&\n        hasEventDefinitionOrNone(element, 'bpmn:MessageEventDefinition')\n      )\n    ) && !(\n      is(element, 'bpmn:BoundaryEvent') &&\n      !hasEventDefinition(element, 'bpmn:MessageEventDefinition')\n    )\n  );\n}\n\nfunction getScopeParent(element) {\n\n  var parent = element;\n\n  while ((parent = parent.parent)) {\n\n    if (is(parent, 'bpmn:FlowElementsContainer')) {\n      return getBusinessObject(parent);\n    }\n\n    if (is(parent, 'bpmn:Participant')) {\n      return getBusinessObject(parent).processRef;\n    }\n  }\n\n  return null;\n}\n\nfunction isSameScope(a, b) {\n  var scopeParentA = getScopeParent(a),\n      scopeParentB = getScopeParent(b);\n\n  return scopeParentA === scopeParentB;\n}\n\nfunction hasEventDefinition(element, eventDefinition) {\n  var bo = getBusinessObject(element);\n\n  return !!find(bo.eventDefinitions || [], function(definition) {\n    return is(definition, eventDefinition);\n  });\n}\n\nfunction hasEventDefinitionOrNone(element, eventDefinition) {\n  var bo = getBusinessObject(element);\n\n  return (bo.eventDefinitions || []).every(function(definition) {\n    return is(definition, eventDefinition);\n  });\n}\n\nfunction isSequenceFlowSource(element) {\n  return (\n    is(element, 'bpmn:FlowNode') &&\n    !is(element, 'bpmn:EndEvent') &&\n    !isEventSubProcess(element) &&\n    !(is(element, 'bpmn:IntermediateThrowEvent') &&\n      hasEventDefinition(element, 'bpmn:LinkEventDefinition')\n    ) &&\n    !isCompensationBoundary(element) &&\n    !isForCompensation(element)\n  );\n}\n\nfunction isSequenceFlowTarget(element) {\n  return (\n    is(element, 'bpmn:FlowNode') &&\n    !is(element, 'bpmn:StartEvent') &&\n    !is(element, 'bpmn:BoundaryEvent') &&\n    !isEventSubProcess(element) &&\n    !(is(element, 'bpmn:IntermediateCatchEvent') &&\n      hasEventDefinition(element, 'bpmn:LinkEventDefinition')\n    ) &&\n    !isForCompensation(element)\n  );\n}\n\nfunction isEventBasedTarget(element) {\n  return (\n    is(element, 'bpmn:ReceiveTask') || (\n      is(element, 'bpmn:IntermediateCatchEvent') && (\n        hasEventDefinition(element, 'bpmn:MessageEventDefinition') ||\n        hasEventDefinition(element, 'bpmn:TimerEventDefinition') ||\n        hasEventDefinition(element, 'bpmn:ConditionalEventDefinition') ||\n        hasEventDefinition(element, 'bpmn:SignalEventDefinition')\n      )\n    )\n  );\n}\n\nfunction isConnection(element) {\n  return element.waypoints;\n}\n\nfunction getParents(element) {\n\n  var parents = [];\n\n  while (element) {\n    element = element.parent;\n\n    if (element) {\n      parents.push(element);\n    }\n  }\n\n  return parents;\n}\n\nfunction isParent(possibleParent, element) {\n  var allParents = getParents(element);\n  return allParents.indexOf(possibleParent) !== -1;\n}\n\nfunction canConnect(source, target, connection) {\n\n  if (nonExistingOrLabel(source) || nonExistingOrLabel(target)) {\n    return null;\n  }\n\n  if (!is(connection, 'bpmn:DataAssociation')) {\n\n    if (canConnectMessageFlow(source, target)) {\n      return { type: 'bpmn:MessageFlow' };\n    }\n\n    if (canConnectSequenceFlow(source, target)) {\n      return { type: 'bpmn:SequenceFlow' };\n    }\n  }\n\n  var connectDataAssociation = canConnectDataAssociation(source, target);\n\n  if (connectDataAssociation) {\n    return connectDataAssociation;\n  }\n\n  if (isCompensationBoundary(source) && isForCompensation(target)) {\n    return {\n      type: 'bpmn:Association',\n      associationDirection: 'One'\n    };\n  }\n\n  if (canConnectAssociation(source, target)) {\n\n    return {\n      type: 'bpmn:Association'\n    };\n  }\n\n  return false;\n}\n\n/**\n * Can an element be dropped into the target element\n *\n * @return {boolean}\n */\nfunction canDrop(element, target, position) {\n\n  // can move labels and groups everywhere\n  if (isLabel(element) || isGroup(element)) {\n    return true;\n  }\n\n\n  // disallow to create elements on collapsed pools\n  if (is(target, 'bpmn:Participant') && !isExpanded(target)) {\n    return false;\n  }\n\n  // allow to create new participants on\n  // existing collaboration and process diagrams\n  if (is(element, 'bpmn:Participant')) {\n    return is(target, 'bpmn:Process') || is(target, 'bpmn:Collaboration');\n  }\n\n  // allow moving DataInput / DataOutput within its original container only\n  if (isAny(element, [ 'bpmn:DataInput', 'bpmn:DataOutput' ])) {\n\n    if (element.parent) {\n      return target === element.parent;\n    }\n  }\n\n  // allow creating lanes on participants and other lanes only\n  if (is(element, 'bpmn:Lane')) {\n    return is(target, 'bpmn:Participant') || is(target, 'bpmn:Lane');\n  }\n\n  // disallow dropping boundary events which cannot replace with intermediate event\n  if (is(element, 'bpmn:BoundaryEvent') && !isDroppableBoundaryEvent(element)) {\n    return false;\n  }\n\n  // drop flow elements onto flow element containers\n  // and participants\n  if (is(element, 'bpmn:FlowElement') && !is(element, 'bpmn:DataStoreReference')) {\n    if (is(target, 'bpmn:FlowElementsContainer')) {\n      return isExpanded(target);\n    }\n\n    return isAny(target, [ 'bpmn:Participant', 'bpmn:Lane' ]);\n  }\n\n  // disallow dropping data store reference if there is no process to append to\n  if (is(element, 'bpmn:DataStoreReference') && is(target, 'bpmn:Collaboration')) {\n    return some(getBusinessObject(target).get('participants'), function(participant) {\n      return !!participant.get('processRef');\n    });\n  }\n\n  // account for the fact that data associations are always\n  // rendered and moved to top (Process or Collaboration level)\n  //\n  // artifacts may be placed wherever, too\n  if (isAny(element, [ 'bpmn:Artifact', 'bpmn:DataAssociation', 'bpmn:DataStoreReference' ])) {\n    return isAny(target, [\n      'bpmn:Collaboration',\n      'bpmn:Lane',\n      'bpmn:Participant',\n      'bpmn:Process',\n      'bpmn:SubProcess' ]);\n  }\n\n  if (is(element, 'bpmn:MessageFlow')) {\n    return is(target, 'bpmn:Collaboration')\n      || element.source.parent == target\n      || element.target.parent == target;\n  }\n\n  return false;\n}\n\nfunction isDroppableBoundaryEvent(event) {\n  return getBusinessObject(event).cancelActivity && (\n    hasNoEventDefinition(event) || hasCommonBoundaryIntermediateEventDefinition(event)\n  );\n}\n\nfunction isBoundaryEvent(element) {\n  return !isLabel(element) && is(element, 'bpmn:BoundaryEvent');\n}\n\nfunction isLane(element) {\n  return is(element, 'bpmn:Lane');\n}\n\n/**\n * We treat IntermediateThrowEvents as boundary events during create,\n * this must be reflected in the rules.\n */\nfunction isBoundaryCandidate(element) {\n  if (isBoundaryEvent(element)) {\n    return true;\n  }\n\n  if (is(element, 'bpmn:IntermediateThrowEvent') && hasNoEventDefinition(element)) {\n    return true;\n  }\n\n  return (\n    is(element, 'bpmn:IntermediateCatchEvent') &&\n    hasCommonBoundaryIntermediateEventDefinition(element)\n  );\n}\n\nfunction hasNoEventDefinition(element) {\n  var bo = getBusinessObject(element);\n\n  return bo && !(bo.eventDefinitions && bo.eventDefinitions.length);\n}\n\nfunction hasCommonBoundaryIntermediateEventDefinition(element) {\n  return hasOneOfEventDefinitions(element, [\n    'bpmn:MessageEventDefinition',\n    'bpmn:TimerEventDefinition',\n    'bpmn:SignalEventDefinition',\n    'bpmn:ConditionalEventDefinition'\n  ]);\n}\n\nfunction hasOneOfEventDefinitions(element, eventDefinitions) {\n  return eventDefinitions.some(function(definition) {\n    return hasEventDefinition(element, definition);\n  });\n}\n\nfunction isReceiveTaskAfterEventBasedGateway(element) {\n  return (\n    is(element, 'bpmn:ReceiveTask') &&\n    find(element.incoming, function(incoming) {\n      return is(incoming.source, 'bpmn:EventBasedGateway');\n    })\n  );\n}\n\n\nfunction canAttach(elements, target, source, position) {\n\n  if (!Array.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  // only (re-)attach one element at a time\n  if (elements.length !== 1) {\n    return false;\n  }\n\n  var element = elements[0];\n\n  // do not attach labels\n  if (isLabel(element)) {\n    return false;\n  }\n\n  // only handle boundary events\n  if (!isBoundaryCandidate(element)) {\n    return false;\n  }\n\n  // disallow drop on event sub processes\n  if (isEventSubProcess(target)) {\n    return false;\n  }\n\n  // only allow drop on non compensation activities\n  if (!is(target, 'bpmn:Activity') || isForCompensation(target)) {\n    return false;\n  }\n\n  // only attach to subprocess border\n  if (position && !isBoundaryAttachment(position, target)) {\n    return false;\n  }\n\n  // do not attach on receive tasks after event based gateways\n  if (isReceiveTaskAfterEventBasedGateway(target)) {\n    return false;\n  }\n\n  return 'attach';\n}\n\n\n/**\n * Defines how to replace elements for a given target.\n *\n * Returns an array containing all elements which will be replaced.\n *\n * @example\n *\n *  [{ id: 'IntermediateEvent_2',\n *     type: 'bpmn:StartEvent'\n *   },\n *   { id: 'IntermediateEvent_5',\n *     type: 'bpmn:EndEvent'\n *   }]\n *\n * @param  {Array} elements\n * @param  {Object} target\n *\n * @return {Object} an object containing all elements which have to be replaced\n */\nfunction canReplace(elements, target, position) {\n\n  if (!target) {\n    return false;\n  }\n\n  var canExecute = {\n    replacements: []\n  };\n\n  forEach(elements, function(element) {\n\n    if (!isEventSubProcess(target)) {\n\n      if (is(element, 'bpmn:StartEvent') &&\n          element.type !== 'label' &&\n          canDrop(element, target)) {\n\n        // replace a non-interrupting start event by a blank interrupting start event\n        // when the target is not an event sub process\n        if (!isInterrupting(element)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:StartEvent'\n          });\n        }\n\n        // replace an error/escalation/compensate start event by a blank interrupting start event\n        // when the target is not an event sub process\n        if (hasErrorEventDefinition(element) ||\n            hasEscalationEventDefinition(element) ||\n            hasCompensateEventDefinition(element)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:StartEvent'\n          });\n        }\n\n        // replace a typed start event by a blank interrupting start event\n        // when the target is a sub process but not an event sub process\n        if (hasOneOfEventDefinitions(element,\n          [\n            'bpmn:MessageEventDefinition',\n            'bpmn:TimerEventDefinition',\n            'bpmn:SignalEventDefinition',\n            'bpmn:ConditionalEventDefinition'\n          ]) &&\n            is(target, 'bpmn:SubProcess')) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:StartEvent'\n          });\n        }\n      }\n    }\n\n    if (!is(target, 'bpmn:Transaction')) {\n      if (hasEventDefinition(element, 'bpmn:CancelEventDefinition') &&\n          element.type !== 'label') {\n\n        if (is(element, 'bpmn:EndEvent') && canDrop(element, target)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:EndEvent'\n          });\n        }\n\n        if (is(element, 'bpmn:BoundaryEvent') && canAttach(element, target, null, position)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:BoundaryEvent'\n          });\n        }\n      }\n    }\n  });\n\n  return canExecute.replacements.length ? canExecute : false;\n}\n\nfunction canMove(elements, target) {\n\n  // do not move selection containing lanes\n  if (some(elements, isLane)) {\n    return false;\n  }\n\n  // allow default move check to start move operation\n  if (!target) {\n    return true;\n  }\n\n  return elements.every(function(element) {\n    return canDrop(element, target);\n  });\n}\n\nfunction canCreate(shape, target, source, position) {\n\n  if (!target) {\n    return false;\n  }\n\n  if (isLabel(shape) || isGroup(shape)) {\n    return true;\n  }\n\n  if (isSame(source, target)) {\n    return false;\n  }\n\n  // ensure we do not drop the element\n  // into source\n  if (source && isParent(source, target)) {\n    return false;\n  }\n\n  return canDrop(shape, target, position) || canInsert(shape, target, position);\n}\n\nfunction canResize(shape, newBounds) {\n  if (is(shape, 'bpmn:SubProcess')) {\n    return (\n      isExpanded(shape) && (\n        !newBounds || (newBounds.width >= 100 && newBounds.height >= 80)\n      )\n    );\n  }\n\n  if (is(shape, 'bpmn:Lane')) {\n    return !newBounds || (newBounds.width >= 130 && newBounds.height >= 60);\n  }\n\n  if (is(shape, 'bpmn:Participant')) {\n    return !newBounds || (newBounds.width >= 250 && newBounds.height >= 50);\n  }\n\n  if (isTextAnnotation(shape)) {\n    return true;\n  }\n\n  if (isGroup(shape)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Check, whether one side of the relationship\n * is a text annotation.\n */\nfunction isOneTextAnnotation(source, target) {\n\n  var sourceTextAnnotation = isTextAnnotation(source),\n      targetTextAnnotation = isTextAnnotation(target);\n\n  return (\n    (sourceTextAnnotation || targetTextAnnotation) &&\n    (sourceTextAnnotation !== targetTextAnnotation)\n  );\n}\n\n\nfunction canConnectAssociation(source, target) {\n\n  // do not connect connections\n  if (isConnection(source) || isConnection(target)) {\n    return false;\n  }\n\n  // compensation boundary events are exception\n  if (isCompensationBoundary(source) && isForCompensation(target)) {\n    return true;\n  }\n\n  // don't connect parent <-> child\n  if (isParent(target, source) || isParent(source, target)) {\n    return false;\n  }\n\n  // allow connection of associations between <!TextAnnotation> and <TextAnnotation>\n  if (isOneTextAnnotation(source, target)) {\n    return true;\n  }\n\n  // can connect associations where we can connect\n  // data associations, too (!)\n  return !!canConnectDataAssociation(source, target);\n}\n\nfunction canConnectMessageFlow(source, target) {\n\n  // during connect user might move mouse out of canvas\n  // https://github.com/bpmn-io/bpmn-js/issues/1033\n  if (getRootElement(source) && !getRootElement(target)) {\n    return false;\n  }\n\n  return (\n    isMessageFlowSource(source) &&\n    isMessageFlowTarget(target) &&\n    !isSameOrganization(source, target)\n  );\n}\n\nfunction canConnectSequenceFlow(source, target) {\n\n  if (\n    isEventBasedTarget(target) &&\n    target.incoming.length > 0 &&\n    areOutgoingEventBasedGatewayConnections(target.incoming) &&\n    !is(source, 'bpmn:EventBasedGateway')\n  ) {\n    return false;\n  }\n\n  return isSequenceFlowSource(source) &&\n         isSequenceFlowTarget(target) &&\n         isSameScope(source, target) &&\n         !(is(source, 'bpmn:EventBasedGateway') && !isEventBasedTarget(target));\n}\n\n\nfunction canConnectDataAssociation(source, target) {\n\n  if (isAny(source, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ]) &&\n      isAny(target, [ 'bpmn:Activity', 'bpmn:ThrowEvent' ])) {\n    return { type: 'bpmn:DataInputAssociation' };\n  }\n\n  if (isAny(target, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ]) &&\n      isAny(source, [ 'bpmn:Activity', 'bpmn:CatchEvent' ])) {\n    return { type: 'bpmn:DataOutputAssociation' };\n  }\n\n  return false;\n}\n\nfunction canInsert(shape, flow, position) {\n\n  if (!flow) {\n    return false;\n  }\n\n  if (Array.isArray(shape)) {\n    if (shape.length !== 1) {\n      return false;\n    }\n\n    shape = shape[0];\n  }\n\n  if (flow.source === shape ||\n      flow.target === shape) {\n    return false;\n  }\n\n  // return true if we can drop on the\n  // underlying flow parent\n  //\n  // at this point we are not really able to talk\n  // about connection rules (yet)\n\n  return (\n    isAny(flow, [ 'bpmn:SequenceFlow', 'bpmn:MessageFlow' ]) &&\n    !isLabel(flow) &&\n    is(shape, 'bpmn:FlowNode') &&\n    !is(shape, 'bpmn:BoundaryEvent') &&\n    canDrop(shape, flow.parent, position));\n}\n\nfunction includes(elements, element) {\n  return (elements && element) && elements.indexOf(element) !== -1;\n}\n\nfunction canCopy(elements, element) {\n  if (isLabel(element)) {\n    return true;\n  }\n\n  if (is(element, 'bpmn:Lane') && !includes(elements, element.parent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isOutgoingEventBasedGatewayConnection(connection) {\n\n  if (connection && connection.source) {\n    return is(connection.source, 'bpmn:EventBasedGateway');\n  }\n}\n\nfunction areOutgoingEventBasedGatewayConnections(connections) {\n  connections = connections || [];\n\n  return connections.some(isOutgoingEventBasedGatewayConnection);\n}\n\nfunction getRootElement(element) {\n  return getParent(element, 'bpmn:Process') || getParent(element, 'bpmn:Collaboration');\n}\n","import RulesModule from 'diagram-js/lib/features/rules';\n\nimport BpmnRules from './BpmnRules';\n\nexport default {\n  __depends__: [\n    RulesModule\n  ],\n  __init__: [ 'bpmnRules' ],\n  bpmnRules: [ 'type', BpmnRules ]\n};\n","import {\n  map,\n  filter,\n  sortBy\n} from 'min-dash';\n\nimport {\n  getLabel\n} from '../label-editing/LabelUtil';\n\n\n/**\n * Provides ability to search through BPMN elements\n */\nexport default function BpmnSearchProvider(elementRegistry, searchPad, canvas) {\n\n  this._elementRegistry = elementRegistry;\n  this._canvas = canvas;\n\n  searchPad.registerProvider(this);\n}\n\nBpmnSearchProvider.$inject = [\n  'elementRegistry',\n  'searchPad',\n  'canvas'\n];\n\n\n/**\n * Finds all elements that match given pattern\n *\n * <Result> :\n *  {\n *    primaryTokens: <Array<Token>>,\n *    secondaryTokens: <Array<Token>>,\n *    element: <Element>\n *  }\n *\n * <Token> :\n *  {\n *    normal|matched: <string>\n *  }\n *\n * @param  {string} pattern\n * @return {Array<Result>}\n */\nBpmnSearchProvider.prototype.find = function(pattern) {\n  var rootElement = this._canvas.getRootElement();\n\n  var elements = this._elementRegistry.filter(function(element) {\n    if (element.labelTarget) {\n      return false;\n    }\n    return true;\n  });\n\n  // do not include root element\n  elements = filter(elements, function(element) {\n    return element !== rootElement;\n  });\n\n  elements = map(elements, function(element) {\n    return {\n      primaryTokens: matchAndSplit(getLabel(element), pattern),\n      secondaryTokens: matchAndSplit(element.id, pattern),\n      element: element\n    };\n  });\n\n  // exclude non-matched elements\n  elements = filter(elements, function(element) {\n    return hasMatched(element.primaryTokens) || hasMatched(element.secondaryTokens);\n  });\n\n  elements = sortBy(elements, function(element) {\n    return getLabel(element.element) + element.element.id;\n  });\n\n  return elements;\n};\n\n\nfunction hasMatched(tokens) {\n  var matched = filter(tokens, function(t) {\n    return !!t.matched;\n  });\n\n  return matched.length > 0;\n}\n\n\nfunction matchAndSplit(text, pattern) {\n  var tokens = [],\n      originalText = text;\n\n  if (!text) {\n    return tokens;\n  }\n\n  text = text.toLowerCase();\n  pattern = pattern.toLowerCase();\n\n  var i = text.indexOf(pattern);\n\n  if (i > -1) {\n    if (i !== 0) {\n      tokens.push({\n        normal: originalText.substr(0, i)\n      });\n    }\n\n    tokens.push({\n      matched: originalText.substr(i, pattern.length)\n    });\n\n    if (pattern.length + i < text.length) {\n      tokens.push({\n        normal: originalText.substr(pattern.length + i, text.length)\n      });\n    }\n  } else {\n    tokens.push({\n      normal: originalText\n    });\n  }\n\n  return tokens;\n}","import SearchPadModule from 'diagram-js/lib/features/search-pad';\n\nimport BpmnSearchProvider from './BpmnSearchProvider';\n\n\nexport default {\n  __depends__: [\n    SearchPadModule\n  ],\n  __init__: [ 'bpmnSearch'],\n  bpmnSearch: [ 'type', BpmnSearchProvider ]\n};\n","import {\r\n  mid,\r\n  setSnapped\r\n} from 'diagram-js/lib/features/snapping/SnapUtil';\r\n\r\nimport { isCmd } from 'diagram-js/lib/features/keyboard/KeyboardUtil';\r\n\r\nimport {\r\n  getOrientation\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport { is } from '../../util/ModelUtil';\r\n\r\nimport { isAny } from '../modeling/util/ModelingUtil';\r\n\r\nimport { some } from 'min-dash';\r\n\r\nvar HIGHER_PRIORITY = 1250;\r\n\r\nvar BOUNDARY_TO_HOST_THRESHOLD = 40;\r\n\r\nvar TARGET_BOUNDS_PADDING = 20,\r\n    TASK_BOUNDS_PADDING = 10;\r\n\r\nvar TARGET_CENTER_PADDING = 20;\r\n\r\nvar AXES = [ 'x', 'y' ];\r\n\r\nvar abs = Math.abs;\r\n\r\n/**\r\n * Snap during connect.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nexport default function BpmnConnectSnapping(eventBus) {\r\n  eventBus.on([\r\n    'connect.hover',\r\n    'connect.move',\r\n    'connect.end',\r\n  ], HIGHER_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        canExecute = context.canExecute,\r\n        start = context.start,\r\n        hover = context.hover,\r\n        source = context.source,\r\n        target = context.target;\r\n\r\n    // do NOT snap on CMD\r\n    if (event.originalEvent && isCmd(event.originalEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (!context.initialConnectionStart) {\r\n      context.initialConnectionStart = context.connectionStart;\r\n    }\r\n\r\n    // snap hover\r\n    if (canExecute && hover) {\r\n      snapToShape(event, hover, getTargetBoundsPadding(hover));\r\n    }\r\n\r\n    if (hover && isAnyType(canExecute, [\r\n      'bpmn:Association',\r\n      'bpmn:DataInputAssociation',\r\n      'bpmn:DataOutputAssociation',\r\n      'bpmn:SequenceFlow'\r\n    ])) {\r\n      context.connectionStart = mid(start);\r\n\r\n      // snap hover\r\n      if (isAny(hover, [ 'bpmn:Event', 'bpmn:Gateway' ])) {\r\n        snapToPosition(event, mid(hover));\r\n      }\r\n\r\n      // snap hover\r\n      if (isAny(hover, [ 'bpmn:Task', 'bpmn:SubProcess' ])) {\r\n        snapToTargetMid(event, hover);\r\n      }\r\n\r\n      // snap source and target\r\n      if (is(source, 'bpmn:BoundaryEvent') && target === source.host) {\r\n        snapBoundaryEventLoop(event);\r\n      }\r\n\r\n    } else if (isType(canExecute, 'bpmn:MessageFlow')) {\r\n\r\n      if (is(start, 'bpmn:Event')) {\r\n\r\n        // snap start\r\n        context.connectionStart = mid(start);\r\n      }\r\n\r\n      if (is(hover, 'bpmn:Event')) {\r\n\r\n        // snap hover\r\n        snapToPosition(event, mid(hover));\r\n      }\r\n\r\n    } else {\r\n\r\n      // un-snap source\r\n      context.connectionStart = context.initialConnectionStart;\r\n    }\r\n  });\r\n}\r\n\r\nBpmnConnectSnapping.$inject = [ 'eventBus' ];\r\n\r\n\r\n// helpers //////////\r\n\r\n// snap to target if event in target\r\nfunction snapToShape(event, target, padding) {\r\n  AXES.forEach(function(axis) {\r\n    var dimensionForAxis = getDimensionForAxis(axis, target);\r\n\r\n    if (event[ axis ] < target[ axis ] + padding) {\r\n      setSnapped(event, axis, target[ axis ] + padding);\r\n    } else if (event[ axis ] > target[ axis ] + dimensionForAxis - padding) {\r\n      setSnapped(event, axis, target[ axis ] + dimensionForAxis - padding);\r\n    }\r\n  });\r\n}\r\n\r\n// snap to target mid if event in target mid\r\nfunction snapToTargetMid(event, target) {\r\n  var targetMid = mid(target);\r\n\r\n  AXES.forEach(function(axis) {\r\n    if (isMid(event, target, axis)) {\r\n      setSnapped(event, axis, targetMid[ axis ]);\r\n    }\r\n  });\r\n}\r\n\r\n// snap to prevent loop overlapping boundary event\r\nfunction snapBoundaryEventLoop(event) {\r\n  var context = event.context,\r\n      source = context.source,\r\n      target = context.target;\r\n\r\n  if (isReverse(context)) {\r\n    return;\r\n  }\r\n\r\n  var sourceMid = mid(source),\r\n      orientation = getOrientation(sourceMid, target, -10),\r\n      axes = [];\r\n\r\n  if (/top|bottom/.test(orientation)) {\r\n    axes.push('x');\r\n  }\r\n\r\n  if (/left|right/.test(orientation)) {\r\n    axes.push('y');\r\n  }\r\n\r\n  axes.forEach(function(axis) {\r\n    var coordinate = event[ axis ], newCoordinate;\r\n\r\n    if (abs(coordinate - sourceMid[ axis ]) < BOUNDARY_TO_HOST_THRESHOLD) {\r\n      if (coordinate > sourceMid[ axis ]) {\r\n        newCoordinate = sourceMid[ axis ] + BOUNDARY_TO_HOST_THRESHOLD;\r\n      }\r\n      else {\r\n        newCoordinate = sourceMid[ axis ] - BOUNDARY_TO_HOST_THRESHOLD;\r\n      }\r\n\r\n      setSnapped(event, axis, newCoordinate);\r\n    }\r\n  });\r\n}\r\n\r\nfunction snapToPosition(event, position) {\r\n  setSnapped(event, 'x', position.x);\r\n  setSnapped(event, 'y', position.y);\r\n}\r\n\r\nfunction isType(attrs, type) {\r\n  return attrs && attrs.type === type;\r\n}\r\n\r\nfunction isAnyType(attrs, types) {\r\n  return some(types, function(type) {\r\n    return isType(attrs, type);\r\n  });\r\n}\r\n\r\nfunction getDimensionForAxis(axis, element) {\r\n  return axis === 'x' ? element.width : element.height;\r\n}\r\n\r\nfunction getTargetBoundsPadding(target) {\r\n  if (is(target, 'bpmn:Task')) {\r\n    return TASK_BOUNDS_PADDING;\r\n  } else {\r\n    return TARGET_BOUNDS_PADDING;\r\n  }\r\n}\r\n\r\nfunction isMid(event, target, axis) {\r\n  return event[ axis ] > target[ axis ] + TARGET_CENTER_PADDING\r\n    && event[ axis ] < target[ axis ] + getDimensionForAxis(axis, target) - TARGET_CENTER_PADDING;\r\n}\r\n\r\nfunction isReverse(context) {\r\n  var hover = context.hover,\r\n      source = context.source;\r\n\r\n  return hover && source && hover === source;\r\n}","import inherits from 'inherits';\n\nimport CreateMoveSnapping from 'diagram-js/lib/features/snapping/CreateMoveSnapping';\n\nimport {\n  isSnapped,\n  setSnapped,\n  topLeft,\n  bottomRight\n} from 'diagram-js/lib/features/snapping/SnapUtil';\n\nimport { isExpanded } from '../../util/DiUtil';\n\nimport { is } from '../../util/ModelUtil';\n\nimport {\n  asTRBL,\n  getMid\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport { getBoundaryAttachment } from './BpmnSnappingUtil';\n\nimport { forEach } from 'min-dash';\n\nvar HIGH_PRIORITY = 1500;\n\n\n/**\n * Snap during create and move.\n *\n * @param {EventBus} eventBus\n * @param {Injector} injector\n */\nexport default function BpmnCreateMoveSnapping(eventBus, injector) {\n  injector.invoke(CreateMoveSnapping, this);\n\n  // creating first participant\n  eventBus.on([ 'create.move', 'create.end' ], HIGH_PRIORITY, setSnappedIfConstrained);\n\n  // snap boundary events\n  eventBus.on([\n    'create.move',\n    'create.end',\n    'shape.move.move',\n    'shape.move.end'\n  ], HIGH_PRIORITY, function(event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        target = context.target;\n\n    var canAttach = canExecute && (canExecute === 'attach' || canExecute.attach);\n\n    if (canAttach && !isSnapped(event)) {\n      snapBoundaryEvent(event, target);\n    }\n  });\n}\n\ninherits(BpmnCreateMoveSnapping, CreateMoveSnapping);\n\nBpmnCreateMoveSnapping.$inject = [\n  'eventBus',\n  'injector'\n];\n\nBpmnCreateMoveSnapping.prototype.initSnap = function(event) {\n  var snapContext = CreateMoveSnapping.prototype.initSnap.call(this, event);\n\n  var shape = event.shape;\n\n  var isMove = !!this._elementRegistry.get(shape.id);\n\n  // snap to docking points\n  forEach(shape.outgoing, function(connection) {\n    var docking = connection.waypoints[0];\n\n    docking = docking.original || docking;\n\n    snapContext.setSnapOrigin(connection.id + '-docking', getDockingSnapOrigin(docking, isMove, event));\n  });\n\n  forEach(shape.incoming, function(connection) {\n    var docking = connection.waypoints[connection.waypoints.length - 1];\n\n    docking = docking.original || docking;\n\n    snapContext.setSnapOrigin(connection.id + '-docking', getDockingSnapOrigin(docking, isMove, event));\n  });\n\n  if (is(shape, 'bpmn:Participant')) {\n\n    // snap to borders with higher priority\n    snapContext.setSnapLocations([ 'top-left', 'bottom-right', 'mid' ]);\n  }\n\n  return snapContext;\n};\n\nBpmnCreateMoveSnapping.prototype.addSnapTargetPoints = function(snapPoints, shape, target) {\n  CreateMoveSnapping.prototype.addSnapTargetPoints.call(this, snapPoints, shape, target);\n\n  var snapTargets = this.getSnapTargets(shape, target);\n\n  forEach(snapTargets, function(snapTarget) {\n\n    // handle TRBL alignment\n    //\n    // * with container elements\n    // * with text annotations\n    if (isContainer(snapTarget) || areAll([ shape, snapTarget ], 'bpmn:TextAnnotation')) {\n      snapPoints.add('top-left', topLeft(snapTarget));\n      snapPoints.add('bottom-right', bottomRight(snapTarget));\n    }\n  });\n\n  var elementRegistry = this._elementRegistry;\n\n  // snap to docking points if not create mode\n  forEach(shape.incoming, function(connection) {\n    if (elementRegistry.get(shape.id)) {\n\n      if (!includes(snapTargets, connection.source)) {\n        snapPoints.add('mid', getMid(connection.source));\n      }\n\n      var docking = connection.waypoints[0];\n      snapPoints.add(connection.id + '-docking', docking.original || docking);\n    }\n  });\n\n  forEach(shape.outgoing, function(connection) {\n    if (elementRegistry.get(shape.id)) {\n\n      if (!includes(snapTargets, connection.target)) {\n        snapPoints.add('mid', getMid(connection.target));\n      }\n\n      var docking = connection.waypoints[ connection.waypoints.length - 1 ];\n\n      snapPoints.add(connection.id + '-docking', docking.original || docking);\n    }\n  });\n\n  // add sequence flow parents as snap targets\n  if (is(target, 'bpmn:SequenceFlow')) {\n    snapPoints = this.addSnapTargetPoints(snapPoints, shape, target.parent);\n  }\n\n  return snapPoints;\n};\n\nBpmnCreateMoveSnapping.prototype.getSnapTargets = function(shape, target) {\n  return CreateMoveSnapping.prototype.getSnapTargets.call(this, shape, target)\n    .filter(function(snapTarget) {\n\n      // do not snap to lanes\n      return !is(snapTarget, 'bpmn:Lane');\n    });\n};\n\n// helpers //////////\n\nfunction snapBoundaryEvent(event, target) {\n  var targetTRBL = asTRBL(target);\n\n  var direction = getBoundaryAttachment(event, target);\n\n  var context = event.context,\n      shape = context.shape;\n\n  var offset;\n\n  if (shape.parent) {\n    offset = { x: 0, y: 0 };\n  } else {\n    offset = getMid(shape);\n  }\n\n  if (/top/.test(direction)) {\n    setSnapped(event, 'y', targetTRBL.top - offset.y);\n  } else if (/bottom/.test(direction)) {\n    setSnapped(event, 'y', targetTRBL.bottom - offset.y);\n  }\n\n  if (/left/.test(direction)) {\n    setSnapped(event, 'x', targetTRBL.left - offset.x);\n  } else if (/right/.test(direction)) {\n    setSnapped(event, 'x', targetTRBL.right - offset.x);\n  }\n}\n\nfunction areAll(elements, type) {\n  return elements.every(function(el) {\n    return is(el, type);\n  });\n}\n\nfunction isContainer(element) {\n  if (is(element, 'bpmn:SubProcess') && isExpanded(element)) {\n    return true;\n  }\n\n  return is(element, 'bpmn:Participant');\n}\n\n\nfunction setSnappedIfConstrained(event) {\n  var context = event.context,\n      createConstraints = context.createConstraints;\n\n  if (!createConstraints) {\n    return;\n  }\n\n  var top = createConstraints.top,\n      right = createConstraints.right,\n      bottom = createConstraints.bottom,\n      left = createConstraints.left;\n\n  if ((left && left >= event.x) || (right && right <= event.x)) {\n    setSnapped(event, 'x', event.x);\n  }\n\n  if ((top && top >= event.y) || (bottom && bottom <= event.y)) {\n    setSnapped(event, 'y', event.y);\n  }\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) !== -1;\n}\n\nfunction getDockingSnapOrigin(docking, isMove, event) {\n  return isMove ? (\n    {\n      x: docking.x - event.x,\n      y: docking.y - event.y\n    }\n  ) : {\n    x: docking.x,\n    y: docking.y\n  };\n}\n","import { getOrientation } from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nexport function getBoundaryAttachment(position, targetBounds) {\r\n\r\n  var orientation = getOrientation(position, targetBounds, -15);\r\n\r\n  if (orientation !== 'intersect') {\r\n    return orientation;\r\n  } else {\r\n    return null;\r\n  }\r\n}","import BpmnConnectSnapping from './BpmnConnectSnapping';\nimport BpmnCreateMoveSnapping from './BpmnCreateMoveSnapping';\nimport SnappingModule from 'diagram-js/lib/features/snapping';\n\nexport default {\n  __depends__: [ SnappingModule ],\n  __init__: [\n    'connectSnapping',\n    'createMoveSnapping'\n  ],\n  connectSnapping: [ 'type', BpmnConnectSnapping ],\n  createMoveSnapping: [ 'type', BpmnCreateMoveSnapping ]\n};","import {\n  assign\n} from 'min-dash';\n\nimport { is } from '../util/ModelUtil';\n\nimport {\n  isLabelExternal,\n  getExternalLabelBounds\n} from '../util/LabelUtil';\n\nimport {\n  getMid\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  isExpanded\n} from '../util/DiUtil';\n\nimport {\n  getLabel\n} from '../features/label-editing/LabelUtil';\n\nimport {\n  elementToString\n} from './Util';\n\n\n/**\n * @param {ModdleElement} semantic\n * @param {ModdleElement} di\n * @param {Object} [attrs=null]\n *\n * @return {Object}\n */\nfunction elementData(semantic, di, attrs) {\n  return assign({\n    id: semantic.id,\n    type: semantic.$type,\n    businessObject: semantic,\n    di: di\n  }, attrs);\n}\n\nfunction getWaypoints(di, source, target) {\n\n  var waypoints = di.waypoint;\n\n  if (!waypoints || waypoints.length < 2) {\n    return [ getMid(source), getMid(target) ];\n  }\n\n  return waypoints.map(function(p) {\n    return { x: p.x, y: p.y };\n  });\n}\n\nfunction notYetDrawn(translate, semantic, refSemantic, property) {\n  return new Error(translate('element {element} referenced by {referenced}#{property} not yet drawn', {\n    element: elementToString(refSemantic),\n    referenced: elementToString(semantic),\n    property: property\n  }));\n}\n\n\n/**\n * An importer that adds bpmn elements to the canvas\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementFactory} elementFactory\n * @param {ElementRegistry} elementRegistry\n * @param {Function} translate\n * @param {TextRenderer} textRenderer\n */\nexport default function BpmnImporter(\n    eventBus, canvas, elementFactory,\n    elementRegistry, translate, textRenderer) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._elementFactory = elementFactory;\n  this._elementRegistry = elementRegistry;\n  this._translate = translate;\n  this._textRenderer = textRenderer;\n}\n\nBpmnImporter.$inject = [\n  'eventBus',\n  'canvas',\n  'elementFactory',\n  'elementRegistry',\n  'translate',\n  'textRenderer'\n];\n\n\n/**\n * Add bpmn element (semantic) to the canvas onto the\n * specified parent shape.\n */\nBpmnImporter.prototype.add = function(semantic, di, parentElement) {\n  var element,\n      translate = this._translate,\n      hidden;\n\n  var parentIndex;\n\n  // ROOT ELEMENT\n  // handle the special case that we deal with a\n  // invisible root element (process, subprocess or collaboration)\n  if (is(di, 'bpmndi:BPMNPlane')) {\n\n    var attrs = is(semantic, 'bpmn:SubProcess')\n      ? { id: semantic.id + '_plane' }\n      : {};\n\n    // add a virtual element (not being drawn)\n    element = this._elementFactory.createRoot(elementData(semantic, di, attrs));\n\n    this._canvas.addRootElement(element);\n  }\n\n  // SHAPE\n  else if (is(di, 'bpmndi:BPMNShape')) {\n\n    var collapsed = !isExpanded(semantic, di),\n        isFrame = isFrameElement(semantic);\n\n    hidden = parentElement && (parentElement.hidden || parentElement.collapsed);\n\n    var bounds = di.bounds;\n\n    element = this._elementFactory.createShape(elementData(semantic, di, {\n      collapsed: collapsed,\n      hidden: hidden,\n      x: Math.round(bounds.x),\n      y: Math.round(bounds.y),\n      width: Math.round(bounds.width),\n      height: Math.round(bounds.height),\n      isFrame: isFrame\n    }));\n\n    if (is(semantic, 'bpmn:BoundaryEvent')) {\n      this._attachBoundary(semantic, element);\n    }\n\n    // insert lanes behind other flow nodes (cf. #727)\n    if (is(semantic, 'bpmn:Lane')) {\n      parentIndex = 0;\n    }\n\n    if (is(semantic, 'bpmn:DataStoreReference')) {\n\n      // check whether data store is inside our outside of its semantic parent\n      if (!isPointInsideBBox(parentElement, getMid(bounds))) {\n        parentElement = this._canvas.findRoot(parentElement);\n      }\n    }\n\n    this._canvas.addShape(element, parentElement, parentIndex);\n  }\n\n  // CONNECTION\n  else if (is(di, 'bpmndi:BPMNEdge')) {\n\n    var source = this._getSource(semantic),\n        target = this._getTarget(semantic);\n\n    hidden = parentElement && (parentElement.hidden || parentElement.collapsed);\n\n    element = this._elementFactory.createConnection(elementData(semantic, di, {\n      hidden: hidden,\n      source: source,\n      target: target,\n      waypoints: getWaypoints(di, source, target)\n    }));\n\n    if (is(semantic, 'bpmn:DataAssociation')) {\n\n      // render always on top; this ensures DataAssociations\n      // are rendered correctly across different \"hacks\" people\n      // love to model such as cross participant / sub process\n      // associations\n      parentElement = this._canvas.findRoot(parentElement);\n    }\n\n    // insert sequence flows behind other flow nodes (cf. #727)\n    if (is(semantic, 'bpmn:SequenceFlow')) {\n      parentIndex = 0;\n    }\n\n    this._canvas.addConnection(element, parentElement, parentIndex);\n  } else {\n    throw new Error(translate('unknown di {di} for element {semantic}', {\n      di: elementToString(di),\n      semantic: elementToString(semantic)\n    }));\n  }\n\n  // (optional) LABEL\n  if (isLabelExternal(semantic) && getLabel(element)) {\n    this.addLabel(semantic, di, element);\n  }\n\n\n  this._eventBus.fire('bpmnElement.added', { element: element });\n\n  return element;\n};\n\n\n/**\n * Attach the boundary element to the given host\n *\n * @param {ModdleElement} boundarySemantic\n * @param {djs.model.Base} boundaryElement\n */\nBpmnImporter.prototype._attachBoundary = function(boundarySemantic, boundaryElement) {\n  var translate = this._translate;\n  var hostSemantic = boundarySemantic.attachedToRef;\n\n  if (!hostSemantic) {\n    throw new Error(translate('missing {semantic}#attachedToRef', {\n      semantic: elementToString(boundarySemantic)\n    }));\n  }\n\n  var host = this._elementRegistry.get(hostSemantic.id),\n      attachers = host && host.attachers;\n\n  if (!host) {\n    throw notYetDrawn(translate, boundarySemantic, hostSemantic, 'attachedToRef');\n  }\n\n  // wire element.host <> host.attachers\n  boundaryElement.host = host;\n\n  if (!attachers) {\n    host.attachers = attachers = [];\n  }\n\n  if (attachers.indexOf(boundaryElement) === -1) {\n    attachers.push(boundaryElement);\n  }\n};\n\n\n/**\n * add label for an element\n */\nBpmnImporter.prototype.addLabel = function(semantic, di, element) {\n  var bounds,\n      text,\n      label;\n\n  bounds = getExternalLabelBounds(di, element);\n\n  text = getLabel(element);\n\n  if (text) {\n\n    // get corrected bounds from actual layouted text\n    bounds = this._textRenderer.getExternalLabelBounds(bounds, text);\n  }\n\n  label = this._elementFactory.createLabel(elementData(semantic, di, {\n    id: semantic.id + '_label',\n    labelTarget: element,\n    type: 'label',\n    hidden: element.hidden || !getLabel(element),\n    x: Math.round(bounds.x),\n    y: Math.round(bounds.y),\n    width: Math.round(bounds.width),\n    height: Math.round(bounds.height)\n  }));\n\n  return this._canvas.addShape(label, element.parent);\n};\n\n/**\n * Return the drawn connection end based on the given side.\n *\n * @throws {Error} if the end is not yet drawn\n */\nBpmnImporter.prototype._getEnd = function(semantic, side) {\n\n  var element,\n      refSemantic,\n      type = semantic.$type,\n      translate = this._translate;\n\n  refSemantic = semantic[side + 'Ref'];\n\n  // handle mysterious isMany DataAssociation#sourceRef\n  if (side === 'source' && type === 'bpmn:DataInputAssociation') {\n    refSemantic = refSemantic && refSemantic[0];\n  }\n\n  // fix source / target for DataInputAssociation / DataOutputAssociation\n  if (side === 'source' && type === 'bpmn:DataOutputAssociation' ||\n      side === 'target' && type === 'bpmn:DataInputAssociation') {\n\n    refSemantic = semantic.$parent;\n  }\n\n  element = refSemantic && this._getElement(refSemantic);\n\n  if (element) {\n    return element;\n  }\n\n  if (refSemantic) {\n    throw notYetDrawn(translate, semantic, refSemantic, side + 'Ref');\n  } else {\n    throw new Error(translate('{semantic}#{side} Ref not specified', {\n      semantic: elementToString(semantic),\n      side: side\n    }));\n  }\n};\n\nBpmnImporter.prototype._getSource = function(semantic) {\n  return this._getEnd(semantic, 'source');\n};\n\nBpmnImporter.prototype._getTarget = function(semantic) {\n  return this._getEnd(semantic, 'target');\n};\n\n\nBpmnImporter.prototype._getElement = function(semantic) {\n  return this._elementRegistry.get(semantic.id);\n};\n\n\n// helpers ////////////////////\n\nfunction isPointInsideBBox(bbox, point) {\n  var x = point.x,\n      y = point.y;\n\n  return x >= bbox.x &&\n    x <= bbox.x + bbox.width &&\n    y >= bbox.y &&\n    y <= bbox.y + bbox.height;\n}\n\nfunction isFrameElement(semantic) {\n  return is(semantic, 'bpmn:Group');\n}","import {\n  filter,\n  find,\n  forEach\n} from 'min-dash';\n\nimport {\n  elementToString\n} from './Util';\n\nimport {\n  ensureCompatDiRef\n} from '../util/CompatibilityUtil';\n\n\n/**\n * Returns true if an element has the given meta-model type\n *\n * @param  {ModdleElement}  element\n * @param  {string}         type\n *\n * @return {boolean}\n */\nfunction is(element, type) {\n  return element.$instanceOf(type);\n}\n\n\n/**\n * Find a suitable display candidate for definitions where the DI does not\n * correctly specify one.\n */\nfunction findDisplayCandidate(definitions) {\n  return find(definitions.rootElements, function(e) {\n    return is(e, 'bpmn:Process') || is(e, 'bpmn:Collaboration');\n  });\n}\n\n\nexport default function BpmnTreeWalker(handler, translate) {\n\n  // list of containers already walked\n  var handledElements = {};\n\n  // list of elements to handle deferred to ensure\n  // prerequisites are drawn\n  var deferred = [];\n\n  var diMap = {};\n\n  // Helpers //////////////////////\n\n  function contextual(fn, ctx) {\n    return function(e) {\n      fn(e, ctx);\n    };\n  }\n\n  function handled(element) {\n    handledElements[element.id] = element;\n  }\n\n  function isHandled(element) {\n    return handledElements[element.id];\n  }\n\n  function visit(element, ctx) {\n\n    var gfx = element.gfx;\n\n    // avoid multiple rendering of elements\n    if (gfx) {\n      throw new Error(\n        translate('already rendered {element}', { element: elementToString(element) })\n      );\n    }\n\n    // call handler\n    return handler.element(element, diMap[element.id], ctx);\n  }\n\n  function visitRoot(element, diagram) {\n    return handler.root(element, diMap[element.id], diagram);\n  }\n\n  function visitIfDi(element, ctx) {\n\n    try {\n      var gfx = diMap[element.id] && visit(element, ctx);\n\n      handled(element);\n\n      return gfx;\n    } catch (e) {\n      logError(e.message, { element: element, error: e });\n\n      console.error(translate('failed to import {element}', { element: elementToString(element) }));\n      console.error(e);\n    }\n  }\n\n  function logError(message, context) {\n    handler.error(message, context);\n  }\n\n  // DI handling //////////////////////\n\n  function registerDi(di) {\n    var bpmnElement = di.bpmnElement;\n\n    if (bpmnElement) {\n      if (diMap[bpmnElement.id]) {\n        logError(\n          translate('multiple DI elements defined for {element}', {\n            element: elementToString(bpmnElement)\n          }),\n          { element: bpmnElement }\n        );\n      } else {\n        diMap[bpmnElement.id] = di;\n\n        ensureCompatDiRef(bpmnElement);\n      }\n    } else {\n      logError(\n        translate('no bpmnElement referenced in {element}', {\n          element: elementToString(di)\n        }),\n        { element: di }\n      );\n    }\n  }\n\n  function handleDiagram(diagram) {\n    handlePlane(diagram.plane);\n  }\n\n  function handlePlane(plane) {\n    registerDi(plane);\n\n    forEach(plane.planeElement, handlePlaneElement);\n  }\n\n  function handlePlaneElement(planeElement) {\n    registerDi(planeElement);\n  }\n\n\n  // Semantic handling //////////////////////\n\n  /**\n   * Handle definitions and return the rendered diagram (if any)\n   *\n   * @param {ModdleElement} definitions to walk and import\n   * @param {ModdleElement} [diagram] specific diagram to import and display\n   *\n   * @throws {Error} if no diagram to display could be found\n   */\n  function handleDefinitions(definitions, diagram) {\n\n    // make sure we walk the correct bpmnElement\n\n    var diagrams = definitions.diagrams;\n\n    if (diagram && diagrams.indexOf(diagram) === -1) {\n      throw new Error(translate('diagram not part of bpmn:Definitions'));\n    }\n\n    if (!diagram && diagrams && diagrams.length) {\n      diagram = diagrams[0];\n    }\n\n    // no diagram -> nothing to import\n    if (!diagram) {\n      throw new Error(translate('no diagram to display'));\n    }\n\n    // load DI from selected diagram only\n    diMap = {};\n    handleDiagram(diagram);\n\n\n    var plane = diagram.plane;\n\n    if (!plane) {\n      throw new Error(translate(\n        'no plane for {element}',\n        { element: elementToString(diagram) }\n      ));\n    }\n\n    var rootElement = plane.bpmnElement;\n\n    // ensure we default to a suitable display candidate (process or collaboration),\n    // even if non is specified in DI\n    if (!rootElement) {\n      rootElement = findDisplayCandidate(definitions);\n\n      if (!rootElement) {\n        throw new Error(translate('no process or collaboration to display'));\n      } else {\n\n        logError(\n          translate('correcting missing bpmnElement on {plane} to {rootElement}', {\n            plane: elementToString(plane),\n            rootElement: elementToString(rootElement)\n          })\n        );\n\n        // correct DI on the fly\n        plane.bpmnElement = rootElement;\n        registerDi(plane);\n      }\n    }\n\n\n    var ctx = visitRoot(rootElement, plane);\n\n    if (is(rootElement, 'bpmn:Process') || is(rootElement, 'bpmn:SubProcess')) {\n      handleProcess(rootElement, ctx);\n    } else if (is(rootElement, 'bpmn:Collaboration')) {\n      handleCollaboration(rootElement, ctx);\n\n      // force drawing of everything not yet drawn that is part of the target DI\n      handleUnhandledProcesses(definitions.rootElements, ctx);\n    } else {\n      throw new Error(\n        translate('unsupported bpmnElement for {plane}: {rootElement}', {\n          plane: elementToString(plane),\n          rootElement: elementToString(rootElement)\n        })\n      );\n    }\n\n    // handle all deferred elements\n    handleDeferred(deferred);\n  }\n\n  function handleDeferred() {\n\n    var fn;\n\n    // drain deferred until empty\n    while (deferred.length) {\n      fn = deferred.shift();\n\n      fn();\n    }\n  }\n\n  function handleProcess(process, context) {\n    handleFlowElementsContainer(process, context);\n    handleIoSpecification(process.ioSpecification, context);\n\n    handleArtifacts(process.artifacts, context);\n\n    // log process handled\n    handled(process);\n  }\n\n  function handleUnhandledProcesses(rootElements, ctx) {\n\n    // walk through all processes that have not yet been drawn and draw them\n    // if they contain lanes with DI information.\n    // we do this to pass the free-floating lane test cases in the MIWG test suite\n    var processes = filter(rootElements, function(e) {\n      return !isHandled(e) && is(e, 'bpmn:Process') && e.laneSets;\n    });\n\n    processes.forEach(contextual(handleProcess, ctx));\n  }\n\n  function handleMessageFlow(messageFlow, context) {\n    visitIfDi(messageFlow, context);\n  }\n\n  function handleMessageFlows(messageFlows, context) {\n    forEach(messageFlows, contextual(handleMessageFlow, context));\n  }\n\n  function handleDataAssociation(association, context) {\n    visitIfDi(association, context);\n  }\n\n  function handleDataInput(dataInput, context) {\n    visitIfDi(dataInput, context);\n  }\n\n  function handleDataOutput(dataOutput, context) {\n    visitIfDi(dataOutput, context);\n  }\n\n  function handleArtifact(artifact, context) {\n\n    // bpmn:TextAnnotation\n    // bpmn:Group\n    // bpmn:Association\n\n    visitIfDi(artifact, context);\n  }\n\n  function handleArtifacts(artifacts, context) {\n\n    forEach(artifacts, function(e) {\n      if (is(e, 'bpmn:Association')) {\n        deferred.push(function() {\n          handleArtifact(e, context);\n        });\n      } else {\n        handleArtifact(e, context);\n      }\n    });\n  }\n\n  function handleIoSpecification(ioSpecification, context) {\n\n    if (!ioSpecification) {\n      return;\n    }\n\n    forEach(ioSpecification.dataInputs, contextual(handleDataInput, context));\n    forEach(ioSpecification.dataOutputs, contextual(handleDataOutput, context));\n  }\n\n  function handleSubProcess(subProcess, context) {\n    handleFlowElementsContainer(subProcess, context);\n    handleArtifacts(subProcess.artifacts, context);\n  }\n\n  function handleFlowNode(flowNode, context) {\n    var childCtx = visitIfDi(flowNode, context);\n\n    if (is(flowNode, 'bpmn:SubProcess')) {\n      handleSubProcess(flowNode, childCtx || context);\n    }\n\n    if (is(flowNode, 'bpmn:Activity')) {\n      handleIoSpecification(flowNode.ioSpecification, context);\n    }\n\n    // defer handling of associations\n    // affected types:\n    //\n    //   * bpmn:Activity\n    //   * bpmn:ThrowEvent\n    //   * bpmn:CatchEvent\n    //\n    deferred.push(function() {\n      forEach(flowNode.dataInputAssociations, contextual(handleDataAssociation, context));\n      forEach(flowNode.dataOutputAssociations, contextual(handleDataAssociation, context));\n    });\n  }\n\n  function handleSequenceFlow(sequenceFlow, context) {\n    visitIfDi(sequenceFlow, context);\n  }\n\n  function handleDataElement(dataObject, context) {\n    visitIfDi(dataObject, context);\n  }\n\n  function handleLane(lane, context) {\n\n    deferred.push(function() {\n\n      var newContext = visitIfDi(lane, context);\n\n      if (lane.childLaneSet) {\n        handleLaneSet(lane.childLaneSet, newContext || context);\n      }\n\n      wireFlowNodeRefs(lane);\n    });\n  }\n\n  function handleLaneSet(laneSet, context) {\n    forEach(laneSet.lanes, contextual(handleLane, context));\n  }\n\n  function handleLaneSets(laneSets, context) {\n    forEach(laneSets, contextual(handleLaneSet, context));\n  }\n\n  function handleFlowElementsContainer(container, context) {\n    handleFlowElements(container.flowElements, context);\n\n    if (container.laneSets) {\n      handleLaneSets(container.laneSets, context);\n    }\n  }\n\n  function handleFlowElements(flowElements, context) {\n    forEach(flowElements, function(e) {\n      if (is(e, 'bpmn:SequenceFlow')) {\n        deferred.push(function() {\n          handleSequenceFlow(e, context);\n        });\n      } else if (is(e, 'bpmn:BoundaryEvent')) {\n        deferred.unshift(function() {\n          handleFlowNode(e, context);\n        });\n      } else if (is(e, 'bpmn:FlowNode')) {\n        handleFlowNode(e, context);\n      } else if (is(e, 'bpmn:DataObject')) {\n\n        // SKIP (assume correct referencing via DataObjectReference)\n      } else if (is(e, 'bpmn:DataStoreReference')) {\n        handleDataElement(e, context);\n      } else if (is(e, 'bpmn:DataObjectReference')) {\n        handleDataElement(e, context);\n      } else {\n        logError(\n          translate('unrecognized flowElement {element} in context {context}', {\n            element: elementToString(e),\n            context: (context ? elementToString(context.businessObject) : 'null')\n          }),\n          { element: e, context: context }\n        );\n      }\n    });\n  }\n\n  function handleParticipant(participant, context) {\n    var newCtx = visitIfDi(participant, context);\n\n    var process = participant.processRef;\n    if (process) {\n      handleProcess(process, newCtx || context);\n    }\n  }\n\n  function handleCollaboration(collaboration, context) {\n\n    forEach(collaboration.participants, contextual(handleParticipant, context));\n\n    handleArtifacts(collaboration.artifacts, context);\n\n    // handle message flows latest in the process\n    deferred.push(function() {\n      handleMessageFlows(collaboration.messageFlows, context);\n    });\n  }\n\n\n  function wireFlowNodeRefs(lane) {\n\n    // wire the virtual flowNodeRefs <-> relationship\n    forEach(lane.flowNodeRef, function(flowNode) {\n      var lanes = flowNode.get('lanes');\n\n      if (lanes) {\n        lanes.push(lane);\n      }\n    });\n  }\n\n  // API //////////////////////\n\n  return {\n    handleDeferred: handleDeferred,\n    handleDefinitions: handleDefinitions,\n    handleSubProcess: handleSubProcess,\n    registerDi: registerDi\n  };\n}","import {\n  find,\n  forEach,\n  map\n} from 'min-dash';\n\nimport BpmnTreeWalker from './BpmnTreeWalker';\n\nimport { is } from '../util/ModelUtil';\n\n\n/**\n * The importBpmnDiagram result.\n *\n * @typedef {Object} ImportBPMNDiagramResult\n *\n * @property {Array<string>} warnings\n */\n\n/**\n* The importBpmnDiagram error.\n*\n* @typedef {Error} ImportBPMNDiagramError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Import the definitions into a diagram.\n *\n * Errors and warnings are reported through the specified callback.\n *\n * @param  {djs.Diagram} diagram\n * @param  {ModdleElement<Definitions>} definitions\n * @param  {ModdleElement<BPMNDiagram>} [bpmnDiagram] the diagram to be rendered\n * (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportBPMNDiagramResult, ImportBPMNDiagramError>}\n */\nexport function importBpmnDiagram(diagram, definitions, bpmnDiagram) {\n\n  var importer,\n      eventBus,\n      translate,\n      canvas;\n\n  var error,\n      warnings = [];\n\n  /**\n   * Walk the diagram semantically, importing (=drawing)\n   * all elements you encounter.\n   *\n   * @param {ModdleElement<Definitions>} definitions\n   * @param {ModdleElement<BPMNDiagram>} bpmnDiagram\n   */\n  function render(definitions, bpmnDiagram) {\n\n    var visitor = {\n\n      root: function(element, di) {\n        return importer.add(element, di);\n      },\n\n      element: function(element, di, parentShape) {\n        return importer.add(element, di, parentShape);\n      },\n\n      error: function(message, context) {\n        warnings.push({ message: message, context: context });\n      }\n    };\n\n    var walker = new BpmnTreeWalker(visitor, translate);\n\n\n    bpmnDiagram = bpmnDiagram || (definitions.diagrams && definitions.diagrams[0]);\n\n    var diagramsToImport = getDiagramsToImport(definitions, bpmnDiagram);\n\n    if (!diagramsToImport) {\n      throw new Error(translate('no diagram to display'));\n    }\n\n    // traverse BPMN 2.0 document model,\n    // starting at definitions\n    forEach(diagramsToImport, function(diagram) {\n      walker.handleDefinitions(definitions, diagram);\n    });\n\n    var rootId = bpmnDiagram.plane.bpmnElement.id;\n\n    // we do need to account for different ways we create root elements\n    // each nested imported <root> do have the `_plane` suffix, while\n    // the root <root> is found under the business object ID\n    canvas.setRootElement(\n      canvas.findRoot(rootId + '_plane') || canvas.findRoot(rootId)\n    );\n  }\n\n  return new Promise(function(resolve, reject) {\n    try {\n      importer = diagram.get('bpmnImporter');\n      eventBus = diagram.get('eventBus');\n      translate = diagram.get('translate');\n      canvas = diagram.get('canvas');\n\n      eventBus.fire('import.render.start', { definitions: definitions });\n\n      render(definitions, bpmnDiagram);\n\n      eventBus.fire('import.render.complete', {\n        error: error,\n        warnings: warnings\n      });\n\n      return resolve({ warnings: warnings });\n    } catch (e) {\n\n      e.warnings = warnings;\n      return reject(e);\n    }\n  });\n}\n\n/**\n * Returns all diagrams in the same hirarchy as the requested diagram.\n * Includes all parent and sub process diagrams.\n *\n * @param {Array} definitions\n * @param {Object} bpmnDiagram\n *\n * @returns {Array<Object>}\n */\nfunction getDiagramsToImport(definitions, bpmnDiagram) {\n  if (!bpmnDiagram) {\n    return;\n  }\n\n  var bpmnElement = bpmnDiagram.plane.bpmnElement,\n      rootElement = bpmnElement;\n\n  if (!is(bpmnElement, 'bpmn:Process') && !is(bpmnElement, 'bpmn:Collaboration')) {\n    rootElement = findRootProcess(bpmnElement);\n  }\n\n  // in case the process is part of a collaboration, the plane references the\n  // collaboration, not the process\n  var collaboration;\n\n  if (is(rootElement, 'bpmn:Collaboration')) {\n    collaboration = rootElement;\n  } else {\n    collaboration = find(definitions.rootElements, function(element) {\n      if (!is(element, 'bpmn:Collaboration')) {\n        return;\n      }\n\n      return find(element.participants, function(participant) {\n        return participant.processRef === rootElement;\n      });\n    });\n  }\n\n  var rootElements = [ rootElement ];\n\n  // all collaboration processes can contain sub-diagrams\n  if (collaboration) {\n    rootElements = map(collaboration.participants, function(participant) {\n      return participant.processRef;\n    });\n\n    rootElements.push(collaboration);\n  }\n\n  var allChildren = selfAndAllFlowElements(rootElements);\n\n  // if we have multiple diagrams referencing the same element, we\n  // use the first in the file\n  var diagramsToImport = [ bpmnDiagram ];\n  var handledElements = [ bpmnElement ];\n\n  forEach(definitions.diagrams, function(diagram) {\n    var businessObject = diagram.plane.bpmnElement;\n\n    if (\n      allChildren.indexOf(businessObject) !== -1 &&\n      handledElements.indexOf(businessObject) === -1\n    ) {\n      diagramsToImport.push(diagram);\n      handledElements.push(businessObject);\n    }\n  });\n\n\n  return diagramsToImport;\n}\n\nfunction selfAndAllFlowElements(elements) {\n  var result = [];\n\n  forEach(elements, function(element) {\n    if (!element) {\n      return;\n    }\n\n    result.push(element);\n\n    result = result.concat(selfAndAllFlowElements(element.flowElements));\n  });\n\n  return result;\n}\n\nfunction findRootProcess(element) {\n  var parent = element;\n\n  while (parent) {\n    if (is(parent, 'bpmn:Process')) {\n      return parent;\n    }\n\n    parent = parent.$parent;\n  }\n}","export function elementToString(e) {\n  if (!e) {\n    return '<null>';\n  }\n\n  return '<' + e.$type + (e.id ? ' id=\"' + e.id : '') + '\" />';\n}","import translate from 'diagram-js/lib/i18n/translate';\n\nimport BpmnImporter from './BpmnImporter';\n\nexport default {\n  __depends__: [\n    translate\n  ],\n  bpmnImporter: [ 'type', BpmnImporter ]\n};","import {\n  has,\n  isFunction\n} from 'min-dash';\n\n// TODO(nikku): remove with future bpmn-js version\n\n/**\n * Wraps APIs to check:\n *\n * 1) If a callback is passed -> Warn users about callback deprecation.\n * 2) If Promise class is implemented in current environment.\n *\n * @private\n */\nexport function wrapForCompatibility(api) {\n\n  return function() {\n\n    if (!window.Promise) {\n      throw new Error('Promises is not supported in this environment. Please polyfill Promise.');\n    }\n\n    var argLen = arguments.length;\n    if (argLen >= 1 && isFunction(arguments[argLen - 1])) {\n\n      var callback = arguments[argLen - 1];\n\n      console.warn(new Error(\n        'Passing callbacks to ' + api.name + ' is deprecated and will be removed in a future major release. ' +\n        'Please switch to promises: https://bpmn.io/l/moving-to-promises.html'\n      ));\n\n      var argsWithoutCallback = Array.prototype.slice.call(arguments, 0, -1);\n\n      api.apply(this, argsWithoutCallback).then(function(result) {\n\n        var firstKey = Object.keys(result)[0];\n\n        // The APIs we are wrapping all resolve a single item depending on the API.\n        // For instance, importXML resolves { warnings } and saveXML returns { xml }.\n        // That's why we can call the callback with the first item of result.\n        return callback(null, result[firstKey]);\n\n        // Passing a second paramter instead of catch because we don't want to\n        // catch errors thrown by callback().\n      }, function(err) {\n\n        return callback(err, err.warnings);\n      });\n    } else {\n\n      return api.apply(this, arguments);\n    }\n  };\n}\n\n\n// TODO(nikku): remove with future bpmn-js version\n\nvar DI_ERROR_MESSAGE = 'Tried to access di from the businessObject. The di is available through the diagram element only. For more information, see https://github.com/bpmn-io/bpmn-js/issues/1472';\n\nexport function ensureCompatDiRef(businessObject) {\n\n  // bpmnElement can have multiple independent DIs\n  if (!has(businessObject, 'di')) {\n    Object.defineProperty(businessObject, 'di', {\n      get: function() {\n        throw new Error(DI_ERROR_MESSAGE);\n      }\n    });\n  }\n}","import {\n  is,\n  getBusinessObject,\n  getDi\n} from './ModelUtil';\n\nimport {\n  forEach\n} from 'min-dash';\n\n\nexport function isExpanded(element, di) {\n\n  if (is(element, 'bpmn:CallActivity')) {\n    return false;\n  }\n\n  if (is(element, 'bpmn:SubProcess')) {\n    di = di || getDi(element);\n\n    if (di && is(di, 'bpmndi:BPMNPlane')) {\n      return true;\n    }\n\n    return di && !!di.isExpanded;\n  }\n\n  if (is(element, 'bpmn:Participant')) {\n    return !!getBusinessObject(element).processRef;\n  }\n\n  return true;\n}\n\nexport function isInterrupting(element) {\n  return element && getBusinessObject(element).isInterrupting !== false;\n}\n\nexport function isEventSubProcess(element) {\n  return element && !!getBusinessObject(element).triggeredByEvent;\n}\n\nexport function hasEventDefinition(element, eventType) {\n  var bo = getBusinessObject(element),\n      hasEventDefinition = false;\n\n  if (bo.eventDefinitions) {\n    forEach(bo.eventDefinitions, function(event) {\n      if (is(event, eventType)) {\n        hasEventDefinition = true;\n      }\n    });\n  }\n\n  return hasEventDefinition;\n}\n\nexport function hasErrorEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:ErrorEventDefinition');\n}\n\nexport function hasEscalationEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:EscalationEventDefinition');\n}\n\nexport function hasCompensateEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\n}\n","import { getDi, is } from './ModelUtil';\n\n\nexport var planeSuffix = '_plane';\n\n/**\n * Get primary shape ID for a plane.\n *\n * @param  {djs.model.Base|ModdleElement} element\n *\n * @returns {String}\n */\nexport function getShapeIdFromPlane(element) {\n  var id = element.id;\n\n  return removePlaneSuffix(id);\n}\n\n/**\n * Get plane ID for a primary shape.\n *\n * @param  {djs.model.Base|ModdleElement} element\n *\n * @returns {String}\n */\nexport function getPlaneIdFromShape(element) {\n  var id = element.id;\n\n  if (is(element, 'bpmn:SubProcess')) {\n    return addPlaneSuffix(id);\n  }\n\n  return id;\n}\n\n/**\n * Get plane ID for primary shape ID.\n *\n * @param {String} id\n *\n * @returns {String}\n */\nexport function toPlaneId(id) {\n  return addPlaneSuffix(id);\n}\n\n/**\n * Check wether element is plane.\n *\n * @param  {djs.model.Base|ModdleElement} element\n *\n * @returns {Boolean}\n */\nexport function isPlane(element) {\n  var di = getDi(element);\n\n  return is(di, 'bpmndi:BPMNPlane');\n}\n\nfunction addPlaneSuffix(id) {\n  return id + planeSuffix;\n}\n\nfunction removePlaneSuffix(id) {\n  return id.replace(new RegExp(planeSuffix + '$'), '');\n}","import {\n  assign\n} from 'min-dash';\n\nimport { is } from './ModelUtil';\n\n\nexport var DEFAULT_LABEL_SIZE = {\n  width: 90,\n  height: 20\n};\n\nexport var FLOW_LABEL_INDENT = 15;\n\n\n/**\n * Returns true if the given semantic has an external label\n *\n * @param {BpmnElement} semantic\n * @return {boolean} true if has label\n */\nexport function isLabelExternal(semantic) {\n  return is(semantic, 'bpmn:Event') ||\n         is(semantic, 'bpmn:Gateway') ||\n         is(semantic, 'bpmn:DataStoreReference') ||\n         is(semantic, 'bpmn:DataObjectReference') ||\n         is(semantic, 'bpmn:DataInput') ||\n         is(semantic, 'bpmn:DataOutput') ||\n         is(semantic, 'bpmn:SequenceFlow') ||\n         is(semantic, 'bpmn:MessageFlow') ||\n         is(semantic, 'bpmn:Group');\n}\n\n/**\n * Returns true if the given element has an external label\n *\n * @param {djs.model.shape} element\n * @return {boolean} true if has label\n */\nexport function hasExternalLabel(element) {\n  return isLabel(element.label);\n}\n\n/**\n * Get the position for sequence flow labels\n *\n * @param  {Array<Point>} waypoints\n * @return {Point} the label position\n */\nexport function getFlowLabelPosition(waypoints) {\n\n  // get the waypoints mid\n  var mid = waypoints.length / 2 - 1;\n\n  var first = waypoints[Math.floor(mid)];\n  var second = waypoints[Math.ceil(mid + 0.01)];\n\n  // get position\n  var position = getWaypointsMid(waypoints);\n\n  // calculate angle\n  var angle = Math.atan((second.y - first.y) / (second.x - first.x));\n\n  var x = position.x,\n      y = position.y;\n\n  if (Math.abs(angle) < Math.PI / 2) {\n    y -= FLOW_LABEL_INDENT;\n  } else {\n    x += FLOW_LABEL_INDENT;\n  }\n\n  return { x: x, y: y };\n}\n\n\n/**\n * Get the middle of a number of waypoints\n *\n * @param  {Array<Point>} waypoints\n * @return {Point} the mid point\n */\nexport function getWaypointsMid(waypoints) {\n\n  var mid = waypoints.length / 2 - 1;\n\n  var first = waypoints[Math.floor(mid)];\n  var second = waypoints[Math.ceil(mid + 0.01)];\n\n  return {\n    x: first.x + (second.x - first.x) / 2,\n    y: first.y + (second.y - first.y) / 2\n  };\n}\n\n\nexport function getExternalLabelMid(element) {\n\n  if (element.waypoints) {\n    return getFlowLabelPosition(element.waypoints);\n  } else if (is(element, 'bpmn:Group')) {\n    return {\n      x: element.x + element.width / 2,\n      y: element.y + DEFAULT_LABEL_SIZE.height / 2\n    };\n  } else {\n    return {\n      x: element.x + element.width / 2,\n      y: element.y + element.height + DEFAULT_LABEL_SIZE.height / 2\n    };\n  }\n}\n\n\n/**\n * Returns the bounds of an elements label, parsed from the elements DI or\n * generated from its bounds.\n *\n * @param {BpmndDi} di\n * @param {djs.model.Base} element\n */\nexport function getExternalLabelBounds(di, element) {\n\n  var mid,\n      size,\n      bounds,\n      label = di.label;\n\n  if (label && label.bounds) {\n    bounds = label.bounds;\n\n    size = {\n      width: Math.max(DEFAULT_LABEL_SIZE.width, bounds.width),\n      height: bounds.height\n    };\n\n    mid = {\n      x: bounds.x + bounds.width / 2,\n      y: bounds.y + bounds.height / 2\n    };\n  } else {\n\n    mid = getExternalLabelMid(element);\n\n    size = DEFAULT_LABEL_SIZE;\n  }\n\n  return assign({\n    x: mid.x - size.width / 2,\n    y: mid.y - size.height / 2\n  }, size);\n}\n\nexport function isLabel(element) {\n  return element && !!element.labelTarget;\n}\n","import {\n  some\n} from 'min-dash';\n\n\n/**\n * Is an element of the given BPMN type?\n *\n * @param  {djs.model.Base|ModdleElement} element\n * @param  {string} type\n *\n * @return {boolean}\n */\nexport function is(element, type) {\n  var bo = getBusinessObject(element);\n\n  return bo && (typeof bo.$instanceOf === 'function') && bo.$instanceOf(type);\n}\n\n\n/**\n * Return true if element has any of the given types.\n *\n * @param {djs.model.Base} element\n * @param {Array<string>} types\n *\n * @return {boolean}\n */\nexport function isAny(element, types) {\n  return some(types, function(t) {\n    return is(element, t);\n  });\n}\n\n/**\n * Return the business object for a given element.\n *\n * @param  {djs.model.Base|ModdleElement} element\n *\n * @return {ModdleElement}\n */\nexport function getBusinessObject(element) {\n  return (element && element.businessObject) || element;\n}\n\n/**\n * Return the di object for a given element.\n *\n * @param  {djs.model.Base} element\n *\n * @return {ModdleElement}\n */\nexport function getDi(element) {\n  return element && element.di;\n}","/**\n * This file must not be changed or exchanged.\n *\n * @see http://bpmn.io/license for more information.\n */\n\nimport {\n  domify,\n  delegate as domDelegate\n} from 'min-dom';\n\n\n// inlined ../../resources/logo.svg\nvar BPMNIO_LOGO_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.02 5.57\" width=\"53\" height=\"21\" style=\"vertical-align:middle\"><path fill=\"currentColor\" d=\"M1.88.92v.14c0 .41-.13.68-.4.8.33.14.46.44.46.86v.33c0 .61-.33.95-.95.95H0V0h.95c.65 0 .93.3.93.92zM.63.57v1.06h.24c.24 0 .38-.1.38-.43V.98c0-.28-.1-.4-.32-.4zm0 1.63v1.22h.36c.2 0 .32-.1.32-.39v-.35c0-.37-.12-.48-.4-.48H.63zM4.18.99v.52c0 .64-.31.98-.94.98h-.3V4h-.62V0h.92c.63 0 .94.35.94.99zM2.94.57v1.35h.3c.2 0 .3-.09.3-.37v-.6c0-.29-.1-.38-.3-.38h-.3zm2.89 2.27L6.25 0h.88v4h-.6V1.12L6.1 3.99h-.6l-.46-2.82v2.82h-.55V0h.87zM8.14 1.1V4h-.56V0h.79L9 2.4V0h.56v4h-.64zm2.49 2.29v.6h-.6v-.6zM12.12 1c0-.63.33-1 .95-1 .61 0 .95.37.95 1v2.04c0 .64-.34 1-.95 1-.62 0-.95-.37-.95-1zm.62 2.08c0 .28.13.39.33.39s.32-.1.32-.4V.98c0-.29-.12-.4-.32-.4s-.33.11-.33.4z\"/><path fill=\"currentColor\" d=\"M0 4.53h14.02v1.04H0zM11.08 0h.63v.62h-.63zm.63 4V1h-.63v2.98z\"/></svg>';\n\nexport var BPMNIO_IMG = BPMNIO_LOGO_SVG;\n\nfunction css(attrs) {\n  return attrs.join(';');\n}\n\nexport var LINK_STYLES = css([\n  'color: #404040'\n]);\n\nvar LIGHTBOX_STYLES = css([\n  'z-index: 1001',\n  'position: fixed',\n  'top: 0',\n  'left: 0',\n  'right: 0',\n  'bottom: 0'\n]);\n\nvar BACKDROP_STYLES = css([\n  'width: 100%',\n  'height: 100%',\n  'background: rgba(40,40,40,0.2)'\n]);\n\nvar NOTICE_STYLES = css([\n  'position: absolute',\n  'left: 50%',\n  'top: 40%',\n  'transform: translate(-50%)',\n  'width: 260px',\n  'padding: 10px',\n  'background: white',\n  'box-shadow: 0 1px 4px rgba(0,0,0,0.3)',\n  'font-family: Helvetica, Arial, sans-serif',\n  'font-size: 14px',\n  'display: flex',\n  'line-height: 1.3'\n]);\n\nvar LIGHTBOX_MARKUP =\n  '<div class=\"bjs-powered-by-lightbox\" style=\"' + LIGHTBOX_STYLES + '\">' +\n    '<div class=\"backdrop\" style=\"' + BACKDROP_STYLES + '\"></div>' +\n    '<div class=\"notice\" style=\"' + NOTICE_STYLES + '\">' +\n      '<a href=\"https://bpmn.io\" target=\"_blank\" rel=\"noopener\" style=\"margin: 15px 20px 15px 10px; align-self: center;' + LINK_STYLES + '\">' +\n        BPMNIO_IMG +\n      '</a>' +\n      '<span>' +\n        'Web-based tooling for BPMN, DMN and CMMN diagrams ' +\n        'powered by <a href=\"https://bpmn.io\" target=\"_blank\" rel=\"noopener\">bpmn.io</a>.' +\n      '</span>' +\n    '</div>' +\n  '</div>';\n\n\nvar lightbox;\n\nexport function open() {\n\n  if (!lightbox) {\n    lightbox = domify(LIGHTBOX_MARKUP);\n\n    domDelegate.bind(lightbox, '.backdrop', 'click', function(event) {\n      document.body.removeChild(lightbox);\n    });\n  }\n\n  document.body.appendChild(lightbox);\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","import { isString, assign } from 'min-dash';\nimport { Moddle } from 'moddle';\nimport { Reader, Writer } from 'moddle-xml';\n\n/**\n * A sub class of {@link Moddle} with support for import and export of BPMN 2.0 xml files.\n *\n * @class BpmnModdle\n * @extends Moddle\n *\n * @param {Object|Array} packages to use for instantiating the model\n * @param {Object} [options] additional options to pass over\n */\nfunction BpmnModdle(packages, options) {\n  Moddle.call(this, packages, options);\n}\n\nBpmnModdle.prototype = Object.create(Moddle.prototype);\n\n/**\n * The fromXML result.\n *\n * @typedef {Object} ParseResult\n *\n * @property {ModdleElement} rootElement\n * @property {Array<Object>} references\n * @property {Array<Error>} warnings\n * @property {Object} elementsById - a mapping containing each ID -> ModdleElement\n */\n\n/**\n * The fromXML error.\n *\n * @typedef {Error} ParseError\n *\n * @property {Array<Error>} warnings\n */\n\n/**\n * Instantiates a BPMN model tree from a given xml string.\n *\n * @param {String}   xmlStr\n * @param {String}   [typeName='bpmn:Definitions'] name of the root element\n * @param {Object}   [options]  options to pass to the underlying reader\n *\n * @returns {Promise<ParseResult, ParseError>}\n */\nBpmnModdle.prototype.fromXML = function(xmlStr, typeName, options) {\n\n  if (!isString(typeName)) {\n    options = typeName;\n    typeName = 'bpmn:Definitions';\n  }\n\n  var reader = new Reader(assign({ model: this, lax: true }, options));\n  var rootHandler = reader.handler(typeName);\n\n  return reader.fromXML(xmlStr, rootHandler);\n};\n\n\n/**\n * The toXML result.\n *\n * @typedef {Object} SerializationResult\n *\n * @property {String} xml\n */\n\n/**\n * Serializes a BPMN 2.0 object tree to XML.\n *\n * @param {String}   element    the root element, typically an instance of `bpmn:Definitions`\n * @param {Object}   [options]  to pass to the underlying writer\n *\n * @returns {Promise<SerializationResult, Error>}\n */\nBpmnModdle.prototype.toXML = function(element, options) {\n\n  var writer = new Writer(options);\n\n  return new Promise(function(resolve, reject) {\n    try {\n      var result = writer.toXML(element);\n\n      return resolve({\n        xml: result\n      });\n    } catch (err) {\n      return reject(err);\n    }\n  });\n};\n\nvar name = \"BPMN20\";\nvar uri = \"http://www.omg.org/spec/BPMN/20100524/MODEL\";\nvar prefix = \"bpmn\";\nvar associations = [\n];\nvar types = [\n\t{\n\t\tname: \"Interface\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operations\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"implementationRef\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Operation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inMessageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outMessageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"errorRef\",\n\t\t\t\ttype: \"Error\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"implementationRef\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"EndPoint\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Auditing\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalTask\",\n\t\tsuperClass: [\n\t\t\t\"CallableElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"resources\",\n\t\t\t\ttype: \"ResourceRole\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Monitoring\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Performer\",\n\t\tsuperClass: [\n\t\t\t\"ResourceRole\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Process\",\n\t\tsuperClass: [\n\t\t\t\"FlowElementsContainer\",\n\t\t\t\"CallableElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"processType\",\n\t\t\t\ttype: \"ProcessType\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isClosed\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"auditing\",\n\t\t\t\ttype: \"Auditing\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"monitoring\",\n\t\t\t\ttype: \"Monitoring\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"properties\",\n\t\t\t\ttype: \"Property\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"laneSets\",\n\t\t\t\tisMany: true,\n\t\t\t\treplaces: \"FlowElementsContainer#laneSets\",\n\t\t\t\ttype: \"LaneSet\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"flowElements\",\n\t\t\t\tisMany: true,\n\t\t\t\treplaces: \"FlowElementsContainer#flowElements\",\n\t\t\t\ttype: \"FlowElement\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"artifacts\",\n\t\t\t\ttype: \"Artifact\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resources\",\n\t\t\t\ttype: \"ResourceRole\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationSubscriptions\",\n\t\t\t\ttype: \"CorrelationSubscription\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"supports\",\n\t\t\t\ttype: \"Process\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"definitionalCollaborationRef\",\n\t\t\t\ttype: \"Collaboration\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isExecutable\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"LaneSet\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"lanes\",\n\t\t\t\ttype: \"Lane\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Lane\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"partitionElementRef\",\n\t\t\t\ttype: \"BaseElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"partitionElement\",\n\t\t\t\ttype: \"BaseElement\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"flowNodeRef\",\n\t\t\t\ttype: \"FlowNode\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"childLaneSet\",\n\t\t\t\ttype: \"LaneSet\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalManualTask\",\n\t\tsuperClass: [\n\t\t\t\"GlobalTask\"\n\t\t]\n\t},\n\t{\n\t\tname: \"ManualTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t]\n\t},\n\t{\n\t\tname: \"UserTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"renderings\",\n\t\t\t\ttype: \"Rendering\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Rendering\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"HumanPerformer\",\n\t\tsuperClass: [\n\t\t\t\"Performer\"\n\t\t]\n\t},\n\t{\n\t\tname: \"PotentialOwner\",\n\t\tsuperClass: [\n\t\t\t\"HumanPerformer\"\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalUserTask\",\n\t\tsuperClass: [\n\t\t\t\"GlobalTask\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"renderings\",\n\t\t\t\ttype: \"Rendering\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Gateway\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"FlowNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"gatewayDirection\",\n\t\t\t\ttype: \"GatewayDirection\",\n\t\t\t\t\"default\": \"Unspecified\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"EventBasedGateway\",\n\t\tsuperClass: [\n\t\t\t\"Gateway\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"instantiate\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"eventGatewayType\",\n\t\t\t\ttype: \"EventBasedGatewayType\",\n\t\t\t\tisAttr: true,\n\t\t\t\t\"default\": \"Exclusive\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ComplexGateway\",\n\t\tsuperClass: [\n\t\t\t\"Gateway\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"activationCondition\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"default\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ExclusiveGateway\",\n\t\tsuperClass: [\n\t\t\t\"Gateway\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"default\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"InclusiveGateway\",\n\t\tsuperClass: [\n\t\t\t\"Gateway\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"default\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ParallelGateway\",\n\t\tsuperClass: [\n\t\t\t\"Gateway\"\n\t\t]\n\t},\n\t{\n\t\tname: \"RootElement\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Relationship\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"type\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"direction\",\n\t\t\t\ttype: \"RelationshipDirection\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"source\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"Element\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"Element\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"BaseElement\",\n\t\tisAbstract: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"id\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\",\n\t\t\t\tisId: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"documentation\",\n\t\t\t\ttype: \"Documentation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensionDefinitions\",\n\t\t\t\ttype: \"ExtensionDefinition\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensionElements\",\n\t\t\t\ttype: \"ExtensionElements\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Extension\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"mustUnderstand\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"definition\",\n\t\t\t\ttype: \"ExtensionDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ExtensionDefinition\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensionAttributeDefinitions\",\n\t\t\t\ttype: \"ExtensionAttributeDefinition\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ExtensionAttributeDefinition\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"type\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isReference\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensionDefinition\",\n\t\t\t\ttype: \"ExtensionDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ExtensionElements\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"valueRef\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"Element\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"values\",\n\t\t\t\ttype: \"Element\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensionAttributeDefinition\",\n\t\t\t\ttype: \"ExtensionAttributeDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Documentation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"text\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisBody: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"textFormat\",\n\t\t\t\t\"default\": \"text/plain\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Event\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"FlowNode\",\n\t\t\t\"InteractionNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"properties\",\n\t\t\t\ttype: \"Property\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"IntermediateCatchEvent\",\n\t\tsuperClass: [\n\t\t\t\"CatchEvent\"\n\t\t]\n\t},\n\t{\n\t\tname: \"IntermediateThrowEvent\",\n\t\tsuperClass: [\n\t\t\t\"ThrowEvent\"\n\t\t]\n\t},\n\t{\n\t\tname: \"EndEvent\",\n\t\tsuperClass: [\n\t\t\t\"ThrowEvent\"\n\t\t]\n\t},\n\t{\n\t\tname: \"StartEvent\",\n\t\tsuperClass: [\n\t\t\t\"CatchEvent\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"isInterrupting\",\n\t\t\t\t\"default\": true,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ThrowEvent\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Event\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataInputs\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataInputAssociations\",\n\t\t\t\ttype: \"DataInputAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSet\",\n\t\t\t\ttype: \"InputSet\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"eventDefinitions\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"eventDefinitionRef\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CatchEvent\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Event\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"parallelMultiple\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\t\"default\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataOutputs\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataOutputAssociations\",\n\t\t\t\ttype: \"DataOutputAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSet\",\n\t\t\t\ttype: \"OutputSet\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"eventDefinitions\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"eventDefinitionRef\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"BoundaryEvent\",\n\t\tsuperClass: [\n\t\t\t\"CatchEvent\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"cancelActivity\",\n\t\t\t\t\"default\": true,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"attachedToRef\",\n\t\t\t\ttype: \"Activity\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"EventDefinition\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"CancelEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t]\n\t},\n\t{\n\t\tname: \"ErrorEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"errorRef\",\n\t\t\t\ttype: \"Error\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"TerminateEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t]\n\t},\n\t{\n\t\tname: \"EscalationEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"escalationRef\",\n\t\t\t\ttype: \"Escalation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Escalation\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"structureRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"escalationCode\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"CompensateEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"waitForCompletion\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\t\"default\": true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"activityRef\",\n\t\t\t\ttype: \"Activity\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"TimerEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"timeDate\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"timeCycle\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"timeDuration\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"LinkEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\ttype: \"LinkEventDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"source\",\n\t\t\t\ttype: \"LinkEventDefinition\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"MessageEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"messageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operationRef\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ConditionalEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"condition\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"SignalEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"signalRef\",\n\t\t\t\ttype: \"Signal\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Signal\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"structureRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ImplicitThrowEvent\",\n\t\tsuperClass: [\n\t\t\t\"ThrowEvent\"\n\t\t]\n\t},\n\t{\n\t\tname: \"DataState\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ItemAwareElement\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"itemSubjectRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataState\",\n\t\t\t\ttype: \"DataState\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataAssociation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"sourceRef\",\n\t\t\t\ttype: \"ItemAwareElement\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetRef\",\n\t\t\t\ttype: \"ItemAwareElement\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"transformation\",\n\t\t\t\ttype: \"FormalExpression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"assignment\",\n\t\t\t\ttype: \"Assignment\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataInput\",\n\t\tsuperClass: [\n\t\t\t\"ItemAwareElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isCollection\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSetRef\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSetWithOptional\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSetWithWhileExecuting\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataOutput\",\n\t\tsuperClass: [\n\t\t\t\"ItemAwareElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isCollection\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSetRef\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSetWithOptional\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSetWithWhileExecuting\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"InputSet\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataInputRefs\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"optionalInputRefs\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"whileExecutingInputRefs\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSetRefs\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"OutputSet\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataOutputRefs\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSetRefs\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"optionalOutputRefs\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"whileExecutingOutputRefs\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Property\",\n\t\tsuperClass: [\n\t\t\t\"ItemAwareElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataInputAssociation\",\n\t\tsuperClass: [\n\t\t\t\"DataAssociation\"\n\t\t]\n\t},\n\t{\n\t\tname: \"DataOutputAssociation\",\n\t\tsuperClass: [\n\t\t\t\"DataAssociation\"\n\t\t]\n\t},\n\t{\n\t\tname: \"InputOutputSpecification\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataInputs\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataOutputs\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSets\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSets\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataObject\",\n\t\tsuperClass: [\n\t\t\t\"FlowElement\",\n\t\t\t\"ItemAwareElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"isCollection\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"InputOutputBinding\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"inputDataRef\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputDataRef\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operationRef\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Assignment\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"from\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataStore\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\",\n\t\t\t\"ItemAwareElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"capacity\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Integer\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isUnlimited\",\n\t\t\t\t\"default\": true,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataStoreReference\",\n\t\tsuperClass: [\n\t\t\t\"ItemAwareElement\",\n\t\t\t\"FlowElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataStoreRef\",\n\t\t\t\ttype: \"DataStore\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataObjectReference\",\n\t\tsuperClass: [\n\t\t\t\"ItemAwareElement\",\n\t\t\t\"FlowElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataObjectRef\",\n\t\t\t\ttype: \"DataObject\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ConversationLink\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"sourceRef\",\n\t\t\t\ttype: \"InteractionNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetRef\",\n\t\t\t\ttype: \"InteractionNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ConversationAssociation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"innerConversationNodeRef\",\n\t\t\t\ttype: \"ConversationNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outerConversationNodeRef\",\n\t\t\t\ttype: \"ConversationNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CallConversation\",\n\t\tsuperClass: [\n\t\t\t\"ConversationNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"calledCollaborationRef\",\n\t\t\t\ttype: \"Collaboration\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantAssociations\",\n\t\t\t\ttype: \"ParticipantAssociation\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Conversation\",\n\t\tsuperClass: [\n\t\t\t\"ConversationNode\"\n\t\t]\n\t},\n\t{\n\t\tname: \"SubConversation\",\n\t\tsuperClass: [\n\t\t\t\"ConversationNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"conversationNodes\",\n\t\t\t\ttype: \"ConversationNode\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ConversationNode\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"InteractionNode\",\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageFlowRefs\",\n\t\t\t\ttype: \"MessageFlow\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationKeys\",\n\t\t\t\ttype: \"CorrelationKey\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalConversation\",\n\t\tsuperClass: [\n\t\t\t\"Collaboration\"\n\t\t]\n\t},\n\t{\n\t\tname: \"PartnerEntity\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"PartnerRole\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CorrelationProperty\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"correlationPropertyRetrievalExpression\",\n\t\t\t\ttype: \"CorrelationPropertyRetrievalExpression\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"type\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Error\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"structureRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"errorCode\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CorrelationKey\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"correlationPropertyRef\",\n\t\t\t\ttype: \"CorrelationProperty\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Expression\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tisAbstract: false,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"body\",\n\t\t\t\tisBody: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"FormalExpression\",\n\t\tsuperClass: [\n\t\t\t\"Expression\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"language\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"evaluatesToTypeRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Message\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"itemRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ItemDefinition\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"itemKind\",\n\t\t\t\ttype: \"ItemKind\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"structureRef\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isCollection\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"import\",\n\t\t\t\ttype: \"Import\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"FlowElement\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"auditing\",\n\t\t\t\ttype: \"Auditing\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"monitoring\",\n\t\t\t\ttype: \"Monitoring\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"categoryValueRef\",\n\t\t\t\ttype: \"CategoryValue\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"SequenceFlow\",\n\t\tsuperClass: [\n\t\t\t\"FlowElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"isImmediate\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"conditionExpression\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sourceRef\",\n\t\t\t\ttype: \"FlowNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetRef\",\n\t\t\t\ttype: \"FlowNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"FlowElementsContainer\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"laneSets\",\n\t\t\t\ttype: \"LaneSet\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"flowElements\",\n\t\t\t\ttype: \"FlowElement\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CallableElement\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ioSpecification\",\n\t\t\t\ttype: \"InputOutputSpecification\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"supportedInterfaceRef\",\n\t\t\t\ttype: \"Interface\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ioBinding\",\n\t\t\t\ttype: \"InputOutputBinding\",\n\t\t\t\tisMany: true,\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"FlowNode\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"FlowElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"incoming\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outgoing\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"lanes\",\n\t\t\t\ttype: \"Lane\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CorrelationPropertyRetrievalExpression\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"messagePath\",\n\t\t\t\ttype: \"FormalExpression\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CorrelationPropertyBinding\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataPath\",\n\t\t\t\ttype: \"FormalExpression\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationPropertyRef\",\n\t\t\t\ttype: \"CorrelationProperty\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Resource\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resourceParameters\",\n\t\t\t\ttype: \"ResourceParameter\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ResourceParameter\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isRequired\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"type\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CorrelationSubscription\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"correlationKeyRef\",\n\t\t\t\ttype: \"CorrelationKey\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationPropertyBinding\",\n\t\t\t\ttype: \"CorrelationPropertyBinding\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"MessageFlow\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sourceRef\",\n\t\t\t\ttype: \"InteractionNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetRef\",\n\t\t\t\ttype: \"InteractionNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"MessageFlowAssociation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"innerMessageFlowRef\",\n\t\t\t\ttype: \"MessageFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outerMessageFlowRef\",\n\t\t\t\ttype: \"MessageFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"InteractionNode\",\n\t\tisAbstract: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"incomingConversationLinks\",\n\t\t\t\ttype: \"ConversationLink\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outgoingConversationLinks\",\n\t\t\t\ttype: \"ConversationLink\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Participant\",\n\t\tsuperClass: [\n\t\t\t\"InteractionNode\",\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"interfaceRef\",\n\t\t\t\ttype: \"Interface\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantMultiplicity\",\n\t\t\t\ttype: \"ParticipantMultiplicity\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endPointRefs\",\n\t\t\t\ttype: \"EndPoint\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"processRef\",\n\t\t\t\ttype: \"Process\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ParticipantAssociation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"innerParticipantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outerParticipantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ParticipantMultiplicity\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"minimum\",\n\t\t\t\t\"default\": 0,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Integer\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"maximum\",\n\t\t\t\t\"default\": 1,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Integer\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Collaboration\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isClosed\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participants\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageFlows\",\n\t\t\t\ttype: \"MessageFlow\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"artifacts\",\n\t\t\t\ttype: \"Artifact\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"conversations\",\n\t\t\t\ttype: \"ConversationNode\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"conversationAssociations\",\n\t\t\t\ttype: \"ConversationAssociation\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantAssociations\",\n\t\t\t\ttype: \"ParticipantAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageFlowAssociations\",\n\t\t\t\ttype: \"MessageFlowAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationKeys\",\n\t\t\t\ttype: \"CorrelationKey\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"choreographyRef\",\n\t\t\t\ttype: \"Choreography\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"conversationLinks\",\n\t\t\t\ttype: \"ConversationLink\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ChoreographyActivity\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"FlowNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"participantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"initiatingParticipantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationKeys\",\n\t\t\t\ttype: \"CorrelationKey\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopType\",\n\t\t\t\ttype: \"ChoreographyLoopType\",\n\t\t\t\t\"default\": \"None\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CallChoreography\",\n\t\tsuperClass: [\n\t\t\t\"ChoreographyActivity\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"calledChoreographyRef\",\n\t\t\t\ttype: \"Choreography\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantAssociations\",\n\t\t\t\ttype: \"ParticipantAssociation\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"SubChoreography\",\n\t\tsuperClass: [\n\t\t\t\"ChoreographyActivity\",\n\t\t\t\"FlowElementsContainer\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"artifacts\",\n\t\t\t\ttype: \"Artifact\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ChoreographyTask\",\n\t\tsuperClass: [\n\t\t\t\"ChoreographyActivity\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"messageFlowRef\",\n\t\t\t\ttype: \"MessageFlow\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Choreography\",\n\t\tsuperClass: [\n\t\t\t\"Collaboration\",\n\t\t\t\"FlowElementsContainer\"\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalChoreographyTask\",\n\t\tsuperClass: [\n\t\t\t\"Choreography\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"initiatingParticipantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"TextAnnotation\",\n\t\tsuperClass: [\n\t\t\t\"Artifact\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"text\",\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"textFormat\",\n\t\t\t\t\"default\": \"text/plain\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Group\",\n\t\tsuperClass: [\n\t\t\t\"Artifact\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"categoryValueRef\",\n\t\t\t\ttype: \"CategoryValue\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Association\",\n\t\tsuperClass: [\n\t\t\t\"Artifact\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"associationDirection\",\n\t\t\t\ttype: \"AssociationDirection\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sourceRef\",\n\t\t\t\ttype: \"BaseElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetRef\",\n\t\t\t\ttype: \"BaseElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Category\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"categoryValue\",\n\t\t\t\ttype: \"CategoryValue\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Artifact\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"CategoryValue\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"categorizedFlowElements\",\n\t\t\t\ttype: \"FlowElement\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"value\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Activity\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"FlowNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"isForCompensation\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"default\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ioSpecification\",\n\t\t\t\ttype: \"InputOutputSpecification\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"boundaryEventRefs\",\n\t\t\t\ttype: \"BoundaryEvent\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"properties\",\n\t\t\t\ttype: \"Property\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataInputAssociations\",\n\t\t\t\ttype: \"DataInputAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataOutputAssociations\",\n\t\t\t\ttype: \"DataOutputAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"startQuantity\",\n\t\t\t\t\"default\": 1,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Integer\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resources\",\n\t\t\t\ttype: \"ResourceRole\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"completionQuantity\",\n\t\t\t\t\"default\": 1,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Integer\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopCharacteristics\",\n\t\t\t\ttype: \"LoopCharacteristics\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ServiceTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operationRef\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"SubProcess\",\n\t\tsuperClass: [\n\t\t\t\"Activity\",\n\t\t\t\"FlowElementsContainer\",\n\t\t\t\"InteractionNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"triggeredByEvent\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"artifacts\",\n\t\t\t\ttype: \"Artifact\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"LoopCharacteristics\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"MultiInstanceLoopCharacteristics\",\n\t\tsuperClass: [\n\t\t\t\"LoopCharacteristics\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"isSequential\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"behavior\",\n\t\t\t\ttype: \"MultiInstanceBehavior\",\n\t\t\t\t\"default\": \"All\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopCardinality\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopDataInputRef\",\n\t\t\t\ttype: \"ItemAwareElement\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopDataOutputRef\",\n\t\t\t\ttype: \"ItemAwareElement\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputDataItem\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputDataItem\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"complexBehaviorDefinition\",\n\t\t\t\ttype: \"ComplexBehaviorDefinition\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"completionCondition\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"oneBehaviorEventRef\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"noneBehaviorEventRef\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"StandardLoopCharacteristics\",\n\t\tsuperClass: [\n\t\t\t\"LoopCharacteristics\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"testBefore\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopCondition\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopMaximum\",\n\t\t\t\ttype: \"Integer\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CallActivity\",\n\t\tsuperClass: [\n\t\t\t\"Activity\",\n\t\t\t\"InteractionNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"calledElement\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Task\",\n\t\tsuperClass: [\n\t\t\t\"Activity\",\n\t\t\t\"InteractionNode\"\n\t\t]\n\t},\n\t{\n\t\tname: \"SendTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operationRef\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ReceiveTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"instantiate\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operationRef\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ScriptTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"scriptFormat\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"script\",\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"BusinessRuleTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"AdHocSubProcess\",\n\t\tsuperClass: [\n\t\t\t\"SubProcess\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"completionCondition\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ordering\",\n\t\t\t\ttype: \"AdHocOrdering\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"cancelRemainingInstances\",\n\t\t\t\t\"default\": true,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Transaction\",\n\t\tsuperClass: [\n\t\t\t\"SubProcess\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"protocol\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"method\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalScriptTask\",\n\t\tsuperClass: [\n\t\t\t\"GlobalTask\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"scriptLanguage\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"script\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalBusinessRuleTask\",\n\t\tsuperClass: [\n\t\t\t\"GlobalTask\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ComplexBehaviorDefinition\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"condition\",\n\t\t\t\ttype: \"FormalExpression\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"event\",\n\t\t\t\ttype: \"ImplicitThrowEvent\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ResourceRole\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"resourceRef\",\n\t\t\t\ttype: \"Resource\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resourceParameterBindings\",\n\t\t\t\ttype: \"ResourceParameterBinding\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resourceAssignmentExpression\",\n\t\t\t\ttype: \"ResourceAssignmentExpression\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ResourceParameterBinding\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"expression\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"parameterRef\",\n\t\t\t\ttype: \"ResourceParameter\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"ResourceAssignmentExpression\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"expression\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Import\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"importType\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"location\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"namespace\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Definitions\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetNamespace\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"expressionLanguage\",\n\t\t\t\t\"default\": \"http://www.w3.org/1999/XPath\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"typeLanguage\",\n\t\t\t\t\"default\": \"http://www.w3.org/2001/XMLSchema\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"imports\",\n\t\t\t\ttype: \"Import\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensions\",\n\t\t\t\ttype: \"Extension\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"rootElements\",\n\t\t\t\ttype: \"RootElement\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"diagrams\",\n\t\t\t\tisMany: true,\n\t\t\t\ttype: \"bpmndi:BPMNDiagram\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"exporter\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"relationships\",\n\t\t\t\ttype: \"Relationship\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"exporterVersion\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t}\n];\nvar enumerations = [\n\t{\n\t\tname: \"ProcessType\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"None\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Public\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Private\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"GatewayDirection\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"Unspecified\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Converging\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Diverging\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Mixed\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"EventBasedGatewayType\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"Parallel\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Exclusive\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"RelationshipDirection\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"None\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Forward\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Backward\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Both\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ItemKind\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"Physical\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Information\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ChoreographyLoopType\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"None\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Standard\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"MultiInstanceSequential\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"MultiInstanceParallel\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"AssociationDirection\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"None\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"One\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Both\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"MultiInstanceBehavior\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"None\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"One\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"All\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Complex\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"AdHocOrdering\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"Parallel\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Sequential\"\n\t\t\t}\n\t\t]\n\t}\n];\nvar xml = {\n\ttagAlias: \"lowerCase\",\n\ttypePrefix: \"t\"\n};\nvar BpmnPackage = {\n\tname: name,\n\turi: uri,\n\tprefix: prefix,\n\tassociations: associations,\n\ttypes: types,\n\tenumerations: enumerations,\n\txml: xml\n};\n\nvar name$1 = \"BPMNDI\";\nvar uri$1 = \"http://www.omg.org/spec/BPMN/20100524/DI\";\nvar prefix$1 = \"bpmndi\";\nvar types$1 = [\n\t{\n\t\tname: \"BPMNDiagram\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"plane\",\n\t\t\t\ttype: \"BPMNPlane\",\n\t\t\t\tredefines: \"di:Diagram#rootElement\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"labelStyle\",\n\t\t\t\ttype: \"BPMNLabelStyle\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:Diagram\"\n\t\t]\n\t},\n\t{\n\t\tname: \"BPMNPlane\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"bpmnElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"bpmn:BaseElement\",\n\t\t\t\tredefines: \"di:DiagramElement#modelElement\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:Plane\"\n\t\t]\n\t},\n\t{\n\t\tname: \"BPMNShape\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"bpmnElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"bpmn:BaseElement\",\n\t\t\t\tredefines: \"di:DiagramElement#modelElement\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isHorizontal\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isExpanded\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isMarkerVisible\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"label\",\n\t\t\t\ttype: \"BPMNLabel\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isMessageVisible\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantBandKind\",\n\t\t\t\ttype: \"ParticipantBandKind\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"choreographyActivityShape\",\n\t\t\t\ttype: \"BPMNShape\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:LabeledShape\"\n\t\t]\n\t},\n\t{\n\t\tname: \"BPMNEdge\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"label\",\n\t\t\t\ttype: \"BPMNLabel\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"bpmnElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"bpmn:BaseElement\",\n\t\t\t\tredefines: \"di:DiagramElement#modelElement\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sourceElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"di:DiagramElement\",\n\t\t\t\tredefines: \"di:Edge#source\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"di:DiagramElement\",\n\t\t\t\tredefines: \"di:Edge#target\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageVisibleKind\",\n\t\t\t\ttype: \"MessageVisibleKind\",\n\t\t\t\tisAttr: true,\n\t\t\t\t\"default\": \"initiating\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:LabeledEdge\"\n\t\t]\n\t},\n\t{\n\t\tname: \"BPMNLabel\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"labelStyle\",\n\t\t\t\ttype: \"BPMNLabelStyle\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\tredefines: \"di:DiagramElement#style\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:Label\"\n\t\t]\n\t},\n\t{\n\t\tname: \"BPMNLabelStyle\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"font\",\n\t\t\t\ttype: \"dc:Font\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:Style\"\n\t\t]\n\t}\n];\nvar enumerations$1 = [\n\t{\n\t\tname: \"ParticipantBandKind\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"top_initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"middle_initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"bottom_initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"top_non_initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"middle_non_initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"bottom_non_initiating\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"MessageVisibleKind\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"non_initiating\"\n\t\t\t}\n\t\t]\n\t}\n];\nvar associations$1 = [\n];\nvar BpmnDiPackage = {\n\tname: name$1,\n\turi: uri$1,\n\tprefix: prefix$1,\n\ttypes: types$1,\n\tenumerations: enumerations$1,\n\tassociations: associations$1\n};\n\nvar name$2 = \"DC\";\nvar uri$2 = \"http://www.omg.org/spec/DD/20100524/DC\";\nvar prefix$2 = \"dc\";\nvar types$2 = [\n\t{\n\t\tname: \"Boolean\"\n\t},\n\t{\n\t\tname: \"Integer\"\n\t},\n\t{\n\t\tname: \"Real\"\n\t},\n\t{\n\t\tname: \"String\"\n\t},\n\t{\n\t\tname: \"Font\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"size\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isBold\",\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isItalic\",\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isUnderline\",\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isStrikeThrough\",\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Point\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"x\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\t\"default\": \"0\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"y\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\t\"default\": \"0\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Bounds\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"x\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\t\"default\": \"0\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"y\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\t\"default\": \"0\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"width\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"height\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t}\n];\nvar associations$2 = [\n];\nvar DcPackage = {\n\tname: name$2,\n\turi: uri$2,\n\tprefix: prefix$2,\n\ttypes: types$2,\n\tassociations: associations$2\n};\n\nvar name$3 = \"DI\";\nvar uri$3 = \"http://www.omg.org/spec/DD/20100524/DI\";\nvar prefix$3 = \"di\";\nvar types$3 = [\n\t{\n\t\tname: \"DiagramElement\",\n\t\tisAbstract: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"id\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisId: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extension\",\n\t\t\t\ttype: \"Extension\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"owningDiagram\",\n\t\t\t\ttype: \"Diagram\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"owningElement\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"modelElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"Element\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"style\",\n\t\t\t\ttype: \"Style\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ownedElement\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Node\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"DiagramElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Edge\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"DiagramElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"source\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"waypoint\",\n\t\t\t\tisUnique: false,\n\t\t\t\tisMany: true,\n\t\t\t\ttype: \"dc:Point\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Diagram\",\n\t\tisAbstract: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"id\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisId: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"rootElement\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"documentation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resolution\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Real\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ownedStyle\",\n\t\t\t\ttype: \"Style\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Shape\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Node\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"bounds\",\n\t\t\t\ttype: \"dc:Bounds\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Plane\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Node\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"planeElement\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tsubsettedProperty: \"DiagramElement-ownedElement\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"LabeledEdge\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Edge\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"ownedLabel\",\n\t\t\t\ttype: \"Label\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tsubsettedProperty: \"DiagramElement-ownedElement\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"LabeledShape\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Shape\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"ownedLabel\",\n\t\t\t\ttype: \"Label\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tsubsettedProperty: \"DiagramElement-ownedElement\",\n\t\t\t\tisMany: true,\n\t\t\t\tisVirtual: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Label\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Node\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"bounds\",\n\t\t\t\ttype: \"dc:Bounds\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Style\",\n\t\tisAbstract: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"id\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisId: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Extension\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"values\",\n\t\t\t\tisMany: true,\n\t\t\t\ttype: \"Element\"\n\t\t\t}\n\t\t]\n\t}\n];\nvar associations$3 = [\n];\nvar xml$1 = {\n\ttagAlias: \"lowerCase\"\n};\nvar DiPackage = {\n\tname: name$3,\n\turi: uri$3,\n\tprefix: prefix$3,\n\ttypes: types$3,\n\tassociations: associations$3,\n\txml: xml$1\n};\n\nvar name$4 = \"bpmn.io colors for BPMN\";\nvar uri$4 = \"http://bpmn.io/schema/bpmn/biocolor/1.0\";\nvar prefix$4 = \"bioc\";\nvar types$4 = [\n\t{\n\t\tname: \"ColoredShape\",\n\t\t\"extends\": [\n\t\t\t\"bpmndi:BPMNShape\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"stroke\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"fill\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ColoredEdge\",\n\t\t\"extends\": [\n\t\t\t\"bpmndi:BPMNEdge\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"stroke\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"fill\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t}\n];\nvar enumerations$2 = [\n];\nvar associations$4 = [\n];\nvar BiocPackage = {\n\tname: name$4,\n\turi: uri$4,\n\tprefix: prefix$4,\n\ttypes: types$4,\n\tenumerations: enumerations$2,\n\tassociations: associations$4\n};\n\nvar name$5 = \"BPMN in Color\";\nvar uri$5 = \"http://www.omg.org/spec/BPMN/non-normative/color/1.0\";\nvar prefix$5 = \"color\";\nvar types$5 = [\n\t{\n\t\tname: \"ColoredLabel\",\n\t\t\"extends\": [\n\t\t\t\"bpmndi:BPMNLabel\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"color\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ColoredShape\",\n\t\t\"extends\": [\n\t\t\t\"bpmndi:BPMNShape\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"background-color\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"border-color\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ColoredEdge\",\n\t\t\"extends\": [\n\t\t\t\"bpmndi:BPMNEdge\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"border-color\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t}\n];\nvar enumerations$3 = [\n];\nvar associations$5 = [\n];\nvar BpmnInColorPackage = {\n\tname: name$5,\n\turi: uri$5,\n\tprefix: prefix$5,\n\ttypes: types$5,\n\tenumerations: enumerations$3,\n\tassociations: associations$5\n};\n\nvar packages = {\n  bpmn: BpmnPackage,\n  bpmndi: BpmnDiPackage,\n  dc: DcPackage,\n  di: DiPackage,\n  bioc: BiocPackage,\n  color: BpmnInColorPackage\n};\n\nfunction simple(additionalPackages, options) {\n  var pks = assign({}, packages, additionalPackages);\n\n  return new BpmnModdle(pks, options);\n}\n\nexport default simple;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@font-face {\\n  font-family: 'bpmn';\\n  src: url('../font/bpmn.eot?26374340');\\n  src: url('../font/bpmn.eot?26374340#iefix') format('embedded-opentype'),\\n       url('../font/bpmn.woff2?26374340') format('woff2'),\\n       url('../font/bpmn.woff?26374340') format('woff'),\\n       url('../font/bpmn.ttf?26374340') format('truetype'),\\n       url('../font/bpmn.svg?26374340#bpmn') format('svg');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\\n/*\\n@media screen and (-webkit-min-device-pixel-ratio:0) {\\n  @font-face {\\n    font-family: 'bpmn';\\n    src: url('../font/bpmn.svg?26374340#bpmn') format('svg');\\n  }\\n}\\n*/\\n\\n [class^=\\\"bpmn-icon-\\\"]:before, [class*=\\\" bpmn-icon-\\\"]:before {\\n  font-family: \\\"bpmn\\\";\\n  font-style: normal;\\n  font-weight: normal;\\n  speak: never;\\n\\n  display: inline-block;\\n  text-decoration: inherit;\\n  width: 1em;\\n  /* margin-right: .2em; */\\n  text-align: center;\\n  /* opacity: .8; */\\n\\n  /* For safety - reset parent styles, that can break glyph codes*/\\n  font-variant: normal;\\n  text-transform: none;\\n\\n  /* fix buttons height, for twitter bootstrap */\\n  line-height: 1em;\\n\\n  /* Animation center compensation - margins should be symmetric */\\n  /* remove if not needed */\\n  /* margin-left: .2em; */\\n\\n  /* you can be more comfortable with increased icons size */\\n  /* font-size: 120%; */\\n\\n  /* Font smoothing. That was taken from TWBS */\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n\\n  /* Uncomment for 3D effect */\\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\\n}\\n\\n.bpmn-icon-screw-wrench:before { content: '\\\\e800'; } /* '' */\\n.bpmn-icon-trash:before { content: '\\\\e801'; } /* '' */\\n.bpmn-icon-conditional-flow:before { content: '\\\\e802'; } /* '' */\\n.bpmn-icon-default-flow:before { content: '\\\\e803'; } /* '' */\\n.bpmn-icon-gateway-parallel:before { content: '\\\\e804'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-cancel:before { content: '\\\\e805'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-message:before { content: '\\\\e806'; } /* '' */\\n.bpmn-icon-start-event-compensation:before { content: '\\\\e807'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-parallel-multiple:before { content: '\\\\e808'; } /* '' */\\n.bpmn-icon-loop-marker:before { content: '\\\\e809'; } /* '' */\\n.bpmn-icon-parallel-mi-marker:before { content: '\\\\e80a'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-signal:before { content: '\\\\e80b'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-timer:before { content: '\\\\e80c'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-parallel-multiple:before { content: '\\\\e80d'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-compensation:before { content: '\\\\e80e'; } /* '' */\\n.bpmn-icon-gateway-xor:before { content: '\\\\e80f'; } /* '' */\\n.bpmn-icon-connection:before { content: '\\\\e810'; } /* '' */\\n.bpmn-icon-end-event-cancel:before { content: '\\\\e811'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-condition:before { content: '\\\\e812'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-parallel-multiple:before { content: '\\\\e813'; } /* '' */\\n.bpmn-icon-start-event-condition:before { content: '\\\\e814'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-timer:before { content: '\\\\e815'; } /* '' */\\n.bpmn-icon-sequential-mi-marker:before { content: '\\\\e816'; } /* '' */\\n.bpmn-icon-user-task:before { content: '\\\\e817'; } /* '' */\\n.bpmn-icon-business-rule:before { content: '\\\\e818'; } /* '' */\\n.bpmn-icon-sub-process-marker:before { content: '\\\\e819'; } /* '' */\\n.bpmn-icon-start-event-parallel-multiple:before { content: '\\\\e81a'; } /* '' */\\n.bpmn-icon-start-event-error:before { content: '\\\\e81b'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-signal:before { content: '\\\\e81c'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-error:before { content: '\\\\e81d'; } /* '' */\\n.bpmn-icon-end-event-compensation:before { content: '\\\\e81e'; } /* '' */\\n.bpmn-icon-subprocess-collapsed:before { content: '\\\\e81f'; } /* '' */\\n.bpmn-icon-subprocess-expanded:before { content: '\\\\e820'; } /* '' */\\n.bpmn-icon-task:before { content: '\\\\e821'; } /* '' */\\n.bpmn-icon-end-event-error:before { content: '\\\\e822'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-escalation:before { content: '\\\\e823'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-timer:before { content: '\\\\e824'; } /* '' */\\n.bpmn-icon-start-event-escalation:before { content: '\\\\e825'; } /* '' */\\n.bpmn-icon-start-event-signal:before { content: '\\\\e826'; } /* '' */\\n.bpmn-icon-business-rule-task:before { content: '\\\\e827'; } /* '' */\\n.bpmn-icon-manual:before { content: '\\\\e828'; } /* '' */\\n.bpmn-icon-receive:before { content: '\\\\e829'; } /* '' */\\n.bpmn-icon-call-activity:before { content: '\\\\e82a'; } /* '' */\\n.bpmn-icon-start-event-timer:before { content: '\\\\e82b'; } /* '' */\\n.bpmn-icon-start-event-message:before { content: '\\\\e82c'; } /* '' */\\n.bpmn-icon-intermediate-event-none:before { content: '\\\\e82d'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-link:before { content: '\\\\e82e'; } /* '' */\\n.bpmn-icon-end-event-escalation:before { content: '\\\\e82f'; } /* '' */\\n.bpmn-icon-text-annotation:before { content: '\\\\e830'; } /* '' */\\n.bpmn-icon-bpmn-io:before { content: '\\\\e831'; } /* '' */\\n.bpmn-icon-gateway-complex:before { content: '\\\\e832'; } /* '' */\\n.bpmn-icon-gateway-eventbased:before { content: '\\\\e833'; } /* '' */\\n.bpmn-icon-gateway-none:before { content: '\\\\e834'; } /* '' */\\n.bpmn-icon-gateway-or:before { content: '\\\\e835'; } /* '' */\\n.bpmn-icon-end-event-terminate:before { content: '\\\\e836'; } /* '' */\\n.bpmn-icon-end-event-signal:before { content: '\\\\e837'; } /* '' */\\n.bpmn-icon-end-event-none:before { content: '\\\\e838'; } /* '' */\\n.bpmn-icon-end-event-multiple:before { content: '\\\\e839'; } /* '' */\\n.bpmn-icon-end-event-message:before { content: '\\\\e83a'; } /* '' */\\n.bpmn-icon-end-event-link:before { content: '\\\\e83b'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-message:before { content: '\\\\e83c'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-compensation:before { content: '\\\\e83d'; } /* '' */\\n.bpmn-icon-start-event-multiple:before { content: '\\\\e83e'; } /* '' */\\n.bpmn-icon-script:before { content: '\\\\e83f'; } /* '' */\\n.bpmn-icon-manual-task:before { content: '\\\\e840'; } /* '' */\\n.bpmn-icon-send:before { content: '\\\\e841'; } /* '' */\\n.bpmn-icon-service:before { content: '\\\\e842'; } /* '' */\\n.bpmn-icon-receive-task:before { content: '\\\\e843'; } /* '' */\\n.bpmn-icon-user:before { content: '\\\\e844'; } /* '' */\\n.bpmn-icon-start-event-none:before { content: '\\\\e845'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-escalation:before { content: '\\\\e846'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-multiple:before { content: '\\\\e847'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-escalation:before { content: '\\\\e848'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-link:before { content: '\\\\e849'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-condition:before { content: '\\\\e84a'; } /* '' */\\n.bpmn-icon-data-object:before { content: '\\\\e84b'; } /* '' */\\n.bpmn-icon-script-task:before { content: '\\\\e84c'; } /* '' */\\n.bpmn-icon-send-task:before { content: '\\\\e84d'; } /* '' */\\n.bpmn-icon-data-store:before { content: '\\\\e84e'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-escalation:before { content: '\\\\e84f'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-message:before { content: '\\\\e850'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-multiple:before { content: '\\\\e851'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-signal:before { content: '\\\\e852'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-multiple:before { content: '\\\\e853'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-message:before { content: '\\\\e854'; } /* '' */\\n.bpmn-icon-ad-hoc-marker:before { content: '\\\\e855'; } /* '' */\\n.bpmn-icon-service-task:before { content: '\\\\e856'; } /* '' */\\n.bpmn-icon-task-none:before { content: '\\\\e857'; } /* '' */\\n.bpmn-icon-compensation-marker:before { content: '\\\\e858'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-multiple:before { content: '\\\\e859'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-signal:before { content: '\\\\e85a'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-condition:before { content: '\\\\e85b'; } /* '' */\\n.bpmn-icon-participant:before { content: '\\\\e85c'; } /* '' */\\n.bpmn-icon-event-subprocess-expanded:before { content: '\\\\e85d'; } /* '' */\\n.bpmn-icon-lane-insert-below:before { content: '\\\\e85e'; } /* '' */\\n.bpmn-icon-space-tool:before { content: '\\\\e85f'; } /* '' */\\n.bpmn-icon-connection-multi:before { content: '\\\\e860'; } /* '' */\\n.bpmn-icon-lane:before { content: '\\\\e861'; } /* '' */\\n.bpmn-icon-lasso-tool:before { content: '\\\\e862'; } /* '' */\\n.bpmn-icon-lane-insert-above:before { content: '\\\\e863'; } /* '' */\\n.bpmn-icon-lane-divide-three:before { content: '\\\\e864'; } /* '' */\\n.bpmn-icon-lane-divide-two:before { content: '\\\\e865'; } /* '' */\\n.bpmn-icon-data-input:before { content: '\\\\e866'; } /* '' */\\n.bpmn-icon-data-output:before { content: '\\\\e867'; } /* '' */\\n.bpmn-icon-hand-tool:before { content: '\\\\e868'; } /* '' */\\n.bpmn-icon-group:before { content: '\\\\e869'; } /* '' */\\n.bpmn-icon-transaction:before { content: '\\\\e8c4'; } /* '' */\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/bpmn-js/dist/assets/bpmn-font/css/bpmn.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@font-face {\\n  font-family: 'bpmn';\\n  src: url('../font/bpmn.eot?26374340');\\n  src: url('../font/bpmn.eot?26374340#iefix') format('embedded-opentype'),\\n       url('../font/bpmn.woff2?26374340') format('woff2'),\\n       url('../font/bpmn.woff?26374340') format('woff'),\\n       url('../font/bpmn.ttf?26374340') format('truetype'),\\n       url('../font/bpmn.svg?26374340#bpmn') format('svg');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\\n/*\\n@media screen and (-webkit-min-device-pixel-ratio:0) {\\n  @font-face {\\n    font-family: 'bpmn';\\n    src: url('../font/bpmn.svg?26374340#bpmn') format('svg');\\n  }\\n}\\n*/\\n\\n [class^=\\\"bpmn-icon-\\\"]:before, [class*=\\\" bpmn-icon-\\\"]:before {\\n  font-family: \\\"bpmn\\\";\\n  font-style: normal;\\n  font-weight: normal;\\n  speak: never;\\n\\n  display: inline-block;\\n  text-decoration: inherit;\\n  width: 1em;\\n  /* margin-right: .2em; */\\n  text-align: center;\\n  /* opacity: .8; */\\n\\n  /* For safety - reset parent styles, that can break glyph codes*/\\n  font-variant: normal;\\n  text-transform: none;\\n\\n  /* fix buttons height, for twitter bootstrap */\\n  line-height: 1em;\\n\\n  /* Animation center compensation - margins should be symmetric */\\n  /* remove if not needed */\\n  /* margin-left: .2em; */\\n\\n  /* you can be more comfortable with increased icons size */\\n  /* font-size: 120%; */\\n\\n  /* Font smoothing. That was taken from TWBS */\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n\\n  /* Uncomment for 3D effect */\\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\\n}\\n\\n.bpmn-icon-screw-wrench:before { content: '\\\\e800'; } /* '' */\\n.bpmn-icon-trash:before { content: '\\\\e801'; } /* '' */\\n.bpmn-icon-conditional-flow:before { content: '\\\\e802'; } /* '' */\\n.bpmn-icon-default-flow:before { content: '\\\\e803'; } /* '' */\\n.bpmn-icon-gateway-parallel:before { content: '\\\\e804'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-cancel:before { content: '\\\\e805'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-message:before { content: '\\\\e806'; } /* '' */\\n.bpmn-icon-start-event-compensation:before { content: '\\\\e807'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-parallel-multiple:before { content: '\\\\e808'; } /* '' */\\n.bpmn-icon-loop-marker:before { content: '\\\\e809'; } /* '' */\\n.bpmn-icon-parallel-mi-marker:before { content: '\\\\e80a'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-signal:before { content: '\\\\e80b'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-timer:before { content: '\\\\e80c'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-parallel-multiple:before { content: '\\\\e80d'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-compensation:before { content: '\\\\e80e'; } /* '' */\\n.bpmn-icon-gateway-xor:before { content: '\\\\e80f'; } /* '' */\\n.bpmn-icon-connection:before { content: '\\\\e810'; } /* '' */\\n.bpmn-icon-end-event-cancel:before { content: '\\\\e811'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-condition:before { content: '\\\\e812'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-parallel-multiple:before { content: '\\\\e813'; } /* '' */\\n.bpmn-icon-start-event-condition:before { content: '\\\\e814'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-timer:before { content: '\\\\e815'; } /* '' */\\n.bpmn-icon-sequential-mi-marker:before { content: '\\\\e816'; } /* '' */\\n.bpmn-icon-user-task:before { content: '\\\\e817'; } /* '' */\\n.bpmn-icon-business-rule:before { content: '\\\\e818'; } /* '' */\\n.bpmn-icon-sub-process-marker:before { content: '\\\\e819'; } /* '' */\\n.bpmn-icon-start-event-parallel-multiple:before { content: '\\\\e81a'; } /* '' */\\n.bpmn-icon-start-event-error:before { content: '\\\\e81b'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-signal:before { content: '\\\\e81c'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-error:before { content: '\\\\e81d'; } /* '' */\\n.bpmn-icon-end-event-compensation:before { content: '\\\\e81e'; } /* '' */\\n.bpmn-icon-subprocess-collapsed:before { content: '\\\\e81f'; } /* '' */\\n.bpmn-icon-subprocess-expanded:before { content: '\\\\e820'; } /* '' */\\n.bpmn-icon-task:before { content: '\\\\e821'; } /* '' */\\n.bpmn-icon-end-event-error:before { content: '\\\\e822'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-escalation:before { content: '\\\\e823'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-timer:before { content: '\\\\e824'; } /* '' */\\n.bpmn-icon-start-event-escalation:before { content: '\\\\e825'; } /* '' */\\n.bpmn-icon-start-event-signal:before { content: '\\\\e826'; } /* '' */\\n.bpmn-icon-business-rule-task:before { content: '\\\\e827'; } /* '' */\\n.bpmn-icon-manual:before { content: '\\\\e828'; } /* '' */\\n.bpmn-icon-receive:before { content: '\\\\e829'; } /* '' */\\n.bpmn-icon-call-activity:before { content: '\\\\e82a'; } /* '' */\\n.bpmn-icon-start-event-timer:before { content: '\\\\e82b'; } /* '' */\\n.bpmn-icon-start-event-message:before { content: '\\\\e82c'; } /* '' */\\n.bpmn-icon-intermediate-event-none:before { content: '\\\\e82d'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-link:before { content: '\\\\e82e'; } /* '' */\\n.bpmn-icon-end-event-escalation:before { content: '\\\\e82f'; } /* '' */\\n.bpmn-icon-text-annotation:before { content: '\\\\e830'; } /* '' */\\n.bpmn-icon-bpmn-io:before { content: '\\\\e831'; } /* '' */\\n.bpmn-icon-gateway-complex:before { content: '\\\\e832'; } /* '' */\\n.bpmn-icon-gateway-eventbased:before { content: '\\\\e833'; } /* '' */\\n.bpmn-icon-gateway-none:before { content: '\\\\e834'; } /* '' */\\n.bpmn-icon-gateway-or:before { content: '\\\\e835'; } /* '' */\\n.bpmn-icon-end-event-terminate:before { content: '\\\\e836'; } /* '' */\\n.bpmn-icon-end-event-signal:before { content: '\\\\e837'; } /* '' */\\n.bpmn-icon-end-event-none:before { content: '\\\\e838'; } /* '' */\\n.bpmn-icon-end-event-multiple:before { content: '\\\\e839'; } /* '' */\\n.bpmn-icon-end-event-message:before { content: '\\\\e83a'; } /* '' */\\n.bpmn-icon-end-event-link:before { content: '\\\\e83b'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-message:before { content: '\\\\e83c'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-compensation:before { content: '\\\\e83d'; } /* '' */\\n.bpmn-icon-start-event-multiple:before { content: '\\\\e83e'; } /* '' */\\n.bpmn-icon-script:before { content: '\\\\e83f'; } /* '' */\\n.bpmn-icon-manual-task:before { content: '\\\\e840'; } /* '' */\\n.bpmn-icon-send:before { content: '\\\\e841'; } /* '' */\\n.bpmn-icon-service:before { content: '\\\\e842'; } /* '' */\\n.bpmn-icon-receive-task:before { content: '\\\\e843'; } /* '' */\\n.bpmn-icon-user:before { content: '\\\\e844'; } /* '' */\\n.bpmn-icon-start-event-none:before { content: '\\\\e845'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-escalation:before { content: '\\\\e846'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-multiple:before { content: '\\\\e847'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-escalation:before { content: '\\\\e848'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-link:before { content: '\\\\e849'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-condition:before { content: '\\\\e84a'; } /* '' */\\n.bpmn-icon-data-object:before { content: '\\\\e84b'; } /* '' */\\n.bpmn-icon-script-task:before { content: '\\\\e84c'; } /* '' */\\n.bpmn-icon-send-task:before { content: '\\\\e84d'; } /* '' */\\n.bpmn-icon-data-store:before { content: '\\\\e84e'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-escalation:before { content: '\\\\e84f'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-message:before { content: '\\\\e850'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-multiple:before { content: '\\\\e851'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-signal:before { content: '\\\\e852'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-multiple:before { content: '\\\\e853'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-message:before { content: '\\\\e854'; } /* '' */\\n.bpmn-icon-ad-hoc-marker:before { content: '\\\\e855'; } /* '' */\\n.bpmn-icon-service-task:before { content: '\\\\e856'; } /* '' */\\n.bpmn-icon-task-none:before { content: '\\\\e857'; } /* '' */\\n.bpmn-icon-compensation-marker:before { content: '\\\\e858'; } /* '' */\\n.bpmn-icon-start-event-non-interrupting-multiple:before { content: '\\\\e859'; } /* '' */\\n.bpmn-icon-intermediate-event-throw-signal:before { content: '\\\\e85a'; } /* '' */\\n.bpmn-icon-intermediate-event-catch-non-interrupting-condition:before { content: '\\\\e85b'; } /* '' */\\n.bpmn-icon-participant:before { content: '\\\\e85c'; } /* '' */\\n.bpmn-icon-event-subprocess-expanded:before { content: '\\\\e85d'; } /* '' */\\n.bpmn-icon-lane-insert-below:before { content: '\\\\e85e'; } /* '' */\\n.bpmn-icon-space-tool:before { content: '\\\\e85f'; } /* '' */\\n.bpmn-icon-connection-multi:before { content: '\\\\e860'; } /* '' */\\n.bpmn-icon-lane:before { content: '\\\\e861'; } /* '' */\\n.bpmn-icon-lasso-tool:before { content: '\\\\e862'; } /* '' */\\n.bpmn-icon-lane-insert-above:before { content: '\\\\e863'; } /* '' */\\n.bpmn-icon-lane-divide-three:before { content: '\\\\e864'; } /* '' */\\n.bpmn-icon-lane-divide-two:before { content: '\\\\e865'; } /* '' */\\n.bpmn-icon-data-input:before { content: '\\\\e866'; } /* '' */\\n.bpmn-icon-data-output:before { content: '\\\\e867'; } /* '' */\\n.bpmn-icon-hand-tool:before { content: '\\\\e868'; } /* '' */\\n.bpmn-icon-group:before { content: '\\\\e869'; } /* '' */\\n.bpmn-icon-transaction:before { content: '\\\\e8c4'; } /* '' */\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".bjs-container {\\n  --bjs-font-family: Arial, sans-serif;\\n\\n  --color-grey-225-10-15: hsl(225, 10%, 15%);\\n  --color-grey-225-10-35: hsl(225, 10%, 35%);\\n  --color-grey-225-10-55: hsl(225, 10%, 55%);\\n  --color-grey-225-10-75: hsl(225, 10%, 75%);\\n  --color-grey-225-10-80: hsl(225, 10%, 80%);\\n  --color-grey-225-10-85: hsl(225, 10%, 85%);\\n  --color-grey-225-10-90: hsl(225, 10%, 90%);\\n  --color-grey-225-10-95: hsl(225, 10%, 95%); \\n  --color-grey-225-10-97: hsl(225, 10%, 97%);\\n\\n  --color-blue-205-100-45: hsl(205, 100%, 45%);\\n  --color-blue-205-100-45-opacity-30: hsla(205, 100%, 45%, 30%);\\n  --color-blue-205-100-50: hsl(205, 100%, 50%);\\n  --color-blue-205-100-95: hsl(205, 100%, 95%);\\n\\n  --color-green-150-86-44: hsl(150, 86%, 44%);\\n\\n  --color-red-360-100-40: hsl(360, 100%, 40%);\\n  --color-red-360-100-45: hsl(360, 100%, 45%);\\n  --color-red-360-100-92: hsl(360, 100%, 92%);\\n  --color-red-360-100-97: hsl(360, 100%, 97%);\\n\\n  --color-white: hsl(0, 0%, 100%);\\n  --color-black: hsl(0, 0%, 0%); \\n  --color-black-opacity-05: hsla(0, 0%, 0%, 5%); \\n  --color-black-opacity-10: hsla(0, 0%, 0%, 10%);\\n\\n  --breadcrumbs-font-family: var(--bjs-font-family);\\n  --breadcrumbs-item-color: var(--color-blue-205-100-50);\\n  --breadcrumbs-arrow-color: var(--color-black);\\n  --drilldown-fill-color: var(--color-white);\\n  --drilldown-background-color: var(--color-blue-205-100-50);\\n}\\n\\n.bjs-breadcrumbs {\\n  position: absolute;\\n  display: none;\\n  flex-wrap: wrap;\\n  align-items: center;\\n  top: 30px;\\n  left: 30px;\\n  padding: 0px;\\n  margin: 0px;\\n  font-family: var(--breadcrumbs-font-family);\\n  font-size: 16px;\\n  line-height: normal;\\n}\\n\\n.bjs-breadcrumbs-shown .bjs-breadcrumbs {\\n  display: flex;\\n}\\n\\n.djs-palette-shown .bjs-breadcrumbs {\\n  left: 90px;\\n}\\n\\n.djs-palette-shown.djs-palette-two-column .bjs-breadcrumbs {\\n  left: 140px;\\n}\\n\\n.bjs-breadcrumbs li {\\n  display: inline-flex;\\n  padding-bottom: 5px;\\n}\\n\\n.bjs-breadcrumbs li a {\\n  cursor: pointer;\\n  color: var(--breadcrumbs-item-color);\\n}\\n\\n.bjs-breadcrumbs li:last-of-type a {\\n  color: inherit;\\n  cursor: default;\\n}\\n\\n.bjs-breadcrumbs li:not(:first-child)::before {\\n  content: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"17\\\" height=\\\"17\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\" /><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>');\\n  padding: 0 8px;\\n  color: var(--breadcrumbs-arrow-color);\\n  height: 1em;\\n}\\n\\n.bjs-breadcrumbs .bjs-crumb {\\n  display: inline-block;\\n  max-width: 200px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.bjs-drilldown {\\n  width: 20px;\\n  height: 20px;\\n\\n  padding: 0px;\\n  margin-left: -20px;\\n\\n  cursor: pointer;\\n  border: none;\\n  border-radius: 2px;\\n  outline: none;\\n\\n  fill: var(--drilldown-fill-color);\\n  background-color: var(--drilldown-background-color);\\n}\\n\\n.bjs-drilldown-empty {\\n  display: none;\\n}\\n\\n.selected .bjs-drilldown-empty {\\n  display: inherit;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/bpmn-js/dist/assets/bpmn-js.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,oCAAoC;;EAEpC,0CAA0C;EAC1C,0CAA0C;EAC1C,0CAA0C;EAC1C,0CAA0C;EAC1C,0CAA0C;EAC1C,0CAA0C;EAC1C,0CAA0C;EAC1C,0CAA0C;EAC1C,0CAA0C;;EAE1C,4CAA4C;EAC5C,6DAA6D;EAC7D,4CAA4C;EAC5C,4CAA4C;;EAE5C,2CAA2C;;EAE3C,2CAA2C;EAC3C,2CAA2C;EAC3C,2CAA2C;EAC3C,2CAA2C;;EAE3C,+BAA+B;EAC/B,6BAA6B;EAC7B,6CAA6C;EAC7C,8CAA8C;;EAE9C,iDAAiD;EACjD,sDAAsD;EACtD,6CAA6C;EAC7C,0CAA0C;EAC1C,0DAA0D;AAC5D;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,eAAe;EACf,mBAAmB;EACnB,SAAS;EACT,UAAU;EACV,YAAY;EACZ,WAAW;EACX,2CAA2C;EAC3C,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,oBAAoB;EACpB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,oCAAoC;AACtC;;AAEA;EACE,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,kOAAkO;EAClO,cAAc;EACd,qCAAqC;EACrC,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;EAChB,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;;EAEZ,YAAY;EACZ,kBAAkB;;EAElB,eAAe;EACf,YAAY;EACZ,kBAAkB;EAClB,aAAa;;EAEb,iCAAiC;EACjC,mDAAmD;AACrD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;AAClB\",\"sourcesContent\":[\".bjs-container {\\n  --bjs-font-family: Arial, sans-serif;\\n\\n  --color-grey-225-10-15: hsl(225, 10%, 15%);\\n  --color-grey-225-10-35: hsl(225, 10%, 35%);\\n  --color-grey-225-10-55: hsl(225, 10%, 55%);\\n  --color-grey-225-10-75: hsl(225, 10%, 75%);\\n  --color-grey-225-10-80: hsl(225, 10%, 80%);\\n  --color-grey-225-10-85: hsl(225, 10%, 85%);\\n  --color-grey-225-10-90: hsl(225, 10%, 90%);\\n  --color-grey-225-10-95: hsl(225, 10%, 95%); \\n  --color-grey-225-10-97: hsl(225, 10%, 97%);\\n\\n  --color-blue-205-100-45: hsl(205, 100%, 45%);\\n  --color-blue-205-100-45-opacity-30: hsla(205, 100%, 45%, 30%);\\n  --color-blue-205-100-50: hsl(205, 100%, 50%);\\n  --color-blue-205-100-95: hsl(205, 100%, 95%);\\n\\n  --color-green-150-86-44: hsl(150, 86%, 44%);\\n\\n  --color-red-360-100-40: hsl(360, 100%, 40%);\\n  --color-red-360-100-45: hsl(360, 100%, 45%);\\n  --color-red-360-100-92: hsl(360, 100%, 92%);\\n  --color-red-360-100-97: hsl(360, 100%, 97%);\\n\\n  --color-white: hsl(0, 0%, 100%);\\n  --color-black: hsl(0, 0%, 0%); \\n  --color-black-opacity-05: hsla(0, 0%, 0%, 5%); \\n  --color-black-opacity-10: hsla(0, 0%, 0%, 10%);\\n\\n  --breadcrumbs-font-family: var(--bjs-font-family);\\n  --breadcrumbs-item-color: var(--color-blue-205-100-50);\\n  --breadcrumbs-arrow-color: var(--color-black);\\n  --drilldown-fill-color: var(--color-white);\\n  --drilldown-background-color: var(--color-blue-205-100-50);\\n}\\n\\n.bjs-breadcrumbs {\\n  position: absolute;\\n  display: none;\\n  flex-wrap: wrap;\\n  align-items: center;\\n  top: 30px;\\n  left: 30px;\\n  padding: 0px;\\n  margin: 0px;\\n  font-family: var(--breadcrumbs-font-family);\\n  font-size: 16px;\\n  line-height: normal;\\n}\\n\\n.bjs-breadcrumbs-shown .bjs-breadcrumbs {\\n  display: flex;\\n}\\n\\n.djs-palette-shown .bjs-breadcrumbs {\\n  left: 90px;\\n}\\n\\n.djs-palette-shown.djs-palette-two-column .bjs-breadcrumbs {\\n  left: 140px;\\n}\\n\\n.bjs-breadcrumbs li {\\n  display: inline-flex;\\n  padding-bottom: 5px;\\n}\\n\\n.bjs-breadcrumbs li a {\\n  cursor: pointer;\\n  color: var(--breadcrumbs-item-color);\\n}\\n\\n.bjs-breadcrumbs li:last-of-type a {\\n  color: inherit;\\n  cursor: default;\\n}\\n\\n.bjs-breadcrumbs li:not(:first-child)::before {\\n  content: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"17\\\" height=\\\"17\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\" /><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /></svg>');\\n  padding: 0 8px;\\n  color: var(--breadcrumbs-arrow-color);\\n  height: 1em;\\n}\\n\\n.bjs-breadcrumbs .bjs-crumb {\\n  display: inline-block;\\n  max-width: 200px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.bjs-drilldown {\\n  width: 20px;\\n  height: 20px;\\n\\n  padding: 0px;\\n  margin-left: -20px;\\n\\n  cursor: pointer;\\n  border: none;\\n  border-radius: 2px;\\n  outline: none;\\n\\n  fill: var(--drilldown-fill-color);\\n  background-color: var(--drilldown-background-color);\\n}\\n\\n.bjs-drilldown-empty {\\n  display: none;\\n}\\n\\n.selected .bjs-drilldown-empty {\\n  display: inherit;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/**\\n * color definitions\\n */\\n.djs-container {\\n  --color-grey-225-10-15: hsl(225, 10%, 15%);\\n  --color-grey-225-10-35: hsl(225, 10%, 35%);\\n  --color-grey-225-10-55: hsl(225, 10%, 55%);\\n  --color-grey-225-10-75: hsl(225, 10%, 75%);\\n  --color-grey-225-10-80: hsl(225, 10%, 80%);\\n  --color-grey-225-10-85: hsl(225, 10%, 85%);\\n  --color-grey-225-10-90: hsl(225, 10%, 90%);\\n  --color-grey-225-10-95: hsl(225, 10%, 95%); \\n  --color-grey-225-10-97: hsl(225, 10%, 97%);\\n\\n  --color-blue-205-100-45: hsl(205, 100%, 45%);\\n  --color-blue-205-100-45-opacity-30: hsla(205, 100%, 45%, 30%);\\n  --color-blue-205-100-50: hsl(205, 100%, 50%);\\n  --color-blue-205-100-95: hsl(205, 100%, 95%);\\n\\n  --color-green-150-86-44: hsl(150, 86%, 44%);\\n\\n  --color-red-360-100-40: hsl(360, 100%, 40%);\\n  --color-red-360-100-45: hsl(360, 100%, 45%);\\n  --color-red-360-100-92: hsl(360, 100%, 92%);\\n  --color-red-360-100-97: hsl(360, 100%, 97%);\\n\\n  --color-white: hsl(0, 0%, 100%);\\n  --color-black: hsl(0, 0%, 0%); \\n  --color-black-opacity-05: hsla(0, 0%, 0%, 5%); \\n  --color-black-opacity-10: hsla(0, 0%, 0%, 10%);\\n\\n  --bendpoint-fill-color: var(--color-blue-205-100-45-opacity-30);\\n  --bendpoint-stroke-color: var(--color-blue-205-100-50);\\n\\n  --context-pad-entry-background-color: var(--color-white);\\n  --context-pad-entry-hover-background-color: var(--color-grey-225-10-95);\\n\\n  --element-dragger-color: var(--color-blue-205-100-50);\\n  --element-hover-outline-fill-color: var(--color-blue-205-100-45);\\n  --element-selected-outline-stroke-color: var(--color-blue-205-100-50);\\n\\n  --lasso-fill-color: var(--color-black-opacity-05);\\n  --lasso-stroke-color: var(--color-black);\\n\\n  --palette-entry-color: var(--color-grey-225-10-15);\\n  --palette-entry-hover-color: var(--color-blue-205-100-45);\\n  --palette-entry-selected-color: var(--color-blue-205-100-50);\\n  --palette-separator-color: var(--color-grey-225-10-75);\\n  --palette-toggle-hover-background-color: var(--color-grey-225-10-55);\\n  --palette-background-color: var(--color-grey-225-10-97);\\n  --palette-border-color: var(--color-grey-225-10-75);\\n\\n  --popup-body-background-color: var(--color-white);\\n  --popup-header-entry-selected-color: var(--color-blue-205-100-50);\\n  --popup-header-entry-selected-background-color: var(--color-black-opacity-10);\\n  --popup-header-separator-color: var(--color-grey-225-10-75);\\n  --popup-background-color: var(--color-grey-225-10-97);\\n  --popup-border-color: var(--color-grey-225-10-75);\\n\\n  --resizer-fill-color: var(--color-blue-205-100-45-opacity-30);\\n  --resizer-stroke-color: var(--color-blue-205-100-50);\\n\\n  --search-container-background-color: var(--color-grey-225-10-97);\\n  --search-container-border-color: var(--color-blue-205-100-50);\\n  --search-container-box-shadow-color: var(--color-blue-205-100-95);\\n  --search-container-box-shadow-inset-color: var(--color-grey-225-10-80);\\n  --search-input-border-color: var(--color-grey-225-10-75);\\n  --search-result-border-color: var(--color-grey-225-10-75);\\n  --search-result-highlight-color: var(--color-black);\\n  --search-result-selected-color: var(--color-blue-205-100-45-opacity-30);\\n\\n  --shape-attach-allowed-stroke-color: var(--color-blue-205-100-50);\\n  --shape-connect-allowed-fill-color: var(--color-grey-225-10-97);\\n  --shape-drop-allowed-fill-color: var(--color-grey-225-10-97);\\n  --shape-drop-not-allowed-fill-color: var(--color-red-360-100-97);\\n  --shape-resize-preview-stroke-color: var(--color-blue-205-100-50);\\n\\n  --snap-line-stroke-color: var(--color-blue-205-100-45-opacity-30);\\n\\n  --space-tool-crosshair-stroke-color: var(--color-black);\\n\\n  --tooltip-error-background-color: var(--color-red-360-100-97);\\n  --tooltip-error-border-color: var(--color-red-360-100-45);\\n  --tooltip-error-color: var(--color-red-360-100-45);\\n}\\n\\n/**\\n * outline styles\\n */\\n\\n.djs-outline {\\n  fill: none;\\n  visibility: hidden;\\n}\\n\\n.djs-element.hover .djs-outline,\\n.djs-element.selected .djs-outline {\\n  visibility: visible;\\n  shape-rendering: geometricPrecision;\\n  stroke-dasharray: 3,3;\\n}\\n\\n.djs-element.selected .djs-outline {\\n  stroke: var(--element-selected-outline-stroke-color);\\n  stroke-width: 1px;\\n}\\n\\n.djs-element.hover .djs-outline {\\n  stroke: var(--element-hover-outline-fill-color);\\n  stroke-width: 1px;\\n}\\n\\n.djs-shape.connect-ok .djs-visual > :nth-child(1) {\\n  fill: var(--shape-connect-allowed-fill-color) !important;\\n}\\n\\n.djs-shape.connect-not-ok .djs-visual > :nth-child(1),\\n.djs-shape.drop-not-ok .djs-visual > :nth-child(1) {\\n  fill: var(--shape-drop-not-allowed-fill-color) !important;\\n}\\n\\n.djs-shape.new-parent .djs-visual > :nth-child(1) {\\n  fill: var(--shape-drop-allowed-fill-color) !important;\\n}\\n\\nsvg.drop-not-ok {\\n  background: var(--shape-drop-not-allowed-fill-color) !important;\\n}\\n\\nsvg.new-parent {\\n  background: var(--shape-drop-allowed-fill-color) !important;\\n}\\n\\n.djs-connection.connect-ok .djs-visual > :nth-child(1),\\n.djs-connection.drop-ok .djs-visual > :nth-child(1) {\\n  stroke: var(--shape-drop-allowed-fill-color) !important;\\n}\\n\\n.djs-connection.connect-not-ok .djs-visual > :nth-child(1),\\n.djs-connection.drop-not-ok .djs-visual > :nth-child(1) {\\n  stroke: var(--shape-drop-not-allowed-fill-color) !important;\\n}\\n\\n.drop-not-ok,\\n.connect-not-ok {\\n  cursor: not-allowed;\\n}\\n\\n.djs-element.attach-ok .djs-visual > :nth-child(1) {\\n  stroke-width: 5px !important;\\n  stroke: var(--shape-attach-allowed-stroke-color) !important;\\n}\\n\\n.djs-frame.connect-not-ok .djs-visual > :nth-child(1),\\n.djs-frame.drop-not-ok .djs-visual > :nth-child(1) {\\n  stroke-width: 3px !important;\\n  stroke: var(--shape-drop-not-allowed-fill-color) !important;\\n  fill: none !important;\\n}\\n\\n/**\\n* Selection box style\\n*\\n*/\\n.djs-lasso-overlay {\\n  fill: var(--lasso-fill-color);\\n\\n  stroke-dasharray: 5 1 3 1;\\n  stroke: var(--lasso-stroke-color);\\n\\n  shape-rendering: geometricPrecision;\\n  pointer-events: none;\\n}\\n\\n/**\\n * Resize styles\\n */\\n.djs-resize-overlay {\\n  fill: none;\\n\\n  stroke-dasharray: 5 1 3 1;\\n  stroke: var(--shape-resize-preview-stroke-color);\\n\\n  pointer-events: none;\\n}\\n\\n.djs-resizer-hit {\\n  fill: none;\\n  pointer-events: all;\\n}\\n\\n.djs-resizer-visual {\\n  fill: var(--resizer-fill-color);\\n  stroke-width: 1px;\\n  stroke-opacity: 0.5;\\n  stroke: var(--resizer-stroke-color);\\n  shape-rendering: geometricprecision;\\n}\\n\\n.djs-resizer:hover .djs-resizer-visual {\\n  stroke: var(--resizer-stroke-color);\\n  stroke-opacity: 1;\\n}\\n\\n.djs-cursor-resize-ns,\\n.djs-resizer-n,\\n.djs-resizer-s {\\n  cursor: ns-resize;\\n}\\n\\n.djs-cursor-resize-ew,\\n.djs-resizer-e,\\n.djs-resizer-w {\\n  cursor: ew-resize;\\n}\\n\\n.djs-cursor-resize-nwse,\\n.djs-resizer-nw,\\n.djs-resizer-se {\\n  cursor: nwse-resize;\\n}\\n\\n.djs-cursor-resize-nesw,\\n.djs-resizer-ne,\\n.djs-resizer-sw {\\n  cursor: nesw-resize;\\n}\\n\\n.djs-shape.djs-resizing > .djs-outline {\\n  visibility: hidden !important;\\n}\\n\\n.djs-shape.djs-resizing > .djs-resizer {\\n  visibility: hidden;\\n}\\n\\n.djs-dragger > .djs-resizer {\\n  visibility: hidden;\\n}\\n\\n/**\\n * drag styles\\n */\\n.djs-dragger * {\\n  fill: none !important;\\n  stroke: var(--element-dragger-color) !important;\\n}\\n\\n.djs-dragger tspan,\\n.djs-dragger text {\\n  fill: var(--element-dragger-color) !important;\\n  stroke: none !important;\\n}\\n\\nmarker.djs-dragger circle,\\nmarker.djs-dragger path,\\nmarker.djs-dragger polygon,\\nmarker.djs-dragger polyline,\\nmarker.djs-dragger rect {\\n  fill: var(--element-dragger-color) !important;\\n  stroke: none !important;\\n}\\n\\nmarker.djs-dragger text,\\nmarker.djs-dragger tspan {\\n  fill: none !important;\\n  stroke: var(--element-dragger-color) !important;\\n}\\n\\n.djs-dragging {\\n  opacity: 0.3;\\n}\\n\\n.djs-dragging,\\n.djs-dragging > * {\\n  pointer-events: none !important;\\n}\\n\\n.djs-dragging .djs-context-pad,\\n.djs-dragging .djs-outline {\\n  display: none !important;\\n}\\n\\n/**\\n * no pointer events for visual\\n */\\n.djs-visual,\\n.djs-outline {\\n  pointer-events: none;\\n}\\n\\n.djs-element.attach-ok .djs-hit {\\n  stroke-width: 60px !important;\\n}\\n\\n/**\\n * all pointer events for hit shape\\n */\\n.djs-element > .djs-hit-all {\\n  pointer-events: all;\\n}\\n\\n.djs-element > .djs-hit-stroke,\\n.djs-element > .djs-hit-click-stroke {\\n  pointer-events: stroke;\\n}\\n\\n/**\\n * all pointer events for hit shape\\n */\\n.djs-drag-active .djs-element > .djs-hit-click-stroke {\\n  pointer-events: all;\\n}\\n\\n/**\\n * shape / connection basic styles\\n */\\n.djs-connection .djs-visual {\\n  stroke-width: 2px;\\n  fill: none;\\n}\\n\\n.djs-cursor-grab {\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n\\n.djs-cursor-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n\\n.djs-cursor-crosshair {\\n  cursor: crosshair;\\n}\\n\\n.djs-cursor-move {\\n  cursor: move;\\n}\\n\\n.djs-cursor-resize-ns {\\n  cursor: ns-resize;\\n}\\n\\n.djs-cursor-resize-ew {\\n  cursor: ew-resize;\\n}\\n\\n\\n/**\\n * snapping\\n */\\n.djs-snap-line {\\n  stroke: var(--snap-line-stroke-color);\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  pointer-events: none;\\n}\\n\\n/**\\n * snapping\\n */\\n.djs-crosshair {\\n  stroke: var(--space-tool-crosshair-stroke-color);\\n  stroke-linecap: round;\\n  stroke-width: 1px;\\n  pointer-events: none;\\n  shape-rendering: crispEdges;\\n  stroke-dasharray: 5, 5;\\n}\\n\\n/**\\n * palette\\n */\\n\\n.djs-palette {\\n  position: absolute;\\n  left: 20px;\\n  top: 20px;\\n\\n  box-sizing: border-box;\\n  width: 48px;\\n}\\n\\n.djs-palette .separator {\\n  margin: 0 5px;\\n  padding-top: 5px;\\n\\n  border: none;\\n  border-bottom: solid 1px var(--palette-separator-color);\\n\\n  clear: both;\\n}\\n\\n.djs-palette .entry:before {\\n  vertical-align: text-bottom;\\n}\\n\\n.djs-palette .djs-palette-toggle {\\n  cursor: pointer;\\n}\\n\\n.djs-palette .entry,\\n.djs-palette .djs-palette-toggle {\\n  color: var(--palette-entry-color);\\n  font-size: 30px;\\n\\n  text-align: center;\\n}\\n\\n.djs-palette .entry {\\n  float: left;\\n}\\n\\n.djs-palette .entry img {\\n  max-width: 100%;\\n}\\n\\n.djs-palette .djs-palette-entries:after {\\n  content: '';\\n  display: table;\\n  clear: both;\\n}\\n\\n.djs-palette .djs-palette-toggle:hover {\\n  background: var(--palette-toggle-hover-background-color);\\n}\\n\\n.djs-palette .entry:hover {\\n  color: var(--palette-entry-hover-color);\\n}\\n\\n.djs-palette .highlighted-entry {\\n  color: var(--palette-entry-selected-color) !important;\\n}\\n\\n.djs-palette .entry,\\n.djs-palette .djs-palette-toggle {\\n  width: 46px;\\n  height: 46px;\\n  line-height: 46px;\\n  cursor: default;\\n}\\n\\n/**\\n * Palette open / two-column layout is controlled via\\n * classes on the palette. Events to hook into palette\\n * changed life-cycle are available in addition.\\n */\\n.djs-palette.two-column.open {\\n  width: 94px;\\n}\\n\\n.djs-palette:not(.open) .djs-palette-entries {\\n  display: none;\\n}\\n\\n.djs-palette:not(.open) {\\n  overflow: hidden;\\n}\\n\\n.djs-palette.open .djs-palette-toggle {\\n  display: none;\\n}\\n\\n/**\\n * context-pad\\n */\\n.djs-overlay-context-pad {\\n  width: 72px;\\n  z-index: 100;\\n}\\n\\n.djs-context-pad {\\n  position: absolute;\\n  display: none;\\n  pointer-events: none;\\n}\\n\\n.djs-context-pad .entry {\\n  width: 22px;\\n  height: 22px;\\n  text-align: center;\\n  display: inline-block;\\n  font-size: 22px;\\n  margin: 0 2px 2px 0;\\n\\n  border-radius: 3px;\\n\\n  cursor: default;\\n\\n  background-color: var(--context-pad-entry-background-color);\\n  box-shadow: 0 0 2px 1px var(--context-pad-entry-background-color);\\n  pointer-events: all;\\n}\\n\\n.djs-context-pad .entry:before {\\n  vertical-align: top;\\n}\\n\\n.djs-context-pad .entry:hover {\\n  background: var(--context-pad-entry-hover-background-color);\\n}\\n\\n.djs-context-pad.open {\\n  display: block;\\n}\\n\\n/**\\n * popup styles\\n */\\n.djs-popup .entry {\\n  line-height: 20px;\\n  white-space: nowrap;\\n  cursor: default;\\n}\\n\\n/* larger font for prefixed icons */\\n.djs-popup .entry:before {\\n  vertical-align: middle;\\n  font-size: 20px;\\n}\\n\\n.djs-popup .entry > span {\\n  vertical-align: middle;\\n  font-size: 14px;\\n}\\n\\n.djs-popup .entry:hover,\\n.djs-popup .entry.active:hover {\\n  background: var(--popup-header-entry-selected-background-color);\\n}\\n\\n.djs-popup .entry.disabled {\\n  background: inherit;\\n}\\n\\n.djs-popup .djs-popup-header .entry {\\n  display: inline-block;\\n  padding: 2px 3px 2px 3px;\\n\\n  border: solid 1px transparent;\\n  border-radius: 3px;\\n}\\n\\n.djs-popup .djs-popup-header .entry.active {\\n  color: var(--popup-header-entry-selected-color);\\n  border: solid 1px var(--popup-header-entry-selected-color);\\n  background-color: var(--popup-header-entry-selected-background-color);\\n}\\n\\n.djs-popup-body .entry {\\n  padding: 4px 10px 4px 5px;\\n}\\n\\n.djs-popup-body .entry > span {\\n  margin-left: 5px;\\n}\\n\\n.djs-popup-body {\\n  background-color: var(--popup-body-background-color);\\n}\\n\\n.djs-popup-header {\\n  border-bottom: 1px solid var(--popup-header-separator-color);\\n}\\n\\n.djs-popup-header .entry {\\n  margin: 1px;\\n  margin-left: 3px;\\n}\\n\\n.djs-popup-header .entry:last-child {\\n  margin-right: 3px;\\n}\\n\\n/**\\n * popup / palette styles\\n */\\n.djs-palette {\\n  background: var(--palette-background-color);\\n  border: solid 1px var(--palette-border-color);\\n  border-radius: 2px;\\n}\\n\\n.djs-popup {\\n  background: var(--popup-background-color);\\n  border: solid 1px var(--popup-border-color);\\n  border-radius: 2px;\\n}\\n\\n/**\\n * touch\\n */\\n\\n.djs-shape,\\n.djs-connection {\\n  touch-action: none;\\n}\\n\\n.djs-segment-dragger,\\n.djs-bendpoint {\\n  display: none;\\n}\\n\\n/**\\n * bendpoints\\n */\\n.djs-segment-dragger .djs-visual {\\n  display: none;\\n\\n  fill: var(--bendpoint-fill-color);\\n  stroke: var(--bendpoint-stroke-color);\\n  stroke-width: 1px;\\n  stroke-opacity: 1;\\n}\\n\\n.djs-segment-dragger:hover .djs-visual {\\n  display: block;\\n}\\n\\n.djs-bendpoint .djs-visual {\\n  fill: var(--bendpoint-fill-color);\\n  stroke: var(--bendpoint-stroke-color);\\n  stroke-width: 1px;\\n  stroke-opacity: 0.5;\\n}\\n\\n.djs-segment-dragger:hover,\\n.djs-bendpoints.hover .djs-segment-dragger,\\n.djs-bendpoints.selected .djs-segment-dragger,\\n.djs-bendpoint:hover,\\n.djs-bendpoints.hover .djs-bendpoint,\\n.djs-bendpoints.selected .djs-bendpoint {\\n  display: block;\\n}\\n\\n.djs-drag-active .djs-bendpoints * {\\n  display: none;\\n}\\n\\n.djs-bendpoints:not(.hover) .floating {\\n  display: none;\\n}\\n\\n.djs-segment-dragger:hover .djs-visual,\\n.djs-segment-dragger.djs-dragging .djs-visual,\\n.djs-bendpoint:hover .djs-visual,\\n.djs-bendpoint.floating .djs-visual {\\n  fill: var(--bendpoint-fill-color);\\n  stroke: var(--bendpoint-stroke-color);\\n  stroke-opacity: 1;\\n}\\n\\n.djs-bendpoint.floating .djs-hit {\\n  pointer-events: none;\\n}\\n\\n.djs-segment-dragger .djs-hit,\\n.djs-bendpoint .djs-hit {\\n  fill: none;\\n  pointer-events: all;\\n}\\n\\n.djs-segment-dragger.horizontal .djs-hit {\\n  cursor: ns-resize;\\n}\\n\\n.djs-segment-dragger.vertical .djs-hit {\\n  cursor: ew-resize;\\n}\\n\\n.djs-segment-dragger.djs-dragging .djs-hit {\\n  pointer-events: none;\\n}\\n\\n.djs-updating,\\n.djs-updating > * {\\n  pointer-events: none !important;\\n}\\n\\n.djs-updating .djs-context-pad,\\n.djs-updating .djs-outline,\\n.djs-updating .djs-bendpoint,\\n.connect-ok .djs-bendpoint,\\n.connect-not-ok .djs-bendpoint,\\n.drop-ok .djs-bendpoint,\\n.drop-not-ok .djs-bendpoint {\\n  display: none !important;\\n}\\n\\n.djs-segment-dragger.djs-dragging,\\n.djs-bendpoint.djs-dragging {\\n  display: block;\\n  opacity: 1.0;\\n}\\n\\n\\n/**\\n * tooltips\\n */\\n.djs-tooltip-error {\\n  width: 160px;\\n  padding: 6px;\\n\\n  background: var(--tooltip-error-background-color);\\n  border: solid 1px var(--tooltip-error-border-color);\\n  border-radius: 2px;\\n  color: var(--tooltip-error-color);\\n  font-size: 12px;\\n  line-height: 16px;\\n\\n  opacity: 0.75;\\n}\\n\\n.djs-tooltip-error:hover {\\n  opacity: 1;\\n}\\n\\n\\n/**\\n * search pad\\n */\\n.djs-search-container {\\n  position: absolute;\\n  top: 20px;\\n  left: 0;\\n  right: 0;\\n  margin-left: auto;\\n  margin-right: auto;\\n\\n  width: 25%;\\n  min-width: 300px;\\n  max-width: 400px;\\n  z-index: 10;\\n\\n  font-size: 1.05em;\\n  opacity: 0.9;\\n  background: var(--search-container-background-color);\\n  border: solid 1px var(--search-container-border-color);\\n  border-radius: 2px;\\n  box-shadow: 0 0 0 2px var(--search-container-box-shadow-color), 0 0 0 1px var(--search-container-box-shadow-inset-color) inset;\\n}\\n\\n.djs-search-container:not(.open) {\\n  display: none;\\n}\\n\\n.djs-search-input input {\\n  font-size: 1.05em;\\n  width: 100%;\\n  padding: 6px 10px;\\n  border: 1px solid var(--search-input-border-color);\\n  box-sizing: border-box;\\n}\\n\\n.djs-search-input input:focus {\\n  outline: none;\\n  border-color: var(--search-input-border-color);\\n}\\n\\n.djs-search-results {\\n  position: relative;\\n  overflow-y: auto;\\n  max-height: 200px;\\n}\\n\\n.djs-search-results:hover {\\n  cursor: pointer;\\n}\\n\\n.djs-search-result {\\n  width: 100%;\\n  padding: 6px 10px;\\n  background: white;\\n  border-bottom: solid 1px var(--search-result-border-color);\\n  border-radius: 1px;\\n}\\n\\n.djs-search-highlight {\\n  color: var(--search-result-highlight-color);\\n}\\n\\n.djs-search-result-primary {\\n  margin: 0 0 10px;\\n}\\n\\n.djs-search-result-secondary {\\n  font-family: monospace;\\n  margin: 0;\\n}\\n\\n.djs-search-result:hover {\\n  background: var(--search-result-selected-color);\\n}\\n\\n.djs-search-result-selected {\\n  background: var(--search-result-selected-color);\\n}\\n\\n.djs-search-result-selected:hover {\\n  background: var(--search-result-selected-color);\\n}\\n\\n.djs-search-overlay {\\n  background: var(--search-result-selected-color);\\n}\\n\\n/**\\n * hidden styles\\n */\\n.djs-element-hidden,\\n.djs-element-hidden .djs-hit,\\n.djs-element-hidden .djs-outline,\\n.djs-label-hidden .djs-label {\\n  display: none !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/bpmn-js/dist/assets/diagram-js.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/**\\n * color definitions\\n */\\n.djs-container {\\n  --color-grey-225-10-15: hsl(225, 10%, 15%);\\n  --color-grey-225-10-35: hsl(225, 10%, 35%);\\n  --color-grey-225-10-55: hsl(225, 10%, 55%);\\n  --color-grey-225-10-75: hsl(225, 10%, 75%);\\n  --color-grey-225-10-80: hsl(225, 10%, 80%);\\n  --color-grey-225-10-85: hsl(225, 10%, 85%);\\n  --color-grey-225-10-90: hsl(225, 10%, 90%);\\n  --color-grey-225-10-95: hsl(225, 10%, 95%); \\n  --color-grey-225-10-97: hsl(225, 10%, 97%);\\n\\n  --color-blue-205-100-45: hsl(205, 100%, 45%);\\n  --color-blue-205-100-45-opacity-30: hsla(205, 100%, 45%, 30%);\\n  --color-blue-205-100-50: hsl(205, 100%, 50%);\\n  --color-blue-205-100-95: hsl(205, 100%, 95%);\\n\\n  --color-green-150-86-44: hsl(150, 86%, 44%);\\n\\n  --color-red-360-100-40: hsl(360, 100%, 40%);\\n  --color-red-360-100-45: hsl(360, 100%, 45%);\\n  --color-red-360-100-92: hsl(360, 100%, 92%);\\n  --color-red-360-100-97: hsl(360, 100%, 97%);\\n\\n  --color-white: hsl(0, 0%, 100%);\\n  --color-black: hsl(0, 0%, 0%); \\n  --color-black-opacity-05: hsla(0, 0%, 0%, 5%); \\n  --color-black-opacity-10: hsla(0, 0%, 0%, 10%);\\n\\n  --bendpoint-fill-color: var(--color-blue-205-100-45-opacity-30);\\n  --bendpoint-stroke-color: var(--color-blue-205-100-50);\\n\\n  --context-pad-entry-background-color: var(--color-white);\\n  --context-pad-entry-hover-background-color: var(--color-grey-225-10-95);\\n\\n  --element-dragger-color: var(--color-blue-205-100-50);\\n  --element-hover-outline-fill-color: var(--color-blue-205-100-45);\\n  --element-selected-outline-stroke-color: var(--color-blue-205-100-50);\\n\\n  --lasso-fill-color: var(--color-black-opacity-05);\\n  --lasso-stroke-color: var(--color-black);\\n\\n  --palette-entry-color: var(--color-grey-225-10-15);\\n  --palette-entry-hover-color: var(--color-blue-205-100-45);\\n  --palette-entry-selected-color: var(--color-blue-205-100-50);\\n  --palette-separator-color: var(--color-grey-225-10-75);\\n  --palette-toggle-hover-background-color: var(--color-grey-225-10-55);\\n  --palette-background-color: var(--color-grey-225-10-97);\\n  --palette-border-color: var(--color-grey-225-10-75);\\n\\n  --popup-body-background-color: var(--color-white);\\n  --popup-header-entry-selected-color: var(--color-blue-205-100-50);\\n  --popup-header-entry-selected-background-color: var(--color-black-opacity-10);\\n  --popup-header-separator-color: var(--color-grey-225-10-75);\\n  --popup-background-color: var(--color-grey-225-10-97);\\n  --popup-border-color: var(--color-grey-225-10-75);\\n\\n  --resizer-fill-color: var(--color-blue-205-100-45-opacity-30);\\n  --resizer-stroke-color: var(--color-blue-205-100-50);\\n\\n  --search-container-background-color: var(--color-grey-225-10-97);\\n  --search-container-border-color: var(--color-blue-205-100-50);\\n  --search-container-box-shadow-color: var(--color-blue-205-100-95);\\n  --search-container-box-shadow-inset-color: var(--color-grey-225-10-80);\\n  --search-input-border-color: var(--color-grey-225-10-75);\\n  --search-result-border-color: var(--color-grey-225-10-75);\\n  --search-result-highlight-color: var(--color-black);\\n  --search-result-selected-color: var(--color-blue-205-100-45-opacity-30);\\n\\n  --shape-attach-allowed-stroke-color: var(--color-blue-205-100-50);\\n  --shape-connect-allowed-fill-color: var(--color-grey-225-10-97);\\n  --shape-drop-allowed-fill-color: var(--color-grey-225-10-97);\\n  --shape-drop-not-allowed-fill-color: var(--color-red-360-100-97);\\n  --shape-resize-preview-stroke-color: var(--color-blue-205-100-50);\\n\\n  --snap-line-stroke-color: var(--color-blue-205-100-45-opacity-30);\\n\\n  --space-tool-crosshair-stroke-color: var(--color-black);\\n\\n  --tooltip-error-background-color: var(--color-red-360-100-97);\\n  --tooltip-error-border-color: var(--color-red-360-100-45);\\n  --tooltip-error-color: var(--color-red-360-100-45);\\n}\\n\\n/**\\n * outline styles\\n */\\n\\n.djs-outline {\\n  fill: none;\\n  visibility: hidden;\\n}\\n\\n.djs-element.hover .djs-outline,\\n.djs-element.selected .djs-outline {\\n  visibility: visible;\\n  shape-rendering: geometricPrecision;\\n  stroke-dasharray: 3,3;\\n}\\n\\n.djs-element.selected .djs-outline {\\n  stroke: var(--element-selected-outline-stroke-color);\\n  stroke-width: 1px;\\n}\\n\\n.djs-element.hover .djs-outline {\\n  stroke: var(--element-hover-outline-fill-color);\\n  stroke-width: 1px;\\n}\\n\\n.djs-shape.connect-ok .djs-visual > :nth-child(1) {\\n  fill: var(--shape-connect-allowed-fill-color) !important;\\n}\\n\\n.djs-shape.connect-not-ok .djs-visual > :nth-child(1),\\n.djs-shape.drop-not-ok .djs-visual > :nth-child(1) {\\n  fill: var(--shape-drop-not-allowed-fill-color) !important;\\n}\\n\\n.djs-shape.new-parent .djs-visual > :nth-child(1) {\\n  fill: var(--shape-drop-allowed-fill-color) !important;\\n}\\n\\nsvg.drop-not-ok {\\n  background: var(--shape-drop-not-allowed-fill-color) !important;\\n}\\n\\nsvg.new-parent {\\n  background: var(--shape-drop-allowed-fill-color) !important;\\n}\\n\\n.djs-connection.connect-ok .djs-visual > :nth-child(1),\\n.djs-connection.drop-ok .djs-visual > :nth-child(1) {\\n  stroke: var(--shape-drop-allowed-fill-color) !important;\\n}\\n\\n.djs-connection.connect-not-ok .djs-visual > :nth-child(1),\\n.djs-connection.drop-not-ok .djs-visual > :nth-child(1) {\\n  stroke: var(--shape-drop-not-allowed-fill-color) !important;\\n}\\n\\n.drop-not-ok,\\n.connect-not-ok {\\n  cursor: not-allowed;\\n}\\n\\n.djs-element.attach-ok .djs-visual > :nth-child(1) {\\n  stroke-width: 5px !important;\\n  stroke: var(--shape-attach-allowed-stroke-color) !important;\\n}\\n\\n.djs-frame.connect-not-ok .djs-visual > :nth-child(1),\\n.djs-frame.drop-not-ok .djs-visual > :nth-child(1) {\\n  stroke-width: 3px !important;\\n  stroke: var(--shape-drop-not-allowed-fill-color) !important;\\n  fill: none !important;\\n}\\n\\n/**\\n* Selection box style\\n*\\n*/\\n.djs-lasso-overlay {\\n  fill: var(--lasso-fill-color);\\n\\n  stroke-dasharray: 5 1 3 1;\\n  stroke: var(--lasso-stroke-color);\\n\\n  shape-rendering: geometricPrecision;\\n  pointer-events: none;\\n}\\n\\n/**\\n * Resize styles\\n */\\n.djs-resize-overlay {\\n  fill: none;\\n\\n  stroke-dasharray: 5 1 3 1;\\n  stroke: var(--shape-resize-preview-stroke-color);\\n\\n  pointer-events: none;\\n}\\n\\n.djs-resizer-hit {\\n  fill: none;\\n  pointer-events: all;\\n}\\n\\n.djs-resizer-visual {\\n  fill: var(--resizer-fill-color);\\n  stroke-width: 1px;\\n  stroke-opacity: 0.5;\\n  stroke: var(--resizer-stroke-color);\\n  shape-rendering: geometricprecision;\\n}\\n\\n.djs-resizer:hover .djs-resizer-visual {\\n  stroke: var(--resizer-stroke-color);\\n  stroke-opacity: 1;\\n}\\n\\n.djs-cursor-resize-ns,\\n.djs-resizer-n,\\n.djs-resizer-s {\\n  cursor: ns-resize;\\n}\\n\\n.djs-cursor-resize-ew,\\n.djs-resizer-e,\\n.djs-resizer-w {\\n  cursor: ew-resize;\\n}\\n\\n.djs-cursor-resize-nwse,\\n.djs-resizer-nw,\\n.djs-resizer-se {\\n  cursor: nwse-resize;\\n}\\n\\n.djs-cursor-resize-nesw,\\n.djs-resizer-ne,\\n.djs-resizer-sw {\\n  cursor: nesw-resize;\\n}\\n\\n.djs-shape.djs-resizing > .djs-outline {\\n  visibility: hidden !important;\\n}\\n\\n.djs-shape.djs-resizing > .djs-resizer {\\n  visibility: hidden;\\n}\\n\\n.djs-dragger > .djs-resizer {\\n  visibility: hidden;\\n}\\n\\n/**\\n * drag styles\\n */\\n.djs-dragger * {\\n  fill: none !important;\\n  stroke: var(--element-dragger-color) !important;\\n}\\n\\n.djs-dragger tspan,\\n.djs-dragger text {\\n  fill: var(--element-dragger-color) !important;\\n  stroke: none !important;\\n}\\n\\nmarker.djs-dragger circle,\\nmarker.djs-dragger path,\\nmarker.djs-dragger polygon,\\nmarker.djs-dragger polyline,\\nmarker.djs-dragger rect {\\n  fill: var(--element-dragger-color) !important;\\n  stroke: none !important;\\n}\\n\\nmarker.djs-dragger text,\\nmarker.djs-dragger tspan {\\n  fill: none !important;\\n  stroke: var(--element-dragger-color) !important;\\n}\\n\\n.djs-dragging {\\n  opacity: 0.3;\\n}\\n\\n.djs-dragging,\\n.djs-dragging > * {\\n  pointer-events: none !important;\\n}\\n\\n.djs-dragging .djs-context-pad,\\n.djs-dragging .djs-outline {\\n  display: none !important;\\n}\\n\\n/**\\n * no pointer events for visual\\n */\\n.djs-visual,\\n.djs-outline {\\n  pointer-events: none;\\n}\\n\\n.djs-element.attach-ok .djs-hit {\\n  stroke-width: 60px !important;\\n}\\n\\n/**\\n * all pointer events for hit shape\\n */\\n.djs-element > .djs-hit-all {\\n  pointer-events: all;\\n}\\n\\n.djs-element > .djs-hit-stroke,\\n.djs-element > .djs-hit-click-stroke {\\n  pointer-events: stroke;\\n}\\n\\n/**\\n * all pointer events for hit shape\\n */\\n.djs-drag-active .djs-element > .djs-hit-click-stroke {\\n  pointer-events: all;\\n}\\n\\n/**\\n * shape / connection basic styles\\n */\\n.djs-connection .djs-visual {\\n  stroke-width: 2px;\\n  fill: none;\\n}\\n\\n.djs-cursor-grab {\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n\\n.djs-cursor-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n\\n.djs-cursor-crosshair {\\n  cursor: crosshair;\\n}\\n\\n.djs-cursor-move {\\n  cursor: move;\\n}\\n\\n.djs-cursor-resize-ns {\\n  cursor: ns-resize;\\n}\\n\\n.djs-cursor-resize-ew {\\n  cursor: ew-resize;\\n}\\n\\n\\n/**\\n * snapping\\n */\\n.djs-snap-line {\\n  stroke: var(--snap-line-stroke-color);\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  pointer-events: none;\\n}\\n\\n/**\\n * snapping\\n */\\n.djs-crosshair {\\n  stroke: var(--space-tool-crosshair-stroke-color);\\n  stroke-linecap: round;\\n  stroke-width: 1px;\\n  pointer-events: none;\\n  shape-rendering: crispEdges;\\n  stroke-dasharray: 5, 5;\\n}\\n\\n/**\\n * palette\\n */\\n\\n.djs-palette {\\n  position: absolute;\\n  left: 20px;\\n  top: 20px;\\n\\n  box-sizing: border-box;\\n  width: 48px;\\n}\\n\\n.djs-palette .separator {\\n  margin: 0 5px;\\n  padding-top: 5px;\\n\\n  border: none;\\n  border-bottom: solid 1px var(--palette-separator-color);\\n\\n  clear: both;\\n}\\n\\n.djs-palette .entry:before {\\n  vertical-align: text-bottom;\\n}\\n\\n.djs-palette .djs-palette-toggle {\\n  cursor: pointer;\\n}\\n\\n.djs-palette .entry,\\n.djs-palette .djs-palette-toggle {\\n  color: var(--palette-entry-color);\\n  font-size: 30px;\\n\\n  text-align: center;\\n}\\n\\n.djs-palette .entry {\\n  float: left;\\n}\\n\\n.djs-palette .entry img {\\n  max-width: 100%;\\n}\\n\\n.djs-palette .djs-palette-entries:after {\\n  content: '';\\n  display: table;\\n  clear: both;\\n}\\n\\n.djs-palette .djs-palette-toggle:hover {\\n  background: var(--palette-toggle-hover-background-color);\\n}\\n\\n.djs-palette .entry:hover {\\n  color: var(--palette-entry-hover-color);\\n}\\n\\n.djs-palette .highlighted-entry {\\n  color: var(--palette-entry-selected-color) !important;\\n}\\n\\n.djs-palette .entry,\\n.djs-palette .djs-palette-toggle {\\n  width: 46px;\\n  height: 46px;\\n  line-height: 46px;\\n  cursor: default;\\n}\\n\\n/**\\n * Palette open / two-column layout is controlled via\\n * classes on the palette. Events to hook into palette\\n * changed life-cycle are available in addition.\\n */\\n.djs-palette.two-column.open {\\n  width: 94px;\\n}\\n\\n.djs-palette:not(.open) .djs-palette-entries {\\n  display: none;\\n}\\n\\n.djs-palette:not(.open) {\\n  overflow: hidden;\\n}\\n\\n.djs-palette.open .djs-palette-toggle {\\n  display: none;\\n}\\n\\n/**\\n * context-pad\\n */\\n.djs-overlay-context-pad {\\n  width: 72px;\\n  z-index: 100;\\n}\\n\\n.djs-context-pad {\\n  position: absolute;\\n  display: none;\\n  pointer-events: none;\\n}\\n\\n.djs-context-pad .entry {\\n  width: 22px;\\n  height: 22px;\\n  text-align: center;\\n  display: inline-block;\\n  font-size: 22px;\\n  margin: 0 2px 2px 0;\\n\\n  border-radius: 3px;\\n\\n  cursor: default;\\n\\n  background-color: var(--context-pad-entry-background-color);\\n  box-shadow: 0 0 2px 1px var(--context-pad-entry-background-color);\\n  pointer-events: all;\\n}\\n\\n.djs-context-pad .entry:before {\\n  vertical-align: top;\\n}\\n\\n.djs-context-pad .entry:hover {\\n  background: var(--context-pad-entry-hover-background-color);\\n}\\n\\n.djs-context-pad.open {\\n  display: block;\\n}\\n\\n/**\\n * popup styles\\n */\\n.djs-popup .entry {\\n  line-height: 20px;\\n  white-space: nowrap;\\n  cursor: default;\\n}\\n\\n/* larger font for prefixed icons */\\n.djs-popup .entry:before {\\n  vertical-align: middle;\\n  font-size: 20px;\\n}\\n\\n.djs-popup .entry > span {\\n  vertical-align: middle;\\n  font-size: 14px;\\n}\\n\\n.djs-popup .entry:hover,\\n.djs-popup .entry.active:hover {\\n  background: var(--popup-header-entry-selected-background-color);\\n}\\n\\n.djs-popup .entry.disabled {\\n  background: inherit;\\n}\\n\\n.djs-popup .djs-popup-header .entry {\\n  display: inline-block;\\n  padding: 2px 3px 2px 3px;\\n\\n  border: solid 1px transparent;\\n  border-radius: 3px;\\n}\\n\\n.djs-popup .djs-popup-header .entry.active {\\n  color: var(--popup-header-entry-selected-color);\\n  border: solid 1px var(--popup-header-entry-selected-color);\\n  background-color: var(--popup-header-entry-selected-background-color);\\n}\\n\\n.djs-popup-body .entry {\\n  padding: 4px 10px 4px 5px;\\n}\\n\\n.djs-popup-body .entry > span {\\n  margin-left: 5px;\\n}\\n\\n.djs-popup-body {\\n  background-color: var(--popup-body-background-color);\\n}\\n\\n.djs-popup-header {\\n  border-bottom: 1px solid var(--popup-header-separator-color);\\n}\\n\\n.djs-popup-header .entry {\\n  margin: 1px;\\n  margin-left: 3px;\\n}\\n\\n.djs-popup-header .entry:last-child {\\n  margin-right: 3px;\\n}\\n\\n/**\\n * popup / palette styles\\n */\\n.djs-palette {\\n  background: var(--palette-background-color);\\n  border: solid 1px var(--palette-border-color);\\n  border-radius: 2px;\\n}\\n\\n.djs-popup {\\n  background: var(--popup-background-color);\\n  border: solid 1px var(--popup-border-color);\\n  border-radius: 2px;\\n}\\n\\n/**\\n * touch\\n */\\n\\n.djs-shape,\\n.djs-connection {\\n  touch-action: none;\\n}\\n\\n.djs-segment-dragger,\\n.djs-bendpoint {\\n  display: none;\\n}\\n\\n/**\\n * bendpoints\\n */\\n.djs-segment-dragger .djs-visual {\\n  display: none;\\n\\n  fill: var(--bendpoint-fill-color);\\n  stroke: var(--bendpoint-stroke-color);\\n  stroke-width: 1px;\\n  stroke-opacity: 1;\\n}\\n\\n.djs-segment-dragger:hover .djs-visual {\\n  display: block;\\n}\\n\\n.djs-bendpoint .djs-visual {\\n  fill: var(--bendpoint-fill-color);\\n  stroke: var(--bendpoint-stroke-color);\\n  stroke-width: 1px;\\n  stroke-opacity: 0.5;\\n}\\n\\n.djs-segment-dragger:hover,\\n.djs-bendpoints.hover .djs-segment-dragger,\\n.djs-bendpoints.selected .djs-segment-dragger,\\n.djs-bendpoint:hover,\\n.djs-bendpoints.hover .djs-bendpoint,\\n.djs-bendpoints.selected .djs-bendpoint {\\n  display: block;\\n}\\n\\n.djs-drag-active .djs-bendpoints * {\\n  display: none;\\n}\\n\\n.djs-bendpoints:not(.hover) .floating {\\n  display: none;\\n}\\n\\n.djs-segment-dragger:hover .djs-visual,\\n.djs-segment-dragger.djs-dragging .djs-visual,\\n.djs-bendpoint:hover .djs-visual,\\n.djs-bendpoint.floating .djs-visual {\\n  fill: var(--bendpoint-fill-color);\\n  stroke: var(--bendpoint-stroke-color);\\n  stroke-opacity: 1;\\n}\\n\\n.djs-bendpoint.floating .djs-hit {\\n  pointer-events: none;\\n}\\n\\n.djs-segment-dragger .djs-hit,\\n.djs-bendpoint .djs-hit {\\n  fill: none;\\n  pointer-events: all;\\n}\\n\\n.djs-segment-dragger.horizontal .djs-hit {\\n  cursor: ns-resize;\\n}\\n\\n.djs-segment-dragger.vertical .djs-hit {\\n  cursor: ew-resize;\\n}\\n\\n.djs-segment-dragger.djs-dragging .djs-hit {\\n  pointer-events: none;\\n}\\n\\n.djs-updating,\\n.djs-updating > * {\\n  pointer-events: none !important;\\n}\\n\\n.djs-updating .djs-context-pad,\\n.djs-updating .djs-outline,\\n.djs-updating .djs-bendpoint,\\n.connect-ok .djs-bendpoint,\\n.connect-not-ok .djs-bendpoint,\\n.drop-ok .djs-bendpoint,\\n.drop-not-ok .djs-bendpoint {\\n  display: none !important;\\n}\\n\\n.djs-segment-dragger.djs-dragging,\\n.djs-bendpoint.djs-dragging {\\n  display: block;\\n  opacity: 1.0;\\n}\\n\\n\\n/**\\n * tooltips\\n */\\n.djs-tooltip-error {\\n  width: 160px;\\n  padding: 6px;\\n\\n  background: var(--tooltip-error-background-color);\\n  border: solid 1px var(--tooltip-error-border-color);\\n  border-radius: 2px;\\n  color: var(--tooltip-error-color);\\n  font-size: 12px;\\n  line-height: 16px;\\n\\n  opacity: 0.75;\\n}\\n\\n.djs-tooltip-error:hover {\\n  opacity: 1;\\n}\\n\\n\\n/**\\n * search pad\\n */\\n.djs-search-container {\\n  position: absolute;\\n  top: 20px;\\n  left: 0;\\n  right: 0;\\n  margin-left: auto;\\n  margin-right: auto;\\n\\n  width: 25%;\\n  min-width: 300px;\\n  max-width: 400px;\\n  z-index: 10;\\n\\n  font-size: 1.05em;\\n  opacity: 0.9;\\n  background: var(--search-container-background-color);\\n  border: solid 1px var(--search-container-border-color);\\n  border-radius: 2px;\\n  box-shadow: 0 0 0 2px var(--search-container-box-shadow-color), 0 0 0 1px var(--search-container-box-shadow-inset-color) inset;\\n}\\n\\n.djs-search-container:not(.open) {\\n  display: none;\\n}\\n\\n.djs-search-input input {\\n  font-size: 1.05em;\\n  width: 100%;\\n  padding: 6px 10px;\\n  border: 1px solid var(--search-input-border-color);\\n  box-sizing: border-box;\\n}\\n\\n.djs-search-input input:focus {\\n  outline: none;\\n  border-color: var(--search-input-border-color);\\n}\\n\\n.djs-search-results {\\n  position: relative;\\n  overflow-y: auto;\\n  max-height: 200px;\\n}\\n\\n.djs-search-results:hover {\\n  cursor: pointer;\\n}\\n\\n.djs-search-result {\\n  width: 100%;\\n  padding: 6px 10px;\\n  background: white;\\n  border-bottom: solid 1px var(--search-result-border-color);\\n  border-radius: 1px;\\n}\\n\\n.djs-search-highlight {\\n  color: var(--search-result-highlight-color);\\n}\\n\\n.djs-search-result-primary {\\n  margin: 0 0 10px;\\n}\\n\\n.djs-search-result-secondary {\\n  font-family: monospace;\\n  margin: 0;\\n}\\n\\n.djs-search-result:hover {\\n  background: var(--search-result-selected-color);\\n}\\n\\n.djs-search-result-selected {\\n  background: var(--search-result-selected-color);\\n}\\n\\n.djs-search-result-selected:hover {\\n  background: var(--search-result-selected-color);\\n}\\n\\n.djs-search-overlay {\\n  background: var(--search-result-selected-color);\\n}\\n\\n/**\\n * hidden styles\\n */\\n.djs-element-hidden,\\n.djs-element-hidden .djs-hit,\\n.djs-element-hidden .djs-outline,\\n.djs-label-hidden .djs-label {\\n  display: none !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes pulseDark {\\n   0% {\\n      /* color: darkorange; */\\n      transform: scale(1);\\n      text-shadow: 0 0 1px rgba(0, 0, 0, 0.4);\\n   }\\n   50% {\\n      /* color: orange; */\\n   }\\n   100% {\\n      /* color: darkorange; */\\n      transform: scale(1.25);\\n      text-shadow: 0 3px 3px rgba(0, 0, 0, 0.4);\\n   }\\n}\\n@keyframes pulseLight {\\n   0% {\\n      /* color: darkorange; */\\n      transform: scale(1);\\n      text-shadow: 0 0 1px rgba(0, 0, 0, 0.1);\\n   }\\n   50% {\\n      /* color: orange; */\\n   }\\n   100% {\\n      /* color: darkorange; */\\n      transform: scale(1.25);\\n      text-shadow: 0 3px 3px rgba(0, 0, 0, 0.1);\\n   }\\n}\\n.pulseDark {\\n   animation-name: pulseDark;\\n   animation-duration: 1s;\\n   animation-timing-function: ease-out;\\n   animation-direction: alternate;\\n   animation-iteration-count: infinite;\\n   animation-play-state: running;\\n   color: orange !important;\\n}\\n.pulseLight {\\n   animation-name: pulseLight;\\n   animation-duration: 1s;\\n   animation-timing-function: ease-out;\\n   animation-direction: alternate;\\n   animation-iteration-count: infinite;\\n   animation-play-state: running;\\n   color: orange !important;\\n}\\n.smalltext {\\n   font-size: small !important;\\n}\\n.ab-object-list-item .webix_sidebar_dir_icon {\\n   margin-right: 20px;\\n}\\n.ab-datacollection-list-item .webix_sidebar_dir_icon {\\n   margin-right: 20px;\\n}\\n.ab-interface-list-item .webix_sidebar_dir_icon {\\n   margin-right: 20px;\\n}\\n.darkorange .webix_button {\\n   background-color: darkorange !important;\\n}\\n.warningtext {\\n   color: orange;\\n}\\n.warningslist {\\n   list-style-type: none;\\n   margin: 0;\\n   padding: 0;\\n   line-height: 28px;\\n   background-color: transparent;\\n   color: white;\\n}\\n.warningslist li {\\n   border-bottom: 1px solid rgba(0, 0, 0, 0.2);\\n}\\n.webix_theme_dark {\\n   background-color: #4a4e58;\\n}\\n.lighten {\\n   opacity: 0.4;\\n}\\n.app_form_window {\\n   border-radius: 8px;\\n}\\n.app_form_window .webix_win_head {\\n   background-color: #B8B8B8;\\n}\\n.app_form_window div.webix_view.webix_control.webix_el_icon.alert {\\n   padding: 0px;\\n}\\n/* main view background (transparent by default) */\\n.app_form_window .alert {\\n   background-color: transparent;\\n}\\n/* main font color */\\n.app_form_window .alert .webix_icon {\\n   color:#EED202;\\n}\\n/* circle background (hover) */\\n.app_form_window .alert .webix_icon_button:hover:before {\\n   opacity: 0.8;\\n}\\n/* hover: font color */\\n.app_form_window .alert .webix_icon_button:hover .webix_icon {\\n   color: #D6BD01;\\n}\\n.app_form_window .webix_template {\\n   font-size: 18px;\\n   background-color: #B8B8B8;\\n}\\n.app_form_window .webix_label_right {\\n   font-weight: 500;\\n   color: rgb(49, 49, 49);\\n   width: 340px;\\n   padding-left: 10px;\\n}\\n.app_form_window .webix_scroll_cont .npr_smallLabels .webix_el_box {\\n   font-size: 16px;\\n   font-weight: 500;\\n   color: #33b5e5;\\n   text-align: right;\\n}\\n.app_form_window .webix_multicombo {\\n   border: 2px solid #eee;\\n   border-radius: 6px;\\n}\\n.app_form_window .webix_view .webix_layout_form {\\n   border: 1px solid #eee;\\n   border-radius: 6px;\\n}\\n.app_form_window div.webix_view.webix_form.no-margin.webix_layout_form {\\n   background-color: #eee;\\n}\\n.app_form_window .webix_button {\\n   border-radius: 6px;\\n}\\n.app_form_window_2 {\\n   border-radius: 6px;\\n}\\n.app_form_window_2 .webix_win_head {\\n   background-color: #B8B8B8;\\n}\\n.app_form_window_2 .webix_template {\\n   font-size: 18px;\\n   background-color: #B8B8B8;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./styles/Designer.css\"],\"names\":[],\"mappings\":\"AAAA;GACG;MACG,uBAAuB;MACvB,mBAAmB;MACnB,uCAAuC;GAC1C;GACA;MACG,mBAAmB;GACtB;GACA;MACG,uBAAuB;MACvB,sBAAsB;MACtB,yCAAyC;GAC5C;AACH;AACA;GACG;MACG,uBAAuB;MACvB,mBAAmB;MACnB,uCAAuC;GAC1C;GACA;MACG,mBAAmB;GACtB;GACA;MACG,uBAAuB;MACvB,sBAAsB;MACtB,yCAAyC;GAC5C;AACH;AACA;GACG,yBAAyB;GACzB,sBAAsB;GACtB,mCAAmC;GACnC,8BAA8B;GAC9B,mCAAmC;GACnC,6BAA6B;GAC7B,wBAAwB;AAC3B;AACA;GACG,0BAA0B;GAC1B,sBAAsB;GACtB,mCAAmC;GACnC,8BAA8B;GAC9B,mCAAmC;GACnC,6BAA6B;GAC7B,wBAAwB;AAC3B;AACA;GACG,2BAA2B;AAC9B;AACA;GACG,kBAAkB;AACrB;AACA;GACG,kBAAkB;AACrB;AACA;GACG,kBAAkB;AACrB;AACA;GACG,uCAAuC;AAC1C;AACA;GACG,aAAa;AAChB;AACA;GACG,qBAAqB;GACrB,SAAS;GACT,UAAU;GACV,iBAAiB;GACjB,6BAA6B;GAC7B,YAAY;AACf;AACA;GACG,2CAA2C;AAC9C;AACA;GACG,yBAAyB;AAC5B;AACA;GACG,YAAY;AACf;AACA;GACG,kBAAkB;AACrB;AACA;GACG,yBAAyB;AAC5B;AACA;GACG,YAAY;AACf;AACA,kDAAkD;AAClD;GACG,6BAA6B;AAChC;AACA,oBAAoB;AACpB;GACG,aAAa;AAChB;AACA,8BAA8B;AAC9B;GACG,YAAY;AACf;AACA,sBAAsB;AACtB;GACG,cAAc;AACjB;AACA;GACG,eAAe;GACf,yBAAyB;AAC5B;AACA;GACG,gBAAgB;GAChB,sBAAsB;GACtB,YAAY;GACZ,kBAAkB;AACrB;AACA;GACG,eAAe;GACf,gBAAgB;GAChB,cAAc;GACd,iBAAiB;AACpB;AACA;GACG,sBAAsB;GACtB,kBAAkB;AACrB;AACA;GACG,sBAAsB;GACtB,kBAAkB;AACrB;AACA;GACG,sBAAsB;AACzB;AACA;GACG,kBAAkB;AACrB;AACA;GACG,kBAAkB;AACrB;AACA;GACG,yBAAyB;AAC5B;AACA;GACG,eAAe;GACf,yBAAyB;AAC5B\",\"sourcesContent\":[\"@keyframes pulseDark {\\n   0% {\\n      /* color: darkorange; */\\n      transform: scale(1);\\n      text-shadow: 0 0 1px rgba(0, 0, 0, 0.4);\\n   }\\n   50% {\\n      /* color: orange; */\\n   }\\n   100% {\\n      /* color: darkorange; */\\n      transform: scale(1.25);\\n      text-shadow: 0 3px 3px rgba(0, 0, 0, 0.4);\\n   }\\n}\\n@keyframes pulseLight {\\n   0% {\\n      /* color: darkorange; */\\n      transform: scale(1);\\n      text-shadow: 0 0 1px rgba(0, 0, 0, 0.1);\\n   }\\n   50% {\\n      /* color: orange; */\\n   }\\n   100% {\\n      /* color: darkorange; */\\n      transform: scale(1.25);\\n      text-shadow: 0 3px 3px rgba(0, 0, 0, 0.1);\\n   }\\n}\\n.pulseDark {\\n   animation-name: pulseDark;\\n   animation-duration: 1s;\\n   animation-timing-function: ease-out;\\n   animation-direction: alternate;\\n   animation-iteration-count: infinite;\\n   animation-play-state: running;\\n   color: orange !important;\\n}\\n.pulseLight {\\n   animation-name: pulseLight;\\n   animation-duration: 1s;\\n   animation-timing-function: ease-out;\\n   animation-direction: alternate;\\n   animation-iteration-count: infinite;\\n   animation-play-state: running;\\n   color: orange !important;\\n}\\n.smalltext {\\n   font-size: small !important;\\n}\\n.ab-object-list-item .webix_sidebar_dir_icon {\\n   margin-right: 20px;\\n}\\n.ab-datacollection-list-item .webix_sidebar_dir_icon {\\n   margin-right: 20px;\\n}\\n.ab-interface-list-item .webix_sidebar_dir_icon {\\n   margin-right: 20px;\\n}\\n.darkorange .webix_button {\\n   background-color: darkorange !important;\\n}\\n.warningtext {\\n   color: orange;\\n}\\n.warningslist {\\n   list-style-type: none;\\n   margin: 0;\\n   padding: 0;\\n   line-height: 28px;\\n   background-color: transparent;\\n   color: white;\\n}\\n.warningslist li {\\n   border-bottom: 1px solid rgba(0, 0, 0, 0.2);\\n}\\n.webix_theme_dark {\\n   background-color: #4a4e58;\\n}\\n.lighten {\\n   opacity: 0.4;\\n}\\n.app_form_window {\\n   border-radius: 8px;\\n}\\n.app_form_window .webix_win_head {\\n   background-color: #B8B8B8;\\n}\\n.app_form_window div.webix_view.webix_control.webix_el_icon.alert {\\n   padding: 0px;\\n}\\n/* main view background (transparent by default) */\\n.app_form_window .alert {\\n   background-color: transparent;\\n}\\n/* main font color */\\n.app_form_window .alert .webix_icon {\\n   color:#EED202;\\n}\\n/* circle background (hover) */\\n.app_form_window .alert .webix_icon_button:hover:before {\\n   opacity: 0.8;\\n}\\n/* hover: font color */\\n.app_form_window .alert .webix_icon_button:hover .webix_icon {\\n   color: #D6BD01;\\n}\\n.app_form_window .webix_template {\\n   font-size: 18px;\\n   background-color: #B8B8B8;\\n}\\n.app_form_window .webix_label_right {\\n   font-weight: 500;\\n   color: rgb(49, 49, 49);\\n   width: 340px;\\n   padding-left: 10px;\\n}\\n.app_form_window .webix_scroll_cont .npr_smallLabels .webix_el_box {\\n   font-size: 16px;\\n   font-weight: 500;\\n   color: #33b5e5;\\n   text-align: right;\\n}\\n.app_form_window .webix_multicombo {\\n   border: 2px solid #eee;\\n   border-radius: 6px;\\n}\\n.app_form_window .webix_view .webix_layout_form {\\n   border: 1px solid #eee;\\n   border-radius: 6px;\\n}\\n.app_form_window div.webix_view.webix_form.no-margin.webix_layout_form {\\n   background-color: #eee;\\n}\\n.app_form_window .webix_button {\\n   border-radius: 6px;\\n}\\n.app_form_window_2 {\\n   border-radius: 6px;\\n}\\n.app_form_window_2 .webix_win_head {\\n   background-color: #B8B8B8;\\n}\\n.app_form_window_2 .webix_template {\\n   font-size: 18px;\\n   background-color: #B8B8B8;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n;(function(root, factory) {\n\t// https://github.com/umdjs/umd/blob/master/returnExports.js\n\tif (typeof exports == 'object') {\n\t\t// For Node.js.\n\t\tmodule.exports = factory(root);\n\t} else if (typeof define == 'function' && define.amd) {\n\t\t// For AMD. Register as an anonymous module.\n\t\tdefine([], factory.bind(root, root));\n\t} else {\n\t\t// For browser globals (not exposing the function separately).\n\t\tfactory(root);\n\t}\n}(typeof global != 'undefined' ? global : this, function(root) {\n\n\tif (root.CSS && root.CSS.escape) {\n\t\treturn root.CSS.escape;\n\t}\n\n\t// https://drafts.csswg.org/cssom/#serialize-an-identifier\n\tvar cssEscape = function(value) {\n\t\tif (arguments.length == 0) {\n\t\t\tthrow new TypeError('`CSS.escape` requires an argument.');\n\t\t}\n\t\tvar string = String(value);\n\t\tvar length = string.length;\n\t\tvar index = -1;\n\t\tvar codeUnit;\n\t\tvar result = '';\n\t\tvar firstCodeUnit = string.charCodeAt(0);\n\t\twhile (++index < length) {\n\t\t\tcodeUnit = string.charCodeAt(index);\n\t\t\t// Note: there’s no need to special-case astral symbols, surrogate\n\t\t\t// pairs, or lone surrogates.\n\n\t\t\t// If the character is NULL (U+0000), then the REPLACEMENT CHARACTER\n\t\t\t// (U+FFFD).\n\t\t\tif (codeUnit == 0x0000) {\n\t\t\t\tresult += '\\uFFFD';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n\t\t\t\t// U+007F, […]\n\t\t\t\t(codeUnit >= 0x0001 && codeUnit <= 0x001F) || codeUnit == 0x007F ||\n\t\t\t\t// If the character is the first character and is in the range [0-9]\n\t\t\t\t// (U+0030 to U+0039), […]\n\t\t\t\t(index == 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||\n\t\t\t\t// If the character is the second character and is in the range [0-9]\n\t\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n\t\t\t\t(\n\t\t\t\t\tindex == 1 &&\n\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 &&\n\t\t\t\t\tfirstCodeUnit == 0x002D\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\n\t\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t// If the character is the first character and is a `-` (U+002D), and\n\t\t\t\t// there is no second character, […]\n\t\t\t\tindex == 0 &&\n\t\t\t\tlength == 1 &&\n\t\t\t\tcodeUnit == 0x002D\n\t\t\t) {\n\t\t\t\tresult += '\\\\' + string.charAt(index);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the character is not handled by one of the above rules and is\n\t\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n\t\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n\t\t\t// U+005A), or [a-z] (U+0061 to U+007A), […]\n\t\t\tif (\n\t\t\t\tcodeUnit >= 0x0080 ||\n\t\t\t\tcodeUnit == 0x002D ||\n\t\t\t\tcodeUnit == 0x005F ||\n\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 ||\n\t\t\t\tcodeUnit >= 0x0041 && codeUnit <= 0x005A ||\n\t\t\t\tcodeUnit >= 0x0061 && codeUnit <= 0x007A\n\t\t\t) {\n\t\t\t\t// the character itself\n\t\t\t\tresult += string.charAt(index);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Otherwise, the escaped character.\n\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character\n\t\t\tresult += '\\\\' + string.charAt(index);\n\n\t\t}\n\t\treturn result;\n\t};\n\n\tif (!root.CSS) {\n\t\troot.CSS = {};\n\t}\n\n\troot.CSS.escape = cssEscape;\n\treturn cssEscape;\n\n}));\n","import InteractionEventsModule from 'diagram-js/lib/features/interaction-events';\n\nimport DirectEditing from './lib/DirectEditing';\n\nexport default {\n  __depends__: [\n    InteractionEventsModule\n  ],\n  __init__: [ 'directEditing' ],\n  directEditing: [ 'type', DirectEditing ]\n};","import {\n  bind,\n  find\n} from 'min-dash';\n\nimport TextBox from './TextBox';\n\n\n/**\n * A direct editing component that allows users\n * to edit an elements text directly in the diagram\n *\n * @param {EventBus} eventBus the event bus\n */\nexport default function DirectEditing(eventBus, canvas) {\n\n  this._eventBus = eventBus;\n\n  this._providers = [];\n  this._textbox = new TextBox({\n    container: canvas.getContainer(),\n    keyHandler: bind(this._handleKey, this),\n    resizeHandler: bind(this._handleResize, this)\n  });\n}\n\nDirectEditing.$inject = [ 'eventBus', 'canvas' ];\n\n\n/**\n * Register a direct editing provider\n\n * @param {Object} provider the provider, must expose an #activate(element) method that returns\n *                          an activation context ({ bounds: {x, y, width, height }, text }) if\n *                          direct editing is available for the given element.\n *                          Additionally the provider must expose a #update(element, value) method\n *                          to receive direct editing updates.\n */\nDirectEditing.prototype.registerProvider = function(provider) {\n  this._providers.push(provider);\n};\n\n\n/**\n * Returns true if direct editing is currently active\n *\n * @return {Boolean}\n */\nDirectEditing.prototype.isActive = function() {\n  return !!this._active;\n};\n\n\n/**\n * Cancel direct editing, if it is currently active\n */\nDirectEditing.prototype.cancel = function() {\n  if (!this._active) {\n    return;\n  }\n\n  this._fire('cancel');\n  this.close();\n};\n\n\nDirectEditing.prototype._fire = function(event, context) {\n  this._eventBus.fire('directEditing.' + event, context || { active: this._active });\n};\n\nDirectEditing.prototype.close = function() {\n  this._textbox.destroy();\n\n  this._fire('deactivate');\n\n  this._active = null;\n\n  this.resizable = undefined;\n};\n\n\nDirectEditing.prototype.complete = function() {\n\n  var active = this._active;\n\n  if (!active) {\n    return;\n  }\n\n  var containerBounds,\n      previousBounds = active.context.bounds,\n      newBounds = this.$textbox.getBoundingClientRect(),\n      newText = this.getValue(),\n      previousText = active.context.text;\n\n  if (\n    newText !== previousText ||\n    newBounds.height !== previousBounds.height ||\n    newBounds.width !== previousBounds.width\n  ) {\n    containerBounds = this._textbox.container.getBoundingClientRect();\n\n    active.provider.update(active.element, newText, active.context.text, {\n      x: newBounds.left - containerBounds.left,\n      y: newBounds.top - containerBounds.top,\n      width: newBounds.width,\n      height: newBounds.height\n    });\n  }\n\n  this._fire('complete');\n\n  this.close();\n};\n\n\nDirectEditing.prototype.getValue = function() {\n  return this._textbox.getValue();\n};\n\n\nDirectEditing.prototype._handleKey = function(e) {\n\n  // stop bubble\n  e.stopPropagation();\n\n  var key = e.keyCode || e.charCode;\n\n  // ESC\n  if (key === 27) {\n    e.preventDefault();\n    return this.cancel();\n  }\n\n  // Enter\n  if (key === 13 && !e.shiftKey) {\n    e.preventDefault();\n    return this.complete();\n  }\n};\n\n\nDirectEditing.prototype._handleResize = function(event) {\n  this._fire('resize', event);\n};\n\n\n/**\n * Activate direct editing on the given element\n *\n * @param {Object} ElementDescriptor the descriptor for a shape or connection\n * @return {Boolean} true if the activation was possible\n */\nDirectEditing.prototype.activate = function(element) {\n  if (this.isActive()) {\n    this.cancel();\n  }\n\n  // the direct editing context\n  var context;\n\n  var provider = find(this._providers, function(p) {\n    return (context = p.activate(element)) ? p : null;\n  });\n\n  // check if activation took place\n  if (context) {\n    this.$textbox = this._textbox.create(\n      context.bounds,\n      context.style,\n      context.text,\n      context.options\n    );\n\n    this._active = {\n      element: element,\n      context: context,\n      provider: provider\n    };\n\n    if (context.options && context.options.resizable) {\n      this.resizable = true;\n    }\n\n    this._fire('activate');\n  }\n\n  return !!context;\n};\n","import {\n  assign,\n  bind,\n  pick\n} from 'min-dash';\n\nimport {\n  domify,\n  query as domQuery,\n  event as domEvent,\n  remove as domRemove\n} from 'min-dom';\n\nvar min = Math.min,\n    max = Math.max;\n\nfunction preventDefault(e) {\n  e.preventDefault();\n}\n\nfunction stopPropagation(e) {\n  e.stopPropagation();\n}\n\nfunction isTextNode(node) {\n  return node.nodeType === Node.TEXT_NODE;\n}\n\nfunction toArray(nodeList) {\n  return [].slice.call(nodeList);\n}\n\n/**\n * Initializes a container for a content editable div.\n *\n * Structure:\n *\n * container\n *   parent\n *     content\n *     resize-handle\n *\n * @param {object} options\n * @param {DOMElement} options.container The DOM element to append the contentContainer to\n * @param {Function} options.keyHandler Handler for key events\n * @param {Function} options.resizeHandler Handler for resize events\n */\nexport default function TextBox(options) {\n  this.container = options.container;\n\n  this.parent = domify(\n    '<div class=\"djs-direct-editing-parent\">' +\n      '<div class=\"djs-direct-editing-content\" contenteditable=\"true\"></div>' +\n    '</div>'\n  );\n\n  this.content = domQuery('[contenteditable]', this.parent);\n\n  this.keyHandler = options.keyHandler || function() {};\n  this.resizeHandler = options.resizeHandler || function() {};\n\n  this.autoResize = bind(this.autoResize, this);\n  this.handlePaste = bind(this.handlePaste, this);\n}\n\n\n/**\n * Create a text box with the given position, size, style and text content\n *\n * @param {Object} bounds\n * @param {Number} bounds.x absolute x position\n * @param {Number} bounds.y absolute y position\n * @param {Number} [bounds.width] fixed width value\n * @param {Number} [bounds.height] fixed height value\n * @param {Number} [bounds.maxWidth] maximum width value\n * @param {Number} [bounds.maxHeight] maximum height value\n * @param {Number} [bounds.minWidth] minimum width value\n * @param {Number} [bounds.minHeight] minimum height value\n * @param {Object} [style]\n * @param {String} value text content\n *\n * @return {DOMElement} The created content DOM element\n */\nTextBox.prototype.create = function(bounds, style, value, options) {\n  var self = this;\n\n  var parent = this.parent,\n      content = this.content,\n      container = this.container;\n\n  options = this.options = options || {};\n\n  style = this.style = style || {};\n\n  var parentStyle = pick(style, [\n    'width',\n    'height',\n    'maxWidth',\n    'maxHeight',\n    'minWidth',\n    'minHeight',\n    'left',\n    'top',\n    'backgroundColor',\n    'position',\n    'overflow',\n    'border',\n    'wordWrap',\n    'textAlign',\n    'outline',\n    'transform'\n  ]);\n\n  assign(parent.style, {\n    width: bounds.width + 'px',\n    height: bounds.height + 'px',\n    maxWidth: bounds.maxWidth + 'px',\n    maxHeight: bounds.maxHeight + 'px',\n    minWidth: bounds.minWidth + 'px',\n    minHeight: bounds.minHeight + 'px',\n    left: bounds.x + 'px',\n    top: bounds.y + 'px',\n    backgroundColor: '#ffffff',\n    position: 'absolute',\n    overflow: 'visible',\n    border: '1px solid #ccc',\n    boxSizing: 'border-box',\n    wordWrap: 'normal',\n    textAlign: 'center',\n    outline: 'none'\n  }, parentStyle);\n\n  var contentStyle = pick(style, [\n    'fontFamily',\n    'fontSize',\n    'fontWeight',\n    'lineHeight',\n    'padding',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft'\n  ]);\n\n  assign(content.style, {\n    boxSizing: 'border-box',\n    width: '100%',\n    outline: 'none',\n    wordWrap: 'break-word'\n  }, contentStyle);\n\n  if (options.centerVertically) {\n    assign(content.style, {\n      position: 'absolute',\n      top: '50%',\n      transform: 'translate(0, -50%)'\n    }, contentStyle);\n  }\n\n  content.innerText = value;\n\n  domEvent.bind(content, 'keydown', this.keyHandler);\n  domEvent.bind(content, 'mousedown', stopPropagation);\n  domEvent.bind(content, 'paste', self.handlePaste);\n\n  if (options.autoResize) {\n    domEvent.bind(content, 'input', this.autoResize);\n  }\n\n  if (options.resizable) {\n    this.resizable(style);\n  }\n\n  container.appendChild(parent);\n\n  // set selection to end of text\n  this.setSelection(content.lastChild, content.lastChild && content.lastChild.length);\n\n  return parent;\n};\n\n/**\n * Intercept paste events to remove formatting from pasted text.\n */\nTextBox.prototype.handlePaste = function(e) {\n  var options = this.options,\n      style = this.style;\n\n  e.preventDefault();\n\n  var text;\n\n  if (e.clipboardData) {\n\n    // Chrome, Firefox, Safari\n    text = e.clipboardData.getData('text/plain');\n  } else {\n\n    // Internet Explorer\n    text = window.clipboardData.getData('Text');\n  }\n\n  this.insertText(text);\n\n  if (options.autoResize) {\n    var hasResized = this.autoResize(style);\n\n    if (hasResized) {\n      this.resizeHandler(hasResized);\n    }\n  }\n};\n\nTextBox.prototype.insertText = function(text) {\n  text = normalizeEndOfLineSequences(text);\n\n  // insertText command not supported by Internet Explorer\n  var success = document.execCommand('insertText', false, text);\n\n  if (success) {\n    return;\n  }\n\n  this._insertTextIE(text);\n};\n\nTextBox.prototype._insertTextIE = function(text) {\n\n  // Internet Explorer\n  var range = this.getSelection(),\n      startContainer = range.startContainer,\n      endContainer = range.endContainer,\n      startOffset = range.startOffset,\n      endOffset = range.endOffset,\n      commonAncestorContainer = range.commonAncestorContainer;\n\n  var childNodesArray = toArray(commonAncestorContainer.childNodes);\n\n  var container,\n      offset;\n\n  if (isTextNode(commonAncestorContainer)) {\n    var containerTextContent = startContainer.textContent;\n\n    startContainer.textContent =\n      containerTextContent.substring(0, startOffset)\n      + text\n      + containerTextContent.substring(endOffset);\n\n    container = startContainer;\n    offset = startOffset + text.length;\n\n  } else if (startContainer === this.content && endContainer === this.content) {\n    var textNode = document.createTextNode(text);\n\n    this.content.insertBefore(textNode, childNodesArray[startOffset]);\n\n    container = textNode;\n    offset = textNode.textContent.length;\n  } else {\n    var startContainerChildIndex = childNodesArray.indexOf(startContainer),\n        endContainerChildIndex = childNodesArray.indexOf(endContainer);\n\n    childNodesArray.forEach(function(childNode, index) {\n\n      if (index === startContainerChildIndex) {\n        childNode.textContent =\n          startContainer.textContent.substring(0, startOffset) +\n          text +\n          endContainer.textContent.substring(endOffset);\n      } else if (index > startContainerChildIndex && index <= endContainerChildIndex) {\n        domRemove(childNode);\n      }\n    });\n\n    container = startContainer;\n    offset = startOffset + text.length;\n  }\n\n  if (container && offset !== undefined) {\n\n    // is necessary in Internet Explorer\n    setTimeout(function() {\n      self.setSelection(container, offset);\n    });\n  }\n};\n\n/**\n * Automatically resize element vertically to fit its content.\n */\nTextBox.prototype.autoResize = function() {\n  var parent = this.parent,\n      content = this.content;\n\n  var fontSize = parseInt(this.style.fontSize) || 12;\n\n  if (content.scrollHeight > parent.offsetHeight ||\n      content.scrollHeight < parent.offsetHeight - fontSize) {\n    var bounds = parent.getBoundingClientRect();\n\n    var height = content.scrollHeight;\n    parent.style.height = height + 'px';\n\n    this.resizeHandler({\n      width: bounds.width,\n      height: bounds.height,\n      dx: 0,\n      dy: height - bounds.height\n    });\n  }\n};\n\n/**\n * Make an element resizable by adding a resize handle.\n */\nTextBox.prototype.resizable = function() {\n  var self = this;\n\n  var parent = this.parent,\n      resizeHandle = this.resizeHandle;\n\n  var minWidth = parseInt(this.style.minWidth) || 0,\n      minHeight = parseInt(this.style.minHeight) || 0,\n      maxWidth = parseInt(this.style.maxWidth) || Infinity,\n      maxHeight = parseInt(this.style.maxHeight) || Infinity;\n\n  if (!resizeHandle) {\n    resizeHandle = this.resizeHandle = domify(\n      '<div class=\"djs-direct-editing-resize-handle\"></div>'\n    );\n\n    var startX, startY, startWidth, startHeight;\n\n    var onMouseDown = function(e) {\n      preventDefault(e);\n      stopPropagation(e);\n\n      startX = e.clientX;\n      startY = e.clientY;\n\n      var bounds = parent.getBoundingClientRect();\n\n      startWidth = bounds.width;\n      startHeight = bounds.height;\n\n      domEvent.bind(document, 'mousemove', onMouseMove);\n      domEvent.bind(document, 'mouseup', onMouseUp);\n    };\n\n    var onMouseMove = function(e) {\n      preventDefault(e);\n      stopPropagation(e);\n\n      var newWidth = min(max(startWidth + e.clientX - startX, minWidth), maxWidth);\n      var newHeight = min(max(startHeight + e.clientY - startY, minHeight), maxHeight);\n\n      parent.style.width = newWidth + 'px';\n      parent.style.height = newHeight + 'px';\n\n      self.resizeHandler({\n        width: startWidth,\n        height: startHeight,\n        dx: e.clientX - startX,\n        dy: e.clientY - startY\n      });\n    };\n\n    var onMouseUp = function(e) {\n      preventDefault(e);\n      stopPropagation(e);\n\n      domEvent.unbind(document,'mousemove', onMouseMove, false);\n      domEvent.unbind(document, 'mouseup', onMouseUp, false);\n    };\n\n    domEvent.bind(resizeHandle, 'mousedown', onMouseDown);\n  }\n\n  assign(resizeHandle.style, {\n    position: 'absolute',\n    bottom: '0px',\n    right: '0px',\n    cursor: 'nwse-resize',\n    width: '0',\n    height: '0',\n    borderTop: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid transparent',\n    borderRight: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid #ccc',\n    borderBottom: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid #ccc',\n    borderLeft: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid transparent'\n  });\n\n  parent.appendChild(resizeHandle);\n};\n\n\n/**\n * Clear content and style of the textbox, unbind listeners and\n * reset CSS style.\n */\nTextBox.prototype.destroy = function() {\n  var parent = this.parent,\n      content = this.content,\n      resizeHandle = this.resizeHandle;\n\n  // clear content\n  content.innerText = '';\n\n  // clear styles\n  parent.removeAttribute('style');\n  content.removeAttribute('style');\n\n  domEvent.unbind(content, 'keydown', this.keyHandler);\n  domEvent.unbind(content, 'mousedown', stopPropagation);\n  domEvent.unbind(content, 'input', this.autoResize);\n  domEvent.unbind(content, 'paste', this.handlePaste);\n\n  if (resizeHandle) {\n    resizeHandle.removeAttribute('style');\n\n    domRemove(resizeHandle);\n  }\n\n  domRemove(parent);\n};\n\n\nTextBox.prototype.getValue = function() {\n  return this.content.innerText.trim();\n};\n\n\nTextBox.prototype.getSelection = function() {\n  var selection = window.getSelection(),\n      range = selection.getRangeAt(0);\n\n  return range;\n};\n\n\nTextBox.prototype.setSelection = function(container, offset) {\n  var range = document.createRange();\n\n  if (container === null) {\n    range.selectNodeContents(this.content);\n  } else {\n    range.setStart(container, offset);\n    range.setEnd(container, offset);\n  }\n\n  var selection = window.getSelection();\n\n  selection.removeAllRanges();\n  selection.addRange(range);\n};\n\n// helpers //////////\n\nfunction normalizeEndOfLineSequences(string) {\n  return string.replace(/\\r\\n|\\r|\\n/g, '\\n');\n}","import { Injector } from 'didi';\n\nimport CoreModule from './core';\n\n\n/**\n * Bootstrap an injector from a list of modules, instantiating a number of default components\n *\n * @ignore\n * @param {Array<didi.Module>} bootstrapModules\n *\n * @return {didi.Injector} a injector to use to access the components\n */\nfunction bootstrap(bootstrapModules) {\n\n  var modules = [],\n      components = [];\n\n  function hasModule(m) {\n    return modules.indexOf(m) >= 0;\n  }\n\n  function addModule(m) {\n    modules.push(m);\n  }\n\n  function visit(m) {\n    if (hasModule(m)) {\n      return;\n    }\n\n    (m.__depends__ || []).forEach(visit);\n\n    if (hasModule(m)) {\n      return;\n    }\n\n    addModule(m);\n\n    (m.__init__ || []).forEach(function(c) {\n      components.push(c);\n    });\n  }\n\n  bootstrapModules.forEach(visit);\n\n  var injector = new Injector(modules);\n\n  components.forEach(function(c) {\n\n    try {\n\n      // eagerly resolve component (fn or string)\n      injector[typeof c === 'string' ? 'get' : 'invoke'](c);\n    } catch (e) {\n      console.error('Failed to instantiate component');\n      console.error(e.stack);\n\n      throw e;\n    }\n  });\n\n  return injector;\n}\n\n/**\n * Creates an injector from passed options.\n *\n * @ignore\n * @param  {Object} options\n * @return {didi.Injector}\n */\nfunction createInjector(options) {\n\n  options = options || {};\n\n  var configModule = {\n    'config': [ 'value', options ]\n  };\n\n  var modules = [ configModule, CoreModule ].concat(options.modules || []);\n\n  return bootstrap(modules);\n}\n\n\n/**\n * The main diagram-js entry point that bootstraps the diagram with the given\n * configuration.\n *\n * To register extensions with the diagram, pass them as Array<didi.Module> to the constructor.\n *\n * @class djs.Diagram\n * @memberOf djs\n * @constructor\n *\n * @example\n *\n * <caption>Creating a plug-in that logs whenever a shape is added to the canvas.</caption>\n *\n * // plug-in implemenentation\n * function MyLoggingPlugin(eventBus) {\n *   eventBus.on('shape.added', function(event) {\n *     console.log('shape ', event.shape, ' was added to the diagram');\n *   });\n * }\n *\n * // export as module\n * export default {\n *   __init__: [ 'myLoggingPlugin' ],\n *     myLoggingPlugin: [ 'type', MyLoggingPlugin ]\n * };\n *\n *\n * // instantiate the diagram with the new plug-in\n *\n * import MyLoggingModule from 'path-to-my-logging-plugin';\n *\n * var diagram = new Diagram({\n *   modules: [\n *     MyLoggingModule\n *   ]\n * });\n *\n * diagram.invoke([ 'canvas', function(canvas) {\n *   // add shape to drawing canvas\n *   canvas.addShape({ x: 10, y: 10 });\n * });\n *\n * // 'shape ... was added to the diagram' logged to console\n *\n * @param {Object} options\n * @param {Array<didi.Module>} [options.modules] external modules to instantiate with the diagram\n * @param {didi.Injector} [injector] an (optional) injector to bootstrap the diagram with\n */\nexport default function Diagram(options, injector) {\n\n  // create injector unless explicitly specified\n  this.injector = injector = injector || createInjector(options);\n\n  // API\n\n  /**\n   * Resolves a diagram service\n   *\n   * @method Diagram#get\n   *\n   * @param {string} name the name of the diagram service to be retrieved\n   * @param {boolean} [strict=true] if false, resolve missing services to null\n   */\n  this.get = injector.get;\n\n  /**\n   * Executes a function into which diagram services are injected\n   *\n   * @method Diagram#invoke\n   *\n   * @param {Function|Object[]} fn the function to resolve\n   * @param {Object} locals a number of locals to use to resolve certain dependencies\n   */\n  this.invoke = injector.invoke;\n\n  // init\n\n  // indicate via event\n\n\n  /**\n   * An event indicating that all plug-ins are loaded.\n   *\n   * Use this event to fire other events to interested plug-ins\n   *\n   * @memberOf Diagram\n   *\n   * @event diagram.init\n   *\n   * @example\n   *\n   * eventBus.on('diagram.init', function() {\n   *   eventBus.fire('my-custom-event', { foo: 'BAR' });\n   * });\n   *\n   * @type {Object}\n   */\n  this.get('eventBus').fire('diagram.init');\n}\n\n\n/**\n * Destroys the diagram\n *\n * @method  Diagram#destroy\n */\nDiagram.prototype.destroy = function() {\n  this.get('eventBus').fire('diagram.destroy');\n};\n\n/**\n * Clear the diagram, removing all contents.\n */\nDiagram.prototype.clear = function() {\n  this.get('eventBus').fire('diagram.clear');\n};\n","import {\n  forEach,\n  isFunction,\n  isArray,\n  isNumber,\n  isObject\n} from 'min-dash';\n\n\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * A utility that can be used to plug-in into the command execution for\n * extension and/or validation.\n *\n * @param {EventBus} eventBus\n *\n * @example\n *\n * import inherits from 'inherits';\n *\n * import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n *\n * function CommandLogger(eventBus) {\n *   CommandInterceptor.call(this, eventBus);\n *\n *   this.preExecute(function(event) {\n *     console.log('command pre-execute', event);\n *   });\n * }\n *\n * inherits(CommandLogger, CommandInterceptor);\n *\n */\nexport default function CommandInterceptor(eventBus) {\n  this._eventBus = eventBus;\n}\n\nCommandInterceptor.$inject = [ 'eventBus' ];\n\nfunction unwrapEvent(fn, that) {\n  return function(event) {\n    return fn.call(that || null, event.context, event.command, event);\n  };\n}\n\n/**\n * Register an interceptor for a command execution\n *\n * @param {string|Array<string>} [events] list of commands to register on\n * @param {string} [hook] command hook, i.e. preExecute, executed to listen on\n * @param {number} [priority] the priority on which to hook into the execution\n * @param {Function} handlerFn interceptor to be invoked with (event)\n * @param {boolean} unwrap if true, unwrap the event and pass (context, command, event) to the\n *                          listener instead\n * @param {Object} [that] Pass context (`this`) to the handler function\n */\nCommandInterceptor.prototype.on = function(events, hook, priority, handlerFn, unwrap, that) {\n\n  if (isFunction(hook) || isNumber(hook)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = hook;\n    hook = null;\n  }\n\n  if (isFunction(priority)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (isObject(unwrap)) {\n    that = unwrap;\n    unwrap = false;\n  }\n\n  if (!isFunction(handlerFn)) {\n    throw new Error('handlerFn must be a function');\n  }\n\n  if (!isArray(events)) {\n    events = [ events ];\n  }\n\n  var eventBus = this._eventBus;\n\n  forEach(events, function(event) {\n\n    // concat commandStack(.event)?(.hook)?\n    var fullEvent = [ 'commandStack', event, hook ].filter(function(e) { return e; }).join('.');\n\n    eventBus.on(fullEvent, priority, unwrap ? unwrapEvent(handlerFn, that) : handlerFn, that);\n  });\n};\n\n\nvar hooks = [\n  'canExecute',\n  'preExecute',\n  'preExecuted',\n  'execute',\n  'executed',\n  'postExecute',\n  'postExecuted',\n  'revert',\n  'reverted'\n];\n\n/*\n * Install hook shortcuts\n *\n * This will generate the CommandInterceptor#(preExecute|...|reverted) methods\n * which will in term forward to CommandInterceptor#on.\n */\nforEach(hooks, function(hook) {\n\n  /**\n   * {canExecute|preExecute|preExecuted|execute|executed|postExecute|postExecuted|revert|reverted}\n   *\n   * A named hook for plugging into the command execution\n   *\n   * @param {string|Array<string>} [events] list of commands to register on\n   * @param {number} [priority] the priority on which to hook into the execution\n   * @param {Function} handlerFn interceptor to be invoked with (event)\n   * @param {boolean} [unwrap=false] if true, unwrap the event and pass (context, command, event) to the\n   *                          listener instead\n   * @param {Object} [that] Pass context (`this`) to the handler function\n   */\n  CommandInterceptor.prototype[hook] = function(events, priority, handlerFn, unwrap, that) {\n\n    if (isFunction(events) || isNumber(events)) {\n      that = unwrap;\n      unwrap = handlerFn;\n      handlerFn = priority;\n      priority = events;\n      events = null;\n    }\n\n    this.on(events, hook, priority, handlerFn, unwrap, that);\n  };\n});\n","import {\n  uniqueBy,\n  isArray\n} from 'min-dash';\n\n\n/**\n * A service that offers un- and redoable execution of commands.\n *\n * The command stack is responsible for executing modeling actions\n * in a un- and redoable manner. To do this it delegates the actual\n * command execution to {@link CommandHandler}s.\n *\n * Command handlers provide {@link CommandHandler#execute(ctx)} and\n * {@link CommandHandler#revert(ctx)} methods to un- and redo a command\n * identified by a command context.\n *\n *\n * ## Life-Cycle events\n *\n * In the process the command stack fires a number of life-cycle events\n * that other components to participate in the command execution.\n *\n *    * preExecute\n *    * preExecuted\n *    * execute\n *    * executed\n *    * postExecute\n *    * postExecuted\n *    * revert\n *    * reverted\n *\n * A special event is used for validating, whether a command can be\n * performed prior to its execution.\n *\n *    * canExecute\n *\n * Each of the events is fired as `commandStack.{eventName}` and\n * `commandStack.{commandName}.{eventName}`, respectively. This gives\n * components fine grained control on where to hook into.\n *\n * The event object fired transports `command`, the name of the\n * command and `context`, the command context.\n *\n *\n * ## Creating Command Handlers\n *\n * Command handlers should provide the {@link CommandHandler#execute(ctx)}\n * and {@link CommandHandler#revert(ctx)} methods to implement\n * redoing and undoing of a command.\n *\n * A command handler _must_ ensure undo is performed properly in order\n * not to break the undo chain. It must also return the shapes that\n * got changed during the `execute` and `revert` operations.\n *\n * Command handlers may execute other modeling operations (and thus\n * commands) in their `preExecute` and `postExecute` phases. The command\n * stack will properly group all commands together into a logical unit\n * that may be re- and undone atomically.\n *\n * Command handlers must not execute other commands from within their\n * core implementation (`execute`, `revert`).\n *\n *\n * ## Change Tracking\n *\n * During the execution of the CommandStack it will keep track of all\n * elements that have been touched during the command's execution.\n *\n * At the end of the CommandStack execution it will notify interested\n * components via an 'elements.changed' event with all the dirty\n * elements.\n *\n * The event can be picked up by components that are interested in the fact\n * that elements have been changed. One use case for this is updating\n * their graphical representation after moving / resizing or deletion.\n *\n * @see CommandHandler\n *\n * @param {EventBus} eventBus\n * @param {Injector} injector\n */\nexport default function CommandStack(eventBus, injector) {\n\n  /**\n   * A map of all registered command handlers.\n   *\n   * @type {Object}\n   */\n  this._handlerMap = {};\n\n  /**\n   * A stack containing all re/undoable actions on the diagram\n   *\n   * @type {Array<Object>}\n   */\n  this._stack = [];\n\n  /**\n   * The current index on the stack\n   *\n   * @type {number}\n   */\n  this._stackIdx = -1;\n\n  /**\n   * Current active commandStack execution\n   *\n   * @type {Object}\n   * @property {Object[]} actions\n   * @property {Object[]} dirty\n   * @property { 'undo' | 'redo' | 'clear' | 'execute' | null } trigger the cause of the current excecution\n   */\n  this._currentExecution = {\n    actions: [],\n    dirty: [],\n    trigger: null\n  };\n\n\n  this._injector = injector;\n  this._eventBus = eventBus;\n\n  this._uid = 1;\n\n  eventBus.on([\n    'diagram.destroy',\n    'diagram.clear'\n  ], function() {\n    this.clear(false);\n  }, this);\n}\n\nCommandStack.$inject = [ 'eventBus', 'injector' ];\n\n\n/**\n * Execute a command\n *\n * @param {string} command the command to execute\n * @param {Object} context the environment to execute the command in\n */\nCommandStack.prototype.execute = function(command, context) {\n  if (!command) {\n    throw new Error('command required');\n  }\n\n  this._currentExecution.trigger = 'execute';\n\n  var action = { command: command, context: context };\n\n  this._pushAction(action);\n  this._internalExecute(action);\n  this._popAction(action);\n};\n\n\n/**\n * Ask whether a given command can be executed.\n *\n * Implementors may hook into the mechanism on two ways:\n *\n *   * in event listeners:\n *\n *     Users may prevent the execution via an event listener.\n *     It must prevent the default action for `commandStack.(<command>.)canExecute` events.\n *\n *   * in command handlers:\n *\n *     If the method {@link CommandHandler#canExecute} is implemented in a handler\n *     it will be called to figure out whether the execution is allowed.\n *\n * @param  {string} command the command to execute\n * @param  {Object} context the environment to execute the command in\n *\n * @return {boolean} true if the command can be executed\n */\nCommandStack.prototype.canExecute = function(command, context) {\n\n  var action = { command: command, context: context };\n\n  var handler = this._getHandler(command);\n\n  var result = this._fire(command, 'canExecute', action);\n\n  // handler#canExecute will only be called if no listener\n  // decided on a result already\n  if (result === undefined) {\n    if (!handler) {\n      return false;\n    }\n\n    if (handler.canExecute) {\n      result = handler.canExecute(context);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Clear the command stack, erasing all undo / redo history\n */\nCommandStack.prototype.clear = function(emit) {\n  this._stack.length = 0;\n  this._stackIdx = -1;\n\n  if (emit !== false) {\n    this._fire('changed', { trigger: 'clear' });\n  }\n};\n\n\n/**\n * Undo last command(s)\n */\nCommandStack.prototype.undo = function() {\n  var action = this._getUndoAction(),\n      next;\n\n  if (action) {\n    this._currentExecution.trigger = 'undo';\n\n    this._pushAction(action);\n\n    while (action) {\n      this._internalUndo(action);\n      next = this._getUndoAction();\n\n      if (!next || next.id !== action.id) {\n        break;\n      }\n\n      action = next;\n    }\n\n    this._popAction();\n  }\n};\n\n\n/**\n * Redo last command(s)\n */\nCommandStack.prototype.redo = function() {\n  var action = this._getRedoAction(),\n      next;\n\n  if (action) {\n    this._currentExecution.trigger = 'redo';\n\n    this._pushAction(action);\n\n    while (action) {\n      this._internalExecute(action, true);\n      next = this._getRedoAction();\n\n      if (!next || next.id !== action.id) {\n        break;\n      }\n\n      action = next;\n    }\n\n    this._popAction();\n  }\n};\n\n\n/**\n * Register a handler instance with the command stack\n *\n * @param {string} command\n * @param {CommandHandler} handler\n */\nCommandStack.prototype.register = function(command, handler) {\n  this._setHandler(command, handler);\n};\n\n\n/**\n * Register a handler type with the command stack\n * by instantiating it and injecting its dependencies.\n *\n * @param {string} command\n * @param {Function} a constructor for a {@link CommandHandler}\n */\nCommandStack.prototype.registerHandler = function(command, handlerCls) {\n\n  if (!command || !handlerCls) {\n    throw new Error('command and handlerCls must be defined');\n  }\n\n  var handler = this._injector.instantiate(handlerCls);\n  this.register(command, handler);\n};\n\nCommandStack.prototype.canUndo = function() {\n  return !!this._getUndoAction();\n};\n\nCommandStack.prototype.canRedo = function() {\n  return !!this._getRedoAction();\n};\n\n// stack access  //////////////////////\n\nCommandStack.prototype._getRedoAction = function() {\n  return this._stack[this._stackIdx + 1];\n};\n\n\nCommandStack.prototype._getUndoAction = function() {\n  return this._stack[this._stackIdx];\n};\n\n\n// internal functionality //////////////////////\n\nCommandStack.prototype._internalUndo = function(action) {\n  var self = this;\n\n  var command = action.command,\n      context = action.context;\n\n  var handler = this._getHandler(command);\n\n  // guard against illegal nested command stack invocations\n  this._atomicDo(function() {\n    self._fire(command, 'revert', action);\n\n    if (handler.revert) {\n      self._markDirty(handler.revert(context));\n    }\n\n    self._revertedAction(action);\n\n    self._fire(command, 'reverted', action);\n  });\n};\n\n\nCommandStack.prototype._fire = function(command, qualifier, event) {\n  if (arguments.length < 3) {\n    event = qualifier;\n    qualifier = null;\n  }\n\n  var names = qualifier ? [ command + '.' + qualifier, qualifier ] : [ command ],\n      i, name, result;\n\n  event = this._eventBus.createEvent(event);\n\n  for (i = 0; (name = names[i]); i++) {\n    result = this._eventBus.fire('commandStack.' + name, event);\n\n    if (event.cancelBubble) {\n      break;\n    }\n  }\n\n  return result;\n};\n\nCommandStack.prototype._createId = function() {\n  return this._uid++;\n};\n\nCommandStack.prototype._atomicDo = function(fn) {\n\n  var execution = this._currentExecution;\n\n  execution.atomic = true;\n\n  try {\n    fn();\n  } finally {\n    execution.atomic = false;\n  }\n};\n\nCommandStack.prototype._internalExecute = function(action, redo) {\n  var self = this;\n\n  var command = action.command,\n      context = action.context;\n\n  var handler = this._getHandler(command);\n\n  if (!handler) {\n    throw new Error('no command handler registered for <' + command + '>');\n  }\n\n  this._pushAction(action);\n\n  if (!redo) {\n    this._fire(command, 'preExecute', action);\n\n    if (handler.preExecute) {\n      handler.preExecute(context);\n    }\n\n    this._fire(command, 'preExecuted', action);\n  }\n\n  // guard against illegal nested command stack invocations\n  this._atomicDo(function() {\n\n    self._fire(command, 'execute', action);\n\n    if (handler.execute) {\n\n      // actual execute + mark return results as dirty\n      self._markDirty(handler.execute(context));\n    }\n\n    // log to stack\n    self._executedAction(action, redo);\n\n    self._fire(command, 'executed', action);\n  });\n\n  if (!redo) {\n    this._fire(command, 'postExecute', action);\n\n    if (handler.postExecute) {\n      handler.postExecute(context);\n    }\n\n    this._fire(command, 'postExecuted', action);\n  }\n\n  this._popAction(action);\n};\n\n\nCommandStack.prototype._pushAction = function(action) {\n\n  var execution = this._currentExecution,\n      actions = execution.actions;\n\n  var baseAction = actions[0];\n\n  if (execution.atomic) {\n    throw new Error('illegal invocation in <execute> or <revert> phase (action: ' + action.command + ')');\n  }\n\n  if (!action.id) {\n    action.id = (baseAction && baseAction.id) || this._createId();\n  }\n\n  actions.push(action);\n};\n\n\nCommandStack.prototype._popAction = function() {\n  var execution = this._currentExecution,\n      trigger = execution.trigger,\n      actions = execution.actions,\n      dirty = execution.dirty;\n\n  actions.pop();\n\n  if (!actions.length) {\n    this._eventBus.fire('elements.changed', { elements: uniqueBy('id', dirty.reverse()) });\n\n    dirty.length = 0;\n\n    this._fire('changed', { trigger: trigger });\n\n    execution.trigger = null;\n  }\n};\n\n\nCommandStack.prototype._markDirty = function(elements) {\n  var execution = this._currentExecution;\n\n  if (!elements) {\n    return;\n  }\n\n  elements = isArray(elements) ? elements : [ elements ];\n\n  execution.dirty = execution.dirty.concat(elements);\n};\n\n\nCommandStack.prototype._executedAction = function(action, redo) {\n  var stackIdx = ++this._stackIdx;\n\n  if (!redo) {\n    this._stack.splice(stackIdx, this._stack.length, action);\n  }\n};\n\n\nCommandStack.prototype._revertedAction = function(action) {\n  this._stackIdx--;\n};\n\n\nCommandStack.prototype._getHandler = function(command) {\n  return this._handlerMap[command];\n};\n\nCommandStack.prototype._setHandler = function(command, handler) {\n  if (!command || !handler) {\n    throw new Error('command and handler required');\n  }\n\n  if (this._handlerMap[command]) {\n    throw new Error('overriding handler for command <' + command + '>');\n  }\n\n  this._handlerMap[command] = handler;\n};\n","import CommandStack from './CommandStack';\n\nexport default {\n  commandStack: [ 'type', CommandStack ]\n};\n","import {\n  isNumber,\n  assign,\n  forEach,\n  every,\n  debounce,\n  bind,\n  reduce,\n  find,\n  isDefined\n} from 'min-dash';\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from '../util/Collections';\n\nimport {\n  getType,\n  getBBox as getBoundingBox\n} from '../util/Elements';\n\nimport { asTRBL } from '../layout/LayoutUtil';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  transform as svgTransform,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport { createMatrix as createMatrix } from 'tiny-svg';\n\n\nfunction round(number, resolution) {\n  return Math.round(number * resolution) / resolution;\n}\n\nfunction ensurePx(number) {\n  return isNumber(number) ? number + 'px' : number;\n}\n\nfunction findRoot(element) {\n  while (element.parent) {\n    element = element.parent;\n  }\n\n  return element;\n}\n\n/**\n * Creates a HTML container element for a SVG element with\n * the given configuration\n *\n * @param  {Object} options\n * @return {HTMLElement} the container element\n */\nfunction createContainer(options) {\n\n  options = assign({}, { width: '100%', height: '100%' }, options);\n\n  var container = options.container || document.body;\n\n  // create a <div> around the svg element with the respective size\n  // this way we can always get the correct container size\n  // (this is impossible for <svg> elements at the moment)\n  var parent = document.createElement('div');\n  parent.setAttribute('class', 'djs-container');\n\n  assign(parent.style, {\n    position: 'relative',\n    overflow: 'hidden',\n    width: ensurePx(options.width),\n    height: ensurePx(options.height)\n  });\n\n  container.appendChild(parent);\n\n  return parent;\n}\n\nfunction createGroup(parent, cls, childIndex) {\n  var group = svgCreate('g');\n  svgClasses(group).add(cls);\n\n  var index = childIndex !== undefined ? childIndex : parent.childNodes.length - 1;\n\n  // must ensure second argument is node or _null_\n  // cf. https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n  parent.insertBefore(group, parent.childNodes[index] || null);\n\n  return group;\n}\n\nvar BASE_LAYER = 'base';\n\n// render plane contents behind utility layers\nvar PLANE_LAYER_INDEX = 0;\nvar UTILITY_LAYER_INDEX = 1;\n\n\nvar REQUIRED_MODEL_ATTRS = {\n  shape: [ 'x', 'y', 'width', 'height' ],\n  connection: [ 'waypoints' ]\n};\n\n/**\n * The main drawing canvas.\n *\n * @class\n * @constructor\n *\n * @emits Canvas#canvas.init\n *\n * @param {Object} config\n * @param {EventBus} eventBus\n * @param {GraphicsFactory} graphicsFactory\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Canvas(config, eventBus, graphicsFactory, elementRegistry) {\n\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n  this._graphicsFactory = graphicsFactory;\n\n  this._rootsIdx = 0;\n\n  this._layers = {};\n  this._planes = [];\n  this._rootElement = null;\n\n  this._init(config || {});\n}\n\nCanvas.$inject = [\n  'config.canvas',\n  'eventBus',\n  'graphicsFactory',\n  'elementRegistry'\n];\n\n/**\n * Creates a <svg> element that is wrapped into a <div>.\n * This way we are always able to correctly figure out the size of the svg element\n * by querying the parent node.\n\n * (It is not possible to get the size of a svg element cross browser @ 2014-04-01)\n\n * <div class=\"djs-container\" style=\"width: {desired-width}, height: {desired-height}\">\n *   <svg width=\"100%\" height=\"100%\">\n *    ...\n *   </svg>\n * </div>\n */\nCanvas.prototype._init = function(config) {\n\n  var eventBus = this._eventBus;\n\n  // html container\n  var container = this._container = createContainer(config);\n\n  var svg = this._svg = svgCreate('svg');\n  svgAttr(svg, { width: '100%', height: '100%' });\n\n  svgAppend(container, svg);\n\n  var viewport = this._viewport = createGroup(svg, 'viewport');\n\n  // debounce canvas.viewbox.changed events\n  // for smoother diagram interaction\n  if (config.deferUpdate !== false) {\n    this._viewboxChanged = debounce(bind(this._viewboxChanged, this), 300);\n  }\n\n  eventBus.on('diagram.init', function() {\n\n    /**\n     * An event indicating that the canvas is ready to be drawn on.\n     *\n     * @memberOf Canvas\n     *\n     * @event canvas.init\n     *\n     * @type {Object}\n     * @property {SVGElement} svg the created svg element\n     * @property {SVGElement} viewport the direct parent of diagram elements and shapes\n     */\n    eventBus.fire('canvas.init', {\n      svg: svg,\n      viewport: viewport\n    });\n\n  }, this);\n\n  // reset viewbox on shape changes to\n  // recompute the viewbox\n  eventBus.on([\n    'shape.added',\n    'connection.added',\n    'shape.removed',\n    'connection.removed',\n    'elements.changed',\n    'root.set'\n  ], function() {\n    delete this._cachedViewbox;\n  }, this);\n\n  eventBus.on('diagram.destroy', 500, this._destroy, this);\n  eventBus.on('diagram.clear', 500, this._clear, this);\n};\n\nCanvas.prototype._destroy = function(emit) {\n  this._eventBus.fire('canvas.destroy', {\n    svg: this._svg,\n    viewport: this._viewport\n  });\n\n  var parent = this._container.parentNode;\n\n  if (parent) {\n    parent.removeChild(this._container);\n  }\n\n  delete this._svg;\n  delete this._container;\n  delete this._layers;\n  delete this._planes;\n  delete this._rootElement;\n  delete this._viewport;\n};\n\nCanvas.prototype._clear = function() {\n\n  var self = this;\n\n  var allElements = this._elementRegistry.getAll();\n\n  // remove all elements\n  allElements.forEach(function(element) {\n    var type = getType(element);\n\n    if (type === 'root') {\n      self.removeRootElement(element);\n    } else {\n      self._removeElement(element, type);\n    }\n  });\n\n  // remove all planes\n  this._planes = [];\n  this._rootElement = null;\n\n  // force recomputation of view box\n  delete this._cachedViewbox;\n};\n\n/**\n * Returns the default layer on which\n * all elements are drawn.\n *\n * @returns {SVGElement}\n */\nCanvas.prototype.getDefaultLayer = function() {\n  return this.getLayer(BASE_LAYER, PLANE_LAYER_INDEX);\n};\n\n/**\n * Returns a layer that is used to draw elements\n * or annotations on it.\n *\n * Non-existing layers retrieved through this method\n * will be created. During creation, the optional index\n * may be used to create layers below or above existing layers.\n * A layer with a certain index is always created above all\n * existing layers with the same index.\n *\n * @param {string} name\n * @param {number} index\n *\n * @returns {SVGElement}\n */\nCanvas.prototype.getLayer = function(name, index) {\n\n  if (!name) {\n    throw new Error('must specify a name');\n  }\n\n  var layer = this._layers[name];\n\n  if (!layer) {\n    layer = this._layers[name] = this._createLayer(name, index);\n  }\n\n  // throw an error if layer creation / retrival is\n  // requested on different index\n  if (typeof index !== 'undefined' && layer.index !== index) {\n    throw new Error('layer <' + name + '> already created at index <' + index + '>');\n  }\n\n  return layer.group;\n};\n\n/**\n * For a given index, return the number of layers that have a higher index and\n * are visible.\n *\n * This is used to determine the node a layer should be inserted at.\n *\n * @param {Number} index\n * @returns {Number}\n */\nCanvas.prototype._getChildIndex = function(index) {\n  return reduce(this._layers, function(childIndex, layer) {\n    if (layer.visible && index >= layer.index) {\n      childIndex++;\n    }\n\n    return childIndex;\n  }, 0);\n};\n\n/**\n * Creates a given layer and returns it.\n *\n * @param {string} name\n * @param {number} [index=0]\n *\n * @return {Object} layer descriptor with { index, group: SVGGroup }\n */\nCanvas.prototype._createLayer = function(name, index) {\n\n  if (typeof index === 'undefined') {\n    index = UTILITY_LAYER_INDEX;\n  }\n\n  var childIndex = this._getChildIndex(index);\n\n  return {\n    group: createGroup(this._viewport, 'layer-' + name, childIndex),\n    index: index,\n    visible: true\n  };\n};\n\n\n/**\n * Shows a given layer.\n *\n * @param {String} layer\n * @returns {SVGElement}\n */\nCanvas.prototype.showLayer = function(name) {\n\n  if (!name) {\n    throw new Error('must specify a name');\n  }\n\n  var layer = this._layers[name];\n\n  if (!layer) {\n    throw new Error('layer <' + name + '> does not exist');\n  }\n\n  var viewport = this._viewport;\n  var group = layer.group;\n  var index = layer.index;\n\n  if (layer.visible) {\n    return group;\n  }\n\n  var childIndex = this._getChildIndex(index);\n\n  viewport.insertBefore(group, viewport.childNodes[childIndex] || null);\n\n  layer.visible = true;\n\n  return group;\n};\n\n/**\n * Hides a given layer.\n *\n * @param {String} layer\n * @returns {SVGElement}\n */\nCanvas.prototype.hideLayer = function(name) {\n\n  if (!name) {\n    throw new Error('must specify a name');\n  }\n\n  var layer = this._layers[name];\n\n  if (!layer) {\n    throw new Error('layer <' + name + '> does not exist');\n  }\n\n  var group = layer.group;\n\n  if (!layer.visible) {\n    return group;\n  }\n\n  svgRemove(group);\n\n  layer.visible = false;\n\n  return group;\n};\n\n\nCanvas.prototype._removeLayer = function(name) {\n\n  var layer = this._layers[name];\n\n  if (layer) {\n    delete this._layers[name];\n\n    svgRemove(layer.group);\n  }\n};\n\n/**\n * Returns the currently active layer. Can be null.\n *\n * @returns {SVGElement|null}\n */\nCanvas.prototype.getActiveLayer = function() {\n  var plane = this._findPlaneForRoot(this.getRootElement());\n\n  if (!plane) {\n    return null;\n  }\n\n  return plane.layer;\n};\n\n\n/**\n * Returns the plane which contains the given element.\n *\n * @param {string|djs.model.Base} element\n *\n * @return {djs.model.Base} root for element\n */\nCanvas.prototype.findRoot = function(element) {\n  if (typeof element === 'string') {\n    element = this._elementRegistry.get(element);\n  }\n\n  if (!element) {\n    return;\n  }\n\n  var plane = this._findPlaneForRoot(\n    findRoot(element)\n  ) || {};\n\n  return plane.rootElement;\n};\n\n/**\n * Return a list of all root elements on the diagram.\n *\n * @return {djs.model.Root[]}\n */\nCanvas.prototype.getRootElements = function() {\n  return this._planes.map(function(plane) {\n    return plane.rootElement;\n  });\n};\n\nCanvas.prototype._findPlaneForRoot = function(rootElement) {\n  return find(this._planes, function(plane) {\n    return plane.rootElement === rootElement;\n  });\n};\n\n\n/**\n * Returns the html element that encloses the\n * drawing canvas.\n *\n * @return {DOMNode}\n */\nCanvas.prototype.getContainer = function() {\n  return this._container;\n};\n\n\n// markers //////////////////////\n\nCanvas.prototype._updateMarker = function(element, marker, add) {\n  var container;\n\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  // we need to access all\n  container = this._elementRegistry._elements[element.id];\n\n  if (!container) {\n    return;\n  }\n\n  forEach([ container.gfx, container.secondaryGfx ], function(gfx) {\n    if (gfx) {\n\n      // invoke either addClass or removeClass based on mode\n      if (add) {\n        svgClasses(gfx).add(marker);\n      } else {\n        svgClasses(gfx).remove(marker);\n      }\n    }\n  });\n\n  /**\n   * An event indicating that a marker has been updated for an element\n   *\n   * @event element.marker.update\n   * @type {Object}\n   * @property {djs.model.Element} element the shape\n   * @property {Object} gfx the graphical representation of the shape\n   * @property {string} marker\n   * @property {boolean} add true if the marker was added, false if it got removed\n   */\n  this._eventBus.fire('element.marker.update', { element: element, gfx: container.gfx, marker: marker, add: !!add });\n};\n\n\n/**\n * Adds a marker to an element (basically a css class).\n *\n * Fires the element.marker.update event, making it possible to\n * integrate extension into the marker life-cycle, too.\n *\n * @example\n * canvas.addMarker('foo', 'some-marker');\n *\n * var fooGfx = canvas.getGraphics('foo');\n *\n * fooGfx; // <g class=\"... some-marker\"> ... </g>\n *\n * @param {string|djs.model.Base} element\n * @param {string} marker\n */\nCanvas.prototype.addMarker = function(element, marker) {\n  this._updateMarker(element, marker, true);\n};\n\n\n/**\n * Remove a marker from an element.\n *\n * Fires the element.marker.update event, making it possible to\n * integrate extension into the marker life-cycle, too.\n *\n * @param  {string|djs.model.Base} element\n * @param  {string} marker\n */\nCanvas.prototype.removeMarker = function(element, marker) {\n  this._updateMarker(element, marker, false);\n};\n\n/**\n * Check the existence of a marker on element.\n *\n * @param  {string|djs.model.Base} element\n * @param  {string} marker\n */\nCanvas.prototype.hasMarker = function(element, marker) {\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  var gfx = this.getGraphics(element);\n\n  return svgClasses(gfx).has(marker);\n};\n\n/**\n * Toggles a marker on an element.\n *\n * Fires the element.marker.update event, making it possible to\n * integrate extension into the marker life-cycle, too.\n *\n * @param  {string|djs.model.Base} element\n * @param  {string} marker\n */\nCanvas.prototype.toggleMarker = function(element, marker) {\n  if (this.hasMarker(element, marker)) {\n    this.removeMarker(element, marker);\n  } else {\n    this.addMarker(element, marker);\n  }\n};\n\n/**\n * Returns the current root element.\n *\n * Supports two different modes for handling root elements:\n *\n * 1. if no root element has been added before, an implicit root will be added\n * and returned. This is used in applications that don't require explicit\n * root elements.\n *\n * 2. when root elements have been added before calling `getRootElement`,\n * root elements can be null. This is used for applications that want to manage\n * root elements themselves.\n *\n * @returns {Object|djs.model.Root|null} rootElement.\n */\nCanvas.prototype.getRootElement = function() {\n  var rootElement = this._rootElement;\n\n  // can return null if root elements are present but none was set yet\n  if (rootElement || this._planes.length) {\n    return rootElement;\n  }\n\n  return this.setRootElement(this.addRootElement(null));\n};\n\n/**\n * Adds a given root element and returns it.\n *\n * @param {Object|djs.model.Root} rootElement\n *\n * @return {Object|djs.model.Root} rootElement\n */\n\nCanvas.prototype.addRootElement = function(rootElement) {\n  var idx = this._rootsIdx++;\n\n  if (!rootElement) {\n    rootElement = {\n      id: '__implicitroot_' + idx,\n      children: [],\n      isImplicit: true\n    };\n  }\n\n  var layerName = rootElement.layer = 'root-' + idx;\n\n  this._ensureValid('root', rootElement);\n\n  var layer = this.getLayer(layerName, PLANE_LAYER_INDEX);\n\n  this.hideLayer(layerName);\n\n  this._addRoot(rootElement, layer);\n\n  this._planes.push({\n    rootElement: rootElement,\n    layer: layer\n  });\n\n  return rootElement;\n};\n\n/**\n * Removes a given rootElement and returns it.\n *\n * @param {djs.model.Root|String} rootElement\n *\n * @return {Object|djs.model.Root} rootElement\n */\nCanvas.prototype.removeRootElement = function(rootElement) {\n\n  if (typeof rootElement === 'string') {\n    rootElement = this._elementRegistry.get(rootElement);\n  }\n\n  var plane = this._findPlaneForRoot(rootElement);\n\n  if (!plane) {\n    return;\n  }\n\n  // hook up life-cycle events\n  this._removeRoot(rootElement);\n\n  // clean up layer\n  this._removeLayer(rootElement.layer);\n\n  // clean up plane\n  this._planes = this._planes.filter(function(plane) {\n    return plane.rootElement !== rootElement;\n  });\n\n  // clean up active root\n  if (this._rootElement === rootElement) {\n    this._rootElement = null;\n  }\n\n  return rootElement;\n};\n\n\n// root element handling //////////////////////\n\n/**\n * Sets a given element as the new root element for the canvas\n * and returns the new root element.\n *\n * @param {Object|djs.model.Root} rootElement\n *\n * @return {Object|djs.model.Root} new root element\n */\nCanvas.prototype.setRootElement = function(rootElement, override) {\n\n  if (isDefined(override)) {\n    throw new Error('override not supported');\n  }\n\n  if (rootElement === this._rootElement) {\n    return;\n  }\n\n  var plane;\n\n  if (!rootElement) {\n    throw new Error('rootElement required');\n  }\n\n  plane = this._findPlaneForRoot(rootElement);\n\n  // give set add semantics for backwards compatibility\n  if (!plane) {\n    rootElement = this.addRootElement(rootElement);\n  }\n\n  this._setRoot(rootElement);\n\n  return rootElement;\n};\n\n\nCanvas.prototype._removeRoot = function(element) {\n  var elementRegistry = this._elementRegistry,\n      eventBus = this._eventBus;\n\n  // simulate element remove event sequence\n  eventBus.fire('root.remove', { element: element });\n  eventBus.fire('root.removed', { element: element });\n\n  elementRegistry.remove(element);\n};\n\n\nCanvas.prototype._addRoot = function(element, gfx) {\n  var elementRegistry = this._elementRegistry,\n      eventBus = this._eventBus;\n\n  // resemble element add event sequence\n  eventBus.fire('root.add', { element: element });\n\n  elementRegistry.add(element, gfx);\n\n  eventBus.fire('root.added', { element: element, gfx: gfx });\n};\n\n\nCanvas.prototype._setRoot = function(rootElement, layer) {\n\n  var currentRoot = this._rootElement;\n\n  if (currentRoot) {\n\n    // un-associate previous root element <svg>\n    this._elementRegistry.updateGraphics(currentRoot, null, true);\n\n    // hide previous layer\n    this.hideLayer(currentRoot.layer);\n  }\n\n  if (rootElement) {\n\n    if (!layer) {\n      layer = this._findPlaneForRoot(rootElement).layer;\n    }\n\n    // associate element with <svg>\n    this._elementRegistry.updateGraphics(rootElement, this._svg, true);\n\n    // show root layer\n    this.showLayer(rootElement.layer);\n  }\n\n  this._rootElement = rootElement;\n\n  this._eventBus.fire('root.set', { element: rootElement });\n};\n\n// add functionality //////////////////////\n\nCanvas.prototype._ensureValid = function(type, element) {\n  if (!element.id) {\n    throw new Error('element must have an id');\n  }\n\n  if (this._elementRegistry.get(element.id)) {\n    throw new Error('element <' + element.id + '> already exists');\n  }\n\n  var requiredAttrs = REQUIRED_MODEL_ATTRS[type];\n\n  var valid = every(requiredAttrs, function(attr) {\n    return typeof element[attr] !== 'undefined';\n  });\n\n  if (!valid) {\n    throw new Error(\n      'must supply { ' + requiredAttrs.join(', ') + ' } with ' + type);\n  }\n};\n\nCanvas.prototype._setParent = function(element, parent, parentIndex) {\n  collectionAdd(parent.children, element, parentIndex);\n  element.parent = parent;\n};\n\n/**\n * Adds an element to the canvas.\n *\n * This wires the parent <-> child relationship between the element and\n * a explicitly specified parent or an implicit root element.\n *\n * During add it emits the events\n *\n *  * <{type}.add> (element, parent)\n *  * <{type}.added> (element, gfx)\n *\n * Extensions may hook into these events to perform their magic.\n *\n * @param {string} type\n * @param {Object|djs.model.Base} element\n * @param {Object|djs.model.Base} [parent]\n * @param {number} [parentIndex]\n *\n * @return {Object|djs.model.Base} the added element\n */\nCanvas.prototype._addElement = function(type, element, parent, parentIndex) {\n\n  parent = parent || this.getRootElement();\n\n  var eventBus = this._eventBus,\n      graphicsFactory = this._graphicsFactory;\n\n  this._ensureValid(type, element);\n\n  eventBus.fire(type + '.add', { element: element, parent: parent });\n\n  this._setParent(element, parent, parentIndex);\n\n  // create graphics\n  var gfx = graphicsFactory.create(type, element, parentIndex);\n\n  this._elementRegistry.add(element, gfx);\n\n  // update its visual\n  graphicsFactory.update(type, element, gfx);\n\n  eventBus.fire(type + '.added', { element: element, gfx: gfx });\n\n  return element;\n};\n\n/**\n * Adds a shape to the canvas\n *\n * @param {Object|djs.model.Shape} shape to add to the diagram\n * @param {djs.model.Base} [parent]\n * @param {number} [parentIndex]\n *\n * @return {djs.model.Shape} the added shape\n */\nCanvas.prototype.addShape = function(shape, parent, parentIndex) {\n  return this._addElement('shape', shape, parent, parentIndex);\n};\n\n/**\n * Adds a connection to the canvas\n *\n * @param {Object|djs.model.Connection} connection to add to the diagram\n * @param {djs.model.Base} [parent]\n * @param {number} [parentIndex]\n *\n * @return {djs.model.Connection} the added connection\n */\nCanvas.prototype.addConnection = function(connection, parent, parentIndex) {\n  return this._addElement('connection', connection, parent, parentIndex);\n};\n\n\n/**\n * Internal remove element\n */\nCanvas.prototype._removeElement = function(element, type) {\n\n  var elementRegistry = this._elementRegistry,\n      graphicsFactory = this._graphicsFactory,\n      eventBus = this._eventBus;\n\n  element = elementRegistry.get(element.id || element);\n\n  if (!element) {\n\n    // element was removed already\n    return;\n  }\n\n  eventBus.fire(type + '.remove', { element: element });\n\n  graphicsFactory.remove(element);\n\n  // unset parent <-> child relationship\n  collectionRemove(element.parent && element.parent.children, element);\n  element.parent = null;\n\n  eventBus.fire(type + '.removed', { element: element });\n\n  elementRegistry.remove(element);\n\n  return element;\n};\n\n\n/**\n * Removes a shape from the canvas\n *\n * @param {string|djs.model.Shape} shape or shape id to be removed\n *\n * @return {djs.model.Shape} the removed shape\n */\nCanvas.prototype.removeShape = function(shape) {\n\n  /**\n   * An event indicating that a shape is about to be removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event shape.remove\n   * @type {Object}\n   * @property {djs.model.Shape} element the shape descriptor\n   * @property {Object} gfx the graphical representation of the shape\n   */\n\n  /**\n   * An event indicating that a shape has been removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event shape.removed\n   * @type {Object}\n   * @property {djs.model.Shape} element the shape descriptor\n   * @property {Object} gfx the graphical representation of the shape\n   */\n  return this._removeElement(shape, 'shape');\n};\n\n\n/**\n * Removes a connection from the canvas\n *\n * @param {string|djs.model.Connection} connection or connection id to be removed\n *\n * @return {djs.model.Connection} the removed connection\n */\nCanvas.prototype.removeConnection = function(connection) {\n\n  /**\n   * An event indicating that a connection is about to be removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event connection.remove\n   * @type {Object}\n   * @property {djs.model.Connection} element the connection descriptor\n   * @property {Object} gfx the graphical representation of the connection\n   */\n\n  /**\n   * An event indicating that a connection has been removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event connection.removed\n   * @type {Object}\n   * @property {djs.model.Connection} element the connection descriptor\n   * @property {Object} gfx the graphical representation of the connection\n   */\n  return this._removeElement(connection, 'connection');\n};\n\n\n/**\n * Return the graphical object underlaying a certain diagram element\n *\n * @param {string|djs.model.Base} element descriptor of the element\n * @param {boolean} [secondary=false] whether to return the secondary connected element\n *\n * @return {SVGElement}\n */\nCanvas.prototype.getGraphics = function(element, secondary) {\n  return this._elementRegistry.getGraphics(element, secondary);\n};\n\n\n/**\n * Perform a viewbox update via a given change function.\n *\n * @param {Function} changeFn\n */\nCanvas.prototype._changeViewbox = function(changeFn) {\n\n  // notify others of the upcoming viewbox change\n  this._eventBus.fire('canvas.viewbox.changing');\n\n  // perform actual change\n  changeFn.apply(this);\n\n  // reset the cached viewbox so that\n  // a new get operation on viewbox or zoom\n  // triggers a viewbox re-computation\n  this._cachedViewbox = null;\n\n  // notify others of the change; this step\n  // may or may not be debounced\n  this._viewboxChanged();\n};\n\nCanvas.prototype._viewboxChanged = function() {\n  this._eventBus.fire('canvas.viewbox.changed', { viewbox: this.viewbox() });\n};\n\n\n/**\n * Gets or sets the view box of the canvas, i.e. the\n * area that is currently displayed.\n *\n * The getter may return a cached viewbox (if it is currently\n * changing). To force a recomputation, pass `false` as the first argument.\n *\n * @example\n *\n * canvas.viewbox({ x: 100, y: 100, width: 500, height: 500 })\n *\n * // sets the visible area of the diagram to (100|100) -> (600|100)\n * // and and scales it according to the diagram width\n *\n * var viewbox = canvas.viewbox(); // pass `false` to force recomputing the box.\n *\n * console.log(viewbox);\n * // {\n * //   inner: Dimensions,\n * //   outer: Dimensions,\n * //   scale,\n * //   x, y,\n * //   width, height\n * // }\n *\n * // if the current diagram is zoomed and scrolled, you may reset it to the\n * // default zoom via this method, too:\n *\n * var zoomedAndScrolledViewbox = canvas.viewbox();\n *\n * canvas.viewbox({\n *   x: 0,\n *   y: 0,\n *   width: zoomedAndScrolledViewbox.outer.width,\n *   height: zoomedAndScrolledViewbox.outer.height\n * });\n *\n * @param  {Object} [box] the new view box to set\n * @param  {number} box.x the top left X coordinate of the canvas visible in view box\n * @param  {number} box.y the top left Y coordinate of the canvas visible in view box\n * @param  {number} box.width the visible width\n * @param  {number} box.height\n *\n * @return {Object} the current view box\n */\nCanvas.prototype.viewbox = function(box) {\n\n  if (box === undefined && this._cachedViewbox) {\n    return this._cachedViewbox;\n  }\n\n  var viewport = this._viewport,\n      innerBox,\n      outerBox = this.getSize(),\n      matrix,\n      activeLayer,\n      transform,\n      scale,\n      x, y;\n\n  if (!box) {\n\n    // compute the inner box based on the\n    // diagrams active layer. This allows us to exclude\n    // external components, such as overlays\n\n    activeLayer = this._rootElement ? this.getActiveLayer() : null;\n    innerBox = activeLayer && activeLayer.getBBox() || {};\n\n    transform = svgTransform(viewport);\n    matrix = transform ? transform.matrix : createMatrix();\n    scale = round(matrix.a, 1000);\n\n    x = round(-matrix.e || 0, 1000);\n    y = round(-matrix.f || 0, 1000);\n\n    box = this._cachedViewbox = {\n      x: x ? x / scale : 0,\n      y: y ? y / scale : 0,\n      width: outerBox.width / scale,\n      height: outerBox.height / scale,\n      scale: scale,\n      inner: {\n        width: innerBox.width || 0,\n        height: innerBox.height || 0,\n        x: innerBox.x || 0,\n        y: innerBox.y || 0\n      },\n      outer: outerBox\n    };\n\n    return box;\n  } else {\n\n    this._changeViewbox(function() {\n      scale = Math.min(outerBox.width / box.width, outerBox.height / box.height);\n\n      var matrix = this._svg.createSVGMatrix()\n        .scale(scale)\n        .translate(-box.x, -box.y);\n\n      svgTransform(viewport, matrix);\n    });\n  }\n\n  return box;\n};\n\n\n/**\n * Gets or sets the scroll of the canvas.\n *\n * @param {Object} [delta] the new scroll to apply.\n *\n * @param {number} [delta.dx]\n * @param {number} [delta.dy]\n */\nCanvas.prototype.scroll = function(delta) {\n\n  var node = this._viewport;\n  var matrix = node.getCTM();\n\n  if (delta) {\n    this._changeViewbox(function() {\n      delta = assign({ dx: 0, dy: 0 }, delta || {});\n\n      matrix = this._svg.createSVGMatrix().translate(delta.dx, delta.dy).multiply(matrix);\n\n      setCTM(node, matrix);\n    });\n  }\n\n  return { x: matrix.e, y: matrix.f };\n};\n\n/**\n * Scrolls the viewbox to contain the given element.\n * Optionally specify a padding to be applied to the edges.\n *\n * @param {Object|String} [element] the element to scroll to.\n * @param {Object|Number} [padding=100] the padding to be applied. Can also specify top, bottom, left and right.\n *\n */\nCanvas.prototype.scrollToElement = function(element, padding) {\n  var defaultPadding = 100;\n\n  if (typeof element === 'string') {\n    element = this._elementRegistry.get(element);\n  }\n\n  // set to correct rootElement\n  var rootElement = this.findRoot(element);\n\n  if (rootElement !== this.getRootElement()) {\n    this.setRootElement(rootElement);\n  }\n\n  if (!padding) {\n    padding = {};\n  }\n  if (typeof padding === 'number') {\n    defaultPadding = padding;\n  }\n\n  padding = {\n    top: padding.top || defaultPadding,\n    right: padding.right || defaultPadding,\n    bottom: padding.bottom || defaultPadding,\n    left: padding.left || defaultPadding\n  };\n\n  var elementBounds = getBoundingBox(element),\n      elementTrbl = asTRBL(elementBounds),\n      viewboxBounds = this.viewbox(),\n      zoom = this.zoom(),\n      dx, dy;\n\n  // shrink viewboxBounds with padding\n  viewboxBounds.y += padding.top / zoom;\n  viewboxBounds.x += padding.left / zoom;\n  viewboxBounds.width -= (padding.right + padding.left) / zoom;\n  viewboxBounds.height -= (padding.bottom + padding.top) / zoom;\n\n  var viewboxTrbl = asTRBL(viewboxBounds);\n\n  var canFit = elementBounds.width < viewboxBounds.width && elementBounds.height < viewboxBounds.height;\n\n  if (!canFit) {\n\n    // top-left when element can't fit\n    dx = elementBounds.x - viewboxBounds.x;\n    dy = elementBounds.y - viewboxBounds.y;\n\n  } else {\n\n    var dRight = Math.max(0, elementTrbl.right - viewboxTrbl.right),\n        dLeft = Math.min(0, elementTrbl.left - viewboxTrbl.left),\n        dBottom = Math.max(0, elementTrbl.bottom - viewboxTrbl.bottom),\n        dTop = Math.min(0, elementTrbl.top - viewboxTrbl.top);\n\n    dx = dRight || dLeft;\n    dy = dBottom || dTop;\n\n  }\n\n  this.scroll({ dx: -dx * zoom, dy: -dy * zoom });\n};\n\n/**\n * Gets or sets the current zoom of the canvas, optionally zooming\n * to the specified position.\n *\n * The getter may return a cached zoom level. Call it with `false` as\n * the first argument to force recomputation of the current level.\n *\n * @param {string|number} [newScale] the new zoom level, either a number, i.e. 0.9,\n *                                   or `fit-viewport` to adjust the size to fit the current viewport\n * @param {string|Point} [center] the reference point { x: .., y: ..} to zoom to, 'auto' to zoom into mid or null\n *\n * @return {number} the current scale\n */\nCanvas.prototype.zoom = function(newScale, center) {\n\n  if (!newScale) {\n    return this.viewbox(newScale).scale;\n  }\n\n  if (newScale === 'fit-viewport') {\n    return this._fitViewport(center);\n  }\n\n  var outer,\n      matrix;\n\n  this._changeViewbox(function() {\n\n    if (typeof center !== 'object') {\n      outer = this.viewbox().outer;\n\n      center = {\n        x: outer.width / 2,\n        y: outer.height / 2\n      };\n    }\n\n    matrix = this._setZoom(newScale, center);\n  });\n\n  return round(matrix.a, 1000);\n};\n\nfunction setCTM(node, m) {\n  var mstr = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';\n  node.setAttribute('transform', mstr);\n}\n\nCanvas.prototype._fitViewport = function(center) {\n\n  var vbox = this.viewbox(),\n      outer = vbox.outer,\n      inner = vbox.inner,\n      newScale,\n      newViewbox;\n\n  // display the complete diagram without zooming in.\n  // instead of relying on internal zoom, we perform a\n  // hard reset on the canvas viewbox to realize this\n  //\n  // if diagram does not need to be zoomed in, we focus it around\n  // the diagram origin instead\n\n  if (inner.x >= 0 &&\n      inner.y >= 0 &&\n      inner.x + inner.width <= outer.width &&\n      inner.y + inner.height <= outer.height &&\n      !center) {\n\n    newViewbox = {\n      x: 0,\n      y: 0,\n      width: Math.max(inner.width + inner.x, outer.width),\n      height: Math.max(inner.height + inner.y, outer.height)\n    };\n  } else {\n\n    newScale = Math.min(1, outer.width / inner.width, outer.height / inner.height);\n    newViewbox = {\n      x: inner.x + (center ? inner.width / 2 - outer.width / newScale / 2 : 0),\n      y: inner.y + (center ? inner.height / 2 - outer.height / newScale / 2 : 0),\n      width: outer.width / newScale,\n      height: outer.height / newScale\n    };\n  }\n\n  this.viewbox(newViewbox);\n\n  return this.viewbox(false).scale;\n};\n\n\nCanvas.prototype._setZoom = function(scale, center) {\n\n  var svg = this._svg,\n      viewport = this._viewport;\n\n  var matrix = svg.createSVGMatrix();\n  var point = svg.createSVGPoint();\n\n  var centerPoint,\n      originalPoint,\n      currentMatrix,\n      scaleMatrix,\n      newMatrix;\n\n  currentMatrix = viewport.getCTM();\n\n  var currentScale = currentMatrix.a;\n\n  if (center) {\n    centerPoint = assign(point, center);\n\n    // revert applied viewport transformations\n    originalPoint = centerPoint.matrixTransform(currentMatrix.inverse());\n\n    // create scale matrix\n    scaleMatrix = matrix\n      .translate(originalPoint.x, originalPoint.y)\n      .scale(1 / currentScale * scale)\n      .translate(-originalPoint.x, -originalPoint.y);\n\n    newMatrix = currentMatrix.multiply(scaleMatrix);\n  } else {\n    newMatrix = matrix.scale(scale);\n  }\n\n  setCTM(this._viewport, newMatrix);\n\n  return newMatrix;\n};\n\n\n/**\n * Returns the size of the canvas\n *\n * @return {Dimensions}\n */\nCanvas.prototype.getSize = function() {\n  return {\n    width: this._container.clientWidth,\n    height: this._container.clientHeight\n  };\n};\n\n\n/**\n * Return the absolute bounding box for the given element\n *\n * The absolute bounding box may be used to display overlays in the\n * callers (browser) coordinate system rather than the zoomed in/out\n * canvas coordinates.\n *\n * @param  {ElementDescriptor} element\n * @return {Bounds} the absolute bounding box\n */\nCanvas.prototype.getAbsoluteBBox = function(element) {\n  var vbox = this.viewbox();\n  var bbox;\n\n  // connection\n  // use svg bbox\n  if (element.waypoints) {\n    var gfx = this.getGraphics(element);\n\n    bbox = gfx.getBBox();\n  }\n\n  // shapes\n  // use data\n  else {\n    bbox = element;\n  }\n\n  var x = bbox.x * vbox.scale - vbox.x * vbox.scale;\n  var y = bbox.y * vbox.scale - vbox.y * vbox.scale;\n\n  var width = bbox.width * vbox.scale;\n  var height = bbox.height * vbox.scale;\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n};\n\n/**\n * Fires an event in order other modules can react to the\n * canvas resizing\n */\nCanvas.prototype.resized = function() {\n\n  // force recomputation of view box\n  delete this._cachedViewbox;\n\n  this._eventBus.fire('canvas.resized');\n};\n","import {\n  create\n} from '../model';\n\nimport { assign } from 'min-dash';\n\n/**\n * A factory for diagram-js shapes\n */\nexport default function ElementFactory() {\n  this._uid = 12;\n}\n\n\nElementFactory.prototype.createRoot = function(attrs) {\n  return this.create('root', attrs);\n};\n\nElementFactory.prototype.createLabel = function(attrs) {\n  return this.create('label', attrs);\n};\n\nElementFactory.prototype.createShape = function(attrs) {\n  return this.create('shape', attrs);\n};\n\nElementFactory.prototype.createConnection = function(attrs) {\n  return this.create('connection', attrs);\n};\n\n/**\n * Create a model element with the given type and\n * a number of pre-set attributes.\n *\n * @param  {string} type\n * @param  {Object} attrs\n * @return {djs.model.Base} the newly created model instance\n */\nElementFactory.prototype.create = function(type, attrs) {\n\n  attrs = assign({}, attrs || {});\n\n  if (!attrs.id) {\n    attrs.id = type + '_' + (this._uid++);\n  }\n\n  return create(type, attrs);\n};","var ELEMENT_ID = 'data-element-id';\n\nimport { attr as svgAttr } from 'tiny-svg';\n\n\n/**\n * @class\n *\n * A registry that keeps track of all shapes in the diagram.\n */\nexport default function ElementRegistry(eventBus) {\n  this._elements = {};\n\n  this._eventBus = eventBus;\n}\n\nElementRegistry.$inject = [ 'eventBus' ];\n\n/**\n * Register a pair of (element, gfx, (secondaryGfx)).\n *\n * @param {djs.model.Base} element\n * @param {SVGElement} gfx\n * @param {SVGElement} [secondaryGfx] optional other element to register, too\n */\nElementRegistry.prototype.add = function(element, gfx, secondaryGfx) {\n\n  var id = element.id;\n\n  this._validateId(id);\n\n  // associate dom node with element\n  svgAttr(gfx, ELEMENT_ID, id);\n\n  if (secondaryGfx) {\n    svgAttr(secondaryGfx, ELEMENT_ID, id);\n  }\n\n  this._elements[id] = { element: element, gfx: gfx, secondaryGfx: secondaryGfx };\n};\n\n/**\n * Removes an element from the registry.\n *\n * @param {djs.model.Base} element\n */\nElementRegistry.prototype.remove = function(element) {\n  var elements = this._elements,\n      id = element.id || element,\n      container = id && elements[id];\n\n  if (container) {\n\n    // unset element id on gfx\n    svgAttr(container.gfx, ELEMENT_ID, '');\n\n    if (container.secondaryGfx) {\n      svgAttr(container.secondaryGfx, ELEMENT_ID, '');\n    }\n\n    delete elements[id];\n  }\n};\n\n/**\n * Update the id of an element\n *\n * @param {djs.model.Base} element\n * @param {string} newId\n */\nElementRegistry.prototype.updateId = function(element, newId) {\n\n  this._validateId(newId);\n\n  if (typeof element === 'string') {\n    element = this.get(element);\n  }\n\n  this._eventBus.fire('element.updateId', {\n    element: element,\n    newId: newId\n  });\n\n  var gfx = this.getGraphics(element),\n      secondaryGfx = this.getGraphics(element, true);\n\n  this.remove(element);\n\n  element.id = newId;\n\n  this.add(element, gfx, secondaryGfx);\n};\n\n/**\n * Update the graphics of an element\n *\n * @param {djs.model.Base} element\n * @param {SVGElement} gfx\n * @param {boolean} [secondary=false] whether to update the secondary connected element\n */\nElementRegistry.prototype.updateGraphics = function(filter, gfx, secondary) {\n  var id = filter.id || filter;\n\n  var container = this._elements[id];\n\n  if (secondary) {\n    container.secondaryGfx = gfx;\n  } else {\n    container.gfx = gfx;\n  }\n\n  if (gfx) {\n    svgAttr(gfx, ELEMENT_ID, id);\n  }\n\n  return gfx;\n};\n\n/**\n * Return the model element for a given id or graphics.\n *\n * @example\n *\n * elementRegistry.get('SomeElementId_1');\n * elementRegistry.get(gfx);\n *\n *\n * @param {string|SVGElement} filter for selecting the element\n *\n * @return {djs.model.Base}\n */\nElementRegistry.prototype.get = function(filter) {\n  var id;\n\n  if (typeof filter === 'string') {\n    id = filter;\n  } else {\n    id = filter && svgAttr(filter, ELEMENT_ID);\n  }\n\n  var container = this._elements[id];\n  return container && container.element;\n};\n\n/**\n * Return all elements that match a given filter function.\n *\n * @param {Function} fn\n *\n * @return {Array<djs.model.Base>}\n */\nElementRegistry.prototype.filter = function(fn) {\n\n  var filtered = [];\n\n  this.forEach(function(element, gfx) {\n    if (fn(element, gfx)) {\n      filtered.push(element);\n    }\n  });\n\n  return filtered;\n};\n\n/**\n * Return the first element that satisfies the provided testing function.\n *\n * @param {Function} fn\n *\n * @return {djs.model.Base}\n */\nElementRegistry.prototype.find = function(fn) {\n  var map = this._elements,\n      keys = Object.keys(map);\n\n  for (var i = 0; i < keys.length; i++) {\n    var id = keys[i],\n        container = map[id],\n        element = container.element,\n        gfx = container.gfx;\n\n    if (fn(element, gfx)) {\n      return element;\n    }\n  }\n};\n\n/**\n * Return all rendered model elements.\n *\n * @return {Array<djs.model.Base>}\n */\nElementRegistry.prototype.getAll = function() {\n  return this.filter(function(e) { return e; });\n};\n\n/**\n * Iterate over all diagram elements.\n *\n * @param {Function} fn\n */\nElementRegistry.prototype.forEach = function(fn) {\n\n  var map = this._elements;\n\n  Object.keys(map).forEach(function(id) {\n    var container = map[id],\n        element = container.element,\n        gfx = container.gfx;\n\n    return fn(element, gfx);\n  });\n};\n\n/**\n * Return the graphical representation of an element or its id.\n *\n * @example\n * elementRegistry.getGraphics('SomeElementId_1');\n * elementRegistry.getGraphics(rootElement); // <g ...>\n *\n * elementRegistry.getGraphics(rootElement, true); // <svg ...>\n *\n *\n * @param {string|djs.model.Base} filter\n * @param {boolean} [secondary=false] whether to return the secondary connected element\n *\n * @return {SVGElement}\n */\nElementRegistry.prototype.getGraphics = function(filter, secondary) {\n  var id = filter.id || filter;\n\n  var container = this._elements[id];\n  return container && (secondary ? container.secondaryGfx : container.gfx);\n};\n\n/**\n * Validate the suitability of the given id and signals a problem\n * with an exception.\n *\n * @param {string} id\n *\n * @throws {Error} if id is empty or already assigned\n */\nElementRegistry.prototype._validateId = function(id) {\n  if (!id) {\n    throw new Error('element must have an id');\n  }\n\n  if (this._elements[id]) {\n    throw new Error('element with id ' + id + ' already added');\n  }\n};\n","import {\n  isFunction,\n  isArray,\n  isNumber,\n  bind,\n  assign\n} from 'min-dash';\n\nvar FN_REF = '__fn';\n\nvar DEFAULT_PRIORITY = 1000;\n\nvar slice = Array.prototype.slice;\n\n/**\n * A general purpose event bus.\n *\n * This component is used to communicate across a diagram instance.\n * Other parts of a diagram can use it to listen to and broadcast events.\n *\n *\n * ## Registering for Events\n *\n * The event bus provides the {@link EventBus#on} and {@link EventBus#once}\n * methods to register for events. {@link EventBus#off} can be used to\n * remove event registrations. Listeners receive an instance of {@link Event}\n * as the first argument. It allows them to hook into the event execution.\n *\n * ```javascript\n *\n * // listen for event\n * eventBus.on('foo', function(event) {\n *\n *   // access event type\n *   event.type; // 'foo'\n *\n *   // stop propagation to other listeners\n *   event.stopPropagation();\n *\n *   // prevent event default\n *   event.preventDefault();\n * });\n *\n * // listen for event with custom payload\n * eventBus.on('bar', function(event, payload) {\n *   console.log(payload);\n * });\n *\n * // listen for event returning value\n * eventBus.on('foobar', function(event) {\n *\n *   // stop event propagation + prevent default\n *   return false;\n *\n *   // stop event propagation + return custom result\n *   return {\n *     complex: 'listening result'\n *   };\n * });\n *\n *\n * // listen with custom priority (default=1000, higher is better)\n * eventBus.on('priorityfoo', 1500, function(event) {\n *   console.log('invoked first!');\n * });\n *\n *\n * // listen for event and pass the context (`this`)\n * eventBus.on('foobar', function(event) {\n *   this.foo();\n * }, this);\n * ```\n *\n *\n * ## Emitting Events\n *\n * Events can be emitted via the event bus using {@link EventBus#fire}.\n *\n * ```javascript\n *\n * // false indicates that the default action\n * // was prevented by listeners\n * if (eventBus.fire('foo') === false) {\n *   console.log('default has been prevented!');\n * };\n *\n *\n * // custom args + return value listener\n * eventBus.on('sum', function(event, a, b) {\n *   return a + b;\n * });\n *\n * // you can pass custom arguments + retrieve result values.\n * var sum = eventBus.fire('sum', 1, 2);\n * console.log(sum); // 3\n * ```\n */\nexport default function EventBus() {\n  this._listeners = {};\n\n  // cleanup on destroy on lowest priority to allow\n  // message passing until the bitter end\n  this.on('diagram.destroy', 1, this._destroy, this);\n}\n\n\n/**\n * Register an event listener for events with the given name.\n *\n * The callback will be invoked with `event, ...additionalArguments`\n * that have been passed to {@link EventBus#fire}.\n *\n * Returning false from a listener will prevent the events default action\n * (if any is specified). To stop an event from being processed further in\n * other listeners execute {@link Event#stopPropagation}.\n *\n * Returning anything but `undefined` from a listener will stop the listener propagation.\n *\n * @param {string|Array<string>} events\n * @param {number} [priority=1000] the priority in which this listener is called, larger is higher\n * @param {Function} callback\n * @param {Object} [that] Pass context (`this`) to the callback\n */\nEventBus.prototype.on = function(events, priority, callback, that) {\n\n  events = isArray(events) ? events : [ events ];\n\n  if (isFunction(priority)) {\n    that = callback;\n    callback = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (!isNumber(priority)) {\n    throw new Error('priority must be a number');\n  }\n\n  var actualCallback = callback;\n\n  if (that) {\n    actualCallback = bind(callback, that);\n\n    // make sure we remember and are able to remove\n    // bound callbacks via {@link #off} using the original\n    // callback\n    actualCallback[FN_REF] = callback[FN_REF] || callback;\n  }\n\n  var self = this;\n\n  events.forEach(function(e) {\n    self._addListener(e, {\n      priority: priority,\n      callback: actualCallback,\n      next: null\n    });\n  });\n};\n\n\n/**\n * Register an event listener that is executed only once.\n *\n * @param {string} event the event name to register for\n * @param {number} [priority=1000] the priority in which this listener is called, larger is higher\n * @param {Function} callback the callback to execute\n * @param {Object} [that] Pass context (`this`) to the callback\n */\nEventBus.prototype.once = function(event, priority, callback, that) {\n  var self = this;\n\n  if (isFunction(priority)) {\n    that = callback;\n    callback = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (!isNumber(priority)) {\n    throw new Error('priority must be a number');\n  }\n\n  function wrappedCallback() {\n    wrappedCallback.__isTomb = true;\n\n    var result = callback.apply(that, arguments);\n\n    self.off(event, wrappedCallback);\n\n    return result;\n  }\n\n  // make sure we remember and are able to remove\n  // bound callbacks via {@link #off} using the original\n  // callback\n  wrappedCallback[FN_REF] = callback;\n\n  this.on(event, priority, wrappedCallback);\n};\n\n\n/**\n * Removes event listeners by event and callback.\n *\n * If no callback is given, all listeners for a given event name are being removed.\n *\n * @param {string|Array<string>} events\n * @param {Function} [callback]\n */\nEventBus.prototype.off = function(events, callback) {\n\n  events = isArray(events) ? events : [ events ];\n\n  var self = this;\n\n  events.forEach(function(event) {\n    self._removeListener(event, callback);\n  });\n\n};\n\n\n/**\n * Create an EventBus event.\n *\n * @param {Object} data\n *\n * @return {Object} event, recognized by the eventBus\n */\nEventBus.prototype.createEvent = function(data) {\n  var event = new InternalEvent();\n\n  event.init(data);\n\n  return event;\n};\n\n\n/**\n * Fires a named event.\n *\n * @example\n *\n * // fire event by name\n * events.fire('foo');\n *\n * // fire event object with nested type\n * var event = { type: 'foo' };\n * events.fire(event);\n *\n * // fire event with explicit type\n * var event = { x: 10, y: 20 };\n * events.fire('element.moved', event);\n *\n * // pass additional arguments to the event\n * events.on('foo', function(event, bar) {\n *   alert(bar);\n * });\n *\n * events.fire({ type: 'foo' }, 'I am bar!');\n *\n * @param {string} [name] the optional event name\n * @param {Object} [event] the event object\n * @param {...Object} additional arguments to be passed to the callback functions\n *\n * @return {boolean} the events return value, if specified or false if the\n *                   default action was prevented by listeners\n */\nEventBus.prototype.fire = function(type, data) {\n  var event,\n      firstListener,\n      returnValue,\n      args;\n\n  args = slice.call(arguments);\n\n  if (typeof type === 'object') {\n    data = type;\n    type = data.type;\n  }\n\n  if (!type) {\n    throw new Error('no event type specified');\n  }\n\n  firstListener = this._listeners[type];\n\n  if (!firstListener) {\n    return;\n  }\n\n  // we make sure we fire instances of our home made\n  // events here. We wrap them only once, though\n  if (data instanceof InternalEvent) {\n\n    // we are fine, we alread have an event\n    event = data;\n  } else {\n    event = this.createEvent(data);\n  }\n\n  // ensure we pass the event as the first parameter\n  args[0] = event;\n\n  // original event type (in case we delegate)\n  var originalType = event.type;\n\n  // update event type before delegation\n  if (type !== originalType) {\n    event.type = type;\n  }\n\n  try {\n    returnValue = this._invokeListeners(event, args, firstListener);\n  } finally {\n\n    // reset event type after delegation\n    if (type !== originalType) {\n      event.type = originalType;\n    }\n  }\n\n  // set the return value to false if the event default\n  // got prevented and no other return value exists\n  if (returnValue === undefined && event.defaultPrevented) {\n    returnValue = false;\n  }\n\n  return returnValue;\n};\n\n\nEventBus.prototype.handleError = function(error) {\n  return this.fire('error', { error: error }) === false;\n};\n\n\nEventBus.prototype._destroy = function() {\n  this._listeners = {};\n};\n\nEventBus.prototype._invokeListeners = function(event, args, listener) {\n\n  var returnValue;\n\n  while (listener) {\n\n    // handle stopped propagation\n    if (event.cancelBubble) {\n      break;\n    }\n\n    returnValue = this._invokeListener(event, args, listener);\n\n    listener = listener.next;\n  }\n\n  return returnValue;\n};\n\nEventBus.prototype._invokeListener = function(event, args, listener) {\n\n  var returnValue;\n\n  if (listener.callback.__isTomb) {\n    return returnValue;\n  }\n\n  try {\n\n    // returning false prevents the default action\n    returnValue = invokeFunction(listener.callback, args);\n\n    // stop propagation on return value\n    if (returnValue !== undefined) {\n      event.returnValue = returnValue;\n      event.stopPropagation();\n    }\n\n    // prevent default on return false\n    if (returnValue === false) {\n      event.preventDefault();\n    }\n  } catch (error) {\n    if (!this.handleError(error)) {\n      console.error('unhandled error in event listener', error);\n\n      throw error;\n    }\n  }\n\n  return returnValue;\n};\n\n/*\n * Add new listener with a certain priority to the list\n * of listeners (for the given event).\n *\n * The semantics of listener registration / listener execution are\n * first register, first serve: New listeners will always be inserted\n * after existing listeners with the same priority.\n *\n * Example: Inserting two listeners with priority 1000 and 1300\n *\n *    * before: [ 1500, 1500, 1000, 1000 ]\n *    * after: [ 1500, 1500, (new=1300), 1000, 1000, (new=1000) ]\n *\n * @param {string} event\n * @param {Object} listener { priority, callback }\n */\nEventBus.prototype._addListener = function(event, newListener) {\n\n  var listener = this._getListeners(event),\n      previousListener;\n\n  // no prior listeners\n  if (!listener) {\n    this._setListeners(event, newListener);\n\n    return;\n  }\n\n  // ensure we order listeners by priority from\n  // 0 (high) to n > 0 (low)\n  while (listener) {\n\n    if (listener.priority < newListener.priority) {\n\n      newListener.next = listener;\n\n      if (previousListener) {\n        previousListener.next = newListener;\n      } else {\n        this._setListeners(event, newListener);\n      }\n\n      return;\n    }\n\n    previousListener = listener;\n    listener = listener.next;\n  }\n\n  // add new listener to back\n  previousListener.next = newListener;\n};\n\n\nEventBus.prototype._getListeners = function(name) {\n  return this._listeners[name];\n};\n\nEventBus.prototype._setListeners = function(name, listener) {\n  this._listeners[name] = listener;\n};\n\nEventBus.prototype._removeListener = function(event, callback) {\n\n  var listener = this._getListeners(event),\n      nextListener,\n      previousListener,\n      listenerCallback;\n\n  if (!callback) {\n\n    // clear listeners\n    this._setListeners(event, null);\n\n    return;\n  }\n\n  while (listener) {\n\n    nextListener = listener.next;\n\n    listenerCallback = listener.callback;\n\n    if (listenerCallback === callback || listenerCallback[FN_REF] === callback) {\n      if (previousListener) {\n        previousListener.next = nextListener;\n      } else {\n\n        // new first listener\n        this._setListeners(event, nextListener);\n      }\n    }\n\n    previousListener = listener;\n    listener = nextListener;\n  }\n};\n\n/**\n * A event that is emitted via the event bus.\n */\nfunction InternalEvent() { }\n\nInternalEvent.prototype.stopPropagation = function() {\n  this.cancelBubble = true;\n};\n\nInternalEvent.prototype.preventDefault = function() {\n  this.defaultPrevented = true;\n};\n\nInternalEvent.prototype.init = function(data) {\n  assign(this, data || {});\n};\n\n\n/**\n * Invoke function. Be fast...\n *\n * @param {Function} fn\n * @param {Array<Object>} args\n *\n * @return {Any}\n */\nfunction invokeFunction(fn, args) {\n  return fn.apply(null, args);\n}\n","import {\n  forEach,\n  reduce\n} from 'min-dash';\n\nimport {\n  getChildren,\n  getVisual\n} from '../util/GraphicsUtil';\n\nimport { translate } from '../util/SvgTransformUtil';\n\nimport { clear as domClear } from 'min-dom';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  isFrameElement\n} from '../util/Elements';\n\n/**\n * A factory that creates graphical elements\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n */\nexport default function GraphicsFactory(eventBus, elementRegistry) {\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n}\n\nGraphicsFactory.$inject = [ 'eventBus' , 'elementRegistry' ];\n\n\nGraphicsFactory.prototype._getChildrenContainer = function(element) {\n\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  var childrenGfx;\n\n  // root element\n  if (!element.parent) {\n    childrenGfx = gfx;\n  } else {\n    childrenGfx = getChildren(gfx);\n    if (!childrenGfx) {\n      childrenGfx = svgCreate('g');\n      svgClasses(childrenGfx).add('djs-children');\n\n      svgAppend(gfx.parentNode, childrenGfx);\n    }\n  }\n\n  return childrenGfx;\n};\n\n/**\n * Clears the graphical representation of the element and returns the\n * cleared visual (the <g class=\"djs-visual\" /> element).\n */\nGraphicsFactory.prototype._clear = function(gfx) {\n  var visual = getVisual(gfx);\n\n  domClear(visual);\n\n  return visual;\n};\n\n/**\n * Creates a gfx container for shapes and connections\n *\n * The layout is as follows:\n *\n * <g class=\"djs-group\">\n *\n *   <!-- the gfx -->\n *   <g class=\"djs-element djs-(shape|connection|frame)\">\n *     <g class=\"djs-visual\">\n *       <!-- the renderer draws in here -->\n *     </g>\n *\n *     <!-- extensions (overlays, click box, ...) goes here\n *   </g>\n *\n *   <!-- the gfx child nodes -->\n *   <g class=\"djs-children\"></g>\n * </g>\n *\n * @param {string} type the type of the element, i.e. shape | connection\n * @param {SVGElement} [childrenGfx]\n * @param {number} [parentIndex] position to create container in parent\n * @param {boolean} [isFrame] is frame element\n *\n * @return {SVGElement}\n */\nGraphicsFactory.prototype._createContainer = function(\n    type, childrenGfx, parentIndex, isFrame\n) {\n  var outerGfx = svgCreate('g');\n  svgClasses(outerGfx).add('djs-group');\n\n  // insert node at position\n  if (typeof parentIndex !== 'undefined') {\n    prependTo(outerGfx, childrenGfx, childrenGfx.childNodes[parentIndex]);\n  } else {\n    svgAppend(childrenGfx, outerGfx);\n  }\n\n  var gfx = svgCreate('g');\n  svgClasses(gfx).add('djs-element');\n  svgClasses(gfx).add('djs-' + type);\n\n  if (isFrame) {\n    svgClasses(gfx).add('djs-frame');\n  }\n\n  svgAppend(outerGfx, gfx);\n\n  // create visual\n  var visual = svgCreate('g');\n  svgClasses(visual).add('djs-visual');\n\n  svgAppend(gfx, visual);\n\n  return gfx;\n};\n\nGraphicsFactory.prototype.create = function(type, element, parentIndex) {\n  var childrenGfx = this._getChildrenContainer(element.parent);\n  return this._createContainer(type, childrenGfx, parentIndex, isFrameElement(element));\n};\n\nGraphicsFactory.prototype.updateContainments = function(elements) {\n\n  var self = this,\n      elementRegistry = this._elementRegistry,\n      parents;\n\n  parents = reduce(elements, function(map, e) {\n\n    if (e.parent) {\n      map[e.parent.id] = e.parent;\n    }\n\n    return map;\n  }, {});\n\n  // update all parents of changed and reorganized their children\n  // in the correct order (as indicated in our model)\n  forEach(parents, function(parent) {\n\n    var children = parent.children;\n\n    if (!children) {\n      return;\n    }\n\n    var childrenGfx = self._getChildrenContainer(parent);\n\n    forEach(children.slice().reverse(), function(child) {\n      var childGfx = elementRegistry.getGraphics(child);\n\n      prependTo(childGfx.parentNode, childrenGfx);\n    });\n  });\n};\n\nGraphicsFactory.prototype.drawShape = function(visual, element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.shape', { gfx: visual, element: element });\n};\n\nGraphicsFactory.prototype.getShapePath = function(element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.getShapePath', element);\n};\n\nGraphicsFactory.prototype.drawConnection = function(visual, element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.connection', { gfx: visual, element: element });\n};\n\nGraphicsFactory.prototype.getConnectionPath = function(waypoints) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.getConnectionPath', waypoints);\n};\n\nGraphicsFactory.prototype.update = function(type, element, gfx) {\n\n  // do NOT update root element\n  if (!element.parent) {\n    return;\n  }\n\n  var visual = this._clear(gfx);\n\n  // redraw\n  if (type === 'shape') {\n    this.drawShape(visual, element);\n\n    // update positioning\n    translate(gfx, element.x, element.y);\n  } else\n  if (type === 'connection') {\n    this.drawConnection(visual, element);\n  } else {\n    throw new Error('unknown type: ' + type);\n  }\n\n  if (element.hidden) {\n    svgAttr(gfx, 'display', 'none');\n  } else {\n    svgAttr(gfx, 'display', 'block');\n  }\n};\n\nGraphicsFactory.prototype.remove = function(element) {\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  // remove\n  svgRemove(gfx.parentNode);\n};\n\n\n// helpers //////////\n\nfunction prependTo(newNode, parentNode, siblingNode) {\n  var node = siblingNode || parentNode.firstChild;\n\n  // do not prepend node to itself to prevent IE from crashing\n  // https://github.com/bpmn-io/bpmn-js/issues/746\n  if (newNode === node) {\n    return;\n  }\n\n  parentNode.insertBefore(newNode, node);\n}\n","import DrawModule from '../draw';\n\nimport Canvas from './Canvas';\nimport ElementRegistry from './ElementRegistry';\nimport ElementFactory from './ElementFactory';\nimport EventBus from './EventBus';\nimport GraphicsFactory from './GraphicsFactory';\n\nexport default {\n  __depends__: [ DrawModule ],\n  __init__: [ 'canvas' ],\n  canvas: [ 'type', Canvas ],\n  elementRegistry: [ 'type', ElementRegistry ],\n  elementFactory: [ 'type', ElementFactory ],\n  eventBus: [ 'type', EventBus ],\n  graphicsFactory: [ 'type', GraphicsFactory ]\n};","var DEFAULT_RENDER_PRIORITY = 1000;\n\n/**\n * The base implementation of shape and connection renderers.\n *\n * @param {EventBus} eventBus\n * @param {number} [renderPriority=1000]\n */\nexport default function BaseRenderer(eventBus, renderPriority) {\n  var self = this;\n\n  renderPriority = renderPriority || DEFAULT_RENDER_PRIORITY;\n\n  eventBus.on([ 'render.shape', 'render.connection' ], renderPriority, function(evt, context) {\n    var type = evt.type,\n        element = context.element,\n        visuals = context.gfx,\n        attrs = context.attrs;\n\n    if (self.canRender(element)) {\n      if (type === 'render.shape') {\n        return self.drawShape(visuals, element, attrs);\n      } else {\n        return self.drawConnection(visuals, element, attrs);\n      }\n    }\n  });\n\n  eventBus.on([ 'render.getShapePath', 'render.getConnectionPath' ], renderPriority, function(evt, element) {\n    if (self.canRender(element)) {\n      if (evt.type === 'render.getShapePath') {\n        return self.getShapePath(element);\n      } else {\n        return self.getConnectionPath(element);\n      }\n    }\n  });\n}\n\n/**\n * Should check whether *this* renderer can render\n * the element/connection.\n *\n * @param {element} element\n *\n * @returns {boolean}\n */\nBaseRenderer.prototype.canRender = function() {};\n\n/**\n * Provides the shape's snap svg element to be drawn on the `canvas`.\n *\n * @param {djs.Graphics} visuals\n * @param {Shape} shape\n *\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\n */\nBaseRenderer.prototype.drawShape = function() {};\n\n/**\n * Provides the shape's snap svg element to be drawn on the `canvas`.\n *\n * @param {djs.Graphics} visuals\n * @param {Connection} connection\n *\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\n */\nBaseRenderer.prototype.drawConnection = function() {};\n\n/**\n * Gets the SVG path of a shape that represents it's visual bounds.\n *\n * @param {Shape} shape\n *\n * @return {string} svg path\n */\nBaseRenderer.prototype.getShapePath = function() {};\n\n/**\n * Gets the SVG path of a connection that represents it's visual bounds.\n *\n * @param {Connection} connection\n *\n * @return {string} svg path\n */\nBaseRenderer.prototype.getConnectionPath = function() {};\n","import inherits from 'inherits';\n\nimport BaseRenderer from './BaseRenderer';\n\nimport {\n  componentsToPath,\n  createLine\n} from '../util/RenderUtil';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport { assign } from 'min-dash';\n\nimport {\n  isFrameElement\n} from '../util/Elements';\n\n// apply default renderer with lowest possible priority\n// so that it only kicks in if noone else could render\nvar DEFAULT_RENDER_PRIORITY = 1;\n\n/**\n * The default renderer used for shapes and connections.\n *\n * @param {EventBus} eventBus\n * @param {Styles} styles\n */\nexport default function DefaultRenderer(eventBus, styles) {\n\n  //\n  BaseRenderer.call(this, eventBus, DEFAULT_RENDER_PRIORITY);\n\n  this.CONNECTION_STYLE = styles.style([ 'no-fill' ], { strokeWidth: 5, stroke: 'fuchsia' });\n  this.SHAPE_STYLE = styles.style({ fill: 'white', stroke: 'fuchsia', strokeWidth: 2 });\n  this.FRAME_STYLE = styles.style([ 'no-fill' ], { stroke: 'fuchsia', strokeDasharray: 4, strokeWidth: 2 });\n}\n\ninherits(DefaultRenderer, BaseRenderer);\n\n\nDefaultRenderer.prototype.canRender = function() {\n  return true;\n};\n\nDefaultRenderer.prototype.drawShape = function drawShape(visuals, element, attrs) {\n  var rect = svgCreate('rect');\n\n  svgAttr(rect, {\n    x: 0,\n    y: 0,\n    width: element.width || 0,\n    height: element.height || 0\n  });\n\n  if (isFrameElement(element)) {\n    svgAttr(rect, assign({}, this.FRAME_STYLE, attrs || {}));\n  } else {\n    svgAttr(rect, assign({}, this.SHAPE_STYLE, attrs || {}));\n  }\n\n  svgAppend(visuals, rect);\n\n  return rect;\n};\n\nDefaultRenderer.prototype.drawConnection = function drawConnection(visuals, connection, attrs) {\n\n  var line = createLine(connection.waypoints, assign({}, this.CONNECTION_STYLE, attrs || {}));\n  svgAppend(visuals, line);\n\n  return line;\n};\n\nDefaultRenderer.prototype.getShapePath = function getShapePath(shape) {\n\n  var x = shape.x,\n      y = shape.y,\n      width = shape.width,\n      height = shape.height;\n\n  var shapePath = [\n    [ 'M', x, y ],\n    [ 'l', width, 0 ],\n    [ 'l', 0, height ],\n    [ 'l', -width, 0 ],\n    [ 'z' ]\n  ];\n\n  return componentsToPath(shapePath);\n};\n\nDefaultRenderer.prototype.getConnectionPath = function getConnectionPath(connection) {\n  var waypoints = connection.waypoints;\n\n  var idx, point, connectionPath = [];\n\n  for (idx = 0; (point = waypoints[idx]); idx++) {\n\n    // take invisible docking into account\n    // when creating the path\n    point = point.original || point;\n\n    connectionPath.push([ idx === 0 ? 'M' : 'L', point.x, point.y ]);\n  }\n\n  return componentsToPath(connectionPath);\n};\n\n\nDefaultRenderer.$inject = [ 'eventBus', 'styles' ];\n","import {\n  isArray,\n  assign,\n  reduce\n} from 'min-dash';\n\n\n/**\n * A component that manages shape styles\n */\nexport default function Styles() {\n\n  var defaultTraits = {\n\n    'no-fill': {\n      fill: 'none'\n    },\n    'no-border': {\n      strokeOpacity: 0.0\n    },\n    'no-events': {\n      pointerEvents: 'none'\n    }\n  };\n\n  var self = this;\n\n  /**\n   * Builds a style definition from a className, a list of traits and an object of additional attributes.\n   *\n   * @param  {string} className\n   * @param  {Array<string>} traits\n   * @param  {Object} additionalAttrs\n   *\n   * @return {Object} the style defintion\n   */\n  this.cls = function(className, traits, additionalAttrs) {\n    var attrs = this.style(traits, additionalAttrs);\n\n    return assign(attrs, { 'class': className });\n  };\n\n  /**\n   * Builds a style definition from a list of traits and an object of additional attributes.\n   *\n   * @param  {Array<string>} traits\n   * @param  {Object} additionalAttrs\n   *\n   * @return {Object} the style defintion\n   */\n  this.style = function(traits, additionalAttrs) {\n\n    if (!isArray(traits) && !additionalAttrs) {\n      additionalAttrs = traits;\n      traits = [];\n    }\n\n    var attrs = reduce(traits, function(attrs, t) {\n      return assign(attrs, defaultTraits[t] || {});\n    }, {});\n\n    return additionalAttrs ? assign(attrs, additionalAttrs) : attrs;\n  };\n\n  this.computeStyle = function(custom, traits, defaultStyles) {\n    if (!isArray(traits)) {\n      defaultStyles = traits;\n      traits = [];\n    }\n\n    return self.style(traits || [], assign({}, defaultStyles, custom || {}));\n  };\n}\n","import DefaultRenderer from './DefaultRenderer';\nimport Styles from './Styles';\n\nexport default {\n  __init__: [ 'defaultRenderer' ],\n  defaultRenderer: [ 'type', DefaultRenderer ],\n  styles: [ 'type', Styles ]\n};\n","import {\n  filter,\n  forEach,\n  sortBy\n} from 'min-dash';\n\nfunction last(arr) {\n  return arr && arr[arr.length - 1];\n}\n\nfunction sortTopOrMiddle(element) {\n  return element.y;\n}\n\nfunction sortLeftOrCenter(element) {\n  return element.x;\n}\n\n/**\n * Sorting functions for different types of alignment\n *\n * @type {Object}\n *\n * @return {Function}\n */\nvar ALIGNMENT_SORTING = {\n  left: sortLeftOrCenter,\n  center: sortLeftOrCenter,\n  right: function(element) {\n    return element.x + element.width;\n  },\n  top: sortTopOrMiddle,\n  middle: sortTopOrMiddle,\n  bottom: function(element) {\n    return element.y + element.height;\n  }\n};\n\n\nexport default function AlignElements(modeling) {\n  this._modeling = modeling;\n}\n\nAlignElements.$inject = [ 'modeling' ];\n\n\n/**\n * Get the relevant \"axis\" and \"dimension\" related to the current type of alignment\n *\n * @param  {string} type left|right|center|top|bottom|middle\n *\n * @return {Object} { axis, dimension }\n */\nAlignElements.prototype._getOrientationDetails = function(type) {\n  var vertical = [ 'top', 'bottom', 'middle' ],\n      axis = 'x',\n      dimension = 'width';\n\n  if (vertical.indexOf(type) !== -1) {\n    axis = 'y';\n    dimension = 'height';\n  }\n\n  return {\n    axis: axis,\n    dimension: dimension\n  };\n};\n\nAlignElements.prototype._isType = function(type, types) {\n  return types.indexOf(type) !== -1;\n};\n\n/**\n * Get a point on the relevant axis where elements should align to\n *\n * @param  {string} type left|right|center|top|bottom|middle\n * @param  {Array} sortedElements\n *\n * @return {Object}\n */\nAlignElements.prototype._alignmentPosition = function(type, sortedElements) {\n  var orientation = this._getOrientationDetails(type),\n      axis = orientation.axis,\n      dimension = orientation.dimension,\n      alignment = {},\n      centers = {},\n      hasSharedCenters = false,\n      centeredElements,\n      firstElement,\n      lastElement;\n\n  function getMiddleOrTop(first, last) {\n    return Math.round((first[axis] + last[axis] + last[dimension]) / 2);\n  }\n\n  if (this._isType(type, [ 'left', 'top' ])) {\n    alignment[type] = sortedElements[0][axis];\n\n  } else if (this._isType(type, [ 'right', 'bottom' ])) {\n    lastElement = last(sortedElements);\n\n    alignment[type] = lastElement[axis] + lastElement[dimension];\n\n  } else if (this._isType(type, [ 'center', 'middle' ])) {\n\n    // check if there is a center shared by more than one shape\n    // if not, just take the middle of the range\n    forEach(sortedElements, function(element) {\n      var center = element[axis] + Math.round(element[dimension] / 2);\n\n      if (centers[center]) {\n        centers[center].elements.push(element);\n      } else {\n        centers[center] = {\n          elements: [ element ],\n          center: center\n        };\n      }\n    });\n\n    centeredElements = sortBy(centers, function(center) {\n      if (center.elements.length > 1) {\n        hasSharedCenters = true;\n      }\n\n      return center.elements.length;\n    });\n\n    if (hasSharedCenters) {\n      alignment[type] = last(centeredElements).center;\n\n      return alignment;\n    }\n\n    firstElement = sortedElements[0];\n\n    sortedElements = sortBy(sortedElements, function(element) {\n      return element[axis] + element[dimension];\n    });\n\n    lastElement = last(sortedElements);\n\n    alignment[type] = getMiddleOrTop(firstElement, lastElement);\n  }\n\n  return alignment;\n};\n\n/**\n * Executes the alignment of a selection of elements\n *\n * @param  {Array} elements\n * @param  {string} type left|right|center|top|bottom|middle\n */\nAlignElements.prototype.trigger = function(elements, type) {\n  var modeling = this._modeling;\n\n  var filteredElements = filter(elements, function(element) {\n    return !(element.waypoints || element.host || element.labelTarget);\n  });\n\n  if (filteredElements.length < 2) {\n    return;\n  }\n\n  var sortFn = ALIGNMENT_SORTING[type];\n\n  var sortedElements = sortBy(filteredElements, sortFn);\n\n  var alignment = this._alignmentPosition(type, sortedElements);\n\n  modeling.alignElements(sortedElements, alignment);\n};\n","import AlignElements from './AlignElements';\n\nexport default {\n  __init__: [ 'alignElements' ],\n  alignElements: [ 'type', AlignElements ]\n};\n","import {\n  flatten,\n  filter,\n  forEach,\n  groupBy,\n  map,\n  unionBy\n} from 'min-dash';\n\nimport { saveClear } from '../../util/Removal';\n\nimport { getNewAttachShapeDelta } from '../../util/AttachUtil';\n\nimport inherits from 'inherits';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\nvar LOW_PRIORITY = 251,\n    HIGH_PRIORITY = 1401;\n\nvar MARKER_ATTACH = 'attach-ok';\n\n\n/**\n * Adds the notion of attached elements to the modeler.\n *\n * Optionally depends on `diagram-js/lib/features/move` to render\n * the attached elements during move preview.\n *\n * Optionally depends on `diagram-js/lib/features/label-support`\n * to render attached labels during move preview.\n *\n * @param {didi.Injector} injector\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {Rules} rules\n * @param {Modeling} modeling\n */\nexport default function AttachSupport(injector, eventBus, canvas, rules, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  var movePreview = injector.get('movePreview', false);\n\n\n  // remove all the attached elements from the shapes to be validated\n  // add all the attached shapes to the overall list of moved shapes\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(e) {\n\n    var context = e.context,\n        shapes = context.shapes,\n        validatedShapes = context.validatedShapes;\n\n    context.shapes = addAttached(shapes);\n\n    context.validatedShapes = removeAttached(validatedShapes);\n  });\n\n  // add attachers to the visual's group\n  movePreview && eventBus.on('shape.move.start', LOW_PRIORITY, function(e) {\n\n    var context = e.context,\n        shapes = context.shapes,\n        attachers = getAttachers(shapes);\n\n    forEach(attachers, function(attacher) {\n      movePreview.makeDraggable(context, attacher, true);\n\n      forEach(attacher.labels, function(label) {\n        movePreview.makeDraggable(context, label, true);\n      });\n    });\n  });\n\n  // add attach-ok marker to current host\n  movePreview && eventBus.on('shape.move.start', function(event) {\n    var context = event.context,\n        shapes = context.shapes;\n\n    if (shapes.length !== 1) {\n      return;\n    }\n\n    var shape = shapes[0];\n\n    var host = shape.host;\n\n    if (host) {\n      canvas.addMarker(host, MARKER_ATTACH);\n\n      eventBus.once([\n        'shape.move.out',\n        'shape.move.cleanup'\n      ], function() {\n        canvas.removeMarker(host, MARKER_ATTACH);\n      });\n    }\n  });\n\n  // add all attachers to move closure\n  this.preExecuted('elements.move', HIGH_PRIORITY, function(e) {\n    var context = e.context,\n        closure = context.closure,\n        shapes = context.shapes,\n        attachers = getAttachers(shapes);\n\n    forEach(attachers, function(attacher) {\n      closure.add(attacher, closure.topLevel[attacher.host.id]);\n    });\n  });\n\n  // perform the attaching after shapes are done moving\n  this.postExecuted('elements.move', function(e) {\n\n    var context = e.context,\n        shapes = context.shapes,\n        newHost = context.newHost,\n        attachers;\n\n    // only single elements can be attached\n    // multiply elements can be detached\n    if (newHost && shapes.length !== 1) {\n      return;\n    }\n\n    if (newHost) {\n      attachers = shapes;\n    } else {\n\n      // find attachers moved without host\n      attachers = filter(shapes, function(shape) {\n        var host = shape.host;\n\n        return isAttacher(shape) && !includes(shapes, host);\n      });\n    }\n\n    forEach(attachers, function(attacher) {\n      modeling.updateAttachment(attacher, newHost);\n    });\n  });\n\n  // ensure invalid attachment connections are removed\n  this.postExecuted('elements.move', function(e) {\n\n    var shapes = e.context.shapes;\n\n    forEach(shapes, function(shape) {\n\n      forEach(shape.attachers, function(attacher) {\n\n        // remove invalid outgoing connections\n        forEach(attacher.outgoing.slice(), function(connection) {\n          var allowed = rules.allowed('connection.reconnect', {\n            connection: connection,\n            source: connection.source,\n            target: connection.target\n          });\n\n          if (!allowed) {\n            modeling.removeConnection(connection);\n          }\n        });\n\n        // remove invalid incoming connections\n        forEach(attacher.incoming.slice(), function(connection) {\n          var allowed = rules.allowed('connection.reconnect', {\n            connection: connection,\n            source: connection.source,\n            target: connection.target\n          });\n\n          if (!allowed) {\n            modeling.removeConnection(connection);\n          }\n        });\n      });\n    });\n  });\n\n  this.postExecute('shape.create', function(e) {\n    var context = e.context,\n        shape = context.shape,\n        host = context.host;\n\n    if (host) {\n      modeling.updateAttachment(shape, host);\n    }\n  });\n\n  // update attachments if the host is replaced\n  this.postExecute('shape.replace', function(e) {\n\n    var context = e.context,\n        oldShape = context.oldShape,\n        newShape = context.newShape;\n\n    // move the attachers to the new host\n    saveClear(oldShape.attachers, function(attacher) {\n      var allowed = rules.allowed('elements.move', {\n        target: newShape,\n        shapes: [ attacher ]\n      });\n\n      if (allowed === 'attach') {\n        modeling.updateAttachment(attacher, newShape);\n      } else {\n        modeling.removeShape(attacher);\n      }\n    });\n\n    // move attachers if new host has different size\n    if (newShape.attachers.length) {\n\n      forEach(newShape.attachers, function(attacher) {\n        var delta = getNewAttachShapeDelta(attacher, oldShape, newShape);\n        modeling.moveShape(attacher, delta, attacher.parent);\n      });\n    }\n\n  });\n\n  // move shape on host resize\n  this.postExecute('shape.resize', function(event) {\n    var context = event.context,\n        shape = context.shape,\n        oldBounds = context.oldBounds,\n        newBounds = context.newBounds,\n        attachers = shape.attachers,\n        hints = context.hints || {};\n\n    if (hints.attachSupport === false) {\n      return;\n    }\n\n    forEach(attachers, function(attacher) {\n      var delta = getNewAttachShapeDelta(attacher, oldBounds, newBounds);\n\n      modeling.moveShape(attacher, delta, attacher.parent);\n\n      forEach(attacher.labels, function(label) {\n        modeling.moveShape(label, delta, label.parent);\n      });\n    });\n  });\n\n  // remove attachments\n  this.preExecute('shape.delete', function(event) {\n\n    var shape = event.context.shape;\n\n    saveClear(shape.attachers, function(attacher) {\n      modeling.removeShape(attacher);\n    });\n\n    if (shape.host) {\n      modeling.updateAttachment(shape, null);\n    }\n  });\n}\n\ninherits(AttachSupport, CommandInterceptor);\n\nAttachSupport.$inject = [\n  'injector',\n  'eventBus',\n  'canvas',\n  'rules',\n  'modeling'\n];\n\n\n/**\n * Return attachers of the given shapes\n *\n * @param {Array<djs.model.Base>} shapes\n * @return {Array<djs.model.Base>}\n */\nfunction getAttachers(shapes) {\n  return flatten(map(shapes, function(s) {\n    return s.attachers || [];\n  }));\n}\n\n/**\n * Return a combined list of elements and\n * attachers.\n *\n * @param {Array<djs.model.Base>} elements\n * @return {Array<djs.model.Base>} filtered\n */\nfunction addAttached(elements) {\n  var attachers = getAttachers(elements);\n\n  return unionBy('id', elements, attachers);\n}\n\n/**\n * Return a filtered list of elements that do not\n * contain attached elements with hosts being part\n * of the selection.\n *\n * @param  {Array<djs.model.Base>} elements\n *\n * @return {Array<djs.model.Base>} filtered\n */\nfunction removeAttached(elements) {\n\n  var ids = groupBy(elements, 'id');\n\n  return filter(elements, function(element) {\n    while (element) {\n\n      // host in selection\n      if (element.host && ids[element.host.id]) {\n        return false;\n      }\n\n      element = element.parent;\n    }\n\n    return true;\n  });\n}\n\nfunction isAttacher(shape) {\n  return !!shape.host;\n}\n\nfunction includes(array, item) {\n  return array.indexOf(item) !== -1;\n}","import RulesModule from '../rules';\n\nimport AttachSupport from './AttachSupport';\n\nexport default {\n  __depends__: [\n    RulesModule\n  ],\n  __init__: [ 'attachSupport' ],\n  attachSupport: [ 'type', AttachSupport ]\n};\n","import {\n  asTRBL,\n  getMid\n} from '../../layout/LayoutUtil';\n\nimport { DEFAULT_DISTANCE } from './AutoPlaceUtil';\n\nvar LOW_PRIORITY = 100;\n\n\n/**\n * A service that places elements connected to existing ones\n * to an appropriate position in an _automated_ fashion.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function AutoPlace(eventBus, modeling, canvas) {\n\n  eventBus.on('autoPlace', LOW_PRIORITY, function(context) {\n    var shape = context.shape,\n        source = context.source;\n\n    return getNewShapePosition(source, shape);\n  });\n\n  eventBus.on('autoPlace.end', function(event) {\n    canvas.scrollToElement(event.shape);\n  });\n\n  /**\n   * Append shape to source at appropriate position.\n   *\n   * @param {djs.model.Shape} source\n   * @param {djs.model.Shape} shape\n   *\n   * @return {djs.model.Shape} appended shape\n   */\n  this.append = function(source, shape, hints) {\n\n    eventBus.fire('autoPlace.start', {\n      source: source,\n      shape: shape\n    });\n\n    // allow others to provide the position\n    var position = eventBus.fire('autoPlace', {\n      source: source,\n      shape: shape\n    });\n\n    var newShape = modeling.appendShape(source, shape, position, source.parent, hints);\n\n    eventBus.fire('autoPlace.end', {\n      source: source,\n      shape: newShape\n    });\n\n    return newShape;\n  };\n\n}\n\nAutoPlace.$inject = [\n  'eventBus',\n  'modeling',\n  'canvas'\n];\n\n// helpers //////////\n\n/**\n * Find the new position for the target element to\n * connect to source.\n *\n * @param  {djs.model.Shape} source\n * @param  {djs.model.Shape} element\n * @param  {Object} [hints]\n * @param  {Object} [hints.defaultDistance]\n *\n * @returns {Point}\n */\nfunction getNewShapePosition(source, element, hints) {\n  if (!hints) {\n    hints = {};\n  }\n\n  var distance = hints.defaultDistance || DEFAULT_DISTANCE;\n\n  var sourceMid = getMid(source),\n      sourceTrbl = asTRBL(source);\n\n  // simply put element right next to source\n  return {\n    x: sourceTrbl.right + distance + element.width / 2,\n    y: sourceMid.y\n  };\n}","/**\n * Select element after auto placement.\n *\n * @param {EventBus} eventBus\n * @param {Selection} selection\n */\nexport default function AutoPlaceSelectionBehavior(eventBus, selection) {\n\n  eventBus.on('autoPlace.end', 500, function(e) {\n    selection.select(e.shape);\n  });\n\n}\n\nAutoPlaceSelectionBehavior.$inject = [\n  'eventBus',\n  'selection'\n];","import {\n  asTRBL,\n  getOrientation,\n  getMid\n} from '../../layout/LayoutUtil';\n\nimport {\n  find,\n  reduce\n} from 'min-dash';\n\n// padding to detect element placement\nvar PLACEMENT_DETECTION_PAD = 10;\n\nexport var DEFAULT_DISTANCE = 50;\n\nvar DEFAULT_MAX_DISTANCE = 250;\n\n\n/**\n * Get free position starting from given position.\n *\n * @param {djs.model.Shape} source\n * @param {djs.model.Shape} element\n * @param {Point} position\n * @param {Function} getNextPosition\n *\n * @return {Point}\n */\nexport function findFreePosition(source, element, position, getNextPosition) {\n  var connectedAtPosition;\n\n  while ((connectedAtPosition = getConnectedAtPosition(source, position, element))) {\n    position = getNextPosition(element, position, connectedAtPosition);\n  }\n\n  return position;\n}\n\n/**\n * Returns function that returns next position.\n *\n * @param {Object} nextPositionDirection\n * @param {Object} [nextPositionDirection.x]\n * @param {Object} [nextPositionDirection.y]\n *\n * @returns {Function}\n */\nexport function generateGetNextPosition(nextPositionDirection) {\n  return function(element, previousPosition, connectedAtPosition) {\n    var nextPosition = {\n      x: previousPosition.x,\n      y: previousPosition.y\n    };\n\n    [ 'x', 'y' ].forEach(function(axis) {\n\n      var nextPositionDirectionForAxis = nextPositionDirection[ axis ];\n\n      if (!nextPositionDirectionForAxis) {\n        return;\n      }\n\n      var dimension = axis === 'x' ? 'width' : 'height';\n\n      var margin = nextPositionDirectionForAxis.margin,\n          minDistance = nextPositionDirectionForAxis.minDistance;\n\n      if (margin < 0) {\n        nextPosition[ axis ] = Math.min(\n          connectedAtPosition[ axis ] + margin - element[ dimension ] / 2,\n          previousPosition[ axis ] - minDistance + margin\n        );\n      } else {\n        nextPosition[ axis ] = Math.max(\n          connectedAtPosition[ axis ] + connectedAtPosition[ dimension ] + margin + element[ dimension ] / 2,\n          previousPosition[ axis ] + minDistance + margin\n        );\n      }\n    });\n\n    return nextPosition;\n  };\n}\n\n/**\n * Return target at given position, if defined.\n *\n * This takes connected elements from host and attachers\n * into account, too.\n */\nexport function getConnectedAtPosition(source, position, element) {\n\n  var bounds = {\n    x: position.x - (element.width / 2),\n    y: position.y - (element.height / 2),\n    width: element.width,\n    height: element.height\n  };\n\n  var closure = getAutoPlaceClosure(source, element);\n\n  return find(closure, function(target) {\n\n    if (target === element) {\n      return false;\n    }\n\n    var orientation = getOrientation(target, bounds, PLACEMENT_DETECTION_PAD);\n\n    return orientation === 'intersect';\n  });\n}\n\n/**\n* Compute optimal distance between source and target based on existing connections to and from source.\n* Assumes left-to-right and top-to-down modeling.\n*\n* @param {djs.model.Shape} source\n* @param {Object} [hints]\n* @param {number} [hints.defaultDistance]\n* @param {string} [hints.direction]\n* @param {Function} [hints.filter]\n* @param {Function} [hints.getWeight]\n* @param {number} [hints.maxDistance]\n* @param {string} [hints.reference]\n*\n* @return {number}\n*/\nexport function getConnectedDistance(source, hints) {\n  if (!hints) {\n    hints = {};\n  }\n\n  // targets > sources by default\n  function getDefaultWeight(connection) {\n    return connection.source === source ? 1 : -1;\n  }\n\n  var defaultDistance = hints.defaultDistance || DEFAULT_DISTANCE,\n      direction = hints.direction || 'e',\n      filter = hints.filter,\n      getWeight = hints.getWeight || getDefaultWeight,\n      maxDistance = hints.maxDistance || DEFAULT_MAX_DISTANCE,\n      reference = hints.reference || 'start';\n\n  if (!filter) {\n    filter = noneFilter;\n  }\n\n  function getDistance(a, b) {\n    if (direction === 'n') {\n      if (reference === 'start') {\n        return asTRBL(a).top - asTRBL(b).bottom;\n      } else if (reference === 'center') {\n        return asTRBL(a).top - getMid(b).y;\n      } else {\n        return asTRBL(a).top - asTRBL(b).top;\n      }\n    } else if (direction === 'w') {\n      if (reference === 'start') {\n        return asTRBL(a).left - asTRBL(b).right;\n      } else if (reference === 'center') {\n        return asTRBL(a).left - getMid(b).x;\n      } else {\n        return asTRBL(a).left - asTRBL(b).left;\n      }\n    } else if (direction === 's') {\n      if (reference === 'start') {\n        return asTRBL(b).top - asTRBL(a).bottom;\n      } else if (reference === 'center') {\n        return getMid(b).y - asTRBL(a).bottom;\n      } else {\n        return asTRBL(b).bottom - asTRBL(a).bottom;\n      }\n    } else {\n      if (reference === 'start') {\n        return asTRBL(b).left - asTRBL(a).right;\n      } else if (reference === 'center') {\n        return getMid(b).x - asTRBL(a).right;\n      } else {\n        return asTRBL(b).right - asTRBL(a).right;\n      }\n    }\n  }\n\n  var sourcesDistances = source.incoming\n    .filter(filter)\n    .map(function(connection) {\n      var weight = getWeight(connection);\n\n      var distance = weight < 0\n        ? getDistance(connection.source, source)\n        : getDistance(source, connection.source);\n\n      return {\n        id: connection.source.id,\n        distance: distance,\n        weight: weight\n      };\n    });\n\n  var targetsDistances = source.outgoing\n    .filter(filter)\n    .map(function(connection) {\n      var weight = getWeight(connection);\n\n      var distance = weight > 0\n        ? getDistance(source, connection.target)\n        : getDistance(connection.target, source);\n\n      return {\n        id: connection.target.id,\n        distance: distance,\n        weight: weight\n      };\n    });\n\n  var distances = sourcesDistances.concat(targetsDistances).reduce(function(accumulator, currentValue) {\n    accumulator[ currentValue.id + '__weight_' + currentValue.weight ] = currentValue;\n\n    return accumulator;\n  }, {});\n\n  var distancesGrouped = reduce(distances, function(accumulator, currentValue) {\n    var distance = currentValue.distance,\n        weight = currentValue.weight;\n\n    if (distance < 0 || distance > maxDistance) {\n      return accumulator;\n    }\n\n    if (!accumulator[ String(distance) ]) {\n      accumulator[ String(distance) ] = 0;\n    }\n\n    accumulator[ String(distance) ] += 1 * weight;\n\n    if (!accumulator.distance || accumulator[ accumulator.distance ] < accumulator[ String(distance) ]) {\n      accumulator.distance = distance;\n    }\n\n    return accumulator;\n  }, {});\n\n  return distancesGrouped.distance || defaultDistance;\n}\n\n/**\n * Returns all connected elements around the given source.\n *\n * This includes:\n *\n *   - connected elements\n *   - host connected elements\n *   - attachers connected elements\n *\n * @param  {djs.model.Shape} source\n *\n * @return {Array<djs.model.Shape>}\n */\nfunction getAutoPlaceClosure(source) {\n\n  var allConnected = getConnected(source);\n\n  if (source.host) {\n    allConnected = allConnected.concat(getConnected(source.host));\n  }\n\n  if (source.attachers) {\n    allConnected = allConnected.concat(source.attachers.reduce(function(shapes, attacher) {\n      return shapes.concat(getConnected(attacher));\n    }, []));\n  }\n\n  return allConnected;\n}\n\nfunction getConnected(element) {\n  return getTargets(element).concat(getSources(element));\n}\n\nfunction getSources(shape) {\n  return shape.incoming.map(function(connection) {\n    return connection.source;\n  });\n}\n\nfunction getTargets(shape) {\n  return shape.outgoing.map(function(connection) {\n    return connection.target;\n  });\n}\n\nfunction noneFilter() {\n  return true;\n}\n","import AutoPlace from './AutoPlace';\nimport AutoPlaceSelectionBehavior from './AutoPlaceSelectionBehavior';\n\nexport default {\n  __init__: [ 'autoPlaceSelectionBehavior' ],\n  autoPlace: [ 'type', AutoPlace ],\n  autoPlaceSelectionBehavior: [ 'type', AutoPlaceSelectionBehavior ]\n};","import inherits from 'inherits';\n\nimport { getBBox as getBoundingBox } from '../../util/Elements';\n\nimport {\n  asTRBL,\n  asBounds\n} from '../../layout/LayoutUtil';\n\nimport {\n  assign,\n  flatten,\n  find,\n  forEach,\n  groupBy,\n  isArray,\n  matchPattern,\n  pick,\n  values\n} from 'min-dash';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\n\n/**\n * An auto resize component that takes care of expanding a parent element\n * if child elements are created or moved close the parents edge.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Modeling} modeling\n * @param {Rules} rules\n */\nexport default function AutoResize(eventBus, elementRegistry, modeling, rules) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  this._elementRegistry = elementRegistry;\n  this._modeling = modeling;\n  this._rules = rules;\n\n  var self = this;\n\n  this.postExecuted([ 'shape.create' ], function(event) {\n    var context = event.context,\n        hints = context.hints || {},\n        shape = context.shape,\n        parent = context.parent || context.newParent;\n\n    if (hints.autoResize === false) {\n      return;\n    }\n\n    self._expand([ shape ], parent);\n  });\n\n  this.postExecuted([ 'elements.move' ], function(event) {\n    var context = event.context,\n        elements = flatten(values(context.closure.topLevel)),\n        hints = context.hints;\n\n    var autoResize = hints ? hints.autoResize : true;\n\n    if (autoResize === false) {\n      return;\n    }\n\n    var expandings = groupBy(elements, function(element) {\n      return element.parent.id;\n    });\n\n    forEach(expandings, function(elements, parentId) {\n\n      // optionally filter elements to be considered when resizing\n      if (isArray(autoResize)) {\n        elements = elements.filter(function(element) {\n          return find(autoResize, matchPattern({ id: element.id }));\n        });\n      }\n\n      self._expand(elements, parentId);\n    });\n  });\n\n  this.postExecuted([ 'shape.toggleCollapse' ], function(event) {\n    var context = event.context,\n        hints = context.hints,\n        shape = context.shape;\n\n    if (hints && hints.autoResize === false) {\n      return;\n    }\n\n    if (shape.collapsed) {\n      return;\n    }\n\n    self._expand(shape.children || [], shape);\n  });\n\n  this.postExecuted([ 'shape.resize' ], function(event) {\n    var context = event.context,\n        hints = context.hints,\n        shape = context.shape,\n        parent = shape.parent;\n\n    if (hints && hints.autoResize === false) {\n      return;\n    }\n\n    if (parent) {\n      self._expand([ shape ], parent);\n    }\n  });\n\n}\n\nAutoResize.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'modeling',\n  'rules'\n];\n\ninherits(AutoResize, CommandInterceptor);\n\n\n/**\n * Calculate the new bounds of the target shape, given\n * a number of elements have been moved or added into the parent.\n *\n * This method considers the current size, the added elements as well as\n * the provided padding for the new bounds.\n *\n * @param {Array<djs.model.Shape>} elements\n * @param {djs.model.Shape} target\n */\nAutoResize.prototype._getOptimalBounds = function(elements, target) {\n\n  var offset = this.getOffset(target),\n      padding = this.getPadding(target);\n\n  var elementsTrbl = asTRBL(getBoundingBox(elements)),\n      targetTrbl = asTRBL(target);\n\n  var newTrbl = {};\n\n  if (elementsTrbl.top - targetTrbl.top < padding.top) {\n    newTrbl.top = elementsTrbl.top - offset.top;\n  }\n\n  if (elementsTrbl.left - targetTrbl.left < padding.left) {\n    newTrbl.left = elementsTrbl.left - offset.left;\n  }\n\n  if (targetTrbl.right - elementsTrbl.right < padding.right) {\n    newTrbl.right = elementsTrbl.right + offset.right;\n  }\n\n  if (targetTrbl.bottom - elementsTrbl.bottom < padding.bottom) {\n    newTrbl.bottom = elementsTrbl.bottom + offset.bottom;\n  }\n\n  return asBounds(assign({}, targetTrbl, newTrbl));\n};\n\n\n/**\n * Expand the target shape respecting rules, offset and padding\n *\n * @param {Array<djs.model.Shape>} elements\n * @param {djs.model.Shape|string} target|targetId\n */\nAutoResize.prototype._expand = function(elements, target) {\n\n  if (typeof target === 'string') {\n    target = this._elementRegistry.get(target);\n  }\n\n  var allowed = this._rules.allowed('element.autoResize', {\n    elements: elements,\n    target: target\n  });\n\n  if (!allowed) {\n    return;\n  }\n\n  // calculate the new bounds\n  var newBounds = this._getOptimalBounds(elements, target);\n\n  if (!boundsChanged(newBounds, target)) {\n    return;\n  }\n\n  var resizeDirections = getResizeDirections(pick(target, [ 'x', 'y', 'width', 'height' ]), newBounds);\n\n  // resize the parent shape\n  this.resize(target, newBounds, {\n    autoResize: resizeDirections\n  });\n\n  var parent = target.parent;\n\n  // recursively expand parent elements\n  if (parent) {\n    this._expand([ target ], parent);\n  }\n};\n\n\n/**\n * Get the amount to expand the given shape in each direction.\n *\n * @param {djs.model.Shape} shape\n *\n * @return {TRBL}\n */\nAutoResize.prototype.getOffset = function(shape) {\n  return { top: 60, bottom: 60, left: 100, right: 100 };\n};\n\n\n/**\n * Get the activation threshold for each side for which\n * resize triggers.\n *\n * @param {djs.model.Shape} shape\n *\n * @return {TRBL}\n */\nAutoResize.prototype.getPadding = function(shape) {\n  return { top: 2, bottom: 2, left: 15, right: 15 };\n};\n\n\n/**\n * Perform the actual resize operation.\n *\n * @param {djs.model.Shape} shape\n * @param {Bounds} newBounds\n * @param {Object} [hints]\n * @param {string} [hints.autoResize]\n */\nAutoResize.prototype.resize = function(shape, newBounds, hints) {\n  this._modeling.resizeShape(shape, newBounds, null, hints);\n};\n\n\nfunction boundsChanged(newBounds, oldBounds) {\n  return (\n    newBounds.x !== oldBounds.x ||\n    newBounds.y !== oldBounds.y ||\n    newBounds.width !== oldBounds.width ||\n    newBounds.height !== oldBounds.height\n  );\n}\n\n/**\n * Get directions of resize as {n|w|s|e} e.g. \"nw\".\n *\n * @param {Bounds} oldBounds\n * @param {Bounds} newBounds\n *\n * @returns {string} Resize directions as {n|w|s|e}.\n */\nfunction getResizeDirections(oldBounds, newBounds) {\n  var directions = '';\n\n  oldBounds = asTRBL(oldBounds);\n  newBounds = asTRBL(newBounds);\n\n  if (oldBounds.top > newBounds.top) {\n    directions = directions.concat('n');\n  }\n\n  if (oldBounds.right < newBounds.right) {\n    directions = directions.concat('w');\n  }\n\n  if (oldBounds.bottom < newBounds.bottom) {\n    directions = directions.concat('s');\n  }\n\n  if (oldBounds.left > newBounds.left) {\n    directions = directions.concat('e');\n  }\n\n  return directions;\n}","import RuleProvider from '../rules/RuleProvider';\n\nimport inherits from 'inherits';\n\n/**\n * This is a base rule provider for the element.autoResize rule.\n */\nexport default function AutoResizeProvider(eventBus) {\n\n  RuleProvider.call(this, eventBus);\n\n  var self = this;\n\n  this.addRule('element.autoResize', function(context) {\n    return self.canResize(context.elements, context.target);\n  });\n}\n\nAutoResizeProvider.$inject = [ 'eventBus' ];\n\ninherits(AutoResizeProvider, RuleProvider);\n\n/**\n * Needs to be implemented by sub classes to allow actual auto resize\n *\n * @param  {Array<djs.model.Shape>} elements\n * @param  {djs.model.Shape} target\n *\n * @return {boolean}\n */\nAutoResizeProvider.prototype.canResize = function(elements, target) {\n  return false;\n};","import { assign } from 'min-dash';\n\nimport {\n  toPoint\n} from '../../util/Event';\n\n\n/**\n * Initiates canvas scrolling if current cursor point is close to a border.\n * Cancelled when current point moves back inside the scrolling borders\n * or cancelled manually.\n *\n * Default options :\n *   scrollThresholdIn: [ 20, 20, 20, 20 ],\n *   scrollThresholdOut: [ 0, 0, 0, 0 ],\n *   scrollRepeatTimeout: 15,\n *   scrollStep: 10\n *\n * Threshold order:\n *   [ left, top, right, bottom ]\n */\nexport default function AutoScroll(config, eventBus, canvas) {\n\n  this._canvas = canvas;\n\n  this._opts = assign({\n    scrollThresholdIn: [ 20, 20, 20, 20 ],\n    scrollThresholdOut: [ 0, 0, 0, 0 ],\n    scrollRepeatTimeout: 15,\n    scrollStep: 10\n  }, config);\n\n  var self = this;\n\n  eventBus.on('drag.move', function(e) {\n    var point = self._toBorderPoint(e);\n\n    self.startScroll(point);\n  });\n\n  eventBus.on([ 'drag.cleanup' ], function() {\n    self.stopScroll();\n  });\n}\n\nAutoScroll.$inject = [\n  'config.autoScroll',\n  'eventBus',\n  'canvas'\n];\n\n\n/**\n * Starts scrolling loop.\n * Point is given in global scale in canvas container box plane.\n *\n * @param  {Object} point { x: X, y: Y }\n */\nAutoScroll.prototype.startScroll = function(point) {\n\n  var canvas = this._canvas;\n  var opts = this._opts;\n  var self = this;\n\n  var clientRect = canvas.getContainer().getBoundingClientRect();\n\n  var diff = [\n    point.x,\n    point.y,\n    clientRect.width - point.x,\n    clientRect.height - point.y\n  ];\n\n  this.stopScroll();\n\n  var dx = 0,\n      dy = 0;\n\n  for (var i = 0; i < 4; i++) {\n    if (between(diff[i], opts.scrollThresholdOut[i], opts.scrollThresholdIn[i])) {\n      if (i === 0) {\n        dx = opts.scrollStep;\n      } else if (i == 1) {\n        dy = opts.scrollStep;\n      } else if (i == 2) {\n        dx = -opts.scrollStep;\n      } else if (i == 3) {\n        dy = -opts.scrollStep;\n      }\n    }\n  }\n\n  if (dx !== 0 || dy !== 0) {\n    canvas.scroll({ dx: dx, dy: dy });\n\n    this._scrolling = setTimeout(function() {\n      self.startScroll(point);\n    }, opts.scrollRepeatTimeout);\n  }\n};\n\nfunction between(val, start, end) {\n  if (start < val && val < end) {\n    return true;\n  }\n\n  return false;\n}\n\n\n/**\n * Stops scrolling loop.\n */\nAutoScroll.prototype.stopScroll = function() {\n  clearTimeout(this._scrolling);\n};\n\n\n/**\n * Overrides defaults options.\n *\n * @param  {Object} options\n */\nAutoScroll.prototype.setOptions = function(options) {\n  this._opts = assign({}, this._opts, options);\n};\n\n\n/**\n * Converts event to a point in canvas container plane in global scale.\n *\n * @param  {Event} event\n * @return {Point}\n */\nAutoScroll.prototype._toBorderPoint = function(event) {\n  var clientRect = this._canvas._container.getBoundingClientRect();\n\n  var globalPosition = toPoint(event.originalEvent);\n\n  return {\n    x: globalPosition.x - clientRect.left,\n    y: globalPosition.y - clientRect.top\n  };\n};","import DraggingModule from '../dragging';\n\nimport AutoScroll from './AutoScroll';\n\n\nexport default {\n  __depends__: [\n    DraggingModule,\n  ],\n  __init__: [ 'autoScroll' ],\n  autoScroll: [ 'type', AutoScroll ]\n};","import { filterRedundantWaypoints } from '../../layout/LayoutUtil';\n\nvar round = Math.round;\n\nvar RECONNECT_START = 'reconnectStart',\n    RECONNECT_END = 'reconnectEnd',\n    UPDATE_WAYPOINTS = 'updateWaypoints';\n\n\n/**\n * Move bendpoints through drag and drop to add/remove bendpoints or reconnect connection.\n */\nexport default function BendpointMove(injector, eventBus, canvas, dragging, rules, modeling) {\n  this._injector = injector;\n\n  this.start = function(event, connection, bendpointIndex, insert) {\n    var gfx = canvas.getGraphics(connection),\n        source = connection.source,\n        target = connection.target,\n        waypoints = connection.waypoints,\n        type;\n\n    if (!insert && bendpointIndex === 0) {\n      type = RECONNECT_START;\n    } else\n    if (!insert && bendpointIndex === waypoints.length - 1) {\n      type = RECONNECT_END;\n    } else {\n      type = UPDATE_WAYPOINTS;\n    }\n\n    var command = type === UPDATE_WAYPOINTS ? 'connection.updateWaypoints' : 'connection.reconnect';\n\n    var allowed = rules.allowed(command, {\n      connection: connection,\n      source: source,\n      target: target\n    });\n\n    if (allowed === false) {\n      allowed = rules.allowed(command, {\n        connection: connection,\n        source: target,\n        target: source\n      });\n    }\n\n    if (allowed === false) {\n      return;\n    }\n\n    dragging.init(event, 'bendpoint.move', {\n      data: {\n        connection: connection,\n        connectionGfx: gfx,\n        context: {\n          allowed: allowed,\n          bendpointIndex: bendpointIndex,\n          connection: connection,\n          source: source,\n          target: target,\n          insert: insert,\n          type: type\n        }\n      }\n    });\n  };\n\n  eventBus.on('bendpoint.move.hover', function(event) {\n    var context = event.context,\n        connection = context.connection,\n        source = connection.source,\n        target = connection.target,\n        hover = event.hover,\n        type = context.type;\n\n    // cache hover state\n    context.hover = hover;\n\n    var allowed;\n\n    if (!hover) {\n      return;\n    }\n\n    var command = type === UPDATE_WAYPOINTS ? 'connection.updateWaypoints' : 'connection.reconnect';\n\n    allowed = context.allowed = rules.allowed(command, {\n      connection: connection,\n      source: type === RECONNECT_START ? hover : source,\n      target: type === RECONNECT_END ? hover : target\n    });\n\n    if (allowed) {\n      context.source = type === RECONNECT_START ? hover : source;\n      context.target = type === RECONNECT_END ? hover : target;\n\n      return;\n    }\n\n    if (allowed === false) {\n      allowed = context.allowed = rules.allowed(command, {\n        connection: connection,\n        source: type === RECONNECT_END ? hover : target,\n        target: type === RECONNECT_START ? hover : source\n      });\n    }\n\n    if (allowed) {\n      context.source = type === RECONNECT_END ? hover : target;\n      context.target = type === RECONNECT_START ? hover : source;\n    }\n  });\n\n  eventBus.on([ 'bendpoint.move.out', 'bendpoint.move.cleanup' ], function(event) {\n    var context = event.context,\n        type = context.type;\n\n    context.hover = null;\n    context.source = null;\n    context.target = null;\n\n    if (type !== UPDATE_WAYPOINTS) {\n      context.allowed = false;\n    }\n  });\n\n  eventBus.on('bendpoint.move.end', function(event) {\n    var context = event.context,\n        allowed = context.allowed,\n        bendpointIndex = context.bendpointIndex,\n        connection = context.connection,\n        insert = context.insert,\n        newWaypoints = connection.waypoints.slice(),\n        source = context.source,\n        target = context.target,\n        type = context.type,\n        hints = context.hints || {};\n\n    // ensure integer values (important if zoom level was > 1 during move)\n    var docking = {\n      x: round(event.x),\n      y: round(event.y)\n    };\n\n    if (!allowed) {\n      return false;\n    }\n\n    if (type === UPDATE_WAYPOINTS) {\n      if (insert) {\n\n        // insert new bendpoint\n        newWaypoints.splice(bendpointIndex, 0, docking);\n      } else {\n\n        // swap previous waypoint with moved one\n        newWaypoints[bendpointIndex] = docking;\n      }\n\n      // pass hints about actual moved bendpoint\n      // useful for connection/label layout\n      hints.bendpointMove = {\n        insert: insert,\n        bendpointIndex: bendpointIndex\n      };\n\n      newWaypoints = this.cropWaypoints(connection, newWaypoints);\n\n      modeling.updateWaypoints(connection, filterRedundantWaypoints(newWaypoints), hints);\n    } else {\n      if (type === RECONNECT_START) {\n        hints.docking = 'source';\n\n        if (isReverse(context)) {\n          hints.docking = 'target';\n\n          hints.newWaypoints = newWaypoints.reverse();\n        }\n      } else if (type === RECONNECT_END) {\n        hints.docking = 'target';\n\n        if (isReverse(context)) {\n          hints.docking = 'source';\n\n          hints.newWaypoints = newWaypoints.reverse();\n        }\n      }\n\n      modeling.reconnect(connection, source, target, docking, hints);\n    }\n  }, this);\n}\n\nBendpointMove.$inject = [\n  'injector',\n  'eventBus',\n  'canvas',\n  'dragging',\n  'rules',\n  'modeling'\n];\n\nBendpointMove.prototype.cropWaypoints = function(connection, newWaypoints) {\n  var connectionDocking = this._injector.get('connectionDocking', false);\n\n  if (!connectionDocking) {\n    return newWaypoints;\n  }\n\n  var waypoints = connection.waypoints;\n\n  connection.waypoints = newWaypoints;\n\n  connection.waypoints = connectionDocking.getCroppedWaypoints(connection);\n\n  newWaypoints = connection.waypoints;\n\n  connection.waypoints = waypoints;\n\n  return newWaypoints;\n};\n\n\n// helpers //////////\n\nexport function isReverse(context) {\n  var hover = context.hover,\n      source = context.source,\n      target = context.target,\n      type = context.type;\n\n  if (type === RECONNECT_START) {\n    return hover && target && hover === target && source !== target;\n  }\n\n  if (type === RECONNECT_END) {\n    return hover && source && hover === source && source !== target;\n  }\n}","import {\n  classes as svgClasses,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport { addBendpoint } from './BendpointUtil';\n\nimport { translate } from '../../util/SvgTransformUtil';\n\nimport { isReverse } from './BendpointMove';\n\nvar RECONNECT_START = 'reconnectStart',\n    RECONNECT_END = 'reconnectEnd',\n    UPDATE_WAYPOINTS = 'updateWaypoints';\n\nvar MARKER_OK = 'connect-ok',\n    MARKER_NOT_OK = 'connect-not-ok',\n    MARKER_CONNECT_HOVER = 'connect-hover',\n    MARKER_CONNECT_UPDATING = 'djs-updating',\n    MARKER_ELEMENT_HIDDEN = 'djs-element-hidden';\n\nvar HIGH_PRIORITY = 1100;\n\n/**\n * Preview connection while moving bendpoints.\n */\nexport default function BendpointMovePreview(bendpointMove, injector, eventBus, canvas) {\n  this._injector = injector;\n\n  var connectionPreview = injector.get('connectionPreview', false);\n\n  eventBus.on('bendpoint.move.start', function(event) {\n    var context = event.context,\n        bendpointIndex = context.bendpointIndex,\n        connection = context.connection,\n        insert = context.insert,\n        waypoints = connection.waypoints,\n        newWaypoints = waypoints.slice();\n\n    context.waypoints = waypoints;\n\n    if (insert) {\n\n      // insert placeholder for new bendpoint\n      newWaypoints.splice(bendpointIndex, 0, { x: event.x, y: event.y });\n    }\n\n    connection.waypoints = newWaypoints;\n\n    // add dragger gfx\n    var draggerGfx = context.draggerGfx = addBendpoint(canvas.getLayer('overlays'));\n\n    svgClasses(draggerGfx).add('djs-dragging');\n\n    canvas.addMarker(connection, MARKER_ELEMENT_HIDDEN);\n    canvas.addMarker(connection, MARKER_CONNECT_UPDATING);\n  });\n\n  eventBus.on('bendpoint.move.hover', function(event) {\n    var context = event.context,\n        allowed = context.allowed,\n        hover = context.hover,\n        type = context.type;\n\n    if (hover) {\n      canvas.addMarker(hover, MARKER_CONNECT_HOVER);\n\n      if (type === UPDATE_WAYPOINTS) {\n        return;\n      }\n\n      if (allowed) {\n        canvas.removeMarker(hover, MARKER_NOT_OK);\n        canvas.addMarker(hover, MARKER_OK);\n      } else if (allowed === false) {\n        canvas.removeMarker(hover, MARKER_OK);\n        canvas.addMarker(hover, MARKER_NOT_OK);\n      }\n    }\n  });\n\n  eventBus.on([\n    'bendpoint.move.out',\n    'bendpoint.move.cleanup'\n  ], HIGH_PRIORITY, function(event) {\n    var context = event.context,\n        hover = context.hover,\n        target = context.target;\n\n    if (hover) {\n      canvas.removeMarker(hover, MARKER_CONNECT_HOVER);\n      canvas.removeMarker(hover, target ? MARKER_OK : MARKER_NOT_OK);\n    }\n  });\n\n  eventBus.on('bendpoint.move.move', function(event) {\n    var context = event.context,\n        allowed = context.allowed,\n        bendpointIndex = context.bendpointIndex,\n        draggerGfx = context.draggerGfx,\n        hover = context.hover,\n        type = context.type,\n        connection = context.connection,\n        source = connection.source,\n        target = connection.target,\n        newWaypoints = connection.waypoints.slice(),\n        bendpoint = { x: event.x, y: event.y },\n        hints = context.hints || {},\n        drawPreviewHints = {};\n\n    if (connectionPreview) {\n      if (hints.connectionStart) {\n        drawPreviewHints.connectionStart = hints.connectionStart;\n      }\n\n      if (hints.connectionEnd) {\n        drawPreviewHints.connectionEnd = hints.connectionEnd;\n      }\n\n\n      if (type === RECONNECT_START) {\n        if (isReverse(context)) {\n          drawPreviewHints.connectionEnd = drawPreviewHints.connectionEnd || bendpoint;\n\n          drawPreviewHints.source = target;\n          drawPreviewHints.target = hover || source;\n\n          newWaypoints = newWaypoints.reverse();\n        } else {\n          drawPreviewHints.connectionStart = drawPreviewHints.connectionStart || bendpoint;\n\n          drawPreviewHints.source = hover || source;\n          drawPreviewHints.target = target;\n        }\n      } else if (type === RECONNECT_END) {\n        if (isReverse(context)) {\n          drawPreviewHints.connectionStart = drawPreviewHints.connectionStart || bendpoint;\n\n          drawPreviewHints.source = hover || target;\n          drawPreviewHints.target = source;\n\n          newWaypoints = newWaypoints.reverse();\n        } else {\n          drawPreviewHints.connectionEnd = drawPreviewHints.connectionEnd || bendpoint;\n\n          drawPreviewHints.source = source;\n          drawPreviewHints.target = hover || target;\n        }\n\n      } else {\n        drawPreviewHints.noCropping = true;\n        drawPreviewHints.noLayout = true;\n        newWaypoints[ bendpointIndex ] = bendpoint;\n      }\n\n      if (type === UPDATE_WAYPOINTS) {\n        newWaypoints = bendpointMove.cropWaypoints(connection, newWaypoints);\n      }\n\n      drawPreviewHints.waypoints = newWaypoints;\n\n      connectionPreview.drawPreview(context, allowed, drawPreviewHints);\n    }\n\n    translate(draggerGfx, event.x, event.y);\n  }, this);\n\n  eventBus.on([\n    'bendpoint.move.end',\n    'bendpoint.move.cancel'\n  ], HIGH_PRIORITY, function(event) {\n    var context = event.context,\n        connection = context.connection,\n        draggerGfx = context.draggerGfx,\n        hover = context.hover,\n        target = context.target,\n        waypoints = context.waypoints;\n\n    connection.waypoints = waypoints;\n\n    // remove dragger gfx\n    svgRemove(draggerGfx);\n\n    canvas.removeMarker(connection, MARKER_CONNECT_UPDATING);\n    canvas.removeMarker(connection, MARKER_ELEMENT_HIDDEN);\n\n    if (hover) {\n      canvas.removeMarker(hover, MARKER_OK);\n      canvas.removeMarker(hover, target ? MARKER_OK : MARKER_NOT_OK);\n    }\n\n    if (connectionPreview) {\n      connectionPreview.cleanUp(context);\n    }\n  });\n}\n\nBendpointMovePreview.$inject = [\n  'bendpointMove',\n  'injector',\n  'eventBus',\n  'canvas'\n];","import {\n  assign,\n  forEach,\n  isArray\n} from 'min-dash';\n\nimport { setSnapped } from '../snapping/SnapUtil';\n\nvar abs = Math.abs,\n    round = Math.round;\n\nvar TOLERANCE = 10;\n\n\nexport default function BendpointSnapping(eventBus) {\n\n  function snapTo(values, value) {\n\n    if (isArray(values)) {\n      var i = values.length;\n\n      while (i--) if (abs(values[i] - value) <= TOLERANCE) {\n        return values[i];\n      }\n    } else {\n      values = +values;\n      var rem = value % values;\n\n      if (rem < TOLERANCE) {\n        return value - rem;\n      }\n\n      if (rem > values - TOLERANCE) {\n        return value - rem + values;\n      }\n    }\n\n    return value;\n  }\n\n  function mid(element) {\n    if (element.width) {\n      return {\n        x: round(element.width / 2 + element.x),\n        y: round(element.height / 2 + element.y)\n      };\n    }\n  }\n\n  // connection segment snapping //////////////////////\n\n  function getConnectionSegmentSnaps(context) {\n\n    var snapPoints = context.snapPoints,\n        connection = context.connection,\n        waypoints = connection.waypoints,\n        segmentStart = context.segmentStart,\n        segmentStartIndex = context.segmentStartIndex,\n        segmentEnd = context.segmentEnd,\n        segmentEndIndex = context.segmentEndIndex,\n        axis = context.axis;\n\n    if (snapPoints) {\n      return snapPoints;\n    }\n\n    var referenceWaypoints = [\n      waypoints[segmentStartIndex - 1],\n      segmentStart,\n      segmentEnd,\n      waypoints[segmentEndIndex + 1]\n    ];\n\n    if (segmentStartIndex < 2) {\n      referenceWaypoints.unshift(mid(connection.source));\n    }\n\n    if (segmentEndIndex > waypoints.length - 3) {\n      referenceWaypoints.unshift(mid(connection.target));\n    }\n\n    context.snapPoints = snapPoints = { horizontal: [] , vertical: [] };\n\n    forEach(referenceWaypoints, function(p) {\n\n      // we snap on existing bendpoints only,\n      // not placeholders that are inserted during add\n      if (p) {\n        p = p.original || p;\n\n        if (axis === 'y') {\n          snapPoints.horizontal.push(p.y);\n        }\n\n        if (axis === 'x') {\n          snapPoints.vertical.push(p.x);\n        }\n      }\n    });\n\n    return snapPoints;\n  }\n\n  eventBus.on('connectionSegment.move.move', 1500, function(event) {\n    var context = event.context,\n        snapPoints = getConnectionSegmentSnaps(context),\n        x = event.x,\n        y = event.y,\n        sx, sy;\n\n    if (!snapPoints) {\n      return;\n    }\n\n    // snap\n    sx = snapTo(snapPoints.vertical, x);\n    sy = snapTo(snapPoints.horizontal, y);\n\n\n    // correction x/y\n    var cx = (x - sx),\n        cy = (y - sy);\n\n    // update delta\n    assign(event, {\n      dx: event.dx - cx,\n      dy: event.dy - cy,\n      x: sx,\n      y: sy\n    });\n\n    // only set snapped if actually snapped\n    if (cx || snapPoints.vertical.indexOf(x) !== -1) {\n      setSnapped(event, 'x', sx);\n    }\n\n    if (cy || snapPoints.horizontal.indexOf(y) !== -1) {\n      setSnapped(event, 'y', sy);\n    }\n  });\n\n\n  // bendpoint snapping //////////////////////\n\n  function getBendpointSnaps(context) {\n\n    var snapPoints = context.snapPoints,\n        waypoints = context.connection.waypoints,\n        bendpointIndex = context.bendpointIndex;\n\n    if (snapPoints) {\n      return snapPoints;\n    }\n\n    var referenceWaypoints = [ waypoints[bendpointIndex - 1], waypoints[bendpointIndex + 1] ];\n\n    context.snapPoints = snapPoints = { horizontal: [] , vertical: [] };\n\n    forEach(referenceWaypoints, function(p) {\n\n      // we snap on existing bendpoints only,\n      // not placeholders that are inserted during add\n      if (p) {\n        p = p.original || p;\n\n        snapPoints.horizontal.push(p.y);\n        snapPoints.vertical.push(p.x);\n      }\n    });\n\n    return snapPoints;\n  }\n\n\n  eventBus.on([ 'bendpoint.move.move', 'bendpoint.move.end' ], 1500, function(event) {\n\n    var context = event.context,\n        snapPoints = getBendpointSnaps(context),\n        hover = context.hover,\n        hoverMid = hover && mid(hover),\n        x = event.x,\n        y = event.y,\n        sx, sy;\n\n    if (!snapPoints) {\n      return;\n    }\n\n    // snap to hover mid\n    sx = snapTo(hoverMid ? snapPoints.vertical.concat([ hoverMid.x ]) : snapPoints.vertical, x);\n    sy = snapTo(hoverMid ? snapPoints.horizontal.concat([ hoverMid.y ]) : snapPoints.horizontal, y);\n\n    // correction x/y\n    var cx = (x - sx),\n        cy = (y - sy);\n\n    // update delta\n    assign(event, {\n      dx: event.dx - cx,\n      dy: event.dy - cy,\n      x: event.x - cx,\n      y: event.y - cy\n    });\n\n    // only set snapped if actually snapped\n    if (cx || snapPoints.vertical.indexOf(x) !== -1) {\n      setSnapped(event, 'x', sx);\n    }\n\n    if (cy || snapPoints.horizontal.indexOf(y) !== -1) {\n      setSnapped(event, 'y', sy);\n    }\n  });\n}\n\n\nBendpointSnapping.$inject = [ 'eventBus' ];","import {\n  toPoint\n} from '../../util/Event';\n\nimport {\n  getMidPoint,\n  pointsAligned\n} from '../../util/Geometry';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport {\n  rotate,\n  translate\n} from '../../util/SvgTransformUtil';\n\nimport {\n  getApproxIntersection\n} from '../../util/LineIntersection';\n\nexport var BENDPOINT_CLS = 'djs-bendpoint';\nexport var SEGMENT_DRAGGER_CLS = 'djs-segment-dragger';\n\nexport function toCanvasCoordinates(canvas, event) {\n\n  var position = toPoint(event),\n      clientRect = canvas._container.getBoundingClientRect(),\n      offset;\n\n  // canvas relative position\n\n  offset = {\n    x: clientRect.left,\n    y: clientRect.top\n  };\n\n  // update actual event payload with canvas relative measures\n\n  var viewbox = canvas.viewbox();\n\n  return {\n    x: viewbox.x + (position.x - offset.x) / viewbox.scale,\n    y: viewbox.y + (position.y - offset.y) / viewbox.scale\n  };\n}\n\nexport function getConnectionIntersection(canvas, waypoints, event) {\n  var localPosition = toCanvasCoordinates(canvas, event),\n      intersection = getApproxIntersection(waypoints, localPosition);\n\n  return intersection;\n}\n\nexport function addBendpoint(parentGfx, cls) {\n  var groupGfx = svgCreate('g');\n  svgClasses(groupGfx).add(BENDPOINT_CLS);\n\n  svgAppend(parentGfx, groupGfx);\n\n  var visual = svgCreate('circle');\n  svgAttr(visual, {\n    cx: 0,\n    cy: 0,\n    r: 4\n  });\n  svgClasses(visual).add('djs-visual');\n\n  svgAppend(groupGfx, visual);\n\n  var hit = svgCreate('circle');\n  svgAttr(hit, {\n    cx: 0,\n    cy: 0,\n    r: 10\n  });\n  svgClasses(hit).add('djs-hit');\n\n  svgAppend(groupGfx, hit);\n\n  if (cls) {\n    svgClasses(groupGfx).add(cls);\n  }\n\n  return groupGfx;\n}\n\nfunction createParallelDragger(parentGfx, segmentStart, segmentEnd, alignment) {\n  var draggerGfx = svgCreate('g');\n\n  svgAppend(parentGfx, draggerGfx);\n\n  var width = 14,\n      height = 3,\n      padding = 11,\n      hitWidth = calculateHitWidth(segmentStart, segmentEnd, alignment),\n      hitHeight = height + padding;\n\n  var visual = svgCreate('rect');\n  svgAttr(visual, {\n    x: -width / 2,\n    y: -height / 2,\n    width: width,\n    height: height\n  });\n  svgClasses(visual).add('djs-visual');\n\n  svgAppend(draggerGfx, visual);\n\n  var hit = svgCreate('rect');\n  svgAttr(hit, {\n    x: -hitWidth / 2,\n    y: -hitHeight / 2,\n    width: hitWidth,\n    height: hitHeight\n  });\n  svgClasses(hit).add('djs-hit');\n\n  svgAppend(draggerGfx, hit);\n\n  rotate(draggerGfx, alignment === 'v' ? 90 : 0, 0, 0);\n\n  return draggerGfx;\n}\n\n\nexport function addSegmentDragger(parentGfx, segmentStart, segmentEnd) {\n\n  var groupGfx = svgCreate('g'),\n      mid = getMidPoint(segmentStart, segmentEnd),\n      alignment = pointsAligned(segmentStart, segmentEnd);\n\n  svgAppend(parentGfx, groupGfx);\n\n  createParallelDragger(groupGfx, segmentStart, segmentEnd, alignment);\n\n  svgClasses(groupGfx).add(SEGMENT_DRAGGER_CLS);\n  svgClasses(groupGfx).add(alignment === 'h' ? 'horizontal' : 'vertical');\n\n  translate(groupGfx, mid.x, mid.y);\n\n  return groupGfx;\n}\n\n/**\n * Calculates region for segment move which is 2/3 of the full segment length\n * @param {number} segmentLength\n *\n * @return {number}\n */\nexport function calculateSegmentMoveRegion(segmentLength) {\n  return Math.abs(Math.round(segmentLength * 2 / 3));\n}\n\n// helper //////////\n\nfunction calculateHitWidth(segmentStart, segmentEnd, alignment) {\n  var segmentLengthXAxis = segmentEnd.x - segmentStart.x,\n      segmentLengthYAxis = segmentEnd.y - segmentStart.y;\n\n  return alignment === 'h' ?\n    calculateSegmentMoveRegion(segmentLengthXAxis) :\n    calculateSegmentMoveRegion(segmentLengthYAxis);\n}\n","import { forEach } from 'min-dash';\n\nimport {\n  event as domEvent,\n  query as domQuery,\n  queryAll as domQueryAll\n} from 'min-dom';\n\nimport {\n  BENDPOINT_CLS,\n  SEGMENT_DRAGGER_CLS,\n  addBendpoint,\n  addSegmentDragger,\n  calculateSegmentMoveRegion,\n  getConnectionIntersection\n} from './BendpointUtil';\n\nimport {\n  escapeCSS\n} from '../../util/EscapeUtil';\n\nimport {\n  pointsAligned,\n  getMidPoint\n} from '../../util/Geometry';\n\nimport {\n  isPrimaryButton\n} from '../../util/Mouse';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  translate\n} from '../../util/SvgTransformUtil';\n\n\n/**\n * A service that adds editable bendpoints to connections.\n */\nexport default function Bendpoints(\n    eventBus, canvas, interactionEvents,\n    bendpointMove, connectionSegmentMove) {\n\n  /**\n   * Returns true if intersection point is inside middle region of segment, adjusted by\n   * optional threshold\n   */\n  function isIntersectionMiddle(intersection, waypoints, treshold) {\n    var idx = intersection.index,\n        p = intersection.point,\n        p0, p1, mid, aligned, xDelta, yDelta;\n\n    if (idx <= 0 || intersection.bendpoint) {\n      return false;\n    }\n\n    p0 = waypoints[idx - 1];\n    p1 = waypoints[idx];\n    mid = getMidPoint(p0, p1),\n    aligned = pointsAligned(p0, p1);\n    xDelta = Math.abs(p.x - mid.x);\n    yDelta = Math.abs(p.y - mid.y);\n\n    return aligned && xDelta <= treshold && yDelta <= treshold;\n  }\n\n  /**\n   * Calculates the threshold from a connection's middle which fits the two-third-region\n   */\n  function calculateIntersectionThreshold(connection, intersection) {\n    var waypoints = connection.waypoints,\n        relevantSegment, alignment, segmentLength, threshold;\n\n    if (intersection.index <= 0 || intersection.bendpoint) {\n      return null;\n    }\n\n    // segment relative to connection intersection\n    relevantSegment = {\n      start: waypoints[intersection.index - 1],\n      end: waypoints[intersection.index]\n    };\n\n    alignment = pointsAligned(relevantSegment.start, relevantSegment.end);\n\n    if (!alignment) {\n      return null;\n    }\n\n    if (alignment === 'h') {\n      segmentLength = relevantSegment.end.x - relevantSegment.start.x;\n    } else {\n      segmentLength = relevantSegment.end.y - relevantSegment.start.y;\n    }\n\n    // calculate threshold relative to 2/3 of segment length\n    threshold = calculateSegmentMoveRegion(segmentLength) / 2;\n\n    return threshold;\n  }\n\n  function activateBendpointMove(event, connection) {\n    var waypoints = connection.waypoints,\n        intersection = getConnectionIntersection(canvas, waypoints, event),\n        threshold;\n\n    if (!intersection) {\n      return;\n    }\n\n    threshold = calculateIntersectionThreshold(connection, intersection);\n\n    if (isIntersectionMiddle(intersection, waypoints, threshold)) {\n      connectionSegmentMove.start(event, connection, intersection.index);\n    } else {\n      bendpointMove.start(event, connection, intersection.index, !intersection.bendpoint);\n    }\n\n    // we've handled the event\n    return true;\n  }\n\n  function bindInteractionEvents(node, eventName, element) {\n\n    domEvent.bind(node, eventName, function(event) {\n      interactionEvents.triggerMouseEvent(eventName, event, element);\n      event.stopPropagation();\n    });\n  }\n\n  function getBendpointsContainer(element, create) {\n\n    var layer = canvas.getLayer('overlays'),\n        gfx = domQuery('.djs-bendpoints[data-element-id=\"' + escapeCSS(element.id) + '\"]', layer);\n\n    if (!gfx && create) {\n      gfx = svgCreate('g');\n      svgAttr(gfx, { 'data-element-id': element.id });\n      svgClasses(gfx).add('djs-bendpoints');\n\n      svgAppend(layer, gfx);\n\n      bindInteractionEvents(gfx, 'mousedown', element);\n      bindInteractionEvents(gfx, 'click', element);\n      bindInteractionEvents(gfx, 'dblclick', element);\n    }\n\n    return gfx;\n  }\n\n  function getSegmentDragger(idx, parentGfx) {\n    return domQuery(\n      '.djs-segment-dragger[data-segment-idx=\"' + idx + '\"]',\n      parentGfx\n    );\n  }\n\n  function createBendpoints(gfx, connection) {\n    connection.waypoints.forEach(function(p, idx) {\n      var bendpoint = addBendpoint(gfx);\n\n      svgAppend(gfx, bendpoint);\n\n      translate(bendpoint, p.x, p.y);\n    });\n\n    // add floating bendpoint\n    addBendpoint(gfx, 'floating');\n  }\n\n  function createSegmentDraggers(gfx, connection) {\n\n    var waypoints = connection.waypoints;\n\n    var segmentStart,\n        segmentEnd,\n        segmentDraggerGfx;\n\n    for (var i = 1; i < waypoints.length; i++) {\n\n      segmentStart = waypoints[i - 1];\n      segmentEnd = waypoints[i];\n\n      if (pointsAligned(segmentStart, segmentEnd)) {\n        segmentDraggerGfx = addSegmentDragger(gfx, segmentStart, segmentEnd);\n\n        svgAttr(segmentDraggerGfx, { 'data-segment-idx': i });\n\n        bindInteractionEvents(segmentDraggerGfx, 'mousemove', connection);\n      }\n    }\n  }\n\n  function clearBendpoints(gfx) {\n    forEach(domQueryAll('.' + BENDPOINT_CLS, gfx), function(node) {\n      svgRemove(node);\n    });\n  }\n\n  function clearSegmentDraggers(gfx) {\n    forEach(domQueryAll('.' + SEGMENT_DRAGGER_CLS, gfx), function(node) {\n      svgRemove(node);\n    });\n  }\n\n  function addHandles(connection) {\n\n    var gfx = getBendpointsContainer(connection);\n\n    if (!gfx) {\n      gfx = getBendpointsContainer(connection, true);\n\n      createBendpoints(gfx, connection);\n      createSegmentDraggers(gfx, connection);\n    }\n\n    return gfx;\n  }\n\n  function updateHandles(connection) {\n\n    var gfx = getBendpointsContainer(connection);\n\n    if (gfx) {\n      clearSegmentDraggers(gfx);\n      clearBendpoints(gfx);\n      createSegmentDraggers(gfx, connection);\n      createBendpoints(gfx, connection);\n    }\n  }\n\n  function updateFloatingBendpointPosition(parentGfx, intersection) {\n    var floating = domQuery('.floating', parentGfx),\n        point = intersection.point;\n\n    if (!floating) {\n      return;\n    }\n\n    translate(floating, point.x, point.y);\n\n  }\n\n  function updateSegmentDraggerPosition(parentGfx, intersection, waypoints) {\n\n    var draggerGfx = getSegmentDragger(intersection.index, parentGfx),\n        segmentStart = waypoints[intersection.index - 1],\n        segmentEnd = waypoints[intersection.index],\n        point = intersection.point,\n        mid = getMidPoint(segmentStart, segmentEnd),\n        alignment = pointsAligned(segmentStart, segmentEnd),\n        draggerVisual, relativePosition;\n\n    if (!draggerGfx) {\n      return;\n    }\n\n    draggerVisual = getDraggerVisual(draggerGfx);\n\n    relativePosition = {\n      x: point.x - mid.x,\n      y: point.y - mid.y\n    };\n\n    if (alignment === 'v') {\n\n      // rotate position\n      relativePosition = {\n        x: relativePosition.y,\n        y: relativePosition.x\n      };\n    }\n\n    translate(draggerVisual, relativePosition.x, relativePosition.y);\n  }\n\n  eventBus.on('connection.changed', function(event) {\n    updateHandles(event.element);\n  });\n\n  eventBus.on('connection.remove', function(event) {\n    var gfx = getBendpointsContainer(event.element);\n\n    if (gfx) {\n      svgRemove(gfx);\n    }\n  });\n\n  eventBus.on('element.marker.update', function(event) {\n\n    var element = event.element,\n        bendpointsGfx;\n\n    if (!element.waypoints) {\n      return;\n    }\n\n    bendpointsGfx = addHandles(element);\n\n    if (event.add) {\n      svgClasses(bendpointsGfx).add(event.marker);\n    } else {\n      svgClasses(bendpointsGfx).remove(event.marker);\n    }\n  });\n\n  eventBus.on('element.mousemove', function(event) {\n\n    var element = event.element,\n        waypoints = element.waypoints,\n        bendpointsGfx,\n        intersection;\n\n    if (waypoints) {\n      bendpointsGfx = getBendpointsContainer(element, true);\n\n      intersection = getConnectionIntersection(canvas, waypoints, event.originalEvent);\n\n      if (!intersection) {\n        return;\n      }\n\n      updateFloatingBendpointPosition(bendpointsGfx, intersection);\n\n      if (!intersection.bendpoint) {\n        updateSegmentDraggerPosition(bendpointsGfx, intersection, waypoints);\n      }\n\n    }\n  });\n\n  eventBus.on('element.mousedown', function(event) {\n\n    if (!isPrimaryButton(event)) {\n      return;\n    }\n\n    var originalEvent = event.originalEvent,\n        element = event.element;\n\n    if (!element.waypoints) {\n      return;\n    }\n\n    return activateBendpointMove(originalEvent, element);\n  });\n\n  eventBus.on('selection.changed', function(event) {\n    var newSelection = event.newSelection,\n        primary = newSelection[0];\n\n    if (primary && primary.waypoints) {\n      addHandles(primary);\n    }\n  });\n\n  eventBus.on('element.hover', function(event) {\n    var element = event.element;\n\n    if (element.waypoints) {\n      addHandles(element);\n      interactionEvents.registerEvent(event.gfx, 'mousemove', 'element.mousemove');\n    }\n  });\n\n  eventBus.on('element.out', function(event) {\n    interactionEvents.unregisterEvent(event.gfx, 'mousemove', 'element.mousemove');\n  });\n\n  // update bendpoint container data attribute on element ID change\n  eventBus.on('element.updateId', function(context) {\n    var element = context.element,\n        newId = context.newId;\n\n    if (element.waypoints) {\n      var bendpointContainer = getBendpointsContainer(element);\n\n      if (bendpointContainer) {\n        svgAttr(bendpointContainer, { 'data-element-id': newId });\n      }\n    }\n  });\n\n  // API\n\n  this.addHandles = addHandles;\n  this.updateHandles = updateHandles;\n  this.getBendpointsContainer = getBendpointsContainer;\n  this.getSegmentDragger = getSegmentDragger;\n}\n\nBendpoints.$inject = [\n  'eventBus',\n  'canvas',\n  'interactionEvents',\n  'bendpointMove',\n  'connectionSegmentMove'\n];\n\n\n\n// helper /////////////\n\nfunction getDraggerVisual(draggerGfx) {\n  return domQuery('.djs-visual', draggerGfx);\n}","import {\n  pointsAligned,\n  pointsOnLine\n} from '../../util/Geometry';\n\nimport {\n  addSegmentDragger,\n  getConnectionIntersection\n} from './BendpointUtil';\n\nimport {\n  getMid,\n  getOrientation\n} from '../../layout/LayoutUtil';\n\nvar MARKER_CONNECT_HOVER = 'connect-hover',\n    MARKER_CONNECT_UPDATING = 'djs-updating';\n\nimport {\n  classes as svgClasses,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  translate\n} from '../../util/SvgTransformUtil';\n\n\nfunction axisAdd(point, axis, delta) {\n  return axisSet(point, axis, point[axis] + delta);\n}\n\nfunction axisSet(point, axis, value) {\n  return {\n    x: (axis === 'x' ? value : point.x),\n    y: (axis === 'y' ? value : point.y)\n  };\n}\n\nfunction axisFenced(position, segmentStart, segmentEnd, axis) {\n\n  var maxValue = Math.max(segmentStart[axis], segmentEnd[axis]),\n      minValue = Math.min(segmentStart[axis], segmentEnd[axis]);\n\n  var padding = 20;\n\n  var fencedValue = Math.min(Math.max(minValue + padding, position[axis]), maxValue - padding);\n\n  return axisSet(segmentStart, axis, fencedValue);\n}\n\nfunction flipAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Get the docking point on the given element.\n *\n * Compute a reasonable docking, if non exists.\n *\n * @param  {Point} point\n * @param  {djs.model.Shape} referenceElement\n * @param  {string} moveAxis (x|y)\n *\n * @return {Point}\n */\nfunction getDocking(point, referenceElement, moveAxis) {\n\n  var referenceMid,\n      inverseAxis;\n\n  if (point.original) {\n    return point.original;\n  } else {\n    referenceMid = getMid(referenceElement);\n    inverseAxis = flipAxis(moveAxis);\n\n    return axisSet(point, inverseAxis, referenceMid[inverseAxis]);\n  }\n}\n\n/**\n * A component that implements moving of bendpoints\n */\nexport default function ConnectionSegmentMove(\n    injector, eventBus, canvas,\n    dragging, graphicsFactory, modeling) {\n\n  // optional connection docking integration\n  var connectionDocking = injector.get('connectionDocking', false);\n\n\n  // API\n\n  this.start = function(event, connection, idx) {\n\n    var context,\n        gfx = canvas.getGraphics(connection),\n        segmentStartIndex = idx - 1,\n        segmentEndIndex = idx,\n        waypoints = connection.waypoints,\n        segmentStart = waypoints[segmentStartIndex],\n        segmentEnd = waypoints[segmentEndIndex],\n        intersection = getConnectionIntersection(canvas, waypoints, event),\n        direction, axis, dragPosition;\n\n    direction = pointsAligned(segmentStart, segmentEnd);\n\n    // do not move diagonal connection\n    if (!direction) {\n      return;\n    }\n\n    // the axis where we are going to move things\n    axis = direction === 'v' ? 'x' : 'y';\n\n    if (segmentStartIndex === 0) {\n      segmentStart = getDocking(segmentStart, connection.source, axis);\n    }\n\n    if (segmentEndIndex === waypoints.length - 1) {\n      segmentEnd = getDocking(segmentEnd, connection.target, axis);\n    }\n\n    if (intersection) {\n      dragPosition = intersection.point;\n    } else {\n\n      // set to segment center as default\n      dragPosition = {\n        x: (segmentStart.x + segmentEnd.x) / 2,\n        y: (segmentStart.y + segmentEnd.y) / 2\n      };\n    }\n\n    context = {\n      connection: connection,\n      segmentStartIndex: segmentStartIndex,\n      segmentEndIndex: segmentEndIndex,\n      segmentStart: segmentStart,\n      segmentEnd: segmentEnd,\n      axis: axis,\n      dragPosition: dragPosition\n    };\n\n    dragging.init(event, dragPosition, 'connectionSegment.move', {\n      cursor: axis === 'x' ? 'resize-ew' : 'resize-ns',\n      data: {\n        connection: connection,\n        connectionGfx: gfx,\n        context: context\n      }\n    });\n  };\n\n  /**\n   * Crop connection if connection cropping is provided.\n   *\n   * @param {Connection} connection\n   * @param {Array<Point>} newWaypoints\n   *\n   * @return {Array<Point>} cropped connection waypoints\n   */\n  function cropConnection(connection, newWaypoints) {\n\n    // crop connection, if docking service is provided only\n    if (!connectionDocking) {\n      return newWaypoints;\n    }\n\n    var oldWaypoints = connection.waypoints,\n        croppedWaypoints;\n\n    // temporary set new waypoints\n    connection.waypoints = newWaypoints;\n\n    croppedWaypoints = connectionDocking.getCroppedWaypoints(connection);\n\n    // restore old waypoints\n    connection.waypoints = oldWaypoints;\n\n    return croppedWaypoints;\n  }\n\n  // DRAGGING IMPLEMENTATION\n\n  function redrawConnection(data) {\n    graphicsFactory.update('connection', data.connection, data.connectionGfx);\n  }\n\n  function updateDragger(context, segmentOffset, event) {\n\n    var newWaypoints = context.newWaypoints,\n        segmentStartIndex = context.segmentStartIndex + segmentOffset,\n        segmentStart = newWaypoints[segmentStartIndex],\n        segmentEndIndex = context.segmentEndIndex + segmentOffset,\n        segmentEnd = newWaypoints[segmentEndIndex],\n        axis = flipAxis(context.axis);\n\n    // make sure the dragger does not move\n    // outside the connection\n    var draggerPosition = axisFenced(event, segmentStart, segmentEnd, axis);\n\n    // update dragger\n    translate(context.draggerGfx, draggerPosition.x, draggerPosition.y);\n  }\n\n  /**\n   * Filter waypoints for redundant ones (i.e. on the same axis).\n   * Returns the filtered waypoints and the offset related to the segment move.\n   *\n   * @param {Array<Point>} waypoints\n   * @param {Integer} segmentStartIndex of moved segment start\n   *\n   * @return {Object} { filteredWaypoints, segmentOffset }\n   */\n  function filterRedundantWaypoints(waypoints, segmentStartIndex) {\n\n    var segmentOffset = 0;\n\n    var filteredWaypoints = waypoints.filter(function(r, idx) {\n      if (pointsOnLine(waypoints[idx - 1], waypoints[idx + 1], r)) {\n\n        // remove point and increment offset\n        segmentOffset = idx <= segmentStartIndex ? segmentOffset - 1 : segmentOffset;\n        return false;\n      }\n\n      // dont remove point\n      return true;\n    });\n\n    return {\n      waypoints: filteredWaypoints,\n      segmentOffset: segmentOffset\n    };\n  }\n\n  eventBus.on('connectionSegment.move.start', function(event) {\n\n    var context = event.context,\n        connection = event.connection,\n        layer = canvas.getLayer('overlays');\n\n    context.originalWaypoints = connection.waypoints.slice();\n\n    // add dragger gfx\n    context.draggerGfx = addSegmentDragger(layer, context.segmentStart, context.segmentEnd);\n    svgClasses(context.draggerGfx).add('djs-dragging');\n\n    canvas.addMarker(connection, MARKER_CONNECT_UPDATING);\n  });\n\n  eventBus.on('connectionSegment.move.move', function(event) {\n\n    var context = event.context,\n        connection = context.connection,\n        segmentStartIndex = context.segmentStartIndex,\n        segmentEndIndex = context.segmentEndIndex,\n        segmentStart = context.segmentStart,\n        segmentEnd = context.segmentEnd,\n        axis = context.axis;\n\n    var newWaypoints = context.originalWaypoints.slice(),\n        newSegmentStart = axisAdd(segmentStart, axis, event['d' + axis]),\n        newSegmentEnd = axisAdd(segmentEnd, axis, event['d' + axis]);\n\n    // original waypoint count and added / removed\n    // from start waypoint delta. We use the later\n    // to retrieve the updated segmentStartIndex / segmentEndIndex\n    var waypointCount = newWaypoints.length,\n        segmentOffset = 0;\n\n    // move segment start / end by axis delta\n    newWaypoints[segmentStartIndex] = newSegmentStart;\n    newWaypoints[segmentEndIndex] = newSegmentEnd;\n\n    var sourceToSegmentOrientation,\n        targetToSegmentOrientation;\n\n    // handle first segment\n    if (segmentStartIndex < 2) {\n      sourceToSegmentOrientation = getOrientation(connection.source, newSegmentStart);\n\n      // first bendpoint, remove first segment if intersecting\n      if (segmentStartIndex === 1) {\n\n        if (sourceToSegmentOrientation === 'intersect') {\n          newWaypoints.shift();\n          newWaypoints[0] = newSegmentStart;\n          segmentOffset--;\n        }\n      }\n\n      // docking point, add segment if not intersecting anymore\n      else {\n        if (sourceToSegmentOrientation !== 'intersect') {\n          newWaypoints.unshift(segmentStart);\n          segmentOffset++;\n        }\n      }\n    }\n\n    // handle last segment\n    if (segmentEndIndex > waypointCount - 3) {\n      targetToSegmentOrientation = getOrientation(connection.target, newSegmentEnd);\n\n      // last bendpoint, remove last segment if intersecting\n      if (segmentEndIndex === waypointCount - 2) {\n\n        if (targetToSegmentOrientation === 'intersect') {\n          newWaypoints.pop();\n          newWaypoints[newWaypoints.length - 1] = newSegmentEnd;\n        }\n      }\n\n      // last bendpoint, remove last segment if intersecting\n      else {\n        if (targetToSegmentOrientation !== 'intersect') {\n          newWaypoints.push(segmentEnd);\n        }\n      }\n    }\n\n    // update connection waypoints\n    context.newWaypoints = connection.waypoints = cropConnection(connection, newWaypoints);\n\n    // update dragger position\n    updateDragger(context, segmentOffset, event);\n\n    // save segmentOffset in context\n    context.newSegmentStartIndex = segmentStartIndex + segmentOffset;\n\n    // redraw connection\n    redrawConnection(event);\n  });\n\n  eventBus.on('connectionSegment.move.hover', function(event) {\n\n    event.context.hover = event.hover;\n    canvas.addMarker(event.hover, MARKER_CONNECT_HOVER);\n  });\n\n  eventBus.on([\n    'connectionSegment.move.out',\n    'connectionSegment.move.cleanup'\n  ], function(event) {\n\n    // remove connect marker\n    // if it was added\n    var hover = event.context.hover;\n\n    if (hover) {\n      canvas.removeMarker(hover, MARKER_CONNECT_HOVER);\n    }\n  });\n\n  eventBus.on('connectionSegment.move.cleanup', function(event) {\n\n    var context = event.context,\n        connection = context.connection;\n\n    // remove dragger gfx\n    if (context.draggerGfx) {\n      svgRemove(context.draggerGfx);\n    }\n\n    canvas.removeMarker(connection, MARKER_CONNECT_UPDATING);\n  });\n\n  eventBus.on([\n    'connectionSegment.move.cancel',\n    'connectionSegment.move.end'\n  ], function(event) {\n    var context = event.context,\n        connection = context.connection;\n\n    connection.waypoints = context.originalWaypoints;\n\n    redrawConnection(event);\n  });\n\n  eventBus.on('connectionSegment.move.end', function(event) {\n\n    var context = event.context,\n        connection = context.connection,\n        newWaypoints = context.newWaypoints,\n        newSegmentStartIndex = context.newSegmentStartIndex;\n\n    // ensure we have actual pixel values bendpoint\n    // coordinates (important when zoom level was > 1 during move)\n    newWaypoints = newWaypoints.map(function(p) {\n      return {\n        original: p.original,\n        x: Math.round(p.x),\n        y: Math.round(p.y)\n      };\n    });\n\n    // apply filter redunant waypoints\n    var filtered = filterRedundantWaypoints(newWaypoints, newSegmentStartIndex);\n\n    // get filtered waypoints\n    var filteredWaypoints = filtered.waypoints,\n        croppedWaypoints = cropConnection(connection, filteredWaypoints),\n        segmentOffset = filtered.segmentOffset;\n\n    var hints = {\n      segmentMove: {\n        segmentStartIndex: context.segmentStartIndex,\n        newSegmentStartIndex: newSegmentStartIndex + segmentOffset\n      }\n    };\n\n    modeling.updateWaypoints(connection, croppedWaypoints, hints);\n  });\n}\n\nConnectionSegmentMove.$inject = [\n  'injector',\n  'eventBus',\n  'canvas',\n  'dragging',\n  'graphicsFactory',\n  'modeling'\n];\n","import DraggingModule from '../dragging';\nimport RulesModule from '../rules';\n\nimport Bendpoints from './Bendpoints';\nimport BendpointMove from './BendpointMove';\nimport BendpointMovePreview from './BendpointMovePreview';\nimport ConnectionSegmentMove from './ConnectionSegmentMove';\nimport BendpointSnapping from './BendpointSnapping';\n\n\nexport default {\n  __depends__: [\n    DraggingModule,\n    RulesModule\n  ],\n  __init__: [ 'bendpoints', 'bendpointSnapping', 'bendpointMovePreview' ],\n  bendpoints: [ 'type', Bendpoints ],\n  bendpointMove: [ 'type', BendpointMove ],\n  bendpointMovePreview: [ 'type', BendpointMovePreview ],\n  connectionSegmentMove: [ 'type', ConnectionSegmentMove ],\n  bendpointSnapping: [ 'type', BendpointSnapping ]\n};\n","import {\n  getType as getElementType\n} from '../../util/Elements';\n\n/**\n * Adds change support to the diagram, including\n *\n * <ul>\n *   <li>redrawing shapes and connections on change</li>\n * </ul>\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n * @param {GraphicsFactory} graphicsFactory\n */\nexport default function ChangeSupport(\n    eventBus, canvas, elementRegistry,\n    graphicsFactory) {\n\n\n  // redraw shapes / connections on change\n\n  eventBus.on('element.changed', function(event) {\n\n    var element = event.element;\n\n    // element might have been deleted and replaced by new element with same ID\n    // thus check for parent of element except for root element\n    if (element.parent || element === canvas.getRootElement()) {\n      event.gfx = elementRegistry.getGraphics(element);\n    }\n\n    // shape + gfx may have been deleted\n    if (!event.gfx) {\n      return;\n    }\n\n    eventBus.fire(getElementType(element) + '.changed', event);\n  });\n\n  eventBus.on('elements.changed', function(event) {\n\n    var elements = event.elements;\n\n    elements.forEach(function(e) {\n      eventBus.fire('element.changed', { element: e });\n    });\n\n    graphicsFactory.updateContainments(elements);\n  });\n\n  eventBus.on('shape.changed', function(event) {\n    graphicsFactory.update('shape', event.element, event.gfx);\n  });\n\n  eventBus.on('connection.changed', function(event) {\n    graphicsFactory.update('connection', event.element, event.gfx);\n  });\n}\n\nChangeSupport.$inject = [\n  'eventBus',\n  'canvas',\n  'elementRegistry',\n  'graphicsFactory'\n];","import ChangeSupport from './ChangeSupport';\n\nexport default {\n  __init__: [ 'changeSupport' ],\n  changeSupport: [ 'type', ChangeSupport ]\n};","/**\n * A clip board stub\n */\nexport default function Clipboard() {}\n\n\nClipboard.prototype.get = function() {\n  return this._data;\n};\n\nClipboard.prototype.set = function(data) {\n  this._data = data;\n};\n\nClipboard.prototype.clear = function() {\n  var data = this._data;\n\n  delete this._data;\n\n  return data;\n};\n\nClipboard.prototype.isEmpty = function() {\n  return !this._data;\n};","import Clipboard from './Clipboard';\n\nexport default {\n  clipboard: [ 'type', Clipboard ]\n};\n","import {\n  getMid\n} from '../../layout/LayoutUtil';\n\nimport {\n  isNil,\n  isObject\n} from 'min-dash';\n\n\nexport default function Connect(eventBus, dragging, modeling, rules) {\n\n  // rules\n\n  function canConnect(source, target) {\n    return rules.allowed('connection.create', {\n      source: source,\n      target: target\n    });\n  }\n\n  function canConnectReverse(source, target) {\n    return canConnect(target, source);\n  }\n\n\n  // event handlers\n\n  eventBus.on('connect.hover', function(event) {\n    var context = event.context,\n        start = context.start,\n        hover = event.hover,\n        canExecute;\n\n    // cache hover state\n    context.hover = hover;\n\n    canExecute = context.canExecute = canConnect(start, hover);\n\n    // ignore hover\n    if (isNil(canExecute)) {\n      return;\n    }\n\n    if (canExecute !== false) {\n      context.source = start;\n      context.target = hover;\n\n      return;\n    }\n\n    canExecute = context.canExecute = canConnectReverse(start, hover);\n\n    // ignore hover\n    if (isNil(canExecute)) {\n      return;\n    }\n\n    if (canExecute !== false) {\n      context.source = hover;\n      context.target = start;\n    }\n  });\n\n  eventBus.on([ 'connect.out', 'connect.cleanup' ], function(event) {\n    var context = event.context;\n\n    context.hover = null;\n    context.source = null;\n    context.target = null;\n\n    context.canExecute = false;\n  });\n\n  eventBus.on('connect.end', function(event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        connectionStart = context.connectionStart,\n        connectionEnd = {\n          x: event.x,\n          y: event.y\n        },\n        source = context.source,\n        target = context.target;\n\n    if (!canExecute) {\n      return false;\n    }\n\n    var attrs = null,\n        hints = {\n          connectionStart: isReverse(context) ? connectionEnd : connectionStart,\n          connectionEnd: isReverse(context) ? connectionStart : connectionEnd\n        };\n\n    if (isObject(canExecute)) {\n      attrs = canExecute;\n    }\n\n    modeling.connect(source, target, attrs, hints);\n  });\n\n\n  // API\n\n  /**\n   * Start connect operation.\n   *\n   * @param {DOMEvent} event\n   * @param {djs.model.Base} start\n   * @param {Point} [connectionStart]\n   * @param {boolean} [autoActivate=false]\n   */\n  this.start = function(event, start, connectionStart, autoActivate) {\n    if (!isObject(connectionStart)) {\n      autoActivate = connectionStart;\n      connectionStart = getMid(start);\n    }\n\n    dragging.init(event, 'connect', {\n      autoActivate: autoActivate,\n      data: {\n        shape: start,\n        context: {\n          start: start,\n          connectionStart: connectionStart\n        }\n      }\n    });\n  };\n}\n\nConnect.$inject = [\n  'eventBus',\n  'dragging',\n  'modeling',\n  'rules'\n];\n\n\n// helpers //////////\n\nexport function isReverse(context) {\n  var hover = context.hover,\n      source = context.source,\n      target = context.target;\n\n  return hover && source && hover === source && source !== target;\n}","import { isReverse } from './Connect';\n\nvar HIGH_PRIORITY = 1100,\n    LOW_PRIORITY = 900;\n\nvar MARKER_OK = 'connect-ok',\n    MARKER_NOT_OK = 'connect-not-ok';\n\n/**\n * Shows connection preview during connect.\n *\n * @param {didi.Injector} injector\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function ConnectPreview(injector, eventBus, canvas) {\n  var connectionPreview = injector.get('connectionPreview', false);\n\n  connectionPreview && eventBus.on('connect.move', function(event) {\n    var context = event.context,\n        canConnect = context.canExecute,\n        hover = context.hover,\n        source = context.source,\n        start = context.start,\n        startPosition = context.startPosition,\n        target = context.target,\n        connectionStart = context.connectionStart || startPosition,\n        connectionEnd = context.connectionEnd || {\n          x: event.x,\n          y: event.y\n        },\n        previewStart = connectionStart,\n        previewEnd = connectionEnd;\n\n    if (isReverse(context)) {\n      previewStart = connectionEnd;\n      previewEnd = connectionStart;\n    }\n\n    connectionPreview.drawPreview(context, canConnect, {\n      source: source || start,\n      target: target || hover,\n      connectionStart: previewStart,\n      connectionEnd: previewEnd\n    });\n  });\n\n  eventBus.on('connect.hover', LOW_PRIORITY, function(event) {\n    var context = event.context,\n        hover = event.hover,\n        canExecute = context.canExecute;\n\n    // ignore hover\n    if (canExecute === null) {\n      return;\n    }\n\n    canvas.addMarker(hover, canExecute ? MARKER_OK : MARKER_NOT_OK);\n  });\n\n  eventBus.on([\n    'connect.out',\n    'connect.cleanup'\n  ], HIGH_PRIORITY, function(event) {\n    var hover = event.hover;\n\n    if (hover) {\n      canvas.removeMarker(hover, MARKER_OK);\n      canvas.removeMarker(hover, MARKER_NOT_OK);\n    }\n  });\n\n  connectionPreview && eventBus.on('connect.cleanup', function(event) {\n    connectionPreview.cleanUp(event.context);\n  });\n}\n\nConnectPreview.$inject = [\n  'injector',\n  'eventBus',\n  'canvas'\n];\n","import SelectionModule from '../selection';\nimport RulesModule from '../rules';\nimport DraggingModule from '../dragging';\n\nimport Connect from './Connect';\nimport ConnectPreview from './ConnectPreview';\n\nexport default {\n  __depends__: [\n    SelectionModule,\n    RulesModule,\n    DraggingModule\n  ],\n  __init__: [\n    'connectPreview'\n  ],\n  connect: [ 'type', Connect ],\n  connectPreview: [ 'type', ConnectPreview ]\n};\n","import {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  remove as svgRemove,\n  clear as svgClear\n} from 'tiny-svg';\n\nimport {\n  isObject\n} from 'min-dash';\n\nimport {\n  getElementLineIntersection,\n  getMid\n} from '../../layout/LayoutUtil';\n\n\nvar MARKER_CONNECTION_PREVIEW = 'djs-connection-preview';\n\n/**\n * Draws connection preview. Optionally, this can use layouter and connection docking to draw\n * better looking previews.\n *\n * @param {didi.Injector} injector\n * @param {Canvas} canvas\n * @param {GraphicsFactory} graphicsFactory\n * @param {ElementFactory} elementFactory\n */\nexport default function ConnectionPreview(\n    injector,\n    canvas,\n    graphicsFactory,\n    elementFactory\n) {\n  this._canvas = canvas;\n  this._graphicsFactory = graphicsFactory;\n  this._elementFactory = elementFactory;\n\n  // optional components\n  this._connectionDocking = injector.get('connectionDocking', false);\n  this._layouter = injector.get('layouter', false);\n}\n\nConnectionPreview.$inject = [\n  'injector',\n  'canvas',\n  'graphicsFactory',\n  'elementFactory'\n];\n\n/**\n * Draw connection preview.\n *\n * Provide at least one of <source, connectionStart> and <target, connectionEnd> to create a preview.\n * In the clean up stage, call `connectionPreview#cleanUp` with the context to remove preview.\n *\n * @param {Object} context\n * @param {Object|boolean} canConnect\n * @param {Object} hints\n * @param {djs.model.shape} [hints.source] source element\n * @param {djs.model.shape} [hints.target] target element\n * @param {Point} [hints.connectionStart] connection preview start\n * @param {Point} [hints.connectionEnd] connection preview end\n * @param {Array<Point>} [hints.waypoints] provided waypoints for preview\n * @param {boolean} [hints.noLayout] true if preview should not be laid out\n * @param {boolean} [hints.noCropping] true if preview should not be cropped\n * @param {boolean} [hints.noNoop] true if simple connection should not be drawn\n */\nConnectionPreview.prototype.drawPreview = function(context, canConnect, hints) {\n\n  hints = hints || {};\n\n  var connectionPreviewGfx = context.connectionPreviewGfx,\n      getConnection = context.getConnection,\n      source = hints.source,\n      target = hints.target,\n      waypoints = hints.waypoints,\n      connectionStart = hints.connectionStart,\n      connectionEnd = hints.connectionEnd,\n      noLayout = hints.noLayout,\n      noCropping = hints.noCropping,\n      noNoop = hints.noNoop,\n      connection;\n\n  var self = this;\n\n  if (!connectionPreviewGfx) {\n    connectionPreviewGfx = context.connectionPreviewGfx = this.createConnectionPreviewGfx();\n  }\n\n  svgClear(connectionPreviewGfx);\n\n  if (!getConnection) {\n    getConnection = context.getConnection = cacheReturnValues(function(canConnect, source, target) {\n      return self.getConnection(canConnect, source, target);\n    });\n  }\n\n  if (canConnect) {\n    connection = getConnection(canConnect, source, target);\n  }\n\n  if (!connection) {\n    !noNoop && this.drawNoopPreview(connectionPreviewGfx, hints);\n    return;\n  }\n\n  connection.waypoints = waypoints || [];\n\n  // optional layout\n  if (this._layouter && !noLayout) {\n    connection.waypoints = this._layouter.layoutConnection(connection, {\n      source: source,\n      target: target,\n      connectionStart: connectionStart,\n      connectionEnd: connectionEnd,\n      waypoints: hints.waypoints || connection.waypoints\n    });\n  }\n\n  // fallback if no waypoints were provided nor created with layouter\n  if (!connection.waypoints || !connection.waypoints.length) {\n    connection.waypoints = [\n      source ? getMid(source) : connectionStart,\n      target ? getMid(target) : connectionEnd\n    ];\n  }\n\n  // optional cropping\n  if (this._connectionDocking && (source || target) && !noCropping) {\n    connection.waypoints = this._connectionDocking.getCroppedWaypoints(connection, source, target);\n  }\n\n  this._graphicsFactory.drawConnection(connectionPreviewGfx, connection);\n};\n\n/**\n * Draw simple connection between source and target or provided points.\n *\n * @param {SVGElement} connectionPreviewGfx container for the connection\n * @param {Object} hints\n * @param {djs.model.shape} [hints.source] source element\n * @param {djs.model.shape} [hints.target] target element\n * @param {Point} [hints.connectionStart] required if source is not provided\n * @param {Point} [hints.connectionEnd] required if target is not provided\n */\nConnectionPreview.prototype.drawNoopPreview = function(connectionPreviewGfx, hints) {\n  var source = hints.source,\n      target = hints.target,\n      start = hints.connectionStart || getMid(source),\n      end = hints.connectionEnd || getMid(target);\n\n  var waypoints = this.cropWaypoints(start, end, source, target);\n\n  var connection = this.createNoopConnection(waypoints[0], waypoints[1]);\n\n  svgAppend(connectionPreviewGfx, connection);\n};\n\n/**\n * Return cropped waypoints.\n *\n * @param {Point} start\n * @param {Point} end\n * @param {djs.model.shape} source\n * @param {djs.model.shape} target\n *\n * @returns {Array}\n */\nConnectionPreview.prototype.cropWaypoints = function(start, end, source, target) {\n  var graphicsFactory = this._graphicsFactory,\n      sourcePath = source && graphicsFactory.getShapePath(source),\n      targetPath = target && graphicsFactory.getShapePath(target),\n      connectionPath = graphicsFactory.getConnectionPath({ waypoints: [ start, end ] });\n\n  start = (source && getElementLineIntersection(sourcePath, connectionPath, true)) || start;\n  end = (target && getElementLineIntersection(targetPath, connectionPath, false)) || end;\n\n  return [ start, end ];\n};\n\n/**\n * Remove connection preview container if it exists.\n *\n * @param {Object} [context]\n * @param {SVGElement} [context.connectionPreviewGfx] preview container\n */\nConnectionPreview.prototype.cleanUp = function(context) {\n  if (context && context.connectionPreviewGfx) {\n    svgRemove(context.connectionPreviewGfx);\n  }\n};\n\n/**\n * Get connection that connects source and target.\n *\n * @param {Object|boolean} canConnect\n *\n * @returns {djs.model.connection}\n */\nConnectionPreview.prototype.getConnection = function(canConnect) {\n  var attrs = ensureConnectionAttrs(canConnect);\n\n  return this._elementFactory.createConnection(attrs);\n};\n\n\n/**\n * Add and return preview graphics.\n *\n * @returns {SVGElement}\n */\nConnectionPreview.prototype.createConnectionPreviewGfx = function() {\n  var gfx = svgCreate('g');\n\n  svgAttr(gfx, {\n    pointerEvents: 'none'\n  });\n\n  svgClasses(gfx).add(MARKER_CONNECTION_PREVIEW);\n\n  svgAppend(this._canvas.getActiveLayer(), gfx);\n\n  return gfx;\n};\n\n/**\n * Create and return simple connection.\n *\n * @param {Point} start\n * @param {Point} end\n *\n * @returns {SVGElement}\n */\nConnectionPreview.prototype.createNoopConnection = function(start, end) {\n  var connection = svgCreate('polyline');\n\n  svgAttr(connection, {\n    'stroke': '#333',\n    'strokeDasharray': [ 1 ],\n    'strokeWidth': 2,\n    'pointer-events': 'none'\n  });\n\n  svgAttr(connection, { 'points': [ start.x, start.y, end.x, end.y ] });\n\n  return connection;\n};\n\n// helpers //////////\n\n/**\n * Returns function that returns cached return values referenced by stringified first argument.\n *\n * @param {Function} fn\n *\n * @return {Function}\n */\nfunction cacheReturnValues(fn) {\n  var returnValues = {};\n\n  /**\n   * Return cached return value referenced by stringified first argument.\n   *\n   * @returns {*}\n   */\n  return function(firstArgument) {\n    var key = JSON.stringify(firstArgument);\n\n    var returnValue = returnValues[key];\n\n    if (!returnValue) {\n      returnValue = returnValues[key] = fn.apply(null, arguments);\n    }\n\n    return returnValue;\n  };\n}\n\n/**\n * Ensure connection attributes is object.\n *\n * @param {Object|boolean} canConnect\n *\n * @returns {Object}\n */\nfunction ensureConnectionAttrs(canConnect) {\n  if (isObject(canConnect)) {\n    return canConnect;\n  } else {\n    return {};\n  }\n}\n","import ConnectionPreview from './ConnectionPreview';\n\nexport default {\n  __init__: [ 'connectionPreview' ],\n  connectionPreview: [ 'type', ConnectionPreview ]\n};\n","import {\n  assign,\n  isFunction,\n  isArray,\n  forEach,\n  isDefined\n} from 'min-dash';\n\nimport {\n  delegate as domDelegate,\n  event as domEvent,\n  attr as domAttr,\n  query as domQuery,\n  classes as domClasses,\n  domify as domify\n} from 'min-dom';\n\nvar entrySelector = '.entry';\n\nvar DEFAULT_PRIORITY = 1000;\n\n\n/**\n * A context pad that displays element specific, contextual actions next\n * to a diagram element.\n *\n * @param {Object} config\n * @param {boolean|Object} [config.scale={ min: 1.0, max: 1.5 }]\n * @param {number} [config.scale.min]\n * @param {number} [config.scale.max]\n * @param {EventBus} eventBus\n * @param {Overlays} overlays\n */\nexport default function ContextPad(config, eventBus, overlays) {\n\n  this._eventBus = eventBus;\n  this._overlays = overlays;\n\n  var scale = isDefined(config && config.scale) ? config.scale : {\n    min: 1,\n    max: 1.5\n  };\n\n  this._overlaysConfig = {\n    position: {\n      right: -9,\n      top: -6\n    },\n    scale: scale\n  };\n\n  this._current = null;\n\n  this._init();\n}\n\nContextPad.$inject = [\n  'config.contextPad',\n  'eventBus',\n  'overlays'\n];\n\n\n/**\n * Registers events needed for interaction with other components\n */\nContextPad.prototype._init = function() {\n\n  var eventBus = this._eventBus;\n\n  var self = this;\n\n  eventBus.on('selection.changed', function(e) {\n\n    var selection = e.newSelection;\n\n    if (selection.length === 1) {\n      self.open(selection[0]);\n    } else {\n      self.close();\n    }\n  });\n\n  eventBus.on('elements.delete', function(event) {\n    var elements = event.elements;\n\n    forEach(elements, function(e) {\n      if (self.isOpen(e)) {\n        self.close();\n      }\n    });\n  });\n\n  eventBus.on('element.changed', function(event) {\n    var element = event.element,\n        current = self._current;\n\n    // force reopen if element for which we are currently opened changed\n    if (current && current.element === element) {\n      self.open(element, true);\n    }\n  });\n};\n\n\n/**\n * Register a provider with the context pad\n *\n * @param  {number} [priority=1000]\n * @param  {ContextPadProvider} provider\n *\n * @example\n * const contextPadProvider = {\n  *   getContextPadEntries: function(element) {\n  *     return function(entries) {\n  *       return {\n  *         ...entries,\n  *         'entry-1': {\n  *           label: 'My Entry',\n  *           action: function() { alert(\"I have been clicked!\"); }\n  *         }\n  *       };\n  *     }\n  *   }\n  * };\n  *\n * contextPad.registerProvider(800, contextPadProvider);\n */\nContextPad.prototype.registerProvider = function(priority, provider) {\n  if (!provider) {\n    provider = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  this._eventBus.on('contextPad.getProviders', priority, function(event) {\n    event.providers.push(provider);\n  });\n};\n\n\n/**\n * Returns the context pad entries for a given element\n *\n * @param {djs.element.Base} element\n *\n * @return {Array<ContextPadEntryDescriptor>} list of entries\n */\nContextPad.prototype.getEntries = function(element) {\n  var providers = this._getProviders();\n\n  var entries = {};\n\n  // loop through all providers and their entries.\n  // group entries by id so that overriding an entry is possible\n  forEach(providers, function(provider) {\n    var entriesOrUpdater = provider.getContextPadEntries(element);\n\n    if (isFunction(entriesOrUpdater)) {\n      entries = entriesOrUpdater(entries);\n    } else {\n      forEach(entriesOrUpdater, function(entry, id) {\n        entries[id] = entry;\n      });\n    }\n  });\n\n  return entries;\n};\n\n\n/**\n * Trigger an action available on the opened context pad\n *\n * @param  {string} action\n * @param  {Event} event\n * @param  {boolean} [autoActivate=false]\n */\nContextPad.prototype.trigger = function(action, event, autoActivate) {\n\n  var element = this._current.element,\n      entries = this._current.entries,\n      entry,\n      handler,\n      originalEvent,\n      button = event.delegateTarget || event.target;\n\n  if (!button) {\n    return event.preventDefault();\n  }\n\n  entry = entries[domAttr(button, 'data-action')];\n  handler = entry.action;\n\n  originalEvent = event.originalEvent || event;\n\n  // simple action (via callback function)\n  if (isFunction(handler)) {\n    if (action === 'click') {\n      return handler(originalEvent, element, autoActivate);\n    }\n  } else {\n    if (handler[action]) {\n      return handler[action](originalEvent, element, autoActivate);\n    }\n  }\n\n  // silence other actions\n  event.preventDefault();\n};\n\n\n/**\n * Open the context pad for the given element\n *\n * @param {djs.model.Base} element\n * @param {boolean} force if true, force reopening the context pad\n */\nContextPad.prototype.open = function(element, force) {\n  if (!force && this.isOpen(element)) {\n    return;\n  }\n\n  this.close();\n  this._updateAndOpen(element);\n};\n\nContextPad.prototype._getProviders = function() {\n\n  var event = this._eventBus.createEvent({\n    type: 'contextPad.getProviders',\n    providers: []\n  });\n\n  this._eventBus.fire(event);\n\n  return event.providers;\n};\n\nContextPad.prototype._updateAndOpen = function(element) {\n\n  var entries = this.getEntries(element),\n      pad = this.getPad(element),\n      html = pad.html;\n\n  forEach(entries, function(entry, id) {\n    var grouping = entry.group || 'default',\n        control = domify(entry.html || '<div class=\"entry\" draggable=\"true\"></div>'),\n        container;\n\n    domAttr(control, 'data-action', id);\n\n    container = domQuery('[data-group=' + grouping + ']', html);\n    if (!container) {\n      container = domify('<div class=\"group\" data-group=\"' + grouping + '\"></div>');\n      html.appendChild(container);\n    }\n\n    container.appendChild(control);\n\n    if (entry.className) {\n      addClasses(control, entry.className);\n    }\n\n    if (entry.title) {\n      domAttr(control, 'title', entry.title);\n    }\n\n    if (entry.imageUrl) {\n      control.appendChild(domify('<img src=\"' + entry.imageUrl + '\">'));\n    }\n  });\n\n  domClasses(html).add('open');\n\n  this._current = {\n    element: element,\n    pad: pad,\n    entries: entries\n  };\n\n  this._eventBus.fire('contextPad.open', { current: this._current });\n};\n\n\nContextPad.prototype.getPad = function(element) {\n  if (this.isOpen()) {\n    return this._current.pad;\n  }\n\n  var self = this;\n\n  var overlays = this._overlays;\n\n  var html = domify('<div class=\"djs-context-pad\"></div>');\n\n  var overlaysConfig = assign({\n    html: html\n  }, this._overlaysConfig);\n\n  domDelegate.bind(html, entrySelector, 'click', function(event) {\n    self.trigger('click', event);\n  });\n\n  domDelegate.bind(html, entrySelector, 'dragstart', function(event) {\n    self.trigger('dragstart', event);\n  });\n\n  // stop propagation of mouse events\n  domEvent.bind(html, 'mousedown', function(event) {\n    event.stopPropagation();\n  });\n\n  this._overlayId = overlays.add(element, 'context-pad', overlaysConfig);\n\n  var pad = overlays.get(this._overlayId);\n\n  this._eventBus.fire('contextPad.create', { element: element, pad: pad });\n\n  return pad;\n};\n\n\n/**\n * Close the context pad\n */\nContextPad.prototype.close = function() {\n  if (!this.isOpen()) {\n    return;\n  }\n\n  this._overlays.remove(this._overlayId);\n\n  this._overlayId = null;\n\n  this._eventBus.fire('contextPad.close', { current: this._current });\n\n  this._current = null;\n};\n\n/**\n * Check if pad is open. If element is given, will check\n * if pad is opened with given element.\n *\n * @param {Element} element\n * @return {boolean}\n */\nContextPad.prototype.isOpen = function(element) {\n  return !!this._current && (!element ? true : this._current.element === element);\n};\n\n\n\n\n// helpers //////////////////////\n\nfunction addClasses(element, classNames) {\n\n  var classes = domClasses(element);\n\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(/\\s+/g);\n  actualClassNames.forEach(function(cls) {\n    classes.add(cls);\n  });\n}","import InteractionEventsModule from '../interaction-events';\nimport OverlaysModule from '../overlays';\n\nimport ContextPad from './ContextPad';\n\n\nexport default {\n  __depends__: [\n    InteractionEventsModule,\n    OverlaysModule\n  ],\n  contextPad: [ 'type', ContextPad ]\n};","import {\n  assign,\n  find,\n  forEach,\n  isArray,\n  isNumber,\n  map,\n  matchPattern,\n  omit,\n  sortBy\n} from 'min-dash';\n\nimport {\n  getBBox,\n  getParents\n} from '../../util/Elements';\n\nimport { eachElement } from '../../util/Elements';\n\n/**\n * @typedef {Function} <copyPaste.canCopyElements> listener\n *\n * @param {Object} context\n * @param {Array<djs.model.Base>} context.elements\n *\n * @returns {Array<djs.model.Base>|boolean} - Return elements to be copied or false to disallow\n * copying.\n */\n\n/**\n * @typedef {Function} <copyPaste.copyElement> listener\n *\n * @param {Object} context\n * @param {Object} context.descriptor\n * @param {djs.model.Base} context.element\n * @param {Array<djs.model.Base>} context.elements\n */\n\n/**\n * @typedef {Function} <copyPaste.createTree> listener\n *\n * @param {Object} context\n * @param {djs.model.Base} context.element\n * @param {Array<djs.model.Base>} context.children - Add children to be added to tree.\n */\n\n/**\n * @typedef {Function} <copyPaste.elementsCopied> listener\n *\n * @param {Object} context\n * @param {Object} context.elements\n * @param {Object} context.tree\n */\n\n/**\n * @typedef {Function} <copyPaste.pasteElement> listener\n *\n * @param {Object} context\n * @param {Object} context.cache - Already created elements.\n * @param {Object} context.descriptor\n */\n\n/**\n * @typedef {Function} <copyPaste.pasteElements> listener\n *\n * @param {Object} context\n * @param {Object} context.hints - Add hints before pasting.\n */\n\n/**\n * Copy and paste elements.\n *\n * @param {Canvas} canvas\n * @param {Create} create\n * @param {Clipboard} clipboard\n * @param {ElementFactory} elementFactory\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n * @param {Mouse} mouse\n * @param {Rules} rules\n */\nexport default function CopyPaste(\n    canvas,\n    create,\n    clipboard,\n    elementFactory,\n    eventBus,\n    modeling,\n    mouse,\n    rules\n) {\n\n  this._canvas = canvas;\n  this._create = create;\n  this._clipboard = clipboard;\n  this._elementFactory = elementFactory;\n  this._eventBus = eventBus;\n  this._modeling = modeling;\n  this._mouse = mouse;\n  this._rules = rules;\n\n  eventBus.on('copyPaste.copyElement', function(context) {\n    var descriptor = context.descriptor,\n        element = context.element,\n        elements = context.elements;\n\n    // default priority (priority = 1)\n    descriptor.priority = 1;\n\n    descriptor.id = element.id;\n\n    var parentCopied = find(elements, function(e) {\n      return e === element.parent;\n    });\n\n    // do NOT reference parent if parent wasn't copied\n    if (parentCopied) {\n      descriptor.parent = element.parent.id;\n    }\n\n    // attachers (priority = 2)\n    if (isAttacher(element)) {\n      descriptor.priority = 2;\n\n      descriptor.host = element.host.id;\n    }\n\n    // connections (priority = 3)\n    if (isConnection(element)) {\n      descriptor.priority = 3;\n\n      descriptor.source = element.source.id;\n      descriptor.target = element.target.id;\n\n      descriptor.waypoints = copyWaypoints(element);\n    }\n\n    // labels (priority = 4)\n    if (isLabel(element)) {\n      descriptor.priority = 4;\n\n      descriptor.labelTarget = element.labelTarget.id;\n    }\n\n    forEach([ 'x', 'y', 'width', 'height' ], function(property) {\n      if (isNumber(element[ property ])) {\n        descriptor[ property ] = element[ property ];\n      }\n    });\n\n    descriptor.hidden = element.hidden;\n    descriptor.collapsed = element.collapsed;\n\n  });\n\n  eventBus.on('copyPaste.pasteElements', function(context) {\n    var hints = context.hints;\n\n    assign(hints, {\n      createElementsBehavior: false\n    });\n  });\n}\n\nCopyPaste.$inject = [\n  'canvas',\n  'create',\n  'clipboard',\n  'elementFactory',\n  'eventBus',\n  'modeling',\n  'mouse',\n  'rules'\n];\n\n\n/**\n * Copy elements.\n *\n * @param {Array<djs.model.Base>} elements\n *\n * @returns {Object}\n */\nCopyPaste.prototype.copy = function(elements) {\n  var allowed,\n      tree;\n\n  if (!isArray(elements)) {\n    elements = elements ? [ elements ] : [];\n  }\n\n  allowed = this._eventBus.fire('copyPaste.canCopyElements', {\n    elements: elements\n  });\n\n  if (allowed === false) {\n    tree = {};\n  } else {\n    tree = this.createTree(isArray(allowed) ? allowed : elements);\n  }\n\n  // we set an empty tree, selection of elements\n  // to copy was empty.\n  this._clipboard.set(tree);\n\n  this._eventBus.fire('copyPaste.elementsCopied', {\n    elements: elements,\n    tree: tree\n  });\n\n  return tree;\n};\n\n/**\n * Paste elements.\n *\n * @param {Object} [context]\n * @param {djs.model.base} [context.element] - Parent.\n * @param {Point} [context.point] - Position.\n * @param {Object} [context.hints] - Hints.\n */\nCopyPaste.prototype.paste = function(context) {\n  var tree = this._clipboard.get();\n\n  if (this._clipboard.isEmpty()) {\n    return;\n  }\n\n  var hints = context && context.hints || {};\n\n  this._eventBus.fire('copyPaste.pasteElements', {\n    hints: hints\n  });\n\n  var elements = this._createElements(tree);\n\n  // paste directly\n  if (context && context.element && context.point) {\n    return this._paste(elements, context.element, context.point, hints);\n  }\n\n  this._create.start(this._mouse.getLastMoveEvent(), elements, {\n    hints: hints || {}\n  });\n};\n\n/**\n * Paste elements directly.\n *\n * @param {Array<djs.model.Base>} elements\n * @param {djs.model.base} target\n * @param {Point} position\n * @param {Object} [hints]\n */\nCopyPaste.prototype._paste = function(elements, target, position, hints) {\n\n  // make sure each element has x and y\n  forEach(elements, function(element) {\n    if (!isNumber(element.x)) {\n      element.x = 0;\n    }\n\n    if (!isNumber(element.y)) {\n      element.y = 0;\n    }\n  });\n\n  var bbox = getBBox(elements);\n\n  // center elements around cursor\n  forEach(elements, function(element) {\n    if (isConnection(element)) {\n      element.waypoints = map(element.waypoints, function(waypoint) {\n        return {\n          x: waypoint.x - bbox.x - bbox.width / 2,\n          y: waypoint.y - bbox.y - bbox.height / 2\n        };\n      });\n    }\n\n    assign(element, {\n      x: element.x - bbox.x - bbox.width / 2,\n      y: element.y - bbox.y - bbox.height / 2\n    });\n  });\n\n  return this._modeling.createElements(elements, position, target, assign({}, hints));\n};\n\n/**\n * Create elements from tree.\n */\nCopyPaste.prototype._createElements = function(tree) {\n  var self = this;\n\n  var eventBus = this._eventBus;\n\n  var cache = {};\n\n  var elements = [];\n\n  forEach(tree, function(branch, depth) {\n\n    depth = parseInt(depth, 10);\n\n    // sort by priority\n    branch = sortBy(branch, 'priority');\n\n    forEach(branch, function(descriptor) {\n\n      // remove priority\n      var attrs = assign({}, omit(descriptor, [ 'priority' ]));\n\n      if (cache[ descriptor.parent ]) {\n        attrs.parent = cache[ descriptor.parent ];\n      } else {\n        delete attrs.parent;\n      }\n\n      eventBus.fire('copyPaste.pasteElement', {\n        cache: cache,\n        descriptor: attrs\n      });\n\n      var element;\n\n      if (isConnection(attrs)) {\n        attrs.source = cache[ descriptor.source ];\n        attrs.target = cache[ descriptor.target ];\n\n        element = cache[ descriptor.id ] = self.createConnection(attrs);\n\n        elements.push(element);\n\n        return;\n      }\n\n      if (isLabel(attrs)) {\n        attrs.labelTarget = cache[ attrs.labelTarget ];\n\n        element = cache[ descriptor.id ] = self.createLabel(attrs);\n\n        elements.push(element);\n\n        return;\n      }\n\n      if (attrs.host) {\n        attrs.host = cache[ attrs.host ];\n      }\n\n      element = cache[ descriptor.id ] = self.createShape(attrs);\n\n      elements.push(element);\n    });\n\n  });\n\n  return elements;\n};\n\nCopyPaste.prototype.createConnection = function(attrs) {\n  var connection = this._elementFactory.createConnection(omit(attrs, [ 'id' ]));\n\n  return connection;\n};\n\nCopyPaste.prototype.createLabel = function(attrs) {\n  var label = this._elementFactory.createLabel(omit(attrs, [ 'id' ]));\n\n  return label;\n};\n\nCopyPaste.prototype.createShape = function(attrs) {\n  var shape = this._elementFactory.createShape(omit(attrs, [ 'id' ]));\n\n  return shape;\n};\n\n/**\n * Check wether element has relations to other elements e.g. attachers, labels and connections.\n *\n * @param  {Object} element\n * @param  {Array<djs.model.Base>} elements\n *\n * @returns {boolean}\n */\nCopyPaste.prototype.hasRelations = function(element, elements) {\n  var labelTarget,\n      source,\n      target;\n\n  if (isConnection(element)) {\n    source = find(elements, matchPattern({ id: element.source.id }));\n    target = find(elements, matchPattern({ id: element.target.id }));\n\n    if (!source || !target) {\n      return false;\n    }\n  }\n\n  if (isLabel(element)) {\n    labelTarget = find(elements, matchPattern({ id: element.labelTarget.id }));\n\n    if (!labelTarget) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Create a tree-like structure from elements.\n *\n * @example\n * tree: {\n  *  0: [\n  *    { id: 'Shape_1', priority: 1, ... },\n  *    { id: 'Shape_2', priority: 1, ... },\n  *    { id: 'Connection_1', source: 'Shape_1', target: 'Shape_2', priority: 3, ... },\n  *    ...\n  *  ],\n  *  1: [\n  *    { id: 'Shape_3', parent: 'Shape1', priority: 1, ... },\n  *    ...\n  *  ]\n  * };\n  *\n  * @param  {Array<djs.model.base>} elements\n  *\n  * @return {Object}\n  */\nCopyPaste.prototype.createTree = function(elements) {\n  var rules = this._rules,\n      self = this;\n\n  var tree = {},\n      elementsData = [];\n\n  var parents = getParents(elements);\n\n  function canCopy(element, elements) {\n    return rules.allowed('element.copy', {\n      element: element,\n      elements: elements\n    });\n  }\n\n  function addElementData(element, depth) {\n\n    // (1) check wether element has already been added\n    var foundElementData = find(elementsData, function(elementsData) {\n      return element === elementsData.element;\n    });\n\n    // (2) add element if not already added\n    if (!foundElementData) {\n      elementsData.push({\n        element: element,\n        depth: depth\n      });\n\n      return;\n    }\n\n    // (3) update depth\n    if (foundElementData.depth < depth) {\n      elementsData = removeElementData(foundElementData, elementsData);\n\n      elementsData.push({\n        element: foundElementData.element,\n        depth: depth\n      });\n    }\n  }\n\n  function removeElementData(elementData, elementsData) {\n    var index = elementsData.indexOf(elementData);\n\n    if (index !== -1) {\n      elementsData.splice(index, 1);\n    }\n\n    return elementsData;\n  }\n\n  // (1) add elements\n  eachElement(parents, function(element, _index, depth) {\n\n    // do NOT add external labels directly\n    if (isLabel(element)) {\n      return;\n    }\n\n    // always copy external labels\n    forEach(element.labels, function(label) {\n      addElementData(label, depth);\n    });\n\n    function addRelatedElements(elements) {\n      elements && elements.length && forEach(elements, function(element) {\n\n        // add external labels\n        forEach(element.labels, function(label) {\n          addElementData(label, depth);\n        });\n\n        addElementData(element, depth);\n      });\n    }\n\n    forEach([ element.attachers, element.incoming, element.outgoing ], addRelatedElements);\n\n    addElementData(element, depth);\n\n    var children = [];\n\n    if (element.children) {\n      children = element.children.slice();\n    }\n\n    // allow others to add children to tree\n    self._eventBus.fire('copyPaste.createTree', {\n      element: element,\n      children: children\n    });\n\n    return children;\n  });\n\n  elements = map(elementsData, function(elementData) {\n    return elementData.element;\n  });\n\n  // (2) copy elements\n  elementsData = map(elementsData, function(elementData) {\n    elementData.descriptor = {};\n\n    self._eventBus.fire('copyPaste.copyElement', {\n      descriptor: elementData.descriptor,\n      element: elementData.element,\n      elements: elements\n    });\n\n    return elementData;\n  });\n\n  // (3) sort elements by priority\n  elementsData = sortBy(elementsData, function(elementData) {\n    return elementData.descriptor.priority;\n  });\n\n  elements = map(elementsData, function(elementData) {\n    return elementData.element;\n  });\n\n  // (4) create tree\n  forEach(elementsData, function(elementData) {\n    var depth = elementData.depth;\n\n    if (!self.hasRelations(elementData.element, elements)) {\n      removeElement(elementData.element, elements);\n\n      return;\n    }\n\n    if (!canCopy(elementData.element, elements)) {\n      removeElement(elementData.element, elements);\n\n      return;\n    }\n\n    if (!tree[depth]) {\n      tree[depth] = [];\n    }\n\n    tree[depth].push(elementData.descriptor);\n  });\n\n  return tree;\n};\n\n// helpers //////////\n\nfunction isAttacher(element) {\n  return !!element.host;\n}\n\nfunction isConnection(element) {\n  return !!element.waypoints;\n}\n\nfunction isLabel(element) {\n  return !!element.labelTarget;\n}\n\nfunction copyWaypoints(element) {\n  return map(element.waypoints, function(waypoint) {\n\n    waypoint = copyWaypoint(waypoint);\n\n    if (waypoint.original) {\n      waypoint.original = copyWaypoint(waypoint.original);\n    }\n\n    return waypoint;\n  });\n}\n\nfunction copyWaypoint(waypoint) {\n  return assign({}, waypoint);\n}\n\nfunction removeElement(element, elements) {\n  var index = elements.indexOf(element);\n\n  if (index === -1) {\n    return elements;\n  }\n\n  return elements.splice(index, 1);\n}\n","import ClipboardModule from '../clipboard';\nimport CreateModule from '../create';\nimport MouseModule from '../mouse';\nimport RulesModule from '../rules';\n\nimport CopyPaste from './CopyPaste';\n\n\nexport default {\n  __depends__: [\n    ClipboardModule,\n    CreateModule,\n    MouseModule,\n    RulesModule\n  ],\n  __init__: [ 'copyPaste' ],\n  copyPaste: [ 'type', CopyPaste ]\n};\n","var MARKER_OK = 'drop-ok',\n    MARKER_NOT_OK = 'drop-not-ok',\n    MARKER_ATTACH = 'attach-ok',\n    MARKER_NEW_PARENT = 'new-parent';\n\nimport {\n  assign,\n  filter,\n  find,\n  forEach,\n  isArray,\n  isNumber,\n  map\n} from 'min-dash';\n\nimport { getBBox } from '../../util/Elements';\n\nvar PREFIX = 'create';\n\nvar HIGH_PRIORITY = 2000;\n\n\n/**\n * Create new elements through drag and drop.\n *\n * @param {Canvas} canvas\n * @param {Dragging} dragging\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n * @param {Rules} rules\n */\nexport default function Create(\n    canvas,\n    dragging,\n    eventBus,\n    modeling,\n    rules\n) {\n\n  // rules //////////\n\n  /**\n   * Check wether elements can be created.\n   *\n   * @param {Array<djs.model.Base>} elements\n   * @param {djs.model.Base} target\n   * @param {Point} position\n   * @param {djs.model.Base} [source]\n   *\n   * @returns {boolean|null|Object}\n   */\n  function canCreate(elements, target, position, source, hints) {\n    if (!target) {\n      return false;\n    }\n\n    // ignore child elements and external labels\n    elements = filter(elements, function(element) {\n      var labelTarget = element.labelTarget;\n\n      return !element.parent && !(isLabel(element) && elements.indexOf(labelTarget) !== -1);\n    });\n\n    var shape = find(elements, function(element) {\n      return !isConnection(element);\n    });\n\n    var attach = false,\n        connect = false,\n        create = false;\n\n    // (1) attaching single shapes\n    if (isSingleShape(elements)) {\n      attach = rules.allowed('shape.attach', {\n        position: position,\n        shape: shape,\n        target: target\n      });\n    }\n\n    if (!attach) {\n\n      // (2) creating elements\n      if (isSingleShape(elements)) {\n        create = rules.allowed('shape.create', {\n          position: position,\n          shape: shape,\n          source: source,\n          target: target\n        });\n      } else {\n        create = rules.allowed('elements.create', {\n          elements: elements,\n          position: position,\n          target: target\n        });\n      }\n\n    }\n\n    var connectionTarget = hints.connectionTarget;\n\n    // (3) appending single shapes\n    if (create || attach) {\n      if (shape && source) {\n        connect = rules.allowed('connection.create', {\n          source: connectionTarget === source ? shape : source,\n          target: connectionTarget === source ? source : shape,\n          hints: {\n            targetParent: target,\n            targetAttach: attach\n          }\n        });\n      }\n\n      return {\n        attach: attach,\n        connect: connect\n      };\n    }\n\n    // ignore wether or not elements can be created\n    if (create === null || attach === null) {\n      return null;\n    }\n\n    return false;\n  }\n\n  function setMarker(element, marker) {\n    [ MARKER_ATTACH, MARKER_OK, MARKER_NOT_OK, MARKER_NEW_PARENT ].forEach(function(m) {\n\n      if (m === marker) {\n        canvas.addMarker(element, m);\n      } else {\n        canvas.removeMarker(element, m);\n      }\n    });\n  }\n\n  // event handling //////////\n\n  eventBus.on([ 'create.move', 'create.hover' ], function(event) {\n    var context = event.context,\n        elements = context.elements,\n        hover = event.hover,\n        source = context.source,\n        hints = context.hints || {};\n\n    if (!hover) {\n      context.canExecute = false;\n      context.target = null;\n\n      return;\n    }\n\n    ensureConstraints(event);\n\n    var position = {\n      x: event.x,\n      y: event.y\n    };\n\n    var canExecute = context.canExecute = hover && canCreate(elements, hover, position, source, hints);\n\n    if (hover && canExecute !== null) {\n      context.target = hover;\n\n      if (canExecute && canExecute.attach) {\n        setMarker(hover, MARKER_ATTACH);\n      } else {\n        setMarker(hover, canExecute ? MARKER_NEW_PARENT : MARKER_NOT_OK);\n      }\n    }\n  });\n\n  eventBus.on([ 'create.end', 'create.out', 'create.cleanup' ], function(event) {\n    var hover = event.hover;\n\n    if (hover) {\n      setMarker(hover, null);\n    }\n  });\n\n  eventBus.on('create.end', function(event) {\n    var context = event.context,\n        source = context.source,\n        shape = context.shape,\n        elements = context.elements,\n        target = context.target,\n        canExecute = context.canExecute,\n        attach = canExecute && canExecute.attach,\n        connect = canExecute && canExecute.connect,\n        hints = context.hints || {};\n\n    if (canExecute === false || !target) {\n      return false;\n    }\n\n    ensureConstraints(event);\n\n    var position = {\n      x: event.x,\n      y: event.y\n    };\n\n    if (connect) {\n      shape = modeling.appendShape(source, shape, position, target, {\n        attach: attach,\n        connection: connect === true ? {} : connect,\n        connectionTarget: hints.connectionTarget\n      });\n    } else {\n      elements = modeling.createElements(elements, position, target, assign({}, hints, {\n        attach: attach\n      }));\n\n      // update shape\n      shape = find(elements, function(element) {\n        return !isConnection(element);\n      });\n    }\n\n    // update elements and shape\n    assign(context, {\n      elements: elements,\n      shape: shape\n    });\n\n    assign(event, {\n      elements: elements,\n      shape: shape\n    });\n  });\n\n  function cancel() {\n    var context = dragging.context();\n\n    if (context && context.prefix === PREFIX) {\n      dragging.cancel();\n    }\n  }\n\n  // cancel on <elements.changed> that is not result of <drag.end>\n  eventBus.on('create.init', function() {\n    eventBus.on('elements.changed', cancel);\n\n    eventBus.once([ 'create.cancel', 'create.end' ], HIGH_PRIORITY, function() {\n      eventBus.off('elements.changed', cancel);\n    });\n  });\n\n  // API //////////\n\n  this.start = function(event, elements, context) {\n    if (!isArray(elements)) {\n      elements = [ elements ];\n    }\n\n    var shape = find(elements, function(element) {\n      return !isConnection(element);\n    });\n\n    if (!shape) {\n\n      // at least one shape is required\n      return;\n    }\n\n    context = assign({\n      elements: elements,\n      hints: {},\n      shape: shape\n    }, context || {});\n\n    // make sure each element has x and y\n    forEach(elements, function(element) {\n      if (!isNumber(element.x)) {\n        element.x = 0;\n      }\n\n      if (!isNumber(element.y)) {\n        element.y = 0;\n      }\n    });\n\n    var visibleElements = filter(elements, function(element) {\n      return !element.hidden;\n    });\n\n    var bbox = getBBox(visibleElements);\n\n    // center elements around cursor\n    forEach(elements, function(element) {\n      if (isConnection(element)) {\n        element.waypoints = map(element.waypoints, function(waypoint) {\n          return {\n            x: waypoint.x - bbox.x - bbox.width / 2,\n            y: waypoint.y - bbox.y - bbox.height / 2\n          };\n        });\n      }\n\n      assign(element, {\n        x: element.x - bbox.x - bbox.width / 2,\n        y: element.y - bbox.y - bbox.height / 2\n      });\n    });\n\n    dragging.init(event, PREFIX, {\n      cursor: 'grabbing',\n      autoActivate: true,\n      data: {\n        shape: shape,\n        elements: elements,\n        context: context\n      }\n    });\n  };\n}\n\nCreate.$inject = [\n  'canvas',\n  'dragging',\n  'eventBus',\n  'modeling',\n  'rules'\n];\n\n// helpers //////////\n\nfunction ensureConstraints(event) {\n  var context = event.context,\n      createConstraints = context.createConstraints;\n\n  if (!createConstraints) {\n    return;\n  }\n\n  if (createConstraints.left) {\n    event.x = Math.max(event.x, createConstraints.left);\n  }\n\n  if (createConstraints.right) {\n    event.x = Math.min(event.x, createConstraints.right);\n  }\n\n  if (createConstraints.top) {\n    event.y = Math.max(event.y, createConstraints.top);\n  }\n\n  if (createConstraints.bottom) {\n    event.y = Math.min(event.y, createConstraints.bottom);\n  }\n}\n\nfunction isConnection(element) {\n  return !!element.waypoints;\n}\n\nfunction isSingleShape(elements) {\n  return elements && elements.length === 1 && !isConnection(elements[0]);\n}\n\nfunction isLabel(element) {\n  return !!element.labelTarget;\n}\n","import {\r\n  translate\r\n} from '../../util/SvgTransformUtil';\r\n\r\nimport { getVisual } from '../../util/GraphicsUtil';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nvar LOW_PRIORITY = 750;\r\n\r\n\r\nexport default function CreatePreview(\r\n    canvas,\r\n    eventBus,\r\n    graphicsFactory,\r\n    previewSupport,\r\n    styles\r\n) {\r\n  function createDragGroup(elements) {\r\n    var dragGroup = svgCreate('g');\r\n\r\n    svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\r\n\r\n    var childrenGfx = svgCreate('g');\r\n\r\n    elements.forEach(function(element) {\r\n\r\n      // create graphics\r\n      var gfx;\r\n\r\n      if (element.hidden) {\r\n        return;\r\n      }\r\n\r\n      if (element.waypoints) {\r\n        gfx = graphicsFactory._createContainer('connection', childrenGfx);\r\n\r\n        graphicsFactory.drawConnection(getVisual(gfx), element);\r\n      } else {\r\n        gfx = graphicsFactory._createContainer('shape', childrenGfx);\r\n\r\n        graphicsFactory.drawShape(getVisual(gfx), element);\r\n\r\n        translate(gfx, element.x, element.y);\r\n      }\r\n\r\n      // add preview\r\n      previewSupport.addDragger(element, dragGroup, gfx);\r\n    });\r\n\r\n    return dragGroup;\r\n  }\r\n\r\n  eventBus.on('create.move', LOW_PRIORITY, function(event) {\r\n\r\n    var hover = event.hover,\r\n        context = event.context,\r\n        elements = context.elements,\r\n        dragGroup = context.dragGroup;\r\n\r\n    // lazily create previews\r\n    if (!dragGroup) {\r\n      dragGroup = context.dragGroup = createDragGroup(elements);\r\n    }\r\n\r\n    var activeLayer;\r\n\r\n    if (hover) {\r\n      if (!dragGroup.parentNode) {\r\n        activeLayer = canvas.getActiveLayer();\r\n\r\n        svgAppend(activeLayer, dragGroup);\r\n      }\r\n\r\n      translate(dragGroup, event.x, event.y);\r\n    } else {\r\n      svgRemove(dragGroup);\r\n    }\r\n  });\r\n\r\n  eventBus.on('create.cleanup', function(event) {\r\n    var context = event.context,\r\n        dragGroup = context.dragGroup;\r\n\r\n    if (dragGroup) {\r\n      svgRemove(dragGroup);\r\n    }\r\n  });\r\n}\r\n\r\nCreatePreview.$inject = [\r\n  'canvas',\r\n  'eventBus',\r\n  'graphicsFactory',\r\n  'previewSupport',\r\n  'styles'\r\n];\r\n","import DraggingModule from '../dragging';\nimport PreviewSupportModule from '../preview-support';\nimport RulesModule from '../rules';\nimport SelectionModule from '../selection';\n\nimport Create from './Create';\nimport CreatePreview from './CreatePreview';\n\n\nexport default {\n  __depends__: [\n    DraggingModule,\n    PreviewSupportModule,\n    RulesModule,\n    SelectionModule\n  ],\n  __init__: [\n    'create',\n    'createPreview'\n  ],\n  create: [ 'type', Create ],\n  createPreview: [ 'type', CreatePreview ]\n};\n","import {\n  sortBy,\n  forEach,\n  filter\n} from 'min-dash';\n\nvar AXIS_DIMENSIONS = {\n  horizontal: [ 'x', 'width' ],\n  vertical: [ 'y', 'height' ]\n};\n\nvar THRESHOLD = 5;\n\n\n/**\n * Groups and filters elements and then trigger even distribution.\n */\nexport default function DistributeElements(modeling) {\n  this._modeling = modeling;\n\n  this._filters = [];\n\n  // register filter for filtering big elements\n  this.registerFilter(function(elements, axis, dimension) {\n    var elementsSize = 0,\n        numOfShapes = 0,\n        avgDimension;\n\n    forEach(elements, function(element) {\n      if (element.waypoints || element.labelTarget) {\n        return;\n      }\n\n      elementsSize += element[dimension];\n\n      numOfShapes += 1;\n    });\n\n    avgDimension = Math.round(elementsSize / numOfShapes);\n\n    return filter(elements, function(element) {\n      return element[dimension] < (avgDimension + 50);\n    });\n  });\n\n}\n\nDistributeElements.$inject = [ 'modeling' ];\n\n\n/**\n * Registers filter functions that allow external parties to filter\n * out certain elements.\n *\n * @param  {Function} filterFn\n */\nDistributeElements.prototype.registerFilter = function(filterFn) {\n  if (typeof filterFn !== 'function') {\n    throw new Error('the filter has to be a function');\n  }\n\n  this._filters.push(filterFn);\n};\n\n/**\n * Distributes the elements with a given orientation\n *\n * @param  {Array} elements\n * @param  {string} orientation\n */\nDistributeElements.prototype.trigger = function(elements, orientation) {\n  var modeling = this._modeling;\n\n  var groups,\n      distributableElements;\n\n  if (elements.length < 3) {\n    return;\n  }\n\n  this._setOrientation(orientation);\n\n  distributableElements = this._filterElements(elements);\n\n  groups = this._createGroups(distributableElements);\n\n  // nothing to distribute\n  if (groups.length <= 2) {\n    return;\n  }\n\n  modeling.distributeElements(groups, this._axis, this._dimension);\n\n  return groups;\n};\n\n/**\n * Filters the elements with provided filters by external parties\n *\n * @param  {Array[Elements]} elements\n *\n * @return {Array[Elements]}\n */\nDistributeElements.prototype._filterElements = function(elements) {\n  var filters = this._filters,\n      axis = this._axis,\n      dimension = this._dimension,\n      distributableElements = [].concat(elements);\n\n  if (!filters.length) {\n    return elements;\n  }\n\n  forEach(filters, function(filterFn) {\n    distributableElements = filterFn(distributableElements, axis, dimension);\n  });\n\n  return distributableElements;\n};\n\n\n/**\n * Create range (min, max) groups. Also tries to group elements\n * together that share the same range.\n *\n * @example\n * \tvar distributableElements = [\n * \t\t{\n * \t\t\trange: {\n * \t\t\t\tmin: 100,\n * \t\t\t\tmax: 200\n * \t\t\t},\n * \t\t\telements: [ { id: 'shape1', .. }]\n * \t\t}\n * \t]\n *\n * @param  {Array} elements\n *\n * @return {Array[Objects]}\n */\nDistributeElements.prototype._createGroups = function(elements) {\n  var rangeGroups = [],\n      self = this,\n      axis = this._axis,\n      dimension = this._dimension;\n\n  if (!axis) {\n    throw new Error('must have a defined \"axis\" and \"dimension\"');\n  }\n\n  // sort by 'left->right' or 'top->bottom'\n  var sortedElements = sortBy(elements, axis);\n\n  forEach(sortedElements, function(element, idx) {\n    var elementRange = self._findRange(element, axis, dimension),\n        range;\n\n    var previous = rangeGroups[rangeGroups.length - 1];\n\n    if (previous && self._hasIntersection(previous.range, elementRange)) {\n      rangeGroups[rangeGroups.length - 1].elements.push(element);\n    } else {\n      range = { range: elementRange, elements: [ element ] };\n\n      rangeGroups.push(range);\n    }\n  });\n\n  return rangeGroups;\n};\n\n\n/**\n * Maps a direction to the according axis and dimension\n *\n * @param  {string} direction 'horizontal' or 'vertical'\n */\nDistributeElements.prototype._setOrientation = function(direction) {\n  var orientation = AXIS_DIMENSIONS[direction];\n\n  this._axis = orientation[0];\n  this._dimension = orientation[1];\n};\n\n\n/**\n * Checks if the two ranges intercept each other\n *\n * @param  {Object} rangeA {min, max}\n * @param  {Object} rangeB {min, max}\n *\n * @return {boolean}\n */\nDistributeElements.prototype._hasIntersection = function(rangeA, rangeB) {\n  return Math.max(rangeA.min, rangeA.max) >= Math.min(rangeB.min, rangeB.max) &&\n         Math.min(rangeA.min, rangeA.max) <= Math.max(rangeB.min, rangeB.max);\n};\n\n\n/**\n * Returns the min and max values for an element\n *\n * @param  {Bounds} element\n * @param  {string} axis\n * @param  {string} dimension\n *\n * @return {{ min: number, max: number }}\n */\nDistributeElements.prototype._findRange = function(element) {\n  var axis = element[this._axis],\n      dimension = element[this._dimension];\n\n  return {\n    min: axis + THRESHOLD,\n    max: axis + dimension - THRESHOLD\n  };\n};\n","import DistributeElements from './DistributeElements';\n\nexport default {\n  __init__: [ 'distributeElements' ],\n  distributeElements: [ 'type', DistributeElements ]\n};\n","var round = Math.round;\n\nimport { assign } from 'min-dash';\n\nimport {\n  event as domEvent\n} from 'min-dom';\n\nimport {\n  getOriginal,\n  toPoint,\n  stopPropagation\n} from '../../util/Event';\n\nimport {\n  set as cursorSet,\n  unset as cursorUnset\n} from '../../util/Cursor';\n\nimport {\n  install as installClickTrap\n} from '../../util/ClickTrap';\n\nimport {\n  delta as deltaPos\n} from '../../util/PositionUtil';\n\nvar DRAG_ACTIVE_CLS = 'djs-drag-active';\n\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nfunction isTouchEvent(event) {\n\n  // check for TouchEvent being available first\n  // (i.e. not available on desktop Firefox)\n  return typeof TouchEvent !== 'undefined' && event instanceof TouchEvent;\n}\n\nfunction getLength(point) {\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n}\n\n/**\n * A helper that fires canvas localized drag events and realizes\n * the general \"drag-and-drop\" look and feel.\n *\n * Calling {@link Dragging#activate} activates dragging on a canvas.\n *\n * It provides the following:\n *\n *   * emits life cycle events, namespaced with a prefix assigned\n *     during dragging activation\n *   * sets and restores the cursor\n *   * sets and restores the selection if elements still exist\n *   * ensures there can be only one drag operation active at a time\n *\n * Dragging may be canceled manually by calling {@link Dragging#cancel}\n * or by pressing ESC.\n *\n *\n * ## Life-cycle events\n *\n * Dragging can be in three different states, off, initialized\n * and active.\n *\n * (1) off: no dragging operation is in progress\n * (2) initialized: a new drag operation got initialized but not yet\n *                  started (i.e. because of no initial move)\n * (3) started: dragging is in progress\n *\n * Eventually dragging will be off again after a drag operation has\n * been ended or canceled via user click or ESC key press.\n *\n * To indicate transitions between these states dragging emits generic\n * life-cycle events with the `drag.` prefix _and_ events namespaced\n * to a prefix choosen by a user during drag initialization.\n *\n * The following events are emitted (appropriately prefixed) via\n * the {@link EventBus}.\n *\n * * `init`\n * * `start`\n * * `move`\n * * `end`\n * * `ended` (dragging already in off state)\n * * `cancel` (only if previously started)\n * * `canceled` (dragging already in off state, only if previously started)\n * * `cleanup`\n *\n *\n * @example\n *\n * function MyDragComponent(eventBus, dragging) {\n *\n *   eventBus.on('mydrag.start', function(event) {\n *     console.log('yes, we start dragging');\n *   });\n *\n *   eventBus.on('mydrag.move', function(event) {\n *     console.log('canvas local coordinates', event.x, event.y, event.dx, event.dy);\n *\n *     // local drag data is passed with the event\n *     event.context.foo; // \"BAR\"\n *\n *     // the original mouse event, too\n *     event.originalEvent; // MouseEvent(...)\n *   });\n *\n *   eventBus.on('element.click', function(event) {\n *     dragging.init(event, 'mydrag', {\n *       cursor: 'grabbing',\n *       data: {\n *         context: {\n *           foo: \"BAR\"\n *         }\n *       }\n *     });\n *   });\n * }\n */\nexport default function Dragging(eventBus, canvas, selection, elementRegistry) {\n\n  var defaultOptions = {\n    threshold: 5,\n    trapClick: true\n  };\n\n  // the currently active drag operation\n  // dragging is active as soon as this context exists.\n  //\n  // it is visually _active_ only when a context.active flag is set to true.\n  var context;\n\n  /* convert a global event into local coordinates */\n  function toLocalPoint(globalPosition) {\n\n    var viewbox = canvas.viewbox();\n\n    var clientRect = canvas._container.getBoundingClientRect();\n\n    return {\n      x: viewbox.x + (globalPosition.x - clientRect.left) / viewbox.scale,\n      y: viewbox.y + (globalPosition.y - clientRect.top) / viewbox.scale\n    };\n  }\n\n  // helpers\n\n  function fire(type, dragContext) {\n    dragContext = dragContext || context;\n\n    var event = eventBus.createEvent(\n      assign(\n        {},\n        dragContext.payload,\n        dragContext.data,\n        { isTouch: dragContext.isTouch }\n      )\n    );\n\n    // default integration\n    if (eventBus.fire('drag.' + type, event) === false) {\n      return false;\n    }\n\n    return eventBus.fire(dragContext.prefix + '.' + type, event);\n  }\n\n  function restoreSelection(previousSelection) {\n    var existingSelection = previousSelection.filter(function(element) {\n      return elementRegistry.get(element.id);\n    });\n\n    existingSelection.length && selection.select(existingSelection);\n  }\n\n  // event listeners\n\n  function move(event, activate) {\n    var payload = context.payload,\n        displacement = context.displacement;\n\n    var globalStart = context.globalStart,\n        globalCurrent = toPoint(event),\n        globalDelta = deltaPos(globalCurrent, globalStart);\n\n    var localStart = context.localStart,\n        localCurrent = toLocalPoint(globalCurrent),\n        localDelta = deltaPos(localCurrent, localStart);\n\n\n    // activate context explicitly or once threshold is reached\n    if (!context.active && (activate || getLength(globalDelta) > context.threshold)) {\n\n      // fire start event with original\n      // starting coordinates\n\n      assign(payload, {\n        x: round(localStart.x + displacement.x),\n        y: round(localStart.y + displacement.y),\n        dx: 0,\n        dy: 0\n      }, { originalEvent: event });\n\n      if (false === fire('start')) {\n        return cancel();\n      }\n\n      context.active = true;\n\n      // unset selection and remember old selection\n      // the previous (old) selection will always passed\n      // with the event via the event.previousSelection property\n      if (!context.keepSelection) {\n        payload.previousSelection = selection.get();\n        selection.select(null);\n      }\n\n      // allow custom cursor\n      if (context.cursor) {\n        cursorSet(context.cursor);\n      }\n\n      // indicate dragging via marker on root element\n      canvas.addMarker(canvas.getRootElement(), DRAG_ACTIVE_CLS);\n    }\n\n    stopPropagation(event);\n\n    if (context.active) {\n\n      // update payload with actual coordinates\n      assign(payload, {\n        x: round(localCurrent.x + displacement.x),\n        y: round(localCurrent.y + displacement.y),\n        dx: round(localDelta.x),\n        dy: round(localDelta.y)\n      }, { originalEvent: event });\n\n      // emit move event\n      fire('move');\n    }\n  }\n\n  function end(event) {\n    var previousContext,\n        returnValue = true;\n\n    if (context.active) {\n\n      if (event) {\n        context.payload.originalEvent = event;\n\n        // suppress original event (click, ...)\n        // because we just ended a drag operation\n        stopPropagation(event);\n      }\n\n      // implementations may stop restoring the\n      // original state (selections, ...) by preventing the\n      // end events default action\n      returnValue = fire('end');\n    }\n\n    if (returnValue === false) {\n      fire('rejected');\n    }\n\n    previousContext = cleanup(returnValue !== true);\n\n    // last event to be fired when all drag operations are done\n    // at this point in time no drag operation is in progress anymore\n    fire('ended', previousContext);\n  }\n\n\n  // cancel active drag operation if the user presses\n  // the ESC key on the keyboard\n\n  function checkCancel(event) {\n\n    if (event.which === 27) {\n      preventDefault(event);\n\n      cancel();\n    }\n  }\n\n\n  // prevent ghost click that might occur after a finished\n  // drag and drop session\n\n  function trapClickAndEnd(event) {\n\n    var untrap;\n\n    // trap the click in case we are part of an active\n    // drag operation. This will effectively prevent\n    // the ghost click that cannot be canceled otherwise.\n    if (context.active) {\n\n      untrap = installClickTrap(eventBus);\n\n      // remove trap after minimal delay\n      setTimeout(untrap, 400);\n\n      // prevent default action (click)\n      preventDefault(event);\n    }\n\n    end(event);\n  }\n\n  function trapTouch(event) {\n    move(event);\n  }\n\n  // update the drag events hover (djs.model.Base) and hoverGfx (Snap<SVGElement>)\n  // properties during hover and out and fire {prefix}.hover and {prefix}.out properties\n  // respectively\n\n  function hover(event) {\n    var payload = context.payload;\n\n    payload.hoverGfx = event.gfx;\n    payload.hover = event.element;\n\n    fire('hover');\n  }\n\n  function out(event) {\n    fire('out');\n\n    var payload = context.payload;\n\n    payload.hoverGfx = null;\n    payload.hover = null;\n  }\n\n\n  // life-cycle methods\n\n  function cancel(restore) {\n    var previousContext;\n\n    if (!context) {\n      return;\n    }\n\n    var wasActive = context.active;\n\n    if (wasActive) {\n      fire('cancel');\n    }\n\n    previousContext = cleanup(restore);\n\n    if (wasActive) {\n\n      // last event to be fired when all drag operations are done\n      // at this point in time no drag operation is in progress anymore\n      fire('canceled', previousContext);\n    }\n  }\n\n  function cleanup(restore) {\n    var previousContext,\n        endDrag;\n\n    fire('cleanup');\n\n    // reset cursor\n    cursorUnset();\n\n    if (context.trapClick) {\n      endDrag = trapClickAndEnd;\n    } else {\n      endDrag = end;\n    }\n\n    // reset dom listeners\n    domEvent.unbind(document, 'mousemove', move);\n\n    domEvent.unbind(document, 'dragstart', preventDefault);\n    domEvent.unbind(document, 'selectstart', preventDefault);\n\n    domEvent.unbind(document, 'mousedown', endDrag, true);\n    domEvent.unbind(document, 'mouseup', endDrag, true);\n\n    domEvent.unbind(document, 'keyup', checkCancel);\n\n    domEvent.unbind(document, 'touchstart', trapTouch, true);\n    domEvent.unbind(document, 'touchcancel', cancel, true);\n    domEvent.unbind(document, 'touchmove', move, true);\n    domEvent.unbind(document, 'touchend', end, true);\n\n    eventBus.off('element.hover', hover);\n    eventBus.off('element.out', out);\n\n    // remove drag marker on root element\n    canvas.removeMarker(canvas.getRootElement(), DRAG_ACTIVE_CLS);\n\n    // restore selection, unless it has changed\n    var previousSelection = context.payload.previousSelection;\n\n    if (restore !== false && previousSelection && !selection.get().length) {\n      restoreSelection(previousSelection);\n    }\n\n    previousContext = context;\n\n    context = null;\n\n    return previousContext;\n  }\n\n  /**\n   * Initialize a drag operation.\n   *\n   * If `localPosition` is given, drag events will be emitted\n   * relative to it.\n   *\n   * @param {MouseEvent|TouchEvent} [event]\n   * @param {Point} [localPosition] actual diagram local position this drag operation should start at\n   * @param {string} prefix\n   * @param {Object} [options]\n   */\n  function init(event, relativeTo, prefix, options) {\n\n    // only one drag operation may be active, at a time\n    if (context) {\n      cancel(false);\n    }\n\n    if (typeof relativeTo === 'string') {\n      options = prefix;\n      prefix = relativeTo;\n      relativeTo = null;\n    }\n\n    options = assign({}, defaultOptions, options || {});\n\n    var data = options.data || {},\n        originalEvent,\n        globalStart,\n        localStart,\n        endDrag,\n        isTouch;\n\n    if (options.trapClick) {\n      endDrag = trapClickAndEnd;\n    } else {\n      endDrag = end;\n    }\n\n    if (event) {\n      originalEvent = getOriginal(event) || event;\n      globalStart = toPoint(event);\n\n      stopPropagation(event);\n\n      // prevent default browser dragging behavior\n      if (originalEvent.type === 'dragstart') {\n        preventDefault(originalEvent);\n      }\n    } else {\n      originalEvent = null;\n      globalStart = { x: 0, y: 0 };\n    }\n\n    localStart = toLocalPoint(globalStart);\n\n    if (!relativeTo) {\n      relativeTo = localStart;\n    }\n\n    isTouch = isTouchEvent(originalEvent);\n\n    context = assign({\n      prefix: prefix,\n      data: data,\n      payload: {},\n      globalStart: globalStart,\n      displacement: deltaPos(relativeTo, localStart),\n      localStart: localStart,\n      isTouch: isTouch\n    }, options);\n\n    // skip dom registration if trigger\n    // is set to manual (during testing)\n    if (!options.manual) {\n\n      // add dom listeners\n\n      if (isTouch) {\n        domEvent.bind(document, 'touchstart', trapTouch, true);\n        domEvent.bind(document, 'touchcancel', cancel, true);\n        domEvent.bind(document, 'touchmove', move, true);\n        domEvent.bind(document, 'touchend', end, true);\n      } else {\n\n        // assume we use the mouse to interact per default\n        domEvent.bind(document, 'mousemove', move);\n\n        // prevent default browser drag and text selection behavior\n        domEvent.bind(document, 'dragstart', preventDefault);\n        domEvent.bind(document, 'selectstart', preventDefault);\n\n        domEvent.bind(document, 'mousedown', endDrag, true);\n        domEvent.bind(document, 'mouseup', endDrag, true);\n      }\n\n      domEvent.bind(document, 'keyup', checkCancel);\n\n      eventBus.on('element.hover', hover);\n      eventBus.on('element.out', out);\n    }\n\n    fire('init');\n\n    if (options.autoActivate) {\n      move(event, true);\n    }\n  }\n\n  // cancel on diagram destruction\n  eventBus.on('diagram.destroy', cancel);\n\n\n  // API\n\n  this.init = init;\n  this.move = move;\n  this.hover = hover;\n  this.out = out;\n  this.end = end;\n\n  this.cancel = cancel;\n\n  // for introspection\n\n  this.context = function() {\n    return context;\n  };\n\n  this.setOptions = function(options) {\n    assign(defaultOptions, options);\n  };\n}\n\nDragging.$inject = [\n  'eventBus',\n  'canvas',\n  'selection',\n  'elementRegistry'\n];\n","import HoverFixModule from '../hover-fix';\nimport SelectionModule from '../selection';\n\nimport Dragging from './Dragging';\n\n\nexport default {\n  __depends__: [\n    HoverFixModule,\n    SelectionModule,\n  ],\n  dragging: [ 'type', Dragging ],\n};","import {\n  forEach,\n  isArray\n} from 'min-dash';\n\nvar NOT_REGISTERED_ERROR = 'is not a registered action',\n    IS_REGISTERED_ERROR = 'is already registered';\n\n\n/**\n * An interface that provides access to modeling actions by decoupling\n * the one who requests the action to be triggered and the trigger itself.\n *\n * It's possible to add new actions by registering them with ´registerAction´\n * and likewise unregister existing ones with ´unregisterAction´.\n *\n *\n * ## Life-Cycle and configuration\n *\n * The editor actions will wait for diagram initialization before\n * registering default actions _and_ firing an `editorActions.init` event.\n *\n * Interested parties may listen to the `editorActions.init` event with\n * low priority to check, which actions got registered. Other components\n * may use the event to register their own actions via `registerAction`.\n *\n * @param {EventBus} eventBus\n * @param {Injector} injector\n */\nexport default function EditorActions(eventBus, injector) {\n\n  // initialize actions\n  this._actions = {};\n\n  var self = this;\n\n  eventBus.on('diagram.init', function() {\n\n    // all diagram modules got loaded; check which ones\n    // are available and register the respective default actions\n    self._registerDefaultActions(injector);\n\n    // ask interested parties to register available editor\n    // actions on diagram initialization\n    eventBus.fire('editorActions.init', {\n      editorActions: self\n    });\n  });\n\n}\n\nEditorActions.$inject = [\n  'eventBus',\n  'injector'\n];\n\n/**\n * Register default actions.\n *\n * @param {Injector} injector\n */\nEditorActions.prototype._registerDefaultActions = function(injector) {\n\n  // (1) retrieve optional components to integrate with\n\n  var commandStack = injector.get('commandStack', false);\n  var modeling = injector.get('modeling', false);\n  var selection = injector.get('selection', false);\n  var zoomScroll = injector.get('zoomScroll', false);\n  var copyPaste = injector.get('copyPaste', false);\n  var canvas = injector.get('canvas', false);\n  var rules = injector.get('rules', false);\n  var keyboardMove = injector.get('keyboardMove', false);\n  var keyboardMoveSelection = injector.get('keyboardMoveSelection', false);\n\n  // (2) check components and register actions\n\n  if (commandStack) {\n    this.register('undo', function() {\n      commandStack.undo();\n    });\n\n    this.register('redo', function() {\n      commandStack.redo();\n    });\n  }\n\n  if (copyPaste && selection) {\n    this.register('copy', function() {\n      var selectedElements = selection.get();\n\n      copyPaste.copy(selectedElements);\n    });\n  }\n\n  if (copyPaste) {\n    this.register('paste', function() {\n      copyPaste.paste();\n    });\n  }\n\n  if (zoomScroll) {\n    this.register('stepZoom', function(opts) {\n      zoomScroll.stepZoom(opts.value);\n    });\n  }\n\n  if (canvas) {\n    this.register('zoom', function(opts) {\n      canvas.zoom(opts.value);\n    });\n  }\n\n  if (modeling && selection && rules) {\n    this.register('removeSelection', function() {\n\n      var selectedElements = selection.get();\n\n      if (!selectedElements.length) {\n        return;\n      }\n\n      var allowed = rules.allowed('elements.delete', { elements: selectedElements }),\n          removableElements;\n\n      if (allowed === false) {\n        return;\n      }\n      else if (isArray(allowed)) {\n        removableElements = allowed;\n      }\n      else {\n        removableElements = selectedElements;\n      }\n\n      if (removableElements.length) {\n        modeling.removeElements(removableElements.slice());\n      }\n    });\n  }\n\n  if (keyboardMove) {\n    this.register('moveCanvas', function(opts) {\n      keyboardMove.moveCanvas(opts);\n    });\n  }\n\n  if (keyboardMoveSelection) {\n    this.register('moveSelection', function(opts) {\n      keyboardMoveSelection.moveSelection(opts.direction, opts.accelerated);\n    });\n  }\n\n};\n\n\n/**\n * Triggers a registered action\n *\n * @param  {string} action\n * @param  {Object} opts\n *\n * @return {Unknown} Returns what the registered listener returns\n */\nEditorActions.prototype.trigger = function(action, opts) {\n  if (!this._actions[action]) {\n    throw error(action, NOT_REGISTERED_ERROR);\n  }\n\n  return this._actions[action](opts);\n};\n\n\n/**\n * Registers a collections of actions.\n * The key of the object will be the name of the action.\n *\n * @example\n * ´´´\n * var actions = {\n *   spaceTool: function() {\n *     spaceTool.activateSelection();\n *   },\n *   lassoTool: function() {\n *     lassoTool.activateSelection();\n *   }\n * ];\n *\n * editorActions.register(actions);\n *\n * editorActions.isRegistered('spaceTool'); // true\n * ´´´\n *\n * @param  {Object} actions\n */\nEditorActions.prototype.register = function(actions, listener) {\n  var self = this;\n\n  if (typeof actions === 'string') {\n    return this._registerAction(actions, listener);\n  }\n\n  forEach(actions, function(listener, action) {\n    self._registerAction(action, listener);\n  });\n};\n\n/**\n * Registers a listener to an action key\n *\n * @param  {string} action\n * @param  {Function} listener\n */\nEditorActions.prototype._registerAction = function(action, listener) {\n  if (this.isRegistered(action)) {\n    throw error(action, IS_REGISTERED_ERROR);\n  }\n\n  this._actions[action] = listener;\n};\n\n/**\n * Unregister an existing action\n *\n * @param {string} action\n */\nEditorActions.prototype.unregister = function(action) {\n  if (!this.isRegistered(action)) {\n    throw error(action, NOT_REGISTERED_ERROR);\n  }\n\n  this._actions[action] = undefined;\n};\n\n/**\n * Returns the number of actions that are currently registered\n *\n * @return {number}\n */\nEditorActions.prototype.getActions = function() {\n  return Object.keys(this._actions);\n};\n\n/**\n * Checks wether the given action is registered\n *\n * @param {string} action\n *\n * @return {boolean}\n */\nEditorActions.prototype.isRegistered = function(action) {\n  return !!this._actions[action];\n};\n\n\nfunction error(action, message) {\n  return new Error(action + ' ' + message);\n}\n","import EditorActions from './EditorActions';\n\nexport default {\n  __init__: [ 'editorActions' ],\n  editorActions: [ 'type', EditorActions ]\n};\n","var MARKER_OK = 'connect-ok',\n    MARKER_NOT_OK = 'connect-not-ok';\n\n/**\n * @class\n * @constructor\n *\n * @param {EventBus} eventBus\n * @param {Dragging} dragging\n * @param {Connect} connect\n * @param {Canvas} canvas\n * @param {ToolManager} toolManager\n * @param {Rules} rules\n * @param {Mouse} mouse\n */\nexport default function GlobalConnect(\n    eventBus, dragging, connect,\n    canvas, toolManager, rules,\n    mouse) {\n\n  var self = this;\n\n  this._dragging = dragging;\n  this._rules = rules;\n  this._mouse = mouse;\n\n  toolManager.registerTool('global-connect', {\n    tool: 'global-connect',\n    dragging: 'global-connect.drag'\n  });\n\n  eventBus.on('global-connect.hover', function(event) {\n    var context = event.context,\n        startTarget = event.hover;\n\n    var canStartConnect = context.canStartConnect = self.canStartConnect(startTarget);\n\n    // simply ignore hover\n    if (canStartConnect === null) {\n      return;\n    }\n\n    context.startTarget = startTarget;\n\n    canvas.addMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\n  });\n\n\n  eventBus.on([ 'global-connect.out', 'global-connect.cleanup' ], function(event) {\n    var startTarget = event.context.startTarget,\n        canStartConnect = event.context.canStartConnect;\n\n    if (startTarget) {\n      canvas.removeMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\n    }\n  });\n\n\n  eventBus.on([ 'global-connect.ended' ], function(event) {\n    var context = event.context,\n        startTarget = context.startTarget,\n        startPosition = {\n          x: event.x,\n          y: event.y\n        };\n\n    var canStartConnect = self.canStartConnect(startTarget);\n\n    if (!canStartConnect) {\n      return;\n    }\n\n    eventBus.once('element.out', function() {\n      eventBus.once([ 'connect.ended', 'connect.canceled' ], function() {\n        eventBus.fire('global-connect.drag.ended');\n      });\n\n      connect.start(null, startTarget, startPosition);\n    });\n\n    return false;\n  });\n}\n\nGlobalConnect.$inject = [\n  'eventBus',\n  'dragging',\n  'connect',\n  'canvas',\n  'toolManager',\n  'rules',\n  'mouse'\n];\n\n/**\n * Initiates tool activity.\n */\nGlobalConnect.prototype.start = function(event, autoActivate) {\n  this._dragging.init(event, 'global-connect', {\n    autoActivate: autoActivate,\n    trapClick: false,\n    data: {\n      context: {}\n    }\n  });\n};\n\nGlobalConnect.prototype.toggle = function() {\n\n  if (this.isActive()) {\n    return this._dragging.cancel();\n  }\n\n  var mouseEvent = this._mouse.getLastMoveEvent();\n\n  return this.start(mouseEvent, !!mouseEvent);\n};\n\nGlobalConnect.prototype.isActive = function() {\n  var context = this._dragging.context();\n\n  return context && /^global-connect/.test(context.prefix);\n};\n\n/**\n * Check if source shape can initiate connection.\n *\n * @param  {Shape} startTarget\n * @return {boolean}\n */\nGlobalConnect.prototype.canStartConnect = function(startTarget) {\n  return this._rules.allowed('connection.start', { source: startTarget });\n};\n","import ConnectModule from '../connect';\nimport RulesModule from '../rules';\nimport DraggingModule from '../dragging';\nimport ToolManagerModule from '../tool-manager';\nimport MouseModule from '../mouse';\n\nimport GlobalConnect from './GlobalConnect';\n\nexport default {\n  __depends__: [\n    ConnectModule,\n    RulesModule,\n    DraggingModule,\n    ToolManagerModule,\n    MouseModule\n  ],\n  globalConnect: [ 'type', GlobalConnect ]\n};\n","import {\r\n  setSnapped,\r\n  isSnapped\r\n} from '../snapping/SnapUtil';\r\n\r\nimport { isCmd } from '../keyboard/KeyboardUtil';\r\n\r\nimport {\r\n  assign,\r\n  isNumber\r\n} from 'min-dash';\r\n\r\nimport {\r\n  SPACING,\r\n  quantize\r\n} from './GridUtil';\r\n\r\nvar LOWER_PRIORITY = 1200;\r\nvar LOW_PRIORITY = 800;\r\n\r\n/**\r\n * Basic grid snapping that covers connecting, creating, moving, resizing shapes, moving bendpoints\r\n * and connection segments.\r\n */\r\nexport default function GridSnapping(elementRegistry, eventBus, config) {\r\n\r\n  var active = !config || config.active !== false;\r\n\r\n  this._eventBus = eventBus;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('diagram.init', LOW_PRIORITY, function() {\r\n    self.setActive(active);\r\n  });\r\n\r\n  eventBus.on([\r\n    'create.move',\r\n    'create.end',\r\n    'bendpoint.move.move',\r\n    'bendpoint.move.end',\r\n    'connect.move',\r\n    'connect.end',\r\n    'connectionSegment.move.move',\r\n    'connectionSegment.move.end',\r\n    'resize.move',\r\n    'resize.end',\r\n    'shape.move.move',\r\n    'shape.move.end'\r\n  ], LOWER_PRIORITY, function(event) {\r\n    var originalEvent = event.originalEvent;\r\n\r\n    if (!self.active || (originalEvent && isCmd(originalEvent))) {\r\n      return;\r\n    }\r\n\r\n    var context = event.context,\r\n        gridSnappingContext = context.gridSnappingContext;\r\n\r\n    if (!gridSnappingContext) {\r\n      gridSnappingContext = context.gridSnappingContext = {};\r\n    }\r\n\r\n    [ 'x', 'y' ].forEach(function(axis) {\r\n      var options = {};\r\n\r\n      // allow snapping with offset\r\n      var snapOffset = getSnapOffset(event, axis, elementRegistry);\r\n\r\n      if (snapOffset) {\r\n        options.offset = snapOffset;\r\n      }\r\n\r\n      // allow snapping with min and max\r\n      var snapConstraints = getSnapConstraints(event, axis);\r\n\r\n      if (snapConstraints) {\r\n        assign(options, snapConstraints);\r\n      }\r\n\r\n      if (!isSnapped(event, axis)) {\r\n        self.snapEvent(event, axis, options);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Snap an events x or y with optional min, max and offset.\r\n *\r\n * @param {Object} event\r\n * @param {string} axis\r\n * @param {number} [options.min]\r\n * @param {number} [options.max]\r\n * @param {number} [options.offset]\r\n */\r\nGridSnapping.prototype.snapEvent = function(event, axis, options) {\r\n  var snappedValue = this.snapValue(event[ axis ], options);\r\n\r\n  setSnapped(event, axis, snappedValue);\r\n};\r\n\r\n/**\r\n * Expose grid spacing for third parties (i.e. extensions).\r\n *\r\n * @return {number} spacing of grid dots\r\n */\r\nGridSnapping.prototype.getGridSpacing = function() {\r\n  return SPACING;\r\n};\r\n\r\n/**\r\n * Snap value with optional min, max and offset.\r\n *\r\n * @param {number} value\r\n * @param {Object} options\r\n * @param {number} [options.min]\r\n * @param {number} [options.max]\r\n * @param {number} [options.offset]\r\n */\r\nGridSnapping.prototype.snapValue = function(value, options) {\r\n  var offset = 0;\r\n\r\n  if (options && options.offset) {\r\n    offset = options.offset;\r\n  }\r\n\r\n  value += offset;\r\n\r\n  value = quantize(value, SPACING);\r\n\r\n  var min, max;\r\n\r\n  if (options && options.min) {\r\n    min = options.min;\r\n\r\n    if (isNumber(min)) {\r\n      min = quantize(min + offset, SPACING, 'ceil');\r\n\r\n      value = Math.max(value, min);\r\n    }\r\n  }\r\n\r\n  if (options && options.max) {\r\n    max = options.max;\r\n\r\n    if (isNumber(max)) {\r\n      max = quantize(max + offset, SPACING, 'floor');\r\n\r\n      value = Math.min(value, max);\r\n    }\r\n  }\r\n\r\n  value -= offset;\r\n\r\n  return value;\r\n};\r\n\r\nGridSnapping.prototype.isActive = function() {\r\n  return this.active;\r\n};\r\n\r\nGridSnapping.prototype.setActive = function(active) {\r\n  this.active = active;\r\n\r\n  this._eventBus.fire('gridSnapping.toggle', { active: active });\r\n};\r\n\r\nGridSnapping.prototype.toggleActive = function() {\r\n  this.setActive(!this.active);\r\n};\r\n\r\nGridSnapping.$inject = [\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'config.gridSnapping'\r\n];\r\n\r\n// helpers //////////\r\n\r\n/**\r\n * Get minimum and maximum snap constraints.\r\n * Constraints are cached.\r\n *\r\n * @param {Object} event\r\n * @param {Object} event.context\r\n * @param {string} axis\r\n *\r\n * @returns {boolean|Object}\r\n */\r\nfunction getSnapConstraints(event, axis) {\r\n  var context = event.context,\r\n      createConstraints = context.createConstraints,\r\n      resizeConstraints = context.resizeConstraints || {},\r\n      gridSnappingContext = context.gridSnappingContext,\r\n      snapConstraints = gridSnappingContext.snapConstraints;\r\n\r\n  // cache snap constraints\r\n  if (snapConstraints && snapConstraints[ axis ]) {\r\n    return snapConstraints[ axis ];\r\n  }\r\n\r\n  if (!snapConstraints) {\r\n    snapConstraints = gridSnappingContext.snapConstraints = {};\r\n  }\r\n\r\n  if (!snapConstraints[ axis ]) {\r\n    snapConstraints[ axis ] = {};\r\n  }\r\n\r\n  var direction = context.direction;\r\n\r\n  // create\r\n  if (createConstraints) {\r\n    if (isHorizontal(axis)) {\r\n      snapConstraints.x.min = createConstraints.left;\r\n      snapConstraints.x.max = createConstraints.right;\r\n    } else {\r\n      snapConstraints.y.min = createConstraints.top;\r\n      snapConstraints.y.max = createConstraints.bottom;\r\n    }\r\n  }\r\n\r\n  // resize\r\n  var minResizeConstraints = resizeConstraints.min,\r\n      maxResizeConstraints = resizeConstraints.max;\r\n\r\n  if (minResizeConstraints) {\r\n    if (isHorizontal(axis)) {\r\n\r\n      if (isWest(direction)) {\r\n        snapConstraints.x.max = minResizeConstraints.left;\r\n      } else {\r\n        snapConstraints.x.min = minResizeConstraints.right;\r\n      }\r\n\r\n    } else {\r\n\r\n      if (isNorth(direction)) {\r\n        snapConstraints.y.max = minResizeConstraints.top;\r\n      } else {\r\n        snapConstraints.y.min = minResizeConstraints.bottom;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  if (maxResizeConstraints) {\r\n    if (isHorizontal(axis)) {\r\n\r\n      if (isWest(direction)) {\r\n        snapConstraints.x.min = maxResizeConstraints.left;\r\n      } else {\r\n        snapConstraints.x.max = maxResizeConstraints.right;\r\n      }\r\n\r\n    } else {\r\n\r\n      if (isNorth(direction)) {\r\n        snapConstraints.y.min = maxResizeConstraints.top;\r\n      } else {\r\n        snapConstraints.y.max = maxResizeConstraints.bottom;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  return snapConstraints[ axis ];\r\n}\r\n\r\n/**\r\n * Get snap offset.\r\n * Offset is cached.\r\n *\r\n * @param {Object} event\r\n * @param {string} axis\r\n * @param {ElementRegistry} elementRegistry\r\n *\r\n * @returns {number}\r\n */\r\nfunction getSnapOffset(event, axis, elementRegistry) {\r\n  var context = event.context,\r\n      shape = event.shape,\r\n      gridSnappingContext = context.gridSnappingContext,\r\n      snapLocation = gridSnappingContext.snapLocation,\r\n      snapOffset = gridSnappingContext.snapOffset;\r\n\r\n  // cache snap offset\r\n  if (snapOffset && isNumber(snapOffset[ axis ])) {\r\n    return snapOffset[ axis ];\r\n  }\r\n\r\n  if (!snapOffset) {\r\n    snapOffset = gridSnappingContext.snapOffset = {};\r\n  }\r\n\r\n  if (!isNumber(snapOffset[ axis ])) {\r\n    snapOffset[ axis ] = 0;\r\n  }\r\n\r\n  if (!shape) {\r\n    return snapOffset[ axis ];\r\n  }\r\n\r\n  if (!elementRegistry.get(shape.id)) {\r\n\r\n    if (isHorizontal(axis)) {\r\n      snapOffset[ axis ] += shape[ axis ] + shape.width / 2;\r\n    } else {\r\n      snapOffset[ axis ] += shape[ axis ] + shape.height / 2;\r\n    }\r\n  }\r\n\r\n  if (!snapLocation) {\r\n    return snapOffset[ axis ];\r\n  }\r\n\r\n  if (axis === 'x') {\r\n    if (/left/.test(snapLocation)) {\r\n      snapOffset[ axis ] -= shape.width / 2;\r\n    } else if (/right/.test(snapLocation)) {\r\n      snapOffset[ axis ] += shape.width / 2;\r\n    }\r\n  } else {\r\n    if (/top/.test(snapLocation)) {\r\n      snapOffset[ axis ] -= shape.height / 2;\r\n    } else if (/bottom/.test(snapLocation)) {\r\n      snapOffset[ axis ] += shape.height / 2;\r\n    }\r\n  }\r\n\r\n  return snapOffset[ axis ];\r\n}\r\n\r\nfunction isHorizontal(axis) {\r\n  return axis === 'x';\r\n}\r\n\r\nfunction isNorth(direction) {\r\n  return direction.indexOf('n') !== -1;\r\n}\r\n\r\nfunction isWest(direction) {\r\n  return direction.indexOf('w') !== -1;\r\n}","export var SPACING = 10;\n\nexport function quantize(value, quantum, fn) {\n  if (!fn) {\n    fn = 'round';\n  }\n\n  return Math[ fn ](value / quantum) * quantum;\n}","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from '../../../command/CommandInterceptor';\r\n\r\nimport {\r\n  assign,\r\n  isString\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * Integrates resizing with grid snapping.\r\n */\r\nexport default function ResizeBehavior(eventBus, gridSnapping) {\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this._gridSnapping = gridSnapping;\r\n\r\n  var self = this;\r\n\r\n  this.preExecute('shape.resize', function(event) {\r\n    var context = event.context,\r\n        hints = context.hints || {},\r\n        autoResize = hints.autoResize;\r\n\r\n    if (!autoResize) {\r\n      return;\r\n    }\r\n\r\n    var shape = context.shape,\r\n        newBounds = context.newBounds;\r\n\r\n    if (isString(autoResize)) {\r\n      context.newBounds = self.snapComplex(newBounds, autoResize);\r\n    } else {\r\n      context.newBounds = self.snapSimple(shape, newBounds);\r\n    }\r\n  });\r\n}\r\n\r\nResizeBehavior.$inject = [\r\n  'eventBus',\r\n  'gridSnapping',\r\n  'modeling'\r\n];\r\n\r\ninherits(ResizeBehavior, CommandInterceptor);\r\n\r\n/**\r\n * Snap width and height in relation to center.\r\n *\r\n * @param {djs.model.shape} shape\r\n * @param {Bounds} newBounds\r\n *\r\n * @returns {Bounds} Snapped bounds.\r\n */\r\nResizeBehavior.prototype.snapSimple = function(shape, newBounds) {\r\n  var gridSnapping = this._gridSnapping;\r\n\r\n  newBounds.width = gridSnapping.snapValue(newBounds.width, {\r\n    min: newBounds.width\r\n  });\r\n\r\n  newBounds.height = gridSnapping.snapValue(newBounds.height, {\r\n    min: newBounds.height\r\n  });\r\n\r\n  newBounds.x = shape.x + (shape.width / 2) - (newBounds.width / 2);\r\n  newBounds.y = shape.y + (shape.height / 2) - (newBounds.height / 2);\r\n\r\n  return newBounds;\r\n};\r\n\r\n/**\r\n * Snap x, y, width and height according to given directions.\r\n *\r\n * @param {Bounds} newBounds\r\n * @param {string} directions - Directions as {n|w|s|e}.\r\n *\r\n * @returns {Bounds} Snapped bounds.\r\n */\r\nResizeBehavior.prototype.snapComplex = function(newBounds, directions) {\r\n  if (/w|e/.test(directions)) {\r\n    newBounds = this.snapHorizontally(newBounds, directions);\r\n  }\r\n\r\n  if (/n|s/.test(directions)) {\r\n    newBounds = this.snapVertically(newBounds, directions);\r\n  }\r\n\r\n  return newBounds;\r\n};\r\n\r\n/**\r\n * Snap in one or both directions horizontally.\r\n *\r\n * @param {Bounds} newBounds\r\n * @param {string} directions - Directions as {n|w|s|e}.\r\n *\r\n * @returns {Bounds} Snapped bounds.\r\n */\r\nResizeBehavior.prototype.snapHorizontally = function(newBounds, directions) {\r\n  var gridSnapping = this._gridSnapping,\r\n      west = /w/.test(directions),\r\n      east = /e/.test(directions);\r\n\r\n  var snappedNewBounds = {};\r\n\r\n  snappedNewBounds.width = gridSnapping.snapValue(newBounds.width, {\r\n    min: newBounds.width\r\n  });\r\n\r\n  if (east) {\r\n\r\n    // handle <we>\r\n    if (west) {\r\n      snappedNewBounds.x = gridSnapping.snapValue(newBounds.x, {\r\n        max: newBounds.x\r\n      });\r\n\r\n      snappedNewBounds.width += gridSnapping.snapValue(newBounds.x - snappedNewBounds.x, {\r\n        min: newBounds.x - snappedNewBounds.x\r\n      });\r\n    }\r\n\r\n    // handle <e>\r\n    else {\r\n      newBounds.x = newBounds.x + newBounds.width - snappedNewBounds.width;\r\n    }\r\n  }\r\n\r\n  // assign snapped x and width\r\n  assign(newBounds, snappedNewBounds);\r\n\r\n  return newBounds;\r\n};\r\n\r\n/**\r\n * Snap in one or both directions vertically.\r\n *\r\n * @param {Bounds} newBounds\r\n * @param {string} directions - Directions as {n|w|s|e}.\r\n *\r\n * @returns {Bounds} Snapped bounds.\r\n */\r\nResizeBehavior.prototype.snapVertically = function(newBounds, directions) {\r\n  var gridSnapping = this._gridSnapping,\r\n      north = /n/.test(directions),\r\n      south = /s/.test(directions);\r\n\r\n  var snappedNewBounds = {};\r\n\r\n  snappedNewBounds.height = gridSnapping.snapValue(newBounds.height, {\r\n    min: newBounds.height\r\n  });\r\n\r\n  if (north) {\r\n\r\n    // handle <ns>\r\n    if (south) {\r\n      snappedNewBounds.y = gridSnapping.snapValue(newBounds.y, {\r\n        max: newBounds.y\r\n      });\r\n\r\n      snappedNewBounds.height += gridSnapping.snapValue(newBounds.y - snappedNewBounds.y, {\r\n        min: newBounds.y - snappedNewBounds.y\r\n      });\r\n    }\r\n\r\n    // handle <n>\r\n    else {\r\n      newBounds.y = newBounds.y + newBounds.height - snappedNewBounds.height;\r\n    }\r\n  }\r\n\r\n  // assign snapped y and height\r\n  assign(newBounds, snappedNewBounds);\r\n\r\n  return newBounds;\r\n};","var HIGH_PRIORITY = 2000;\r\n\r\n/**\r\n * Integrates space tool with grid snapping.\r\n */\r\nexport default function SpaceToolBehavior(eventBus, gridSnapping) {\r\n  eventBus.on([\r\n    'spaceTool.move',\r\n    'spaceTool.end'\r\n  ], HIGH_PRIORITY, function(event) {\r\n    var context = event.context;\r\n\r\n    if (!context.initialized) {\r\n      return;\r\n    }\r\n\r\n    var axis = context.axis;\r\n\r\n    var snapped;\r\n\r\n    if (axis === 'x') {\r\n\r\n      // snap delta x to multiple of 10\r\n      snapped = gridSnapping.snapValue(event.dx);\r\n\r\n      event.x = event.x + snapped - event.dx;\r\n      event.dx = snapped;\r\n    } else {\r\n\r\n      // snap delta y to multiple of 10\r\n      snapped = gridSnapping.snapValue(event.dy);\r\n\r\n      event.y = event.y + snapped - event.dy;\r\n      event.dy = snapped;\r\n    }\r\n  });\r\n}\r\n\r\nSpaceToolBehavior.$inject = [\r\n  'eventBus',\r\n  'gridSnapping'\r\n];","import ResizeBehavior from './ResizeBehavior';\r\nimport SpaceToolBehavior from './SpaceToolBehavior';\r\n\r\nexport default {\r\n  __init__: [\r\n    'gridSnappingResizeBehavior',\r\n    'gridSnappingSpaceToolBehavior'\r\n  ],\r\n  gridSnappingResizeBehavior: [ 'type', ResizeBehavior ],\r\n  gridSnappingSpaceToolBehavior: [ 'type', SpaceToolBehavior ]\r\n};","import GridSnapping from './GridSnapping';\r\n\r\nimport GridSnappingBehaviorModule from './behavior';\r\n\r\nexport default {\r\n  __depends__: [ GridSnappingBehaviorModule ],\r\n  __init__: [ 'gridSnapping' ],\r\n  gridSnapping: [ 'type', GridSnapping ]\r\n};","import {\n  hasPrimaryModifier\n} from '../../util/Mouse';\n\nimport { isKey } from '../../features/keyboard/KeyboardUtil';\n\nvar HIGH_PRIORITY = 1500;\nvar HAND_CURSOR = 'grab';\n\n\nexport default function HandTool(\n    eventBus, canvas, dragging,\n    injector, toolManager, mouse) {\n\n  this._dragging = dragging;\n  this._mouse = mouse;\n\n  var self = this,\n      keyboard = injector.get('keyboard', false);\n\n  toolManager.registerTool('hand', {\n    tool: 'hand',\n    dragging: 'hand.move'\n  });\n\n  eventBus.on('element.mousedown', HIGH_PRIORITY, function(event) {\n\n    if (!hasPrimaryModifier(event)) {\n      return;\n    }\n\n    self.activateMove(event.originalEvent, true);\n\n    return false;\n  });\n\n  keyboard && keyboard.addListener(HIGH_PRIORITY, function(e) {\n    if (!isSpace(e.keyEvent) || self.isActive()) {\n      return;\n    }\n\n    var mouseEvent = self._mouse.getLastMoveEvent();\n\n    self.activateMove(mouseEvent, !!mouseEvent);\n  }, 'keyboard.keydown');\n\n  keyboard && keyboard.addListener(HIGH_PRIORITY, function(e) {\n    if (!isSpace(e.keyEvent) || !self.isActive()) {\n      return;\n    }\n\n    self.toggle();\n  }, 'keyboard.keyup');\n\n  eventBus.on('hand.end', function(event) {\n    var target = event.originalEvent.target;\n\n    // only reactive on diagram click\n    // on some occasions, event.hover is not set and we have to check if the target is an svg\n    if (!event.hover && !(target instanceof SVGElement)) {\n      return false;\n    }\n\n    eventBus.once('hand.ended', function() {\n      self.activateMove(event.originalEvent, { reactivate: true });\n    });\n\n  });\n\n  eventBus.on('hand.move.move', function(event) {\n    var scale = canvas.viewbox().scale;\n\n    canvas.scroll({\n      dx: event.dx * scale,\n      dy: event.dy * scale\n    });\n  });\n\n  eventBus.on('hand.move.end', function(event) {\n    var context = event.context,\n        reactivate = context.reactivate;\n\n    // Don't reactivate if the user is using the keyboard keybinding\n    if (!hasPrimaryModifier(event) && reactivate) {\n\n      eventBus.once('hand.move.ended', function(event) {\n        self.activateHand(event.originalEvent, true, true);\n      });\n\n    }\n\n    return false;\n  });\n\n}\n\nHandTool.$inject = [\n  'eventBus',\n  'canvas',\n  'dragging',\n  'injector',\n  'toolManager',\n  'mouse'\n];\n\n\nHandTool.prototype.activateMove = function(event, autoActivate, context) {\n  if (typeof autoActivate === 'object') {\n    context = autoActivate;\n    autoActivate = false;\n  }\n\n  this._dragging.init(event, 'hand.move', {\n    autoActivate: autoActivate,\n    cursor: HAND_CURSOR,\n    data: {\n      context: context || {}\n    }\n  });\n};\n\nHandTool.prototype.activateHand = function(event, autoActivate, reactivate) {\n  this._dragging.init(event, 'hand', {\n    trapClick: false,\n    autoActivate: autoActivate,\n    cursor: HAND_CURSOR,\n    data: {\n      context: {\n        reactivate: reactivate\n      }\n    }\n  });\n};\n\nHandTool.prototype.toggle = function() {\n  if (this.isActive()) {\n    return this._dragging.cancel();\n  }\n\n  var mouseEvent = this._mouse.getLastMoveEvent();\n\n  this.activateHand(mouseEvent, !!mouseEvent);\n};\n\nHandTool.prototype.isActive = function() {\n  var context = this._dragging.context();\n\n  if (context) {\n    return /^(hand|hand\\.move)$/.test(context.prefix);\n  }\n\n  return false;\n};\n\n// helpers //////////\n\nfunction isSpace(keyEvent) {\n  return isKey(' ', keyEvent);\n}","import ToolManagerModule from '../tool-manager';\nimport MouseModule from '../mouse';\n\nimport HandTool from './HandTool';\n\nexport default {\n  __depends__: [\n    ToolManagerModule,\n    MouseModule\n  ],\n  __init__: [ 'handTool' ],\n  handTool: [ 'type', HandTool ]\n};\n","import {\n  closest as domClosest\n} from 'min-dom';\n\nimport {\n  toPoint\n} from '../../util/Event';\n\nvar HIGH_PRIORITY = 1500;\n\n\n/**\n * Browsers may swallow certain events (hover, out ...) if users are to\n * fast with the mouse.\n *\n * @see http://stackoverflow.com/questions/7448468/why-cant-i-reliably-capture-a-mouseout-event\n *\n * The fix implemented in this component ensure that we\n *\n * 1) have a hover state after a successful drag.move event\n * 2) have an out event when dragging leaves an element\n *\n * @param {ElementRegistry} elementRegistry\n * @param {EventBus} eventBus\n * @param {Injector} injector\n */\nexport default function HoverFix(elementRegistry, eventBus, injector) {\n\n  var self = this;\n\n  var dragging = injector.get('dragging', false);\n\n  /**\n   * Make sure we are god damn hovering!\n   *\n   * @param {Event} dragging event\n   */\n  function ensureHover(event) {\n\n    if (event.hover) {\n      return;\n    }\n\n    var originalEvent = event.originalEvent;\n\n    var gfx = self._findTargetGfx(originalEvent);\n\n    var element = gfx && elementRegistry.get(gfx);\n\n    if (gfx && element) {\n\n      // 1) cancel current mousemove\n      event.stopPropagation();\n\n      // 2) emit fake hover for new target\n      dragging.hover({ element: element, gfx: gfx });\n\n      // 3) re-trigger move event\n      dragging.move(originalEvent);\n    }\n  }\n\n\n  if (dragging) {\n\n    /**\n     * We wait for a specific sequence of events before\n     * emitting a fake drag.hover event.\n     *\n     * Event Sequence:\n     *\n     * drag.start\n     * drag.move >> ensure we are hovering\n     */\n    eventBus.on('drag.start', function(event) {\n\n      eventBus.once('drag.move', HIGH_PRIORITY, function(event) {\n\n        ensureHover(event);\n\n      });\n\n    });\n  }\n\n\n  /**\n   * We make sure that element.out is always fired, even if the\n   * browser swallows an element.out event.\n   *\n   * Event sequence:\n   *\n   * element.hover\n   * (element.out >> sometimes swallowed)\n   * element.hover >> ensure we fired element.out\n   */\n  (function() {\n    var hoverGfx;\n    var hover;\n\n    eventBus.on('element.hover', function(event) {\n\n      // (1) remember current hover element\n      hoverGfx = event.gfx;\n      hover = event.element;\n    });\n\n    eventBus.on('element.hover', HIGH_PRIORITY, function(event) {\n\n      // (3) am I on an element still?\n      if (hover) {\n\n        // (4) that is a problem, gotta \"simulate the out\"\n        eventBus.fire('element.out', {\n          element: hover,\n          gfx: hoverGfx\n        });\n      }\n\n    });\n\n    eventBus.on('element.out', function() {\n\n      // (2) unset hover state if we correctly outed us *GG*\n      hoverGfx = null;\n      hover = null;\n    });\n\n  })();\n\n  this._findTargetGfx = function(event) {\n    var position,\n        target;\n\n    if (!(event instanceof MouseEvent)) {\n      return;\n    }\n\n    position = toPoint(event);\n\n    // damn expensive operation, ouch!\n    target = document.elementFromPoint(position.x, position.y);\n\n    return getGfx(target);\n  };\n\n}\n\nHoverFix.$inject = [\n  'elementRegistry',\n  'eventBus',\n  'injector'\n];\n\n\n// helpers /////////////////////\n\nfunction getGfx(target) {\n  return domClosest(target, 'svg, .djs-element', true);\n}","import HoverFix from './HoverFix';\n\nexport default {\n  __init__: [\n    'hoverFix'\n  ],\n  hoverFix: [ 'type', HoverFix ],\n};","import {\n  forEach,\n  assign\n} from 'min-dash';\n\nimport {\n  delegate as domDelegate,\n  query as domQuery,\n  queryAll as domQueryAll\n} from 'min-dom';\n\nimport {\n  isPrimaryButton,\n  isAuxiliaryButton\n} from '../../util/Mouse';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  createLine,\n  updateLine\n} from '../../util/RenderUtil';\n\nfunction allowAll(event) { return true; }\n\nfunction allowPrimaryAndAuxiliary(event) {\n  return isPrimaryButton(event) || isAuxiliaryButton(event);\n}\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * A plugin that provides interaction events for diagram elements.\n *\n * It emits the following events:\n *\n *   * element.click\n *   * element.contextmenu\n *   * element.dblclick\n *   * element.hover\n *   * element.mousedown\n *   * element.mousemove\n *   * element.mouseup\n *   * element.out\n *\n * Each event is a tuple { element, gfx, originalEvent }.\n *\n * Canceling the event via Event#preventDefault()\n * prevents the original DOM operation.\n *\n * @param {EventBus} eventBus\n */\nexport default function InteractionEvents(eventBus, elementRegistry, styles) {\n\n  var self = this;\n\n  /**\n   * Fire an interaction event.\n   *\n   * @param {string} type local event name, e.g. element.click.\n   * @param {DOMEvent} event native event\n   * @param {djs.model.Base} [element] the diagram element to emit the event on;\n   *                                   defaults to the event target\n   */\n  function fire(type, event, element) {\n\n    if (isIgnored(type, event)) {\n      return;\n    }\n\n    var target, gfx, returnValue;\n\n    if (!element) {\n      target = event.delegateTarget || event.target;\n\n      if (target) {\n        gfx = target;\n        element = elementRegistry.get(gfx);\n      }\n    } else {\n      gfx = elementRegistry.getGraphics(element);\n    }\n\n    if (!gfx || !element) {\n      return;\n    }\n\n    returnValue = eventBus.fire(type, {\n      element: element,\n      gfx: gfx,\n      originalEvent: event\n    });\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  // TODO(nikku): document this\n  var handlers = {};\n\n  function mouseHandler(localEventName) {\n    return handlers[localEventName];\n  }\n\n  function isIgnored(localEventName, event) {\n\n    var filter = ignoredFilters[localEventName] || isPrimaryButton;\n\n    // only react on left mouse button interactions\n    // except for interaction events that are enabled\n    // for secundary mouse button\n    return !filter(event);\n  }\n\n  var bindings = {\n    click: 'element.click',\n    contextmenu: 'element.contextmenu',\n    dblclick: 'element.dblclick',\n    mousedown: 'element.mousedown',\n    mousemove: 'element.mousemove',\n    mouseover: 'element.hover',\n    mouseout: 'element.out',\n    mouseup: 'element.mouseup',\n  };\n\n  var ignoredFilters = {\n    'element.contextmenu': allowAll,\n    'element.mousedown': allowPrimaryAndAuxiliary,\n    'element.mouseup': allowPrimaryAndAuxiliary,\n    'element.click': allowPrimaryAndAuxiliary,\n    'element.dblclick': allowPrimaryAndAuxiliary\n  };\n\n\n  // manual event trigger //////////\n\n  /**\n   * Trigger an interaction event (based on a native dom event)\n   * on the target shape or connection.\n   *\n   * @param {string} eventName the name of the triggered DOM event\n   * @param {MouseEvent} event\n   * @param {djs.model.Base} targetElement\n   */\n  function triggerMouseEvent(eventName, event, targetElement) {\n\n    // i.e. element.mousedown...\n    var localEventName = bindings[eventName];\n\n    if (!localEventName) {\n      throw new Error('unmapped DOM event name <' + eventName + '>');\n    }\n\n    return fire(localEventName, event, targetElement);\n  }\n\n\n  var ELEMENT_SELECTOR = 'svg, .djs-element';\n\n  // event handling ///////\n\n  function registerEvent(node, event, localEvent, ignoredFilter) {\n\n    var handler = handlers[localEvent] = function(event) {\n      fire(localEvent, event);\n    };\n\n    if (ignoredFilter) {\n      ignoredFilters[localEvent] = ignoredFilter;\n    }\n\n    handler.$delegate = domDelegate.bind(node, ELEMENT_SELECTOR, event, handler);\n  }\n\n  function unregisterEvent(node, event, localEvent) {\n\n    var handler = mouseHandler(localEvent);\n\n    if (!handler) {\n      return;\n    }\n\n    domDelegate.unbind(node, event, handler.$delegate);\n  }\n\n  function registerEvents(svg) {\n    forEach(bindings, function(val, key) {\n      registerEvent(svg, key, val);\n    });\n  }\n\n  function unregisterEvents(svg) {\n    forEach(bindings, function(val, key) {\n      unregisterEvent(svg, key, val);\n    });\n  }\n\n  eventBus.on('canvas.destroy', function(event) {\n    unregisterEvents(event.svg);\n  });\n\n  eventBus.on('canvas.init', function(event) {\n    registerEvents(event.svg);\n  });\n\n\n  // hit box updating ////////////////\n\n  eventBus.on([ 'shape.added', 'connection.added' ], function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    eventBus.fire('interactionEvents.createHit', { element: element, gfx: gfx });\n  });\n\n  // Update djs-hit on change.\n  // A low priortity is necessary, because djs-hit of labels has to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on([\n    'shape.changed',\n    'connection.changed'\n  ], LOW_PRIORITY, function(event) {\n\n    var element = event.element,\n        gfx = event.gfx;\n\n    eventBus.fire('interactionEvents.updateHit', { element: element, gfx: gfx });\n  });\n\n  eventBus.on('interactionEvents.createHit', LOW_PRIORITY, function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    self.createDefaultHit(element, gfx);\n  });\n\n  eventBus.on('interactionEvents.updateHit', function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    self.updateDefaultHit(element, gfx);\n  });\n\n\n  // hit styles ////////////\n\n  var STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-stroke');\n\n  var CLICK_STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-click-stroke');\n\n  var ALL_HIT_STYLE = createHitStyle('djs-hit djs-hit-all');\n\n  var HIT_TYPES = {\n    'all': ALL_HIT_STYLE,\n    'click-stroke': CLICK_STROKE_HIT_STYLE,\n    'stroke': STROKE_HIT_STYLE\n  };\n\n  function createHitStyle(classNames, attrs) {\n\n    attrs = assign({\n      stroke: 'white',\n      strokeWidth: 15\n    }, attrs || {});\n\n    return styles.cls(classNames, [ 'no-fill', 'no-border' ], attrs);\n  }\n\n\n  // style helpers ///////////////\n\n  function applyStyle(hit, type) {\n\n    var attrs = HIT_TYPES[type];\n\n    if (!attrs) {\n      throw new Error('invalid hit type <' + type + '>');\n    }\n\n    svgAttr(hit, attrs);\n\n    return hit;\n  }\n\n  function appendHit(gfx, hit) {\n    svgAppend(gfx, hit);\n  }\n\n\n  // API\n\n  /**\n   * Remove hints on the given graphics.\n   *\n   * @param {SVGElement} gfx\n   */\n  this.removeHits = function(gfx) {\n    var hits = domQueryAll('.djs-hit', gfx);\n\n    forEach(hits, svgRemove);\n  };\n\n  /**\n   * Create default hit for the given element.\n   *\n   * @param {djs.model.Base} element\n   * @param {SVGElement} gfx\n   *\n   * @return {SVGElement} created hit\n   */\n  this.createDefaultHit = function(element, gfx) {\n    var waypoints = element.waypoints,\n        isFrame = element.isFrame,\n        boxType;\n\n    if (waypoints) {\n      return this.createWaypointsHit(gfx, waypoints);\n    } else {\n\n      boxType = isFrame ? 'stroke' : 'all';\n\n      return this.createBoxHit(gfx, boxType, {\n        width: element.width,\n        height: element.height\n      });\n    }\n  };\n\n  /**\n   * Create hits for the given waypoints.\n   *\n   * @param {SVGElement} gfx\n   * @param {Array<Point>} waypoints\n   *\n   * @return {SVGElement}\n   */\n  this.createWaypointsHit = function(gfx, waypoints) {\n\n    var hit = createLine(waypoints);\n\n    applyStyle(hit, 'stroke');\n\n    appendHit(gfx, hit);\n\n    return hit;\n  };\n\n  /**\n   * Create hits for a box.\n   *\n   * @param {SVGElement} gfx\n   * @param {string} hitType\n   * @param {Object} attrs\n   *\n   * @return {SVGElement}\n   */\n  this.createBoxHit = function(gfx, type, attrs) {\n\n    attrs = assign({\n      x: 0,\n      y: 0\n    }, attrs);\n\n    var hit = svgCreate('rect');\n\n    applyStyle(hit, type);\n\n    svgAttr(hit, attrs);\n\n    appendHit(gfx, hit);\n\n    return hit;\n  };\n\n  /**\n   * Update default hit of the element.\n   *\n   * @param  {djs.model.Base} element\n   * @param  {SVGElement} gfx\n   *\n   * @return {SVGElement} updated hit\n   */\n  this.updateDefaultHit = function(element, gfx) {\n\n    var hit = domQuery('.djs-hit', gfx);\n\n    if (!hit) {\n      return;\n    }\n\n    if (element.waypoints) {\n      updateLine(hit, element.waypoints);\n    } else {\n      svgAttr(hit, {\n        width: element.width,\n        height: element.height\n      });\n    }\n\n    return hit;\n  };\n\n  this.fire = fire;\n\n  this.triggerMouseEvent = triggerMouseEvent;\n\n  this.mouseHandler = mouseHandler;\n\n  this.registerEvent = registerEvent;\n  this.unregisterEvent = unregisterEvent;\n}\n\n\nInteractionEvents.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'styles'\n];\n\n\n/**\n * An event indicating that the mouse hovered over an element\n *\n * @event element.hover\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has left an element\n *\n * @event element.out\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has clicked an element\n *\n * @event element.click\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has double clicked an element\n *\n * @event element.dblclick\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone down on an element.\n *\n * @event element.mousedown\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone up on an element.\n *\n * @event element.mouseup\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the context menu action is triggered\n * via mouse or touch controls.\n *\n * @event element.contextmenu\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */","import InteractionEvents from './InteractionEvents';\n\nexport default {\n  __init__: [ 'interactionEvents' ],\n  interactionEvents: [ 'type', InteractionEvents ]\n};","import {\n  assign\n} from 'min-dash';\n\n\nvar DEFAULT_CONFIG = {\n  moveSpeed: 1,\n  moveSpeedAccelerated: 10\n};\n\nvar HIGHER_PRIORITY = 1500;\n\nvar LEFT = 'left';\nvar UP = 'up';\nvar RIGHT = 'right';\nvar DOWN = 'down';\n\nvar KEY_TO_DIRECTION = {\n  ArrowLeft: LEFT,\n  Left: LEFT,\n  ArrowUp: UP,\n  Up: UP,\n  ArrowRight: RIGHT,\n  Right: RIGHT,\n  ArrowDown: DOWN,\n  Down: DOWN\n};\n\nvar DIRECTIONS_DELTA = {\n  left: function(speed) {\n    return {\n      x: -speed,\n      y: 0\n    };\n  },\n  up: function(speed) {\n    return {\n      x: 0,\n      y: -speed\n    };\n  },\n  right: function(speed) {\n    return {\n      x: speed,\n      y: 0\n    };\n  },\n  down: function(speed) {\n    return {\n      x: 0,\n      y: speed\n    };\n  }\n};\n\n\n/**\n * Enables to move selection with keyboard arrows.\n * Use with Shift for modified speed (default=1, with Shift=10).\n * Pressed Cmd/Ctrl turns the feature off.\n *\n * @param {Object} config\n * @param {number} [config.moveSpeed=1]\n * @param {number} [config.moveSpeedAccelerated=10]\n * @param {Keyboard} keyboard\n * @param {Modeling} modeling\n * @param {Selection} selection\n */\nexport default function KeyboardMoveSelection(\n    config,\n    keyboard,\n    modeling,\n    rules,\n    selection\n) {\n\n  var self = this;\n\n  this._config = assign({}, DEFAULT_CONFIG, config || {});\n\n  keyboard.addListener(HIGHER_PRIORITY, function(event) {\n\n    var keyEvent = event.keyEvent;\n\n    var direction = KEY_TO_DIRECTION[keyEvent.key];\n\n    if (!direction) {\n      return;\n    }\n\n    if (keyboard.isCmd(keyEvent)) {\n      return;\n    }\n\n    var accelerated = keyboard.isShift(keyEvent);\n\n    self.moveSelection(direction, accelerated);\n\n    return true;\n  });\n\n\n  /**\n   * Move selected elements in the given direction,\n   * optionally specifying accelerated movement.\n   *\n   * @param {string} direction\n   * @param {boolean} [accelerated=false]\n   */\n  this.moveSelection = function(direction, accelerated) {\n\n    var selectedElements = selection.get();\n\n    if (!selectedElements.length) {\n      return;\n    }\n\n    var speed = this._config[\n      accelerated ?\n        'moveSpeedAccelerated' :\n        'moveSpeed'\n    ];\n\n    var delta = DIRECTIONS_DELTA[direction](speed);\n\n    var canMove = rules.allowed('elements.move', {\n      shapes: selectedElements\n    });\n\n    if (canMove) {\n      modeling.moveElements(selectedElements, delta);\n    }\n  };\n\n}\n\nKeyboardMoveSelection.$inject = [\n  'config.keyboardMoveSelection',\n  'keyboard',\n  'modeling',\n  'rules',\n  'selection'\n];","import KeyboardModule from '../keyboard';\nimport SelectionModule from '../selection';\n\nimport KeyboardMoveSelection from './KeyboardMoveSelection';\n\nexport default {\n  __depends__: [\n    KeyboardModule,\n    SelectionModule\n  ],\n  __init__: [\n    'keyboardMoveSelection'\n  ],\n  keyboardMoveSelection: [ 'type', KeyboardMoveSelection ]\n};\n","import {\n  isFunction\n} from 'min-dash';\n\nimport {\n  closest as domClosest,\n  event as domEvent,\n  matches as domMatches\n} from 'min-dom';\n\nimport {\n  hasModifier,\n  isCmd,\n  isKey,\n  isShift\n} from './KeyboardUtil';\n\nvar KEYDOWN_EVENT = 'keyboard.keydown',\n    KEYUP_EVENT = 'keyboard.keyup';\n\nvar HANDLE_MODIFIER_ATTRIBUTE = 'input-handle-modified-keys';\n\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * A keyboard abstraction that may be activated and\n * deactivated by users at will, consuming key events\n * and triggering diagram actions.\n *\n * For keys pressed down, keyboard fires `keyboard.keydown` event.\n * The event context contains one field which is `KeyboardEvent` event.\n *\n * The implementation fires the following key events that allow\n * other components to hook into key handling:\n *\n *  - keyboard.bind\n *  - keyboard.unbind\n *  - keyboard.init\n *  - keyboard.destroy\n *\n * All events contain one field which is node.\n *\n * A default binding for the keyboard may be specified via the\n * `keyboard.bindTo` configuration option.\n *\n * @param {Config} config\n * @param {EventBus} eventBus\n */\nexport default function Keyboard(config, eventBus) {\n  var self = this;\n\n  this._config = config || {};\n  this._eventBus = eventBus;\n\n  this._keydownHandler = this._keydownHandler.bind(this);\n  this._keyupHandler = this._keyupHandler.bind(this);\n\n  // properly clean dom registrations\n  eventBus.on('diagram.destroy', function() {\n    self._fire('destroy');\n\n    self.unbind();\n  });\n\n  eventBus.on('diagram.init', function() {\n    self._fire('init');\n  });\n\n  eventBus.on('attach', function() {\n    if (config && config.bindTo) {\n      self.bind(config.bindTo);\n    }\n  });\n\n  eventBus.on('detach', function() {\n    self.unbind();\n  });\n}\n\nKeyboard.$inject = [\n  'config.keyboard',\n  'eventBus'\n];\n\nKeyboard.prototype._keydownHandler = function(event) {\n  this._keyHandler(event, KEYDOWN_EVENT);\n};\n\nKeyboard.prototype._keyupHandler = function(event) {\n  this._keyHandler(event, KEYUP_EVENT);\n};\n\nKeyboard.prototype._keyHandler = function(event, type) {\n  var eventBusResult;\n\n  if (this._isEventIgnored(event)) {\n    return;\n  }\n\n  var context = {\n    keyEvent: event\n  };\n\n  eventBusResult = this._eventBus.fire(type || KEYDOWN_EVENT, context);\n\n  if (eventBusResult) {\n    event.preventDefault();\n  }\n};\n\nKeyboard.prototype._isEventIgnored = function(event) {\n  return isInput(event.target) && this._isModifiedKeyIgnored(event);\n};\n\nKeyboard.prototype._isModifiedKeyIgnored = function(event) {\n  if (!isCmd(event)) {\n    return true;\n  }\n\n  var allowedModifiers = this._getAllowedModifiers(event.target);\n  return allowedModifiers.indexOf(event.key) === -1;\n};\n\nKeyboard.prototype._getAllowedModifiers = function(element) {\n  var modifierContainer = domClosest(element, '[' + HANDLE_MODIFIER_ATTRIBUTE + ']', true);\n\n  if (!modifierContainer || (this._node && !this._node.contains(modifierContainer))) {\n    return [];\n  }\n\n  return modifierContainer.getAttribute(HANDLE_MODIFIER_ATTRIBUTE).split(',');\n};\n\nKeyboard.prototype.bind = function(node) {\n\n  // make sure that the keyboard is only bound once to the DOM\n  this.unbind();\n\n  this._node = node;\n\n  // bind key events\n  domEvent.bind(node, 'keydown', this._keydownHandler, true);\n  domEvent.bind(node, 'keyup', this._keyupHandler, true);\n\n  this._fire('bind');\n};\n\nKeyboard.prototype.getBinding = function() {\n  return this._node;\n};\n\nKeyboard.prototype.unbind = function() {\n  var node = this._node;\n\n  if (node) {\n    this._fire('unbind');\n\n    // unbind key events\n    domEvent.unbind(node, 'keydown', this._keydownHandler, true);\n    domEvent.unbind(node, 'keyup', this._keyupHandler, true);\n  }\n\n  this._node = null;\n};\n\nKeyboard.prototype._fire = function(event) {\n  this._eventBus.fire('keyboard.' + event, { node: this._node });\n};\n\n/**\n * Add a listener function that is notified with `KeyboardEvent` whenever\n * the keyboard is bound and the user presses a key. If no priority is\n * provided, the default value of 1000 is used.\n *\n * @param {number} [priority]\n * @param {Function} listener\n * @param {string} type\n */\nKeyboard.prototype.addListener = function(priority, listener, type) {\n  if (isFunction(priority)) {\n    type = listener;\n    listener = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  this._eventBus.on(type || KEYDOWN_EVENT, priority, listener);\n};\n\nKeyboard.prototype.removeListener = function(listener, type) {\n  this._eventBus.off(type || KEYDOWN_EVENT, listener);\n};\n\nKeyboard.prototype.hasModifier = hasModifier;\nKeyboard.prototype.isCmd = isCmd;\nKeyboard.prototype.isShift = isShift;\nKeyboard.prototype.isKey = isKey;\n\n\n\n// helpers ///////\n\nfunction isInput(target) {\n  return target && (domMatches(target, 'input, textarea') || target.contentEditable === 'true');\n}\n","import {\n  isCmd,\n  isKey,\n  isShift\n} from './KeyboardUtil';\n\nvar LOW_PRIORITY = 500;\n\nexport var KEYCODE_C = 67;\nexport var KEYCODE_V = 86;\nexport var KEYCODE_Y = 89;\nexport var KEYCODE_Z = 90;\n\nexport var KEYS_COPY = [ 'c', 'C', KEYCODE_C ];\nexport var KEYS_PASTE = [ 'v', 'V', KEYCODE_V ];\nexport var KEYS_REDO = [ 'y', 'Y', KEYCODE_Y ];\nexport var KEYS_UNDO = [ 'z', 'Z', KEYCODE_Z ];\n\n\n/**\n * Adds default keyboard bindings.\n *\n * This does not pull in any features will bind only actions that\n * have previously been registered against the editorActions component.\n *\n * @param {EventBus} eventBus\n * @param {Keyboard} keyboard\n */\nexport default function KeyboardBindings(eventBus, keyboard) {\n\n  var self = this;\n\n  eventBus.on('editorActions.init', LOW_PRIORITY, function(event) {\n\n    var editorActions = event.editorActions;\n\n    self.registerBindings(keyboard, editorActions);\n  });\n}\n\nKeyboardBindings.$inject = [\n  'eventBus',\n  'keyboard'\n];\n\n\n/**\n * Register available keyboard bindings.\n *\n * @param {Keyboard} keyboard\n * @param {EditorActions} editorActions\n */\nKeyboardBindings.prototype.registerBindings = function(keyboard, editorActions) {\n\n  /**\n   * Add keyboard binding if respective editor action\n   * is registered.\n   *\n   * @param {string} action name\n   * @param {Function} fn that implements the key binding\n   */\n  function addListener(action, fn) {\n\n    if (editorActions.isRegistered(action)) {\n      keyboard.addListener(fn);\n    }\n  }\n\n\n  // undo\n  // (CTRL|CMD) + Z\n  addListener('undo', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isCmd(event) && !isShift(event) && isKey(KEYS_UNDO, event)) {\n      editorActions.trigger('undo');\n\n      return true;\n    }\n  });\n\n  // redo\n  // CTRL + Y\n  // CMD + SHIFT + Z\n  addListener('redo', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isCmd(event) && (isKey(KEYS_REDO, event) || (isKey(KEYS_UNDO, event) && isShift(event)))) {\n      editorActions.trigger('redo');\n\n      return true;\n    }\n  });\n\n  // copy\n  // CTRL/CMD + C\n  addListener('copy', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isCmd(event) && isKey(KEYS_COPY, event)) {\n      editorActions.trigger('copy');\n\n      return true;\n    }\n  });\n\n  // paste\n  // CTRL/CMD + V\n  addListener('paste', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isCmd(event) && isKey(KEYS_PASTE, event)) {\n      editorActions.trigger('paste');\n\n      return true;\n    }\n  });\n\n  // zoom in one step\n  // CTRL/CMD + +\n  addListener('stepZoom', function(context) {\n\n    var event = context.keyEvent;\n\n    // quirk: it has to be triggered by `=` as well to work on international keyboard layout\n    // cf: https://github.com/bpmn-io/bpmn-js/issues/1362#issuecomment-722989754\n    if (isKey([ '+', 'Add', '=' ], event) && isCmd(event)) {\n      editorActions.trigger('stepZoom', { value: 1 });\n\n      return true;\n    }\n  });\n\n  // zoom out one step\n  // CTRL + -\n  addListener('stepZoom', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isKey([ '-', 'Subtract' ], event) && isCmd(event)) {\n      editorActions.trigger('stepZoom', { value: -1 });\n\n      return true;\n    }\n  });\n\n  // zoom to the default level\n  // CTRL + 0\n  addListener('zoom', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isKey('0', event) && isCmd(event)) {\n      editorActions.trigger('zoom', { value: 1 });\n\n      return true;\n    }\n  });\n\n  // delete selected element\n  // DEL\n  addListener('removeSelection', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isKey([ 'Backspace', 'Delete', 'Del' ], event)) {\n      editorActions.trigger('removeSelection');\n\n      return true;\n    }\n  });\n};","import { isArray } from 'min-dash';\r\n\r\n/**\r\n * Returns true if event was triggered with any modifier\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function hasModifier(event) {\r\n  return (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey);\r\n}\r\n\r\n/**\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isCmd(event) {\r\n\r\n  // ensure we don't react to AltGr\r\n  // (mapped to CTRL + ALT)\r\n  if (event.altKey) {\r\n    return false;\r\n  }\r\n\r\n  return event.ctrlKey || event.metaKey;\r\n}\r\n\r\n/**\r\n * Checks if key pressed is one of provided keys.\r\n *\r\n * @param {string|Array<string>} keys\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isKey(keys, event) {\r\n  keys = isArray(keys) ? keys : [ keys ];\r\n\r\n  return keys.indexOf(event.key) !== -1 || keys.indexOf(event.keyCode) !== -1;\r\n}\r\n\r\n/**\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isShift(event) {\r\n  return event.shiftKey;\r\n}","import Keyboard from './Keyboard';\nimport KeyboardBindings from './KeyboardBindings';\n\nexport default {\n  __init__: [ 'keyboard', 'keyboardBindings' ],\n  keyboard: [ 'type', Keyboard ],\n  keyboardBindings: [ 'type', KeyboardBindings ]\n};\n","import {\n  forEach,\n  filter\n} from 'min-dash';\n\nimport inherits from 'inherits';\n\nvar LOW_PRIORITY = 250,\n    HIGH_PRIORITY = 1400;\n\nimport {\n  add as collectionAdd,\n  indexOf as collectionIdx\n} from '../../util/Collections';\n\nimport { saveClear } from '../../util/Removal';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\n\n/**\n * A handler that makes sure labels are properly moved with\n * their label targets.\n *\n * @param {didi.Injector} injector\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function LabelSupport(injector, eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  var movePreview = injector.get('movePreview', false);\n\n  // remove labels from the collection that are being\n  // moved with other elements anyway\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(e) {\n\n    var context = e.context,\n        shapes = context.shapes,\n        validatedShapes = context.validatedShapes;\n\n    context.shapes = removeLabels(shapes);\n    context.validatedShapes = removeLabels(validatedShapes);\n  });\n\n  // add labels to visual's group\n  movePreview && eventBus.on('shape.move.start', LOW_PRIORITY, function(e) {\n\n    var context = e.context,\n        shapes = context.shapes;\n\n    var labels = [];\n\n    forEach(shapes, function(element) {\n\n      forEach(element.labels, function(label) {\n\n        if (!label.hidden && context.shapes.indexOf(label) === -1) {\n          labels.push(label);\n        }\n\n        if (element.labelTarget) {\n          labels.push(element);\n        }\n      });\n    });\n\n    forEach(labels, function(label) {\n      movePreview.makeDraggable(context, label, true);\n    });\n\n  });\n\n  // add all labels to move closure\n  this.preExecuted('elements.move', HIGH_PRIORITY, function(e) {\n    var context = e.context,\n        closure = context.closure,\n        enclosedElements = closure.enclosedElements;\n\n    var enclosedLabels = [];\n\n    // find labels that are not part of\n    // move closure yet and add them\n    forEach(enclosedElements, function(element) {\n      forEach(element.labels, function(label) {\n\n        if (!enclosedElements[label.id]) {\n          enclosedLabels.push(label);\n        }\n      });\n    });\n\n    closure.addAll(enclosedLabels);\n  });\n\n\n  this.preExecute([\n    'connection.delete',\n    'shape.delete'\n  ], function(e) {\n\n    var context = e.context,\n        element = context.connection || context.shape;\n\n    saveClear(element.labels, function(label) {\n      modeling.removeShape(label, { nested: true });\n    });\n  });\n\n\n  this.execute('shape.delete', function(e) {\n\n    var context = e.context,\n        shape = context.shape,\n        labelTarget = shape.labelTarget;\n\n    // unset labelTarget\n    if (labelTarget) {\n      context.labelTargetIndex = collectionIdx(labelTarget.labels, shape);\n      context.labelTarget = labelTarget;\n\n      shape.labelTarget = null;\n    }\n  });\n\n  this.revert('shape.delete', function(e) {\n\n    var context = e.context,\n        shape = context.shape,\n        labelTarget = context.labelTarget,\n        labelTargetIndex = context.labelTargetIndex;\n\n    // restore labelTarget\n    if (labelTarget) {\n      collectionAdd(labelTarget.labels, shape, labelTargetIndex);\n\n      shape.labelTarget = labelTarget;\n    }\n  });\n\n}\n\ninherits(LabelSupport, CommandInterceptor);\n\nLabelSupport.$inject = [\n  'injector',\n  'eventBus',\n  'modeling'\n];\n\n\n/**\n * Return a filtered list of elements that do not\n * contain attached elements with hosts being part\n * of the selection.\n *\n * @param  {Array<djs.model.Base>} elements\n *\n * @return {Array<djs.model.Base>} filtered\n */\nfunction removeLabels(elements) {\n\n  return filter(elements, function(element) {\n\n    // filter out labels that are move together\n    // with their label targets\n    return elements.indexOf(element.labelTarget) === -1;\n  });\n}\n","import LabelSupport from './LabelSupport';\n\nexport default {\n  __init__: [ 'labelSupport' ],\n  labelSupport: [ 'type', LabelSupport ]\n};\n","import { values } from 'min-dash';\n\nimport { getEnclosedElements } from '../../util/Elements';\n\nimport {\n  hasSecondaryModifier\n} from '../../util/Mouse';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nvar LASSO_TOOL_CURSOR = 'crosshair';\n\n\nexport default function LassoTool(\n    eventBus, canvas, dragging,\n    elementRegistry, selection, toolManager,\n    mouse) {\n\n  this._selection = selection;\n  this._dragging = dragging;\n  this._mouse = mouse;\n\n  var self = this;\n\n  // lasso visuals implementation\n\n  /**\n  * A helper that realizes the selection box visual\n  */\n  var visuals = {\n\n    create: function(context) {\n      var container = canvas.getActiveLayer(),\n          frame;\n\n      frame = context.frame = svgCreate('rect');\n      svgAttr(frame, {\n        class: 'djs-lasso-overlay',\n        width:  1,\n        height: 1,\n        x: 0,\n        y: 0\n      });\n\n      svgAppend(container, frame);\n    },\n\n    update: function(context) {\n      var frame = context.frame,\n          bbox = context.bbox;\n\n      svgAttr(frame, {\n        x: bbox.x,\n        y: bbox.y,\n        width: bbox.width,\n        height: bbox.height\n      });\n    },\n\n    remove: function(context) {\n\n      if (context.frame) {\n        svgRemove(context.frame);\n      }\n    }\n  };\n\n  toolManager.registerTool('lasso', {\n    tool: 'lasso.selection',\n    dragging: 'lasso'\n  });\n\n  eventBus.on('lasso.selection.end', function(event) {\n    var target = event.originalEvent.target;\n\n    // only reactive on diagram click\n    // on some occasions, event.hover is not set and we have to check if the target is an svg\n    if (!event.hover && !(target instanceof SVGElement)) {\n      return;\n    }\n\n    eventBus.once('lasso.selection.ended', function() {\n      self.activateLasso(event.originalEvent, true);\n    });\n  });\n\n  // lasso interaction implementation\n\n  eventBus.on('lasso.end', function(event) {\n\n    var bbox = toBBox(event);\n\n    var elements = elementRegistry.filter(function(element) {\n      return element;\n    });\n\n    self.select(elements, bbox);\n  });\n\n  eventBus.on('lasso.start', function(event) {\n\n    var context = event.context;\n\n    context.bbox = toBBox(event);\n    visuals.create(context);\n  });\n\n  eventBus.on('lasso.move', function(event) {\n\n    var context = event.context;\n\n    context.bbox = toBBox(event);\n    visuals.update(context);\n  });\n\n  eventBus.on('lasso.cleanup', function(event) {\n\n    var context = event.context;\n\n    visuals.remove(context);\n  });\n\n\n  // event integration\n\n  eventBus.on('element.mousedown', 1500, function(event) {\n\n    if (!hasSecondaryModifier(event)) {\n      return;\n    }\n\n    self.activateLasso(event.originalEvent);\n\n    // we've handled the event\n    return true;\n  });\n}\n\nLassoTool.$inject = [\n  'eventBus',\n  'canvas',\n  'dragging',\n  'elementRegistry',\n  'selection',\n  'toolManager',\n  'mouse'\n];\n\n\nLassoTool.prototype.activateLasso = function(event, autoActivate) {\n\n  this._dragging.init(event, 'lasso', {\n    autoActivate: autoActivate,\n    cursor: LASSO_TOOL_CURSOR,\n    data: {\n      context: {}\n    }\n  });\n};\n\nLassoTool.prototype.activateSelection = function(event, autoActivate) {\n\n  this._dragging.init(event, 'lasso.selection', {\n    trapClick: false,\n    autoActivate: autoActivate,\n    cursor: LASSO_TOOL_CURSOR,\n    data: {\n      context: {}\n    }\n  });\n};\n\nLassoTool.prototype.select = function(elements, bbox) {\n  var selectedElements = getEnclosedElements(elements, bbox);\n\n  this._selection.select(values(selectedElements));\n};\n\nLassoTool.prototype.toggle = function() {\n  if (this.isActive()) {\n    return this._dragging.cancel();\n  }\n\n  var mouseEvent = this._mouse.getLastMoveEvent();\n\n  this.activateSelection(mouseEvent, !!mouseEvent);\n};\n\nLassoTool.prototype.isActive = function() {\n  var context = this._dragging.context();\n\n  return context && /^lasso/.test(context.prefix);\n};\n\n\n\nfunction toBBox(event) {\n\n  var start = {\n\n    x: event.x - event.dx,\n    y: event.y - event.dy\n  };\n\n  var end = {\n    x: event.x,\n    y: event.y\n  };\n\n  var bbox;\n\n  if ((start.x <= end.x && start.y < end.y) ||\n      (start.x < end.x && start.y <= end.y)) {\n\n    bbox = {\n      x: start.x,\n      y: start.y,\n      width:  end.x - start.x,\n      height: end.y - start.y\n    };\n  } else if ((start.x >= end.x && start.y < end.y) ||\n             (start.x > end.x && start.y <= end.y)) {\n\n    bbox = {\n      x: end.x,\n      y: start.y,\n      width:  start.x - end.x,\n      height: end.y - start.y\n    };\n  } else if ((start.x <= end.x && start.y > end.y) ||\n             (start.x < end.x && start.y >= end.y)) {\n\n    bbox = {\n      x: start.x,\n      y: end.y,\n      width:  end.x - start.x,\n      height: start.y - end.y\n    };\n  } else if ((start.x >= end.x && start.y > end.y) ||\n             (start.x > end.x && start.y >= end.y)) {\n\n    bbox = {\n      x: end.x,\n      y: end.y,\n      width:  start.x - end.x,\n      height: start.y - end.y\n    };\n  } else {\n\n    bbox = {\n      x: end.x,\n      y: end.y,\n      width:  0,\n      height: 0\n    };\n  }\n  return bbox;\n}\n","import ToolManagerModule from '../tool-manager';\nimport MouseModule from '../mouse';\n\nimport LassoTool from './LassoTool';\n\nexport default {\n  __depends__: [\n    ToolManagerModule,\n    MouseModule\n  ],\n  __init__: [ 'lassoTool' ],\n  lassoTool: [ 'type', LassoTool ]\n};\n","import {\n  assign,\n  forEach,\n  isArray\n} from 'min-dash';\n\nimport {\n  Base\n} from '../../model';\n\nimport AlignElementsHandler from './cmd/AlignElementsHandler';\nimport AppendShapeHandler from './cmd/AppendShapeHandler';\nimport CreateConnectionHandler from './cmd/CreateConnectionHandler';\nimport CreateElementsHandler from './cmd/CreateElementsHandler';\nimport CreateLabelHandler from './cmd/CreateLabelHandler';\nimport CreateShapeHandler from './cmd/CreateShapeHandler';\nimport DeleteConnectionHandler from './cmd/DeleteConnectionHandler';\nimport DeleteElementsHandler from './cmd/DeleteElementsHandler';\nimport DeleteShapeHandler from './cmd/DeleteShapeHandler';\nimport DistributeElementsHandler from './cmd/DistributeElementsHandler';\nimport LayoutConnectionHandler from './cmd/LayoutConnectionHandler';\nimport MoveConnectionHandler from './cmd/MoveConnectionHandler';\nimport MoveElementsHandler from './cmd/MoveElementsHandler';\nimport MoveShapeHandler from './cmd/MoveShapeHandler';\nimport ReconnectConnectionHandler from './cmd/ReconnectConnectionHandler';\nimport ReplaceShapeHandler from './cmd/ReplaceShapeHandler';\nimport ResizeShapeHandler from './cmd/ResizeShapeHandler';\nimport SpaceToolHandler from './cmd/SpaceToolHandler';\nimport ToggleShapeCollapseHandler from './cmd/ToggleShapeCollapseHandler';\nimport UpdateAttachmentHandler from './cmd/UpdateAttachmentHandler';\nimport UpdateWaypointsHandler from './cmd/UpdateWaypointsHandler';\n\n\n/**\n * The basic modeling entry point.\n *\n * @param {EventBus} eventBus\n * @param {ElementFactory} elementFactory\n * @param {CommandStack} commandStack\n */\nexport default function Modeling(eventBus, elementFactory, commandStack) {\n  this._eventBus = eventBus;\n  this._elementFactory = elementFactory;\n  this._commandStack = commandStack;\n\n  var self = this;\n\n  eventBus.on('diagram.init', function() {\n\n    // register modeling handlers\n    self.registerHandlers(commandStack);\n  });\n}\n\nModeling.$inject = [ 'eventBus', 'elementFactory', 'commandStack' ];\n\n\nModeling.prototype.getHandlers = function() {\n  return {\n    'shape.append': AppendShapeHandler,\n    'shape.create': CreateShapeHandler,\n    'shape.delete': DeleteShapeHandler,\n    'shape.move': MoveShapeHandler,\n    'shape.resize': ResizeShapeHandler,\n    'shape.replace': ReplaceShapeHandler,\n    'shape.toggleCollapse': ToggleShapeCollapseHandler,\n\n    'spaceTool': SpaceToolHandler,\n\n    'label.create': CreateLabelHandler,\n\n    'connection.create': CreateConnectionHandler,\n    'connection.delete': DeleteConnectionHandler,\n    'connection.move': MoveConnectionHandler,\n    'connection.layout': LayoutConnectionHandler,\n\n    'connection.updateWaypoints': UpdateWaypointsHandler,\n\n    'connection.reconnect': ReconnectConnectionHandler,\n\n    'elements.create': CreateElementsHandler,\n    'elements.move': MoveElementsHandler,\n    'elements.delete': DeleteElementsHandler,\n\n    'elements.distribute': DistributeElementsHandler,\n    'elements.align': AlignElementsHandler,\n\n    'element.updateAttachment': UpdateAttachmentHandler\n  };\n};\n\n/**\n * Register handlers with the command stack\n *\n * @param {CommandStack} commandStack\n */\nModeling.prototype.registerHandlers = function(commandStack) {\n  forEach(this.getHandlers(), function(handler, id) {\n    commandStack.registerHandler(id, handler);\n  });\n};\n\n\n// modeling helpers //////////////////////\n\nModeling.prototype.moveShape = function(shape, delta, newParent, newParentIndex, hints) {\n\n  if (typeof newParentIndex === 'object') {\n    hints = newParentIndex;\n    newParentIndex = null;\n  }\n\n  var context = {\n    shape: shape,\n    delta:  delta,\n    newParent: newParent,\n    newParentIndex: newParentIndex,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.move', context);\n};\n\n\n/**\n * Update the attachment of the given shape.\n *\n * @param {djs.mode.Base} shape\n * @param {djs.model.Base} [newHost]\n */\nModeling.prototype.updateAttachment = function(shape, newHost) {\n  var context = {\n    shape: shape,\n    newHost: newHost\n  };\n\n  this._commandStack.execute('element.updateAttachment', context);\n};\n\n\n/**\n * Move a number of shapes to a new target, either setting it as\n * the new parent or attaching it.\n *\n * @param {Array<djs.mode.Base>} shapes\n * @param {Point} delta\n * @param {djs.model.Base} [target]\n * @param {Object} [hints]\n * @param {boolean} [hints.attach=false]\n */\nModeling.prototype.moveElements = function(shapes, delta, target, hints) {\n\n  hints = hints || {};\n\n  var attach = hints.attach;\n\n  var newParent = target,\n      newHost;\n\n  if (attach === true) {\n    newHost = target;\n    newParent = target.parent;\n  } else\n\n  if (attach === false) {\n    newHost = null;\n  }\n\n  var context = {\n    shapes: shapes,\n    delta: delta,\n    newParent: newParent,\n    newHost: newHost,\n    hints: hints\n  };\n\n  this._commandStack.execute('elements.move', context);\n};\n\n\nModeling.prototype.moveConnection = function(connection, delta, newParent, newParentIndex, hints) {\n\n  if (typeof newParentIndex === 'object') {\n    hints = newParentIndex;\n    newParentIndex = undefined;\n  }\n\n  var context = {\n    connection: connection,\n    delta: delta,\n    newParent: newParent,\n    newParentIndex: newParentIndex,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.move', context);\n};\n\n\nModeling.prototype.layoutConnection = function(connection, hints) {\n  var context = {\n    connection: connection,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.layout', context);\n};\n\n\n/**\n * Create connection.\n *\n * @param {djs.model.Base} source\n * @param {djs.model.Base} target\n * @param {number} [parentIndex]\n * @param {Object|djs.model.Connection} connection\n * @param {djs.model.Base} parent\n * @param {Object} hints\n *\n * @return {djs.model.Connection} the created connection.\n */\nModeling.prototype.createConnection = function(source, target, parentIndex, connection, parent, hints) {\n\n  if (typeof parentIndex === 'object') {\n    hints = parent;\n    parent = connection;\n    connection = parentIndex;\n    parentIndex = undefined;\n  }\n\n  connection = this._create('connection', connection);\n\n  var context = {\n    source: source,\n    target: target,\n    parent: parent,\n    parentIndex: parentIndex,\n    connection: connection,\n    hints: hints\n  };\n\n  this._commandStack.execute('connection.create', context);\n\n  return context.connection;\n};\n\n\n/**\n * Create a shape at the specified position.\n *\n * @param {djs.model.Shape|Object} shape\n * @param {Point} position\n * @param {djs.model.Shape|djs.model.Root} target\n * @param {number} [parentIndex] position in parents children list\n * @param {Object} [hints]\n * @param {boolean} [hints.attach] whether to attach to target or become a child\n *\n * @return {djs.model.Shape} the created shape\n */\nModeling.prototype.createShape = function(shape, position, target, parentIndex, hints) {\n\n  if (typeof parentIndex !== 'number') {\n    hints = parentIndex;\n    parentIndex = undefined;\n  }\n\n  hints = hints || {};\n\n  var attach = hints.attach,\n      parent,\n      host;\n\n  shape = this._create('shape', shape);\n\n  if (attach) {\n    parent = target.parent;\n    host = target;\n  } else {\n    parent = target;\n  }\n\n  var context = {\n    position: position,\n    shape: shape,\n    parent: parent,\n    parentIndex: parentIndex,\n    host: host,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.create', context);\n\n  return context.shape;\n};\n\n\nModeling.prototype.createElements = function(elements, position, parent, parentIndex, hints) {\n  if (!isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  if (typeof parentIndex !== 'number') {\n    hints = parentIndex;\n    parentIndex = undefined;\n  }\n\n  hints = hints || {};\n\n  var context = {\n    position: position,\n    elements: elements,\n    parent: parent,\n    parentIndex: parentIndex,\n    hints: hints\n  };\n\n  this._commandStack.execute('elements.create', context);\n\n  return context.elements;\n};\n\n\nModeling.prototype.createLabel = function(labelTarget, position, label, parent) {\n\n  label = this._create('label', label);\n\n  var context = {\n    labelTarget: labelTarget,\n    position: position,\n    parent: parent || labelTarget.parent,\n    shape: label\n  };\n\n  this._commandStack.execute('label.create', context);\n\n  return context.shape;\n};\n\n\n/**\n * Append shape to given source, drawing a connection\n * between source and the newly created shape.\n *\n * @param {djs.model.Shape} source\n * @param {djs.model.Shape|Object} shape\n * @param {Point} position\n * @param {djs.model.Shape} target\n * @param {Object} [hints]\n * @param {boolean} [hints.attach]\n * @param {djs.model.Connection|Object} [hints.connection]\n * @param {djs.model.Base} [hints.connectionParent]\n *\n * @return {djs.model.Shape} the newly created shape\n */\nModeling.prototype.appendShape = function(source, shape, position, target, hints) {\n\n  hints = hints || {};\n\n  shape = this._create('shape', shape);\n\n  var context = {\n    source: source,\n    position: position,\n    target: target,\n    shape: shape,\n    connection: hints.connection,\n    connectionParent: hints.connectionParent,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.append', context);\n\n  return context.shape;\n};\n\n\nModeling.prototype.removeElements = function(elements) {\n  var context = {\n    elements: elements\n  };\n\n  this._commandStack.execute('elements.delete', context);\n};\n\n\nModeling.prototype.distributeElements = function(groups, axis, dimension) {\n  var context = {\n    groups: groups,\n    axis: axis,\n    dimension: dimension\n  };\n\n  this._commandStack.execute('elements.distribute', context);\n};\n\n\nModeling.prototype.removeShape = function(shape, hints) {\n  var context = {\n    shape: shape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.delete', context);\n};\n\n\nModeling.prototype.removeConnection = function(connection, hints) {\n  var context = {\n    connection: connection,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.delete', context);\n};\n\nModeling.prototype.replaceShape = function(oldShape, newShape, hints) {\n  var context = {\n    oldShape: oldShape,\n    newData: newShape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.replace', context);\n\n  return context.newShape;\n};\n\nModeling.prototype.alignElements = function(elements, alignment) {\n  var context = {\n    elements: elements,\n    alignment: alignment\n  };\n\n  this._commandStack.execute('elements.align', context);\n};\n\nModeling.prototype.resizeShape = function(shape, newBounds, minBounds, hints) {\n  var context = {\n    shape: shape,\n    newBounds: newBounds,\n    minBounds: minBounds,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.resize', context);\n};\n\nModeling.prototype.createSpace = function(movingShapes, resizingShapes, delta, direction, start) {\n  var context = {\n    delta: delta,\n    direction: direction,\n    movingShapes: movingShapes,\n    resizingShapes: resizingShapes,\n    start: start\n  };\n\n  this._commandStack.execute('spaceTool', context);\n};\n\nModeling.prototype.updateWaypoints = function(connection, newWaypoints, hints) {\n  var context = {\n    connection: connection,\n    newWaypoints: newWaypoints,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.updateWaypoints', context);\n};\n\nModeling.prototype.reconnect = function(connection, source, target, dockingOrPoints, hints) {\n  var context = {\n    connection: connection,\n    newSource: source,\n    newTarget: target,\n    dockingOrPoints: dockingOrPoints,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.reconnect', context);\n};\n\nModeling.prototype.reconnectStart = function(connection, newSource, dockingOrPoints, hints) {\n  if (!hints) {\n    hints = {};\n  }\n\n  this.reconnect(connection, newSource, connection.target, dockingOrPoints, assign(hints, {\n    docking: 'source'\n  }));\n};\n\nModeling.prototype.reconnectEnd = function(connection, newTarget, dockingOrPoints, hints) {\n  if (!hints) {\n    hints = {};\n  }\n\n  this.reconnect(connection, connection.source, newTarget, dockingOrPoints, assign(hints, {\n    docking: 'target'\n  }));\n};\n\nModeling.prototype.connect = function(source, target, attrs, hints) {\n  return this.createConnection(source, target, attrs || {}, source.parent, hints);\n};\n\nModeling.prototype._create = function(type, attrs) {\n  if (attrs instanceof Base) {\n    return attrs;\n  } else {\n    return this._elementFactory.create(type, attrs);\n  }\n};\n\nModeling.prototype.toggleCollapse = function(shape, hints) {\n  var context = {\n    shape: shape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.toggleCollapse', context);\n};\n","import { forEach } from 'min-dash';\n\n/**\n * A handler that align elements in a certain way.\n *\n */\nexport default function AlignElements(modeling, canvas) {\n  this._modeling = modeling;\n  this._canvas = canvas;\n}\n\nAlignElements.$inject = [ 'modeling', 'canvas' ];\n\n\nAlignElements.prototype.preExecute = function(context) {\n  var modeling = this._modeling;\n\n  var elements = context.elements,\n      alignment = context.alignment;\n\n\n  forEach(elements, function(element) {\n    var delta = {\n      x: 0,\n      y: 0\n    };\n\n    if (alignment.left) {\n      delta.x = alignment.left - element.x;\n\n    } else if (alignment.right) {\n      delta.x = (alignment.right - element.width) - element.x;\n\n    } else if (alignment.center) {\n      delta.x = (alignment.center - Math.round(element.width / 2)) - element.x;\n\n    } else if (alignment.top) {\n      delta.y = alignment.top - element.y;\n\n    } else if (alignment.bottom) {\n      delta.y = (alignment.bottom - element.height) - element.y;\n\n    } else if (alignment.middle) {\n      delta.y = (alignment.middle - Math.round(element.height / 2)) - element.y;\n    }\n\n    modeling.moveElements([ element ], delta, element.parent);\n  });\n};\n\nAlignElements.prototype.postExecute = function(context) {\n\n};\n","import { some } from 'min-dash';\n\n\n/**\n * A handler that implements reversible appending of shapes\n * to a source shape.\n *\n * @param {canvas} Canvas\n * @param {elementFactory} ElementFactory\n * @param {modeling} Modeling\n */\nexport default function AppendShapeHandler(modeling) {\n  this._modeling = modeling;\n}\n\nAppendShapeHandler.$inject = [ 'modeling' ];\n\n\n// api //////////////////////\n\n\n/**\n * Creates a new shape\n *\n * @param {Object} context\n * @param {ElementDescriptor} context.shape the new shape\n * @param {ElementDescriptor} context.source the source object\n * @param {ElementDescriptor} context.parent the parent object\n * @param {Point} context.position position of the new element\n */\nAppendShapeHandler.prototype.preExecute = function(context) {\n\n  var source = context.source;\n\n  if (!source) {\n    throw new Error('source required');\n  }\n\n  var target = context.target || source.parent,\n      shape = context.shape,\n      hints = context.hints || {};\n\n  shape = context.shape =\n    this._modeling.createShape(\n      shape,\n      context.position,\n      target, { attach: hints.attach });\n\n  context.shape = shape;\n};\n\nAppendShapeHandler.prototype.postExecute = function(context) {\n  var hints = context.hints || {};\n\n  if (!existsConnection(context.source, context.shape)) {\n\n    // create connection\n    if (hints.connectionTarget === context.source) {\n      this._modeling.connect(context.shape, context.source, context.connection);\n    } else {\n      this._modeling.connect(context.source, context.shape, context.connection);\n    }\n  }\n};\n\n\nfunction existsConnection(source, target) {\n  return some(source.outgoing, function(c) {\n    return c.target === target;\n  });\n}","export default function CreateConnectionHandler(canvas, layouter) {\n  this._canvas = canvas;\n  this._layouter = layouter;\n}\n\nCreateConnectionHandler.$inject = [ 'canvas', 'layouter' ];\n\n\n// api //////////////////////\n\n\n/**\n * Appends a shape to a target shape\n *\n * @param {Object} context\n * @param {djs.element.Base} context.source the source object\n * @param {djs.element.Base} context.target the parent object\n * @param {Point} context.position position of the new element\n */\nCreateConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      source = context.source,\n      target = context.target,\n      parent = context.parent,\n      parentIndex = context.parentIndex,\n      hints = context.hints;\n\n  if (!source || !target) {\n    throw new Error('source and target required');\n  }\n\n  if (!parent) {\n    throw new Error('parent required');\n  }\n\n  connection.source = source;\n  connection.target = target;\n\n  if (!connection.waypoints) {\n    connection.waypoints = this._layouter.layoutConnection(connection, hints);\n  }\n\n  // add connection\n  this._canvas.addConnection(connection, parent, parentIndex);\n\n  return connection;\n};\n\nCreateConnectionHandler.prototype.revert = function(context) {\n  var connection = context.connection;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n\n  return connection;\n};","import {\r\n  assign,\r\n  filter,\r\n  forEach,\r\n  isNumber,\r\n  map,\r\n  pick,\r\n  values\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getBBox,\r\n  getParents\r\n} from '../../../util/Elements';\r\n\r\nvar round = Math.round;\r\n\r\nexport default function CreateElementsHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nCreateElementsHandler.$inject = [\r\n  'modeling'\r\n];\r\n\r\nCreateElementsHandler.prototype.preExecute = function(context) {\r\n  var elements = context.elements,\r\n      parent = context.parent,\r\n      parentIndex = context.parentIndex,\r\n      position = context.position,\r\n      hints = context.hints;\r\n\r\n  var modeling = this._modeling;\r\n\r\n  // make sure each element has x and y\r\n  forEach(elements, function(element) {\r\n    if (!isNumber(element.x)) {\r\n      element.x = 0;\r\n    }\r\n\r\n    if (!isNumber(element.y)) {\r\n      element.y = 0;\r\n    }\r\n  });\r\n\r\n  var visibleElements = filter(elements, function(element) {\r\n    return !element.hidden;\r\n  });\r\n\r\n  var bbox = getBBox(visibleElements);\r\n\r\n  // center elements around position\r\n  forEach(elements, function(element) {\r\n    if (isConnection(element)) {\r\n      element.waypoints = map(element.waypoints, function(waypoint) {\r\n        return {\r\n          x: round(waypoint.x - bbox.x - bbox.width / 2 + position.x),\r\n          y: round(waypoint.y - bbox.y - bbox.height / 2 + position.y)\r\n        };\r\n      });\r\n    }\r\n\r\n    assign(element, {\r\n      x: round(element.x - bbox.x - bbox.width / 2 + position.x),\r\n      y: round(element.y - bbox.y - bbox.height / 2 + position.y)\r\n    });\r\n  });\r\n\r\n  var parents = getParents(elements);\r\n\r\n  var cache = {};\r\n\r\n  forEach(elements, function(element) {\r\n    if (isConnection(element)) {\r\n      cache[ element.id ] = isNumber(parentIndex) ?\r\n        modeling.createConnection(\r\n          cache[ element.source.id ],\r\n          cache[ element.target.id ],\r\n          parentIndex,\r\n          element,\r\n          element.parent || parent,\r\n          hints\r\n        ) :\r\n        modeling.createConnection(\r\n          cache[ element.source.id ],\r\n          cache[ element.target.id ],\r\n          element,\r\n          element.parent || parent,\r\n          hints\r\n        );\r\n\r\n      return;\r\n    }\r\n\r\n    var createShapeHints = assign({}, hints);\r\n\r\n    if (parents.indexOf(element) === -1) {\r\n      createShapeHints.autoResize = false;\r\n    }\r\n\r\n    cache[ element.id ] = isNumber(parentIndex) ?\r\n      modeling.createShape(\r\n        element,\r\n        pick(element, [ 'x', 'y', 'width', 'height' ]),\r\n        element.parent || parent,\r\n        parentIndex,\r\n        createShapeHints\r\n      ) :\r\n      modeling.createShape(\r\n        element,\r\n        pick(element, [ 'x', 'y', 'width', 'height' ]),\r\n        element.parent || parent,\r\n        createShapeHints\r\n      );\r\n  });\r\n\r\n  context.elements = values(cache);\r\n};\r\n\r\n// helpers //////////\r\n\r\nfunction isConnection(element) {\r\n  return !!element.waypoints;\r\n}","import inherits from 'inherits';\n\nimport CreateShapeHandler from './CreateShapeHandler';\n\n\n/**\n * A handler that attaches a label to a given target shape.\n *\n * @param {Canvas} canvas\n */\nexport default function CreateLabelHandler(canvas) {\n  CreateShapeHandler.call(this, canvas);\n}\n\ninherits(CreateLabelHandler, CreateShapeHandler);\n\nCreateLabelHandler.$inject = [ 'canvas' ];\n\n\n// api //////////////////////\n\n\nvar originalExecute = CreateShapeHandler.prototype.execute;\n\n/**\n * Appends a label to a target shape.\n *\n * @method CreateLabelHandler#execute\n *\n * @param {Object} context\n * @param {ElementDescriptor} context.target the element the label is attached to\n * @param {ElementDescriptor} context.parent the parent object\n * @param {Point} context.position position of the new element\n */\nCreateLabelHandler.prototype.execute = function(context) {\n\n  var label = context.shape;\n\n  ensureValidDimensions(label);\n\n  label.labelTarget = context.labelTarget;\n\n  return originalExecute.call(this, context);\n};\n\nvar originalRevert = CreateShapeHandler.prototype.revert;\n\n/**\n * Undo append by removing the shape\n */\nCreateLabelHandler.prototype.revert = function(context) {\n  context.shape.labelTarget = null;\n\n  return originalRevert.call(this, context);\n};\n\n\n// helpers //////////////////////\n\nfunction ensureValidDimensions(label) {\n\n  // make sure a label has valid { width, height } dimensions\n  [ 'width', 'height' ].forEach(function(prop) {\n    if (typeof label[prop] === 'undefined') {\n      label[prop] = 0;\n    }\n  });\n}","import { assign } from 'min-dash';\n\nvar round = Math.round;\n\n\n/**\n * A handler that implements reversible addition of shapes.\n *\n * @param {canvas} Canvas\n */\nexport default function CreateShapeHandler(canvas) {\n  this._canvas = canvas;\n}\n\nCreateShapeHandler.$inject = [ 'canvas' ];\n\n\n// api //////////////////////\n\n\n/**\n * Appends a shape to a target shape\n *\n * @param {Object} context\n * @param {djs.model.Base} context.parent the parent object\n * @param {Point} context.position position of the new element\n */\nCreateShapeHandler.prototype.execute = function(context) {\n\n  var shape = context.shape,\n      positionOrBounds = context.position,\n      parent = context.parent,\n      parentIndex = context.parentIndex;\n\n  if (!parent) {\n    throw new Error('parent required');\n  }\n\n  if (!positionOrBounds) {\n    throw new Error('position required');\n  }\n\n  // (1) add at event center position _or_ at given bounds\n  if (positionOrBounds.width !== undefined) {\n    assign(shape, positionOrBounds);\n  } else {\n    assign(shape, {\n      x: positionOrBounds.x - round(shape.width / 2),\n      y: positionOrBounds.y - round(shape.height / 2)\n    });\n  }\n\n  // (2) add to canvas\n  this._canvas.addShape(shape, parent, parentIndex);\n\n  return shape;\n};\n\n\n/**\n * Undo append by removing the shape\n */\nCreateShapeHandler.prototype.revert = function(context) {\n\n  var shape = context.shape;\n\n  // (3) remove form canvas\n  this._canvas.removeShape(shape);\n\n  return shape;\n};","import {\n  add as collectionAdd,\n  indexOf as collectionIdx\n} from '../../../util/Collections';\n\n\n/**\n * A handler that implements reversible deletion of Connections.\n */\nexport default function DeleteConnectionHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\n\nDeleteConnectionHandler.$inject = [\n  'canvas',\n  'modeling'\n];\n\n\nDeleteConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      parent = connection.parent;\n\n  context.parent = parent;\n\n  // remember containment\n  context.parentIndex = collectionIdx(parent.children, connection);\n\n  context.source = connection.source;\n  context.target = connection.target;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n\n  return connection;\n};\n\n/**\n * Command revert implementation.\n */\nDeleteConnectionHandler.prototype.revert = function(context) {\n\n  var connection = context.connection,\n      parent = context.parent,\n      parentIndex = context.parentIndex;\n\n  connection.source = context.source;\n  connection.target = context.target;\n\n  // restore containment\n  collectionAdd(parent.children, connection, parentIndex);\n\n  this._canvas.addConnection(connection, parent);\n\n  return connection;\n};\n","import { forEach } from 'min-dash';\n\n\nexport default function DeleteElementsHandler(modeling, elementRegistry) {\n  this._modeling = modeling;\n  this._elementRegistry = elementRegistry;\n}\n\nDeleteElementsHandler.$inject = [\n  'modeling',\n  'elementRegistry'\n];\n\n\nDeleteElementsHandler.prototype.postExecute = function(context) {\n\n  var modeling = this._modeling,\n      elementRegistry = this._elementRegistry,\n      elements = context.elements;\n\n  forEach(elements, function(element) {\n\n    // element may have been removed with previous\n    // remove operations already (e.g. in case of nesting)\n    if (!elementRegistry.get(element.id)) {\n      return;\n    }\n\n    if (element.waypoints) {\n      modeling.removeConnection(element);\n    } else {\n      modeling.removeShape(element);\n    }\n  });\n};","import {\n  add as collectionAdd,\n  indexOf as collectionIdx\n} from '../../../util/Collections';\n\nimport { saveClear } from '../../../util/Removal';\n\n\n/**\n * A handler that implements reversible deletion of shapes.\n *\n */\nexport default function DeleteShapeHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\n\nDeleteShapeHandler.$inject = [ 'canvas', 'modeling' ];\n\n\n/**\n * - Remove connections\n * - Remove all direct children\n */\nDeleteShapeHandler.prototype.preExecute = function(context) {\n\n  var modeling = this._modeling;\n\n  var shape = context.shape;\n\n  // remove connections\n  saveClear(shape.incoming, function(connection) {\n\n    // To make sure that the connection isn't removed twice\n    // For example if a container is removed\n    modeling.removeConnection(connection, { nested: true });\n  });\n\n  saveClear(shape.outgoing, function(connection) {\n    modeling.removeConnection(connection, { nested: true });\n  });\n\n  // remove child shapes and connections\n  saveClear(shape.children, function(child) {\n    if (isConnection(child)) {\n      modeling.removeConnection(child, { nested: true });\n    } else {\n      modeling.removeShape(child, { nested: true });\n    }\n  });\n};\n\n/**\n * Remove shape and remember the parent\n */\nDeleteShapeHandler.prototype.execute = function(context) {\n  var canvas = this._canvas;\n\n  var shape = context.shape,\n      oldParent = shape.parent;\n\n  context.oldParent = oldParent;\n\n  // remove containment\n  context.oldParentIndex = collectionIdx(oldParent.children, shape);\n\n  // remove shape\n  canvas.removeShape(shape);\n\n  return shape;\n};\n\n\n/**\n * Command revert implementation\n */\nDeleteShapeHandler.prototype.revert = function(context) {\n\n  var canvas = this._canvas;\n\n  var shape = context.shape,\n      oldParent = context.oldParent,\n      oldParentIndex = context.oldParentIndex;\n\n  // restore containment\n  collectionAdd(oldParent.children, shape, oldParentIndex);\n\n  canvas.addShape(shape, oldParent);\n\n  return shape;\n};\n\nfunction isConnection(element) {\n  return element.waypoints;\n}\n","import {\n  forEach,\n  sortBy\n} from 'min-dash';\n\n\n/**\n * A handler that distributes elements evenly.\n */\nexport default function DistributeElements(modeling) {\n  this._modeling = modeling;\n}\n\nDistributeElements.$inject = [ 'modeling' ];\n\nvar OFF_AXIS = {\n  x: 'y',\n  y: 'x'\n};\n\nDistributeElements.prototype.preExecute = function(context) {\n  var modeling = this._modeling;\n\n  var groups = context.groups,\n      axis = context.axis,\n      dimension = context.dimension;\n\n  function updateRange(group, element) {\n    group.range.min = Math.min(element[axis], group.range.min);\n    group.range.max = Math.max(element[axis] + element[dimension], group.range.max);\n  }\n\n  function center(element) {\n    return element[axis] + element[dimension] / 2;\n  }\n\n  function lastIdx(arr) {\n    return arr.length - 1;\n  }\n\n  function rangeDiff(range) {\n    return range.max - range.min;\n  }\n\n  function centerElement(refCenter, element) {\n    var delta = { y: 0 };\n\n    delta[axis] = refCenter - center(element);\n\n    if (delta[axis]) {\n\n      delta[OFF_AXIS[axis]] = 0;\n\n      modeling.moveElements([ element ], delta, element.parent);\n    }\n  }\n\n  var firstGroup = groups[0],\n      lastGroupIdx = lastIdx(groups),\n      lastGroup = groups[ lastGroupIdx ];\n\n  var margin,\n      spaceInBetween,\n      groupsSize = 0; // the size of each range\n\n  forEach(groups, function(group, idx) {\n    var sortedElements,\n        refElem,\n        refCenter;\n\n    if (group.elements.length < 2) {\n      if (idx && idx !== groups.length - 1) {\n        updateRange(group, group.elements[0]);\n\n        groupsSize += rangeDiff(group.range);\n      }\n      return;\n    }\n\n    sortedElements = sortBy(group.elements, axis);\n\n    refElem = sortedElements[0];\n\n    if (idx === lastGroupIdx) {\n      refElem = sortedElements[lastIdx(sortedElements)];\n    }\n\n    refCenter = center(refElem);\n\n    // wanna update the ranges after the shapes have been centered\n    group.range = null;\n\n    forEach(sortedElements, function(element) {\n\n      centerElement(refCenter, element);\n\n      if (group.range === null) {\n        group.range = {\n          min: element[axis],\n          max: element[axis] + element[dimension]\n        };\n\n        return;\n      }\n\n      // update group's range after centering the range elements\n      updateRange(group, element);\n    });\n\n    if (idx && idx !== groups.length - 1) {\n      groupsSize += rangeDiff(group.range);\n    }\n  });\n\n  spaceInBetween = Math.abs(lastGroup.range.min - firstGroup.range.max);\n\n  margin = Math.round((spaceInBetween - groupsSize) / (groups.length - 1));\n\n  if (margin < groups.length - 1) {\n    return;\n  }\n\n  forEach(groups, function(group, groupIdx) {\n    var delta = {},\n        prevGroup;\n\n    if (group === firstGroup || group === lastGroup) {\n      return;\n    }\n\n    prevGroup = groups[groupIdx - 1];\n\n    group.range.max = 0;\n\n    forEach(group.elements, function(element, idx) {\n      delta[OFF_AXIS[axis]] = 0;\n      delta[axis] = (prevGroup.range.max - element[axis]) + margin;\n\n      if (group.range.min !== element[axis]) {\n        delta[axis] += element[axis] - group.range.min;\n      }\n\n      if (delta[axis]) {\n        modeling.moveElements([ element ], delta, element.parent);\n      }\n\n      group.range.max = Math.max(element[axis] + element[dimension], idx ? group.range.max : 0);\n    });\n  });\n};\n\nDistributeElements.prototype.postExecute = function(context) {\n\n};\n","import { assign } from 'min-dash';\n\n\n/**\n * A handler that implements reversible moving of shapes.\n */\nexport default function LayoutConnectionHandler(layouter, canvas) {\n  this._layouter = layouter;\n  this._canvas = canvas;\n}\n\nLayoutConnectionHandler.$inject = [ 'layouter', 'canvas' ];\n\nLayoutConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection;\n\n  var oldWaypoints = connection.waypoints;\n\n  assign(context, {\n    oldWaypoints: oldWaypoints\n  });\n\n  connection.waypoints = this._layouter.layoutConnection(connection, context.hints);\n\n  return connection;\n};\n\nLayoutConnectionHandler.prototype.revert = function(context) {\n\n  var connection = context.connection;\n\n  connection.waypoints = context.oldWaypoints;\n\n  return connection;\n};\n","import { forEach } from 'min-dash';\n\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from '../../../util/Collections';\n\n\n/**\n * A handler that implements reversible moving of connections.\n *\n * The handler differs from the layout connection handler in a sense\n * that it preserves the connection layout.\n */\nexport default function MoveConnectionHandler() { }\n\n\nMoveConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      delta = context.delta;\n\n  var newParent = context.newParent || connection.parent,\n      newParentIndex = context.newParentIndex,\n      oldParent = connection.parent;\n\n  // save old parent in context\n  context.oldParent = oldParent;\n  context.oldParentIndex = collectionRemove(oldParent.children, connection);\n\n  // add to new parent at position\n  collectionAdd(newParent.children, connection, newParentIndex);\n\n  // update parent\n  connection.parent = newParent;\n\n  // update waypoint positions\n  forEach(connection.waypoints, function(p) {\n    p.x += delta.x;\n    p.y += delta.y;\n\n    if (p.original) {\n      p.original.x += delta.x;\n      p.original.y += delta.y;\n    }\n  });\n\n  return connection;\n};\n\nMoveConnectionHandler.prototype.revert = function(context) {\n\n  var connection = context.connection,\n      newParent = connection.parent,\n      oldParent = context.oldParent,\n      oldParentIndex = context.oldParentIndex,\n      delta = context.delta;\n\n  // remove from newParent\n  collectionRemove(newParent.children, connection);\n\n  // restore previous location in old parent\n  collectionAdd(oldParent.children, connection, oldParentIndex);\n\n  // restore parent\n  connection.parent = oldParent;\n\n  // revert to old waypoint positions\n  forEach(connection.waypoints, function(p) {\n    p.x -= delta.x;\n    p.y -= delta.y;\n\n    if (p.original) {\n      p.original.x -= delta.x;\n      p.original.y -= delta.y;\n    }\n  });\n\n  return connection;\n};","import MoveHelper from './helper/MoveHelper';\n\n\n/**\n * A handler that implements reversible moving of shapes.\n */\nexport default function MoveElementsHandler(modeling) {\n  this._helper = new MoveHelper(modeling);\n}\n\nMoveElementsHandler.$inject = [ 'modeling' ];\n\nMoveElementsHandler.prototype.preExecute = function(context) {\n  context.closure = this._helper.getClosure(context.shapes);\n};\n\nMoveElementsHandler.prototype.postExecute = function(context) {\n\n  var hints = context.hints,\n      primaryShape;\n\n  if (hints && hints.primaryShape) {\n    primaryShape = hints.primaryShape;\n    hints.oldParent = primaryShape.parent;\n  }\n\n  this._helper.moveClosure(\n    context.closure,\n    context.delta,\n    context.newParent,\n    context.newHost,\n    primaryShape\n  );\n};","import {\n  assign,\n  forEach,\n  pick\n} from 'min-dash';\n\nimport MoveHelper from './helper/MoveHelper';\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from '../../../util/Collections';\n\nimport {\n  getMovedSourceAnchor,\n  getMovedTargetAnchor\n} from './helper/AnchorsHelper';\n\n\n/**\n * A handler that implements reversible moving of shapes.\n */\nexport default function MoveShapeHandler(modeling) {\n  this._modeling = modeling;\n\n  this._helper = new MoveHelper(modeling);\n}\n\nMoveShapeHandler.$inject = [ 'modeling' ];\n\n\nMoveShapeHandler.prototype.execute = function(context) {\n\n  var shape = context.shape,\n      delta = context.delta,\n      newParent = context.newParent || shape.parent,\n      newParentIndex = context.newParentIndex,\n      oldParent = shape.parent;\n\n  context.oldBounds = pick(shape, [ 'x', 'y', 'width', 'height' ]);\n\n  // save old parent in context\n  context.oldParent = oldParent;\n  context.oldParentIndex = collectionRemove(oldParent.children, shape);\n\n  // add to new parent at position\n  collectionAdd(newParent.children, shape, newParentIndex);\n\n  // update shape parent + position\n  assign(shape, {\n    parent: newParent,\n    x: shape.x + delta.x,\n    y: shape.y + delta.y\n  });\n\n  return shape;\n};\n\nMoveShapeHandler.prototype.postExecute = function(context) {\n\n  var shape = context.shape,\n      delta = context.delta,\n      hints = context.hints;\n\n  var modeling = this._modeling;\n\n  if (hints.layout !== false) {\n\n    forEach(shape.incoming, function(c) {\n      modeling.layoutConnection(c, {\n        connectionEnd: getMovedTargetAnchor(c, shape, delta)\n      });\n    });\n\n    forEach(shape.outgoing, function(c) {\n      modeling.layoutConnection(c, {\n        connectionStart: getMovedSourceAnchor(c, shape, delta)\n      });\n    });\n  }\n\n  if (hints.recurse !== false) {\n    this.moveChildren(context);\n  }\n};\n\nMoveShapeHandler.prototype.revert = function(context) {\n\n  var shape = context.shape,\n      oldParent = context.oldParent,\n      oldParentIndex = context.oldParentIndex,\n      delta = context.delta;\n\n  // restore previous location in old parent\n  collectionAdd(oldParent.children, shape, oldParentIndex);\n\n  // revert to old position and parent\n  assign(shape, {\n    parent: oldParent,\n    x: shape.x - delta.x,\n    y: shape.y - delta.y\n  });\n\n  return shape;\n};\n\nMoveShapeHandler.prototype.moveChildren = function(context) {\n\n  var delta = context.delta,\n      shape = context.shape;\n\n  this._helper.moveRecursive(shape.children, delta, null);\n};\n\nMoveShapeHandler.prototype.getNewParent = function(context) {\n  return context.newParent || context.shape.parent;\n};\n","import { isArray } from 'min-dash';\n\n\n/**\n * Reconnect connection handler\n */\nexport default function ReconnectConnectionHandler(modeling) {\n  this._modeling = modeling;\n}\n\nReconnectConnectionHandler.$inject = [ 'modeling' ];\n\nReconnectConnectionHandler.prototype.execute = function(context) {\n  var newSource = context.newSource,\n      newTarget = context.newTarget,\n      connection = context.connection,\n      dockingOrPoints = context.dockingOrPoints;\n\n  if (!newSource && !newTarget) {\n    throw new Error('newSource or newTarget required');\n  }\n\n  if (isArray(dockingOrPoints)) {\n    context.oldWaypoints = connection.waypoints;\n    connection.waypoints = dockingOrPoints;\n  }\n\n  if (newSource) {\n    context.oldSource = connection.source;\n    connection.source = newSource;\n  }\n\n  if (newTarget) {\n    context.oldTarget = connection.target;\n    connection.target = newTarget;\n  }\n\n  return connection;\n};\n\nReconnectConnectionHandler.prototype.postExecute = function(context) {\n  var connection = context.connection,\n      newSource = context.newSource,\n      newTarget = context.newTarget,\n      dockingOrPoints = context.dockingOrPoints,\n      hints = context.hints || {};\n\n  var layoutConnectionHints = {};\n\n  if (hints.connectionStart) {\n    layoutConnectionHints.connectionStart = hints.connectionStart;\n  }\n\n  if (hints.connectionEnd) {\n    layoutConnectionHints.connectionEnd = hints.connectionEnd;\n  }\n\n  if (hints.layoutConnection === false) {\n    return;\n  }\n\n  if (newSource && (!newTarget || hints.docking === 'source')) {\n    layoutConnectionHints.connectionStart = layoutConnectionHints.connectionStart\n      || getDocking(isArray(dockingOrPoints) ? dockingOrPoints[ 0 ] : dockingOrPoints);\n  }\n\n  if (newTarget && (!newSource || hints.docking === 'target')) {\n    layoutConnectionHints.connectionEnd = layoutConnectionHints.connectionEnd\n      || getDocking(isArray(dockingOrPoints) ? dockingOrPoints[ dockingOrPoints.length - 1 ] : dockingOrPoints);\n  }\n\n  if (hints.newWaypoints) {\n    layoutConnectionHints.waypoints = hints.newWaypoints;\n  }\n\n  this._modeling.layoutConnection(connection, layoutConnectionHints);\n};\n\nReconnectConnectionHandler.prototype.revert = function(context) {\n  var oldSource = context.oldSource,\n      oldTarget = context.oldTarget,\n      oldWaypoints = context.oldWaypoints,\n      connection = context.connection;\n\n  if (oldSource) {\n    connection.source = oldSource;\n  }\n\n  if (oldTarget) {\n    connection.target = oldTarget;\n  }\n\n  if (oldWaypoints) {\n    connection.waypoints = oldWaypoints;\n  }\n\n  return connection;\n};\n\n\n\n// helpers //////////\n\nfunction getDocking(point) {\n  return point.original || point;\n}","import { forEach } from 'min-dash';\n\nimport {\n  getResizedSourceAnchor,\n  getResizedTargetAnchor\n} from './helper/AnchorsHelper';\n\n/**\n * Replace shape by adding new shape and removing old shape. Incoming and outgoing connections will\n * be kept if possible.\n *\n * @class\n * @constructor\n *\n * @param {Modeling} modeling\n * @param {Rules} rules\n */\nexport default function ReplaceShapeHandler(modeling, rules) {\n  this._modeling = modeling;\n  this._rules = rules;\n}\n\nReplaceShapeHandler.$inject = [ 'modeling', 'rules' ];\n\n\n/**\n * Add new shape.\n *\n * @param {Object} context\n * @param {djs.model.Shape} context.oldShape\n * @param {Object} context.newData\n * @param {string} context.newData.type\n * @param {number} context.newData.x\n * @param {number} context.newData.y\n * @param {Object} [hints]\n */\nReplaceShapeHandler.prototype.preExecute = function(context) {\n  var self = this,\n      modeling = this._modeling,\n      rules = this._rules;\n\n  var oldShape = context.oldShape,\n      newData = context.newData,\n      hints = context.hints || {},\n      newShape;\n\n  function canReconnect(source, target, connection) {\n    return rules.allowed('connection.reconnect', {\n      connection: connection,\n      source: source,\n      target: target\n    });\n  }\n\n  // (1) add new shape at given position\n  var position = {\n    x: newData.x,\n    y: newData.y\n  };\n\n  var oldBounds = {\n    x: oldShape.x,\n    y: oldShape.y,\n    width: oldShape.width,\n    height: oldShape.height\n  };\n\n  newShape = context.newShape =\n    context.newShape ||\n    self.createShape(newData, position, oldShape.parent, hints);\n\n  // (2) update host\n  if (oldShape.host) {\n    modeling.updateAttachment(newShape, oldShape.host);\n  }\n\n  // (3) adopt all children from old shape\n  var children;\n\n  if (hints.moveChildren !== false) {\n    children = oldShape.children.slice();\n\n    modeling.moveElements(children, { x: 0, y: 0 }, newShape, hints);\n  }\n\n  // (4) reconnect connections to new shape if possible\n  var incoming = oldShape.incoming.slice(),\n      outgoing = oldShape.outgoing.slice();\n\n  forEach(incoming, function(connection) {\n    var source = connection.source,\n        allowed = canReconnect(source, newShape, connection);\n\n    if (allowed) {\n      self.reconnectEnd(\n        connection, newShape,\n        getResizedTargetAnchor(connection, newShape, oldBounds),\n        hints\n      );\n    }\n  });\n\n  forEach(outgoing, function(connection) {\n    var target = connection.target,\n        allowed = canReconnect(newShape, target, connection);\n\n    if (allowed) {\n      self.reconnectStart(\n        connection, newShape,\n        getResizedSourceAnchor(connection, newShape, oldBounds),\n        hints\n      );\n    }\n  });\n};\n\n\n/**\n * Remove old shape.\n */\nReplaceShapeHandler.prototype.postExecute = function(context) {\n  var oldShape = context.oldShape;\n\n  this._modeling.removeShape(oldShape);\n};\n\n\nReplaceShapeHandler.prototype.execute = function(context) {};\n\n\nReplaceShapeHandler.prototype.revert = function(context) {};\n\n\nReplaceShapeHandler.prototype.createShape = function(shape, position, target, hints) {\n  return this._modeling.createShape(shape, position, target, hints);\n};\n\n\nReplaceShapeHandler.prototype.reconnectStart = function(connection, newSource, dockingPoint, hints) {\n  this._modeling.reconnectStart(connection, newSource, dockingPoint, hints);\n};\n\n\nReplaceShapeHandler.prototype.reconnectEnd = function(connection, newTarget, dockingPoint, hints) {\n  this._modeling.reconnectEnd(connection, newTarget, dockingPoint, hints);\n};\n","import {\n  assign,\n  forEach\n} from 'min-dash';\n\nimport {\n  getResizedSourceAnchor,\n  getResizedTargetAnchor\n} from './helper/AnchorsHelper';\n\n\n/**\n * A handler that implements reversible resizing of shapes.\n *\n * @param {Modeling} modeling\n */\nexport default function ResizeShapeHandler(modeling) {\n  this._modeling = modeling;\n}\n\nResizeShapeHandler.$inject = [ 'modeling' ];\n\n/**\n * {\n *   shape: {....}\n *   newBounds: {\n *     width:  20,\n *     height: 40,\n *     x:       5,\n *     y:      10\n *   }\n *\n * }\n */\nResizeShapeHandler.prototype.execute = function(context) {\n  var shape = context.shape,\n      newBounds = context.newBounds,\n      minBounds = context.minBounds;\n\n  if (newBounds.x === undefined || newBounds.y === undefined ||\n      newBounds.width === undefined || newBounds.height === undefined) {\n    throw new Error('newBounds must have {x, y, width, height} properties');\n  }\n\n  if (minBounds && (newBounds.width < minBounds.width\n    || newBounds.height < minBounds.height)) {\n    throw new Error('width and height cannot be less than minimum height and width');\n  } else if (!minBounds\n    && newBounds.width < 10 || newBounds.height < 10) {\n    throw new Error('width and height cannot be less than 10px');\n  }\n\n  // save old bbox in context\n  context.oldBounds = {\n    width:  shape.width,\n    height: shape.height,\n    x:      shape.x,\n    y:      shape.y\n  };\n\n  // update shape\n  assign(shape, {\n    width:  newBounds.width,\n    height: newBounds.height,\n    x:      newBounds.x,\n    y:      newBounds.y\n  });\n\n  return shape;\n};\n\nResizeShapeHandler.prototype.postExecute = function(context) {\n  var modeling = this._modeling;\n\n  var shape = context.shape,\n      oldBounds = context.oldBounds,\n      hints = context.hints || {};\n\n  if (hints.layout === false) {\n    return;\n  }\n\n  forEach(shape.incoming, function(c) {\n    modeling.layoutConnection(c, {\n      connectionEnd: getResizedTargetAnchor(c, shape, oldBounds)\n    });\n  });\n\n  forEach(shape.outgoing, function(c) {\n    modeling.layoutConnection(c, {\n      connectionStart: getResizedSourceAnchor(c, shape, oldBounds)\n    });\n  });\n\n};\n\nResizeShapeHandler.prototype.revert = function(context) {\n\n  var shape = context.shape,\n      oldBounds = context.oldBounds;\n\n  // restore previous bbox\n  assign(shape, {\n    width:  oldBounds.width,\n    height: oldBounds.height,\n    x:      oldBounds.x,\n    y:      oldBounds.y\n  });\n\n  return shape;\n};\n","import {\n  assign,\n  forEach,\n  map\n} from 'min-dash';\n\nimport {\n  getWaypointsUpdatingConnections,\n  resizeBounds\n} from '../../space-tool/SpaceUtil';\n\nimport {\n  getMovedSourceAnchor,\n  getMovedTargetAnchor,\n  getResizedSourceAnchor,\n  getResizedTargetAnchor\n} from './helper/AnchorsHelper';\n\n\n/**\n * Add or remove space by moving and resizing shapes and updating connection waypoints.\n */\nexport default function SpaceToolHandler(modeling) {\n  this._modeling = modeling;\n}\n\nSpaceToolHandler.$inject = [ 'modeling' ];\n\nSpaceToolHandler.prototype.preExecute = function(context) {\n  var delta = context.delta,\n      direction = context.direction,\n      movingShapes = context.movingShapes,\n      resizingShapes = context.resizingShapes,\n      start = context.start,\n      oldBounds = {};\n\n  // (1) move shapes\n  this.moveShapes(movingShapes, delta);\n\n  // (2a) save old bounds of resized shapes\n  forEach(resizingShapes, function(shape) {\n    oldBounds[shape.id] = getBounds(shape);\n  });\n\n  // (2b) resize shapes\n  this.resizeShapes(resizingShapes, delta, direction);\n\n  // (3) update connection waypoints\n  this.updateConnectionWaypoints(\n    getWaypointsUpdatingConnections(movingShapes, resizingShapes),\n    delta,\n    direction,\n    start,\n    movingShapes,\n    resizingShapes,\n    oldBounds\n  );\n};\n\nSpaceToolHandler.prototype.execute = function() {};\nSpaceToolHandler.prototype.revert = function() {};\n\nSpaceToolHandler.prototype.moveShapes = function(shapes, delta) {\n  var self = this;\n\n  forEach(shapes, function(element) {\n    self._modeling.moveShape(element, delta, null, {\n      autoResize: false,\n      layout: false,\n      recurse: false\n    });\n  });\n};\n\nSpaceToolHandler.prototype.resizeShapes = function(shapes, delta, direction) {\n  var self = this;\n\n  forEach(shapes, function(shape) {\n    var newBounds = resizeBounds(shape, direction, delta);\n\n    self._modeling.resizeShape(shape, newBounds, null, {\n      attachSupport: false,\n      autoResize: false,\n      layout: false\n    });\n  });\n};\n\n/**\n * Update connections waypoints according to the rules:\n *   1. Both source and target are moved/resized => move waypoints by the delta\n *   2. Only one of source and target is moved/resized => re-layout connection with moved start/end\n */\nSpaceToolHandler.prototype.updateConnectionWaypoints = function(\n    connections,\n    delta,\n    direction,\n    start,\n    movingShapes,\n    resizingShapes,\n    oldBounds\n) {\n  var self = this,\n      affectedShapes = movingShapes.concat(resizingShapes);\n\n  forEach(connections, function(connection) {\n    var source = connection.source,\n        target = connection.target,\n        waypoints = copyWaypoints(connection),\n        axis = getAxisFromDirection(direction),\n        layoutHints = {\n          labelBehavior: false\n        };\n\n    if (includes(affectedShapes, source) && includes(affectedShapes, target)) {\n\n      // move waypoints\n      waypoints = map(waypoints, function(waypoint) {\n        if (shouldMoveWaypoint(waypoint, start, direction)) {\n\n          // move waypoint\n          waypoint[ axis ] = waypoint[ axis ] + delta[ axis ];\n        }\n\n        if (waypoint.original && shouldMoveWaypoint(waypoint.original, start, direction)) {\n\n          // move waypoint original\n          waypoint.original[ axis ] = waypoint.original[ axis ] + delta[ axis ];\n        }\n\n        return waypoint;\n      });\n\n      self._modeling.updateWaypoints(connection, waypoints, {\n        labelBehavior: false\n      });\n    } else if (includes(affectedShapes, source) || includes(affectedShapes, target)) {\n\n      // re-layout connection with moved start/end\n      if (includes(movingShapes, source)) {\n        layoutHints.connectionStart = getMovedSourceAnchor(connection, source, delta);\n      } else if (includes(movingShapes, target)) {\n        layoutHints.connectionEnd = getMovedTargetAnchor(connection, target, delta);\n      } else if (includes(resizingShapes, source)) {\n        layoutHints.connectionStart = getResizedSourceAnchor(\n          connection, source, oldBounds[source.id]\n        );\n      } else if (includes(resizingShapes, target)) {\n        layoutHints.connectionEnd = getResizedTargetAnchor(\n          connection, target, oldBounds[target.id]\n        );\n      }\n\n      self._modeling.layoutConnection(connection, layoutHints);\n    }\n  });\n};\n\n\n// helpers //////////\n\nfunction copyWaypoint(waypoint) {\n  return assign({}, waypoint);\n}\n\nfunction copyWaypoints(connection) {\n  return map(connection.waypoints, function(waypoint) {\n\n    waypoint = copyWaypoint(waypoint);\n\n    if (waypoint.original) {\n      waypoint.original = copyWaypoint(waypoint.original);\n    }\n\n    return waypoint;\n  });\n}\n\nfunction getAxisFromDirection(direction) {\n  switch (direction) {\n  case 'n':\n    return 'y';\n  case 'w':\n    return 'x';\n  case 's':\n    return 'y';\n  case 'e':\n    return 'x';\n  }\n}\n\nfunction shouldMoveWaypoint(waypoint, start, direction) {\n  var relevantAxis = getAxisFromDirection(direction);\n\n  if (/e|s/.test(direction)) {\n    return waypoint[ relevantAxis ] > start;\n  } else if (/n|w/.test(direction)) {\n    return waypoint[ relevantAxis ] < start;\n  }\n}\n\nfunction includes(array, item) {\n  return array.indexOf(item) !== -1;\n}\n\nfunction getBounds(shape) {\n  return {\n    x: shape.x,\n    y: shape.y,\n    height: shape.height,\n    width: shape.width\n  };\n}\n","import {\n  assign,\n  forEach\n} from 'min-dash';\n\n/**\n * A handler that toggles the collapsed state of an element\n * and the visibility of all its children.\n *\n * @param {Modeling} modeling\n */\nexport default function ToggleShapeCollapseHandler(modeling) {\n  this._modeling = modeling;\n}\n\nToggleShapeCollapseHandler.$inject = [ 'modeling' ];\n\n\nToggleShapeCollapseHandler.prototype.execute = function(context) {\n\n  var shape = context.shape,\n      children = shape.children;\n\n  // recursively remember previous visibility of children\n  context.oldChildrenVisibility = getElementsVisibilityRecursive(children);\n\n  // toggle state\n  shape.collapsed = !shape.collapsed;\n\n  // recursively hide/show children\n  var result = setHiddenRecursive(children, shape.collapsed);\n\n  return [ shape ].concat(result);\n};\n\n\nToggleShapeCollapseHandler.prototype.revert = function(context) {\n\n  var shape = context.shape,\n      oldChildrenVisibility = context.oldChildrenVisibility;\n\n  var children = shape.children;\n\n  // recursively set old visability of children\n  var result = restoreVisibilityRecursive(children, oldChildrenVisibility);\n\n  // retoggle state\n  shape.collapsed = !shape.collapsed;\n\n  return [ shape ].concat(result);\n};\n\n\n// helpers //////////////////////\n\n/**\n * Return a map { elementId -> hiddenState}.\n *\n * @param {Array<djs.model.Shape>} elements\n *\n * @return {Object}\n */\nfunction getElementsVisibilityRecursive(elements) {\n\n  var result = {};\n\n  forEach(elements, function(element) {\n    result[element.id] = element.hidden;\n\n    if (element.children) {\n      result = assign({}, result, getElementsVisibilityRecursive(element.children));\n    }\n  });\n\n  return result;\n}\n\n\nfunction setHiddenRecursive(elements, newHidden) {\n  var result = [];\n  forEach(elements, function(element) {\n    element.hidden = newHidden;\n\n    result = result.concat(element);\n\n    if (element.children) {\n      result = result.concat(setHiddenRecursive(element.children, element.collapsed || newHidden));\n    }\n  });\n\n  return result;\n}\n\nfunction restoreVisibilityRecursive(elements, lastState) {\n  var result = [];\n  forEach(elements, function(element) {\n    element.hidden = lastState[element.id];\n\n    result = result.concat(element);\n\n    if (element.children) {\n      result = result.concat(restoreVisibilityRecursive(element.children, lastState));\n    }\n  });\n\n  return result;\n}\n","import {\n  add as collectionAdd,\n  remove as collectionRemove\n} from '../../../util/Collections';\n\n/**\n * A handler that implements reversible attaching/detaching of shapes.\n */\nexport default function UpdateAttachmentHandler(modeling) {\n  this._modeling = modeling;\n}\n\nUpdateAttachmentHandler.$inject = [ 'modeling' ];\n\n\nUpdateAttachmentHandler.prototype.execute = function(context) {\n  var shape = context.shape,\n      newHost = context.newHost,\n      oldHost = shape.host;\n\n  // (0) detach from old host\n  context.oldHost = oldHost;\n  context.attacherIdx = removeAttacher(oldHost, shape);\n\n  // (1) attach to new host\n  addAttacher(newHost, shape);\n\n  // (2) update host\n  shape.host = newHost;\n\n  return shape;\n};\n\nUpdateAttachmentHandler.prototype.revert = function(context) {\n  var shape = context.shape,\n      newHost = context.newHost,\n      oldHost = context.oldHost,\n      attacherIdx = context.attacherIdx;\n\n  // (2) update host\n  shape.host = oldHost;\n\n  // (1) attach to new host\n  removeAttacher(newHost, shape);\n\n  // (0) detach from old host\n  addAttacher(oldHost, shape, attacherIdx);\n\n  return shape;\n};\n\n\nfunction removeAttacher(host, attacher) {\n\n  // remove attacher from host\n  return collectionRemove(host && host.attachers, attacher);\n}\n\nfunction addAttacher(host, attacher, idx) {\n\n  if (!host) {\n    return;\n  }\n\n  var attachers = host.attachers;\n\n  if (!attachers) {\n    host.attachers = attachers = [];\n  }\n\n  collectionAdd(attachers, attacher, idx);\n}\n","export default function UpdateWaypointsHandler() { }\n\nUpdateWaypointsHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      newWaypoints = context.newWaypoints;\n\n  context.oldWaypoints = connection.waypoints;\n\n  connection.waypoints = newWaypoints;\n\n  return connection;\n};\n\nUpdateWaypointsHandler.prototype.revert = function(context) {\n\n  var connection = context.connection,\n      oldWaypoints = context.oldWaypoints;\n\n  connection.waypoints = oldWaypoints;\n\n  return connection;\n};","import {\n  getNewAttachPoint\n} from '../../../../util/AttachUtil';\n\nimport {\n  getOrientation\n} from '../../../../layout/LayoutUtil';\n\nimport {\n  filter,\n  map\n} from 'min-dash';\n\n\nexport function getResizedSourceAnchor(connection, shape, oldBounds) {\n\n  var waypoints = safeGetWaypoints(connection),\n      waypointsInsideNewBounds = getWaypointsInsideBounds(waypoints, shape),\n      oldAnchor = waypoints[0];\n\n  // new anchor is the last waypoint enclosed be resized source\n  if (waypointsInsideNewBounds.length) {\n    return waypointsInsideNewBounds[ waypointsInsideNewBounds.length - 1 ];\n  }\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\n}\n\n\nexport function getResizedTargetAnchor(connection, shape, oldBounds) {\n\n  var waypoints = safeGetWaypoints(connection),\n      waypointsInsideNewBounds = getWaypointsInsideBounds(waypoints, shape),\n      oldAnchor = waypoints[waypoints.length - 1];\n\n  // new anchor is the first waypoint enclosed be resized target\n  if (waypointsInsideNewBounds.length) {\n    return waypointsInsideNewBounds[ 0 ];\n  }\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\n}\n\n\nexport function getMovedSourceAnchor(connection, source, moveDelta) {\n\n  var waypoints = safeGetWaypoints(connection),\n      oldBounds = subtract(source, moveDelta),\n      oldAnchor = waypoints[ 0 ];\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, source);\n}\n\n\nexport function getMovedTargetAnchor(connection, target, moveDelta) {\n\n  var waypoints = safeGetWaypoints(connection),\n      oldBounds = subtract(target, moveDelta),\n      oldAnchor = waypoints[ waypoints.length - 1 ];\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, target);\n}\n\n\n// helpers //////////////////////\n\nfunction subtract(bounds, delta) {\n  return {\n    x: bounds.x - delta.x,\n    y: bounds.y - delta.y,\n    width: bounds.width,\n    height: bounds.height\n  };\n}\n\n\n/**\n * Return waypoints of given connection; throw if non exists (should not happen!!).\n *\n * @param {Connection} connection\n *\n * @return {Array<Point>}\n */\nfunction safeGetWaypoints(connection) {\n\n  var waypoints = connection.waypoints;\n\n  if (!waypoints.length) {\n    throw new Error('connection#' + connection.id + ': no waypoints');\n  }\n\n  return waypoints;\n}\n\nfunction getWaypointsInsideBounds(waypoints, bounds) {\n  var originalWaypoints = map(waypoints, getOriginal);\n\n  return filter(originalWaypoints, function(waypoint) {\n    return isInsideBounds(waypoint, bounds);\n  });\n}\n\n/**\n * Checks if point is inside bounds, incl. edges.\n *\n * @param {Point} point\n * @param {Bounds} bounds\n */\nfunction isInsideBounds(point, bounds) {\n  return getOrientation(bounds, point, 1) === 'intersect';\n}\n\nfunction getOriginal(point) {\n  return point.original || point;\n}\n","import {\n  assign\n} from 'min-dash';\n\nimport {\n  getClosure\n} from '../../../../util/Elements';\n\n\nexport default function MoveClosure() {\n\n  this.allShapes = {};\n  this.allConnections = {};\n\n  this.enclosedElements = {};\n  this.enclosedConnections = {};\n\n  this.topLevel = {};\n}\n\n\nMoveClosure.prototype.add = function(element, isTopLevel) {\n  return this.addAll([ element ], isTopLevel);\n};\n\n\nMoveClosure.prototype.addAll = function(elements, isTopLevel) {\n\n  var newClosure = getClosure(elements, !!isTopLevel, this);\n\n  assign(this, newClosure);\n\n  return this;\n};","import {\n  forEach\n} from 'min-dash';\n\nimport {\n  getMovedSourceAnchor,\n  getMovedTargetAnchor\n} from './AnchorsHelper';\n\nimport MoveClosure from './MoveClosure';\n\n\n/**\n * A helper that is able to carry out serialized move\n * operations on multiple elements.\n *\n * @param {Modeling} modeling\n */\nexport default function MoveHelper(modeling) {\n  this._modeling = modeling;\n}\n\n/**\n * Move the specified elements and all children by the given delta.\n *\n * This moves all enclosed connections, too and layouts all affected\n * external connections.\n *\n * @param  {Array<djs.model.Base>} elements\n * @param  {Point} delta\n * @param  {djs.model.Base} newParent applied to the first level of shapes\n *\n * @return {Array<djs.model.Base>} list of touched elements\n */\nMoveHelper.prototype.moveRecursive = function(elements, delta, newParent) {\n  if (!elements) {\n    return [];\n  } else {\n    return this.moveClosure(this.getClosure(elements), delta, newParent);\n  }\n};\n\n/**\n * Move the given closure of elmements.\n *\n * @param {Object} closure\n * @param {Point} delta\n * @param {djs.model.Base} [newParent]\n * @param {djs.model.Base} [newHost]\n */\nMoveHelper.prototype.moveClosure = function(closure, delta, newParent, newHost, primaryShape) {\n  var modeling = this._modeling;\n\n  var allShapes = closure.allShapes,\n      allConnections = closure.allConnections,\n      enclosedConnections = closure.enclosedConnections,\n      topLevel = closure.topLevel,\n      keepParent = false;\n\n  if (primaryShape && primaryShape.parent === newParent) {\n    keepParent = true;\n  }\n\n  // move all shapes\n  forEach(allShapes, function(shape) {\n\n    // move the element according to the given delta\n    modeling.moveShape(shape, delta, topLevel[shape.id] && !keepParent && newParent, {\n      recurse: false,\n      layout: false\n    });\n  });\n\n  // move all child connections / layout external connections\n  forEach(allConnections, function(c) {\n\n    var sourceMoved = !!allShapes[c.source.id],\n        targetMoved = !!allShapes[c.target.id];\n\n    if (enclosedConnections[c.id] && sourceMoved && targetMoved) {\n      modeling.moveConnection(c, delta, topLevel[c.id] && !keepParent && newParent);\n    } else {\n      modeling.layoutConnection(c, {\n        connectionStart: sourceMoved && getMovedSourceAnchor(c, c.source, delta),\n        connectionEnd: targetMoved && getMovedTargetAnchor(c, c.target, delta)\n      });\n    }\n  });\n};\n\n/**\n * Returns the closure for the selected elements\n *\n * @param  {Array<djs.model.Base>} elements\n * @return {MoveClosure} closure\n */\nMoveHelper.prototype.getClosure = function(elements) {\n  return new MoveClosure().addAll(elements, true);\n};","export default function Mouse(eventBus) {\r\n  var self = this;\r\n\r\n  this._lastMoveEvent = null;\r\n\r\n  function setLastMoveEvent(mousemoveEvent) {\r\n    self._lastMoveEvent = mousemoveEvent;\r\n  }\r\n\r\n  eventBus.on('canvas.init', function(context) {\r\n    var svg = self._svg = context.svg;\r\n\r\n    svg.addEventListener('mousemove', setLastMoveEvent);\r\n  });\r\n\r\n  eventBus.on('canvas.destroy', function() {\r\n    self._lastMouseEvent = null;\r\n\r\n    self._svg.removeEventListener('mousemove', setLastMoveEvent);\r\n  });\r\n}\r\n\r\nMouse.$inject = [ 'eventBus' ];\r\n\r\nMouse.prototype.getLastMoveEvent = function() {\r\n  return this._lastMoveEvent || createMoveEvent(0, 0);\r\n};\r\n\r\n// helpers //////////\r\n\r\nexport function createMoveEvent(x, y) {\r\n  var event = document.createEvent('MouseEvent');\r\n\r\n  var screenX = x,\r\n      screenY = y,\r\n      clientX = x,\r\n      clientY = y;\r\n\r\n  if (event.initMouseEvent) {\r\n    event.initMouseEvent(\r\n      'mousemove',\r\n      true,\r\n      true,\r\n      window,\r\n      0,\r\n      screenX,\r\n      screenY,\r\n      clientX,\r\n      clientY,\r\n      false,\r\n      false,\r\n      false,\r\n      false,\r\n      0,\r\n      null\r\n    );\r\n  }\r\n\r\n  return event;\r\n}","import Mouse from './Mouse';\n\nexport default {\n  __init__: [ 'mouse' ],\n  mouse: [ 'type', Mouse ]\n};\n","import {\n  assign,\n  filter,\n  groupBy,\n  isObject\n} from 'min-dash';\n\nvar LOW_PRIORITY = 500,\n    MEDIUM_PRIORITY = 1250,\n    HIGH_PRIORITY = 1500;\n\nimport { getOriginal as getOriginalEvent } from '../../util/Event';\n\nimport {\n  isPrimaryButton\n} from '../../util/Mouse';\n\nvar round = Math.round;\n\nfunction mid(element) {\n  return {\n    x: element.x + round(element.width / 2),\n    y: element.y + round(element.height / 2)\n  };\n}\n\n/**\n * A plugin that makes shapes draggable / droppable.\n *\n * @param {EventBus} eventBus\n * @param {Dragging} dragging\n * @param {Modeling} modeling\n * @param {Selection} selection\n * @param {Rules} rules\n */\nexport default function MoveEvents(\n    eventBus, dragging, modeling,\n    selection, rules) {\n\n  // rules\n\n  function canMove(shapes, delta, position, target) {\n\n    return rules.allowed('elements.move', {\n      shapes: shapes,\n      delta: delta,\n      position: position,\n      target: target\n    });\n  }\n\n\n  // move events\n\n  // assign a high priority to this handler to setup the environment\n  // others may hook up later, e.g. at default priority and modify\n  // the move environment.\n  //\n  // This sets up the context with\n  //\n  // * shape: the primary shape being moved\n  // * shapes: a list of shapes to be moved\n  // * validatedShapes: a list of shapes that are being checked\n  //                    against the rules before and during move\n  //\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(event) {\n\n    var context = event.context,\n        shape = event.shape,\n        shapes = selection.get().slice();\n\n    // move only single shape if the dragged element\n    // is not part of the current selection\n    if (shapes.indexOf(shape) === -1) {\n      shapes = [ shape ];\n    }\n\n    // ensure we remove nested elements in the collection\n    // and add attachers for a proper dragger\n    shapes = removeNested(shapes);\n\n    // attach shapes to drag context\n    assign(context, {\n      shapes: shapes,\n      validatedShapes: shapes,\n      shape: shape\n    });\n  });\n\n\n  // assign a high priority to this handler to setup the environment\n  // others may hook up later, e.g. at default priority and modify\n  // the move environment\n  //\n  eventBus.on('shape.move.start', MEDIUM_PRIORITY, function(event) {\n\n    var context = event.context,\n        validatedShapes = context.validatedShapes,\n        canExecute;\n\n    canExecute = context.canExecute = canMove(validatedShapes);\n\n    // check if we can move the elements\n    if (!canExecute) {\n      return false;\n    }\n  });\n\n  // assign a low priority to this handler\n  // to let others modify the move event before we update\n  // the context\n  //\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        validatedShapes = context.validatedShapes,\n        hover = event.hover,\n        delta = { x: event.dx, y: event.dy },\n        position = { x: event.x, y: event.y },\n        canExecute;\n\n    // check if we can move the elements\n    canExecute = canMove(validatedShapes, delta, position, hover);\n\n    context.delta = delta;\n    context.canExecute = canExecute;\n\n    // simply ignore move over\n    if (canExecute === null) {\n      context.target = null;\n\n      return;\n    }\n\n    context.target = hover;\n  });\n\n  eventBus.on('shape.move.end', function(event) {\n\n    var context = event.context;\n\n    var delta = context.delta,\n        canExecute = context.canExecute,\n        isAttach = canExecute === 'attach',\n        shapes = context.shapes;\n\n    if (canExecute === false) {\n      return false;\n    }\n\n    // ensure we have actual pixel values deltas\n    // (important when zoom level was > 1 during move)\n    delta.x = round(delta.x);\n    delta.y = round(delta.y);\n\n    if (delta.x === 0 && delta.y === 0) {\n\n      // didn't move\n      return;\n    }\n\n    modeling.moveElements(shapes, delta, context.target, {\n      primaryShape: context.shape,\n      attach: isAttach\n    });\n  });\n\n\n  // move activation\n\n  eventBus.on('element.mousedown', function(event) {\n\n    if (!isPrimaryButton(event)) {\n      return;\n    }\n\n    var originalEvent = getOriginalEvent(event);\n\n    if (!originalEvent) {\n      throw new Error('must supply DOM mousedown event');\n    }\n\n    return start(originalEvent, event.element);\n  });\n\n  /**\n   * Start move.\n   *\n   * @param {MouseEvent} event\n   * @param {djs.model.Shape} shape\n   * @param {boolean} [activate]\n   * @param {Object} [context]\n   */\n  function start(event, element, activate, context) {\n    if (isObject(activate)) {\n      context = activate;\n      activate = false;\n    }\n\n    // do not move connections or the root element\n    if (element.waypoints || !element.parent) {\n      return;\n    }\n\n    var referencePoint = mid(element);\n\n    dragging.init(event, referencePoint, 'shape.move', {\n      cursor: 'grabbing',\n      autoActivate: activate,\n      data: {\n        shape: element,\n        context: context || {}\n      }\n    });\n\n    // we've handled the event\n    return true;\n  }\n\n  // API\n\n  this.start = start;\n}\n\nMoveEvents.$inject = [\n  'eventBus',\n  'dragging',\n  'modeling',\n  'selection',\n  'rules'\n];\n\n\n/**\n * Return a filtered list of elements that do not contain\n * those nested into others.\n *\n * @param  {Array<djs.model.Base>} elements\n *\n * @return {Array<djs.model.Base>} filtered\n */\nfunction removeNested(elements) {\n\n  var ids = groupBy(elements, 'id');\n\n  return filter(elements, function(element) {\n    while ((element = element.parent)) {\n\n      // parent in selection\n      if (ids[element.id]) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n}\n","import {\n  flatten,\n  forEach,\n  filter,\n  find,\n  groupBy,\n  map,\n  matchPattern,\n  size\n} from 'min-dash';\n\nimport {\n  selfAndAllChildren\n} from '../../util/Elements';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport { translate } from '../../util/SvgTransformUtil';\n\nvar LOW_PRIORITY = 499;\n\nvar MARKER_DRAGGING = 'djs-dragging',\n    MARKER_OK = 'drop-ok',\n    MARKER_NOT_OK = 'drop-not-ok',\n    MARKER_NEW_PARENT = 'new-parent',\n    MARKER_ATTACH = 'attach-ok';\n\n\n/**\n * Provides previews for moving shapes when moving.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Canvas} canvas\n * @param {Styles} styles\n */\nexport default function MovePreview(\n    eventBus, canvas, styles, previewSupport) {\n\n  function getVisualDragShapes(shapes) {\n    var elements = getAllDraggedElements(shapes);\n\n    var filteredElements = removeEdges(elements);\n\n    return filteredElements;\n  }\n\n  function getAllDraggedElements(shapes) {\n    var allShapes = selfAndAllChildren(shapes, true);\n\n    var allConnections = map(allShapes, function(shape) {\n      return (shape.incoming || []).concat(shape.outgoing || []);\n    });\n\n    return flatten(allShapes.concat(allConnections));\n  }\n\n  /**\n   * Sets drop marker on an element.\n   */\n  function setMarker(element, marker) {\n\n    [ MARKER_ATTACH, MARKER_OK, MARKER_NOT_OK, MARKER_NEW_PARENT ].forEach(function(m) {\n\n      if (m === marker) {\n        canvas.addMarker(element, m);\n      } else {\n        canvas.removeMarker(element, m);\n      }\n    });\n  }\n\n  /**\n   * Make an element draggable.\n   *\n   * @param {Object} context\n   * @param {djs.model.Base} element\n   * @param {boolean} addMarker\n   */\n  function makeDraggable(context, element, addMarker) {\n\n    previewSupport.addDragger(element, context.dragGroup);\n\n    if (addMarker) {\n      canvas.addMarker(element, MARKER_DRAGGING);\n    }\n\n    if (context.allDraggedElements) {\n      context.allDraggedElements.push(element);\n    } else {\n      context.allDraggedElements = [ element ];\n    }\n  }\n\n  // assign a low priority to this handler\n  // to let others modify the move context before\n  // we draw things\n  eventBus.on('shape.move.start', LOW_PRIORITY, function(event) {\n    var context = event.context,\n        dragShapes = context.shapes,\n        allDraggedElements = context.allDraggedElements;\n\n    var visuallyDraggedShapes = getVisualDragShapes(dragShapes);\n\n    if (!context.dragGroup) {\n      var dragGroup = svgCreate('g');\n\n      svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\n\n      var activeLayer = canvas.getActiveLayer();\n\n      svgAppend(activeLayer, dragGroup);\n\n      context.dragGroup = dragGroup;\n    }\n\n    // add previews\n    visuallyDraggedShapes.forEach(function(shape) {\n      previewSupport.addDragger(shape, context.dragGroup);\n    });\n\n    // cache all dragged elements / gfx\n    // so that we can quickly undo their state changes later\n    if (!allDraggedElements) {\n      allDraggedElements = getAllDraggedElements(dragShapes);\n    } else {\n      allDraggedElements = flatten([\n        allDraggedElements,\n        getAllDraggedElements(dragShapes)\n      ]);\n    }\n\n    // add dragging marker\n    forEach(allDraggedElements, function(e) {\n      canvas.addMarker(e, MARKER_DRAGGING);\n    });\n\n    context.allDraggedElements = allDraggedElements;\n\n    // determine, if any of the dragged elements have different parents\n    context.differentParents = haveDifferentParents(dragShapes);\n  });\n\n  // update previews\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        dragGroup = context.dragGroup,\n        target = context.target,\n        parent = context.shape.parent,\n        canExecute = context.canExecute;\n\n    if (target) {\n      if (canExecute === 'attach') {\n        setMarker(target, MARKER_ATTACH);\n      } else if (context.canExecute && target && target.id !== parent.id) {\n        setMarker(target, MARKER_NEW_PARENT);\n      } else {\n        setMarker(target, context.canExecute ? MARKER_OK : MARKER_NOT_OK);\n      }\n    }\n\n    translate(dragGroup, event.dx, event.dy);\n  });\n\n  eventBus.on([ 'shape.move.out', 'shape.move.cleanup' ], function(event) {\n    var context = event.context,\n        target = context.target;\n\n    if (target) {\n      setMarker(target, null);\n    }\n  });\n\n  // remove previews\n  eventBus.on('shape.move.cleanup', function(event) {\n\n    var context = event.context,\n        allDraggedElements = context.allDraggedElements,\n        dragGroup = context.dragGroup;\n\n\n    // remove dragging marker\n    forEach(allDraggedElements, function(e) {\n      canvas.removeMarker(e, MARKER_DRAGGING);\n    });\n\n    if (dragGroup) {\n      svgRemove(dragGroup);\n    }\n  });\n\n\n  // API //////////////////////\n\n  /**\n   * Make an element draggable.\n   *\n   * @param {Object} context\n   * @param {djs.model.Base} element\n   * @param {boolean} addMarker\n   */\n  this.makeDraggable = makeDraggable;\n}\n\nMovePreview.$inject = [\n  'eventBus',\n  'canvas',\n  'styles',\n  'previewSupport'\n];\n\n\n// helpers //////////////////////\n\n/**\n * returns elements minus all connections\n * where source or target is not elements\n */\nfunction removeEdges(elements) {\n\n  var filteredElements = filter(elements, function(element) {\n\n    if (!isConnection(element)) {\n      return true;\n    } else {\n\n      return (\n        find(elements, matchPattern({ id: element.source.id })) &&\n        find(elements, matchPattern({ id: element.target.id }))\n      );\n    }\n  });\n\n  return filteredElements;\n}\n\nfunction haveDifferentParents(elements) {\n  return size(groupBy(elements, function(e) { return e.parent && e.parent.id; })) !== 1;\n}\n\n/**\n * Checks if an element is a connection.\n */\nfunction isConnection(element) {\n  return element.waypoints;\n}\n","import InteractionEventsModule from '../interaction-events';\nimport SelectionModule from '../selection';\nimport OutlineModule from '../outline';\nimport RulesModule from '../rules';\nimport DraggingModule from '../dragging';\nimport PreviewSupportModule from '../preview-support';\n\nimport Move from './Move';\nimport MovePreview from './MovePreview';\n\nexport default {\n  __depends__: [\n    InteractionEventsModule,\n    SelectionModule,\n    OutlineModule,\n    RulesModule,\n    DraggingModule,\n    PreviewSupportModule\n  ],\n  __init__: [\n    'move',\n    'movePreview'\n  ],\n  move: [ 'type', Move ],\n  movePreview: [ 'type', MovePreview ]\n};\n","import inherits from 'inherits';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\n\n/**\n * An abstract provider that allows modelers to implement a custom\n * ordering of diagram elements on the canvas.\n *\n * It makes sure that the order is always preserved during element\n * creation and move operations.\n *\n * In order to use this behavior, inherit from it and override\n * the method {@link OrderingProvider#getOrdering}.\n *\n * @example\n *\n * ```javascript\n * function CustomOrderingProvider(eventBus) {\n *   OrderingProvider.call(this, eventBus);\n *\n *   this.getOrdering = function(element, newParent) {\n *     // always insert elements at the front\n *     // when moving\n *     return {\n *       index: 0,\n *       parent: newParent\n *     };\n *   };\n * }\n * ```\n *\n * @param {EventBus} eventBus\n */\nexport default function OrderingProvider(eventBus) {\n\n  CommandInterceptor.call(this, eventBus);\n\n\n  var self = this;\n\n  this.preExecute([ 'shape.create', 'connection.create' ], function(event) {\n\n    var context = event.context,\n        element = context.shape || context.connection,\n        parent = context.parent;\n\n    var ordering = self.getOrdering(element, parent);\n\n    if (ordering) {\n\n      if (ordering.parent !== undefined) {\n        context.parent = ordering.parent;\n      }\n\n      context.parentIndex = ordering.index;\n    }\n  });\n\n  this.preExecute([ 'shape.move', 'connection.move' ], function(event) {\n\n    var context = event.context,\n        element = context.shape || context.connection,\n        parent = context.newParent || element.parent;\n\n    var ordering = self.getOrdering(element, parent);\n\n    if (ordering) {\n\n      if (ordering.parent !== undefined) {\n        context.newParent = ordering.parent;\n      }\n\n      context.newParentIndex = ordering.index;\n    }\n  });\n}\n\n/**\n * Return a custom ordering of the element, both in terms\n * of parent element and index in the new parent.\n *\n * Implementors of this method must return an object with\n * `parent` _and_ `index` in it.\n *\n * @param {djs.model.Base} element\n * @param {djs.model.Shape} newParent\n *\n * @return {Object} ordering descriptor\n */\nOrderingProvider.prototype.getOrdering = function(element, newParent) {\n  return null;\n};\n\ninherits(OrderingProvider, CommandInterceptor);","import { getBBox } from '../../util/Elements';\n\nvar LOW_PRIORITY = 500;\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  assign\n} from 'min-dash';\n\n\n/**\n * @class\n *\n * A plugin that adds an outline to shapes and connections that may be activated and styled\n * via CSS classes.\n *\n * @param {EventBus} eventBus\n * @param {Styles} styles\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Outline(eventBus, styles, elementRegistry) {\n\n  this.offset = 6;\n\n  var OUTLINE_STYLE = styles.cls('djs-outline', [ 'no-fill' ]);\n\n  var self = this;\n\n  function createOutline(gfx, bounds) {\n    var outline = svgCreate('rect');\n\n    svgAttr(outline, assign({\n      x: 10,\n      y: 10,\n      width: 100,\n      height: 100\n    }, OUTLINE_STYLE));\n\n    svgAppend(gfx, outline);\n\n    return outline;\n  }\n\n  // A low priortity is necessary, because outlines of labels have to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on([ 'shape.added', 'shape.changed' ], LOW_PRIORITY, function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    var outline = domQuery('.djs-outline', gfx);\n\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n\n    self.updateShapeOutline(outline, element);\n  });\n\n  eventBus.on([ 'connection.added', 'connection.changed' ], function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    var outline = domQuery('.djs-outline', gfx);\n\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n\n    self.updateConnectionOutline(outline, element);\n  });\n}\n\n\n/**\n * Updates the outline of a shape respecting the dimension of the\n * element and an outline offset.\n *\n * @param  {SVGElement} outline\n * @param  {djs.model.Base} element\n */\nOutline.prototype.updateShapeOutline = function(outline, element) {\n\n  svgAttr(outline, {\n    x: -this.offset,\n    y: -this.offset,\n    width: element.width + this.offset * 2,\n    height: element.height + this.offset * 2\n  });\n\n};\n\n\n/**\n * Updates the outline of a connection respecting the bounding box of\n * the connection and an outline offset.\n *\n * @param  {SVGElement} outline\n * @param  {djs.model.Base} element\n */\nOutline.prototype.updateConnectionOutline = function(outline, connection) {\n\n  var bbox = getBBox(connection);\n\n  svgAttr(outline, {\n    x: bbox.x - this.offset,\n    y: bbox.y - this.offset,\n    width: bbox.width + this.offset * 2,\n    height: bbox.height + this.offset * 2\n  });\n\n};\n\n\nOutline.$inject = [ 'eventBus', 'styles', 'elementRegistry' ];","import Outline from './Outline';\n\nexport default {\n  __init__: [ 'outline' ],\n  outline: [ 'type', Outline ]\n};","import {\n  isArray,\n  isString,\n  isObject,\n  assign,\n  forEach,\n  find,\n  filter,\n  matchPattern,\n  isDefined\n} from 'min-dash';\n\nimport {\n  domify,\n  classes as domClasses,\n  attr as domAttr,\n  remove as domRemove,\n  clear as domClear\n} from 'min-dom';\n\nimport {\n  getBBox\n} from '../../util/Elements';\n\nimport Ids from '../../util/IdGenerator';\n\n// document wide unique overlay ids\nvar ids = new Ids('ov');\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * A service that allows users to attach overlays to diagram elements.\n *\n * The overlay service will take care of overlay positioning during updates.\n *\n * @example\n *\n * // add a pink badge on the top left of the shape\n * overlays.add(someShape, {\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add via shape id\n *\n * overlays.add('some-element-id', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add with optional type\n *\n * overlays.add(someShape, 'badge', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n *\n * // remove an overlay\n *\n * var id = overlays.add(...);\n * overlays.remove(id);\n *\n *\n * You may configure overlay defaults during tool by providing a `config` module\n * with `overlays.defaults` as an entry:\n *\n * {\n *   overlays: {\n *     defaults: {\n *       show: {\n *         minZoom: 0.7,\n *         maxZoom: 5.0\n *       },\n *       scale: {\n *         min: 1\n *       }\n *     }\n * }\n *\n * @param {Object} config\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Overlays(config, eventBus, canvas, elementRegistry) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._elementRegistry = elementRegistry;\n\n  this._ids = ids;\n\n  this._overlayDefaults = assign({\n\n    // no show constraints\n    show: null,\n\n    // always scale\n    scale: true\n  }, config && config.defaults);\n\n  /**\n   * Mapping overlayId -> overlay\n   */\n  this._overlays = {};\n\n  /**\n   * Mapping elementId -> overlay container\n   */\n  this._overlayContainers = [];\n\n  // root html element for all overlays\n  this._overlayRoot = createRoot(canvas.getContainer());\n\n  this._init();\n}\n\n\nOverlays.$inject = [\n  'config.overlays',\n  'eventBus',\n  'canvas',\n  'elementRegistry'\n];\n\n\n/**\n * Returns the overlay with the specified id or a list of overlays\n * for an element with a given type.\n *\n * @example\n *\n * // return the single overlay with the given id\n * overlays.get('some-id');\n *\n * // return all overlays for the shape\n * overlays.get({ element: someShape });\n *\n * // return all overlays on shape with type 'badge'\n * overlays.get({ element: someShape, type: 'badge' });\n *\n * // shape can also be specified as id\n * overlays.get({ element: 'element-id', type: 'badge' });\n *\n *\n * @param {Object} search\n * @param {string} [search.id]\n * @param {string|djs.model.Base} [search.element]\n * @param {string} [search.type]\n *\n * @return {Object|Array<Object>} the overlay(s)\n */\nOverlays.prototype.get = function(search) {\n\n  if (isString(search)) {\n    search = { id: search };\n  }\n\n  if (isString(search.element)) {\n    search.element = this._elementRegistry.get(search.element);\n  }\n\n  if (search.element) {\n    var container = this._getOverlayContainer(search.element, true);\n\n    // return a list of overlays when searching by element (+type)\n    if (container) {\n      return search.type ? filter(container.overlays, matchPattern({ type: search.type })) : container.overlays.slice();\n    } else {\n      return [];\n    }\n  } else\n  if (search.type) {\n    return filter(this._overlays, matchPattern({ type: search.type }));\n  } else {\n\n    // return single element when searching by id\n    return search.id ? this._overlays[search.id] : null;\n  }\n};\n\n/**\n * Adds a HTML overlay to an element.\n *\n * @param {string|djs.model.Base}   element   attach overlay to this shape\n * @param {string}                  [type]    optional type to assign to the overlay\n * @param {Object}                  overlay   the overlay configuration\n *\n * @param {string|DOMElement}       overlay.html                 html element to use as an overlay\n * @param {Object}                  [overlay.show]               show configuration\n * @param {number}                  [overlay.show.minZoom]       minimal zoom level to show the overlay\n * @param {number}                  [overlay.show.maxZoom]       maximum zoom level to show the overlay\n * @param {Object}                  overlay.position             where to attach the overlay\n * @param {number}                  [overlay.position.left]      relative to element bbox left attachment\n * @param {number}                  [overlay.position.top]       relative to element bbox top attachment\n * @param {number}                  [overlay.position.bottom]    relative to element bbox bottom attachment\n * @param {number}                  [overlay.position.right]     relative to element bbox right attachment\n * @param {boolean|Object}          [overlay.scale=true]         false to preserve the same size regardless of\n *                                                               diagram zoom\n * @param {number}                  [overlay.scale.min]\n * @param {number}                  [overlay.scale.max]\n *\n * @return {string}                 id that may be used to reference the overlay for update or removal\n */\nOverlays.prototype.add = function(element, type, overlay) {\n\n  if (isObject(type)) {\n    overlay = type;\n    type = null;\n  }\n\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  if (!overlay.position) {\n    throw new Error('must specifiy overlay position');\n  }\n\n  if (!overlay.html) {\n    throw new Error('must specifiy overlay html');\n  }\n\n  if (!element) {\n    throw new Error('invalid element specified');\n  }\n\n  var id = this._ids.next();\n\n  overlay = assign({}, this._overlayDefaults, overlay, {\n    id: id,\n    type: type,\n    element: element,\n    html: overlay.html\n  });\n\n  this._addOverlay(overlay);\n\n  return id;\n};\n\n\n/**\n * Remove an overlay with the given id or all overlays matching the given filter.\n *\n * @see Overlays#get for filter options.\n *\n * @param {string|object} [filter]\n */\nOverlays.prototype.remove = function(filter) {\n\n  var overlays = this.get(filter) || [];\n\n  if (!isArray(overlays)) {\n    overlays = [ overlays ];\n  }\n\n  var self = this;\n\n  forEach(overlays, function(overlay) {\n\n    var container = self._getOverlayContainer(overlay.element, true);\n\n    if (overlay) {\n      domRemove(overlay.html);\n      domRemove(overlay.htmlContainer);\n\n      delete overlay.htmlContainer;\n      delete overlay.element;\n\n      delete self._overlays[overlay.id];\n    }\n\n    if (container) {\n      var idx = container.overlays.indexOf(overlay);\n      if (idx !== -1) {\n        container.overlays.splice(idx, 1);\n      }\n    }\n  });\n\n};\n\n\nOverlays.prototype.show = function() {\n  setVisible(this._overlayRoot);\n};\n\n\nOverlays.prototype.hide = function() {\n  setVisible(this._overlayRoot, false);\n};\n\nOverlays.prototype.clear = function() {\n  this._overlays = {};\n\n  this._overlayContainers = [];\n\n  domClear(this._overlayRoot);\n};\n\nOverlays.prototype._updateOverlayContainer = function(container) {\n  var element = container.element,\n      html = container.html;\n\n  // update container left,top according to the elements x,y coordinates\n  // this ensures we can attach child elements relative to this container\n\n  var x = element.x,\n      y = element.y;\n\n  if (element.waypoints) {\n    var bbox = getBBox(element);\n    x = bbox.x;\n    y = bbox.y;\n  }\n\n  setPosition(html, x, y);\n\n  domAttr(container.html, 'data-container-id', element.id);\n};\n\n\nOverlays.prototype._updateOverlay = function(overlay) {\n\n  var position = overlay.position,\n      htmlContainer = overlay.htmlContainer,\n      element = overlay.element;\n\n  // update overlay html relative to shape because\n  // it is already positioned on the element\n\n  // update relative\n  var left = position.left,\n      top = position.top;\n\n  if (position.right !== undefined) {\n\n    var width;\n\n    if (element.waypoints) {\n      width = getBBox(element).width;\n    } else {\n      width = element.width;\n    }\n\n    left = position.right * -1 + width;\n  }\n\n  if (position.bottom !== undefined) {\n\n    var height;\n\n    if (element.waypoints) {\n      height = getBBox(element).height;\n    } else {\n      height = element.height;\n    }\n\n    top = position.bottom * -1 + height;\n  }\n\n  setPosition(htmlContainer, left || 0, top || 0);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\n\n\nOverlays.prototype._createOverlayContainer = function(element) {\n  var html = domify('<div class=\"djs-overlays\" style=\"position: absolute\" />');\n\n  this._overlayRoot.appendChild(html);\n\n  var container = {\n    html: html,\n    element: element,\n    overlays: []\n  };\n\n  this._updateOverlayContainer(container);\n\n  this._overlayContainers.push(container);\n\n  return container;\n};\n\n\nOverlays.prototype._updateRoot = function(viewbox) {\n  var scale = viewbox.scale || 1;\n\n  var matrix = 'matrix(' +\n  [\n    scale,\n    0,\n    0,\n    scale,\n    -1 * viewbox.x * scale,\n    -1 * viewbox.y * scale\n  ].join(',') +\n  ')';\n\n  setTransform(this._overlayRoot, matrix);\n};\n\n\nOverlays.prototype._getOverlayContainer = function(element, raw) {\n  var container = find(this._overlayContainers, function(c) {\n    return c.element === element;\n  });\n\n\n  if (!container && !raw) {\n    return this._createOverlayContainer(element);\n  }\n\n  return container;\n};\n\n\nOverlays.prototype._addOverlay = function(overlay) {\n\n  var id = overlay.id,\n      element = overlay.element,\n      html = overlay.html,\n      htmlContainer,\n      overlayContainer;\n\n  // unwrap jquery (for those who need it)\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  }\n\n  // create proper html elements from\n  // overlay HTML strings\n  if (isString(html)) {\n    html = domify(html);\n  }\n\n  overlayContainer = this._getOverlayContainer(element);\n\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\" style=\"position: absolute\">');\n\n  htmlContainer.appendChild(html);\n\n  if (overlay.type) {\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\n  }\n\n  var elementRoot = this._canvas.findRoot(element);\n  var activeRoot = this._canvas.getRootElement();\n\n  setVisible(htmlContainer, elementRoot === activeRoot);\n\n  overlay.htmlContainer = htmlContainer;\n\n  overlayContainer.overlays.push(overlay);\n  overlayContainer.html.appendChild(htmlContainer);\n\n  this._overlays[id] = overlay;\n\n  this._updateOverlay(overlay);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\n\n\nOverlays.prototype._updateOverlayVisibilty = function(overlay, viewbox) {\n  var show = overlay.show,\n      rootElement = this._canvas.findRoot(overlay.element),\n      minZoom = show && show.minZoom,\n      maxZoom = show && show.maxZoom,\n      htmlContainer = overlay.htmlContainer,\n      activeRootElement = this._canvas.getRootElement(),\n      visible = true;\n\n  if (rootElement !== activeRootElement) {\n    visible = false;\n  } else if (show) {\n    if (\n      (isDefined(minZoom) && minZoom > viewbox.scale) ||\n      (isDefined(maxZoom) && maxZoom < viewbox.scale)\n    ) {\n      visible = false;\n    }\n  }\n\n  setVisible(htmlContainer, visible);\n\n  this._updateOverlayScale(overlay, viewbox);\n};\n\n\nOverlays.prototype._updateOverlayScale = function(overlay, viewbox) {\n  var shouldScale = overlay.scale,\n      minScale,\n      maxScale,\n      htmlContainer = overlay.htmlContainer;\n\n  var scale, transform = '';\n\n  if (shouldScale !== true) {\n\n    if (shouldScale === false) {\n      minScale = 1;\n      maxScale = 1;\n    } else {\n      minScale = shouldScale.min;\n      maxScale = shouldScale.max;\n    }\n\n    if (isDefined(minScale) && viewbox.scale < minScale) {\n      scale = (1 / viewbox.scale || 1) * minScale;\n    }\n\n    if (isDefined(maxScale) && viewbox.scale > maxScale) {\n      scale = (1 / viewbox.scale || 1) * maxScale;\n    }\n  }\n\n  if (isDefined(scale)) {\n    transform = 'scale(' + scale + ',' + scale + ')';\n  }\n\n  setTransform(htmlContainer, transform);\n};\n\n\nOverlays.prototype._updateOverlaysVisibilty = function(viewbox) {\n\n  var self = this;\n\n  forEach(this._overlays, function(overlay) {\n    self._updateOverlayVisibilty(overlay, viewbox);\n  });\n};\n\n\nOverlays.prototype._init = function() {\n\n  var eventBus = this._eventBus;\n\n  var self = this;\n\n\n  // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n    self._updateOverlaysVisibilty(viewbox);\n\n    self.show();\n  }\n\n  eventBus.on('canvas.viewbox.changing', function(event) {\n    self.hide();\n  });\n\n  eventBus.on('canvas.viewbox.changed', function(event) {\n    updateViewbox(event.viewbox);\n  });\n\n\n  // remove integration\n\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\n    var element = e.element;\n    var overlays = self.get({ element: element });\n\n    forEach(overlays, function(o) {\n      self.remove(o.id);\n    });\n\n    var container = self._getOverlayContainer(element);\n\n    if (container) {\n      domRemove(container.html);\n      var i = self._overlayContainers.indexOf(container);\n      if (i !== -1) {\n        self._overlayContainers.splice(i, 1);\n      }\n    }\n  });\n\n\n  // move integration\n\n  eventBus.on('element.changed', LOW_PRIORITY, function(e) {\n    var element = e.element;\n\n    var container = self._getOverlayContainer(element, true);\n\n    if (container) {\n      forEach(container.overlays, function(overlay) {\n        self._updateOverlay(overlay);\n      });\n\n      self._updateOverlayContainer(container);\n    }\n  });\n\n\n  // marker integration, simply add them on the overlays as classes, too.\n\n  eventBus.on('element.marker.update', function(e) {\n    var container = self._getOverlayContainer(e.element, true);\n    if (container) {\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\n    }\n  });\n\n\n  eventBus.on('root.set', function() {\n    self._updateOverlaysVisibilty(self._canvas.viewbox());\n  });\n\n  // clear overlays with diagram\n\n  eventBus.on('diagram.clear', this.clear, this);\n};\n\n\n\n// helpers /////////////////////////////\n\nfunction createRoot(parentNode) {\n  var root = domify(\n    '<div class=\"djs-overlay-container\" style=\"position: absolute; width: 0; height: 0;\" />'\n  );\n\n  parentNode.insertBefore(root, parentNode.firstChild);\n\n  return root;\n}\n\nfunction setPosition(el, x, y) {\n  assign(el.style, { left: x + 'px', top: y + 'px' });\n}\n\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\n\nfunction setTransform(el, transform) {\n\n  el.style['transform-origin'] = 'top left';\n\n  [ '', '-ms-', '-webkit-' ].forEach(function(prefix) {\n    el.style[prefix + 'transform'] = transform;\n  });\n}","import Overlays from './Overlays';\n\nexport default {\n  __init__: [ 'overlays' ],\n  overlays: [ 'type', Overlays ]\n};","import {\n  isArray,\n  isFunction,\n  forEach\n} from 'min-dash';\n\nimport {\n  domify,\n  query as domQuery,\n  attr as domAttr,\n  clear as domClear,\n  classes as domClasses,\n  matches as domMatches,\n  delegate as domDelegate,\n  event as domEvent\n} from 'min-dom';\n\n\nvar TOGGLE_SELECTOR = '.djs-palette-toggle',\n    ENTRY_SELECTOR = '.entry',\n    ELEMENT_SELECTOR = TOGGLE_SELECTOR + ', ' + ENTRY_SELECTOR;\n\nvar PALETTE_PREFIX = 'djs-palette-',\n    PALETTE_SHOWN_CLS = 'shown',\n    PALETTE_OPEN_CLS = 'open',\n    PALETTE_TWO_COLUMN_CLS = 'two-column';\n\nvar DEFAULT_PRIORITY = 1000;\n\n\n/**\n * A palette containing modeling elements.\n */\nexport default function Palette(eventBus, canvas) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n\n  var self = this;\n\n  eventBus.on('tool-manager.update', function(event) {\n    var tool = event.tool;\n\n    self.updateToolHighlight(tool);\n  });\n\n  eventBus.on('i18n.changed', function() {\n    self._update();\n  });\n\n  eventBus.on('diagram.init', function() {\n\n    self._diagramInitialized = true;\n\n    self._rebuild();\n  });\n}\n\nPalette.$inject = [ 'eventBus', 'canvas' ];\n\n\n/**\n * Register a provider with the palette\n *\n * @param  {number} [priority=1000]\n * @param  {PaletteProvider} provider\n *\n * @example\n * const paletteProvider = {\n *   getPaletteEntries: function() {\n *     return function(entries) {\n *       return {\n *         ...entries,\n *         'entry-1': {\n *           label: 'My Entry',\n *           action: function() { alert(\"I have been clicked!\"); }\n *         }\n *       };\n *     }\n *   }\n * };\n *\n * palette.registerProvider(800, paletteProvider);\n */\nPalette.prototype.registerProvider = function(priority, provider) {\n  if (!provider) {\n    provider = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  this._eventBus.on('palette.getProviders', priority, function(event) {\n    event.providers.push(provider);\n  });\n\n  this._rebuild();\n};\n\n\n/**\n * Returns the palette entries\n *\n * @return {Object<string, PaletteEntryDescriptor>} map of entries\n */\nPalette.prototype.getEntries = function() {\n  var providers = this._getProviders();\n\n  return providers.reduce(addPaletteEntries, {});\n};\n\nPalette.prototype._rebuild = function() {\n\n  if (!this._diagramInitialized) {\n    return;\n  }\n\n  var providers = this._getProviders();\n\n  if (!providers.length) {\n    return;\n  }\n\n  if (!this._container) {\n    this._init();\n  }\n\n  this._update();\n};\n\n/**\n * Initialize\n */\nPalette.prototype._init = function() {\n\n  var self = this;\n\n  var eventBus = this._eventBus;\n\n  var parentContainer = this._getParentContainer();\n\n  var container = this._container = domify(Palette.HTML_MARKUP);\n\n  parentContainer.appendChild(container);\n  domClasses(parentContainer).add(PALETTE_PREFIX + PALETTE_SHOWN_CLS);\n\n  domDelegate.bind(container, ELEMENT_SELECTOR, 'click', function(event) {\n\n    var target = event.delegateTarget;\n\n    if (domMatches(target, TOGGLE_SELECTOR)) {\n      return self.toggle();\n    }\n\n    self.trigger('click', event);\n  });\n\n  // prevent drag propagation\n  domEvent.bind(container, 'mousedown', function(event) {\n    event.stopPropagation();\n  });\n\n  // prevent drag propagation\n  domDelegate.bind(container, ENTRY_SELECTOR, 'dragstart', function(event) {\n    self.trigger('dragstart', event);\n  });\n\n  eventBus.on('canvas.resized', this._layoutChanged, this);\n\n  eventBus.fire('palette.create', {\n    container: container\n  });\n};\n\nPalette.prototype._getProviders = function(id) {\n\n  var event = this._eventBus.createEvent({\n    type: 'palette.getProviders',\n    providers: []\n  });\n\n  this._eventBus.fire(event);\n\n  return event.providers;\n};\n\n/**\n * Update palette state.\n *\n * @param  {Object} [state] { open, twoColumn }\n */\nPalette.prototype._toggleState = function(state) {\n\n  state = state || {};\n\n  var parent = this._getParentContainer(),\n      container = this._container;\n\n  var eventBus = this._eventBus;\n\n  var twoColumn;\n\n  var cls = domClasses(container),\n      parentCls = domClasses(parent);\n\n  if ('twoColumn' in state) {\n    twoColumn = state.twoColumn;\n  } else {\n    twoColumn = this._needsCollapse(parent.clientHeight, this._entries || {});\n  }\n\n  // always update two column\n  cls.toggle(PALETTE_TWO_COLUMN_CLS, twoColumn);\n  parentCls.toggle(PALETTE_PREFIX + PALETTE_TWO_COLUMN_CLS, twoColumn);\n\n  if ('open' in state) {\n    cls.toggle(PALETTE_OPEN_CLS, state.open);\n    parentCls.toggle(PALETTE_PREFIX + PALETTE_OPEN_CLS, state.open);\n  }\n\n  eventBus.fire('palette.changed', {\n    twoColumn: twoColumn,\n    open: this.isOpen()\n  });\n};\n\nPalette.prototype._update = function() {\n\n  var entriesContainer = domQuery('.djs-palette-entries', this._container),\n      entries = this._entries = this.getEntries();\n\n  domClear(entriesContainer);\n\n  forEach(entries, function(entry, id) {\n\n    var grouping = entry.group || 'default';\n\n    var container = domQuery('[data-group=' + grouping + ']', entriesContainer);\n    if (!container) {\n      container = domify('<div class=\"group\" data-group=\"' + grouping + '\"></div>');\n      entriesContainer.appendChild(container);\n    }\n\n    var html = entry.html || (\n      entry.separator ?\n        '<hr class=\"separator\" />' :\n        '<div class=\"entry\" draggable=\"true\"></div>');\n\n\n    var control = domify(html);\n    container.appendChild(control);\n\n    if (!entry.separator) {\n      domAttr(control, 'data-action', id);\n\n      if (entry.title) {\n        domAttr(control, 'title', entry.title);\n      }\n\n      if (entry.className) {\n        addClasses(control, entry.className);\n      }\n\n      if (entry.imageUrl) {\n        control.appendChild(domify('<img src=\"' + entry.imageUrl + '\">'));\n      }\n    }\n  });\n\n  // open after update\n  this.open();\n};\n\n\n/**\n * Trigger an action available on the palette\n *\n * @param  {string} action\n * @param  {Event} event\n */\nPalette.prototype.trigger = function(action, event, autoActivate) {\n  var entries = this._entries,\n      entry,\n      handler,\n      originalEvent,\n      button = event.delegateTarget || event.target;\n\n  if (!button) {\n    return event.preventDefault();\n  }\n\n  entry = entries[domAttr(button, 'data-action')];\n\n  // when user clicks on the palette and not on an action\n  if (!entry) {\n    return;\n  }\n\n  handler = entry.action;\n\n  originalEvent = event.originalEvent || event;\n\n  // simple action (via callback function)\n  if (isFunction(handler)) {\n    if (action === 'click') {\n      handler(originalEvent, autoActivate);\n    }\n  } else {\n    if (handler[action]) {\n      handler[action](originalEvent, autoActivate);\n    }\n  }\n\n  // silence other actions\n  event.preventDefault();\n};\n\nPalette.prototype._layoutChanged = function() {\n  this._toggleState({});\n};\n\n/**\n * Do we need to collapse to two columns?\n *\n * @param {number} availableHeight\n * @param {Object} entries\n *\n * @return {boolean}\n */\nPalette.prototype._needsCollapse = function(availableHeight, entries) {\n\n  // top margin + bottom toggle + bottom margin\n  // implementors must override this method if they\n  // change the palette styles\n  var margin = 20 + 10 + 20;\n\n  var entriesHeight = Object.keys(entries).length * 46;\n\n  return availableHeight < entriesHeight + margin;\n};\n\n/**\n * Close the palette\n */\nPalette.prototype.close = function() {\n\n  this._toggleState({\n    open: false,\n    twoColumn: false\n  });\n};\n\n\n/**\n * Open the palette\n */\nPalette.prototype.open = function() {\n  this._toggleState({ open: true });\n};\n\n\nPalette.prototype.toggle = function(open) {\n  if (this.isOpen()) {\n    this.close();\n  } else {\n    this.open();\n  }\n};\n\nPalette.prototype.isActiveTool = function(tool) {\n  return tool && this._activeTool === tool;\n};\n\nPalette.prototype.updateToolHighlight = function(name) {\n  var entriesContainer,\n      toolsContainer;\n\n  if (!this._toolsContainer) {\n    entriesContainer = domQuery('.djs-palette-entries', this._container);\n\n    this._toolsContainer = domQuery('[data-group=tools]', entriesContainer);\n  }\n\n  toolsContainer = this._toolsContainer;\n\n  forEach(toolsContainer.children, function(tool) {\n    var actionName = tool.getAttribute('data-action');\n\n    if (!actionName) {\n      return;\n    }\n\n    var toolClasses = domClasses(tool);\n\n    actionName = actionName.replace('-tool', '');\n\n    if (toolClasses.contains('entry') && actionName === name) {\n      toolClasses.add('highlighted-entry');\n    } else {\n      toolClasses.remove('highlighted-entry');\n    }\n  });\n};\n\n\n/**\n * Return true if the palette is opened.\n *\n * @example\n *\n * palette.open();\n *\n * if (palette.isOpen()) {\n *   // yes, we are open\n * }\n *\n * @return {boolean} true if palette is opened\n */\nPalette.prototype.isOpen = function() {\n  return domClasses(this._container).has(PALETTE_OPEN_CLS);\n};\n\n/**\n * Get container the palette lives in.\n *\n * @return {Element}\n */\nPalette.prototype._getParentContainer = function() {\n  return this._canvas.getContainer();\n};\n\n\n/* markup definition */\n\nPalette.HTML_MARKUP =\n  '<div class=\"djs-palette\">' +\n    '<div class=\"djs-palette-entries\"></div>' +\n    '<div class=\"djs-palette-toggle\"></div>' +\n  '</div>';\n\n\n// helpers //////////////////////\n\nfunction addClasses(element, classNames) {\n\n  var classes = domClasses(element);\n\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(/\\s+/g);\n  actualClassNames.forEach(function(cls) {\n    classes.add(cls);\n  });\n}\n\nfunction addPaletteEntries(entries, provider) {\n\n  var entriesOrUpdater = provider.getPaletteEntries();\n\n  if (isFunction(entriesOrUpdater)) {\n    return entriesOrUpdater(entries);\n  }\n\n  forEach(entriesOrUpdater, function(entry, id) {\n    entries[id] = entry;\n  });\n\n  return entries;\n}","import Palette from './Palette';\n\nexport default {\n  __init__: [ 'palette' ],\n  palette: [ 'type', Palette ]\n};\n","import {\n  assign,\n  forEach,\n  isFunction,\n  isDefined,\n  omit,\n  size\n} from 'min-dash';\n\nimport {\n  delegate as domDelegate,\n  domify as domify,\n  classes as domClasses,\n  attr as domAttr,\n  remove as domRemove\n} from 'min-dom';\n\nvar DATA_REF = 'data-id';\n\nvar CLOSE_EVENTS = [\n  'contextPad.close',\n  'canvas.viewbox.changing',\n  'commandStack.changed'\n];\n\nvar DEFAULT_PRIORITY = 1000;\n\n\n/**\n * A popup menu that can be used to display a list of actions anywhere in the canvas.\n *\n * @param {Object} config\n * @param {boolean|Object} [config.scale={ min: 1.0, max: 1.5 }]\n * @param {number} [config.scale.min]\n * @param {number} [config.scale.max]\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n *\n * @class\n * @constructor\n */\nexport default function PopupMenu(config, eventBus, canvas) {\n\n  var scale = isDefined(config && config.scale) ? config.scale : {\n    min: 1,\n    max: 1.5\n  };\n\n  this._config = {\n    scale: scale\n  };\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._providers = {};\n  this._current = {};\n}\n\nPopupMenu.$inject = [\n  'config.popupMenu',\n  'eventBus',\n  'canvas'\n];\n\n/**\n * Registers a popup menu provider\n *\n * @param  {string} id\n * @param {number} [priority=1000]\n * @param  {Object} provider\n *\n * @example\n * const popupMenuProvider = {\n *   getPopupMenuEntries: function(element) {\n *     return {\n *       'entry-1': {\n *         label: 'My Entry',\n *         action: function() { alert(\"I have been clicked!\"); }\n *       }\n *     }\n *   }\n * };\n *\n * popupMenu.registerProvider('myMenuID', popupMenuProvider);\n */\nPopupMenu.prototype.registerProvider = function(id, priority, provider) {\n  if (!provider) {\n    provider = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  this._eventBus.on('popupMenu.getProviders.' + id, priority, function(event) {\n    event.providers.push(provider);\n  });\n};\n\n/**\n * Determine if the popup menu has entries.\n *\n * @return {boolean} true if empty\n */\nPopupMenu.prototype.isEmpty = function(element, providerId) {\n  if (!element) {\n    throw new Error('element parameter is missing');\n  }\n\n  if (!providerId) {\n    throw new Error('providerId parameter is missing');\n  }\n\n  var providers = this._getProviders(providerId);\n\n  if (!providers) {\n    return true;\n  }\n\n  var entries = this._getEntries(element, providers),\n      headerEntries = this._getHeaderEntries(element, providers);\n\n  var hasEntries = size(entries) > 0,\n      hasHeaderEntries = headerEntries && size(headerEntries) > 0;\n\n  return !hasEntries && !hasHeaderEntries;\n};\n\n\n/**\n * Create entries and open popup menu at given position\n *\n * @param  {Object} element\n * @param  {string} id provider id\n * @param  {Object} position\n *\n * @return {Object} popup menu instance\n */\nPopupMenu.prototype.open = function(element, id, position) {\n\n  var providers = this._getProviders(id);\n\n  if (!element) {\n    throw new Error('Element is missing');\n  }\n\n  if (!providers || !providers.length) {\n    throw new Error('No registered providers for: ' + id);\n  }\n\n  if (!position) {\n    throw new Error('the position argument is missing');\n  }\n\n  if (this.isOpen()) {\n    this.close();\n  }\n\n  this._emit('open');\n\n  var current = this._current = {\n    className: id,\n    element: element,\n    position: position\n  };\n\n  var entries = this._getEntries(element, providers),\n      headerEntries = this._getHeaderEntries(element, providers);\n\n  current.entries = assign({}, entries, headerEntries);\n\n  current.container = this._createContainer();\n\n  if (size(headerEntries)) {\n    current.container.appendChild(\n      this._createEntries(headerEntries, 'djs-popup-header')\n    );\n  }\n\n  if (size(entries)) {\n    current.container.appendChild(\n      this._createEntries(entries, 'djs-popup-body')\n    );\n  }\n\n  var canvas = this._canvas,\n      parent = canvas.getContainer();\n\n  this._attachContainer(current.container, parent, position.cursor);\n  this._bindAutoClose();\n};\n\n\n/**\n * Removes the popup menu and unbinds the event handlers.\n */\nPopupMenu.prototype.close = function() {\n\n  if (!this.isOpen()) {\n    return;\n  }\n\n  this._emit('close');\n\n  this._unbindAutoClose();\n  domRemove(this._current.container);\n  this._current.container = null;\n};\n\n\n/**\n * Determine if an open popup menu exist.\n *\n * @return {boolean} true if open\n */\nPopupMenu.prototype.isOpen = function() {\n  return !!this._current.container;\n};\n\n\n/**\n * Trigger an action associated with an entry.\n *\n * @param {Object} event\n *\n * @return the result of the action callback, if any\n */\nPopupMenu.prototype.trigger = function(event) {\n\n  // silence other actions\n  event.preventDefault();\n\n  var element = event.delegateTarget || event.target,\n      entryId = domAttr(element, DATA_REF);\n\n  var entry = this._getEntry(entryId);\n\n  if (entry.action) {\n    return entry.action.call(null, event, entry);\n  }\n};\n\nPopupMenu.prototype._getProviders = function(id) {\n\n  var event = this._eventBus.createEvent({\n    type: 'popupMenu.getProviders.' + id,\n    providers: []\n  });\n\n  this._eventBus.fire(event);\n\n  return event.providers;\n};\n\nPopupMenu.prototype._getEntries = function(element, providers) {\n\n  var entries = {};\n\n  forEach(providers, function(provider) {\n\n    // handle legacy method\n    if (!provider.getPopupMenuEntries) {\n      forEach(provider.getEntries(element), function(entry) {\n        var id = entry.id;\n\n        if (!id) {\n          throw new Error('every entry must have the id property set');\n        }\n\n        entries[id] = omit(entry, [ 'id' ]);\n      });\n\n      return;\n    }\n\n    var entriesOrUpdater = provider.getPopupMenuEntries(element);\n\n    if (isFunction(entriesOrUpdater)) {\n      entries = entriesOrUpdater(entries);\n    } else {\n      forEach(entriesOrUpdater, function(entry, id) {\n        entries[id] = entry;\n      });\n    }\n  });\n\n  return entries;\n};\n\nPopupMenu.prototype._getHeaderEntries = function(element, providers) {\n\n  var entries = {};\n\n  forEach(providers, function(provider) {\n\n    // handle legacy method\n    if (!provider.getPopupMenuHeaderEntries) {\n      if (!provider.getHeaderEntries) {\n        return;\n      }\n\n      forEach(provider.getHeaderEntries(element), function(entry) {\n        var id = entry.id;\n\n        if (!id) {\n          throw new Error('every entry must have the id property set');\n        }\n\n        entries[id] = omit(entry, [ 'id' ]);\n      });\n\n      return;\n    }\n\n    var entriesOrUpdater = provider.getPopupMenuHeaderEntries(element);\n\n    if (isFunction(entriesOrUpdater)) {\n      entries = entriesOrUpdater(entries);\n    } else {\n      forEach(entriesOrUpdater, function(entry, id) {\n        entries[id] = entry;\n      });\n    }\n  });\n\n  return entries;\n\n\n};\n\n/**\n * Gets an entry instance (either entry or headerEntry) by id.\n *\n * @param  {string} entryId\n *\n * @return {Object} entry instance\n */\nPopupMenu.prototype._getEntry = function(entryId) {\n\n  var entry = this._current.entries[entryId];\n\n  if (!entry) {\n    throw new Error('entry not found');\n  }\n\n  return entry;\n};\n\nPopupMenu.prototype._emit = function(eventName) {\n  this._eventBus.fire('popupMenu.' + eventName);\n};\n\n/**\n * Creates the popup menu container.\n *\n * @return {Object} a DOM container\n */\nPopupMenu.prototype._createContainer = function() {\n  var container = domify('<div class=\"djs-popup\">'),\n      position = this._current.position,\n      className = this._current.className;\n\n  assign(container.style, {\n    position: 'absolute',\n    left: position.x + 'px',\n    top: position.y + 'px',\n    visibility: 'hidden'\n  });\n\n  domClasses(container).add(className);\n\n  return container;\n};\n\n\n/**\n * Attaches the container to the DOM.\n *\n * @param {Object} container\n * @param {Object} parent\n */\nPopupMenu.prototype._attachContainer = function(container, parent, cursor) {\n  var self = this;\n\n  // Event handler\n  domDelegate.bind(container, '.entry' ,'click', function(event) {\n    self.trigger(event);\n  });\n\n  this._updateScale(container);\n\n  // Attach to DOM\n  parent.appendChild(container);\n\n  if (cursor) {\n    this._assureIsInbounds(container, cursor);\n  }\n};\n\n\n/**\n * Updates popup style.transform with respect to the config and zoom level.\n *\n * @method _updateScale\n *\n * @param {Object} container\n */\nPopupMenu.prototype._updateScale = function(container) {\n  var zoom = this._canvas.zoom();\n\n  var scaleConfig = this._config.scale,\n      minScale,\n      maxScale,\n      scale = zoom;\n\n  if (scaleConfig !== true) {\n\n    if (scaleConfig === false) {\n      minScale = 1;\n      maxScale = 1;\n    } else {\n      minScale = scaleConfig.min;\n      maxScale = scaleConfig.max;\n    }\n\n    if (isDefined(minScale) && zoom < minScale) {\n      scale = minScale;\n    }\n\n    if (isDefined(maxScale) && zoom > maxScale) {\n      scale = maxScale;\n    }\n\n  }\n\n  setTransform(container, 'scale(' + scale + ')');\n};\n\n\n/**\n * Make sure that the menu is always fully shown\n *\n * @method function\n *\n * @param  {Object} container\n * @param  {Position} cursor {x, y}\n */\nPopupMenu.prototype._assureIsInbounds = function(container, cursor) {\n  var canvas = this._canvas,\n      clientRect = canvas._container.getBoundingClientRect();\n\n  var containerX = container.offsetLeft,\n      containerY = container.offsetTop,\n      containerWidth = container.scrollWidth,\n      containerHeight = container.scrollHeight,\n      overAxis = {},\n      left, top;\n\n  var cursorPosition = {\n    x: cursor.x - clientRect.left,\n    y: cursor.y - clientRect.top\n  };\n\n  if (containerX + containerWidth > clientRect.width) {\n    overAxis.x = true;\n  }\n\n  if (containerY + containerHeight > clientRect.height) {\n    overAxis.y = true;\n  }\n\n  if (overAxis.x && overAxis.y) {\n    left = cursorPosition.x - containerWidth + 'px';\n    top = cursorPosition.y - containerHeight + 'px';\n  } else if (overAxis.x) {\n    left = cursorPosition.x - containerWidth + 'px';\n    top = cursorPosition.y + 'px';\n  } else if (overAxis.y && cursorPosition.y < containerHeight) {\n    left = cursorPosition.x + 'px';\n    top = 10 + 'px';\n  } else if (overAxis.y) {\n    left = cursorPosition.x + 'px';\n    top = cursorPosition.y - containerHeight + 'px';\n  }\n\n  assign(container.style, { left: left, top: top }, { visibility: 'visible', 'z-index': 1000 });\n};\n\n\n/**\n * Creates a list of entries and returns them as a DOM container.\n *\n * @param {Array<Object>} entries an array of entry objects\n * @param {string} className the class name of the entry container\n *\n * @return {Object} a DOM container\n */\nPopupMenu.prototype._createEntries = function(entries, className) {\n\n  var entriesContainer = domify('<div>'),\n      self = this;\n\n  domClasses(entriesContainer).add(className);\n\n  forEach(entries, function(entry, id) {\n    var entryContainer = self._createEntry(entry, id);\n    entriesContainer.appendChild(entryContainer);\n  });\n\n  return entriesContainer;\n};\n\n\n/**\n * Creates a single entry and returns it as a DOM container.\n *\n * @param  {Object} entry\n *\n * @return {Object} a DOM container\n */\nPopupMenu.prototype._createEntry = function(entry, id) {\n\n  var entryContainer = domify('<div>'),\n      entryClasses = domClasses(entryContainer);\n\n  entryClasses.add('entry');\n\n  if (entry.className) {\n    entry.className.split(' ').forEach(function(className) {\n      entryClasses.add(className);\n    });\n  }\n\n  domAttr(entryContainer, DATA_REF, id);\n\n  if (entry.label) {\n    var label = domify('<span>');\n    label.textContent = entry.label;\n    entryContainer.appendChild(label);\n  }\n\n  if (entry.imageUrl) {\n    entryContainer.appendChild(domify('<img src=\"' + entry.imageUrl + '\" />'));\n  }\n\n  if (entry.active === true) {\n    entryClasses.add('active');\n  }\n\n  if (entry.disabled === true) {\n    entryClasses.add('disabled');\n  }\n\n  if (entry.title) {\n    entryContainer.title = entry.title;\n  }\n\n  return entryContainer;\n};\n\n\n/**\n * Set up listener to close popup automatically on certain events.\n */\nPopupMenu.prototype._bindAutoClose = function() {\n  this._eventBus.once(CLOSE_EVENTS, this.close, this);\n};\n\n\n/**\n * Remove the auto-closing listener.\n */\nPopupMenu.prototype._unbindAutoClose = function() {\n  this._eventBus.off(CLOSE_EVENTS, this.close, this);\n};\n\n\n\n// helpers /////////////////////////////\n\nfunction setTransform(element, transform) {\n  element.style['transform-origin'] = 'top left';\n\n  [ '', '-ms-', '-webkit-' ].forEach(function(prefix) {\n    element.style[prefix + 'transform'] = transform;\n  });\n}","import PopupMenu from './PopupMenu';\n\nexport default {\n  __init__: [ 'popupMenu' ],\n  popupMenu: [ 'type', PopupMenu ]\n};\n","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  clone as svgClone,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nimport { query as domQuery } from 'min-dom';\r\n\r\nimport { getVisual } from '../../util/GraphicsUtil';\r\n\r\nvar MARKER_TYPES = [\r\n  'marker-start',\r\n  'marker-mid',\r\n  'marker-end'\r\n];\r\n\r\nvar NODES_CAN_HAVE_MARKER = [\r\n  'circle',\r\n  'ellipse',\r\n  'line',\r\n  'path',\r\n  'polygon',\r\n  'polyline',\r\n  'rect'\r\n];\r\n\r\n\r\n/**\r\n * Adds support for previews of moving/resizing elements.\r\n */\r\nexport default function PreviewSupport(elementRegistry, eventBus, canvas, styles) {\r\n  this._elementRegistry = elementRegistry;\r\n  this._canvas = canvas;\r\n  this._styles = styles;\r\n\r\n  this._clonedMarkers = {};\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('drag.cleanup', function() {\r\n    forEach(self._clonedMarkers, function(clonedMarker) {\r\n      svgRemove(clonedMarker);\r\n    });\r\n\r\n    self._clonedMarkers = {};\r\n  });\r\n}\r\n\r\nPreviewSupport.$inject = [\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'canvas',\r\n  'styles'\r\n];\r\n\r\n\r\n/**\r\n * Returns graphics of an element.\r\n *\r\n * @param {djs.model.Base} element\r\n *\r\n * @return {SVGElement}\r\n */\r\nPreviewSupport.prototype.getGfx = function(element) {\r\n  return this._elementRegistry.getGraphics(element);\r\n};\r\n\r\n/**\r\n * Adds a move preview of a given shape to a given svg group.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {SVGElement} group\r\n * @param {SVGElement} [gfx]\r\n *\r\n * @return {SVGElement} dragger\r\n */\r\nPreviewSupport.prototype.addDragger = function(element, group, gfx) {\r\n  gfx = gfx || this.getGfx(element);\r\n\r\n  var dragger = svgClone(gfx);\r\n  var bbox = gfx.getBoundingClientRect();\r\n\r\n  this._cloneMarkers(getVisual(dragger));\r\n\r\n  svgAttr(dragger, this._styles.cls('djs-dragger', [], {\r\n    x: bbox.top,\r\n    y: bbox.left\r\n  }));\r\n\r\n  svgAppend(group, dragger);\r\n\r\n  return dragger;\r\n};\r\n\r\n/**\r\n * Adds a resize preview of a given shape to a given svg group.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {SVGElement} group\r\n *\r\n * @return {SVGElement} frame\r\n */\r\nPreviewSupport.prototype.addFrame = function(shape, group) {\r\n\r\n  var frame = svgCreate('rect', {\r\n    class: 'djs-resize-overlay',\r\n    width:  shape.width,\r\n    height: shape.height,\r\n    x: shape.x,\r\n    y: shape.y\r\n  });\r\n\r\n  svgAppend(group, frame);\r\n\r\n  return frame;\r\n};\r\n\r\n/**\r\n * Clone all markers referenced by a node and its child nodes.\r\n *\r\n * @param {SVGElement} gfx\r\n */\r\nPreviewSupport.prototype._cloneMarkers = function(gfx) {\r\n  var self = this;\r\n\r\n  if (gfx.childNodes) {\r\n\r\n    // TODO: use forEach once we drop PhantomJS\r\n    for (var i = 0; i < gfx.childNodes.length; i++) {\r\n\r\n      // recursively clone markers of child nodes\r\n      self._cloneMarkers(gfx.childNodes[ i ]);\r\n    }\r\n  }\r\n\r\n  if (!canHaveMarker(gfx)) {\r\n    return;\r\n  }\r\n\r\n  MARKER_TYPES.forEach(function(markerType) {\r\n    if (svgAttr(gfx, markerType)) {\r\n      var marker = getMarker(gfx, markerType, self._canvas.getContainer());\r\n\r\n      self._cloneMarker(gfx, marker, markerType);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Clone marker referenced by an element.\r\n *\r\n * @param {SVGElement} gfx\r\n * @param {SVGElement} marker\r\n * @param {string} markerType\r\n */\r\nPreviewSupport.prototype._cloneMarker = function(gfx, marker, markerType) {\r\n  var markerId = marker.id;\r\n\r\n  var clonedMarker = this._clonedMarkers[ markerId ];\r\n\r\n  if (!clonedMarker) {\r\n    clonedMarker = svgClone(marker);\r\n\r\n    var clonedMarkerId = markerId + '-clone';\r\n\r\n    clonedMarker.id = clonedMarkerId;\r\n\r\n    svgClasses(clonedMarker)\r\n      .add('djs-dragger')\r\n      .add('djs-dragger-marker');\r\n\r\n    this._clonedMarkers[ markerId ] = clonedMarker;\r\n\r\n    var defs = domQuery('defs', this._canvas._svg);\r\n\r\n    if (!defs) {\r\n      defs = svgCreate('defs');\r\n\r\n      svgAppend(this._canvas._svg, defs);\r\n    }\r\n\r\n    svgAppend(defs, clonedMarker);\r\n  }\r\n\r\n  var reference = idToReference(this._clonedMarkers[ markerId ].id);\r\n\r\n  svgAttr(gfx, markerType, reference);\r\n};\r\n\r\n// helpers //////////\r\n\r\n/**\r\n * Get marker of given type referenced by node.\r\n *\r\n * @param {Node} node\r\n * @param {string} markerType\r\n * @param {Node} [parentNode]\r\n *\r\n * @param {Node}\r\n */\r\nfunction getMarker(node, markerType, parentNode) {\r\n  var id = referenceToId(svgAttr(node, markerType));\r\n\r\n  return domQuery('marker#' + id, parentNode || document);\r\n}\r\n\r\n/**\r\n * Get ID of fragment within current document from its functional IRI reference.\r\n * References may use single or double quotes.\r\n *\r\n * @param {string} reference\r\n *\r\n * @returns {string}\r\n */\r\nfunction referenceToId(reference) {\r\n  return reference.match(/url\\(['\"]?#([^'\"]*)['\"]?\\)/)[1];\r\n}\r\n\r\n/**\r\n * Get functional IRI reference for given ID of fragment within current document.\r\n *\r\n * @param {string} id\r\n *\r\n * @returns {string}\r\n */\r\nfunction idToReference(id) {\r\n  return 'url(#' + id + ')';\r\n}\r\n\r\n/**\r\n * Check wether node type can have marker attributes.\r\n *\r\n * @param {Node} node\r\n *\r\n * @returns {boolean}\r\n */\r\nfunction canHaveMarker(node) {\r\n  return NODES_CAN_HAVE_MARKER.indexOf(node.nodeName) !== -1;\r\n}","import PreviewSupport from './PreviewSupport';\n\nexport default {\n  __init__: [ 'previewSupport' ],\n  previewSupport: [ 'type', PreviewSupport ]\n};\n","import {\n  assign\n} from 'min-dash';\n\nvar round = Math.round;\n\n/**\n * Service that allow replacing of elements.\n */\nexport default function Replace(modeling) {\n\n  this._modeling = modeling;\n}\n\nReplace.$inject = [ 'modeling' ];\n\n/**\n * @param {Element} oldElement - Element to be replaced\n * @param {Object}  newElementData - Containing information about the new element,\n *                                   for example the new bounds and type.\n * @param {Object}  options - Custom options that will be attached to the context. It can be used to inject data\n *                            that is needed in the command chain. For example it could be used in\n *                            eventbus.on('commandStack.shape.replace.postExecute') to change shape attributes after\n *                            shape creation.\n */\nReplace.prototype.replaceElement = function(oldElement, newElementData, options) {\n\n  if (oldElement.waypoints) {\n\n    // TODO(nikku): we do not replace connections, yet\n    return null;\n  }\n\n  var modeling = this._modeling;\n\n  var width = newElementData.width || oldElement.width,\n      height = newElementData.height || oldElement.height,\n      x = newElementData.x || oldElement.x,\n      y = newElementData.y || oldElement.y,\n      centerX = round(x + width / 2),\n      centerY = round(y + height / 2);\n\n  // modeling API requires center coordinates,\n  // account for that when handling shape bounds\n\n  return modeling.replaceShape(\n    oldElement,\n    assign(\n      {},\n      newElementData,\n      {\n        x: centerX,\n        y: centerY,\n        width: width,\n        height: height\n      }\n    ),\n    options\n  );\n};\n","import Replace from './Replace';\n\nexport default {\n  __init__: [ 'replace' ],\n  replace: [ 'type', Replace ]\n};","import {\n  pick,\n  assign\n} from 'min-dash';\n\nimport {\n  resizeBounds,\n  ensureConstraints,\n  computeChildrenBBox,\n  getMinResizeBounds\n} from './ResizeUtil';\n\nimport {\n  asTRBL,\n  getMid,\n  roundBounds\n} from '../../layout/LayoutUtil';\n\nvar DEFAULT_MIN_WIDTH = 10;\n\n\n/**\n * A component that provides resizing of shapes on the canvas.\n *\n * The following components are part of shape resize:\n *\n *  * adding resize handles,\n *  * creating a visual during resize\n *  * checking resize rules\n *  * committing a change once finished\n *\n *\n * ## Customizing\n *\n * It's possible to customize the resizing behaviour by intercepting 'resize.start'\n * and providing the following parameters through the 'context':\n *\n *   * minDimensions ({ width, height }): minimum shape dimensions\n *\n *   * childrenBoxPadding ({ left, top, bottom, right } || number):\n *     gap between the minimum bounding box and the container\n *\n * f.ex:\n *\n * ```javascript\n * eventBus.on('resize.start', 1500, function(event) {\n *   var context = event.context,\n *\n *  context.minDimensions = { width: 140, height: 120 };\n *\n *  // Passing general padding\n *  context.childrenBoxPadding = 30;\n *\n *  // Passing padding to a specific side\n *  context.childrenBoxPadding.left = 20;\n * });\n * ```\n */\nexport default function Resize(eventBus, rules, modeling, dragging) {\n\n  this._dragging = dragging;\n  this._rules = rules;\n\n  var self = this;\n\n\n  /**\n   * Handle resize move by specified delta.\n   *\n   * @param {Object} context\n   * @param {Point} delta\n   */\n  function handleMove(context, delta) {\n\n    var shape = context.shape,\n        direction = context.direction,\n        resizeConstraints = context.resizeConstraints,\n        newBounds;\n\n    context.delta = delta;\n\n    newBounds = resizeBounds(shape, direction, delta);\n\n    // ensure constraints during resize\n    context.newBounds = ensureConstraints(newBounds, resizeConstraints);\n\n    // update + cache executable state\n    context.canExecute = self.canResize(context);\n  }\n\n  /**\n   * Handle resize start.\n   *\n   * @param  {Object} context\n   */\n  function handleStart(context) {\n\n    var resizeConstraints = context.resizeConstraints,\n\n        // evaluate minBounds for backwards compatibility\n        minBounds = context.minBounds;\n\n    if (resizeConstraints !== undefined) {\n      return;\n    }\n\n    if (minBounds === undefined) {\n      minBounds = self.computeMinResizeBox(context);\n    }\n\n    context.resizeConstraints = {\n      min: asTRBL(minBounds)\n    };\n  }\n\n  /**\n   * Handle resize end.\n   *\n   * @param  {Object} context\n   */\n  function handleEnd(context) {\n    var shape = context.shape,\n        canExecute = context.canExecute,\n        newBounds = context.newBounds;\n\n    if (canExecute) {\n\n      // ensure we have actual pixel values for new bounds\n      // (important when zoom level was > 1 during move)\n      newBounds = roundBounds(newBounds);\n\n      if (!boundsChanged(shape, newBounds)) {\n\n        // no resize necessary\n        return;\n      }\n\n      // perform the actual resize\n      modeling.resizeShape(shape, newBounds);\n    }\n  }\n\n\n  eventBus.on('resize.start', function(event) {\n    handleStart(event.context);\n  });\n\n  eventBus.on('resize.move', function(event) {\n    var delta = {\n      x: event.dx,\n      y: event.dy\n    };\n\n    handleMove(event.context, delta);\n  });\n\n  eventBus.on('resize.end', function(event) {\n    handleEnd(event.context);\n  });\n\n}\n\n\nResize.prototype.canResize = function(context) {\n  var rules = this._rules;\n\n  var ctx = pick(context, [ 'newBounds', 'shape', 'delta', 'direction' ]);\n\n  return rules.allowed('shape.resize', ctx);\n};\n\n/**\n * Activate a resize operation.\n *\n * You may specify additional contextual information and must specify a\n * resize direction during activation of the resize event.\n *\n * @param {MouseEvent} event\n * @param {djs.model.Shape} shape\n * @param {Object|string} contextOrDirection\n */\nResize.prototype.activate = function(event, shape, contextOrDirection) {\n  var dragging = this._dragging,\n      context,\n      direction;\n\n  if (typeof contextOrDirection === 'string') {\n    contextOrDirection = {\n      direction: contextOrDirection\n    };\n  }\n\n  context = assign({ shape: shape }, contextOrDirection);\n\n  direction = context.direction;\n\n  if (!direction) {\n    throw new Error('must provide a direction (n|w|s|e|nw|se|ne|sw)');\n  }\n\n  dragging.init(event, getReferencePoint(shape, direction), 'resize', {\n    autoActivate: true,\n    cursor: getCursor(direction),\n    data: {\n      shape: shape,\n      context: context\n    }\n  });\n};\n\nResize.prototype.computeMinResizeBox = function(context) {\n  var shape = context.shape,\n      direction = context.direction,\n      minDimensions,\n      childrenBounds;\n\n  minDimensions = context.minDimensions || {\n    width: DEFAULT_MIN_WIDTH,\n    height: DEFAULT_MIN_WIDTH\n  };\n\n  // get children bounds\n  childrenBounds = computeChildrenBBox(shape, context.childrenBoxPadding);\n\n  // get correct minimum bounds from given resize direction\n  // basically ensures that the minBounds is max(childrenBounds, minDimensions)\n  return getMinResizeBounds(direction, shape, minDimensions, childrenBounds);\n};\n\n\nResize.$inject = [\n  'eventBus',\n  'rules',\n  'modeling',\n  'dragging'\n];\n\n// helpers //////////\n\nfunction boundsChanged(shape, newBounds) {\n  return shape.x !== newBounds.x ||\n    shape.y !== newBounds.y ||\n    shape.width !== newBounds.width ||\n    shape.height !== newBounds.height;\n}\n\nexport function getReferencePoint(shape, direction) {\n  var mid = getMid(shape),\n      trbl = asTRBL(shape);\n\n  var referencePoint = {\n    x: mid.x,\n    y: mid.y\n  };\n\n  if (direction.indexOf('n') !== -1) {\n    referencePoint.y = trbl.top;\n  } else if (direction.indexOf('s') !== -1) {\n    referencePoint.y = trbl.bottom;\n  }\n\n  if (direction.indexOf('e') !== -1) {\n    referencePoint.x = trbl.right;\n  } else if (direction.indexOf('w') !== -1) {\n    referencePoint.x = trbl.left;\n  }\n\n  return referencePoint;\n}\n\nfunction getCursor(direction) {\n  var prefix = 'resize-';\n\n  if (direction === 'n' || direction === 's') {\n    return prefix + 'ns';\n  } else if (direction === 'e' || direction === 'w') {\n    return prefix + 'ew';\n  } else if (direction === 'nw' || direction === 'se') {\n    return prefix + 'nwse';\n  } else {\n    return prefix + 'nesw';\n  }\n}","import {\n  bind,\n  forEach\n} from 'min-dash';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  clear as svgClear,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport {\n  event as domEvent\n} from 'min-dom';\n\nimport {\n  isPrimaryButton\n} from '../../util/Mouse';\n\nimport {\n  transform\n} from '../../util/SvgTransformUtil';\n\nimport { getReferencePoint } from './Resize';\n\nvar HANDLE_OFFSET = -6,\n    HANDLE_SIZE = 4,\n    HANDLE_HIT_SIZE = 20;\n\nvar CLS_RESIZER = 'djs-resizer';\n\nvar directions = [ 'n', 'w', 's', 'e', 'nw', 'ne', 'se', 'sw' ];\n\n\n/**\n * This component is responsible for adding resize handles.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {Selection} selection\n * @param {Resize} resize\n */\nexport default function ResizeHandles(eventBus, canvas, selection, resize) {\n\n  this._resize = resize;\n  this._canvas = canvas;\n\n  var self = this;\n\n  eventBus.on('selection.changed', function(e) {\n    var newSelection = e.newSelection;\n\n    // remove old selection markers\n    self.removeResizers();\n\n    // add new selection markers ONLY if single selection\n    if (newSelection.length === 1) {\n      forEach(newSelection, bind(self.addResizer, self));\n    }\n  });\n\n  eventBus.on('shape.changed', function(e) {\n    var shape = e.element;\n\n    if (selection.isSelected(shape)) {\n      self.removeResizers();\n\n      self.addResizer(shape);\n    }\n  });\n}\n\n\nResizeHandles.prototype.makeDraggable = function(element, gfx, direction) {\n  var resize = this._resize;\n\n  function startResize(event) {\n\n    // only trigger on left mouse button\n    if (isPrimaryButton(event)) {\n      resize.activate(event, element, direction);\n    }\n  }\n\n  domEvent.bind(gfx, 'mousedown', startResize);\n  domEvent.bind(gfx, 'touchstart', startResize);\n};\n\n\nResizeHandles.prototype._createResizer = function(element, x, y, direction) {\n  var resizersParent = this._getResizersParent();\n\n  var offset = getHandleOffset(direction);\n\n  var group = svgCreate('g');\n\n  svgClasses(group).add(CLS_RESIZER);\n  svgClasses(group).add(CLS_RESIZER + '-' + element.id);\n  svgClasses(group).add(CLS_RESIZER + '-' + direction);\n\n  svgAppend(resizersParent, group);\n\n  var visual = svgCreate('rect');\n\n  svgAttr(visual, {\n    x: -HANDLE_SIZE / 2 + offset.x,\n    y: -HANDLE_SIZE / 2 + offset.y,\n    width: HANDLE_SIZE,\n    height: HANDLE_SIZE\n  });\n\n  svgClasses(visual).add(CLS_RESIZER + '-visual');\n\n  svgAppend(group, visual);\n\n  var hit = svgCreate('rect');\n\n  svgAttr(hit, {\n    x: -HANDLE_HIT_SIZE / 2 + offset.x,\n    y: -HANDLE_HIT_SIZE / 2 + offset.y,\n    width: HANDLE_HIT_SIZE,\n    height: HANDLE_HIT_SIZE\n  });\n\n  svgClasses(hit).add(CLS_RESIZER + '-hit');\n\n  svgAppend(group, hit);\n\n  transform(group, x, y);\n\n  return group;\n};\n\nResizeHandles.prototype.createResizer = function(element, direction) {\n  var point = getReferencePoint(element, direction);\n\n  var resizer = this._createResizer(element, point.x, point.y, direction);\n\n  this.makeDraggable(element, resizer, direction);\n};\n\n// resize handles implementation ///////////////////////////////\n\n/**\n * Add resizers for a given element.\n *\n * @param {djs.model.Shape} shape\n */\nResizeHandles.prototype.addResizer = function(shape) {\n  var self = this;\n\n  var resize = this._resize;\n\n  if (!resize.canResize({ shape: shape })) {\n    return;\n  }\n\n  forEach(directions, function(direction) {\n    self.createResizer(shape, direction);\n  });\n};\n\n/**\n * Remove all resizers\n */\nResizeHandles.prototype.removeResizers = function() {\n  var resizersParent = this._getResizersParent();\n\n  svgClear(resizersParent);\n};\n\nResizeHandles.prototype._getResizersParent = function() {\n  return this._canvas.getLayer('resizers');\n};\n\nResizeHandles.$inject = [\n  'eventBus',\n  'canvas',\n  'selection',\n  'resize'\n];\n\n// helpers //////////\n\nfunction getHandleOffset(direction) {\n  var offset = {\n    x: 0,\n    y: 0\n  };\n\n  if (direction.indexOf('e') !== -1) {\n    offset.x = -HANDLE_OFFSET;\n  } else if (direction.indexOf('w') !== -1) {\n    offset.x = HANDLE_OFFSET;\n  }\n\n  if (direction.indexOf('s') !== -1) {\n    offset.y = -HANDLE_OFFSET;\n  } else if (direction.indexOf('n') !== -1) {\n    offset.y = HANDLE_OFFSET;\n  }\n\n  return offset;\n}","var MARKER_RESIZING = 'djs-resizing',\n    MARKER_RESIZE_NOT_OK = 'resize-not-ok';\n\nvar LOW_PRIORITY = 500;\n\nimport {\n  attr as svgAttr,\n  remove as svgRemove,\n  classes as svgClasses\n} from 'tiny-svg';\n\n\n/**\n * Provides previews for resizing shapes when resizing.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {PreviewSupport} previewSupport\n */\nexport default function ResizePreview(eventBus, canvas, previewSupport) {\n\n  /**\n   * Update resizer frame.\n   *\n   * @param {Object} context\n   */\n  function updateFrame(context) {\n\n    var shape = context.shape,\n        bounds = context.newBounds,\n        frame = context.frame;\n\n    if (!frame) {\n      frame = context.frame = previewSupport.addFrame(shape, canvas.getActiveLayer());\n\n      canvas.addMarker(shape, MARKER_RESIZING);\n    }\n\n    if (bounds.width > 5) {\n      svgAttr(frame, { x: bounds.x, width: bounds.width });\n    }\n\n    if (bounds.height > 5) {\n      svgAttr(frame, { y: bounds.y, height: bounds.height });\n    }\n\n    if (context.canExecute) {\n      svgClasses(frame).remove(MARKER_RESIZE_NOT_OK);\n    } else {\n      svgClasses(frame).add(MARKER_RESIZE_NOT_OK);\n    }\n  }\n\n  /**\n   * Remove resizer frame.\n   *\n   * @param {Object} context\n   */\n  function removeFrame(context) {\n    var shape = context.shape,\n        frame = context.frame;\n\n    if (frame) {\n      svgRemove(context.frame);\n    }\n\n    canvas.removeMarker(shape, MARKER_RESIZING);\n  }\n\n  // add and update previews\n  eventBus.on('resize.move', LOW_PRIORITY, function(event) {\n    updateFrame(event.context);\n  });\n\n  // remove previews\n  eventBus.on('resize.cleanup', function(event) {\n    removeFrame(event.context);\n  });\n\n}\n\nResizePreview.$inject = [\n  'eventBus',\n  'canvas',\n  'previewSupport'\n];","import {\n  filter,\n  isNumber\n} from 'min-dash';\n\nvar max = Math.max,\n    min = Math.min;\n\nvar DEFAULT_CHILD_BOX_PADDING = 20;\n\nimport {\n  getBBox\n} from '../../util/Elements';\n\nimport {\n  asTRBL,\n  asBounds\n} from '../../layout/LayoutUtil';\n\n\n/**\n * Substract a TRBL from another\n *\n * @param  {TRBL} trblA\n * @param  {TRBL} trblB\n *\n * @return {TRBL}\n */\nexport function substractTRBL(trblA, trblB) {\n  return {\n    top: trblA.top - trblB.top,\n    right: trblA.right - trblB.right,\n    bottom: trblA.bottom - trblB.bottom,\n    left: trblA.left - trblB.left\n  };\n}\n\n/**\n * Resize the given bounds by the specified delta from a given anchor point.\n *\n * @param {Bounds} bounds the bounding box that should be resized\n * @param {string} direction in which the element is resized (nw, ne, se, sw)\n * @param {Point} delta of the resize operation\n *\n * @return {Bounds} resized bounding box\n */\nexport function resizeBounds(bounds, direction, delta) {\n  var dx = delta.x,\n      dy = delta.y;\n\n  var newBounds = {\n    x: bounds.x,\n    y: bounds.y,\n    width: bounds.width,\n    height: bounds.height\n  };\n\n  if (direction.indexOf('n') !== -1) {\n    newBounds.y = bounds.y + dy;\n    newBounds.height = bounds.height - dy;\n  } else if (direction.indexOf('s') !== -1) {\n    newBounds.height = bounds.height + dy;\n  }\n\n  if (direction.indexOf('e') !== -1) {\n    newBounds.width = bounds.width + dx;\n  } else if (direction.indexOf('w') !== -1) {\n    newBounds.x = bounds.x + dx;\n    newBounds.width = bounds.width - dx;\n  }\n\n  return newBounds;\n}\n\n\n/**\n * Resize the given bounds by applying the passed\n * { top, right, bottom, left } delta.\n *\n * @param {Bounds} bounds\n * @param {TRBL} trblResize\n *\n * @return {Bounds}\n */\nexport function resizeTRBL(bounds, resize) {\n  return {\n    x: bounds.x + (resize.left || 0),\n    y: bounds.y + (resize.top || 0),\n    width: bounds.width - (resize.left || 0) + (resize.right || 0),\n    height: bounds.height - (resize.top || 0) + (resize.bottom || 0)\n  };\n}\n\n\nexport function reattachPoint(bounds, newBounds, point) {\n\n  var sx = bounds.width / newBounds.width,\n      sy = bounds.height / newBounds.height;\n\n  return {\n    x: Math.round((newBounds.x + newBounds.width / 2)) - Math.floor(((bounds.x + bounds.width / 2) - point.x) / sx),\n    y: Math.round((newBounds.y + newBounds.height / 2)) - Math.floor(((bounds.y + bounds.height / 2) - point.y) / sy)\n  };\n}\n\n\nfunction applyConstraints(attr, trbl, resizeConstraints) {\n\n  var value = trbl[attr],\n      minValue = resizeConstraints.min && resizeConstraints.min[attr],\n      maxValue = resizeConstraints.max && resizeConstraints.max[attr];\n\n  if (isNumber(minValue)) {\n    value = (/top|left/.test(attr) ? min : max)(value, minValue);\n  }\n\n  if (isNumber(maxValue)) {\n    value = (/top|left/.test(attr) ? max : min)(value, maxValue);\n  }\n\n  return value;\n}\n\nexport function ensureConstraints(currentBounds, resizeConstraints) {\n\n  if (!resizeConstraints) {\n    return currentBounds;\n  }\n\n  var currentTrbl = asTRBL(currentBounds);\n\n  return asBounds({\n    top: applyConstraints('top', currentTrbl, resizeConstraints),\n    right: applyConstraints('right', currentTrbl, resizeConstraints),\n    bottom: applyConstraints('bottom', currentTrbl, resizeConstraints),\n    left: applyConstraints('left', currentTrbl, resizeConstraints)\n  });\n}\n\n\nexport function getMinResizeBounds(direction, currentBounds, minDimensions, childrenBounds) {\n\n  var currentBox = asTRBL(currentBounds);\n\n  var minBox = {\n    top: /n/.test(direction) ? currentBox.bottom - minDimensions.height : currentBox.top,\n    left: /w/.test(direction) ? currentBox.right - minDimensions.width : currentBox.left,\n    bottom: /s/.test(direction) ? currentBox.top + minDimensions.height : currentBox.bottom,\n    right: /e/.test(direction) ? currentBox.left + minDimensions.width : currentBox.right\n  };\n\n  var childrenBox = childrenBounds ? asTRBL(childrenBounds) : minBox;\n\n  var combinedBox = {\n    top: min(minBox.top, childrenBox.top),\n    left: min(minBox.left, childrenBox.left),\n    bottom: max(minBox.bottom, childrenBox.bottom),\n    right: max(minBox.right, childrenBox.right)\n  };\n\n  return asBounds(combinedBox);\n}\n\nfunction asPadding(mayBePadding, defaultValue) {\n  if (typeof mayBePadding !== 'undefined') {\n    return mayBePadding;\n  } else {\n    return DEFAULT_CHILD_BOX_PADDING;\n  }\n}\n\nexport function addPadding(bbox, padding) {\n  var left, right, top, bottom;\n\n  if (typeof padding === 'object') {\n    left = asPadding(padding.left);\n    right = asPadding(padding.right);\n    top = asPadding(padding.top);\n    bottom = asPadding(padding.bottom);\n  } else {\n    left = right = top = bottom = asPadding(padding);\n  }\n\n  return {\n    x: bbox.x - left,\n    y: bbox.y - top,\n    width: bbox.width + left + right,\n    height: bbox.height + top + bottom\n  };\n}\n\n\n/**\n * Is the given element part of the resize\n * targets min boundary box?\n *\n * This is the default implementation which excludes\n * connections and labels.\n *\n * @param {djs.model.Base} element\n */\nfunction isBBoxChild(element) {\n\n  // exclude connections\n  if (element.waypoints) {\n    return false;\n  }\n\n  // exclude labels\n  if (element.type === 'label') {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Return children bounding computed from a shapes children\n * or a list of prefiltered children.\n *\n * @param  {djs.model.Shape|Array<djs.model.Shape>} shapeOrChildren\n * @param  {number|Object} padding\n *\n * @return {Bounds}\n */\nexport function computeChildrenBBox(shapeOrChildren, padding) {\n\n  var elements;\n\n  // compute based on shape\n  if (shapeOrChildren.length === undefined) {\n\n    // grab all the children that are part of the\n    // parents children box\n    elements = filter(shapeOrChildren.children, isBBoxChild);\n\n  } else {\n    elements = shapeOrChildren;\n  }\n\n  if (elements.length) {\n    return addPadding(getBBox(elements), padding);\n  }\n}\n","import RulesModule from '../rules';\nimport DraggingModule from '../dragging';\nimport PreviewSupportModule from '../preview-support';\n\nimport Resize from './Resize';\nimport ResizePreview from './ResizePreview';\nimport ResizeHandles from './ResizeHandles';\n\nexport default {\n  __depends__: [\n    RulesModule,\n    DraggingModule,\n    PreviewSupportModule\n  ],\n  __init__: [\n    'resize',\n    'resizePreview',\n    'resizeHandles'\n  ],\n  resize: [ 'type', Resize ],\n  resizePreview: [ 'type', ResizePreview ],\n  resizeHandles: [ 'type', ResizeHandles ]\n};\n","import inherits from 'inherits';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\n\n/**\n * A modeling behavior that ensures we set the correct root element\n * as we undo and redo commands.\n *\n * @param {Canvas} canvas\n * @param {didi.Injector} injector\n */\nexport default function RootElementsBehavior(canvas, injector) {\n\n  injector.invoke(CommandInterceptor, this);\n\n  this.executed(function(event) {\n    var context = event.context;\n\n    if (context.rootElement) {\n      canvas.setRootElement(context.rootElement);\n    } else {\n      context.rootElement = canvas.getRootElement();\n    }\n  });\n\n  this.revert(function(event) {\n    var context = event.context;\n\n    if (context.rootElement) {\n      canvas.setRootElement(context.rootElement);\n    }\n  });\n}\n\ninherits(RootElementsBehavior, CommandInterceptor);\n\nRootElementsBehavior.$inject = [ 'canvas', 'injector' ];","import RootElementsBehavior from './RootElementsBehavior';\n\nexport default {\n  __init__: [ 'rootElementsBehavior' ],\n  rootElementsBehavior: [ 'type', RootElementsBehavior ]\n};\n","import inherits from 'inherits';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\n/**\n * A basic provider that may be extended to implement modeling rules.\n *\n * Extensions should implement the init method to actually add their custom\n * modeling checks. Checks may be added via the #addRule(action, fn) method.\n *\n * @param {EventBus} eventBus\n */\nexport default function RuleProvider(eventBus) {\n  CommandInterceptor.call(this, eventBus);\n\n  this.init();\n}\n\nRuleProvider.$inject = [ 'eventBus' ];\n\ninherits(RuleProvider, CommandInterceptor);\n\n\n/**\n * Adds a modeling rule for the given action, implemented through\n * a callback function.\n *\n * The function will receive the modeling specific action context\n * to perform its check. It must return `false` to disallow the\n * action from happening or `true` to allow the action.\n *\n * A rule provider may pass over the evaluation to lower priority\n * rules by returning return nothing (or <code>undefined</code>).\n *\n * @example\n *\n * ResizableRules.prototype.init = function() {\n *\n *   \\/**\n *    * Return `true`, `false` or nothing to denote\n *    * _allowed_, _not allowed_ and _continue evaluating_.\n *    *\\/\n *   this.addRule('shape.resize', function(context) {\n *\n *     var shape = context.shape;\n *\n *     if (!context.newBounds) {\n *       // check general resizability\n *       if (!shape.resizable) {\n *         return false;\n *       }\n *\n *       // not returning anything (read: undefined)\n *       // will continue the evaluation of other rules\n *       // (with lower priority)\n *       return;\n *     } else {\n *       // element must have minimum size of 10*10 points\n *       return context.newBounds.width > 10 && context.newBounds.height > 10;\n *     }\n *   });\n * };\n *\n * @param {string|Array<string>} actions the identifier for the modeling action to check\n * @param {number} [priority] the priority at which this rule is being applied\n * @param {Function} fn the callback function that performs the actual check\n */\nRuleProvider.prototype.addRule = function(actions, priority, fn) {\n\n  var self = this;\n\n  if (typeof actions === 'string') {\n    actions = [ actions ];\n  }\n\n  actions.forEach(function(action) {\n\n    self.canExecute(action, priority, function(context, action, event) {\n      return fn(context);\n    }, true);\n  });\n};\n\n/**\n * Implement this method to add new rules during provider initialization.\n */\nRuleProvider.prototype.init = function() {};","/**\n * A service that provides rules for certain diagram actions.\n *\n * The default implementation will hook into the {@link CommandStack}\n * to perform the actual rule evaluation. Make sure to provide the\n * `commandStack` service with this module if you plan to use it.\n *\n * Together with this implementation you may use the {@link RuleProvider}\n * to implement your own rule checkers.\n *\n * This module is ment to be easily replaced, thus the tiny foot print.\n *\n * @param {Injector} injector\n */\nexport default function Rules(injector) {\n  this._commandStack = injector.get('commandStack', false);\n}\n\nRules.$inject = [ 'injector' ];\n\n\n/**\n * Returns whether or not a given modeling action can be executed\n * in the specified context.\n *\n * This implementation will respond with allow unless anyone\n * objects.\n *\n * @param {string} action the action to be checked\n * @param {Object} [context] the context to check the action in\n *\n * @return {boolean} returns true, false or null depending on whether the\n *                   operation is allowed, not allowed or should be ignored.\n */\nRules.prototype.allowed = function(action, context) {\n  var allowed = true;\n\n  var commandStack = this._commandStack;\n\n  if (commandStack) {\n    allowed = commandStack.canExecute(action, context);\n  }\n\n  // map undefined to true, i.e. no rules\n  return allowed === undefined ? true : allowed;\n};","import Rules from './Rules';\n\nexport default {\n  __init__: [ 'rules' ],\n  rules: [ 'type', Rules ]\n};\n","import {\n  clear as domClear,\n  delegate as domDelegate,\n  query as domQuery,\n  classes as domClasses,\n  attr as domAttr,\n  domify as domify\n} from 'min-dom';\n\nimport {\n  getBBox as getBoundingBox\n} from '../../util/Elements';\n\nimport {\n  escapeHTML\n} from '../../util/EscapeUtil';\n\n/**\n * Provides searching infrastructure\n */\nexport default function SearchPad(canvas, eventBus, overlays, selection) {\n  this._open = false;\n  this._results = [];\n  this._eventMaps = [];\n\n  this._canvas = canvas;\n  this._eventBus = eventBus;\n  this._overlays = overlays;\n  this._selection = selection;\n\n  // setup elements\n  this._container = domify(SearchPad.BOX_HTML);\n  this._searchInput = domQuery(SearchPad.INPUT_SELECTOR, this._container);\n  this._resultsContainer = domQuery(SearchPad.RESULTS_CONTAINER_SELECTOR, this._container);\n\n  // attach search pad\n  this._canvas.getContainer().appendChild(this._container);\n\n  // cleanup on destroy\n  eventBus.on([ 'canvas.destroy', 'diagram.destroy' ], this.close, this);\n}\n\n\nSearchPad.$inject = [\n  'canvas',\n  'eventBus',\n  'overlays',\n  'selection'\n];\n\n\n/**\n * Binds and keeps track of all event listereners\n */\nSearchPad.prototype._bindEvents = function() {\n  var self = this;\n\n  function listen(el, selector, type, fn) {\n    self._eventMaps.push({\n      el: el,\n      type: type,\n      listener: domDelegate.bind(el, selector, type, fn)\n    });\n  }\n\n  // close search on clicking anywhere outside\n  listen(document, 'html', 'click', function(e) {\n    self.close();\n  });\n\n  // stop event from propagating and closing search\n  // focus on input\n  listen(this._container, SearchPad.INPUT_SELECTOR, 'click', function(e) {\n    e.stopPropagation();\n    e.delegateTarget.focus();\n  });\n\n  // preselect result on hover\n  listen(this._container, SearchPad.RESULT_SELECTOR, 'mouseover', function(e) {\n    e.stopPropagation();\n    self._scrollToNode(e.delegateTarget);\n    self._preselect(e.delegateTarget);\n  });\n\n  // selects desired result on mouse click\n  listen(this._container, SearchPad.RESULT_SELECTOR, 'click', function(e) {\n    e.stopPropagation();\n    self._select(e.delegateTarget);\n  });\n\n  // prevent cursor in input from going left and right when using up/down to\n  // navigate results\n  listen(this._container, SearchPad.INPUT_SELECTOR, 'keydown', function(e) {\n\n    // up\n    if (e.keyCode === 38) {\n      e.preventDefault();\n    }\n\n    // down\n    if (e.keyCode === 40) {\n      e.preventDefault();\n    }\n  });\n\n  // handle keyboard input\n  listen(this._container, SearchPad.INPUT_SELECTOR, 'keyup', function(e) {\n\n    // escape\n    if (e.keyCode === 27) {\n      return self.close();\n    }\n\n    // enter\n    if (e.keyCode === 13) {\n      var selected = self._getCurrentResult();\n\n      return selected ? self._select(selected) : self.close();\n    }\n\n    // up\n    if (e.keyCode === 38) {\n      return self._scrollToDirection(true);\n    }\n\n    // down\n    if (e.keyCode === 40) {\n      return self._scrollToDirection();\n    }\n\n    // left && right\n    // do not search while navigating text input\n    if (e.keyCode === 37 || e.keyCode === 39) {\n      return;\n    }\n\n    // anything else\n    self._search(e.delegateTarget.value);\n  });\n};\n\n\n/**\n * Unbinds all previously established listeners\n */\nSearchPad.prototype._unbindEvents = function() {\n  this._eventMaps.forEach(function(m) {\n    domDelegate.unbind(m.el, m.type, m.listener);\n  });\n};\n\n\n/**\n * Performs a search for the given pattern.\n *\n * @param  {string} pattern\n */\nSearchPad.prototype._search = function(pattern) {\n  var self = this;\n\n  this._clearResults();\n\n  // do not search on empty query\n  if (!pattern || pattern === '') {\n    return;\n  }\n\n  var searchResults = this._searchProvider.find(pattern);\n\n  if (!searchResults.length) {\n    return;\n  }\n\n  // append new results\n  searchResults.forEach(function(result) {\n    var id = result.element.id;\n    var node = self._createResultNode(result, id);\n    self._results[id] = {\n      element: result.element,\n      node: node\n    };\n  });\n\n  // preselect first result\n  var node = domQuery(SearchPad.RESULT_SELECTOR, this._resultsContainer);\n  this._scrollToNode(node);\n  this._preselect(node);\n};\n\n\n/**\n * Navigate to the previous/next result. Defaults to next result.\n * @param  {boolean} previous\n */\nSearchPad.prototype._scrollToDirection = function(previous) {\n  var selected = this._getCurrentResult();\n  if (!selected) {\n    return;\n  }\n\n  var node = previous ? selected.previousElementSibling : selected.nextElementSibling;\n  if (node) {\n    this._scrollToNode(node);\n    this._preselect(node);\n  }\n};\n\n\n/**\n * Scroll to the node if it is not visible.\n *\n * @param  {Element} node\n */\nSearchPad.prototype._scrollToNode = function(node) {\n  if (!node || node === this._getCurrentResult()) {\n    return;\n  }\n\n  var nodeOffset = node.offsetTop;\n  var containerScroll = this._resultsContainer.scrollTop;\n\n  var bottomScroll = nodeOffset - this._resultsContainer.clientHeight + node.clientHeight;\n\n  if (nodeOffset < containerScroll) {\n    this._resultsContainer.scrollTop = nodeOffset;\n  } else if (containerScroll < bottomScroll) {\n    this._resultsContainer.scrollTop = bottomScroll;\n  }\n};\n\n\n/**\n * Clears all results data.\n */\nSearchPad.prototype._clearResults = function() {\n  domClear(this._resultsContainer);\n\n  this._results = [];\n\n  this._resetOverlay();\n\n  this._eventBus.fire('searchPad.cleared');\n};\n\n\n/**\n * Get currently selected result.\n *\n * @return {Element}\n */\nSearchPad.prototype._getCurrentResult = function() {\n  return domQuery(SearchPad.RESULT_SELECTED_SELECTOR, this._resultsContainer);\n};\n\n\n/**\n * Create result DOM element within results container\n * that corresponds to a search result.\n *\n * 'result' : one of the elements returned by SearchProvider\n * 'id' : id attribute value to assign to the new DOM node\n * return : created DOM element\n *\n * @param  {SearchResult} result\n * @param  {string} id\n * @return {Element}\n */\nSearchPad.prototype._createResultNode = function(result, id) {\n  var node = domify(SearchPad.RESULT_HTML);\n\n  // create only if available\n  if (result.primaryTokens.length > 0) {\n    createInnerTextNode(node, result.primaryTokens, SearchPad.RESULT_PRIMARY_HTML);\n  }\n\n  // secondary tokens (represent element ID) are allways available\n  createInnerTextNode(node, result.secondaryTokens, SearchPad.RESULT_SECONDARY_HTML);\n\n  domAttr(node, SearchPad.RESULT_ID_ATTRIBUTE, id);\n\n  this._resultsContainer.appendChild(node);\n\n  return node;\n};\n\n\n/**\n * Register search element provider.\n *\n * SearchProvider.find - provides search function over own elements\n *  (pattern) => [{ text: <String>, element: <Element>}, ...]\n *\n * @param  {SearchProvider} provider\n */\nSearchPad.prototype.registerProvider = function(provider) {\n  this._searchProvider = provider;\n};\n\n\n/**\n * Open search pad.\n */\nSearchPad.prototype.open = function() {\n  if (!this._searchProvider) {\n    throw new Error('no search provider registered');\n  }\n\n  if (this.isOpen()) {\n    return;\n  }\n\n  this._bindEvents();\n\n  this._open = true;\n\n  domClasses(this._container).add('open');\n\n  this._searchInput.focus();\n\n  this._eventBus.fire('searchPad.opened');\n};\n\n\n/**\n * Close search pad.\n */\nSearchPad.prototype.close = function() {\n  if (!this.isOpen()) {\n    return;\n  }\n\n  this._unbindEvents();\n\n  this._open = false;\n\n  domClasses(this._container).remove('open');\n\n  this._clearResults();\n\n  this._searchInput.value = '';\n  this._searchInput.blur();\n\n  this._resetOverlay();\n\n  this._eventBus.fire('searchPad.closed');\n};\n\n\n/**\n * Toggles search pad on/off.\n */\nSearchPad.prototype.toggle = function() {\n  this.isOpen() ? this.close() : this.open();\n};\n\n\n/**\n * Report state of search pad.\n */\nSearchPad.prototype.isOpen = function() {\n  return this._open;\n};\n\n\n/**\n * Preselect result entry.\n *\n * @param  {Element} element\n */\nSearchPad.prototype._preselect = function(node) {\n  var selectedNode = this._getCurrentResult();\n\n  // already selected\n  if (node === selectedNode) {\n    return;\n  }\n\n  // removing preselection from current node\n  if (selectedNode) {\n    domClasses(selectedNode).remove(SearchPad.RESULT_SELECTED_CLASS);\n  }\n\n  var id = domAttr(node, SearchPad.RESULT_ID_ATTRIBUTE);\n  var element = this._results[id].element;\n\n  domClasses(node).add(SearchPad.RESULT_SELECTED_CLASS);\n\n  this._resetOverlay(element);\n\n  this._canvas.scrollToElement(element, { top: 400 });\n\n  this._selection.select(element);\n\n  this._eventBus.fire('searchPad.preselected', element);\n};\n\n\n/**\n * Select result node.\n *\n * @param  {Element} element\n */\nSearchPad.prototype._select = function(node) {\n  var id = domAttr(node, SearchPad.RESULT_ID_ATTRIBUTE);\n  var element = this._results[id].element;\n\n  this.close();\n\n  this._resetOverlay();\n\n  this._canvas.scrollToElement(element, { top: 400 });\n\n  this._selection.select(element);\n\n  this._eventBus.fire('searchPad.selected', element);\n};\n\n\n/**\n * Reset overlay removes and, optionally, set\n * overlay to a new element.\n *\n * @param  {Element} element\n */\nSearchPad.prototype._resetOverlay = function(element) {\n  if (this._overlayId) {\n    this._overlays.remove(this._overlayId);\n  }\n\n  if (element) {\n    var box = getBoundingBox(element);\n    var overlay = constructOverlay(box);\n    this._overlayId = this._overlays.add(element, overlay);\n  }\n};\n\n\n/**\n * Construct overlay object for the given bounding box.\n *\n * @param  {BoundingBox} box\n * @return {Object}\n */\nfunction constructOverlay(box) {\n\n  var offset = 6;\n  var w = box.width + offset * 2;\n  var h = box.height + offset * 2;\n\n  var styles = [\n    'width: ' + w + 'px',\n    'height: ' + h + 'px'\n  ].join('; ');\n\n  return {\n    position: {\n      bottom: h - offset,\n      right: w - offset\n    },\n    show: true,\n    html: '<div style=\"' + styles + '\" class=\"' + SearchPad.OVERLAY_CLASS + '\"></div>'\n  };\n}\n\n\n/**\n * Creates and appends child node from result tokens and HTML template.\n *\n * @param  {Element} node\n * @param  {Array<Object>} tokens\n * @param  {string} template\n */\nfunction createInnerTextNode(parentNode, tokens, template) {\n  var text = createHtmlText(tokens);\n  var childNode = domify(template);\n  childNode.innerHTML = text;\n  parentNode.appendChild(childNode);\n}\n\n/**\n * Create internal HTML markup from result tokens.\n * Caters for highlighting pattern matched tokens.\n *\n * @param  {Array<Object>} tokens\n * @return {string}\n */\nfunction createHtmlText(tokens) {\n  var htmlText = '';\n\n  tokens.forEach(function(t) {\n    if (t.matched) {\n      htmlText += '<strong class=\"' + SearchPad.RESULT_HIGHLIGHT_CLASS + '\">' + escapeHTML(t.matched) + '</strong>';\n    } else {\n      htmlText += escapeHTML(t.normal);\n    }\n  });\n\n  return htmlText !== '' ? htmlText : null;\n}\n\n\n/**\n * CONSTANTS\n */\nSearchPad.CONTAINER_SELECTOR = '.djs-search-container';\nSearchPad.INPUT_SELECTOR = '.djs-search-input input';\nSearchPad.RESULTS_CONTAINER_SELECTOR = '.djs-search-results';\nSearchPad.RESULT_SELECTOR = '.djs-search-result';\nSearchPad.RESULT_SELECTED_CLASS = 'djs-search-result-selected';\nSearchPad.RESULT_SELECTED_SELECTOR = '.' + SearchPad.RESULT_SELECTED_CLASS;\nSearchPad.RESULT_ID_ATTRIBUTE = 'data-result-id';\nSearchPad.RESULT_HIGHLIGHT_CLASS = 'djs-search-highlight';\nSearchPad.OVERLAY_CLASS = 'djs-search-overlay';\n\nSearchPad.BOX_HTML =\n  '<div class=\"djs-search-container djs-draggable djs-scrollable\">' +\n    '<div class=\"djs-search-input\">' +\n      '<input type=\"text\"/>' +\n    '</div>' +\n    '<div class=\"djs-search-results\"></div>' +\n  '</div>';\n\nSearchPad.RESULT_HTML =\n  '<div class=\"djs-search-result\"></div>';\n\nSearchPad.RESULT_PRIMARY_HTML =\n  '<div class=\"djs-search-result-primary\"></div>';\n\nSearchPad.RESULT_SECONDARY_HTML =\n  '<p class=\"djs-search-result-secondary\"></p>';\n","import OverlaysModule from '../overlays';\nimport SelectionModule from '../selection';\n\nimport SearchPad from './SearchPad';\n\nexport default {\n  __depends__: [\n    OverlaysModule,\n    SelectionModule\n  ],\n  searchPad: [ 'type', SearchPad ]\n};\n","import {\n  isArray,\n  forEach\n} from 'min-dash';\n\n\n/**\n * A service that offers the current selection in a diagram.\n * Offers the api to control the selection, too.\n *\n * @class\n *\n * @param {EventBus} eventBus the event bus\n */\nexport default function Selection(eventBus, canvas) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n\n  this._selectedElements = [];\n\n  var self = this;\n\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\n    var element = e.element;\n    self.deselect(element);\n  });\n\n  eventBus.on([ 'diagram.clear', 'root.set' ], function(e) {\n    self.select(null);\n  });\n}\n\nSelection.$inject = [ 'eventBus', 'canvas' ];\n\n\nSelection.prototype.deselect = function(element) {\n  var selectedElements = this._selectedElements;\n\n  var idx = selectedElements.indexOf(element);\n\n  if (idx !== -1) {\n    var oldSelection = selectedElements.slice();\n\n    selectedElements.splice(idx, 1);\n\n    this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\n  }\n};\n\n\nSelection.prototype.get = function() {\n  return this._selectedElements;\n};\n\nSelection.prototype.isSelected = function(element) {\n  return this._selectedElements.indexOf(element) !== -1;\n};\n\n\n/**\n * This method selects one or more elements on the diagram.\n *\n * By passing an additional add parameter you can decide whether or not the element(s)\n * should be added to the already existing selection or not.\n *\n * @method Selection#select\n *\n * @param  {Object|Object[]} elements element or array of elements to be selected\n * @param  {boolean} [add] whether the element(s) should be appended to the current selection, defaults to false\n */\nSelection.prototype.select = function(elements, add) {\n  var selectedElements = this._selectedElements,\n      oldSelection = selectedElements.slice();\n\n  if (!isArray(elements)) {\n    elements = elements ? [ elements ] : [];\n  }\n\n  var canvas = this._canvas;\n\n  var rootElement = canvas.getRootElement();\n\n  elements = elements.filter(function(element) {\n    var elementRoot = canvas.findRoot(element);\n\n    return rootElement === elementRoot;\n  });\n\n  // selection may be cleared by passing an empty array or null\n  // to the method\n  if (add) {\n    forEach(elements, function(element) {\n      if (selectedElements.indexOf(element) !== -1) {\n\n        // already selected\n        return;\n      } else {\n        selectedElements.push(element);\n      }\n    });\n  } else {\n    this._selectedElements = selectedElements = elements.slice();\n  }\n\n  this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\n};\n","import {\n  hasPrimaryModifier,\n  hasSecondaryModifier,\n  isPrimaryButton\n} from '../../util/Mouse';\n\nimport {\n  find,\n  isArray\n} from 'min-dash';\n\n\nexport default function SelectionBehavior(eventBus, selection, canvas, elementRegistry) {\n\n  // Select elements on create\n  eventBus.on('create.end', 500, function(event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        elements = context.elements,\n        hints = context.hints || {},\n        autoSelect = hints.autoSelect;\n\n    if (canExecute) {\n      if (autoSelect === false) {\n\n        // Select no elements\n        return;\n      }\n\n      if (isArray(autoSelect)) {\n        selection.select(autoSelect);\n      } else {\n\n        // Select all elements by default\n        selection.select(elements.filter(isShown));\n      }\n    }\n  });\n\n  // Select connection targets on connect\n  eventBus.on('connect.end', 500, function(event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        hover = context.hover;\n\n    if (canExecute && hover) {\n      selection.select(hover);\n    }\n  });\n\n  // Select shapes on move\n  eventBus.on('shape.move.end', 500, function(event) {\n    var previousSelection = event.previousSelection || [];\n\n    var shape = elementRegistry.get(event.context.shape.id);\n\n    // Always select main shape on move\n    var isSelected = find(previousSelection, function(selectedShape) {\n      return shape.id === selectedShape.id;\n    });\n\n    if (!isSelected) {\n      selection.select(shape);\n    }\n  });\n\n  // Select elements on click\n  eventBus.on('element.click', function(event) {\n\n    if (!isPrimaryButton(event)) {\n      return;\n    }\n\n    var element = event.element;\n\n    if (element === canvas.getRootElement()) {\n      element = null;\n    }\n\n    var isSelected = selection.isSelected(element),\n        isMultiSelect = selection.get().length > 1;\n\n    // Add to selection if CTRL or SHIFT pressed\n    var add = hasPrimaryModifier(event) || hasSecondaryModifier(event);\n\n    if (isSelected && isMultiSelect) {\n      if (add) {\n\n        // Deselect element\n        return selection.deselect(element);\n      } else {\n\n        // Select element only\n        return selection.select(element);\n      }\n    } else if (!isSelected) {\n\n      // Select element\n      selection.select(element, add);\n    } else {\n\n      // Deselect element\n      selection.deselect(element);\n    }\n  });\n}\n\nSelectionBehavior.$inject = [\n  'eventBus',\n  'selection',\n  'canvas',\n  'elementRegistry'\n];\n\n\nfunction isShown(element) {\n  return !element.hidden;\n}\n","import {\n  forEach\n} from 'min-dash';\n\nvar MARKER_HOVER = 'hover',\n    MARKER_SELECTED = 'selected';\n\n\n/**\n * A plugin that adds a visible selection UI to shapes and connections\n * by appending the <code>hover</code> and <code>selected</code> classes to them.\n *\n * @class\n *\n * Makes elements selectable, too.\n *\n * @param {EventBus} events\n * @param {SelectionService} selection\n * @param {Canvas} canvas\n */\nexport default function SelectionVisuals(events, canvas, selection, styles) {\n\n  this._multiSelectionBox = null;\n\n  function addMarker(e, cls) {\n    canvas.addMarker(e, cls);\n  }\n\n  function removeMarker(e, cls) {\n    canvas.removeMarker(e, cls);\n  }\n\n  events.on('element.hover', function(event) {\n    addMarker(event.element, MARKER_HOVER);\n  });\n\n  events.on('element.out', function(event) {\n    removeMarker(event.element, MARKER_HOVER);\n  });\n\n  events.on('selection.changed', function(event) {\n\n    function deselect(s) {\n      removeMarker(s, MARKER_SELECTED);\n    }\n\n    function select(s) {\n      addMarker(s, MARKER_SELECTED);\n    }\n\n    var oldSelection = event.oldSelection,\n        newSelection = event.newSelection;\n\n    forEach(oldSelection, function(e) {\n      if (newSelection.indexOf(e) === -1) {\n        deselect(e);\n      }\n    });\n\n    forEach(newSelection, function(e) {\n      if (oldSelection.indexOf(e) === -1) {\n        select(e);\n      }\n    });\n  });\n}\n\nSelectionVisuals.$inject = [\n  'eventBus',\n  'canvas',\n  'selection',\n  'styles'\n];","import InteractionEventsModule from '../interaction-events';\nimport OutlineModule from '../outline';\n\nimport Selection from './Selection';\nimport SelectionVisuals from './SelectionVisuals';\nimport SelectionBehavior from './SelectionBehavior';\n\n\nexport default {\n  __init__: [ 'selectionVisuals', 'selectionBehavior' ],\n  __depends__: [\n    InteractionEventsModule,\n    OutlineModule\n  ],\n  selection: [ 'type', Selection ],\n  selectionVisuals: [ 'type', SelectionVisuals ],\n  selectionBehavior: [ 'type', SelectionBehavior ]\n};\n","import SnapContext from './SnapContext';\r\n\r\nimport {\r\n  getChildren,\r\n  isSnapped,\r\n  mid\r\n} from './SnapUtil';\r\n\r\nimport { isCmd } from '../keyboard/KeyboardUtil';\r\n\r\nimport {\r\n  forEach,\r\n  isNumber\r\n} from 'min-dash';\r\n\r\nvar HIGHER_PRIORITY = 1250;\r\n\r\n\r\n/**\r\n * Snap during create and move.\r\n *\r\n * @param {EventBus} elementRegistry\r\n * @param {EventBus} eventBus\r\n * @param {Snapping} snapping\r\n */\r\nexport default function CreateMoveSnapping(elementRegistry, eventBus, snapping) {\r\n  var self = this;\r\n\r\n  this._elementRegistry = elementRegistry;\r\n\r\n  eventBus.on([\r\n    'create.start',\r\n    'shape.move.start'\r\n  ], function(event) {\r\n    self.initSnap(event);\r\n  });\r\n\r\n  eventBus.on([\r\n    'create.move',\r\n    'create.end',\r\n    'shape.move.move',\r\n    'shape.move.end'\r\n  ], HIGHER_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        snapContext = context.snapContext,\r\n        target = context.target;\r\n\r\n    if (event.originalEvent && isCmd(event.originalEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (isSnapped(event) || !target) {\r\n      return;\r\n    }\r\n\r\n    var snapPoints = snapContext.pointsForTarget(target);\r\n\r\n    if (!snapPoints.initialized) {\r\n      snapPoints = self.addSnapTargetPoints(snapPoints, shape, target);\r\n\r\n      snapPoints.initialized = true;\r\n    }\r\n\r\n    snapping.snap(event, snapPoints);\r\n  });\r\n\r\n  eventBus.on([\r\n    'create.cleanup',\r\n    'shape.move.cleanup'\r\n  ], function() {\r\n    snapping.hide();\r\n  });\r\n}\r\n\r\nCreateMoveSnapping.$inject = [\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'snapping'\r\n];\r\n\r\nCreateMoveSnapping.prototype.initSnap = function(event) {\r\n  var elementRegistry = this._elementRegistry;\r\n\r\n  var context = event.context,\r\n      shape = context.shape,\r\n      snapContext = context.snapContext;\r\n\r\n  if (!snapContext) {\r\n    snapContext = context.snapContext = new SnapContext();\r\n  }\r\n\r\n  var shapeMid;\r\n\r\n  if (elementRegistry.get(shape.id)) {\r\n\r\n    // move\r\n    shapeMid = mid(shape, event);\r\n  } else {\r\n\r\n    // create\r\n    shapeMid = {\r\n      x: event.x + mid(shape).x,\r\n      y: event.y + mid(shape).y\r\n    };\r\n  }\r\n\r\n  var shapeTopLeft = {\r\n        x: shapeMid.x - shape.width / 2,\r\n        y: shapeMid.y - shape.height / 2\r\n      },\r\n      shapeBottomRight = {\r\n        x: shapeMid.x + shape.width / 2,\r\n        y: shapeMid.y + shape.height / 2\r\n      };\r\n\r\n  snapContext.setSnapOrigin('mid', {\r\n    x: shapeMid.x - event.x,\r\n    y: shapeMid.y - event.y\r\n  });\r\n\r\n  // snap labels to mid only\r\n  if (isLabel(shape)) {\r\n    return snapContext;\r\n  }\r\n\r\n  snapContext.setSnapOrigin('top-left', {\r\n    x: shapeTopLeft.x - event.x,\r\n    y: shapeTopLeft.y - event.y\r\n  });\r\n\r\n  snapContext.setSnapOrigin('bottom-right', {\r\n    x: shapeBottomRight.x - event.x,\r\n    y: shapeBottomRight.y - event.y\r\n  });\r\n\r\n  return snapContext;\r\n};\r\n\r\nCreateMoveSnapping.prototype.addSnapTargetPoints = function(snapPoints, shape, target) {\r\n  var snapTargets = this.getSnapTargets(shape, target);\r\n\r\n  forEach(snapTargets, function(snapTarget) {\r\n\r\n    // handle labels\r\n    if (isLabel(snapTarget)) {\r\n\r\n      if (isLabel(shape)) {\r\n        snapPoints.add('mid', mid(snapTarget));\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // handle connections\r\n    if (isConnection(snapTarget)) {\r\n\r\n      // ignore single segment connections\r\n      if (snapTarget.waypoints.length < 3) {\r\n        return;\r\n      }\r\n\r\n      // ignore first and last waypoint\r\n      var waypoints = snapTarget.waypoints.slice(1, -1);\r\n\r\n      forEach(waypoints, function(waypoint) {\r\n        snapPoints.add('mid', waypoint);\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    // handle shapes\r\n    snapPoints.add('mid', mid(snapTarget));\r\n  });\r\n\r\n  if (!isNumber(shape.x) || !isNumber(shape.y)) {\r\n    return snapPoints;\r\n  }\r\n\r\n  // snap to original position when moving\r\n  if (this._elementRegistry.get(shape.id)) {\r\n    snapPoints.add('mid', mid(shape));\r\n  }\r\n\r\n  return snapPoints;\r\n};\r\n\r\nCreateMoveSnapping.prototype.getSnapTargets = function(shape, target) {\r\n  return getChildren(target).filter(function(child) {\r\n    return !isHidden(child);\r\n  });\r\n};\r\n\r\n// helpers //////////\r\n\r\nfunction isConnection(element) {\r\n  return !!element.waypoints;\r\n}\r\n\r\nfunction isHidden(element) {\r\n  return !!element.hidden;\r\n}\r\n\r\nfunction isLabel(element) {\r\n  return !!element.labelTarget;\r\n}","import SnapContext from './SnapContext';\r\n\r\nimport {\r\n  bottomRight,\r\n  getChildren,\r\n  isSnapped,\r\n  setSnapped,\r\n  topLeft,\r\n} from './SnapUtil';\r\n\r\nimport { isCmd } from '../keyboard/KeyboardUtil';\r\n\r\nimport {\r\n  asTRBL,\r\n  getMid\r\n} from '../../layout/LayoutUtil';\r\n\r\nimport { forEach } from 'min-dash';\r\n\r\nvar HIGHER_PRIORITY = 1250;\r\n\r\n\r\n/**\r\n * Snap during resize.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Snapping} snapping\r\n */\r\nexport default function ResizeSnapping(eventBus, snapping) {\r\n  var self = this;\r\n\r\n  eventBus.on([ 'resize.start' ], function(event) {\r\n    self.initSnap(event);\r\n  });\r\n\r\n  eventBus.on([\r\n    'resize.move',\r\n    'resize.end',\r\n  ], HIGHER_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        parent = shape.parent,\r\n        direction = context.direction,\r\n        snapContext = context.snapContext;\r\n\r\n    if (event.originalEvent && isCmd(event.originalEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (isSnapped(event)) {\r\n      return;\r\n    }\r\n\r\n    var snapPoints = snapContext.pointsForTarget(parent);\r\n\r\n    if (!snapPoints.initialized) {\r\n      snapPoints = self.addSnapTargetPoints(snapPoints, shape, parent, direction);\r\n\r\n      snapPoints.initialized = true;\r\n    }\r\n\r\n    if (isHorizontal(direction)) {\r\n      setSnapped(event, 'x', event.x);\r\n    }\r\n\r\n    if (isVertical(direction)) {\r\n      setSnapped(event, 'y', event.y);\r\n    }\r\n\r\n    snapping.snap(event, snapPoints);\r\n  });\r\n\r\n  eventBus.on([ 'resize.cleanup' ], function() {\r\n    snapping.hide();\r\n  });\r\n}\r\n\r\nResizeSnapping.prototype.initSnap = function(event) {\r\n  var context = event.context,\r\n      shape = context.shape,\r\n      direction = context.direction,\r\n      snapContext = context.snapContext;\r\n\r\n  if (!snapContext) {\r\n    snapContext = context.snapContext = new SnapContext();\r\n  }\r\n\r\n  var snapOrigin = getSnapOrigin(shape, direction);\r\n\r\n  snapContext.setSnapOrigin('corner', {\r\n    x: snapOrigin.x - event.x,\r\n    y: snapOrigin.y - event.y\r\n  });\r\n\r\n  return snapContext;\r\n};\r\n\r\nResizeSnapping.prototype.addSnapTargetPoints = function(snapPoints, shape, target, direction) {\r\n  var snapTargets = this.getSnapTargets(shape, target);\r\n\r\n  forEach(snapTargets, function(snapTarget) {\r\n    snapPoints.add('corner', bottomRight(snapTarget));\r\n    snapPoints.add('corner', topLeft(snapTarget));\r\n  });\r\n\r\n  snapPoints.add('corner', getSnapOrigin(shape, direction));\r\n\r\n  return snapPoints;\r\n};\r\n\r\nResizeSnapping.$inject = [\r\n  'eventBus',\r\n  'snapping'\r\n];\r\n\r\nResizeSnapping.prototype.getSnapTargets = function(shape, target) {\r\n  return getChildren(target).filter(function(child) {\r\n    return !isAttached(child, shape)\r\n      && !isConnection(child)\r\n      && !isHidden(child)\r\n      && !isLabel(child);\r\n  });\r\n};\r\n\r\n// helpers //////////\r\n\r\nfunction getSnapOrigin(shape, direction) {\r\n  var mid = getMid(shape),\r\n      trbl = asTRBL(shape);\r\n\r\n  var snapOrigin = {\r\n    x: mid.x,\r\n    y: mid.y\r\n  };\r\n\r\n  if (direction.indexOf('n') !== -1) {\r\n    snapOrigin.y = trbl.top;\r\n  } else if (direction.indexOf('s') !== -1) {\r\n    snapOrigin.y = trbl.bottom;\r\n  }\r\n\r\n  if (direction.indexOf('e') !== -1) {\r\n    snapOrigin.x = trbl.right;\r\n  } else if (direction.indexOf('w') !== -1) {\r\n    snapOrigin.x = trbl.left;\r\n  }\r\n\r\n  return snapOrigin;\r\n}\r\n\r\nfunction isAttached(element, host) {\r\n  return element.host === host;\r\n}\r\n\r\nfunction isConnection(element) {\r\n  return !!element.waypoints;\r\n}\r\n\r\nfunction isHidden(element) {\r\n  return !!element.hidden;\r\n}\r\n\r\nfunction isLabel(element) {\r\n  return !!element.labelTarget;\r\n}\r\n\r\nfunction isHorizontal(direction) {\r\n  return direction === 'n' || direction === 's';\r\n}\r\n\r\nfunction isVertical(direction) {\r\n  return direction === 'e' || direction === 'w';\r\n}","import {\n  forEach\n} from 'min-dash';\n\nimport {\n  snapTo\n} from './SnapUtil';\n\n\n/**\n * A snap context, containing the (possibly incomplete)\n * mappings of drop targets (to identify the snapping)\n * to computed snap points.\n */\nexport default function SnapContext() {\n\n  /**\n   * Map<String, SnapPoints> mapping drop targets to\n   * a list of possible snappings.\n   *\n   * @type {Object}\n   */\n  this._targets = {};\n\n  /**\n   * Map<String, Point> initial positioning of element\n   * regarding various snap directions.\n   *\n   * @type {Object}\n   */\n  this._snapOrigins = {};\n\n  /**\n   * List of snap locations\n   *\n   * @type {Array<string>}\n   */\n  this._snapLocations = [];\n\n  /**\n   * Map<String, Array<Point>> of default snapping locations\n   *\n   * @type {Object}\n   */\n  this._defaultSnaps = {};\n}\n\n\nSnapContext.prototype.getSnapOrigin = function(snapLocation) {\n  return this._snapOrigins[snapLocation];\n};\n\n\nSnapContext.prototype.setSnapOrigin = function(snapLocation, initialValue) {\n  this._snapOrigins[snapLocation] = initialValue;\n\n  if (this._snapLocations.indexOf(snapLocation) === -1) {\n    this._snapLocations.push(snapLocation);\n  }\n};\n\n\nSnapContext.prototype.addDefaultSnap = function(type, point) {\n\n  var snapValues = this._defaultSnaps[type];\n\n  if (!snapValues) {\n    snapValues = this._defaultSnaps[type] = [];\n  }\n\n  snapValues.push(point);\n};\n\n/**\n * Return a number of initialized snaps, i.e. snap locations such as\n * top-left, mid, bottom-right and so forth.\n *\n * @return {Array<string>} snapLocations\n */\nSnapContext.prototype.getSnapLocations = function() {\n  return this._snapLocations;\n};\n\n/**\n * Set the snap locations for this context.\n *\n * The order of locations determines precedence.\n *\n * @param {Array<string>} snapLocations\n */\nSnapContext.prototype.setSnapLocations = function(snapLocations) {\n  this._snapLocations = snapLocations;\n};\n\n/**\n * Get snap points for a given target\n *\n * @param {Element|string} target\n */\nSnapContext.prototype.pointsForTarget = function(target) {\n\n  var targetId = target.id || target;\n\n  var snapPoints = this._targets[targetId];\n\n  if (!snapPoints) {\n    snapPoints = this._targets[targetId] = new SnapPoints();\n    snapPoints.initDefaults(this._defaultSnaps);\n  }\n\n  return snapPoints;\n};\n\n\n/**\n * Creates the snap points and initializes them with the\n * given default values.\n *\n * @param {Object<string, Array<Point>>} [defaultPoints]\n */\nexport function SnapPoints(defaultSnaps) {\n\n  /**\n   * Map<String, Map<(x|y), Array<number>>> mapping snap locations,\n   * i.e. top-left, bottom-right, center to actual snap values.\n   *\n   * @type {Object}\n   */\n  this._snapValues = {};\n}\n\nSnapPoints.prototype.add = function(snapLocation, point) {\n\n  var snapValues = this._snapValues[snapLocation];\n\n  if (!snapValues) {\n    snapValues = this._snapValues[snapLocation] = { x: [], y: [] };\n  }\n\n  if (snapValues.x.indexOf(point.x) === -1) {\n    snapValues.x.push(point.x);\n  }\n\n  if (snapValues.y.indexOf(point.y) === -1) {\n    snapValues.y.push(point.y);\n  }\n};\n\n\nSnapPoints.prototype.snap = function(point, snapLocation, axis, tolerance) {\n  var snappingValues = this._snapValues[snapLocation];\n\n  return snappingValues && snapTo(point[axis], snappingValues[axis], tolerance);\n};\n\n/**\n * Initialize a number of default snapping points.\n *\n * @param  {Object} defaultSnaps\n */\nSnapPoints.prototype.initDefaults = function(defaultSnaps) {\n\n  var self = this;\n\n  forEach(defaultSnaps || {}, function(snapPoints, snapLocation) {\n    forEach(snapPoints, function(point) {\n      self.add(snapLocation, point);\n    });\n  });\n};","var abs = Math.abs,\n    round = Math.round;\n\n\n/**\n * Snap value to a collection of reference values.\n *\n * @param  {number} value\n * @param  {Array<number>} values\n * @param  {number} [tolerance=10]\n *\n * @return {number} the value we snapped to or null, if none snapped\n */\nexport function snapTo(value, values, tolerance) {\n  tolerance = tolerance === undefined ? 10 : tolerance;\n\n  var idx, snapValue;\n\n  for (idx = 0; idx < values.length; idx++) {\n    snapValue = values[idx];\n\n    if (abs(snapValue - value) <= tolerance) {\n      return snapValue;\n    }\n  }\n}\n\n\nexport function topLeft(bounds) {\n  return {\n    x: bounds.x,\n    y: bounds.y\n  };\n}\n\nexport function topRight(bounds) {\n  return {\n    x: bounds.x + bounds.width,\n    y: bounds.y\n  };\n}\n\nexport function bottomLeft(bounds) {\n  return {\n    x: bounds.x,\n    y: bounds.y + bounds.height\n  };\n}\n\nexport function bottomRight(bounds) {\n  return {\n    x: bounds.x + bounds.width,\n    y: bounds.y + bounds.height\n  };\n}\n\nexport function mid(bounds, defaultValue) {\n\n  if (!bounds || isNaN(bounds.x) || isNaN(bounds.y)) {\n    return defaultValue;\n  }\n\n  return {\n    x: round(bounds.x + bounds.width / 2),\n    y: round(bounds.y + bounds.height / 2)\n  };\n}\n\n\n/**\n * Retrieve the snap state of the given event.\n *\n * @param  {Event} event\n * @param  {string} axis\n *\n * @return {boolean} the snapped state\n *\n */\nexport function isSnapped(event, axis) {\n  var snapped = event.snapped;\n\n  if (!snapped) {\n    return false;\n  }\n\n  if (typeof axis === 'string') {\n    return snapped[axis];\n  }\n\n  return snapped.x && snapped.y;\n}\n\n\n/**\n * Set the given event as snapped.\n *\n * This method may change the x and/or y position of the shape\n * from the given event!\n *\n * @param {Event} event\n * @param {string} axis\n * @param {number|boolean} value\n *\n * @return {number} old value\n */\nexport function setSnapped(event, axis, value) {\n  if (typeof axis !== 'string') {\n    throw new Error('axis must be in [x, y]');\n  }\n\n  if (typeof value !== 'number' && value !== false) {\n    throw new Error('value must be Number or false');\n  }\n\n  var delta,\n      previousValue = event[axis];\n\n  var snapped = event.snapped = (event.snapped || {});\n\n\n  if (value === false) {\n    snapped[axis] = false;\n  } else {\n    snapped[axis] = true;\n\n    delta = value - previousValue;\n\n    event[axis] += delta;\n    event['d' + axis] += delta;\n  }\n\n  return previousValue;\n}\n\n/**\n * Get children of a shape.\n *\n * @param {djs.model.Shape} parent\n *\n * @returns {Array<djs.model.Shape|djs.model.Connection>}\n */\nexport function getChildren(parent) {\n  return parent.children || [];\n}","import {\n  bind,\n  debounce,\n  forEach,\n  isNumber,\n  isObject\n} from 'min-dash';\n\nimport {\n  isSnapped,\n  setSnapped\n} from './SnapUtil';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate\n} from 'tiny-svg';\n\nvar SNAP_TOLERANCE = 7;\n\nexport var SNAP_LINE_HIDE_DELAY = 1000;\n\n\n/**\n * Generic snapping feature.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function Snapping(canvas) {\n  this._canvas = canvas;\n\n  // delay hide by 1000 seconds since last snap\n  this._asyncHide = debounce(bind(this.hide, this), SNAP_LINE_HIDE_DELAY);\n}\n\nSnapping.$inject = [ 'canvas' ];\n\n/**\n * Snap an event to given snap points.\n *\n * @param {Event} event\n * @param {SnapPoints} snapPoints\n */\nSnapping.prototype.snap = function(event, snapPoints) {\n  var context = event.context,\n      snapContext = context.snapContext,\n      snapLocations = snapContext.getSnapLocations();\n\n  var snapping = {\n    x: isSnapped(event, 'x'),\n    y: isSnapped(event, 'y')\n  };\n\n  forEach(snapLocations, function(location) {\n    var snapOrigin = snapContext.getSnapOrigin(location);\n\n    var snapCurrent = {\n      x: event.x + snapOrigin.x,\n      y: event.y + snapOrigin.y\n    };\n\n    // snap both axis if not snapped already\n    forEach([ 'x', 'y' ], function(axis) {\n      var locationSnapping;\n\n      if (!snapping[axis]) {\n        locationSnapping = snapPoints.snap(snapCurrent, location, axis, SNAP_TOLERANCE);\n\n        if (locationSnapping !== undefined) {\n          snapping[axis] = {\n            value: locationSnapping,\n            originValue: locationSnapping - snapOrigin[axis]\n          };\n        }\n      }\n    });\n\n    // no need to continue snapping\n    if (snapping.x && snapping.y) {\n      return false;\n    }\n  });\n\n  // show snap lines\n  this.showSnapLine('vertical', snapping.x && snapping.x.value);\n  this.showSnapLine('horizontal', snapping.y && snapping.y.value);\n\n  // snap event\n  forEach([ 'x', 'y' ], function(axis) {\n    var axisSnapping = snapping[axis];\n\n    if (isObject(axisSnapping)) {\n      setSnapped(event, axis, axisSnapping.originValue);\n    }\n  });\n};\n\nSnapping.prototype._createLine = function(orientation) {\n  var root = this._canvas.getLayer('snap');\n\n  var line = svgCreate('path');\n\n  svgAttr(line, { d: 'M0,0 L0,0' });\n\n  svgClasses(line).add('djs-snap-line');\n\n  svgAppend(root, line);\n\n  return {\n    update: function(position) {\n\n      if (!isNumber(position)) {\n        svgAttr(line, { display: 'none' });\n      } else {\n        if (orientation === 'horizontal') {\n          svgAttr(line, {\n            d: 'M-100000,' + position + ' L+100000,' + position,\n            display: ''\n          });\n        } else {\n          svgAttr(line, {\n            d: 'M ' + position + ',-100000 L ' + position + ', +100000',\n            display: ''\n          });\n        }\n      }\n    }\n  };\n};\n\nSnapping.prototype._createSnapLines = function() {\n  this._snapLines = {\n    horizontal: this._createLine('horizontal'),\n    vertical: this._createLine('vertical')\n  };\n};\n\nSnapping.prototype.showSnapLine = function(orientation, position) {\n\n  var line = this.getSnapLine(orientation);\n\n  if (line) {\n    line.update(position);\n  }\n\n  this._asyncHide();\n};\n\nSnapping.prototype.getSnapLine = function(orientation) {\n  if (!this._snapLines) {\n    this._createSnapLines();\n  }\n\n  return this._snapLines[orientation];\n};\n\nSnapping.prototype.hide = function() {\n  forEach(this._snapLines, function(snapLine) {\n    snapLine.update();\n  });\n};\n","import CreateMoveSnapping from './CreateMoveSnapping';\nimport ResizeSnapping from './ResizeSnapping';\nimport Snapping from './Snapping';\n\nexport default {\n  __init__: [\n    'createMoveSnapping',\n    'resizeSnapping',\n    'snapping'\n  ],\n  createMoveSnapping: [ 'type', CreateMoveSnapping ],\n  resizeSnapping: [ 'type', ResizeSnapping ],\n  snapping: [ 'type', Snapping ]\n};","import {\n  assign,\n  filter,\n  forEach,\n  isNumber\n} from 'min-dash';\n\nimport { asTRBL } from '../../layout/LayoutUtil';\n\nimport { getBBox } from '../../util/Elements';\n\nimport { getDirection } from './SpaceUtil';\n\nimport { hasPrimaryModifier } from '../../util/Mouse';\n\nimport { set as setCursor } from '../../util/Cursor';\n\nimport { selfAndAllChildren } from '../../util/Elements';\n\nvar abs = Math.abs,\n    round = Math.round;\n\nvar AXIS_TO_DIMENSION = {\n  x: 'width',\n  y: 'height'\n};\n\nvar CURSOR_CROSSHAIR = 'crosshair';\n\nvar DIRECTION_TO_TRBL = {\n  n: 'top',\n  w: 'left',\n  s: 'bottom',\n  e: 'right'\n};\n\nvar HIGH_PRIORITY = 1500;\n\nvar DIRECTION_TO_OPPOSITE = {\n  n: 's',\n  w: 'e',\n  s: 'n',\n  e: 'w'\n};\n\nvar PADDING = 20;\n\n\n/**\n * Add or remove space by moving and resizing elements.\n *\n * @param {Canvas} canvas\n * @param {Dragging} dragging\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n * @param {Rules} rules\n * @param {ToolManager} toolManager\n * @param {Mouse} mouse\n */\nexport default function SpaceTool(\n    canvas, dragging, eventBus,\n    modeling, rules, toolManager,\n    mouse) {\n\n  this._canvas = canvas;\n  this._dragging = dragging;\n  this._eventBus = eventBus;\n  this._modeling = modeling;\n  this._rules = rules;\n  this._toolManager = toolManager;\n  this._mouse = mouse;\n\n  var self = this;\n\n  toolManager.registerTool('space', {\n    tool: 'spaceTool.selection',\n    dragging: 'spaceTool'\n  });\n\n  eventBus.on('spaceTool.selection.end', function(event) {\n    eventBus.once('spaceTool.selection.ended', function() {\n      self.activateMakeSpace(event.originalEvent);\n    });\n  });\n\n  eventBus.on('spaceTool.move', HIGH_PRIORITY , function(event) {\n    var context = event.context,\n        initialized = context.initialized;\n\n    if (!initialized) {\n      initialized = context.initialized = self.init(event, context);\n    }\n\n    if (initialized) {\n      ensureConstraints(event);\n    }\n  });\n\n  eventBus.on('spaceTool.end', function(event) {\n    var context = event.context,\n        axis = context.axis,\n        direction = context.direction,\n        movingShapes = context.movingShapes,\n        resizingShapes = context.resizingShapes,\n        start = context.start;\n\n    if (!context.initialized) {\n      return;\n    }\n\n    ensureConstraints(event);\n\n    var delta = {\n      x: 0,\n      y: 0\n    };\n\n    delta[ axis ] = round(event[ 'd' + axis ]);\n\n    self.makeSpace(movingShapes, resizingShapes, delta, direction, start);\n\n    eventBus.once('spaceTool.ended', function(event) {\n\n      // activate space tool selection after make space\n      self.activateSelection(event.originalEvent, true, true);\n    });\n  });\n}\n\nSpaceTool.$inject = [\n  'canvas',\n  'dragging',\n  'eventBus',\n  'modeling',\n  'rules',\n  'toolManager',\n  'mouse'\n];\n\n/**\n * Activate space tool selection.\n *\n * @param {Object} event\n * @param {boolean} autoActivate\n */\nSpaceTool.prototype.activateSelection = function(event, autoActivate, reactivate) {\n  this._dragging.init(event, 'spaceTool.selection', {\n    autoActivate: autoActivate,\n    cursor: CURSOR_CROSSHAIR,\n    data: {\n      context: {\n        reactivate: reactivate\n      }\n    },\n    trapClick: false\n  });\n};\n\n/**\n * Activate space tool make space.\n *\n * @param  {MouseEvent} event\n */\nSpaceTool.prototype.activateMakeSpace = function(event) {\n  this._dragging.init(event, 'spaceTool', {\n    autoActivate: true,\n    cursor: CURSOR_CROSSHAIR,\n    data: {\n      context: {}\n    }\n  });\n};\n\n/**\n * Make space.\n *\n * @param  {Array<djs.model.Shape>} movingShapes\n * @param  {Array<djs.model.Shape>} resizingShapes\n * @param  {Object} delta\n * @param  {number} delta.x\n * @param  {number} delta.y\n * @param  {string} direction\n * @param  {number} start\n */\nSpaceTool.prototype.makeSpace = function(movingShapes, resizingShapes, delta, direction, start) {\n  return this._modeling.createSpace(movingShapes, resizingShapes, delta, direction, start);\n};\n\n/**\n * Initialize make space and return true if that was successful.\n *\n * @param {Object} event\n * @param {Object} context\n *\n * @return {boolean}\n */\nSpaceTool.prototype.init = function(event, context) {\n  var axis = abs(event.dx) > abs(event.dy) ? 'x' : 'y',\n      delta = event[ 'd' + axis ],\n      start = event[ axis ] - delta;\n\n  if (abs(delta) < 5) {\n    return false;\n  }\n\n  // invert delta to remove space when moving left\n  if (delta < 0) {\n    delta *= -1;\n  }\n\n  // invert delta to add/remove space when removing/adding space if modifier key is pressed\n  if (hasPrimaryModifier(event)) {\n    delta *= -1;\n  }\n\n  var direction = getDirection(axis, delta);\n\n  var root = this._canvas.getRootElement();\n\n  var children = selfAndAllChildren(root, true);\n\n  var elements = this.calculateAdjustments(children, axis, delta, start);\n\n  var minDimensions = this._eventBus.fire('spaceTool.getMinDimensions', {\n    axis: axis,\n    direction: direction,\n    shapes: elements.resizingShapes,\n    start: start\n  });\n\n  var spaceToolConstraints = getSpaceToolConstraints(elements, axis, direction, start, minDimensions);\n\n  assign(\n    context,\n    elements,\n    {\n      axis: axis,\n      direction: direction,\n      spaceToolConstraints: spaceToolConstraints,\n      start: start\n    }\n  );\n\n  setCursor('resize-' + (axis === 'x' ? 'ew' : 'ns'));\n\n  return true;\n};\n\n/**\n * Get elements to be moved and resized.\n *\n * @param  {Array<djs.model.Shape>} elements\n * @param  {string} axis\n * @param  {number} delta\n * @param  {number} start\n *\n * @return {Object}\n */\nSpaceTool.prototype.calculateAdjustments = function(elements, axis, delta, start) {\n  var rules = this._rules;\n\n  var movingShapes = [],\n      resizingShapes = [];\n\n  forEach(elements, function(element) {\n    if (!element.parent || isConnection(element)) {\n      return;\n    }\n\n    var shapeStart = element[ axis ],\n        shapeEnd = shapeStart + element[ AXIS_TO_DIMENSION[ axis ] ];\n\n    // shape to be moved\n    if ((delta > 0 && shapeStart > start) || (delta < 0 && shapeEnd < start)) {\n      return movingShapes.push(element);\n    }\n\n    // shape to be resized\n    if (shapeStart < start &&\n      shapeEnd > start &&\n      rules.allowed('shape.resize', { shape: element })\n    ) {\n\n      return resizingShapes.push(element);\n    }\n  });\n\n  return {\n    movingShapes: movingShapes,\n    resizingShapes: resizingShapes\n  };\n};\n\nSpaceTool.prototype.toggle = function() {\n\n  if (this.isActive()) {\n    return this._dragging.cancel();\n  }\n\n  var mouseEvent = this._mouse.getLastMoveEvent();\n\n  this.activateSelection(mouseEvent, !!mouseEvent);\n};\n\nSpaceTool.prototype.isActive = function() {\n  var context = this._dragging.context();\n\n  return context && /^spaceTool/.test(context.prefix);\n};\n\n// helpers //////////\n\nfunction addPadding(trbl) {\n  return {\n    top: trbl.top - PADDING,\n    right: trbl.right + PADDING,\n    bottom: trbl.bottom + PADDING,\n    left: trbl.left - PADDING\n  };\n}\n\nfunction ensureConstraints(event) {\n  var context = event.context,\n      spaceToolConstraints = context.spaceToolConstraints;\n\n  if (!spaceToolConstraints) {\n    return;\n  }\n\n  var x, y;\n\n  if (isNumber(spaceToolConstraints.left)) {\n    x = Math.max(event.x, spaceToolConstraints.left);\n\n    event.dx = event.dx + x - event.x;\n    event.x = x;\n  }\n\n  if (isNumber(spaceToolConstraints.right)) {\n    x = Math.min(event.x, spaceToolConstraints.right);\n\n    event.dx = event.dx + x - event.x;\n    event.x = x;\n  }\n\n  if (isNumber(spaceToolConstraints.top)) {\n    y = Math.max(event.y, spaceToolConstraints.top);\n\n    event.dy = event.dy + y - event.y;\n    event.y = y;\n  }\n\n  if (isNumber(spaceToolConstraints.bottom)) {\n    y = Math.min(event.y, spaceToolConstraints.bottom);\n\n    event.dy = event.dy + y - event.y;\n    event.y = y;\n  }\n}\n\nfunction getSpaceToolConstraints(elements, axis, direction, start, minDimensions) {\n  var movingShapes = elements.movingShapes,\n      resizingShapes = elements.resizingShapes;\n\n  if (!resizingShapes.length) {\n    return;\n  }\n\n  var spaceToolConstraints = {},\n      min,\n      max;\n\n  forEach(resizingShapes, function(resizingShape) {\n    var resizingShapeBBox = asTRBL(resizingShape);\n\n    // find children that are not moving or resizing\n    var nonMovingResizingChildren = filter(resizingShape.children, function(child) {\n      return !isConnection(child) &&\n        !isLabel(child) &&\n        !includes(movingShapes, child) &&\n        !includes(resizingShapes, child);\n    });\n\n    // find children that are moving\n    var movingChildren = filter(resizingShape.children, function(child) {\n      return !isConnection(child) && !isLabel(child) && includes(movingShapes, child);\n    });\n\n    var minOrMax,\n        nonMovingResizingChildrenBBox,\n        movingChildrenBBox;\n\n    if (nonMovingResizingChildren.length) {\n      nonMovingResizingChildrenBBox = addPadding(asTRBL(getBBox(nonMovingResizingChildren)));\n\n      minOrMax = start -\n        resizingShapeBBox[ DIRECTION_TO_TRBL[ direction ] ] +\n        nonMovingResizingChildrenBBox[ DIRECTION_TO_TRBL[ direction ] ];\n\n      if (direction === 'n') {\n        spaceToolConstraints.bottom = max = isNumber(max) ? Math.min(max, minOrMax) : minOrMax;\n      } else if (direction === 'w') {\n        spaceToolConstraints.right = max = isNumber(max) ? Math.min(max, minOrMax) : minOrMax;\n      } else if (direction === 's') {\n        spaceToolConstraints.top = min = isNumber(min) ? Math.max(min, minOrMax) : minOrMax;\n      } else if (direction === 'e') {\n        spaceToolConstraints.left = min = isNumber(min) ? Math.max(min, minOrMax) : minOrMax;\n      }\n    }\n\n    if (movingChildren.length) {\n      movingChildrenBBox = addPadding(asTRBL(getBBox(movingChildren)));\n\n      minOrMax = start -\n        movingChildrenBBox[ DIRECTION_TO_TRBL[ DIRECTION_TO_OPPOSITE[ direction ] ] ] +\n        resizingShapeBBox[ DIRECTION_TO_TRBL[ DIRECTION_TO_OPPOSITE[ direction ] ] ];\n\n      if (direction === 'n') {\n        spaceToolConstraints.bottom = max = isNumber(max) ? Math.min(max, minOrMax) : minOrMax;\n      } else if (direction === 'w') {\n        spaceToolConstraints.right = max = isNumber(max) ? Math.min(max, minOrMax) : minOrMax;\n      } else if (direction === 's') {\n        spaceToolConstraints.top = min = isNumber(min) ? Math.max(min, minOrMax) : minOrMax;\n      } else if (direction === 'e') {\n        spaceToolConstraints.left = min = isNumber(min) ? Math.max(min, minOrMax) : minOrMax;\n      }\n    }\n\n    var resizingShapeMinDimensions = minDimensions && minDimensions[ resizingShape.id ];\n\n    if (resizingShapeMinDimensions) {\n      if (direction === 'n') {\n        minOrMax = start +\n          resizingShape[ AXIS_TO_DIMENSION [ axis ] ] -\n          resizingShapeMinDimensions[ AXIS_TO_DIMENSION[ axis ] ];\n\n        spaceToolConstraints.bottom = max = isNumber(max) ? Math.min(max, minOrMax) : minOrMax;\n      } else if (direction === 'w') {\n        minOrMax = start +\n          resizingShape[ AXIS_TO_DIMENSION [ axis ] ] -\n          resizingShapeMinDimensions[ AXIS_TO_DIMENSION[ axis ] ];\n\n        spaceToolConstraints.right = max = isNumber(max) ? Math.min(max, minOrMax) : minOrMax;\n      } else if (direction === 's') {\n        minOrMax = start -\n          resizingShape[ AXIS_TO_DIMENSION [ axis ] ] +\n          resizingShapeMinDimensions[ AXIS_TO_DIMENSION[ axis ] ];\n\n        spaceToolConstraints.top = min = isNumber(min) ? Math.max(min, minOrMax) : minOrMax;\n      } else if (direction === 'e') {\n        minOrMax = start -\n          resizingShape[ AXIS_TO_DIMENSION [ axis ] ] +\n          resizingShapeMinDimensions[ AXIS_TO_DIMENSION[ axis ] ];\n\n        spaceToolConstraints.left = min = isNumber(min) ? Math.max(min, minOrMax) : minOrMax;\n      }\n    }\n  });\n\n  return spaceToolConstraints;\n}\n\nfunction includes(array, item) {\n  return array.indexOf(item) !== -1;\n}\n\nfunction isConnection(element) {\n  return !!element.waypoints;\n}\n\nfunction isLabel(element) {\n  return !!element.labelTarget;\n}","import {\n  forEach\n} from 'min-dash';\n\nvar MARKER_DRAGGING = 'djs-dragging',\n    MARKER_RESIZING = 'djs-resizing';\n\nvar LOW_PRIORITY = 250;\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  translate\n} from '../../util/SvgTransformUtil';\n\nvar max = Math.max;\n\n\n/**\n * Provides previews for selecting/moving/resizing shapes when creating/removing space.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Canvas} canvas\n * @param {Styles} styles\n */\nexport default function SpaceToolPreview(\n    eventBus, elementRegistry, canvas,\n    styles, previewSupport) {\n\n  function addPreviewGfx(collection, dragGroup) {\n    forEach(collection, function(element) {\n      previewSupport.addDragger(element, dragGroup);\n\n      canvas.addMarker(element, MARKER_DRAGGING);\n    });\n  }\n\n  // add crosshair\n  eventBus.on('spaceTool.selection.start', function(event) {\n    var space = canvas.getLayer('space'),\n        context = event.context;\n\n    var orientation = {\n      x: 'M 0,-10000 L 0,10000',\n      y: 'M -10000,0 L 10000,0'\n    };\n\n    var crosshairGroup = svgCreate('g');\n    svgAttr(crosshairGroup, styles.cls('djs-crosshair-group', [ 'no-events' ]));\n\n    svgAppend(space, crosshairGroup);\n\n    // horizontal path\n    var pathX = svgCreate('path');\n    svgAttr(pathX, 'd', orientation.x);\n    svgClasses(pathX).add('djs-crosshair');\n\n    svgAppend(crosshairGroup, pathX);\n\n    // vertical path\n    var pathY = svgCreate('path');\n    svgAttr(pathY, 'd', orientation.y);\n    svgClasses(pathY).add('djs-crosshair');\n\n    svgAppend(crosshairGroup, pathY);\n\n    context.crosshairGroup = crosshairGroup;\n  });\n\n  // update crosshair\n  eventBus.on('spaceTool.selection.move', function(event) {\n    var crosshairGroup = event.context.crosshairGroup;\n\n    translate(crosshairGroup, event.x, event.y);\n  });\n\n  // remove crosshair\n  eventBus.on('spaceTool.selection.cleanup', function(event) {\n    var context = event.context,\n        crosshairGroup = context.crosshairGroup;\n\n    if (crosshairGroup) {\n      svgRemove(crosshairGroup);\n    }\n  });\n\n  // add and update move/resize previews\n  eventBus.on('spaceTool.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        line = context.line,\n        axis = context.axis,\n        movingShapes = context.movingShapes,\n        resizingShapes = context.resizingShapes;\n\n    if (!context.initialized) {\n      return;\n    }\n\n    if (!context.dragGroup) {\n      var spaceLayer = canvas.getLayer('space');\n\n      line = svgCreate('path');\n      svgAttr(line, 'd', 'M0,0 L0,0');\n      svgClasses(line).add('djs-crosshair');\n\n      svgAppend(spaceLayer, line);\n\n      context.line = line;\n\n      var dragGroup = svgCreate('g');\n      svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\n\n      svgAppend(canvas.getActiveLayer(), dragGroup);\n\n      // shapes\n      addPreviewGfx(movingShapes, dragGroup);\n\n      // connections\n      var movingConnections = context.movingConnections = elementRegistry.filter(function(element) {\n        var sourceIsMoving = false;\n\n        forEach(movingShapes, function(shape) {\n          forEach(shape.outgoing, function(connection) {\n            if (element === connection) {\n              sourceIsMoving = true;\n            }\n          });\n        });\n\n        var targetIsMoving = false;\n\n        forEach(movingShapes, function(shape) {\n          forEach(shape.incoming, function(connection) {\n            if (element === connection) {\n              targetIsMoving = true;\n            }\n          });\n        });\n\n        var sourceIsResizing = false;\n\n        forEach(resizingShapes, function(shape) {\n          forEach(shape.outgoing, function(connection) {\n            if (element === connection) {\n              sourceIsResizing = true;\n            }\n          });\n        });\n\n        var targetIsResizing = false;\n\n        forEach(resizingShapes, function(shape) {\n          forEach(shape.incoming, function(connection) {\n            if (element === connection) {\n              targetIsResizing = true;\n            }\n          });\n        });\n\n        return isConnection(element)\n          && (sourceIsMoving || sourceIsResizing)\n          && (targetIsMoving || targetIsResizing);\n      });\n\n\n      addPreviewGfx(movingConnections, dragGroup);\n\n      context.dragGroup = dragGroup;\n    }\n\n    if (!context.frameGroup) {\n      var frameGroup = svgCreate('g');\n      svgAttr(frameGroup, styles.cls('djs-frame-group', [ 'no-events' ]));\n\n      svgAppend(canvas.getActiveLayer(), frameGroup);\n\n      var frames = [];\n\n      forEach(resizingShapes, function(shape) {\n        var frame = previewSupport.addFrame(shape, frameGroup);\n\n        var initialBounds = frame.getBBox();\n\n        frames.push({\n          element: frame,\n          initialBounds: initialBounds\n        });\n\n        canvas.addMarker(shape, MARKER_RESIZING);\n      });\n\n      context.frameGroup = frameGroup;\n      context.frames = frames;\n    }\n\n    var orientation = {\n      x: 'M' + event.x + ', -10000 L' + event.x + ', 10000',\n      y: 'M -10000, ' + event.y + ' L 10000, ' + event.y\n    };\n\n    svgAttr(line, { d: orientation[ axis ] });\n\n    var opposite = { x: 'y', y: 'x' };\n    var delta = { x: event.dx, y: event.dy };\n    delta[ opposite[ context.axis ] ] = 0;\n\n    // update move previews\n    translate(context.dragGroup, delta.x, delta.y);\n\n    // update resize previews\n    forEach(context.frames, function(frame) {\n      var element = frame.element,\n          initialBounds = frame.initialBounds,\n          width,\n          height;\n\n      if (context.direction === 'e') {\n        svgAttr(element, {\n          width: max(initialBounds.width + delta.x, 5)\n        });\n      } else {\n        width = max(initialBounds.width - delta.x, 5);\n\n        svgAttr(element, {\n          width: width,\n          x: initialBounds.x + initialBounds.width - width\n        });\n      }\n\n      if (context.direction === 's') {\n        svgAttr(element, {\n          height: max(initialBounds.height + delta.y, 5)\n        });\n      } else {\n        height = max(initialBounds.height - delta.y, 5);\n\n        svgAttr(element, {\n          height: height,\n          y: initialBounds.y + initialBounds.height - height\n        });\n      }\n    });\n\n  });\n\n  // remove move/resize previews\n  eventBus.on('spaceTool.cleanup', function(event) {\n\n    var context = event.context,\n        movingShapes = context.movingShapes,\n        movingConnections = context.movingConnections,\n        resizingShapes = context.resizingShapes,\n        line = context.line,\n        dragGroup = context.dragGroup,\n        frameGroup = context.frameGroup;\n\n    // moving shapes\n    forEach(movingShapes, function(shape) {\n      canvas.removeMarker(shape, MARKER_DRAGGING);\n    });\n\n    // moving connections\n    forEach(movingConnections, function(connection) {\n      canvas.removeMarker(connection, MARKER_DRAGGING);\n    });\n\n    if (dragGroup) {\n      svgRemove(line);\n      svgRemove(dragGroup);\n    }\n\n    forEach(resizingShapes, function(shape) {\n      canvas.removeMarker(shape, MARKER_RESIZING);\n    });\n\n    if (frameGroup) {\n      svgRemove(frameGroup);\n    }\n  });\n}\n\nSpaceToolPreview.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'canvas',\n  'styles',\n  'previewSupport'\n];\n\n\n// helpers //////////////////////\n\n/**\n * Checks if an element is a connection.\n */\nfunction isConnection(element) {\n  return element.waypoints;\n}\n","import { forEach } from 'min-dash';\n\n/**\n * Return direction given axis and delta.\n *\n * @param {string} axis\n * @param {number} delta\n *\n * @return {string}\n */\nexport function getDirection(axis, delta) {\n\n  if (axis === 'x') {\n    if (delta > 0) {\n      return 'e';\n    }\n\n    if (delta < 0) {\n      return 'w';\n    }\n  }\n\n  if (axis === 'y') {\n    if (delta > 0) {\n      return 's';\n    }\n\n    if (delta < 0) {\n      return 'n';\n    }\n  }\n\n  return null;\n}\n\n/**\n * Returns connections whose waypoints are to be updated. Waypoints are to be updated if start\n * or end is to be moved or resized.\n *\n * @param {Array<djs.model.Shape} movingShapes\n * @param {Array<djs.model.Shape} resizingShapes\n *\n * @returns {Array<djs.model.Connection>}\n */\nexport function getWaypointsUpdatingConnections(movingShapes, resizingShapes) {\n  var waypointsUpdatingConnections = [];\n\n  forEach(movingShapes.concat(resizingShapes), function(shape) {\n    var incoming = shape.incoming,\n        outgoing = shape.outgoing;\n\n    forEach(incoming.concat(outgoing), function(connection) {\n      var source = connection.source,\n          target = connection.target;\n\n      if (includes(movingShapes, source) ||\n        includes(movingShapes, target) ||\n        includes(resizingShapes, source) ||\n        includes(resizingShapes, target)) {\n\n        if (!includes(waypointsUpdatingConnections, connection)) {\n          waypointsUpdatingConnections.push(connection);\n        }\n      }\n    });\n  });\n\n  return waypointsUpdatingConnections;\n}\n\nfunction includes(array, item) {\n  return array.indexOf(item) !== -1;\n}\n\n/**\n * Resize bounds.\n *\n * @param {Object} bounds\n * @param {number} bounds.x\n * @param {number} bounds.y\n * @param {number} bounds.width\n * @param {number} bounds.height\n * @param {string} direction\n * @param {Object} delta\n * @param {number} delta.x\n * @param {number} delta.y\n *\n * @return {Object}\n */\nexport function resizeBounds(bounds, direction, delta) {\n  var x = bounds.x,\n      y = bounds.y,\n      width = bounds.width,\n      height = bounds.height,\n      dx = delta.x,\n      dy = delta.y;\n\n  switch (direction) {\n  case 'n':\n    return {\n      x: x,\n      y: y + dy,\n      width: width,\n      height: height - dy\n    };\n  case 's':\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height + dy\n    };\n  case 'w':\n    return {\n      x: x + dx,\n      y: y,\n      width: width - dx,\n      height: height\n    };\n  case 'e':\n    return {\n      x: x,\n      y: y,\n      width: width + dx,\n      height: height\n    };\n  default:\n    throw new Error('unknown direction: ' + direction);\n  }\n}","import DraggingModule from '../dragging';\nimport RulesModule from '../rules';\nimport ToolManagerModule from '../tool-manager';\nimport PreviewSupportModule from '../preview-support';\nimport MouseModule from '../mouse';\n\nimport SpaceTool from './SpaceTool';\nimport SpaceToolPreview from './SpaceToolPreview';\n\nexport default {\n  __init__: [ 'spaceToolPreview' ],\n  __depends__: [\n    DraggingModule,\n    RulesModule,\n    ToolManagerModule,\n    PreviewSupportModule,\n    MouseModule\n  ],\n  spaceTool: [ 'type', SpaceTool ],\n  spaceToolPreview: [ 'type', SpaceToolPreview ]\n};\n","import {\n  forEach\n} from 'min-dash';\n\nimport {\n  closest as domClosest\n} from 'min-dom';\n\nvar LOW_PRIORITY = 250;\n\n/**\n * The tool manager acts as middle-man between the available tool's and the Palette,\n * it takes care of making sure that the correct active state is set.\n *\n * @param  {Object}    eventBus\n * @param  {Object}    dragging\n */\nexport default function ToolManager(eventBus, dragging) {\n  this._eventBus = eventBus;\n  this._dragging = dragging;\n\n  this._tools = [];\n  this._active = null;\n}\n\nToolManager.$inject = [ 'eventBus', 'dragging' ];\n\nToolManager.prototype.registerTool = function(name, events) {\n  var tools = this._tools;\n\n  if (!events) {\n    throw new Error('A tool has to be registered with it\\'s \"events\"');\n  }\n\n  tools.push(name);\n\n  this.bindEvents(name, events);\n};\n\nToolManager.prototype.isActive = function(tool) {\n  return tool && this._active === tool;\n};\n\nToolManager.prototype.length = function(tool) {\n  return this._tools.length;\n};\n\nToolManager.prototype.setActive = function(tool) {\n  var eventBus = this._eventBus;\n\n  if (this._active !== tool) {\n    this._active = tool;\n\n    eventBus.fire('tool-manager.update', { tool: tool });\n  }\n};\n\nToolManager.prototype.bindEvents = function(name, events) {\n  var eventBus = this._eventBus,\n      dragging = this._dragging;\n\n  var eventsToRegister = [];\n\n  eventBus.on(events.tool + '.init', function(event) {\n    var context = event.context;\n\n    // Active tools that want to reactivate themselves must do this explicitly\n    if (!context.reactivate && this.isActive(name)) {\n      this.setActive(null);\n\n      dragging.cancel();\n      return;\n    }\n\n    this.setActive(name);\n\n  }, this);\n\n  // Todo[ricardo]: add test cases\n  forEach(events, function(event) {\n    eventsToRegister.push(event + '.ended');\n    eventsToRegister.push(event + '.canceled');\n  });\n\n  eventBus.on(eventsToRegister, LOW_PRIORITY, function(event) {\n\n    // We defer the de-activation of the tool to the .activate phase,\n    // so we're able to check if we want to toggle off the current\n    // active tool or switch to a new one\n    if (!this._active) {\n      return;\n    }\n\n    if (isPaletteClick(event)) {\n      return;\n    }\n\n    this.setActive(null);\n  }, this);\n\n};\n\n\n// helpers ///////////////\n\n/**\n * Check if a given event is a palette click event.\n *\n * @param {EventBus.Event} event\n *\n * @return {boolean}\n */\nfunction isPaletteClick(event) {\n  var target = event.originalEvent && event.originalEvent.target;\n\n  return target && domClosest(target, '.group[data-group=\"tools\"]');\n}","import DraggingModule from '../dragging';\n\nimport ToolManager from './ToolManager';\n\nexport default {\n  __depends__: [\n    DraggingModule\n  ],\n  __init__: [ 'toolManager' ],\n  toolManager: [ 'type', ToolManager ]\n};\n","import {\n  isString,\n  assign,\n  forEach\n} from 'min-dash';\n\nimport {\n  domify,\n  attr as domAttr,\n  classes as domClasses,\n  remove as domRemove,\n  delegate as domDelegate\n} from 'min-dom';\n\nimport Ids from '../../util/IdGenerator';\n\n// document wide unique tooltip ids\nvar ids = new Ids('tt');\n\n\nfunction createRoot(parentNode) {\n  var root = domify(\n    '<div class=\"djs-tooltip-container\" style=\"position: absolute; width: 0; height: 0;\" />'\n  );\n\n  parentNode.insertBefore(root, parentNode.firstChild);\n\n  return root;\n}\n\n\nfunction setPosition(el, x, y) {\n  assign(el.style, { left: x + 'px', top: y + 'px' });\n}\n\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\n\n\nvar tooltipClass = 'djs-tooltip',\n    tooltipSelector = '.' + tooltipClass;\n\n/**\n * A service that allows users to render tool tips on the diagram.\n *\n * The tooltip service will take care of updating the tooltip positioning\n * during navigation + zooming.\n *\n * @example\n *\n * ```javascript\n *\n * // add a pink badge on the top left of the shape\n * tooltips.add({\n *   position: {\n *     x: 50,\n *     y: 100\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or with optional life span\n * tooltips.add({\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>',\n *   ttl: 2000\n * });\n *\n * // remove a tool tip\n * var id = tooltips.add(...);\n * tooltips.remove(id);\n * ```\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function Tooltips(eventBus, canvas) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n\n  this._ids = ids;\n\n  this._tooltipDefaults = {\n    show: {\n      minZoom: 0.7,\n      maxZoom: 5.0\n    }\n  };\n\n  /**\n   * Mapping tooltipId -> tooltip\n   */\n  this._tooltips = {};\n\n  // root html element for all tooltips\n  this._tooltipRoot = createRoot(canvas.getContainer());\n\n\n  var self = this;\n\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mousedown', function(event) {\n    event.stopPropagation();\n  });\n\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mouseover', function(event) {\n    self.trigger('mouseover', event);\n  });\n\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mouseout', function(event) {\n    self.trigger('mouseout', event);\n  });\n\n  this._init();\n}\n\n\nTooltips.$inject = [ 'eventBus', 'canvas' ];\n\n\n/**\n * Adds a HTML tooltip to the diagram\n *\n * @param {Object}               tooltip   the tooltip configuration\n *\n * @param {string|DOMElement}    tooltip.html                 html element to use as an tooltip\n * @param {Object}               [tooltip.show]               show configuration\n * @param {number}               [tooltip.show.minZoom]       minimal zoom level to show the tooltip\n * @param {number}               [tooltip.show.maxZoom]       maximum zoom level to show the tooltip\n * @param {Object}               tooltip.position             where to attach the tooltip\n * @param {number}               [tooltip.position.left]      relative to element bbox left attachment\n * @param {number}               [tooltip.position.top]       relative to element bbox top attachment\n * @param {number}               [tooltip.position.bottom]    relative to element bbox bottom attachment\n * @param {number}               [tooltip.position.right]     relative to element bbox right attachment\n * @param {number}               [tooltip.timeout=-1]\n *\n * @return {string}              id that may be used to reference the tooltip for update or removal\n */\nTooltips.prototype.add = function(tooltip) {\n\n  if (!tooltip.position) {\n    throw new Error('must specifiy tooltip position');\n  }\n\n  if (!tooltip.html) {\n    throw new Error('must specifiy tooltip html');\n  }\n\n  var id = this._ids.next();\n\n  tooltip = assign({}, this._tooltipDefaults, tooltip, {\n    id: id\n  });\n\n  this._addTooltip(tooltip);\n\n  if (tooltip.timeout) {\n    this.setTimeout(tooltip);\n  }\n\n  return id;\n};\n\nTooltips.prototype.trigger = function(action, event) {\n\n  var node = event.delegateTarget || event.target;\n\n  var tooltip = this.get(domAttr(node, 'data-tooltip-id'));\n\n  if (!tooltip) {\n    return;\n  }\n\n  if (action === 'mouseover' && tooltip.timeout) {\n    this.clearTimeout(tooltip);\n  }\n\n  if (action === 'mouseout' && tooltip.timeout) {\n\n    // cut timeout after mouse out\n    tooltip.timeout = 1000;\n\n    this.setTimeout(tooltip);\n  }\n};\n\n/**\n * Get a tooltip with the given id\n *\n * @param {string} id\n */\nTooltips.prototype.get = function(id) {\n\n  if (typeof id !== 'string') {\n    id = id.id;\n  }\n\n  return this._tooltips[id];\n};\n\nTooltips.prototype.clearTimeout = function(tooltip) {\n\n  tooltip = this.get(tooltip);\n\n  if (!tooltip) {\n    return;\n  }\n\n  var removeTimer = tooltip.removeTimer;\n\n  if (removeTimer) {\n    clearTimeout(removeTimer);\n    tooltip.removeTimer = null;\n  }\n};\n\nTooltips.prototype.setTimeout = function(tooltip) {\n\n  tooltip = this.get(tooltip);\n\n  if (!tooltip) {\n    return;\n  }\n\n  this.clearTimeout(tooltip);\n\n  var self = this;\n\n  tooltip.removeTimer = setTimeout(function() {\n    self.remove(tooltip);\n  }, tooltip.timeout);\n};\n\n/**\n * Remove an tooltip with the given id\n *\n * @param {string} id\n */\nTooltips.prototype.remove = function(id) {\n\n  var tooltip = this.get(id);\n\n  if (tooltip) {\n    domRemove(tooltip.html);\n    domRemove(tooltip.htmlContainer);\n\n    delete tooltip.htmlContainer;\n\n    delete this._tooltips[tooltip.id];\n  }\n};\n\n\nTooltips.prototype.show = function() {\n  setVisible(this._tooltipRoot);\n};\n\n\nTooltips.prototype.hide = function() {\n  setVisible(this._tooltipRoot, false);\n};\n\n\nTooltips.prototype._updateRoot = function(viewbox) {\n  var a = viewbox.scale || 1;\n  var d = viewbox.scale || 1;\n\n  var matrix = 'matrix(' + a + ',0,0,' + d + ',' + (-1 * viewbox.x * a) + ',' + (-1 * viewbox.y * d) + ')';\n\n  this._tooltipRoot.style.transform = matrix;\n  this._tooltipRoot.style['-ms-transform'] = matrix;\n};\n\n\nTooltips.prototype._addTooltip = function(tooltip) {\n\n  var id = tooltip.id,\n      html = tooltip.html,\n      htmlContainer,\n      tooltipRoot = this._tooltipRoot;\n\n  // unwrap jquery (for those who need it)\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  }\n\n  // create proper html elements from\n  // tooltip HTML strings\n  if (isString(html)) {\n    html = domify(html);\n  }\n\n  htmlContainer = domify('<div data-tooltip-id=\"' + id + '\" class=\"' + tooltipClass + '\" style=\"position: absolute\">');\n\n  htmlContainer.appendChild(html);\n\n  if (tooltip.type) {\n    domClasses(htmlContainer).add('djs-tooltip-' + tooltip.type);\n  }\n\n  if (tooltip.className) {\n    domClasses(htmlContainer).add(tooltip.className);\n  }\n\n  tooltip.htmlContainer = htmlContainer;\n\n  tooltipRoot.appendChild(htmlContainer);\n\n  this._tooltips[id] = tooltip;\n\n  this._updateTooltip(tooltip);\n};\n\n\nTooltips.prototype._updateTooltip = function(tooltip) {\n\n  var position = tooltip.position,\n      htmlContainer = tooltip.htmlContainer;\n\n  // update overlay html based on tooltip x, y\n\n  setPosition(htmlContainer, position.x, position.y);\n};\n\n\nTooltips.prototype._updateTooltipVisibilty = function(viewbox) {\n\n  forEach(this._tooltips, function(tooltip) {\n    var show = tooltip.show,\n        htmlContainer = tooltip.htmlContainer,\n        visible = true;\n\n    if (show) {\n      if (show.minZoom > viewbox.scale ||\n          show.maxZoom < viewbox.scale) {\n        visible = false;\n      }\n\n      setVisible(htmlContainer, visible);\n    }\n  });\n};\n\nTooltips.prototype._init = function() {\n\n  var self = this;\n\n  // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n    self._updateTooltipVisibilty(viewbox);\n\n    self.show();\n  }\n\n  this._eventBus.on('canvas.viewbox.changing', function(event) {\n    self.hide();\n  });\n\n  this._eventBus.on('canvas.viewbox.changed', function(event) {\n    updateViewbox(event.viewbox);\n  });\n};\n","import Tooltips from './Tooltips';\n\nexport default {\n  __init__: [ 'tooltips' ],\n  tooltips: [ 'type', Tooltips ]\n};","import {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\n\nexport default function TouchFix(canvas, eventBus) {\n\n  var self = this;\n\n  eventBus.on('canvas.init', function(e) {\n    self.addBBoxMarker(e.svg);\n  });\n}\n\nTouchFix.$inject = [ 'canvas', 'eventBus' ];\n\n\n/**\n * Safari mobile (iOS 7) does not fire touchstart event in <SVG> element\n * if there is no shape between 0,0 and viewport elements origin.\n *\n * So touchstart event is only fired when the <g class=\"viewport\"> element was hit.\n * Putting an element over and below the 'viewport' fixes that behavior.\n */\nTouchFix.prototype.addBBoxMarker = function(svg) {\n\n  var markerStyle = {\n    fill: 'none',\n    class: 'outer-bound-marker'\n  };\n\n  var rect1 = svgCreate('rect');\n  svgAttr(rect1, {\n    x: -10000,\n    y: 10000,\n    width: 10,\n    height: 10\n  });\n  svgAttr(rect1, markerStyle);\n\n  svgAppend(svg, rect1);\n\n  var rect2 = svgCreate('rect');\n  svgAttr(rect2, {\n    x: 10000,\n    y: 10000,\n    width: 10,\n    height: 10\n  });\n  svgAttr(rect2, markerStyle);\n\n  svgAppend(svg, rect2);\n};\n","import {\n  forEach\n} from 'min-dash';\n\nimport {\n  event as domEvent,\n  closest as domClosest\n} from 'min-dom';\n\nimport Hammer from 'hammerjs';\n\nimport {\n  toPoint\n} from '../../util/Event';\n\nvar MIN_ZOOM = 0.2,\n    MAX_ZOOM = 4;\n\nvar mouseEvents = [\n  'mousedown',\n  'mouseup',\n  'mouseover',\n  'mouseout',\n  'click',\n  'dblclick'\n];\n\nfunction log() {\n\n  // console.log.apply(console, arguments);\n}\n\nfunction get(service, injector) {\n  return injector.get(service, false);\n}\n\nfunction stopEvent(event) {\n\n  event.preventDefault();\n\n  if (typeof event.stopPropagation === 'function') {\n    event.stopPropagation();\n  } else if (event.srcEvent && typeof event.srcEvent.stopPropagation === 'function') {\n\n    // iPhone & iPad\n    event.srcEvent.stopPropagation();\n  }\n\n  if (typeof event.stopImmediatePropagation === 'function') {\n    event.stopImmediatePropagation();\n  }\n}\n\n\nfunction createTouchRecognizer(node) {\n\n  function stopMouse(event) {\n\n    forEach(mouseEvents, function(e) {\n      domEvent.bind(node, e, stopEvent, true);\n    });\n  }\n\n  function allowMouse(event) {\n    setTimeout(function() {\n      forEach(mouseEvents, function(e) {\n        domEvent.unbind(node, e, stopEvent, true);\n      });\n    }, 500);\n  }\n\n  domEvent.bind(node, 'touchstart', stopMouse, true);\n  domEvent.bind(node, 'touchend', allowMouse, true);\n  domEvent.bind(node, 'touchcancel', allowMouse, true);\n\n  // A touch event recognizer that handles\n  // touch events only (we know, we can already handle\n  // mouse events out of the box)\n\n  var recognizer = new Hammer.Manager(node, {\n    inputClass: Hammer.TouchInput,\n    recognizers: [],\n    domEvents: true\n  });\n\n\n  var tap = new Hammer.Tap();\n  var pan = new Hammer.Pan({ threshold: 10 });\n  var press = new Hammer.Press();\n  var pinch = new Hammer.Pinch();\n\n  var doubleTap = new Hammer.Tap({ event: 'doubletap', taps: 2 });\n\n  pinch.requireFailure(pan);\n  pinch.requireFailure(press);\n\n  recognizer.add([ pan, press, pinch, doubleTap, tap ]);\n\n  recognizer.reset = function(force) {\n    var recognizers = this.recognizers,\n        session = this.session;\n\n    if (session.stopped) {\n      return;\n    }\n\n    log('recognizer', 'stop');\n\n    recognizer.stop(force);\n\n    setTimeout(function() {\n      var i, r;\n\n      log('recognizer', 'reset');\n      for (i = 0; (r = recognizers[i]); i++) {\n        r.reset();\n        r.state = 8; // FAILED STATE\n      }\n\n      session.curRecognizer = null;\n    }, 0);\n  };\n\n  recognizer.on('hammer.input', function(event) {\n    if (event.srcEvent.defaultPrevented) {\n      recognizer.reset(true);\n    }\n  });\n\n  return recognizer;\n}\n\n/**\n * A plugin that provides touch events for elements.\n *\n * @param {EventBus} eventBus\n * @param {InteractionEvents} interactionEvents\n */\nexport default function TouchInteractionEvents(\n    injector, canvas, eventBus,\n    elementRegistry, interactionEvents) {\n\n  // optional integrations\n  var dragging = get('dragging', injector),\n      move = get('move', injector),\n      contextPad = get('contextPad', injector),\n      palette = get('palette', injector);\n\n  // the touch recognizer\n  var recognizer;\n\n  function handler(type, buttonType) {\n\n    return function(event) {\n      log('element', type, event);\n\n      var gfx = getGfx(event.target),\n          element = gfx && elementRegistry.get(gfx);\n\n      // translate into an actual mouse click event\n      if (buttonType) {\n        event.srcEvent.button = buttonType;\n      }\n\n      return interactionEvents.fire(type, event, element);\n    };\n  }\n\n\n  function getGfx(target) {\n    var node = domClosest(target, 'svg, .djs-element', true);\n    return node;\n  }\n\n  function initEvents(svg) {\n\n    // touch recognizer\n    recognizer = createTouchRecognizer(svg);\n\n    function startGrabCanvas(event) {\n\n      log('canvas', 'grab start');\n\n      var lx = 0, ly = 0;\n\n      function update(e) {\n\n        var dx = e.deltaX - lx,\n            dy = e.deltaY - ly;\n\n        canvas.scroll({ dx: dx, dy: dy });\n\n        lx = e.deltaX;\n        ly = e.deltaY;\n      }\n\n      function end(e) {\n        recognizer.off('panmove', update);\n        recognizer.off('panend', end);\n        recognizer.off('pancancel', end);\n\n        log('canvas', 'grab end');\n      }\n\n      recognizer.on('panmove', update);\n      recognizer.on('panend', end);\n      recognizer.on('pancancel', end);\n    }\n\n    function startGrab(event) {\n\n      var gfx = getGfx(event.target),\n          element = gfx && elementRegistry.get(gfx);\n\n      // recognizer\n      if (move && canvas.getRootElement() !== element) {\n        log('element', 'move start', element, event, true);\n        return move.start(event, element, true);\n      } else {\n        startGrabCanvas(event);\n      }\n    }\n\n    function startZoom(e) {\n\n      log('canvas', 'zoom start');\n\n      var zoom = canvas.zoom(),\n          mid = e.center;\n\n      function update(e) {\n\n        var ratio = 1 - (1 - e.scale) / 1.50,\n            newZoom = Math.max(MIN_ZOOM, Math.min(MAX_ZOOM, ratio * zoom));\n\n        canvas.zoom(newZoom, mid);\n\n        stopEvent(e);\n      }\n\n      function end(e) {\n        recognizer.off('pinchmove', update);\n        recognizer.off('pinchend', end);\n        recognizer.off('pinchcancel', end);\n\n        recognizer.reset(true);\n\n        log('canvas', 'zoom end');\n      }\n\n      recognizer.on('pinchmove', update);\n      recognizer.on('pinchend', end);\n      recognizer.on('pinchcancel', end);\n    }\n\n    recognizer.on('tap', handler('element.click'));\n    recognizer.on('doubletap', handler('element.dblclick', 1));\n\n    recognizer.on('panstart', startGrab);\n    recognizer.on('press', startGrab);\n\n    recognizer.on('pinchstart', startZoom);\n  }\n\n  if (dragging) {\n\n    // simulate hover during dragging\n    eventBus.on('drag.move', function(event) {\n\n      var originalEvent = event.originalEvent;\n\n      if (!originalEvent || originalEvent instanceof MouseEvent) {\n        return;\n      }\n\n      var position = toPoint(originalEvent);\n\n      // this gets really expensive ...\n      var node = document.elementFromPoint(position.x, position.y),\n          gfx = getGfx(node),\n          element = gfx && elementRegistry.get(gfx);\n\n      if (element !== event.hover) {\n        if (event.hover) {\n          dragging.out(event);\n        }\n\n        if (element) {\n          dragging.hover({ element: element, gfx: gfx });\n\n          event.hover = element;\n          event.hoverGfx = gfx;\n        }\n      }\n    });\n  }\n\n  if (contextPad) {\n\n    eventBus.on('contextPad.create', function(event) {\n      var node = event.pad.html;\n\n      // touch recognizer\n      var padRecognizer = createTouchRecognizer(node);\n\n      padRecognizer.on('panstart', function(event) {\n        log('context-pad', 'panstart', event);\n        contextPad.trigger('dragstart', event, true);\n      });\n\n      padRecognizer.on('press', function(event) {\n        log('context-pad', 'press', event);\n        contextPad.trigger('dragstart', event, true);\n      });\n\n      padRecognizer.on('tap', function(event) {\n        log('context-pad', 'tap', event);\n        contextPad.trigger('click', event);\n      });\n    });\n  }\n\n  if (palette) {\n    eventBus.on('palette.create', function(event) {\n      var node = event.container;\n\n      // touch recognizer\n      var padRecognizer = createTouchRecognizer(node);\n\n      padRecognizer.on('panstart', function(event) {\n        log('palette', 'panstart', event);\n        palette.trigger('dragstart', event, true);\n      });\n\n      padRecognizer.on('press', function(event) {\n        log('palette', 'press', event);\n        palette.trigger('dragstart', event, true);\n      });\n\n      padRecognizer.on('tap', function(event) {\n        log('palette', 'tap', event);\n        palette.trigger('click', event);\n      });\n    });\n  }\n\n  eventBus.on('canvas.init', function(event) {\n    initEvents(event.svg);\n  });\n}\n\n\nTouchInteractionEvents.$inject = [\n  'injector',\n  'canvas',\n  'eventBus',\n  'elementRegistry',\n  'interactionEvents',\n  'touchFix'\n];\n","import InteractionEventsModule from '../interaction-events';\n\nimport TouchInteractionEvents from './TouchInteractionEvents';\nimport TouchFix from './TouchFix';\n\nexport default {\n  __depends__: [ InteractionEventsModule ],\n  __init__: [ 'touchInteractionEvents' ],\n  touchInteractionEvents: [ 'type', TouchInteractionEvents ],\n  touchFix: [ 'type', TouchFix ]\n};","import translate from './translate';\n\nexport default {\n  translate: [ 'value', translate ]\n};","/**\n * A simple translation stub to be used for multi-language support\n * in diagrams. Can be easily replaced with a more sophisticated\n * solution.\n *\n * @example\n *\n * // use it inside any diagram component by injecting `translate`.\n *\n * function MyService(translate) {\n *   alert(translate('HELLO {you}', { you: 'You!' }));\n * }\n *\n * @param {string} template to interpolate\n * @param {Object} [replacements] a map with substitutes\n *\n * @return {string} the translated string\n */\nexport default function translate(template, replacements) {\n\n  replacements = replacements || {};\n\n  return template.replace(/{([^}]+)}/g, function(_, key) {\n    return replacements[key] || '{' + key + '}';\n  });\n}","import {\n  getMid\n} from './LayoutUtil';\n\n\n/**\n * A base connection layouter implementation\n * that layouts the connection by directly connecting\n * mid(source) + mid(target).\n */\nexport default function BaseLayouter() {}\n\n\n/**\n * Return the new layouted waypoints for the given connection.\n *\n * The connection passed is still unchanged; you may figure out about\n * the new connection start / end via the layout hints provided.\n *\n * @param {djs.model.Connection} connection\n * @param {Object} [hints]\n * @param {Point} [hints.connectionStart]\n * @param {Point} [hints.connectionEnd]\n * @param {Point} [hints.source]\n * @param {Point} [hints.target]\n *\n * @return {Array<Point>} the layouted connection waypoints\n */\nBaseLayouter.prototype.layoutConnection = function(connection, hints) {\n\n  hints = hints || {};\n\n  return [\n    hints.connectionStart || getMid(hints.source || connection.source),\n    hints.connectionEnd || getMid(hints.target || connection.target)\n  ];\n};\n","import {\n  assign\n} from 'min-dash';\n\nimport {\n  getElementLineIntersection\n} from './LayoutUtil';\n\n\nfunction dockingToPoint(docking) {\n\n  // use the dockings actual point and\n  // retain the original docking\n  return assign({ original: docking.point.original || docking.point }, docking.actual);\n}\n\n\n/**\n * A {@link ConnectionDocking} that crops connection waypoints based on\n * the path(s) of the connection source and target.\n *\n * @param {djs.core.ElementRegistry} elementRegistry\n */\nexport default function CroppingConnectionDocking(elementRegistry, graphicsFactory) {\n  this._elementRegistry = elementRegistry;\n  this._graphicsFactory = graphicsFactory;\n}\n\nCroppingConnectionDocking.$inject = [ 'elementRegistry', 'graphicsFactory' ];\n\n\n/**\n * @inheritDoc ConnectionDocking#getCroppedWaypoints\n */\nCroppingConnectionDocking.prototype.getCroppedWaypoints = function(connection, source, target) {\n\n  source = source || connection.source;\n  target = target || connection.target;\n\n  var sourceDocking = this.getDockingPoint(connection, source, true),\n      targetDocking = this.getDockingPoint(connection, target);\n\n  var croppedWaypoints = connection.waypoints.slice(sourceDocking.idx + 1, targetDocking.idx);\n\n  croppedWaypoints.unshift(dockingToPoint(sourceDocking));\n  croppedWaypoints.push(dockingToPoint(targetDocking));\n\n  return croppedWaypoints;\n};\n\n/**\n * Return the connection docking point on the specified shape\n *\n * @inheritDoc ConnectionDocking#getDockingPoint\n */\nCroppingConnectionDocking.prototype.getDockingPoint = function(connection, shape, dockStart) {\n\n  var waypoints = connection.waypoints,\n      dockingIdx,\n      dockingPoint,\n      croppedPoint;\n\n  dockingIdx = dockStart ? 0 : waypoints.length - 1;\n  dockingPoint = waypoints[dockingIdx];\n\n  croppedPoint = this._getIntersection(shape, connection, dockStart);\n\n  return {\n    point: dockingPoint,\n    actual: croppedPoint || dockingPoint,\n    idx: dockingIdx\n  };\n};\n\n\n// helpers //////////////////////\n\nCroppingConnectionDocking.prototype._getIntersection = function(shape, connection, takeFirst) {\n\n  var shapePath = this._getShapePath(shape),\n      connectionPath = this._getConnectionPath(connection);\n\n  return getElementLineIntersection(shapePath, connectionPath, takeFirst);\n};\n\nCroppingConnectionDocking.prototype._getConnectionPath = function(connection) {\n  return this._graphicsFactory.getConnectionPath(connection);\n};\n\nCroppingConnectionDocking.prototype._getShapePath = function(shape) {\n  return this._graphicsFactory.getShapePath(shape);\n};\n\nCroppingConnectionDocking.prototype._getGfx = function(element) {\n  return this._elementRegistry.getGraphics(element);\n};\n","import {\n  isObject,\n  sortBy\n} from 'min-dash';\n\nimport {\n  pointDistance,\n  pointsOnLine\n} from '../util/Geometry';\n\nimport intersectPaths from 'path-intersection';\n\n\nexport function roundBounds(bounds) {\n  return {\n    x: Math.round(bounds.x),\n    y: Math.round(bounds.y),\n    width: Math.round(bounds.width),\n    height: Math.round(bounds.height)\n  };\n}\n\n\nexport function roundPoint(point) {\n\n  return {\n    x: Math.round(point.x),\n    y: Math.round(point.y)\n  };\n}\n\n\n/**\n * Convert the given bounds to a { top, left, bottom, right } descriptor.\n *\n * @param {Bounds|Point} bounds\n *\n * @return {Object}\n */\nexport function asTRBL(bounds) {\n  return {\n    top: bounds.y,\n    right: bounds.x + (bounds.width || 0),\n    bottom: bounds.y + (bounds.height || 0),\n    left: bounds.x\n  };\n}\n\n\n/**\n * Convert a { top, left, bottom, right } to an objects bounds.\n *\n * @param {Object} trbl\n *\n * @return {Bounds}\n */\nexport function asBounds(trbl) {\n  return {\n    x: trbl.left,\n    y: trbl.top,\n    width: trbl.right - trbl.left,\n    height: trbl.bottom - trbl.top\n  };\n}\n\n\n/**\n * Get the mid of the given bounds or point.\n *\n * @param {Bounds|Point} bounds\n *\n * @return {Point}\n */\nexport function getMid(bounds) {\n  return roundPoint({\n    x: bounds.x + (bounds.width || 0) / 2,\n    y: bounds.y + (bounds.height || 0) / 2\n  });\n}\n\n\n// orientation utils //////////////////////\n\n/**\n * Get orientation of the given rectangle with respect to\n * the reference rectangle.\n *\n * A padding (positive or negative) may be passed to influence\n * horizontal / vertical orientation and intersection.\n *\n * @param {Bounds} rect\n * @param {Bounds} reference\n * @param {Point|number} padding\n *\n * @return {string} the orientation; one of top, top-left, left, ..., bottom, right or intersect.\n */\nexport function getOrientation(rect, reference, padding) {\n\n  padding = padding || 0;\n\n  // make sure we can use an object, too\n  // for individual { x, y } padding\n  if (!isObject(padding)) {\n    padding = { x: padding, y: padding };\n  }\n\n\n  var rectOrientation = asTRBL(rect),\n      referenceOrientation = asTRBL(reference);\n\n  var top = rectOrientation.bottom + padding.y <= referenceOrientation.top,\n      right = rectOrientation.left - padding.x >= referenceOrientation.right,\n      bottom = rectOrientation.top - padding.y >= referenceOrientation.bottom,\n      left = rectOrientation.right + padding.x <= referenceOrientation.left;\n\n  var vertical = top ? 'top' : (bottom ? 'bottom' : null),\n      horizontal = left ? 'left' : (right ? 'right' : null);\n\n  if (horizontal && vertical) {\n    return vertical + '-' + horizontal;\n  } else {\n    return horizontal || vertical || 'intersect';\n  }\n}\n\n\n// intersection utils //////////////////////\n\n/**\n * Get intersection between an element and a line path.\n *\n * @param {PathDef} elementPath\n * @param {PathDef} linePath\n * @param {boolean} cropStart crop from start or end\n *\n * @return {Point}\n */\nexport function getElementLineIntersection(elementPath, linePath, cropStart) {\n\n  var intersections = getIntersections(elementPath, linePath);\n\n  // recognize intersections\n  // only one -> choose\n  // two close together -> choose first\n  // two or more distinct -> pull out appropriate one\n  // none -> ok (fallback to point itself)\n  if (intersections.length === 1) {\n    return roundPoint(intersections[0]);\n  } else if (intersections.length === 2 && pointDistance(intersections[0], intersections[1]) < 1) {\n    return roundPoint(intersections[0]);\n  } else if (intersections.length > 1) {\n\n    // sort by intersections based on connection segment +\n    // distance from start\n    intersections = sortBy(intersections, function(i) {\n      var distance = Math.floor(i.t2 * 100) || 1;\n\n      distance = 100 - distance;\n\n      distance = (distance < 10 ? '0' : '') + distance;\n\n      // create a sort string that makes sure we sort\n      // line segment ASC + line segment position DESC (for cropStart)\n      // line segment ASC + line segment position ASC (for cropEnd)\n      return i.segment2 + '#' + distance;\n    });\n\n    return roundPoint(intersections[cropStart ? 0 : intersections.length - 1]);\n  }\n\n  return null;\n}\n\n\nexport function getIntersections(a, b) {\n  return intersectPaths(a, b);\n}\n\n\nexport function filterRedundantWaypoints(waypoints) {\n\n  // alter copy of waypoints, not original\n  waypoints = waypoints.slice();\n\n  var idx = 0,\n      point,\n      previousPoint,\n      nextPoint;\n\n  while (waypoints[idx]) {\n    point = waypoints[idx];\n    previousPoint = waypoints[idx - 1];\n    nextPoint = waypoints[idx + 1];\n\n    if (pointDistance(point, nextPoint) === 0 ||\n        pointsOnLine(previousPoint, nextPoint, point)) {\n\n      // remove point, if overlapping with {nextPoint}\n      // or on line with {previousPoint} -> {point} -> {nextPoint}\n      waypoints.splice(idx, 1);\n    } else {\n      idx++;\n    }\n  }\n\n  return waypoints;\n}\n","import {\n  assign,\n  find,\n  isArray,\n  without\n} from 'min-dash';\n\nimport {\n  getOrientation,\n  getMid\n} from './LayoutUtil';\n\nimport {\n  pointInRect,\n  pointDistance,\n  pointsAligned,\n  pointsOnLine\n} from '../util/Geometry';\n\nvar MIN_SEGMENT_LENGTH = 20,\n    POINT_ORIENTATION_PADDING = 5;\n\nvar round = Math.round;\n\nvar INTERSECTION_THRESHOLD = 20,\n    ORIENTATION_THRESHOLD = {\n      'h:h': 20,\n      'v:v': 20,\n      'h:v': -10,\n      'v:h': -10\n    };\n\nfunction needsTurn(orientation, startDirection) {\n  return !{\n    t: /top/,\n    r: /right/,\n    b: /bottom/,\n    l: /left/,\n    h: /./,\n    v: /./\n  }[startDirection].test(orientation);\n}\n\nfunction canLayoutStraight(direction, targetOrientation) {\n  return {\n    t: /top/,\n    r: /right/,\n    b: /bottom/,\n    l: /left/,\n    h: /left|right/,\n    v: /top|bottom/\n  }[direction].test(targetOrientation);\n}\n\nfunction getSegmentBendpoints(a, b, directions) {\n  var orientation = getOrientation(b, a, POINT_ORIENTATION_PADDING);\n\n  var startDirection = directions.split(':')[0];\n\n  var xmid = round((b.x - a.x) / 2 + a.x),\n      ymid = round((b.y - a.y) / 2 + a.y);\n\n  var segmentEnd, segmentDirections;\n\n  var layoutStraight = canLayoutStraight(startDirection, orientation),\n      layoutHorizontal = /h|r|l/.test(startDirection),\n      layoutTurn = false;\n\n  var turnNextDirections = false;\n\n  if (layoutStraight) {\n    segmentEnd = layoutHorizontal ? { x: xmid, y: a.y } : { x: a.x, y: ymid };\n\n    segmentDirections = layoutHorizontal ? 'h:h' : 'v:v';\n  } else {\n    layoutTurn = needsTurn(orientation, startDirection);\n\n    segmentDirections = layoutHorizontal ? 'h:v' : 'v:h';\n\n    if (layoutTurn) {\n\n      if (layoutHorizontal) {\n        turnNextDirections = ymid === a.y;\n\n        segmentEnd = {\n          x: a.x + MIN_SEGMENT_LENGTH * (/l/.test(startDirection) ? -1 : 1),\n          y: turnNextDirections ? ymid + MIN_SEGMENT_LENGTH : ymid\n        };\n      } else {\n        turnNextDirections = xmid === a.x;\n\n        segmentEnd = {\n          x: turnNextDirections ? xmid + MIN_SEGMENT_LENGTH : xmid,\n          y: a.y + MIN_SEGMENT_LENGTH * (/t/.test(startDirection) ? -1 : 1)\n        };\n      }\n\n    } else {\n      segmentEnd = {\n        x: xmid,\n        y: ymid\n      };\n    }\n  }\n\n  return {\n    waypoints: getBendpoints(a, segmentEnd, segmentDirections).concat(segmentEnd),\n    directions:  segmentDirections,\n    turnNextDirections: turnNextDirections\n  };\n}\n\nfunction getStartSegment(a, b, directions) {\n  return getSegmentBendpoints(a, b, directions);\n}\n\nfunction getEndSegment(a, b, directions) {\n  var invertedSegment = getSegmentBendpoints(b, a, invertDirections(directions));\n\n  return {\n    waypoints: invertedSegment.waypoints.slice().reverse(),\n    directions: invertDirections(invertedSegment.directions),\n    turnNextDirections: invertedSegment.turnNextDirections\n  };\n}\n\nfunction getMidSegment(startSegment, endSegment) {\n\n  var startDirection = startSegment.directions.split(':')[1],\n      endDirection = endSegment.directions.split(':')[0];\n\n  if (startSegment.turnNextDirections) {\n    startDirection = startDirection == 'h' ? 'v' : 'h';\n  }\n\n  if (endSegment.turnNextDirections) {\n    endDirection = endDirection == 'h' ? 'v' : 'h';\n  }\n\n  var directions = startDirection + ':' + endDirection;\n\n  var bendpoints = getBendpoints(\n    startSegment.waypoints[startSegment.waypoints.length - 1],\n    endSegment.waypoints[0],\n    directions\n  );\n\n  return {\n    waypoints: bendpoints,\n    directions: directions\n  };\n}\n\nfunction invertDirections(directions) {\n  return directions.split(':').reverse().join(':');\n}\n\n/**\n * Handle simple layouts with maximum two bendpoints.\n */\nfunction getSimpleBendpoints(a, b, directions) {\n\n  var xmid = round((b.x - a.x) / 2 + a.x),\n      ymid = round((b.y - a.y) / 2 + a.y);\n\n  // one point, right or left from a\n  if (directions === 'h:v') {\n    return [ { x: b.x, y: a.y } ];\n  }\n\n  // one point, above or below a\n  if (directions === 'v:h') {\n    return [ { x: a.x, y: b.y } ];\n  }\n\n  // vertical segment between a and b\n  if (directions === 'h:h') {\n    return [\n      { x: xmid, y: a.y },\n      { x: xmid, y: b.y }\n    ];\n  }\n\n  // horizontal segment between a and b\n  if (directions === 'v:v') {\n    return [\n      { x: a.x, y: ymid },\n      { x: b.x, y: ymid }\n    ];\n  }\n\n  throw new Error('invalid directions: can only handle varians of [hv]:[hv]');\n}\n\n\n/**\n * Returns the mid points for a manhattan connection between two points.\n *\n * @example h:h (horizontal:horizontal)\n *\n * [a]----[x]\n *         |\n *        [x]----[b]\n *\n * @example h:v (horizontal:vertical)\n *\n * [a]----[x]\n *         |\n *        [b]\n *\n * @example h:r (horizontal:right)\n *\n * [a]----[x]\n *         |\n *    [b]-[x]\n *\n * @param  {Point} a\n * @param  {Point} b\n * @param  {string} directions\n *\n * @return {Array<Point>}\n */\nfunction getBendpoints(a, b, directions) {\n  directions = directions || 'h:h';\n\n  if (!isValidDirections(directions)) {\n    throw new Error(\n      'unknown directions: <' + directions + '>: ' +\n      'must be specified as <start>:<end> ' +\n      'with start/end in { h,v,t,r,b,l }'\n    );\n  }\n\n  // compute explicit directions, involving trbl dockings\n  // using a three segmented layouting algorithm\n  if (isExplicitDirections(directions)) {\n    var startSegment = getStartSegment(a, b, directions),\n        endSegment = getEndSegment(a, b, directions),\n        midSegment = getMidSegment(startSegment, endSegment);\n\n    return [].concat(\n      startSegment.waypoints,\n      midSegment.waypoints,\n      endSegment.waypoints\n    );\n  }\n\n  // handle simple [hv]:[hv] cases that can be easily computed\n  return getSimpleBendpoints(a, b, directions);\n}\n\n/**\n * Create a connection between the two points according\n * to the manhattan layout (only horizontal and vertical) edges.\n *\n * @param {Point} a\n * @param {Point} b\n *\n * @param {string} [directions='h:h'] specifies manhattan directions for each point as {adirection}:{bdirection}.\n                   A directionfor a point is either `h` (horizontal) or `v` (vertical)\n *\n * @return {Array<Point>}\n */\nexport function connectPoints(a, b, directions) {\n\n  var points = getBendpoints(a, b, directions);\n\n  points.unshift(a);\n  points.push(b);\n\n  return withoutRedundantPoints(points);\n}\n\n\n/**\n * Connect two rectangles using a manhattan layouted connection.\n *\n * @param {Bounds} source source rectangle\n * @param {Bounds} target target rectangle\n * @param {Point} [start] source docking\n * @param {Point} [end] target docking\n *\n * @param {Object} [hints]\n * @param {string} [hints.preserveDocking=source] preserve docking on selected side\n * @param {Array<string>} [hints.preferredLayouts]\n * @param {Point|boolean} [hints.connectionStart] whether the start changed\n * @param {Point|boolean} [hints.connectionEnd] whether the end changed\n *\n * @return {Array<Point>} connection points\n */\nexport function connectRectangles(source, target, start, end, hints) {\n\n  var preferredLayouts = hints && hints.preferredLayouts || [];\n\n  var preferredLayout = without(preferredLayouts, 'straight')[0] || 'h:h';\n\n  var threshold = ORIENTATION_THRESHOLD[preferredLayout] || 0;\n\n  var orientation = getOrientation(source, target, threshold);\n\n  var directions = getDirections(orientation, preferredLayout);\n\n  start = start || getMid(source);\n  end = end || getMid(target);\n\n  var directionSplit = directions.split(':');\n\n  // compute actual docking points for start / end\n  // this ensures we properly layout only parts of the\n  // connection that lies in between the two rectangles\n  var startDocking = getDockingPoint(start, source, directionSplit[0], invertOrientation(orientation)),\n      endDocking = getDockingPoint(end, target, directionSplit[1], orientation);\n\n  return connectPoints(startDocking, endDocking, directions);\n}\n\n\n/**\n * Repair the connection between two rectangles, of which one has been updated.\n *\n * @param {Bounds} source\n * @param {Bounds} target\n * @param {Point} [start]\n * @param {Point} [end]\n * @param {Array<Point>} [waypoints]\n * @param {Object} [hints]\n * @param {Array<string>} [hints.preferredLayouts] list of preferred layouts\n * @param {boolean} [hints.connectionStart]\n * @param {boolean} [hints.connectionEnd]\n *\n * @return {Array<Point>} repaired waypoints\n */\nexport function repairConnection(source, target, start, end, waypoints, hints) {\n\n  if (isArray(start)) {\n    waypoints = start;\n    hints = end;\n\n    start = getMid(source);\n    end = getMid(target);\n  }\n\n  hints = assign({ preferredLayouts: [] }, hints);\n  waypoints = waypoints || [];\n\n  var preferredLayouts = hints.preferredLayouts,\n      preferStraight = preferredLayouts.indexOf('straight') !== -1,\n      repairedWaypoints;\n\n  // just layout non-existing or simple connections\n  // attempt to render straight lines, if required\n\n  // attempt to layout a straight line\n  repairedWaypoints = preferStraight && tryLayoutStraight(source, target, start, end, hints);\n\n  if (repairedWaypoints) {\n    return repairedWaypoints;\n  }\n\n  // try to layout from end\n  repairedWaypoints = hints.connectionEnd && tryRepairConnectionEnd(target, source, end, waypoints);\n\n  if (repairedWaypoints) {\n    return repairedWaypoints;\n  }\n\n  // try to layout from start\n  repairedWaypoints = hints.connectionStart && tryRepairConnectionStart(source, target, start, waypoints);\n\n  if (repairedWaypoints) {\n    return repairedWaypoints;\n  }\n\n  // or whether nothing seems to have changed\n  if (!hints.connectionStart && !hints.connectionEnd && waypoints && waypoints.length) {\n    return waypoints;\n  }\n\n  // simply reconnect if nothing else worked\n  return connectRectangles(source, target, start, end, hints);\n}\n\n\nfunction inRange(a, start, end) {\n  return a >= start && a <= end;\n}\n\nfunction isInRange(axis, a, b) {\n  var size = {\n    x: 'width',\n    y: 'height'\n  };\n\n  return inRange(a[axis], b[axis], b[axis] + b[size[axis]]);\n}\n\n/**\n * Layout a straight connection\n *\n * @param {Bounds} source\n * @param {Bounds} target\n * @param {Point} start\n * @param {Point} end\n * @param {Object} [hints]\n *\n * @return {Array<Point>|null} waypoints if straight layout worked\n */\nexport function tryLayoutStraight(source, target, start, end, hints) {\n  var axis = {},\n      primaryAxis,\n      orientation;\n\n  orientation = getOrientation(source, target);\n\n  // only layout a straight connection if shapes are\n  // horizontally or vertically aligned\n  if (!/^(top|bottom|left|right)$/.test(orientation)) {\n    return null;\n  }\n\n  if (/top|bottom/.test(orientation)) {\n    primaryAxis = 'x';\n  }\n\n  if (/left|right/.test(orientation)) {\n    primaryAxis = 'y';\n  }\n\n  if (hints.preserveDocking === 'target') {\n\n    if (!isInRange(primaryAxis, end, source)) {\n      return null;\n    }\n\n    axis[primaryAxis] = end[primaryAxis];\n\n    return [\n      {\n        x: axis.x !== undefined ? axis.x : start.x,\n        y: axis.y !== undefined ? axis.y : start.y,\n        original: {\n          x: axis.x !== undefined ? axis.x : start.x,\n          y: axis.y !== undefined ? axis.y : start.y\n        }\n      },\n      {\n        x: end.x,\n        y: end.y\n      }\n    ];\n\n  } else {\n\n    if (!isInRange(primaryAxis, start, target)) {\n      return null;\n    }\n\n    axis[primaryAxis] = start[primaryAxis];\n\n    return [\n      {\n        x: start.x,\n        y: start.y\n      },\n      {\n        x: axis.x !== undefined ? axis.x : end.x,\n        y: axis.y !== undefined ? axis.y : end.y,\n        original: {\n          x: axis.x !== undefined ? axis.x : end.x,\n          y: axis.y !== undefined ? axis.y : end.y\n        }\n      }\n    ];\n  }\n\n}\n\n/**\n * Repair a connection from start.\n *\n * @param {Bounds} moved\n * @param {Bounds} other\n * @param {Point} newDocking\n * @param {Array<Point>} points originalPoints from moved to other\n *\n * @return {Array<Point>|null} the repaired points between the two rectangles\n */\nfunction tryRepairConnectionStart(moved, other, newDocking, points) {\n  return _tryRepairConnectionSide(moved, other, newDocking, points);\n}\n\n/**\n * Repair a connection from end.\n *\n * @param {Bounds} moved\n * @param {Bounds} other\n * @param {Point} newDocking\n * @param {Array<Point>} points originalPoints from moved to other\n *\n * @return {Array<Point>|null} the repaired points between the two rectangles\n */\nfunction tryRepairConnectionEnd(moved, other, newDocking, points) {\n  var waypoints = points.slice().reverse();\n\n  waypoints = _tryRepairConnectionSide(moved, other, newDocking, waypoints);\n\n  return waypoints ? waypoints.reverse() : null;\n}\n\n/**\n * Repair a connection from one side that moved.\n *\n * @param {Bounds} moved\n * @param {Bounds} other\n * @param {Point} newDocking\n * @param {Array<Point>} points originalPoints from moved to other\n *\n * @return {Array<Point>} the repaired points between the two rectangles\n */\nfunction _tryRepairConnectionSide(moved, other, newDocking, points) {\n\n  function needsRelayout(points) {\n    if (points.length < 3) {\n      return true;\n    }\n\n    if (points.length > 4) {\n      return false;\n    }\n\n    // relayout if two points overlap\n    // this is most likely due to\n    return !!find(points, function(p, idx) {\n      var q = points[idx - 1];\n\n      return q && pointDistance(p, q) < 3;\n    });\n  }\n\n  function repairBendpoint(candidate, oldPeer, newPeer) {\n\n    var alignment = pointsAligned(oldPeer, candidate);\n\n    switch (alignment) {\n    case 'v':\n\n      // repair horizontal alignment\n      return { x: newPeer.x, y: candidate.y };\n    case 'h':\n\n      // repair vertical alignment\n      return { x: candidate.x, y: newPeer.y };\n    }\n\n    return { x: candidate.x, y: candidate. y };\n  }\n\n  function removeOverlapping(points, a, b) {\n    var i;\n\n    for (i = points.length - 2; i !== 0; i--) {\n\n      // intersects (?) break, remove all bendpoints up to this one and relayout\n      if (pointInRect(points[i], a, INTERSECTION_THRESHOLD) ||\n          pointInRect(points[i], b, INTERSECTION_THRESHOLD)) {\n\n        // return sliced old connection\n        return points.slice(i);\n      }\n    }\n\n    return points;\n  }\n\n  // (0) only repair what has layoutable bendpoints\n\n  // (1) if only one bendpoint and on shape moved onto other shapes axis\n  //     (horizontally / vertically), relayout\n\n  if (needsRelayout(points)) {\n    return null;\n  }\n\n  var oldDocking = points[0],\n      newPoints = points.slice(),\n      slicedPoints;\n\n  // (2) repair only last line segment and only if it was layouted before\n\n  newPoints[0] = newDocking;\n  newPoints[1] = repairBendpoint(newPoints[1], oldDocking, newDocking);\n\n\n  // (3) if shape intersects with any bendpoint after repair,\n  //     remove all segments up to this bendpoint and repair from there\n  slicedPoints = removeOverlapping(newPoints, moved, other);\n\n  if (slicedPoints !== newPoints) {\n    newPoints = _tryRepairConnectionSide(moved, other, newDocking, slicedPoints);\n  }\n\n  // (4) do NOT repair if repaired bendpoints are aligned\n  if (newPoints && pointsAligned(newPoints)) {\n    return null;\n  }\n\n  return newPoints;\n}\n\n\n/**\n * Returns the manhattan directions connecting two rectangles\n * with the given orientation.\n *\n * Will always return the default layout, if it is specific\n * regarding sides already (trbl).\n *\n * @example\n *\n * getDirections('top'); // -> 'v:v'\n * getDirections('intersect'); // -> 't:t'\n *\n * getDirections('top-right', 'v:h'); // -> 'v:h'\n * getDirections('top-right', 'h:h'); // -> 'h:h'\n *\n *\n * @param {string} orientation\n * @param {string} defaultLayout\n *\n * @return {string}\n */\nfunction getDirections(orientation, defaultLayout) {\n\n  // don't override specific trbl directions\n  if (isExplicitDirections(defaultLayout)) {\n    return defaultLayout;\n  }\n\n  switch (orientation) {\n  case 'intersect':\n    return 't:t';\n\n  case 'top':\n  case 'bottom':\n    return 'v:v';\n\n  case 'left':\n  case 'right':\n    return 'h:h';\n\n  // 'top-left'\n  // 'top-right'\n  // 'bottom-left'\n  // 'bottom-right'\n  default:\n    return defaultLayout;\n  }\n}\n\nfunction isValidDirections(directions) {\n  return directions && /^h|v|t|r|b|l:h|v|t|r|b|l$/.test(directions);\n}\n\nfunction isExplicitDirections(directions) {\n  return directions && /t|r|b|l/.test(directions);\n}\n\nfunction invertOrientation(orientation) {\n  return {\n    'top': 'bottom',\n    'bottom': 'top',\n    'left': 'right',\n    'right': 'left',\n    'top-left': 'bottom-right',\n    'bottom-right': 'top-left',\n    'top-right': 'bottom-left',\n    'bottom-left': 'top-right',\n  }[orientation];\n}\n\nfunction getDockingPoint(point, rectangle, dockingDirection, targetOrientation) {\n\n  // ensure we end up with a specific docking direction\n  // based on the targetOrientation, if <h|v> is being passed\n\n  if (dockingDirection === 'h') {\n    dockingDirection = /left/.test(targetOrientation) ? 'l' : 'r';\n  }\n\n  if (dockingDirection === 'v') {\n    dockingDirection = /top/.test(targetOrientation) ? 't' : 'b';\n  }\n\n  if (dockingDirection === 't') {\n    return { original: point, x: point.x, y: rectangle.y };\n  }\n\n  if (dockingDirection === 'r') {\n    return { original: point, x: rectangle.x + rectangle.width, y: point.y };\n  }\n\n  if (dockingDirection === 'b') {\n    return { original: point, x: point.x, y: rectangle.y + rectangle.height };\n  }\n\n  if (dockingDirection === 'l') {\n    return { original: point, x: rectangle.x, y: point.y };\n  }\n\n  throw new Error('unexpected dockingDirection: <' + dockingDirection + '>');\n}\n\n\n/**\n * Return list of waypoints with redundant ones filtered out.\n *\n * @example\n *\n * Original points:\n *\n *   [x] ----- [x] ------ [x]\n *                         |\n *                        [x] ----- [x] - [x]\n *\n * Filtered:\n *\n *   [x] ---------------- [x]\n *                         |\n *                        [x] ----------- [x]\n *\n * @param  {Array<Point>} waypoints\n *\n * @return {Array<Point>}\n */\nexport function withoutRedundantPoints(waypoints) {\n  return waypoints.reduce(function(points, p, idx) {\n\n    var previous = points[points.length - 1],\n        next = waypoints[idx + 1];\n\n    if (!pointsOnLine(previous, next, p, 0)) {\n      points.push(p);\n    }\n\n    return points;\n  }, []);\n}\n","import { assign } from 'min-dash';\nimport inherits from 'inherits';\n\nimport Refs from 'object-refs';\n\nvar parentRefs = new Refs({ name: 'children', enumerable: true, collection: true }, { name: 'parent' }),\n    labelRefs = new Refs({ name: 'labels', enumerable: true, collection: true }, { name: 'labelTarget' }),\n    attacherRefs = new Refs({ name: 'attachers', collection: true }, { name: 'host' }),\n    outgoingRefs = new Refs({ name: 'outgoing', collection: true }, { name: 'source' }),\n    incomingRefs = new Refs({ name: 'incoming', collection: true }, { name: 'target' });\n\n/**\n * @namespace djs.model\n */\n\n/**\n * @memberOf djs.model\n */\n\n/**\n * The basic graphical representation\n *\n * @class\n *\n * @abstract\n */\nexport function Base() {\n\n  /**\n   * The object that backs up the shape\n   *\n   * @name Base#businessObject\n   * @type Object\n   */\n  Object.defineProperty(this, 'businessObject', {\n    writable: true\n  });\n\n\n  /**\n   * Single label support, will mapped to multi label array\n   *\n   * @name Base#label\n   * @type Object\n   */\n  Object.defineProperty(this, 'label', {\n    get: function() {\n      return this.labels[0];\n    },\n    set: function(newLabel) {\n\n      var label = this.label,\n          labels = this.labels;\n\n      if (!newLabel && label) {\n        labels.remove(label);\n      } else {\n        labels.add(newLabel, 0);\n      }\n    }\n  });\n\n  /**\n   * The parent shape\n   *\n   * @name Base#parent\n   * @type Shape\n   */\n  parentRefs.bind(this, 'parent');\n\n  /**\n   * The list of labels\n   *\n   * @name Base#labels\n   * @type Label\n   */\n  labelRefs.bind(this, 'labels');\n\n  /**\n   * The list of outgoing connections\n   *\n   * @name Base#outgoing\n   * @type Array<Connection>\n   */\n  outgoingRefs.bind(this, 'outgoing');\n\n  /**\n   * The list of incoming connections\n   *\n   * @name Base#incoming\n   * @type Array<Connection>\n   */\n  incomingRefs.bind(this, 'incoming');\n}\n\n\n/**\n * A graphical object\n *\n * @class\n * @constructor\n *\n * @extends Base\n */\nexport function Shape() {\n  Base.call(this);\n\n  /**\n   * Indicates frame shapes\n   *\n   * @name Shape#isFrame\n   * @type boolean\n   */\n\n  /**\n   * The list of children\n   *\n   * @name Shape#children\n   * @type Array<Base>\n   */\n  parentRefs.bind(this, 'children');\n\n  /**\n   * @name Shape#host\n   * @type Shape\n   */\n  attacherRefs.bind(this, 'host');\n\n  /**\n   * @name Shape#attachers\n   * @type Shape\n   */\n  attacherRefs.bind(this, 'attachers');\n}\n\ninherits(Shape, Base);\n\n\n/**\n * A root graphical object\n *\n * @class\n * @constructor\n *\n * @extends Shape\n */\nexport function Root() {\n  Shape.call(this);\n}\n\ninherits(Root, Shape);\n\n\n/**\n * A label for an element\n *\n * @class\n * @constructor\n *\n * @extends Shape\n */\nexport function Label() {\n  Shape.call(this);\n\n  /**\n   * The labeled element\n   *\n   * @name Label#labelTarget\n   * @type Base\n   */\n  labelRefs.bind(this, 'labelTarget');\n}\n\ninherits(Label, Shape);\n\n\n/**\n * A connection between two elements\n *\n * @class\n * @constructor\n *\n * @extends Base\n */\nexport function Connection() {\n  Base.call(this);\n\n  /**\n   * The element this connection originates from\n   *\n   * @name Connection#source\n   * @type Base\n   */\n  outgoingRefs.bind(this, 'source');\n\n  /**\n   * The element this connection points to\n   *\n   * @name Connection#target\n   * @type Base\n   */\n  incomingRefs.bind(this, 'target');\n}\n\ninherits(Connection, Base);\n\n\nvar types = {\n  connection: Connection,\n  shape: Shape,\n  label: Label,\n  root: Root\n};\n\n/**\n * Creates a new model element of the specified type\n *\n * @method create\n *\n * @example\n *\n * var shape1 = Model.create('shape', { x: 10, y: 10, width: 100, height: 100 });\n * var shape2 = Model.create('shape', { x: 210, y: 210, width: 100, height: 100 });\n *\n * var connection = Model.create('connection', { waypoints: [ { x: 110, y: 55 }, {x: 210, y: 55 } ] });\n *\n * @param  {string} type lower-cased model name\n * @param  {Object} attrs attributes to initialize the new model instance with\n *\n * @return {Base} the new model instance\n */\nexport function create(type, attrs) {\n  var Type = types[type];\n  if (!Type) {\n    throw new Error('unknown type: <' + type + '>');\n  }\n  return assign(new Type(), attrs);\n}","import { assign } from 'min-dash';\n\n\nvar DEFAULT_CONFIG = {\n  moveSpeed: 50,\n  moveSpeedAccelerated: 200\n};\n\n\n/**\n * A feature that allows users to move the canvas using the keyboard.\n *\n * @param {Object} config\n * @param {number} [config.moveSpeed=50]\n * @param {number} [config.moveSpeedAccelerated=200]\n * @param {Keyboard} keyboard\n * @param {Canvas} canvas\n */\nexport default function KeyboardMove(\n    config,\n    keyboard,\n    canvas\n) {\n\n  var self = this;\n\n  this._config = assign({}, DEFAULT_CONFIG, config || {});\n\n  keyboard.addListener(arrowsListener);\n\n\n  function arrowsListener(context) {\n\n    var event = context.keyEvent,\n        config = self._config;\n\n    if (!keyboard.isCmd(event)) {\n      return;\n    }\n\n    if (keyboard.isKey([\n      'ArrowLeft', 'Left',\n      'ArrowUp', 'Up',\n      'ArrowDown', 'Down',\n      'ArrowRight', 'Right'\n    ], event)) {\n\n      var speed = (\n        keyboard.isShift(event) ?\n          config.moveSpeedAccelerated :\n          config.moveSpeed\n      );\n\n      var direction;\n\n      switch (event.key) {\n      case 'ArrowLeft':\n      case 'Left':\n        direction = 'left';\n        break;\n      case 'ArrowUp':\n      case 'Up':\n        direction = 'up';\n        break;\n      case 'ArrowRight':\n      case 'Right':\n        direction = 'right';\n        break;\n      case 'ArrowDown':\n      case 'Down':\n        direction = 'down';\n        break;\n      }\n\n      self.moveCanvas({\n        speed: speed,\n        direction: direction\n      });\n\n      return true;\n    }\n  }\n\n  this.moveCanvas = function(opts) {\n\n    var dx = 0,\n        dy = 0,\n        speed = opts.speed;\n\n    var actualSpeed = speed / Math.min(Math.sqrt(canvas.viewbox().scale), 1);\n\n    switch (opts.direction) {\n    case 'left': // Left\n      dx = actualSpeed;\n      break;\n    case 'up': // Up\n      dy = actualSpeed;\n      break;\n    case 'right': // Right\n      dx = -actualSpeed;\n      break;\n    case 'down': // Down\n      dy = -actualSpeed;\n      break;\n    }\n\n    canvas.scroll({\n      dx: dx,\n      dy: dy\n    });\n  };\n\n}\n\n\nKeyboardMove.$inject = [\n  'config.keyboardMove',\n  'keyboard',\n  'canvas'\n];\n","import KeyboardModule from '../../features/keyboard';\n\nimport KeyboardMove from './KeyboardMove';\n\n\nexport default {\n  __depends__: [\n    KeyboardModule\n  ],\n  __init__: [ 'keyboardMove' ],\n  keyboardMove: [ 'type', KeyboardMove ]\n};","import {\n  set as cursorSet,\n  unset as cursorUnset\n} from '../../util/Cursor';\n\nimport {\n  install as installClickTrap\n} from '../../util/ClickTrap';\n\nimport {\n  delta as deltaPos\n} from '../../util/PositionUtil';\n\nimport {\n  event as domEvent,\n  closest as domClosest\n} from 'min-dom';\n\nimport {\n  toPoint\n} from '../../util/Event';\n\n\nvar THRESHOLD = 15;\n\n\n/**\n * Move the canvas via mouse.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function MoveCanvas(eventBus, canvas) {\n\n  var context;\n\n\n  // listen for move on element mouse down;\n  // allow others to hook into the event before us though\n  // (dragging / element moving will do this)\n  eventBus.on('element.mousedown', 500, function(e) {\n    return handleStart(e.originalEvent);\n  });\n\n\n  function handleMove(event) {\n\n    var start = context.start,\n        button = context.button,\n        position = toPoint(event),\n        delta = deltaPos(position, start);\n\n    if (!context.dragging && length(delta) > THRESHOLD) {\n      context.dragging = true;\n\n      if (button === 0) {\n        installClickTrap(eventBus);\n      }\n\n      cursorSet('grab');\n    }\n\n    if (context.dragging) {\n\n      var lastPosition = context.last || context.start;\n\n      delta = deltaPos(position, lastPosition);\n\n      canvas.scroll({\n        dx: delta.x,\n        dy: delta.y\n      });\n\n      context.last = position;\n    }\n\n    // prevent select\n    event.preventDefault();\n  }\n\n\n  function handleEnd(event) {\n    domEvent.unbind(document, 'mousemove', handleMove);\n    domEvent.unbind(document, 'mouseup', handleEnd);\n\n    context = null;\n\n    cursorUnset();\n  }\n\n  function handleStart(event) {\n\n    // event is already handled by '.djs-draggable'\n    if (domClosest(event.target, '.djs-draggable')) {\n      return;\n    }\n\n    var button = event.button;\n\n    // reject right mouse button or modifier key\n    if (button >= 2 || event.ctrlKey || event.shiftKey || event.altKey) {\n      return;\n    }\n\n    context = {\n      button: button,\n      start: toPoint(event)\n    };\n\n    domEvent.bind(document, 'mousemove', handleMove);\n    domEvent.bind(document, 'mouseup', handleEnd);\n\n    // we've handled the event\n    return true;\n  }\n\n  this.isActive = function() {\n    return !!context;\n  };\n\n}\n\n\nMoveCanvas.$inject = [\n  'eventBus',\n  'canvas'\n];\n\n\n\n// helpers ///////\n\nfunction length(point) {\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n}\n","import MoveCanvas from './MoveCanvas';\n\nexport default {\n  __init__: [ 'moveCanvas' ],\n  moveCanvas: [ 'type', MoveCanvas ]\n};","import TouchModule from '../../features/touch';\n\nexport default {\n  __depends__: [\n    TouchModule\n  ]\n};","import {\n  event as domEvent,\n  closest as domClosest\n} from 'min-dom';\n\nimport {\n  getStepSize,\n  cap\n} from './ZoomUtil';\n\nimport {\n  log10\n} from '../../util/Math';\n\nimport {\n  bind\n} from 'min-dash';\n\nvar sign = Math.sign || function(n) {\n  return n >= 0 ? 1 : -1;\n};\n\nvar RANGE = { min: 0.2, max: 4 },\n    NUM_STEPS = 10;\n\nvar DELTA_THRESHOLD = 0.1;\n\nvar DEFAULT_SCALE = 0.75;\n\n/**\n * An implementation of zooming and scrolling within the\n * {@link Canvas} via the mouse wheel.\n *\n * Mouse wheel zooming / scrolling may be disabled using\n * the {@link toggle(enabled)} method.\n *\n * @param {Object} [config]\n * @param {boolean} [config.enabled=true] default enabled state\n * @param {number} [config.scale=.75] scroll sensivity\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function ZoomScroll(config, eventBus, canvas) {\n\n  config = config || {};\n\n  this._enabled = false;\n\n  this._canvas = canvas;\n  this._container = canvas._container;\n\n  this._handleWheel = bind(this._handleWheel, this);\n\n  this._totalDelta = 0;\n  this._scale = config.scale || DEFAULT_SCALE;\n\n  var self = this;\n\n  eventBus.on('canvas.init', function(e) {\n    self._init(config.enabled !== false);\n  });\n}\n\nZoomScroll.$inject = [\n  'config.zoomScroll',\n  'eventBus',\n  'canvas'\n];\n\nZoomScroll.prototype.scroll = function scroll(delta) {\n  this._canvas.scroll(delta);\n};\n\n\nZoomScroll.prototype.reset = function reset() {\n  this._canvas.zoom('fit-viewport');\n};\n\n/**\n * Zoom depending on delta.\n *\n * @param {number} delta\n * @param {Object} position\n */\nZoomScroll.prototype.zoom = function zoom(delta, position) {\n\n  // zoom with half the step size of stepZoom\n  var stepSize = getStepSize(RANGE, NUM_STEPS * 2);\n\n  // add until threshold reached\n  this._totalDelta += delta;\n\n  if (Math.abs(this._totalDelta) > DELTA_THRESHOLD) {\n    this._zoom(delta, position, stepSize);\n\n    // reset\n    this._totalDelta = 0;\n  }\n};\n\n\nZoomScroll.prototype._handleWheel = function handleWheel(event) {\n\n  // event is already handled by '.djs-scrollable'\n  if (domClosest(event.target, '.djs-scrollable', true)) {\n    return;\n  }\n\n  var element = this._container;\n\n  event.preventDefault();\n\n  // pinch to zoom is mapped to wheel + ctrlKey = true\n  // in modern browsers (!)\n\n  var isZoom = event.ctrlKey;\n\n  var isHorizontalScroll = event.shiftKey;\n\n  var factor = -1 * this._scale,\n      delta;\n\n  if (isZoom) {\n    factor *= event.deltaMode === 0 ? 0.020 : 0.32;\n  } else {\n    factor *= event.deltaMode === 0 ? 1.0 : 16.0;\n  }\n\n  if (isZoom) {\n    var elementRect = element.getBoundingClientRect();\n\n    var offset = {\n      x: event.clientX - elementRect.left,\n      y: event.clientY - elementRect.top\n    };\n\n    delta = (\n      Math.sqrt(\n        Math.pow(event.deltaY, 2) +\n        Math.pow(event.deltaX, 2)\n      ) * sign(event.deltaY) * factor\n    );\n\n    // zoom in relative to diagram {x,y} coordinates\n    this.zoom(delta, offset);\n  } else {\n\n    if (isHorizontalScroll) {\n      delta = {\n        dx: factor * event.deltaY,\n        dy: 0\n      };\n    } else {\n      delta = {\n        dx: factor * event.deltaX,\n        dy: factor * event.deltaY\n      };\n    }\n\n    this.scroll(delta);\n  }\n};\n\n/**\n * Zoom with fixed step size.\n *\n * @param {number} delta - Zoom delta (1 for zooming in, -1 for out).\n * @param {Object} position\n */\nZoomScroll.prototype.stepZoom = function stepZoom(delta, position) {\n\n  var stepSize = getStepSize(RANGE, NUM_STEPS);\n\n  this._zoom(delta, position, stepSize);\n};\n\n\n/**\n * Zoom in/out given a step size.\n *\n * @param {number} delta\n * @param {Object} position\n * @param {number} stepSize\n */\nZoomScroll.prototype._zoom = function(delta, position, stepSize) {\n  var canvas = this._canvas;\n\n  var direction = delta > 0 ? 1 : -1;\n\n  var currentLinearZoomLevel = log10(canvas.zoom());\n\n  // snap to a proximate zoom step\n  var newLinearZoomLevel = Math.round(currentLinearZoomLevel / stepSize) * stepSize;\n\n  // increase or decrease one zoom step in the given direction\n  newLinearZoomLevel += stepSize * direction;\n\n  // calculate the absolute logarithmic zoom level based on the linear zoom level\n  // (e.g. 2 for an absolute x2 zoom)\n  var newLogZoomLevel = Math.pow(10, newLinearZoomLevel);\n\n  canvas.zoom(cap(RANGE, newLogZoomLevel), position);\n};\n\n\n/**\n * Toggle the zoom scroll ability via mouse wheel.\n *\n * @param  {boolean} [newEnabled] new enabled state\n */\nZoomScroll.prototype.toggle = function toggle(newEnabled) {\n\n  var element = this._container;\n  var handleWheel = this._handleWheel;\n\n  var oldEnabled = this._enabled;\n\n  if (typeof newEnabled === 'undefined') {\n    newEnabled = !oldEnabled;\n  }\n\n  // only react on actual changes\n  if (oldEnabled !== newEnabled) {\n\n    // add or remove wheel listener based on\n    // changed enabled state\n    domEvent[newEnabled ? 'bind' : 'unbind'](element, 'wheel', handleWheel, false);\n  }\n\n  this._enabled = newEnabled;\n\n  return newEnabled;\n};\n\n\nZoomScroll.prototype._init = function(newEnabled) {\n  this.toggle(newEnabled);\n};\n","import {\n  log10\n} from '../../util/Math';\n\n/**\n * Get step size for given range and number of steps.\n *\n * @param {Object} range\n * @param {number} range.min\n * @param {number} range.max\n */\nexport function getStepSize(range, steps) {\n\n  var minLinearRange = log10(range.min),\n      maxLinearRange = log10(range.max);\n\n  var absoluteLinearRange = Math.abs(minLinearRange) + Math.abs(maxLinearRange);\n\n  return absoluteLinearRange / steps;\n}\n\nexport function cap(range, scale) {\n  return Math.max(range.min, Math.min(range.max, scale));\n}\n","import ZoomScroll from './ZoomScroll';\n\nexport default {\n  __init__: [ 'zoomScroll' ],\n  zoomScroll: [ 'type', ZoomScroll ]\n};","import {\n  asTRBL,\n  getOrientation,\n  roundPoint\n} from '../layout/LayoutUtil';\n\nimport {\n  center,\n  delta\n} from './PositionUtil';\n\n\n/**\n * Calculates the absolute point relative to the new element's position\n *\n * @param {point} point [absolute]\n * @param {bounds} oldBounds\n * @param {bounds} newBounds\n *\n * @return {point} point [absolute]\n */\nexport function getNewAttachPoint(point, oldBounds, newBounds) {\n  var oldCenter = center(oldBounds),\n      newCenter = center(newBounds),\n      oldDelta = delta(point, oldCenter);\n\n  var newDelta = {\n    x: oldDelta.x * (newBounds.width / oldBounds.width),\n    y: oldDelta.y * (newBounds.height / oldBounds.height)\n  };\n\n  return roundPoint({\n    x: newCenter.x + newDelta.x,\n    y: newCenter.y + newDelta.y\n  });\n}\n\n\n/**\n * Calculates the shape's delta relative to a new position\n * of a certain element's bounds\n *\n * @param {djs.model.Shape} point [absolute]\n * @param {bounds} oldBounds\n * @param {bounds} newBounds\n *\n * @return {delta} delta\n */\nexport function getNewAttachShapeDelta(shape, oldBounds, newBounds) {\n  var shapeCenter = center(shape),\n      oldCenter = center(oldBounds),\n      newCenter = center(newBounds),\n      shapeDelta = delta(shape, shapeCenter),\n      oldCenterDelta = delta(shapeCenter, oldCenter),\n      stickyPositionDelta = getStickyPositionDelta(shapeCenter, oldBounds, newBounds);\n\n  if (stickyPositionDelta) {\n    return stickyPositionDelta;\n  }\n\n  var newCenterDelta = {\n    x: oldCenterDelta.x * (newBounds.width / oldBounds.width),\n    y: oldCenterDelta.y * (newBounds.height / oldBounds.height)\n  };\n\n  var newShapeCenter = {\n    x: newCenter.x + newCenterDelta.x,\n    y: newCenter.y + newCenterDelta.y\n  };\n\n  return roundPoint({\n    x: newShapeCenter.x + shapeDelta.x - shape.x,\n    y: newShapeCenter.y + shapeDelta.y - shape.y\n  });\n}\n\nfunction getStickyPositionDelta(oldShapeCenter, oldBounds, newBounds) {\n  var oldTRBL = asTRBL(oldBounds),\n      newTRBL = asTRBL(newBounds);\n\n  if (isMoved(oldTRBL, newTRBL)) {\n    return null;\n  }\n\n  var oldOrientation = getOrientation(oldBounds, oldShapeCenter),\n      stickyPositionDelta,\n      newShapeCenter,\n      newOrientation;\n\n  if (oldOrientation === 'top') {\n    stickyPositionDelta = {\n      x: 0,\n      y: newTRBL.bottom - oldTRBL.bottom\n    };\n  } else if (oldOrientation === 'bottom') {\n    stickyPositionDelta = {\n      x: 0,\n      y: newTRBL.top - oldTRBL.top\n    };\n  } else if (oldOrientation === 'right') {\n    stickyPositionDelta = {\n      x: newTRBL.left - oldTRBL.left,\n      y: 0\n    };\n  } else if (oldOrientation === 'left') {\n    stickyPositionDelta = {\n      x: newTRBL.right - oldTRBL.right,\n      y: 0\n    };\n  } else {\n\n    // fallback to proportional movement for corner-placed attachments\n    return null;\n  }\n\n  newShapeCenter = {\n    x: oldShapeCenter.x + stickyPositionDelta.x,\n    y: oldShapeCenter.y + stickyPositionDelta.y\n  };\n\n  newOrientation = getOrientation(newBounds, newShapeCenter);\n\n  if (newOrientation !== oldOrientation) {\n\n    // fallback to proportional movement if orientation would otherwise change\n    return null;\n  }\n\n  return stickyPositionDelta;\n}\n\nfunction isMoved(oldTRBL, newTRBL) {\n  return isHorizontallyMoved(oldTRBL, newTRBL) || isVerticallyMoved(oldTRBL, newTRBL);\n}\n\nfunction isHorizontallyMoved(oldTRBL, newTRBL) {\n  return oldTRBL.right !== newTRBL.right && oldTRBL.left !== newTRBL.left;\n}\n\nfunction isVerticallyMoved(oldTRBL, newTRBL) {\n  return oldTRBL.top !== newTRBL.top && oldTRBL.bottom !== newTRBL.bottom;\n}\n","var TRAP_PRIORITY = 5000;\n\n/**\n * Installs a click trap that prevents a ghost click following a dragging operation.\n *\n * @return {Function} a function to immediately remove the installed trap.\n */\nexport function install(eventBus, eventName) {\n\n  eventName = eventName || 'element.click';\n\n  function trap() {\n    return false;\n  }\n\n  eventBus.once(eventName, TRAP_PRIORITY, trap);\n\n  return function() {\n    eventBus.off(eventName, trap);\n  };\n}","/**\n * Failsafe remove an element from a collection\n *\n * @param  {Array<Object>} [collection]\n * @param  {Object} [element]\n *\n * @return {number} the previous index of the element\n */\nexport function remove(collection, element) {\n\n  if (!collection || !element) {\n    return -1;\n  }\n\n  var idx = collection.indexOf(element);\n\n  if (idx !== -1) {\n    collection.splice(idx, 1);\n  }\n\n  return idx;\n}\n\n/**\n * Fail save add an element to the given connection, ensuring\n * it does not yet exist.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n * @param {number} idx\n */\nexport function add(collection, element, idx) {\n\n  if (!collection || !element) {\n    return;\n  }\n\n  if (typeof idx !== 'number') {\n    idx = -1;\n  }\n\n  var currentIdx = collection.indexOf(element);\n\n  if (currentIdx !== -1) {\n\n    if (currentIdx === idx) {\n\n      // nothing to do, position has not changed\n      return;\n    } else {\n\n      if (idx !== -1) {\n\n        // remove from current position\n        collection.splice(currentIdx, 1);\n      } else {\n\n        // already exists in collection\n        return;\n      }\n    }\n  }\n\n  if (idx !== -1) {\n\n    // insert at specified position\n    collection.splice(idx, 0, element);\n  } else {\n\n    // push to end\n    collection.push(element);\n  }\n}\n\n\n/**\n * Fail save get the index of an element in a collection.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n *\n * @return {number} the index or -1 if collection or element do\n *                  not exist or the element is not contained.\n */\nexport function indexOf(collection, element) {\n\n  if (!collection || !element) {\n    return -1;\n  }\n\n  return collection.indexOf(element);\n}\n","import {\n  classes as domClasses\n} from 'min-dom';\n\nvar CURSOR_CLS_PATTERN = /^djs-cursor-.*$/;\n\n\nexport function set(mode) {\n  var classes = domClasses(document.body);\n\n  classes.removeMatching(CURSOR_CLS_PATTERN);\n\n  if (mode) {\n    classes.add('djs-cursor-' + mode);\n  }\n}\n\nexport function unset() {\n  set(null);\n}\n\nexport function has(mode) {\n  var classes = domClasses(document.body);\n\n  return classes.has('djs-cursor-' + mode);\n}\n","import {\n  assign,\n  filter,\n  find,\n  isArray,\n  isNumber,\n  isObject,\n  isUndefined,\n  groupBy,\n  forEach\n} from 'min-dash';\n\n\n/**\n * Get parent elements.\n *\n * @param {Array<djs.model.base>} elements\n *\n * @returns {Array<djs.model.Base>}\n */\nexport function getParents(elements) {\n\n  // find elements that are not children of any other elements\n  return filter(elements, function(element) {\n    return !find(elements, function(e) {\n      return e !== element && getParent(element, e);\n    });\n  });\n}\n\n\nfunction getParent(element, parent) {\n  if (!parent) {\n    return;\n  }\n\n  if (element === parent) {\n    return parent;\n  }\n\n  if (!element.parent) {\n    return;\n  }\n\n  return getParent(element.parent, parent);\n}\n\n\n/**\n * Adds an element to a collection and returns true if the\n * element was added.\n *\n * @param {Array<Object>} elements\n * @param {Object} e\n * @param {boolean} unique\n */\nexport function add(elements, e, unique) {\n  var canAdd = !unique || elements.indexOf(e) === -1;\n\n  if (canAdd) {\n    elements.push(e);\n  }\n\n  return canAdd;\n}\n\n\n/**\n * Iterate over each element in a collection, calling the iterator function `fn`\n * with (element, index, recursionDepth).\n *\n * Recurse into all elements that are returned by `fn`.\n *\n * @param  {Object|Array<Object>} elements\n * @param  {Function} fn iterator function called with (element, index, recursionDepth)\n * @param  {number} [depth] maximum recursion depth\n */\nexport function eachElement(elements, fn, depth) {\n\n  depth = depth || 0;\n\n  if (!isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  forEach(elements, function(s, i) {\n    var filter = fn(s, i, depth);\n\n    if (isArray(filter) && filter.length) {\n      eachElement(filter, fn, depth + 1);\n    }\n  });\n}\n\n\n/**\n * Collects self + child elements up to a given depth from a list of elements.\n *\n * @param  {djs.model.Base|Array<djs.model.Base>} elements the elements to select the children from\n * @param  {boolean} unique whether to return a unique result set (no duplicates)\n * @param  {number} maxDepth the depth to search through or -1 for infinite\n *\n * @return {Array<djs.model.Base>} found elements\n */\nexport function selfAndChildren(elements, unique, maxDepth) {\n  var result = [],\n      processedChildren = [];\n\n  eachElement(elements, function(element, i, depth) {\n    add(result, element, unique);\n\n    var children = element.children;\n\n    // max traversal depth not reached yet\n    if (maxDepth === -1 || depth < maxDepth) {\n\n      // children exist && children not yet processed\n      if (children && add(processedChildren, children, unique)) {\n        return children;\n      }\n    }\n  });\n\n  return result;\n}\n\n/**\n * Return self + direct children for a number of elements\n *\n * @param  {Array<djs.model.Base>} elements to query\n * @param  {boolean} allowDuplicates to allow duplicates in the result set\n *\n * @return {Array<djs.model.Base>} the collected elements\n */\nexport function selfAndDirectChildren(elements, allowDuplicates) {\n  return selfAndChildren(elements, !allowDuplicates, 1);\n}\n\n\n/**\n * Return self + ALL children for a number of elements\n *\n * @param  {Array<djs.model.Base>} elements to query\n * @param  {boolean} allowDuplicates to allow duplicates in the result set\n *\n * @return {Array<djs.model.Base>} the collected elements\n */\nexport function selfAndAllChildren(elements, allowDuplicates) {\n  return selfAndChildren(elements, !allowDuplicates, -1);\n}\n\n\n/**\n * Gets the the closure for all selected elements,\n * their enclosed children and connections.\n *\n * @param {Array<djs.model.Base>} elements\n * @param {boolean} [isTopLevel=true]\n * @param {Object} [existingClosure]\n *\n * @return {Object} newClosure\n */\nexport function getClosure(elements, isTopLevel, closure) {\n\n  if (isUndefined(isTopLevel)) {\n    isTopLevel = true;\n  }\n\n  if (isObject(isTopLevel)) {\n    closure = isTopLevel;\n    isTopLevel = true;\n  }\n\n\n  closure = closure || {};\n\n  var allShapes = copyObject(closure.allShapes),\n      allConnections = copyObject(closure.allConnections),\n      enclosedElements = copyObject(closure.enclosedElements),\n      enclosedConnections = copyObject(closure.enclosedConnections);\n\n  var topLevel = copyObject(\n    closure.topLevel,\n    isTopLevel && groupBy(elements, function(e) { return e.id; })\n  );\n\n\n  function handleConnection(c) {\n    if (topLevel[c.source.id] && topLevel[c.target.id]) {\n      topLevel[c.id] = [ c ];\n    }\n\n    // not enclosed as a child, but maybe logically\n    // (connecting two moved elements?)\n    if (allShapes[c.source.id] && allShapes[c.target.id]) {\n      enclosedConnections[c.id] = enclosedElements[c.id] = c;\n    }\n\n    allConnections[c.id] = c;\n  }\n\n  function handleElement(element) {\n\n    enclosedElements[element.id] = element;\n\n    if (element.waypoints) {\n\n      // remember connection\n      enclosedConnections[element.id] = allConnections[element.id] = element;\n    } else {\n\n      // remember shape\n      allShapes[element.id] = element;\n\n      // remember all connections\n      forEach(element.incoming, handleConnection);\n\n      forEach(element.outgoing, handleConnection);\n\n      // recurse into children\n      return element.children;\n    }\n  }\n\n  eachElement(elements, handleElement);\n\n  return {\n    allShapes: allShapes,\n    allConnections: allConnections,\n    topLevel: topLevel,\n    enclosedConnections: enclosedConnections,\n    enclosedElements: enclosedElements\n  };\n}\n\n/**\n * Returns the surrounding bbox for all elements in\n * the array or the element primitive.\n *\n * @param {Array<djs.model.Shape>|djs.model.Shape} elements\n * @param {boolean} stopRecursion\n */\nexport function getBBox(elements, stopRecursion) {\n\n  stopRecursion = !!stopRecursion;\n  if (!isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  var minX,\n      minY,\n      maxX,\n      maxY;\n\n  forEach(elements, function(element) {\n\n    // If element is a connection the bbox must be computed first\n    var bbox = element;\n    if (element.waypoints && !stopRecursion) {\n      bbox = getBBox(element.waypoints, true);\n    }\n\n    var x = bbox.x,\n        y = bbox.y,\n        height = bbox.height || 0,\n        width = bbox.width || 0;\n\n    if (x < minX || minX === undefined) {\n      minX = x;\n    }\n    if (y < minY || minY === undefined) {\n      minY = y;\n    }\n\n    if ((x + width) > maxX || maxX === undefined) {\n      maxX = x + width;\n    }\n    if ((y + height) > maxY || maxY === undefined) {\n      maxY = y + height;\n    }\n  });\n\n  return {\n    x: minX,\n    y: minY,\n    height: maxY - minY,\n    width: maxX - minX\n  };\n}\n\n\n/**\n * Returns all elements that are enclosed from the bounding box.\n *\n *   * If bbox.(width|height) is not specified the method returns\n *     all elements with element.x/y > bbox.x/y\n *   * If only bbox.x or bbox.y is specified, method return all elements with\n *     e.x > bbox.x or e.y > bbox.y\n *\n * @param {Array<djs.model.Shape>} elements List of Elements to search through\n * @param {djs.model.Shape} bbox the enclosing bbox.\n *\n * @return {Array<djs.model.Shape>} enclosed elements\n */\nexport function getEnclosedElements(elements, bbox) {\n\n  var filteredElements = {};\n\n  forEach(elements, function(element) {\n\n    var e = element;\n\n    if (e.waypoints) {\n      e = getBBox(e);\n    }\n\n    if (!isNumber(bbox.y) && (e.x > bbox.x)) {\n      filteredElements[element.id] = element;\n    }\n    if (!isNumber(bbox.x) && (e.y > bbox.y)) {\n      filteredElements[element.id] = element;\n    }\n    if (e.x > bbox.x && e.y > bbox.y) {\n      if (isNumber(bbox.width) && isNumber(bbox.height) &&\n          e.width + e.x < bbox.width + bbox.x &&\n          e.height + e.y < bbox.height + bbox.y) {\n\n        filteredElements[element.id] = element;\n      } else if (!isNumber(bbox.width) || !isNumber(bbox.height)) {\n        filteredElements[element.id] = element;\n      }\n    }\n  });\n\n  return filteredElements;\n}\n\n\nexport function getType(element) {\n\n  if ('waypoints' in element) {\n    return 'connection';\n  }\n\n  if ('x' in element) {\n    return 'shape';\n  }\n\n  return 'root';\n}\n\nexport function isFrameElement(element) {\n\n  return !!(element && element.isFrame);\n}\n\n// helpers ///////////////////////////////\n\nfunction copyObject(src1, src2) {\n  return assign({}, src1 || {}, src2 || {});\n}","export {\n  default as escapeCSS\n} from 'css.escape';\n\nvar HTML_ESCAPE_MAP = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nexport function escapeHTML(str) {\n  str = '' + str;\n\n  return str && str.replace(/[&<>\"']/g, function(match) {\n    return HTML_ESCAPE_MAP[match];\n  });\n}\n","function __stopPropagation(event) {\n  if (!event || typeof event.stopPropagation !== 'function') {\n    return;\n  }\n\n  event.stopPropagation();\n}\n\n\nexport function getOriginal(event) {\n  return event.originalEvent || event.srcEvent;\n}\n\n\nexport function stopPropagation(event, immediate) {\n  __stopPropagation(event, immediate);\n  __stopPropagation(getOriginal(event), immediate);\n}\n\n\nexport function toPoint(event) {\n\n  if (event.pointers && event.pointers.length) {\n    event = event.pointers[0];\n  }\n\n  if (event.touches && event.touches.length) {\n    event = event.touches[0];\n  }\n\n  return event ? {\n    x: event.clientX,\n    y: event.clientY\n  } : null;\n}","import {\n  every,\n  isArray\n} from 'min-dash';\n\n/**\n * Computes the distance between two points\n *\n * @param  {Point}  p\n * @param  {Point}  q\n *\n * @return {number}  distance\n */\nexport function pointDistance(a, b) {\n  if (!a || !b) {\n    return -1;\n  }\n\n  return Math.sqrt(\n    Math.pow(a.x - b.x, 2) +\n    Math.pow(a.y - b.y, 2)\n  );\n}\n\n\n/**\n * Returns true if the point r is on the line between p and q\n *\n * @param  {Point}  p\n * @param  {Point}  q\n * @param  {Point}  r\n * @param  {number} [accuracy=5] accuracy for points on line check (lower is better)\n *\n * @return {boolean}\n */\nexport function pointsOnLine(p, q, r, accuracy) {\n\n  if (typeof accuracy === 'undefined') {\n    accuracy = 5;\n  }\n\n  if (!p || !q || !r) {\n    return false;\n  }\n\n  var val = (q.x - p.x) * (r.y - p.y) - (q.y - p.y) * (r.x - p.x),\n      dist = pointDistance(p, q);\n\n  // @see http://stackoverflow.com/a/907491/412190\n  return Math.abs(val / dist) <= accuracy;\n}\n\n\nvar ALIGNED_THRESHOLD = 2;\n\n/**\n * Check whether two points are horizontally or vertically aligned.\n *\n * @param {Array<Point>|Point}\n * @param {Point}\n *\n * @return {string|boolean}\n */\nexport function pointsAligned(a, b) {\n  var points;\n\n  if (isArray(a)) {\n    points = a;\n  } else {\n    points = [ a, b ];\n  }\n\n  if (pointsAlignedHorizontally(points)) {\n    return 'h';\n  }\n\n  if (pointsAlignedVertically(points)) {\n    return 'v';\n  }\n\n  return false;\n}\n\nexport function pointsAlignedHorizontally(a, b) {\n  var points;\n\n  if (isArray(a)) {\n    points = a;\n  } else {\n    points = [ a, b ];\n  }\n\n  var firstPoint = points.slice().shift();\n\n  return every(points, function(point) {\n    return Math.abs(firstPoint.y - point.y) <= ALIGNED_THRESHOLD;\n  });\n}\n\nexport function pointsAlignedVertically(a, b) {\n  var points;\n\n  if (isArray(a)) {\n    points = a;\n  } else {\n    points = [ a, b ];\n  }\n\n  var firstPoint = points.slice().shift();\n\n  return every(points, function(point) {\n    return Math.abs(firstPoint.x - point.x) <= ALIGNED_THRESHOLD;\n  });\n}\n\n\n\n/**\n * Returns true if the point p is inside the rectangle rect\n *\n * @param  {Point}  p\n * @param  {Rect} rect\n * @param  {number} tolerance\n *\n * @return {boolean}\n */\nexport function pointInRect(p, rect, tolerance) {\n  tolerance = tolerance || 0;\n\n  return p.x > rect.x - tolerance &&\n         p.y > rect.y - tolerance &&\n         p.x < rect.x + rect.width + tolerance &&\n         p.y < rect.y + rect.height + tolerance;\n}\n\n/**\n * Returns a point in the middle of points p and q\n *\n * @param  {Point}  p\n * @param  {Point}  q\n *\n * @return {Point} middle point\n */\nexport function getMidPoint(p, q) {\n  return {\n    x: Math.round(p.x + ((q.x - p.x) / 2.0)),\n    y: Math.round(p.y + ((q.y - p.y) / 2.0))\n  };\n}\n","/**\n * SVGs for elements are generated by the {@link GraphicsFactory}.\n *\n * This utility gives quick access to the important semantic\n * parts of an element.\n */\n\n/**\n * Returns the visual part of a diagram element\n *\n * @param {Snap<SVGElement>} gfx\n *\n * @return {Snap<SVGElement>}\n */\nexport function getVisual(gfx) {\n  return gfx.childNodes[0];\n}\n\n/**\n * Returns the children for a given diagram element.\n *\n * @param {Snap<SVGElement>} gfx\n * @return {Snap<SVGElement>}\n */\nexport function getChildren(gfx) {\n  return gfx.parentNode.childNodes[1];\n}","/**\n * Util that provides unique IDs.\n *\n * @class djs.util.IdGenerator\n * @constructor\n * @memberOf djs.util\n *\n * The ids can be customized via a given prefix and contain a random value to avoid collisions.\n *\n * @param {string} prefix a prefix to prepend to generated ids (for better readability)\n */\nexport default function IdGenerator(prefix) {\n\n  this._counter = 0;\n  this._prefix = (prefix ? prefix + '-' : '') + Math.floor(Math.random() * 1000000000) + '-';\n}\n\n/**\n * Returns a next unique ID.\n *\n * @method djs.util.IdGenerator#next\n *\n * @returns {string} the id\n */\nIdGenerator.prototype.next = function() {\n  return this._prefix + (++this._counter);\n};\n","import {\n  pointDistance\n} from './Geometry';\n\nimport intersectPaths from 'path-intersection';\n\nvar round = Math.round,\n    max = Math.max;\n\n\nfunction circlePath(center, r) {\n  var x = center.x,\n      y = center.y;\n\n  return [\n    [ 'M', x, y ],\n    [ 'm', 0, -r ],\n    [ 'a', r, r, 0, 1, 1, 0, 2 * r ],\n    [ 'a', r, r, 0, 1, 1, 0, -2 * r ],\n    [ 'z' ]\n  ];\n}\n\nfunction linePath(points) {\n  var segments = [];\n\n  points.forEach(function(p, idx) {\n    segments.push([ idx === 0 ? 'M' : 'L', p.x, p.y ]);\n  });\n\n  return segments;\n}\n\n\nvar INTERSECTION_THRESHOLD = 10;\n\nfunction getBendpointIntersection(waypoints, reference) {\n\n  var i, w;\n\n  for (i = 0; (w = waypoints[i]); i++) {\n\n    if (pointDistance(w, reference) <= INTERSECTION_THRESHOLD) {\n      return {\n        point: waypoints[i],\n        bendpoint: true,\n        index: i\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction getPathIntersection(waypoints, reference) {\n\n  var intersections = intersectPaths(circlePath(reference, INTERSECTION_THRESHOLD), linePath(waypoints));\n\n  var a = intersections[0],\n      b = intersections[intersections.length - 1],\n      idx;\n\n  if (!a) {\n\n    // no intersection\n    return null;\n  }\n\n  if (a !== b) {\n\n    if (a.segment2 !== b.segment2) {\n\n      // we use the bendpoint in between both segments\n      // as the intersection point\n\n      idx = max(a.segment2, b.segment2) - 1;\n\n      return {\n        point: waypoints[idx],\n        bendpoint: true,\n        index: idx\n      };\n    }\n\n    return {\n      point: {\n        x: (round(a.x + b.x) / 2),\n        y: (round(a.y + b.y) / 2)\n      },\n      index: a.segment2\n    };\n  }\n\n  return {\n    point: {\n      x: round(a.x),\n      y: round(a.y)\n    },\n    index: a.segment2\n  };\n}\n\n/**\n * Returns the closest point on the connection towards a given reference point.\n *\n * @param  {Array<Point>} waypoints\n * @param  {Point} reference\n *\n * @return {Object} intersection data (segment, point)\n */\nexport function getApproxIntersection(waypoints, reference) {\n  return getBendpointIntersection(waypoints, reference) || getPathIntersection(waypoints, reference);\n}\n","/**\n * Get the logarithm of x with base 10\n * @param  {Integer} value\n */\nexport function log10(x) {\n  return Math.log(x) / Math.log(10);\n}\n\nexport { delta as substract } from './PositionUtil';\n","import {\n  getOriginal as getOriginalEvent\n} from './Event';\n\nimport {\n  isMac\n} from './Platform';\n\nexport {\n  isMac\n} from './Platform';\n\nexport function isButton(event, button) {\n  return (getOriginalEvent(event) || event).button === button;\n}\n\nexport function isPrimaryButton(event) {\n\n  // button === 0 -> left áka primary mouse button\n  return isButton(event, 0);\n}\n\nexport function isAuxiliaryButton(event) {\n\n  // button === 1 -> auxiliary áka wheel button\n  return isButton(event, 1);\n}\n\nexport function isSecondaryButton(event) {\n\n  // button === 2 -> right áka secondary button\n  return isButton(event, 2);\n}\n\nexport function hasPrimaryModifier(event) {\n  var originalEvent = getOriginalEvent(event) || event;\n\n  if (!isPrimaryButton(event)) {\n    return false;\n  }\n\n  // Use cmd as primary modifier key for mac OS\n  if (isMac()) {\n    return originalEvent.metaKey;\n  } else {\n    return originalEvent.ctrlKey;\n  }\n}\n\n\nexport function hasSecondaryModifier(event) {\n  var originalEvent = getOriginalEvent(event) || event;\n\n  return isPrimaryButton(event) && originalEvent.shiftKey;\n}\n","export function isMac() {\n  return (/mac/i).test(navigator.platform);\n}","export function center(bounds) {\n  return {\n    x: bounds.x + (bounds.width / 2),\n    y: bounds.y + (bounds.height / 2)\n  };\n}\n\n\nexport function delta(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}","/**\n * Remove from the beginning of a collection until it is empty.\n *\n * This is a null-safe operation that ensures elements\n * are being removed from the given collection until the\n * collection is empty.\n *\n * The implementation deals with the fact that a remove operation\n * may touch, i.e. remove multiple elements in the collection\n * at a time.\n *\n * @param {Array<Object>} [collection]\n * @param {Function} removeFn\n *\n * @return {Array<Object>} the cleared collection\n */\nexport function saveClear(collection, removeFn) {\n\n  if (typeof removeFn !== 'function') {\n    throw new Error('removeFn iterator must be a function');\n  }\n\n  if (!collection) {\n    return;\n  }\n\n  var e;\n\n  while ((e = collection[0])) {\n    removeFn(e);\n  }\n\n  return collection;\n}\n","import {\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\n\nexport function componentsToPath(elements) {\n  return elements.join(',').replace(/,?([A-z]),?/g, '$1');\n}\n\nexport function toSVGPoints(points) {\n  var result = '';\n\n  for (var i = 0, p; (p = points[i]); i++) {\n    result += p.x + ',' + p.y + ' ';\n  }\n\n  return result;\n}\n\nexport function createLine(points, attrs) {\n\n  var line = svgCreate('polyline');\n  svgAttr(line, { points: toSVGPoints(points) });\n\n  if (attrs) {\n    svgAttr(line, attrs);\n  }\n\n  return line;\n}\n\nexport function updateLine(gfx, points) {\n  svgAttr(gfx, { points: toSVGPoints(points) });\n\n  return gfx;\n}\n","import {\r\n  transform as svgTransform,\r\n  createTransform\r\n} from 'tiny-svg';\r\n\r\n\r\n/**\r\n * @param {<SVGElement>} element\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} angle\r\n * @param {number} amount\r\n */\r\nexport function transform(gfx, x, y, angle, amount) {\r\n  var translate = createTransform();\r\n  translate.setTranslate(x, y);\r\n\r\n  var rotate = createTransform();\r\n  rotate.setRotate(angle || 0, 0, 0);\r\n\r\n  var scale = createTransform();\r\n  scale.setScale(amount || 1, amount || 1);\r\n\r\n  svgTransform(gfx, [ translate, rotate, scale ]);\r\n}\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nexport function translate(gfx, x, y) {\r\n  var translate = createTransform();\r\n  translate.setTranslate(x, y);\r\n\r\n  svgTransform(gfx, translate);\r\n}\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {number} angle\r\n */\r\nexport function rotate(gfx, angle) {\r\n  var rotate = createTransform();\r\n  rotate.setRotate(angle, 0, 0);\r\n\r\n  svgTransform(gfx, rotate);\r\n}\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {number} amount\r\n */\r\nexport function scale(gfx, amount) {\r\n  var scale = createTransform();\r\n  scale.setScale(amount, amount);\r\n\r\n  svgTransform(gfx, scale);\r\n}","import {\n  isObject,\n  assign,\n  forEach,\n  reduce\n} from 'min-dash';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nvar DEFAULT_BOX_PADDING = 0;\n\nvar DEFAULT_LABEL_SIZE = {\n  width: 150,\n  height: 50\n};\n\n\nfunction parseAlign(align) {\n\n  var parts = align.split('-');\n\n  return {\n    horizontal: parts[0] || 'center',\n    vertical: parts[1] || 'top'\n  };\n}\n\nfunction parsePadding(padding) {\n\n  if (isObject(padding)) {\n    return assign({ top: 0, left: 0, right: 0, bottom: 0 }, padding);\n  } else {\n    return {\n      top: padding,\n      left: padding,\n      right: padding,\n      bottom: padding\n    };\n  }\n}\n\nfunction getTextBBox(text, fakeText) {\n\n  fakeText.textContent = text;\n\n  var textBBox;\n\n  try {\n    var bbox,\n        emptyLine = text === '';\n\n    // add dummy text, when line is empty to\n    // determine correct height\n    fakeText.textContent = emptyLine ? 'dummy' : text;\n\n    textBBox = fakeText.getBBox();\n\n    // take text rendering related horizontal\n    // padding into account\n    bbox = {\n      width: textBBox.width + textBBox.x * 2,\n      height: textBBox.height\n    };\n\n    if (emptyLine) {\n\n      // correct width\n      bbox.width = 0;\n    }\n\n    return bbox;\n  } catch (e) {\n    return { width: 0, height: 0 };\n  }\n}\n\n\n/**\n * Layout the next line and return the layouted element.\n *\n * Alters the lines passed.\n *\n * @param  {Array<string>} lines\n * @return {Object} the line descriptor, an object { width, height, text }\n */\nfunction layoutNext(lines, maxWidth, fakeText) {\n\n  var originalLine = lines.shift(),\n      fitLine = originalLine;\n\n  var textBBox;\n\n  for (;;) {\n    textBBox = getTextBBox(fitLine, fakeText);\n\n    textBBox.width = fitLine ? textBBox.width : 0;\n\n    // try to fit\n    if (fitLine === ' ' || fitLine === '' || textBBox.width < Math.round(maxWidth) || fitLine.length < 2) {\n      return fit(lines, fitLine, originalLine, textBBox);\n    }\n\n    fitLine = shortenLine(fitLine, textBBox.width, maxWidth);\n  }\n}\n\nfunction fit(lines, fitLine, originalLine, textBBox) {\n  if (fitLine.length < originalLine.length) {\n    var remainder = originalLine.slice(fitLine.length).trim();\n\n    lines.unshift(remainder);\n  }\n\n  return {\n    width: textBBox.width,\n    height: textBBox.height,\n    text: fitLine\n  };\n}\n\nvar SOFT_BREAK = '\\u00AD';\n\n\n/**\n * Shortens a line based on spacing and hyphens.\n * Returns the shortened result on success.\n *\n * @param  {string} line\n * @param  {number} maxLength the maximum characters of the string\n * @return {string} the shortened string\n */\nfunction semanticShorten(line, maxLength) {\n\n  var parts = line.split(/(\\s|-|\\u00AD)/g),\n      part,\n      shortenedParts = [],\n      length = 0;\n\n  // try to shorten via break chars\n  if (parts.length > 1) {\n\n    while ((part = parts.shift())) {\n      if (part.length + length < maxLength) {\n        shortenedParts.push(part);\n        length += part.length;\n      } else {\n\n        // remove previous part, too if hyphen does not fit anymore\n        if (part === '-' || part === SOFT_BREAK) {\n          shortenedParts.pop();\n        }\n\n        break;\n      }\n    }\n  }\n\n  var last = shortenedParts[shortenedParts.length - 1];\n\n  // translate trailing soft break to actual hyphen\n  if (last && last === SOFT_BREAK) {\n    shortenedParts[shortenedParts.length - 1] = '-';\n  }\n\n  return shortenedParts.join('');\n}\n\n\nfunction shortenLine(line, width, maxWidth) {\n  var length = Math.max(line.length * (maxWidth / width), 1);\n\n  // try to shorten semantically (i.e. based on spaces and hyphens)\n  var shortenedLine = semanticShorten(line, length);\n\n  if (!shortenedLine) {\n\n    // force shorten by cutting the long word\n    shortenedLine = line.slice(0, Math.max(Math.round(length - 1), 1));\n  }\n\n  return shortenedLine;\n}\n\n\nfunction getHelperSvg() {\n  var helperSvg = document.getElementById('helper-svg');\n\n  if (!helperSvg) {\n    helperSvg = svgCreate('svg');\n\n    svgAttr(helperSvg, {\n      id: 'helper-svg',\n      width: 0,\n      height: 0,\n      style: 'visibility: hidden; position: fixed'\n    });\n\n    document.body.appendChild(helperSvg);\n  }\n\n  return helperSvg;\n}\n\n\n/**\n * Creates a new label utility\n *\n * @param {Object} config\n * @param {Dimensions} config.size\n * @param {number} config.padding\n * @param {Object} config.style\n * @param {string} config.align\n */\nexport default function Text(config) {\n\n  this._config = assign({}, {\n    size: DEFAULT_LABEL_SIZE,\n    padding: DEFAULT_BOX_PADDING,\n    style: {},\n    align: 'center-top'\n  }, config || {});\n}\n\n/**\n * Returns the layouted text as an SVG element.\n *\n * @param {string} text\n * @param {Object} options\n *\n * @return {SVGElement}\n */\nText.prototype.createText = function(text, options) {\n  return this.layoutText(text, options).element;\n};\n\n/**\n * Returns a labels layouted dimensions.\n *\n * @param {string} text to layout\n * @param {Object} options\n *\n * @return {Dimensions}\n */\nText.prototype.getDimensions = function(text, options) {\n  return this.layoutText(text, options).dimensions;\n};\n\n/**\n * Creates and returns a label and its bounding box.\n *\n * @method Text#createText\n *\n * @param {string} text the text to render on the label\n * @param {Object} options\n * @param {string} options.align how to align in the bounding box.\n *                               Any of { 'center-middle', 'center-top' },\n *                               defaults to 'center-top'.\n * @param {string} options.style style to be applied to the text\n * @param {boolean} options.fitBox indicates if box will be recalculated to\n *                                 fit text\n *\n * @return {Object} { element, dimensions }\n */\nText.prototype.layoutText = function(text, options) {\n  var box = assign({}, this._config.size, options.box),\n      style = assign({}, this._config.style, options.style),\n      align = parseAlign(options.align || this._config.align),\n      padding = parsePadding(options.padding !== undefined ? options.padding : this._config.padding),\n      fitBox = options.fitBox || false;\n\n  var lineHeight = getLineHeight(style);\n\n  // we split text by lines and normalize\n  // {soft break} + {line break} => { line break }\n  var lines = text.split(/\\u00AD?\\r?\\n/),\n      layouted = [];\n\n  var maxWidth = box.width - padding.left - padding.right;\n\n  // ensure correct rendering by attaching helper text node to invisible SVG\n  var helperText = svgCreate('text');\n  svgAttr(helperText, { x: 0, y: 0 });\n  svgAttr(helperText, style);\n\n  var helperSvg = getHelperSvg();\n\n  svgAppend(helperSvg, helperText);\n\n  while (lines.length) {\n    layouted.push(layoutNext(lines, maxWidth, helperText));\n  }\n\n  if (align.vertical === 'middle') {\n    padding.top = padding.bottom = 0;\n  }\n\n  var totalHeight = reduce(layouted, function(sum, line, idx) {\n    return sum + (lineHeight || line.height);\n  }, 0) + padding.top + padding.bottom;\n\n  var maxLineWidth = reduce(layouted, function(sum, line, idx) {\n    return line.width > sum ? line.width : sum;\n  }, 0);\n\n  // the y position of the next line\n  var y = padding.top;\n\n  if (align.vertical === 'middle') {\n    y += (box.height - totalHeight) / 2;\n  }\n\n  // magic number initial offset\n  y -= (lineHeight || layouted[0].height) / 4;\n\n\n  var textElement = svgCreate('text');\n\n  svgAttr(textElement, style);\n\n  // layout each line taking into account that parent\n  // shape might resize to fit text size\n  forEach(layouted, function(line) {\n\n    var x;\n\n    y += (lineHeight || line.height);\n\n    switch (align.horizontal) {\n    case 'left':\n      x = padding.left;\n      break;\n\n    case 'right':\n      x = ((fitBox ? maxLineWidth : maxWidth)\n        - padding.right - line.width);\n      break;\n\n    default:\n\n      // aka center\n      x = Math.max((((fitBox ? maxLineWidth : maxWidth)\n        - line.width) / 2 + padding.left), 0);\n    }\n\n    var tspan = svgCreate('tspan');\n    svgAttr(tspan, { x: x, y: y });\n\n    tspan.textContent = line.text;\n\n    svgAppend(textElement, tspan);\n  });\n\n  svgRemove(helperText);\n\n  var dimensions = {\n    width: maxLineWidth,\n    height: totalHeight\n  };\n\n  return {\n    dimensions: dimensions,\n    element: textElement\n  };\n};\n\n\nfunction getLineHeight(style) {\n  if ('fontSize' in style && 'lineHeight' in style) {\n    return style.lineHeight * parseInt(style.fontSize, 10);\n  }\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","var CLASS_PATTERN = /^class /;\n\nfunction isClass(fn) {\n  return CLASS_PATTERN.test(fn.toString());\n}\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\nfunction hasOwnProp(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction annotate() {\n  var args = Array.prototype.slice.call(arguments);\n\n  if (args.length === 1 && isArray(args[0])) {\n    args = args[0];\n  }\n\n  var fn = args.pop();\n\n  fn.$inject = args;\n\n  return fn;\n}\n\n\n// Current limitations:\n// - can't put into \"function arg\" comments\n// function /* (no parenthesis like this) */ (){}\n// function abc( /* xx (no parenthesis like this) */ a, b) {}\n//\n// Just put the comment before function or inside:\n// /* (((this is fine))) */ function(a, b) {}\n// function abc(a) { /* (((this is fine))) */}\n//\n// - can't reliably auto-annotate constructor; we'll match the\n// first constructor(...) pattern found which may be the one\n// of a nested class, too.\n\nvar CONSTRUCTOR_ARGS = /constructor\\s*[^(]*\\(\\s*([^)]*)\\)/m;\nvar FN_ARGS = /^(?:async )?(?:function\\s*)?[^(]*\\(\\s*([^)]*)\\)/m;\nvar FN_ARG = /\\/\\*([^*]*)\\*\\//m;\n\nfunction parseAnnotations(fn) {\n\n  if (typeof fn !== 'function') {\n    throw new Error('Cannot annotate \"' + fn + '\". Expected a function!');\n  }\n\n  var match = fn.toString().match(isClass(fn) ? CONSTRUCTOR_ARGS : FN_ARGS);\n\n  // may parse class without constructor\n  if (!match) {\n    return [];\n  }\n\n  return match[1] && match[1].split(',').map(function(arg) {\n    match = arg.match(FN_ARG);\n    return match ? match[1].trim() : arg.trim();\n  }) || [];\n}\n\nfunction Module() {\n  var providers = [];\n\n  this.factory = function(name, factory) {\n    providers.push([name, 'factory', factory]);\n    return this;\n  };\n\n  this.value = function(name, value) {\n    providers.push([name, 'value', value]);\n    return this;\n  };\n\n  this.type = function(name, type) {\n    providers.push([name, 'type', type]);\n    return this;\n  };\n\n  this.forEach = function(iterator) {\n    providers.forEach(iterator);\n  };\n\n}\n\nfunction Injector(modules, parent) {\n  parent = parent || {\n    get: function(name, strict) {\n      currentlyResolving.push(name);\n\n      if (strict === false) {\n        return null;\n      } else {\n        throw error('No provider for \"' + name + '\"!');\n      }\n    }\n  };\n\n  var currentlyResolving = [];\n  var providers = this._providers = Object.create(parent._providers || null);\n  var instances = this._instances = Object.create(null);\n\n  var self = instances.injector = this;\n\n  var error = function(msg) {\n    var stack = currentlyResolving.join(' -> ');\n    currentlyResolving.length = 0;\n    return new Error(stack ? msg + ' (Resolving: ' + stack + ')' : msg);\n  };\n\n  /**\n   * Return a named service.\n   *\n   * @param {String} name\n   * @param {Boolean} [strict=true] if false, resolve missing services to null\n   *\n   * @return {Object}\n   */\n  var get = function(name, strict) {\n    if (!providers[name] && name.indexOf('.') !== -1) {\n      var parts = name.split('.');\n      var pivot = get(parts.shift());\n\n      while (parts.length) {\n        pivot = pivot[parts.shift()];\n      }\n\n      return pivot;\n    }\n\n    if (hasOwnProp(instances, name)) {\n      return instances[name];\n    }\n\n    if (hasOwnProp(providers, name)) {\n      if (currentlyResolving.indexOf(name) !== -1) {\n        currentlyResolving.push(name);\n        throw error('Cannot resolve circular dependency!');\n      }\n\n      currentlyResolving.push(name);\n      instances[name] = providers[name][0](providers[name][1]);\n      currentlyResolving.pop();\n\n      return instances[name];\n    }\n\n    return parent.get(name, strict);\n  };\n\n  var fnDef = function(fn, locals) {\n\n    if (typeof locals === 'undefined') {\n      locals = {};\n    }\n\n    if (typeof fn !== 'function') {\n      if (isArray(fn)) {\n        fn = annotate(fn.slice());\n      } else {\n        throw new Error('Cannot invoke \"' + fn + '\". Expected a function!');\n      }\n    }\n\n    var inject = fn.$inject || parseAnnotations(fn);\n    var dependencies = inject.map(function(dep) {\n      if (hasOwnProp(locals, dep)) {\n        return locals[dep];\n      } else {\n        return get(dep);\n      }\n    });\n\n    return {\n      fn: fn,\n      dependencies: dependencies\n    };\n  };\n\n  var instantiate = function(Type) {\n    var def = fnDef(Type);\n\n    var fn = def.fn,\n        dependencies = def.dependencies;\n\n    // instantiate var args constructor\n    var Constructor = Function.prototype.bind.apply(fn, [ null ].concat(dependencies));\n\n    return new Constructor();\n  };\n\n  var invoke = function(func, context, locals) {\n    var def = fnDef(func, locals);\n\n    var fn = def.fn,\n        dependencies = def.dependencies;\n\n    return fn.apply(context, dependencies);\n  };\n\n\n  var createPrivateInjectorFactory = function(privateChildInjector) {\n    return annotate(function(key) {\n      return privateChildInjector.get(key);\n    });\n  };\n\n  var createChild = function(modules, forceNewInstances) {\n    if (forceNewInstances && forceNewInstances.length) {\n      var fromParentModule = Object.create(null);\n      var matchedScopes = Object.create(null);\n\n      var privateInjectorsCache = [];\n      var privateChildInjectors = [];\n      var privateChildFactories = [];\n\n      var provider;\n      var cacheIdx;\n      var privateChildInjector;\n      var privateChildInjectorFactory;\n      for (var name in providers) {\n        provider = providers[name];\n\n        if (forceNewInstances.indexOf(name) !== -1) {\n          if (provider[2] === 'private') {\n            cacheIdx = privateInjectorsCache.indexOf(provider[3]);\n            if (cacheIdx === -1) {\n              privateChildInjector = provider[3].createChild([], forceNewInstances);\n              privateChildInjectorFactory = createPrivateInjectorFactory(privateChildInjector);\n              privateInjectorsCache.push(provider[3]);\n              privateChildInjectors.push(privateChildInjector);\n              privateChildFactories.push(privateChildInjectorFactory);\n              fromParentModule[name] = [privateChildInjectorFactory, name, 'private', privateChildInjector];\n            } else {\n              fromParentModule[name] = [privateChildFactories[cacheIdx], name, 'private', privateChildInjectors[cacheIdx]];\n            }\n          } else {\n            fromParentModule[name] = [provider[2], provider[1]];\n          }\n          matchedScopes[name] = true;\n        }\n\n        if ((provider[2] === 'factory' || provider[2] === 'type') && provider[1].$scope) {\n          /* jshint -W083 */\n          forceNewInstances.forEach(function(scope) {\n            if (provider[1].$scope.indexOf(scope) !== -1) {\n              fromParentModule[name] = [provider[2], provider[1]];\n              matchedScopes[scope] = true;\n            }\n          });\n        }\n      }\n\n      forceNewInstances.forEach(function(scope) {\n        if (!matchedScopes[scope]) {\n          throw new Error('No provider for \"' + scope + '\". Cannot use provider from the parent!');\n        }\n      });\n\n      modules.unshift(fromParentModule);\n    }\n\n    return new Injector(modules, self);\n  };\n\n  var factoryMap = {\n    factory: invoke,\n    type: instantiate,\n    value: function(value) {\n      return value;\n    }\n  };\n\n  modules.forEach(function(module) {\n\n    function arrayUnwrap(type, value) {\n      if (type !== 'value' && isArray(value)) {\n        value = annotate(value.slice());\n      }\n\n      return value;\n    }\n\n    // TODO(vojta): handle wrong inputs (modules)\n    if (module instanceof Module) {\n      module.forEach(function(provider) {\n        var name = provider[0];\n        var type = provider[1];\n        var value = provider[2];\n\n        providers[name] = [factoryMap[type], arrayUnwrap(type, value), type];\n      });\n    } else if (typeof module === 'object') {\n      if (module.__exports__) {\n        var clonedModule = Object.keys(module).reduce(function(m, key) {\n          if (key.substring(0, 2) !== '__') {\n            m[key] = module[key];\n          }\n          return m;\n        }, Object.create(null));\n\n        var privateInjector = new Injector((module.__modules__ || []).concat([clonedModule]), self);\n        var getFromPrivateInjector = annotate(function(key) {\n          return privateInjector.get(key);\n        });\n        module.__exports__.forEach(function(key) {\n          providers[key] = [getFromPrivateInjector, key, 'private', privateInjector];\n        });\n      } else {\n        Object.keys(module).forEach(function(name) {\n          if (module[name][2] === 'private') {\n            providers[name] = module[name];\n            return;\n          }\n\n          var type = module[name][0];\n          var value = module[name][1];\n\n          providers[name] = [factoryMap[type], arrayUnwrap(type, value), type];\n        });\n      }\n    }\n  });\n\n  // public API\n  this.get = get;\n  this.invoke = invoke;\n  this.instantiate = instantiate;\n  this.createChild = createChild;\n}\n\nexport { annotate, parseAnnotations, Module, Injector };\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","function createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar hat_1 = createCommonjsModule(function (module) {\nvar hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n});\n\n/**\n * Create a new id generator / cache instance.\n *\n * You may optionally provide a seed that is used internally.\n *\n * @param {Seed} seed\n */\n\nfunction Ids(seed) {\n  if (!(this instanceof Ids)) {\n    return new Ids(seed);\n  }\n\n  seed = seed || [128, 36, 1];\n  this._seed = seed.length ? hat_1.rack(seed[0], seed[1], seed[2]) : seed;\n}\n/**\n * Generate a next id.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\n\nIds.prototype.next = function (element) {\n  return this._seed(element || true);\n};\n/**\n * Generate a next id with a given prefix.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\n\n\nIds.prototype.nextPrefixed = function (prefix, element) {\n  var id;\n\n  do {\n    id = prefix + this.next(true);\n  } while (this.assigned(id)); // claim {prefix}{random}\n\n\n  this.claim(id, element); // return\n\n  return id;\n};\n/**\n * Manually claim an existing id.\n *\n * @param {String} id\n * @param {String} [element] element the id is claimed by\n */\n\n\nIds.prototype.claim = function (id, element) {\n  this._seed.set(id, element || true);\n};\n/**\n * Returns true if the given id has already been assigned.\n *\n * @param  {String} id\n * @return {Boolean}\n */\n\n\nIds.prototype.assigned = function (id) {\n  return this._seed.get(id) || false;\n};\n/**\n * Unclaim an id.\n *\n * @param  {String} id the id to unclaim\n */\n\n\nIds.prototype.unclaim = function (id) {\n  delete this._seed.hats[id];\n};\n/**\n * Clear all claimed ids.\n */\n\n\nIds.prototype.clear = function () {\n  var hats = this._seed.hats,\n      id;\n\n  for (id in hats) {\n    this.unclaim(id);\n  }\n};\n\nexport default Ids;\n//# sourceMappingURL=index.esm.js.map\n","/**\n * Flatten array, one level deep.\n *\n * @param {Array<?>} arr\n *\n * @return {Array<?>}\n */\nfunction flatten(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\n\nvar nativeToString = Object.prototype.toString;\nvar nativeHasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isUndefined(obj) {\n  return obj === undefined;\n}\nfunction isDefined(obj) {\n  return obj !== undefined;\n}\nfunction isNil(obj) {\n  return obj == null;\n}\nfunction isArray(obj) {\n  return nativeToString.call(obj) === '[object Array]';\n}\nfunction isObject(obj) {\n  return nativeToString.call(obj) === '[object Object]';\n}\nfunction isNumber(obj) {\n  return nativeToString.call(obj) === '[object Number]';\n}\nfunction isFunction(obj) {\n  var tag = nativeToString.call(obj);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object AsyncGeneratorFunction]' || tag === '[object Proxy]';\n}\nfunction isString(obj) {\n  return nativeToString.call(obj) === '[object String]';\n}\n/**\n * Ensure collection is an array.\n *\n * @param {Object} obj\n */\n\nfunction ensureArray(obj) {\n  if (isArray(obj)) {\n    return;\n  }\n\n  throw new Error('must supply array');\n}\n/**\n * Return true, if target owns a property with the given key.\n *\n * @param {Object} target\n * @param {String} key\n *\n * @return {Boolean}\n */\n\nfunction has(target, key) {\n  return nativeHasOwnProperty.call(target, key);\n}\n\n/**\n * Find element in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function|Object} matcher\n *\n * @return {Object}\n */\n\nfunction find(collection, matcher) {\n  matcher = toMatcher(matcher);\n  var match;\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      match = val;\n      return false;\n    }\n  });\n  return match;\n}\n/**\n * Find element index in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function} matcher\n *\n * @return {Object}\n */\n\nfunction findIndex(collection, matcher) {\n  matcher = toMatcher(matcher);\n  var idx = isArray(collection) ? -1 : undefined;\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      idx = key;\n      return false;\n    }\n  });\n  return idx;\n}\n/**\n * Find element in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function} matcher\n *\n * @return {Array} result\n */\n\nfunction filter(collection, matcher) {\n  var result = [];\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      result.push(val);\n    }\n  });\n  return result;\n}\n/**\n * Iterate over collection; returning something\n * (non-undefined) will stop iteration.\n *\n * @param  {Array|Object} collection\n * @param  {Function} iterator\n *\n * @return {Object} return result that stopped the iteration\n */\n\nfunction forEach(collection, iterator) {\n  var val, result;\n\n  if (isUndefined(collection)) {\n    return;\n  }\n\n  var convertKey = isArray(collection) ? toNum : identity;\n\n  for (var key in collection) {\n    if (has(collection, key)) {\n      val = collection[key];\n      result = iterator(val, convertKey(key));\n\n      if (result === false) {\n        return val;\n      }\n    }\n  }\n}\n/**\n * Return collection without element.\n *\n * @param  {Array} arr\n * @param  {Function} matcher\n *\n * @return {Array}\n */\n\nfunction without(arr, matcher) {\n  if (isUndefined(arr)) {\n    return [];\n  }\n\n  ensureArray(arr);\n  matcher = toMatcher(matcher);\n  return arr.filter(function (el, idx) {\n    return !matcher(el, idx);\n  });\n}\n/**\n * Reduce collection, returning a single result.\n *\n * @param  {Object|Array} collection\n * @param  {Function} iterator\n * @param  {Any} result\n *\n * @return {Any} result returned from last iterator\n */\n\nfunction reduce(collection, iterator, result) {\n  forEach(collection, function (value, idx) {\n    result = iterator(result, value, idx);\n  });\n  return result;\n}\n/**\n * Return true if every element in the collection\n * matches the criteria.\n *\n * @param  {Object|Array} collection\n * @param  {Function} matcher\n *\n * @return {Boolean}\n */\n\nfunction every(collection, matcher) {\n  return !!reduce(collection, function (matches, val, key) {\n    return matches && matcher(val, key);\n  }, true);\n}\n/**\n * Return true if some elements in the collection\n * match the criteria.\n *\n * @param  {Object|Array} collection\n * @param  {Function} matcher\n *\n * @return {Boolean}\n */\n\nfunction some(collection, matcher) {\n  return !!find(collection, matcher);\n}\n/**\n * Transform a collection into another collection\n * by piping each member through the given fn.\n *\n * @param  {Object|Array}   collection\n * @param  {Function} fn\n *\n * @return {Array} transformed collection\n */\n\nfunction map(collection, fn) {\n  var result = [];\n  forEach(collection, function (val, key) {\n    result.push(fn(val, key));\n  });\n  return result;\n}\n/**\n * Get the collections keys.\n *\n * @param  {Object|Array} collection\n *\n * @return {Array}\n */\n\nfunction keys(collection) {\n  return collection && Object.keys(collection) || [];\n}\n/**\n * Shorthand for `keys(o).length`.\n *\n * @param  {Object|Array} collection\n *\n * @return {Number}\n */\n\nfunction size(collection) {\n  return keys(collection).length;\n}\n/**\n * Get the values in the collection.\n *\n * @param  {Object|Array} collection\n *\n * @return {Array}\n */\n\nfunction values(collection) {\n  return map(collection, function (val) {\n    return val;\n  });\n}\n/**\n * Group collection members by attribute.\n *\n * @param  {Object|Array} collection\n * @param  {Function} extractor\n *\n * @return {Object} map with { attrValue => [ a, b, c ] }\n */\n\nfunction groupBy(collection, extractor) {\n  var grouped = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  extractor = toExtractor(extractor);\n  forEach(collection, function (val) {\n    var discriminator = extractor(val) || '_';\n    var group = grouped[discriminator];\n\n    if (!group) {\n      group = grouped[discriminator] = [];\n    }\n\n    group.push(val);\n  });\n  return grouped;\n}\nfunction uniqueBy(extractor) {\n  extractor = toExtractor(extractor);\n  var grouped = {};\n\n  for (var _len = arguments.length, collections = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    collections[_key - 1] = arguments[_key];\n  }\n\n  forEach(collections, function (c) {\n    return groupBy(c, extractor, grouped);\n  });\n  var result = map(grouped, function (val, key) {\n    return val[0];\n  });\n  return result;\n}\nvar unionBy = uniqueBy;\n/**\n * Sort collection by criteria.\n *\n * @param  {Object|Array} collection\n * @param  {String|Function} extractor\n *\n * @return {Array}\n */\n\nfunction sortBy(collection, extractor) {\n  extractor = toExtractor(extractor);\n  var sorted = [];\n  forEach(collection, function (value, key) {\n    var disc = extractor(value, key);\n    var entry = {\n      d: disc,\n      v: value\n    };\n\n    for (var idx = 0; idx < sorted.length; idx++) {\n      var d = sorted[idx].d;\n\n      if (disc < d) {\n        sorted.splice(idx, 0, entry);\n        return;\n      }\n    } // not inserted, append (!)\n\n\n    sorted.push(entry);\n  });\n  return map(sorted, function (e) {\n    return e.v;\n  });\n}\n/**\n * Create an object pattern matcher.\n *\n * @example\n *\n * const matcher = matchPattern({ id: 1 });\n *\n * let element = find(elements, matcher);\n *\n * @param  {Object} pattern\n *\n * @return {Function} matcherFn\n */\n\nfunction matchPattern(pattern) {\n  return function (el) {\n    return every(pattern, function (val, key) {\n      return el[key] === val;\n    });\n  };\n}\n\nfunction toExtractor(extractor) {\n  return isFunction(extractor) ? extractor : function (e) {\n    return e[extractor];\n  };\n}\n\nfunction toMatcher(matcher) {\n  return isFunction(matcher) ? matcher : function (e) {\n    return e === matcher;\n  };\n}\n\nfunction identity(arg) {\n  return arg;\n}\n\nfunction toNum(arg) {\n  return Number(arg);\n}\n\n/**\n * Debounce fn, calling it only once if the given time\n * elapsed between calls.\n *\n * Lodash-style the function exposes methods to `#clear`\n * and `#flush` to control internal behavior.\n *\n * @param  {Function} fn\n * @param  {Number} timeout\n *\n * @return {Function} debounced function\n */\nfunction debounce(fn, timeout) {\n  var timer;\n  var lastArgs;\n  var lastThis;\n  var lastNow;\n\n  function fire(force) {\n    var now = Date.now();\n    var scheduledDiff = force ? 0 : lastNow + timeout - now;\n\n    if (scheduledDiff > 0) {\n      return schedule(scheduledDiff);\n    }\n\n    fn.apply(lastThis, lastArgs);\n    clear();\n  }\n\n  function schedule(timeout) {\n    timer = setTimeout(fire, timeout);\n  }\n\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = lastNow = lastArgs = lastThis = undefined;\n  }\n\n  function flush() {\n    if (timer) {\n      fire(true);\n    }\n\n    clear();\n  }\n\n  function callback() {\n    lastNow = Date.now();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n    lastThis = this; // ensure an execution is scheduled\n\n    if (!timer) {\n      schedule(timeout);\n    }\n  }\n\n  callback.flush = flush;\n  callback.cancel = clear;\n  return callback;\n}\n/**\n * Throttle fn, calling at most once\n * in the given interval.\n *\n * @param  {Function} fn\n * @param  {Number} interval\n *\n * @return {Function} throttled function\n */\n\nfunction throttle(fn, interval) {\n  var throttling = false;\n  return function () {\n    if (throttling) {\n      return;\n    }\n\n    fn.apply(void 0, arguments);\n    throttling = true;\n    setTimeout(function () {\n      throttling = false;\n    }, interval);\n  };\n}\n/**\n * Bind function against target <this>.\n *\n * @param  {Function} fn\n * @param  {Object}   target\n *\n * @return {Function} bound function\n */\n\nfunction bind(fn, target) {\n  return fn.bind(target);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Convenience wrapper for `Object.assign`.\n *\n * @param {Object} target\n * @param {...Object} others\n *\n * @return {Object} the target\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    others[_key - 1] = arguments[_key];\n  }\n\n  return _extends.apply(void 0, [target].concat(others));\n}\n/**\n * Sets a nested property of a given object to the specified value.\n *\n * This mutates the object and returns it.\n *\n * @param {Object} target The target of the set operation.\n * @param {(string|number)[]} path The path to the nested value.\n * @param {any} value The value to set.\n */\n\nfunction set(target, path, value) {\n  var currentTarget = target;\n  forEach(path, function (key, idx) {\n    if (typeof key !== 'number' && typeof key !== 'string') {\n      throw new Error('illegal key type: ' + _typeof(key) + '. Key should be of type number or string.');\n    }\n\n    if (key === 'constructor') {\n      throw new Error('illegal key: constructor');\n    }\n\n    if (key === '__proto__') {\n      throw new Error('illegal key: __proto__');\n    }\n\n    var nextKey = path[idx + 1];\n    var nextTarget = currentTarget[key];\n\n    if (isDefined(nextKey) && isNil(nextTarget)) {\n      nextTarget = currentTarget[key] = isNaN(+nextKey) ? {} : [];\n    }\n\n    if (isUndefined(nextKey)) {\n      if (isUndefined(value)) {\n        delete currentTarget[key];\n      } else {\n        currentTarget[key] = value;\n      }\n    } else {\n      currentTarget = nextTarget;\n    }\n  });\n  return target;\n}\n/**\n * Gets a nested property of a given object.\n *\n * @param {Object} target The target of the get operation.\n * @param {(string|number)[]} path The path to the nested value.\n * @param {any} [defaultValue] The value to return if no value exists.\n */\n\nfunction get(target, path, defaultValue) {\n  var currentTarget = target;\n  forEach(path, function (key) {\n    // accessing nil property yields <undefined>\n    if (isNil(currentTarget)) {\n      currentTarget = undefined;\n      return false;\n    }\n\n    currentTarget = currentTarget[key];\n  });\n  return isUndefined(currentTarget) ? defaultValue : currentTarget;\n}\n/**\n * Pick given properties from the target object.\n *\n * @param {Object} target\n * @param {Array} properties\n *\n * @return {Object} target\n */\n\nfunction pick(target, properties) {\n  var result = {};\n  var obj = Object(target);\n  forEach(properties, function (prop) {\n    if (prop in obj) {\n      result[prop] = target[prop];\n    }\n  });\n  return result;\n}\n/**\n * Pick all target properties, excluding the given ones.\n *\n * @param {Object} target\n * @param {Array} properties\n *\n * @return {Object} target\n */\n\nfunction omit(target, properties) {\n  var result = {};\n  var obj = Object(target);\n  forEach(obj, function (prop, key) {\n    if (properties.indexOf(key) === -1) {\n      result[key] = prop;\n    }\n  });\n  return result;\n}\n/**\n * Recursively merge `...sources` into given target.\n *\n * Does support merging objects; does not support merging arrays.\n *\n * @param {Object} target\n * @param {...Object} sources\n *\n * @return {Object} the target\n */\n\nfunction merge(target) {\n  for (var _len2 = arguments.length, sources = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    sources[_key2 - 1] = arguments[_key2];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  forEach(sources, function (source) {\n    // skip non-obj sources, i.e. null\n    if (!source || !isObject(source)) {\n      return;\n    }\n\n    forEach(source, function (sourceVal, key) {\n      if (key === '__proto__') {\n        return;\n      }\n\n      var targetVal = target[key];\n\n      if (isObject(sourceVal)) {\n        if (!isObject(targetVal)) {\n          // override target[key] with object\n          targetVal = {};\n        }\n\n        target[key] = merge(targetVal, sourceVal);\n      } else {\n        target[key] = sourceVal;\n      }\n    });\n  });\n  return target;\n}\n\nexport { assign, bind, debounce, ensureArray, every, filter, find, findIndex, flatten, forEach, get, groupBy, has, isArray, isDefined, isFunction, isNil, isNumber, isObject, isString, isUndefined, keys, map, matchPattern, merge, omit, pick, reduce, set, size, some, sortBy, throttle, unionBy, uniqueBy, values, without };\n","/**\n * Set attribute `name` to `val`, or get attr `name`.\n *\n * @param {Element} el\n * @param {String} name\n * @param {String} [val]\n * @api public\n */\nfunction attr(el, name, val) {\n  // get\n  if (arguments.length == 2) {\n    return el.getAttribute(name);\n  }\n\n  // remove\n  if (val === null) {\n    return el.removeAttribute(name);\n  }\n\n  // set\n  el.setAttribute(name, val);\n\n  return el;\n}\n\nvar indexOf = [].indexOf;\n\nvar indexof = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n/**\n * Taken from https://github.com/component/classes\n *\n * Without the component bits.\n */\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nfunction classes(el) {\n  return new ClassList(el);\n}\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function (name) {\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = indexof(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function (name) {\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = indexof(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function (re) {\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function (name, force) {\n  // classList\n  if (this.list) {\n    if ('undefined' !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if ('undefined' !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function () {\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list ? this.list.contains(name) : !!~indexof(this.array(), name);\n};\n\n/**\n * Remove all children from the given element.\n */\nfunction clear(el) {\n\n  var c;\n\n  while (el.childNodes.length) {\n    c = el.childNodes[0];\n    el.removeChild(c);\n  }\n\n  return el;\n}\n\nvar proto = typeof Element !== 'undefined' ? Element.prototype : {};\nvar vendor = proto.matches\n  || proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\nvar matchesSelector = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (!el || el.nodeType !== 1) return false;\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n\n/**\n * Closest\n *\n * @param {Element} el\n * @param {String} selector\n * @param {Boolean} checkYourSelf (optional)\n */\nfunction closest (element, selector, checkYourSelf) {\n  var currentElem = checkYourSelf ? element : element.parentNode;\n\n  while (currentElem && currentElem.nodeType !== document.DOCUMENT_NODE && currentElem.nodeType !== document.DOCUMENT_FRAGMENT_NODE) {\n\n    if (matchesSelector(currentElem, selector)) {\n      return currentElem;\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return matchesSelector(currentElem, selector) ? currentElem : null;\n}\n\nvar bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\n    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n    prefix = bind !== 'addEventListener' ? 'on' : '';\n\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nvar bind_1 = function(el, type, fn, capture){\n  el[bind](prefix + type, fn, capture || false);\n  return fn;\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nvar unbind_1 = function(el, type, fn, capture){\n  el[unbind](prefix + type, fn, capture || false);\n  return fn;\n};\n\nvar componentEvent = {\n\tbind: bind_1,\n\tunbind: unbind_1\n};\n\n/**\n * Module dependencies.\n */\n\n/**\n * Delegate event `type` to `selector`\n * and invoke `fn(e)`. A callback function\n * is returned which may be passed to `.unbind()`.\n *\n * @param {Element} el\n * @param {String} selector\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\n// Some events don't bubble, so we want to bind to the capture phase instead\n// when delegating.\nvar forceCaptureEvents = ['focus', 'blur'];\n\nfunction bind$1(el, selector, type, fn, capture) {\n  if (forceCaptureEvents.indexOf(type) !== -1) {\n    capture = true;\n  }\n\n  return componentEvent.bind(el, type, function (e) {\n    var target = e.target || e.srcElement;\n    e.delegateTarget = closest(target, selector, true, el);\n    if (e.delegateTarget) {\n      fn.call(el, e);\n    }\n  }, capture);\n}\n\n/**\n * Unbind event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @api public\n */\nfunction unbind$1(el, type, fn, capture) {\n  if (forceCaptureEvents.indexOf(type) !== -1) {\n    capture = true;\n  }\n\n  return componentEvent.unbind(el, type, fn, capture);\n}\n\nvar delegate = {\n  bind: bind$1,\n  unbind: unbind$1\n};\n\n/**\n * Expose `parse`.\n */\n\nvar domify = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td =\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option =\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead =\nmap.tbody =\nmap.colgroup =\nmap.caption =\nmap.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline =\nmap.ellipse =\nmap.polygon =\nmap.circle =\nmap.text =\nmap.line =\nmap.path =\nmap.rect =\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n\nfunction query(selector, el) {\n  el = el || document;\n\n  return el.querySelector(selector);\n}\n\nfunction all(selector, el) {\n  el = el || document;\n\n  return el.querySelectorAll(selector);\n}\n\nfunction remove(el) {\n  el.parentNode && el.parentNode.removeChild(el);\n}\n\nexport { attr, classes, clear, closest, delegate, domify, componentEvent as event, matchesSelector as matches, query, all as queryAll, remove };\n","import { forEach, assign, find, filter, has, isString } from 'min-dash';\nimport { Parser } from 'saxen';\nimport { coerceType, parseNameNS, isSimpleType, Moddle } from 'moddle';\n\nfunction hasLowerCaseAlias(pkg) {\n  return pkg.xml && pkg.xml.tagAlias === 'lowerCase';\n}\n\nvar DEFAULT_NS_MAP = {\n  'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n  'xml': 'http://www.w3.org/XML/1998/namespace'\n};\n\nvar XSI_TYPE = 'xsi:type';\n\nfunction serializeFormat(element) {\n  return element.xml && element.xml.serialize;\n}\n\nfunction serializeAsType(element) {\n  return serializeFormat(element) === XSI_TYPE;\n}\n\nfunction serializeAsProperty(element) {\n  return serializeFormat(element) === 'property';\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction aliasToName(aliasNs, pkg) {\n\n  if (!hasLowerCaseAlias(pkg)) {\n    return aliasNs.name;\n  }\n\n  return aliasNs.prefix + ':' + capitalize(aliasNs.localName);\n}\n\nfunction prefixedToName(nameNs, pkg) {\n\n  var name = nameNs.name,\n      localName = nameNs.localName;\n\n  var typePrefix = pkg.xml && pkg.xml.typePrefix;\n\n  if (typePrefix && localName.indexOf(typePrefix) === 0) {\n    return nameNs.prefix + ':' + localName.slice(typePrefix.length);\n  } else {\n    return name;\n  }\n}\n\nfunction normalizeXsiTypeName(name, model) {\n\n  var nameNs = parseNameNS(name);\n  var pkg = model.getPackage(nameNs.prefix);\n\n  return prefixedToName(nameNs, pkg);\n}\n\nfunction error(message) {\n  return new Error(message);\n}\n\n/**\n * Get the moddle descriptor for a given instance or type.\n *\n * @param  {ModdleElement|Function} element\n *\n * @return {Object} the moddle descriptor\n */\nfunction getModdleDescriptor(element) {\n  return element.$descriptor;\n}\n\n\n/**\n * A parse context.\n *\n * @class\n *\n * @param {Object} options\n * @param {ElementHandler} options.rootHandler the root handler for parsing a document\n * @param {boolean} [options.lax=false] whether or not to ignore invalid elements\n */\nfunction Context(options) {\n\n  /**\n   * @property {ElementHandler} rootHandler\n   */\n\n  /**\n   * @property {Boolean} lax\n   */\n\n  assign(this, options);\n\n  this.elementsById = {};\n  this.references = [];\n  this.warnings = [];\n\n  /**\n   * Add an unresolved reference.\n   *\n   * @param {Object} reference\n   */\n  this.addReference = function(reference) {\n    this.references.push(reference);\n  };\n\n  /**\n   * Add a processed element.\n   *\n   * @param {ModdleElement} element\n   */\n  this.addElement = function(element) {\n\n    if (!element) {\n      throw error('expected element');\n    }\n\n    var elementsById = this.elementsById;\n\n    var descriptor = getModdleDescriptor(element);\n\n    var idProperty = descriptor.idProperty,\n        id;\n\n    if (idProperty) {\n      id = element.get(idProperty.name);\n\n      if (id) {\n\n        // for QName validation as per http://www.w3.org/TR/REC-xml/#NT-NameChar\n        if (!/^([a-z][\\w-.]*:)?[a-z_][\\w-.]*$/i.test(id)) {\n          throw new Error('illegal ID <' + id + '>');\n        }\n\n        if (elementsById[id]) {\n          throw error('duplicate ID <' + id + '>');\n        }\n\n        elementsById[id] = element;\n      }\n    }\n  };\n\n  /**\n   * Add an import warning.\n   *\n   * @param {Object} warning\n   * @param {String} warning.message\n   * @param {Error} [warning.error]\n   */\n  this.addWarning = function(warning) {\n    this.warnings.push(warning);\n  };\n}\n\nfunction BaseHandler() {}\n\nBaseHandler.prototype.handleEnd = function() {};\nBaseHandler.prototype.handleText = function() {};\nBaseHandler.prototype.handleNode = function() {};\n\n\n/**\n * A simple pass through handler that does nothing except for\n * ignoring all input it receives.\n *\n * This is used to ignore unknown elements and\n * attributes.\n */\nfunction NoopHandler() { }\n\nNoopHandler.prototype = Object.create(BaseHandler.prototype);\n\nNoopHandler.prototype.handleNode = function() {\n  return this;\n};\n\nfunction BodyHandler() {}\n\nBodyHandler.prototype = Object.create(BaseHandler.prototype);\n\nBodyHandler.prototype.handleText = function(text) {\n  this.body = (this.body || '') + text;\n};\n\nfunction ReferenceHandler(property, context) {\n  this.property = property;\n  this.context = context;\n}\n\nReferenceHandler.prototype = Object.create(BodyHandler.prototype);\n\nReferenceHandler.prototype.handleNode = function(node) {\n\n  if (this.element) {\n    throw error('expected no sub nodes');\n  } else {\n    this.element = this.createReference(node);\n  }\n\n  return this;\n};\n\nReferenceHandler.prototype.handleEnd = function() {\n  this.element.id = this.body;\n};\n\nReferenceHandler.prototype.createReference = function(node) {\n  return {\n    property: this.property.ns.name,\n    id: ''\n  };\n};\n\nfunction ValueHandler(propertyDesc, element) {\n  this.element = element;\n  this.propertyDesc = propertyDesc;\n}\n\nValueHandler.prototype = Object.create(BodyHandler.prototype);\n\nValueHandler.prototype.handleEnd = function() {\n\n  var value = this.body || '',\n      element = this.element,\n      propertyDesc = this.propertyDesc;\n\n  value = coerceType(propertyDesc.type, value);\n\n  if (propertyDesc.isMany) {\n    element.get(propertyDesc.name).push(value);\n  } else {\n    element.set(propertyDesc.name, value);\n  }\n};\n\n\nfunction BaseElementHandler() {}\n\nBaseElementHandler.prototype = Object.create(BodyHandler.prototype);\n\nBaseElementHandler.prototype.handleNode = function(node) {\n  var parser = this,\n      element = this.element;\n\n  if (!element) {\n    element = this.element = this.createElement(node);\n\n    this.context.addElement(element);\n  } else {\n    parser = this.handleChild(node);\n  }\n\n  return parser;\n};\n\n/**\n * @class Reader.ElementHandler\n *\n */\nfunction ElementHandler(model, typeName, context) {\n  this.model = model;\n  this.type = model.getType(typeName);\n  this.context = context;\n}\n\nElementHandler.prototype = Object.create(BaseElementHandler.prototype);\n\nElementHandler.prototype.addReference = function(reference) {\n  this.context.addReference(reference);\n};\n\nElementHandler.prototype.handleText = function(text) {\n\n  var element = this.element,\n      descriptor = getModdleDescriptor(element),\n      bodyProperty = descriptor.bodyProperty;\n\n  if (!bodyProperty) {\n    throw error('unexpected body text <' + text + '>');\n  }\n\n  BodyHandler.prototype.handleText.call(this, text);\n};\n\nElementHandler.prototype.handleEnd = function() {\n\n  var value = this.body,\n      element = this.element,\n      descriptor = getModdleDescriptor(element),\n      bodyProperty = descriptor.bodyProperty;\n\n  if (bodyProperty && value !== undefined) {\n    value = coerceType(bodyProperty.type, value);\n    element.set(bodyProperty.name, value);\n  }\n};\n\n/**\n * Create an instance of the model from the given node.\n *\n * @param  {Element} node the xml node\n */\nElementHandler.prototype.createElement = function(node) {\n  var attributes = node.attributes,\n      Type = this.type,\n      descriptor = getModdleDescriptor(Type),\n      context = this.context,\n      instance = new Type({}),\n      model = this.model,\n      propNameNs;\n\n  forEach(attributes, function(value, name) {\n\n    var prop = descriptor.propertiesByName[name],\n        values;\n\n    if (prop && prop.isReference) {\n\n      if (!prop.isMany) {\n        context.addReference({\n          element: instance,\n          property: prop.ns.name,\n          id: value\n        });\n      } else {\n\n        // IDREFS: parse references as whitespace-separated list\n        values = value.split(' ');\n\n        forEach(values, function(v) {\n          context.addReference({\n            element: instance,\n            property: prop.ns.name,\n            id: v\n          });\n        });\n      }\n\n    } else {\n      if (prop) {\n        value = coerceType(prop.type, value);\n      } else\n      if (name !== 'xmlns') {\n        propNameNs = parseNameNS(name, descriptor.ns.prefix);\n\n        // check whether attribute is defined in a well-known namespace\n        // if that is the case we emit a warning to indicate potential misuse\n        if (model.getPackage(propNameNs.prefix)) {\n\n          context.addWarning({\n            message: 'unknown attribute <' + name + '>',\n            element: instance,\n            property: name,\n            value: value\n          });\n        }\n      }\n\n      instance.set(name, value);\n    }\n  });\n\n  return instance;\n};\n\nElementHandler.prototype.getPropertyForNode = function(node) {\n\n  var name = node.name;\n  var nameNs = parseNameNS(name);\n\n  var type = this.type,\n      model = this.model,\n      descriptor = getModdleDescriptor(type);\n\n  var propertyName = nameNs.name,\n      property = descriptor.propertiesByName[propertyName],\n      elementTypeName,\n      elementType;\n\n  // search for properties by name first\n\n  if (property && !property.isAttr) {\n\n    if (serializeAsType(property)) {\n      elementTypeName = node.attributes[XSI_TYPE];\n\n      // xsi type is optional, if it does not exists the\n      // default type is assumed\n      if (elementTypeName) {\n\n        // take possible type prefixes from XML\n        // into account, i.e.: xsi:type=\"t{ActualType}\"\n        elementTypeName = normalizeXsiTypeName(elementTypeName, model);\n\n        elementType = model.getType(elementTypeName);\n\n        return assign({}, property, {\n          effectiveType: getModdleDescriptor(elementType).name\n        });\n      }\n    }\n\n    // search for properties by name first\n    return property;\n  }\n\n  var pkg = model.getPackage(nameNs.prefix);\n\n  if (pkg) {\n    elementTypeName = aliasToName(nameNs, pkg);\n    elementType = model.getType(elementTypeName);\n\n    // search for collection members later\n    property = find(descriptor.properties, function(p) {\n      return !p.isVirtual && !p.isReference && !p.isAttribute && elementType.hasType(p.type);\n    });\n\n    if (property) {\n      return assign({}, property, {\n        effectiveType: getModdleDescriptor(elementType).name\n      });\n    }\n  } else {\n\n    // parse unknown element (maybe extension)\n    property = find(descriptor.properties, function(p) {\n      return !p.isReference && !p.isAttribute && p.type === 'Element';\n    });\n\n    if (property) {\n      return property;\n    }\n  }\n\n  throw error('unrecognized element <' + nameNs.name + '>');\n};\n\nElementHandler.prototype.toString = function() {\n  return 'ElementDescriptor[' + getModdleDescriptor(this.type).name + ']';\n};\n\nElementHandler.prototype.valueHandler = function(propertyDesc, element) {\n  return new ValueHandler(propertyDesc, element);\n};\n\nElementHandler.prototype.referenceHandler = function(propertyDesc) {\n  return new ReferenceHandler(propertyDesc, this.context);\n};\n\nElementHandler.prototype.handler = function(type) {\n  if (type === 'Element') {\n    return new GenericElementHandler(this.model, type, this.context);\n  } else {\n    return new ElementHandler(this.model, type, this.context);\n  }\n};\n\n/**\n * Handle the child element parsing\n *\n * @param  {Element} node the xml node\n */\nElementHandler.prototype.handleChild = function(node) {\n  var propertyDesc, type, element, childHandler;\n\n  propertyDesc = this.getPropertyForNode(node);\n  element = this.element;\n\n  type = propertyDesc.effectiveType || propertyDesc.type;\n\n  if (isSimpleType(type)) {\n    return this.valueHandler(propertyDesc, element);\n  }\n\n  if (propertyDesc.isReference) {\n    childHandler = this.referenceHandler(propertyDesc).handleNode(node);\n  } else {\n    childHandler = this.handler(type).handleNode(node);\n  }\n\n  var newElement = childHandler.element;\n\n  // child handles may decide to skip elements\n  // by not returning anything\n  if (newElement !== undefined) {\n\n    if (propertyDesc.isMany) {\n      element.get(propertyDesc.name).push(newElement);\n    } else {\n      element.set(propertyDesc.name, newElement);\n    }\n\n    if (propertyDesc.isReference) {\n      assign(newElement, {\n        element: element\n      });\n\n      this.context.addReference(newElement);\n    } else {\n\n      // establish child -> parent relationship\n      newElement.$parent = element;\n    }\n  }\n\n  return childHandler;\n};\n\n/**\n * An element handler that performs special validation\n * to ensure the node it gets initialized with matches\n * the handlers type (namespace wise).\n *\n * @param {Moddle} model\n * @param {String} typeName\n * @param {Context} context\n */\nfunction RootElementHandler(model, typeName, context) {\n  ElementHandler.call(this, model, typeName, context);\n}\n\nRootElementHandler.prototype = Object.create(ElementHandler.prototype);\n\nRootElementHandler.prototype.createElement = function(node) {\n\n  var name = node.name,\n      nameNs = parseNameNS(name),\n      model = this.model,\n      type = this.type,\n      pkg = model.getPackage(nameNs.prefix),\n      typeName = pkg && aliasToName(nameNs, pkg) || name;\n\n  // verify the correct namespace if we parse\n  // the first element in the handler tree\n  //\n  // this ensures we don't mistakenly import wrong namespace elements\n  if (!type.hasType(typeName)) {\n    throw error('unexpected element <' + node.originalName + '>');\n  }\n\n  return ElementHandler.prototype.createElement.call(this, node);\n};\n\n\nfunction GenericElementHandler(model, typeName, context) {\n  this.model = model;\n  this.context = context;\n}\n\nGenericElementHandler.prototype = Object.create(BaseElementHandler.prototype);\n\nGenericElementHandler.prototype.createElement = function(node) {\n\n  var name = node.name,\n      ns = parseNameNS(name),\n      prefix = ns.prefix,\n      uri = node.ns[prefix + '$uri'],\n      attributes = node.attributes;\n\n  return this.model.createAny(name, uri, attributes);\n};\n\nGenericElementHandler.prototype.handleChild = function(node) {\n\n  var handler = new GenericElementHandler(this.model, 'Element', this.context).handleNode(node),\n      element = this.element;\n\n  var newElement = handler.element,\n      children;\n\n  if (newElement !== undefined) {\n    children = element.$children = element.$children || [];\n    children.push(newElement);\n\n    // establish child -> parent relationship\n    newElement.$parent = element;\n  }\n\n  return handler;\n};\n\nGenericElementHandler.prototype.handleEnd = function() {\n  if (this.body) {\n    this.element.$body = this.body;\n  }\n};\n\n/**\n * A reader for a meta-model\n *\n * @param {Object} options\n * @param {Model} options.model used to read xml files\n * @param {Boolean} options.lax whether to make parse errors warnings\n */\nfunction Reader(options) {\n\n  if (options instanceof Moddle) {\n    options = {\n      model: options\n    };\n  }\n\n  assign(this, { lax: false }, options);\n}\n\n/**\n * The fromXML result.\n *\n * @typedef {Object} ParseResult\n *\n * @property {ModdleElement} rootElement\n * @property {Array<Object>} references\n * @property {Array<Error>} warnings\n * @property {Object} elementsById - a mapping containing each ID -> ModdleElement\n */\n\n/**\n * The fromXML result.\n *\n * @typedef {Error} ParseError\n *\n * @property {Array<Error>} warnings\n */\n\n/**\n * Parse the given XML into a moddle document tree.\n *\n * @param {String} xml\n * @param {ElementHandler|Object} options or rootHandler\n *\n * @returns {Promise<ParseResult, ParseError>}\n */\nReader.prototype.fromXML = function(xml, options, done) {\n\n  var rootHandler = options.rootHandler;\n\n  if (options instanceof ElementHandler) {\n\n    // root handler passed via (xml, { rootHandler: ElementHandler }, ...)\n    rootHandler = options;\n    options = {};\n  } else {\n    if (typeof options === 'string') {\n\n      // rootHandler passed via (xml, 'someString', ...)\n      rootHandler = this.handler(options);\n      options = {};\n    } else if (typeof rootHandler === 'string') {\n\n      // rootHandler passed via (xml, { rootHandler: 'someString' }, ...)\n      rootHandler = this.handler(rootHandler);\n    }\n  }\n\n  var model = this.model,\n      lax = this.lax;\n\n  var context = new Context(assign({}, options, { rootHandler: rootHandler })),\n      parser = new Parser({ proxy: true }),\n      stack = createStack();\n\n  rootHandler.context = context;\n\n  // push root handler\n  stack.push(rootHandler);\n\n\n  /**\n   * Handle error.\n   *\n   * @param  {Error} err\n   * @param  {Function} getContext\n   * @param  {boolean} lax\n   *\n   * @return {boolean} true if handled\n   */\n  function handleError(err, getContext, lax) {\n\n    var ctx = getContext();\n\n    var line = ctx.line,\n        column = ctx.column,\n        data = ctx.data;\n\n    // we receive the full context data here,\n    // for elements trim down the information\n    // to the tag name, only\n    if (data.charAt(0) === '<' && data.indexOf(' ') !== -1) {\n      data = data.slice(0, data.indexOf(' ')) + '>';\n    }\n\n    var message =\n      'unparsable content ' + (data ? data + ' ' : '') + 'detected\\n\\t' +\n        'line: ' + line + '\\n\\t' +\n        'column: ' + column + '\\n\\t' +\n        'nested error: ' + err.message;\n\n    if (lax) {\n      context.addWarning({\n        message: message,\n        error: err\n      });\n\n      return true;\n    } else {\n      throw error(message);\n    }\n  }\n\n  function handleWarning(err, getContext) {\n\n    // just like handling errors in <lax=true> mode\n    return handleError(err, getContext, true);\n  }\n\n  /**\n   * Resolve collected references on parse end.\n   */\n  function resolveReferences() {\n\n    var elementsById = context.elementsById;\n    var references = context.references;\n\n    var i, r;\n\n    for (i = 0; (r = references[i]); i++) {\n      var element = r.element;\n      var reference = elementsById[r.id];\n      var property = getModdleDescriptor(element).propertiesByName[r.property];\n\n      if (!reference) {\n        context.addWarning({\n          message: 'unresolved reference <' + r.id + '>',\n          element: r.element,\n          property: r.property,\n          value: r.id\n        });\n      }\n\n      if (property.isMany) {\n        var collection = element.get(property.name),\n            idx = collection.indexOf(r);\n\n        // we replace an existing place holder (idx != -1) or\n        // append to the collection instead\n        if (idx === -1) {\n          idx = collection.length;\n        }\n\n        if (!reference) {\n\n          // remove unresolvable reference\n          collection.splice(idx, 1);\n        } else {\n\n          // add or update reference in collection\n          collection[idx] = reference;\n        }\n      } else {\n        element.set(property.name, reference);\n      }\n    }\n  }\n\n  function handleClose() {\n    stack.pop().handleEnd();\n  }\n\n  var PREAMBLE_START_PATTERN = /^<\\?xml /i;\n\n  var ENCODING_PATTERN = / encoding=\"([^\"]+)\"/i;\n\n  var UTF_8_PATTERN = /^utf-8$/i;\n\n  function handleQuestion(question) {\n\n    if (!PREAMBLE_START_PATTERN.test(question)) {\n      return;\n    }\n\n    var match = ENCODING_PATTERN.exec(question);\n    var encoding = match && match[1];\n\n    if (!encoding || UTF_8_PATTERN.test(encoding)) {\n      return;\n    }\n\n    context.addWarning({\n      message:\n        'unsupported document encoding <' + encoding + '>, ' +\n        'falling back to UTF-8'\n    });\n  }\n\n  function handleOpen(node, getContext) {\n    var handler = stack.peek();\n\n    try {\n      stack.push(handler.handleNode(node));\n    } catch (err) {\n\n      if (handleError(err, getContext, lax)) {\n        stack.push(new NoopHandler());\n      }\n    }\n  }\n\n  function handleCData(text, getContext) {\n\n    try {\n      stack.peek().handleText(text);\n    } catch (err) {\n      handleWarning(err, getContext);\n    }\n  }\n\n  function handleText(text, getContext) {\n\n    // strip whitespace only nodes, i.e. before\n    // <!CDATA[ ... ]> sections and in between tags\n\n    if (!text.trim()) {\n      return;\n    }\n\n    handleCData(text, getContext);\n  }\n\n  var uriMap = model.getPackages().reduce(function(uriMap, p) {\n    uriMap[p.uri] = p.prefix;\n\n    return uriMap;\n  }, {\n    'http://www.w3.org/XML/1998/namespace': 'xml' // add default xml ns\n  });\n  parser\n    .ns(uriMap)\n    .on('openTag', function(obj, decodeStr, selfClosing, getContext) {\n\n      // gracefully handle unparsable attributes (attrs=false)\n      var attrs = obj.attrs || {};\n\n      var decodedAttrs = Object.keys(attrs).reduce(function(d, key) {\n        var value = decodeStr(attrs[key]);\n\n        d[key] = value;\n\n        return d;\n      }, {});\n\n      var node = {\n        name: obj.name,\n        originalName: obj.originalName,\n        attributes: decodedAttrs,\n        ns: obj.ns\n      };\n\n      handleOpen(node, getContext);\n    })\n    .on('question', handleQuestion)\n    .on('closeTag', handleClose)\n    .on('cdata', handleCData)\n    .on('text', function(text, decodeEntities, getContext) {\n      handleText(decodeEntities(text), getContext);\n    })\n    .on('error', handleError)\n    .on('warn', handleWarning);\n\n  // async XML parsing to make sure the execution environment\n  // (node or brower) is kept responsive and that certain optimization\n  // strategies can kick in.\n  return new Promise(function(resolve, reject) {\n\n    var err;\n\n    try {\n      parser.parse(xml);\n\n      resolveReferences();\n    } catch (e) {\n      err = e;\n    }\n\n    var rootElement = rootHandler.element;\n\n    if (!err && !rootElement) {\n      err = error('failed to parse document as <' + rootHandler.type.$descriptor.name + '>');\n    }\n\n    var warnings = context.warnings;\n    var references = context.references;\n    var elementsById = context.elementsById;\n\n    if (err) {\n      err.warnings = warnings;\n\n      return reject(err);\n    } else {\n      return resolve({\n        rootElement: rootElement,\n        elementsById: elementsById,\n        references: references,\n        warnings: warnings\n      });\n    }\n  });\n};\n\nReader.prototype.handler = function(name) {\n  return new RootElementHandler(this.model, name);\n};\n\n\n// helpers //////////////////////////\n\nfunction createStack() {\n  var stack = [];\n\n  Object.defineProperty(stack, 'peek', {\n    value: function() {\n      return this[this.length - 1];\n    }\n  });\n\n  return stack;\n}\n\nvar XML_PREAMBLE = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n\nvar ESCAPE_ATTR_CHARS = /<|>|'|\"|&|\\n\\r|\\n/g;\nvar ESCAPE_CHARS = /<|>|&/g;\n\n\nfunction Namespaces(parent) {\n\n  var prefixMap = {};\n  var uriMap = {};\n  var used = {};\n\n  var wellknown = [];\n  var custom = [];\n\n  // API\n\n  this.byUri = function(uri) {\n    return uriMap[uri] || (\n      parent && parent.byUri(uri)\n    );\n  };\n\n  this.add = function(ns, isWellknown) {\n\n    uriMap[ns.uri] = ns;\n\n    if (isWellknown) {\n      wellknown.push(ns);\n    } else {\n      custom.push(ns);\n    }\n\n    this.mapPrefix(ns.prefix, ns.uri);\n  };\n\n  this.uriByPrefix = function(prefix) {\n    return prefixMap[prefix || 'xmlns'];\n  };\n\n  this.mapPrefix = function(prefix, uri) {\n    prefixMap[prefix || 'xmlns'] = uri;\n  };\n\n  this.getNSKey = function(ns) {\n    return (ns.prefix !== undefined) ? (ns.uri + '|' + ns.prefix) : ns.uri;\n  };\n\n  this.logUsed = function(ns) {\n\n    var uri = ns.uri;\n    var nsKey = this.getNSKey(ns);\n\n    used[nsKey] = this.byUri(uri);\n\n    // Inform parent recursively about the usage of this NS\n    if (parent) {\n      parent.logUsed(ns);\n    }\n  };\n\n  this.getUsed = function(ns) {\n\n    function isUsed(ns) {\n      var nsKey = self.getNSKey(ns);\n\n      return used[nsKey];\n    }\n\n    var self = this;\n\n    var allNs = [].concat(wellknown, custom);\n\n    return allNs.filter(isUsed);\n  };\n\n}\n\nfunction lower(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nfunction nameToAlias(name, pkg) {\n  if (hasLowerCaseAlias(pkg)) {\n    return lower(name);\n  } else {\n    return name;\n  }\n}\n\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nfunction nsName(ns) {\n  if (isString(ns)) {\n    return ns;\n  } else {\n    return (ns.prefix ? ns.prefix + ':' : '') + ns.localName;\n  }\n}\n\nfunction getNsAttrs(namespaces) {\n\n  return namespaces.getUsed().filter(function(ns) {\n\n    // do not serialize built in <xml> namespace\n    return ns.prefix !== 'xml';\n  }).map(function(ns) {\n    var name = 'xmlns' + (ns.prefix ? ':' + ns.prefix : '');\n    return { name: name, value: ns.uri };\n  });\n\n}\n\nfunction getElementNs(ns, descriptor) {\n  if (descriptor.isGeneric) {\n    return assign({ localName: descriptor.ns.localName }, ns);\n  } else {\n    return assign({ localName: nameToAlias(descriptor.ns.localName, descriptor.$pkg) }, ns);\n  }\n}\n\nfunction getPropertyNs(ns, descriptor) {\n  return assign({ localName: descriptor.ns.localName }, ns);\n}\n\nfunction getSerializableProperties(element) {\n  var descriptor = element.$descriptor;\n\n  return filter(descriptor.properties, function(p) {\n    var name = p.name;\n\n    if (p.isVirtual) {\n      return false;\n    }\n\n    // do not serialize defaults\n    if (!has(element, name)) {\n      return false;\n    }\n\n    var value = element[name];\n\n    // do not serialize default equals\n    if (value === p.default) {\n      return false;\n    }\n\n    // do not serialize null properties\n    if (value === null) {\n      return false;\n    }\n\n    return p.isMany ? value.length : true;\n  });\n}\n\nvar ESCAPE_ATTR_MAP = {\n  '\\n': '#10',\n  '\\n\\r': '#10',\n  '\"': '#34',\n  '\\'': '#39',\n  '<': '#60',\n  '>': '#62',\n  '&': '#38'\n};\n\nvar ESCAPE_MAP = {\n  '<': 'lt',\n  '>': 'gt',\n  '&': 'amp'\n};\n\nfunction escape(str, charPattern, replaceMap) {\n\n  // ensure we are handling strings here\n  str = isString(str) ? str : '' + str;\n\n  return str.replace(charPattern, function(s) {\n    return '&' + replaceMap[s] + ';';\n  });\n}\n\n/**\n * Escape a string attribute to not contain any bad values (line breaks, '\"', ...)\n *\n * @param {String} str the string to escape\n * @return {String} the escaped string\n */\nfunction escapeAttr(str) {\n  return escape(str, ESCAPE_ATTR_CHARS, ESCAPE_ATTR_MAP);\n}\n\nfunction escapeBody(str) {\n  return escape(str, ESCAPE_CHARS, ESCAPE_MAP);\n}\n\nfunction filterAttributes(props) {\n  return filter(props, function(p) { return p.isAttr; });\n}\n\nfunction filterContained(props) {\n  return filter(props, function(p) { return !p.isAttr; });\n}\n\n\nfunction ReferenceSerializer(tagName) {\n  this.tagName = tagName;\n}\n\nReferenceSerializer.prototype.build = function(element) {\n  this.element = element;\n  return this;\n};\n\nReferenceSerializer.prototype.serializeTo = function(writer) {\n  writer\n    .appendIndent()\n    .append('<' + this.tagName + '>' + this.element.id + '</' + this.tagName + '>')\n    .appendNewLine();\n};\n\nfunction BodySerializer() {}\n\nBodySerializer.prototype.serializeValue =\nBodySerializer.prototype.serializeTo = function(writer) {\n  writer.append(\n    this.escape\n      ? escapeBody(this.value)\n      : this.value\n  );\n};\n\nBodySerializer.prototype.build = function(prop, value) {\n  this.value = value;\n\n  if (prop.type === 'String' && value.search(ESCAPE_CHARS) !== -1) {\n    this.escape = true;\n  }\n\n  return this;\n};\n\nfunction ValueSerializer(tagName) {\n  this.tagName = tagName;\n}\n\ninherits(ValueSerializer, BodySerializer);\n\nValueSerializer.prototype.serializeTo = function(writer) {\n\n  writer\n    .appendIndent()\n    .append('<' + this.tagName + '>');\n\n  this.serializeValue(writer);\n\n  writer\n    .append('</' + this.tagName + '>')\n    .appendNewLine();\n};\n\nfunction ElementSerializer(parent, propertyDescriptor) {\n  this.body = [];\n  this.attrs = [];\n\n  this.parent = parent;\n  this.propertyDescriptor = propertyDescriptor;\n}\n\nElementSerializer.prototype.build = function(element) {\n  this.element = element;\n\n  var elementDescriptor = element.$descriptor,\n      propertyDescriptor = this.propertyDescriptor;\n\n  var otherAttrs,\n      properties;\n\n  var isGeneric = elementDescriptor.isGeneric;\n\n  if (isGeneric) {\n    otherAttrs = this.parseGeneric(element);\n  } else {\n    otherAttrs = this.parseNsAttributes(element);\n  }\n\n  if (propertyDescriptor) {\n    this.ns = this.nsPropertyTagName(propertyDescriptor);\n  } else {\n    this.ns = this.nsTagName(elementDescriptor);\n  }\n\n  // compute tag name\n  this.tagName = this.addTagName(this.ns);\n\n  if (!isGeneric) {\n    properties = getSerializableProperties(element);\n\n    this.parseAttributes(filterAttributes(properties));\n    this.parseContainments(filterContained(properties));\n  }\n\n  this.parseGenericAttributes(element, otherAttrs);\n\n  return this;\n};\n\nElementSerializer.prototype.nsTagName = function(descriptor) {\n  var effectiveNs = this.logNamespaceUsed(descriptor.ns);\n  return getElementNs(effectiveNs, descriptor);\n};\n\nElementSerializer.prototype.nsPropertyTagName = function(descriptor) {\n  var effectiveNs = this.logNamespaceUsed(descriptor.ns);\n  return getPropertyNs(effectiveNs, descriptor);\n};\n\nElementSerializer.prototype.isLocalNs = function(ns) {\n  return ns.uri === this.ns.uri;\n};\n\n/**\n * Get the actual ns attribute name for the given element.\n *\n * @param {Object} element\n * @param {Boolean} [element.inherited=false]\n *\n * @return {Object} nsName\n */\nElementSerializer.prototype.nsAttributeName = function(element) {\n\n  var ns;\n\n  if (isString(element)) {\n    ns = parseNameNS(element);\n  } else {\n    ns = element.ns;\n  }\n\n  // return just local name for inherited attributes\n  if (element.inherited) {\n    return { localName: ns.localName };\n  }\n\n  // parse + log effective ns\n  var effectiveNs = this.logNamespaceUsed(ns);\n\n  // LOG ACTUAL namespace use\n  this.getNamespaces().logUsed(effectiveNs);\n\n  // strip prefix if same namespace like parent\n  if (this.isLocalNs(effectiveNs)) {\n    return { localName: ns.localName };\n  } else {\n    return assign({ localName: ns.localName }, effectiveNs);\n  }\n};\n\nElementSerializer.prototype.parseGeneric = function(element) {\n\n  var self = this,\n      body = this.body;\n\n  var attributes = [];\n\n  forEach(element, function(val, key) {\n\n    var nonNsAttr;\n\n    if (key === '$body') {\n      body.push(new BodySerializer().build({ type: 'String' }, val));\n    } else\n    if (key === '$children') {\n      forEach(val, function(child) {\n        body.push(new ElementSerializer(self).build(child));\n      });\n    } else\n    if (key.indexOf('$') !== 0) {\n      nonNsAttr = self.parseNsAttribute(element, key, val);\n\n      if (nonNsAttr) {\n        attributes.push({ name: key, value: val });\n      }\n    }\n  });\n\n  return attributes;\n};\n\nElementSerializer.prototype.parseNsAttribute = function(element, name, value) {\n  var model = element.$model;\n\n  var nameNs = parseNameNS(name);\n\n  var ns;\n\n  // parse xmlns:foo=\"http://foo.bar\"\n  if (nameNs.prefix === 'xmlns') {\n    ns = { prefix: nameNs.localName, uri: value };\n  }\n\n  // parse xmlns=\"http://foo.bar\"\n  if (!nameNs.prefix && nameNs.localName === 'xmlns') {\n    ns = { uri: value };\n  }\n\n  if (!ns) {\n    return {\n      name: name,\n      value: value\n    };\n  }\n\n  if (model && model.getPackage(value)) {\n\n    // register well known namespace\n    this.logNamespace(ns, true, true);\n  } else {\n\n    // log custom namespace directly as used\n    var actualNs = this.logNamespaceUsed(ns, true);\n\n    this.getNamespaces().logUsed(actualNs);\n  }\n};\n\n\n/**\n * Parse namespaces and return a list of left over generic attributes\n *\n * @param  {Object} element\n * @return {Array<Object>}\n */\nElementSerializer.prototype.parseNsAttributes = function(element, attrs) {\n  var self = this;\n\n  var genericAttrs = element.$attrs;\n\n  var attributes = [];\n\n  // parse namespace attributes first\n  // and log them. push non namespace attributes to a list\n  // and process them later\n  forEach(genericAttrs, function(value, name) {\n\n    var nonNsAttr = self.parseNsAttribute(element, name, value);\n\n    if (nonNsAttr) {\n      attributes.push(nonNsAttr);\n    }\n  });\n\n  return attributes;\n};\n\nElementSerializer.prototype.parseGenericAttributes = function(element, attributes) {\n\n  var self = this;\n\n  forEach(attributes, function(attr) {\n\n    // do not serialize xsi:type attribute\n    // it is set manually based on the actual implementation type\n    if (attr.name === XSI_TYPE) {\n      return;\n    }\n\n    try {\n      self.addAttribute(self.nsAttributeName(attr.name), attr.value);\n    } catch (e) {\n      console.warn(\n        'missing namespace information for ',\n        attr.name, '=', attr.value, 'on', element,\n        e);\n    }\n  });\n};\n\nElementSerializer.prototype.parseContainments = function(properties) {\n\n  var self = this,\n      body = this.body,\n      element = this.element;\n\n  forEach(properties, function(p) {\n    var value = element.get(p.name),\n        isReference = p.isReference,\n        isMany = p.isMany;\n\n    if (!isMany) {\n      value = [ value ];\n    }\n\n    if (p.isBody) {\n      body.push(new BodySerializer().build(p, value[0]));\n    } else\n    if (isSimpleType(p.type)) {\n      forEach(value, function(v) {\n        body.push(new ValueSerializer(self.addTagName(self.nsPropertyTagName(p))).build(p, v));\n      });\n    } else\n    if (isReference) {\n      forEach(value, function(v) {\n        body.push(new ReferenceSerializer(self.addTagName(self.nsPropertyTagName(p))).build(v));\n      });\n    } else {\n\n      // allow serialization via type\n      // rather than element name\n      var asType = serializeAsType(p),\n          asProperty = serializeAsProperty(p);\n\n      forEach(value, function(v) {\n        var serializer;\n\n        if (asType) {\n          serializer = new TypeSerializer(self, p);\n        } else\n        if (asProperty) {\n          serializer = new ElementSerializer(self, p);\n        } else {\n          serializer = new ElementSerializer(self);\n        }\n\n        body.push(serializer.build(v));\n      });\n    }\n  });\n};\n\nElementSerializer.prototype.getNamespaces = function(local) {\n\n  var namespaces = this.namespaces,\n      parent = this.parent,\n      parentNamespaces;\n\n  if (!namespaces) {\n    parentNamespaces = parent && parent.getNamespaces();\n\n    if (local || !parentNamespaces) {\n      this.namespaces = namespaces = new Namespaces(parentNamespaces);\n    } else {\n      namespaces = parentNamespaces;\n    }\n  }\n\n  return namespaces;\n};\n\nElementSerializer.prototype.logNamespace = function(ns, wellknown, local) {\n  var namespaces = this.getNamespaces(local);\n\n  var nsUri = ns.uri,\n      nsPrefix = ns.prefix;\n\n  var existing = namespaces.byUri(nsUri);\n\n  if (!existing || local) {\n    namespaces.add(ns, wellknown);\n  }\n\n  namespaces.mapPrefix(nsPrefix, nsUri);\n\n  return ns;\n};\n\nElementSerializer.prototype.logNamespaceUsed = function(ns, local) {\n  var element = this.element,\n      model = element.$model,\n      namespaces = this.getNamespaces(local);\n\n  // ns may be\n  //\n  //   * prefix only\n  //   * prefix:uri\n  //   * localName only\n\n  var prefix = ns.prefix,\n      uri = ns.uri,\n      newPrefix, idx,\n      wellknownUri;\n\n  // handle anonymous namespaces (elementForm=unqualified), cf. #23\n  if (!prefix && !uri) {\n    return { localName: ns.localName };\n  }\n\n  wellknownUri = DEFAULT_NS_MAP[prefix] || model && (model.getPackage(prefix) || {}).uri;\n\n  uri = uri || wellknownUri || namespaces.uriByPrefix(prefix);\n\n  if (!uri) {\n    throw new Error('no namespace uri given for prefix <' + prefix + '>');\n  }\n\n  ns = namespaces.byUri(uri);\n\n  if (!ns) {\n    newPrefix = prefix;\n    idx = 1;\n\n    // find a prefix that is not mapped yet\n    while (namespaces.uriByPrefix(newPrefix)) {\n      newPrefix = prefix + '_' + idx++;\n    }\n\n    ns = this.logNamespace({ prefix: newPrefix, uri: uri }, wellknownUri === uri);\n  }\n\n  if (prefix) {\n    namespaces.mapPrefix(prefix, uri);\n  }\n\n  return ns;\n};\n\nElementSerializer.prototype.parseAttributes = function(properties) {\n  var self = this,\n      element = this.element;\n\n  forEach(properties, function(p) {\n\n    var value = element.get(p.name);\n\n    if (p.isReference) {\n\n      if (!p.isMany) {\n        value = value.id;\n      }\n      else {\n        var values = [];\n        forEach(value, function(v) {\n          values.push(v.id);\n        });\n\n        // IDREFS is a whitespace-separated list of references.\n        value = values.join(' ');\n      }\n\n    }\n\n    self.addAttribute(self.nsAttributeName(p), value);\n  });\n};\n\nElementSerializer.prototype.addTagName = function(nsTagName) {\n  var actualNs = this.logNamespaceUsed(nsTagName);\n\n  this.getNamespaces().logUsed(actualNs);\n\n  return nsName(nsTagName);\n};\n\nElementSerializer.prototype.addAttribute = function(name, value) {\n  var attrs = this.attrs;\n\n  if (isString(value)) {\n    value = escapeAttr(value);\n  }\n\n  attrs.push({ name: name, value: value });\n};\n\nElementSerializer.prototype.serializeAttributes = function(writer) {\n  var attrs = this.attrs,\n      namespaces = this.namespaces;\n\n  if (namespaces) {\n    attrs = getNsAttrs(namespaces).concat(attrs);\n  }\n\n  forEach(attrs, function(a) {\n    writer\n      .append(' ')\n      .append(nsName(a.name)).append('=\"').append(a.value).append('\"');\n  });\n};\n\nElementSerializer.prototype.serializeTo = function(writer) {\n  var firstBody = this.body[0],\n      indent = firstBody && firstBody.constructor !== BodySerializer;\n\n  writer\n    .appendIndent()\n    .append('<' + this.tagName);\n\n  this.serializeAttributes(writer);\n\n  writer.append(firstBody ? '>' : ' />');\n\n  if (firstBody) {\n\n    if (indent) {\n      writer\n        .appendNewLine()\n        .indent();\n    }\n\n    forEach(this.body, function(b) {\n      b.serializeTo(writer);\n    });\n\n    if (indent) {\n      writer\n        .unindent()\n        .appendIndent();\n    }\n\n    writer.append('</' + this.tagName + '>');\n  }\n\n  writer.appendNewLine();\n};\n\n/**\n * A serializer for types that handles serialization of data types\n */\nfunction TypeSerializer(parent, propertyDescriptor) {\n  ElementSerializer.call(this, parent, propertyDescriptor);\n}\n\ninherits(TypeSerializer, ElementSerializer);\n\nTypeSerializer.prototype.parseNsAttributes = function(element) {\n\n  // extracted attributes\n  var attributes = ElementSerializer.prototype.parseNsAttributes.call(this, element);\n\n  var descriptor = element.$descriptor;\n\n  // only serialize xsi:type if necessary\n  if (descriptor.name === this.propertyDescriptor.type) {\n    return attributes;\n  }\n\n  var typeNs = this.typeNs = this.nsTagName(descriptor);\n  this.getNamespaces().logUsed(this.typeNs);\n\n  // add xsi:type attribute to represent the elements\n  // actual type\n\n  var pkg = element.$model.getPackage(typeNs.uri),\n      typePrefix = (pkg.xml && pkg.xml.typePrefix) || '';\n\n  this.addAttribute(\n    this.nsAttributeName(XSI_TYPE),\n    (typeNs.prefix ? typeNs.prefix + ':' : '') + typePrefix + descriptor.ns.localName\n  );\n\n  return attributes;\n};\n\nTypeSerializer.prototype.isLocalNs = function(ns) {\n  return ns.uri === (this.typeNs || this.ns).uri;\n};\n\nfunction SavingWriter() {\n  this.value = '';\n\n  this.write = function(str) {\n    this.value += str;\n  };\n}\n\nfunction FormatingWriter(out, format) {\n\n  var indent = [''];\n\n  this.append = function(str) {\n    out.write(str);\n\n    return this;\n  };\n\n  this.appendNewLine = function() {\n    if (format) {\n      out.write('\\n');\n    }\n\n    return this;\n  };\n\n  this.appendIndent = function() {\n    if (format) {\n      out.write(indent.join('  '));\n    }\n\n    return this;\n  };\n\n  this.indent = function() {\n    indent.push('');\n    return this;\n  };\n\n  this.unindent = function() {\n    indent.pop();\n    return this;\n  };\n}\n\n/**\n * A writer for meta-model backed document trees\n *\n * @param {Object} options output options to pass into the writer\n */\nfunction Writer(options) {\n\n  options = assign({ format: false, preamble: true }, options || {});\n\n  function toXML(tree, writer) {\n    var internalWriter = writer || new SavingWriter();\n    var formatingWriter = new FormatingWriter(internalWriter, options.format);\n\n    if (options.preamble) {\n      formatingWriter.append(XML_PREAMBLE);\n    }\n\n    new ElementSerializer().build(tree).serializeTo(formatingWriter);\n\n    if (!writer) {\n      return internalWriter.value;\n    }\n  }\n\n  return {\n    toXML: toXML\n  };\n}\n\nexport { Reader, Writer };\n","import { forEach, bind, pick, assign, isString, isObject } from 'min-dash';\n\n/**\n * Moddle base element.\n */\nfunction Base() { }\n\nBase.prototype.get = function(name) {\n  return this.$model.properties.get(this, name);\n};\n\nBase.prototype.set = function(name, value) {\n  this.$model.properties.set(this, name, value);\n};\n\n/**\n * A model element factory.\n *\n * @param {Moddle} model\n * @param {Properties} properties\n */\nfunction Factory(model, properties) {\n  this.model = model;\n  this.properties = properties;\n}\n\n\nFactory.prototype.createType = function(descriptor) {\n\n  var model = this.model;\n\n  var props = this.properties,\n      prototype = Object.create(Base.prototype);\n\n  // initialize default values\n  forEach(descriptor.properties, function(p) {\n    if (!p.isMany && p.default !== undefined) {\n      prototype[p.name] = p.default;\n    }\n  });\n\n  props.defineModel(prototype, model);\n  props.defineDescriptor(prototype, descriptor);\n\n  var name = descriptor.ns.name;\n\n  /**\n   * The new type constructor\n   */\n  function ModdleElement(attrs) {\n    props.define(this, '$type', { value: name, enumerable: true });\n    props.define(this, '$attrs', { value: {} });\n    props.define(this, '$parent', { writable: true });\n\n    forEach(attrs, bind(function(val, key) {\n      this.set(key, val);\n    }, this));\n  }\n\n  ModdleElement.prototype = prototype;\n\n  ModdleElement.hasType = prototype.$instanceOf = this.model.hasType;\n\n  // static links\n  props.defineModel(ModdleElement, model);\n  props.defineDescriptor(ModdleElement, descriptor);\n\n  return ModdleElement;\n};\n\n/**\n * Built-in moddle types\n */\nvar BUILTINS = {\n  String: true,\n  Boolean: true,\n  Integer: true,\n  Real: true,\n  Element: true\n};\n\n/**\n * Converters for built in types from string representations\n */\nvar TYPE_CONVERTERS = {\n  String: function(s) { return s; },\n  Boolean: function(s) { return s === 'true'; },\n  Integer: function(s) { return parseInt(s, 10); },\n  Real: function(s) { return parseFloat(s); }\n};\n\n/**\n * Convert a type to its real representation\n */\nfunction coerceType(type, value) {\n\n  var converter = TYPE_CONVERTERS[type];\n\n  if (converter) {\n    return converter(value);\n  } else {\n    return value;\n  }\n}\n\n/**\n * Return whether the given type is built-in\n */\nfunction isBuiltIn(type) {\n  return !!BUILTINS[type];\n}\n\n/**\n * Return whether the given type is simple\n */\nfunction isSimple(type) {\n  return !!TYPE_CONVERTERS[type];\n}\n\n/**\n * Parses a namespaced attribute name of the form (ns:)localName to an object,\n * given a default prefix to assume in case no explicit namespace is given.\n *\n * @param {String} name\n * @param {String} [defaultPrefix] the default prefix to take, if none is present.\n *\n * @return {Object} the parsed name\n */\nfunction parseName(name, defaultPrefix) {\n  var parts = name.split(/:/),\n      localName, prefix;\n\n  // no prefix (i.e. only local name)\n  if (parts.length === 1) {\n    localName = name;\n    prefix = defaultPrefix;\n  } else\n  // prefix + local name\n  if (parts.length === 2) {\n    localName = parts[1];\n    prefix = parts[0];\n  } else {\n    throw new Error('expected <prefix:localName> or <localName>, got ' + name);\n  }\n\n  name = (prefix ? prefix + ':' : '') + localName;\n\n  return {\n    name: name,\n    prefix: prefix,\n    localName: localName\n  };\n}\n\n/**\n * A utility to build element descriptors.\n */\nfunction DescriptorBuilder(nameNs) {\n  this.ns = nameNs;\n  this.name = nameNs.name;\n  this.allTypes = [];\n  this.allTypesByName = {};\n  this.properties = [];\n  this.propertiesByName = {};\n}\n\n\nDescriptorBuilder.prototype.build = function() {\n  return pick(this, [\n    'ns',\n    'name',\n    'allTypes',\n    'allTypesByName',\n    'properties',\n    'propertiesByName',\n    'bodyProperty',\n    'idProperty'\n  ]);\n};\n\n/**\n * Add property at given index.\n *\n * @param {Object} p\n * @param {Number} [idx]\n * @param {Boolean} [validate=true]\n */\nDescriptorBuilder.prototype.addProperty = function(p, idx, validate) {\n\n  if (typeof idx === 'boolean') {\n    validate = idx;\n    idx = undefined;\n  }\n\n  this.addNamedProperty(p, validate !== false);\n\n  var properties = this.properties;\n\n  if (idx !== undefined) {\n    properties.splice(idx, 0, p);\n  } else {\n    properties.push(p);\n  }\n};\n\n\nDescriptorBuilder.prototype.replaceProperty = function(oldProperty, newProperty, replace) {\n  var oldNameNs = oldProperty.ns;\n\n  var props = this.properties,\n      propertiesByName = this.propertiesByName,\n      rename = oldProperty.name !== newProperty.name;\n\n  if (oldProperty.isId) {\n    if (!newProperty.isId) {\n      throw new Error(\n        'property <' + newProperty.ns.name + '> must be id property ' +\n        'to refine <' + oldProperty.ns.name + '>');\n    }\n\n    this.setIdProperty(newProperty, false);\n  }\n\n  if (oldProperty.isBody) {\n\n    if (!newProperty.isBody) {\n      throw new Error(\n        'property <' + newProperty.ns.name + '> must be body property ' +\n        'to refine <' + oldProperty.ns.name + '>');\n    }\n\n    // TODO: Check compatibility\n    this.setBodyProperty(newProperty, false);\n  }\n\n  // validate existence and get location of old property\n  var idx = props.indexOf(oldProperty);\n  if (idx === -1) {\n    throw new Error('property <' + oldNameNs.name + '> not found in property list');\n  }\n\n  // remove old property\n  props.splice(idx, 1);\n\n  // replacing the named property is intentional\n  //\n  //  * validate only if this is a \"rename\" operation\n  //  * add at specific index unless we \"replace\"\n  //\n  this.addProperty(newProperty, replace ? undefined : idx, rename);\n\n  // make new property available under old name\n  propertiesByName[oldNameNs.name] = propertiesByName[oldNameNs.localName] = newProperty;\n};\n\n\nDescriptorBuilder.prototype.redefineProperty = function(p, targetPropertyName, replace) {\n\n  var nsPrefix = p.ns.prefix;\n  var parts = targetPropertyName.split('#');\n\n  var name = parseName(parts[0], nsPrefix);\n  var attrName = parseName(parts[1], name.prefix).name;\n\n  var redefinedProperty = this.propertiesByName[attrName];\n  if (!redefinedProperty) {\n    throw new Error('refined property <' + attrName + '> not found');\n  } else {\n    this.replaceProperty(redefinedProperty, p, replace);\n  }\n\n  delete p.redefines;\n};\n\nDescriptorBuilder.prototype.addNamedProperty = function(p, validate) {\n  var ns = p.ns,\n      propsByName = this.propertiesByName;\n\n  if (validate) {\n    this.assertNotDefined(p, ns.name);\n    this.assertNotDefined(p, ns.localName);\n  }\n\n  propsByName[ns.name] = propsByName[ns.localName] = p;\n};\n\nDescriptorBuilder.prototype.removeNamedProperty = function(p) {\n  var ns = p.ns,\n      propsByName = this.propertiesByName;\n\n  delete propsByName[ns.name];\n  delete propsByName[ns.localName];\n};\n\nDescriptorBuilder.prototype.setBodyProperty = function(p, validate) {\n\n  if (validate && this.bodyProperty) {\n    throw new Error(\n      'body property defined multiple times ' +\n      '(<' + this.bodyProperty.ns.name + '>, <' + p.ns.name + '>)');\n  }\n\n  this.bodyProperty = p;\n};\n\nDescriptorBuilder.prototype.setIdProperty = function(p, validate) {\n\n  if (validate && this.idProperty) {\n    throw new Error(\n      'id property defined multiple times ' +\n      '(<' + this.idProperty.ns.name + '>, <' + p.ns.name + '>)');\n  }\n\n  this.idProperty = p;\n};\n\nDescriptorBuilder.prototype.assertNotDefined = function(p, name) {\n  var propertyName = p.name,\n      definedProperty = this.propertiesByName[propertyName];\n\n  if (definedProperty) {\n    throw new Error(\n      'property <' + propertyName + '> already defined; ' +\n      'override of <' + definedProperty.definedBy.ns.name + '#' + definedProperty.ns.name + '> by ' +\n      '<' + p.definedBy.ns.name + '#' + p.ns.name + '> not allowed without redefines');\n  }\n};\n\nDescriptorBuilder.prototype.hasProperty = function(name) {\n  return this.propertiesByName[name];\n};\n\nDescriptorBuilder.prototype.addTrait = function(t, inherited) {\n\n  var typesByName = this.allTypesByName,\n      types = this.allTypes;\n\n  var typeName = t.name;\n\n  if (typeName in typesByName) {\n    return;\n  }\n\n  forEach(t.properties, bind(function(p) {\n\n    // clone property to allow extensions\n    p = assign({}, p, {\n      name: p.ns.localName,\n      inherited: inherited\n    });\n\n    Object.defineProperty(p, 'definedBy', {\n      value: t\n    });\n\n    var replaces = p.replaces,\n        redefines = p.redefines;\n\n    // add replace/redefine support\n    if (replaces || redefines) {\n      this.redefineProperty(p, replaces || redefines, replaces);\n    } else {\n      if (p.isBody) {\n        this.setBodyProperty(p);\n      }\n      if (p.isId) {\n        this.setIdProperty(p);\n      }\n      this.addProperty(p);\n    }\n  }, this));\n\n  types.push(t);\n  typesByName[typeName] = t;\n};\n\n/**\n * A registry of Moddle packages.\n *\n * @param {Array<Package>} packages\n * @param {Properties} properties\n */\nfunction Registry(packages, properties) {\n  this.packageMap = {};\n  this.typeMap = {};\n\n  this.packages = [];\n\n  this.properties = properties;\n\n  forEach(packages, bind(this.registerPackage, this));\n}\n\n\nRegistry.prototype.getPackage = function(uriOrPrefix) {\n  return this.packageMap[uriOrPrefix];\n};\n\nRegistry.prototype.getPackages = function() {\n  return this.packages;\n};\n\n\nRegistry.prototype.registerPackage = function(pkg) {\n\n  // copy package\n  pkg = assign({}, pkg);\n\n  var pkgMap = this.packageMap;\n\n  ensureAvailable(pkgMap, pkg, 'prefix');\n  ensureAvailable(pkgMap, pkg, 'uri');\n\n  // register types\n  forEach(pkg.types, bind(function(descriptor) {\n    this.registerType(descriptor, pkg);\n  }, this));\n\n  pkgMap[pkg.uri] = pkgMap[pkg.prefix] = pkg;\n  this.packages.push(pkg);\n};\n\n\n/**\n * Register a type from a specific package with us\n */\nRegistry.prototype.registerType = function(type, pkg) {\n\n  type = assign({}, type, {\n    superClass: (type.superClass || []).slice(),\n    extends: (type.extends || []).slice(),\n    properties: (type.properties || []).slice(),\n    meta: assign((type.meta || {}))\n  });\n\n  var ns = parseName(type.name, pkg.prefix),\n      name = ns.name,\n      propertiesByName = {};\n\n  // parse properties\n  forEach(type.properties, bind(function(p) {\n\n    // namespace property names\n    var propertyNs = parseName(p.name, ns.prefix),\n        propertyName = propertyNs.name;\n\n    // namespace property types\n    if (!isBuiltIn(p.type)) {\n      p.type = parseName(p.type, propertyNs.prefix).name;\n    }\n\n    assign(p, {\n      ns: propertyNs,\n      name: propertyName\n    });\n\n    propertiesByName[propertyName] = p;\n  }, this));\n\n  // update ns + name\n  assign(type, {\n    ns: ns,\n    name: name,\n    propertiesByName: propertiesByName\n  });\n\n  forEach(type.extends, bind(function(extendsName) {\n    var extended = this.typeMap[extendsName];\n\n    extended.traits = extended.traits || [];\n    extended.traits.push(name);\n  }, this));\n\n  // link to package\n  this.definePackage(type, pkg);\n\n  // register\n  this.typeMap[name] = type;\n};\n\n\n/**\n * Traverse the type hierarchy from bottom to top,\n * calling iterator with (type, inherited) for all elements in\n * the inheritance chain.\n *\n * @param {Object} nsName\n * @param {Function} iterator\n * @param {Boolean} [trait=false]\n */\nRegistry.prototype.mapTypes = function(nsName, iterator, trait) {\n\n  var type = isBuiltIn(nsName.name) ? { name: nsName.name } : this.typeMap[nsName.name];\n\n  var self = this;\n\n  /**\n   * Traverse the selected trait.\n   *\n   * @param {String} cls\n   */\n  function traverseTrait(cls) {\n    return traverseSuper(cls, true);\n  }\n\n  /**\n   * Traverse the selected super type or trait\n   *\n   * @param {String} cls\n   * @param {Boolean} [trait=false]\n   */\n  function traverseSuper(cls, trait) {\n    var parentNs = parseName(cls, isBuiltIn(cls) ? '' : nsName.prefix);\n    self.mapTypes(parentNs, iterator, trait);\n  }\n\n  if (!type) {\n    throw new Error('unknown type <' + nsName.name + '>');\n  }\n\n  forEach(type.superClass, trait ? traverseTrait : traverseSuper);\n\n  // call iterator with (type, inherited=!trait)\n  iterator(type, !trait);\n\n  forEach(type.traits, traverseTrait);\n};\n\n\n/**\n * Returns the effective descriptor for a type.\n *\n * @param  {String} type the namespaced name (ns:localName) of the type\n *\n * @return {Descriptor} the resulting effective descriptor\n */\nRegistry.prototype.getEffectiveDescriptor = function(name) {\n\n  var nsName = parseName(name);\n\n  var builder = new DescriptorBuilder(nsName);\n\n  this.mapTypes(nsName, function(type, inherited) {\n    builder.addTrait(type, inherited);\n  });\n\n  var descriptor = builder.build();\n\n  // define package link\n  this.definePackage(descriptor, descriptor.allTypes[descriptor.allTypes.length - 1].$pkg);\n\n  return descriptor;\n};\n\n\nRegistry.prototype.definePackage = function(target, pkg) {\n  this.properties.define(target, '$pkg', { value: pkg });\n};\n\n\n\n///////// helpers ////////////////////////////\n\nfunction ensureAvailable(packageMap, pkg, identifierKey) {\n\n  var value = pkg[identifierKey];\n\n  if (value in packageMap) {\n    throw new Error('package with ' + identifierKey + ' <' + value + '> already defined');\n  }\n}\n\n/**\n * A utility that gets and sets properties of model elements.\n *\n * @param {Model} model\n */\nfunction Properties(model) {\n  this.model = model;\n}\n\n\n/**\n * Sets a named property on the target element.\n * If the value is undefined, the property gets deleted.\n *\n * @param {Object} target\n * @param {String} name\n * @param {Object} value\n */\nProperties.prototype.set = function(target, name, value) {\n\n  var property = this.model.getPropertyDescriptor(target, name);\n\n  var propertyName = property && property.name;\n\n  if (isUndefined(value)) {\n    // unset the property, if the specified value is undefined;\n    // delete from $attrs (for extensions) or the target itself\n    if (property) {\n      delete target[propertyName];\n    } else {\n      delete target.$attrs[name];\n    }\n  } else {\n    // set the property, defining well defined properties on the fly\n    // or simply updating them in target.$attrs (for extensions)\n    if (property) {\n      if (propertyName in target) {\n        target[propertyName] = value;\n      } else {\n        defineProperty(target, property, value);\n      }\n    } else {\n      target.$attrs[name] = value;\n    }\n  }\n};\n\n/**\n * Returns the named property of the given element\n *\n * @param  {Object} target\n * @param  {String} name\n *\n * @return {Object}\n */\nProperties.prototype.get = function(target, name) {\n\n  var property = this.model.getPropertyDescriptor(target, name);\n\n  if (!property) {\n    return target.$attrs[name];\n  }\n\n  var propertyName = property.name;\n\n  // check if access to collection property and lazily initialize it\n  if (!target[propertyName] && property.isMany) {\n    defineProperty(target, property, []);\n  }\n\n  return target[propertyName];\n};\n\n\n/**\n * Define a property on the target element\n *\n * @param  {Object} target\n * @param  {String} name\n * @param  {Object} options\n */\nProperties.prototype.define = function(target, name, options) {\n\n  if (!options.writable) {\n\n    var value = options.value;\n\n    // use getters for read-only variables to support ES6 proxies\n    // cf. https://github.com/bpmn-io/internal-docs/issues/386\n    options = assign({}, options, {\n      get: function() { return value; }\n    });\n\n    delete options.value;\n  }\n\n  Object.defineProperty(target, name, options);\n};\n\n\n/**\n * Define the descriptor for an element\n */\nProperties.prototype.defineDescriptor = function(target, descriptor) {\n  this.define(target, '$descriptor', { value: descriptor });\n};\n\n/**\n * Define the model for an element\n */\nProperties.prototype.defineModel = function(target, model) {\n  this.define(target, '$model', { value: model });\n};\n\n\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\nfunction defineProperty(target, property, value) {\n  Object.defineProperty(target, property.name, {\n    enumerable: !property.isReference,\n    writable: true,\n    value: value,\n    configurable: true\n  });\n}\n\n//// Moddle implementation /////////////////////////////////////////////////\n\n/**\n * @class Moddle\n *\n * A model that can be used to create elements of a specific type.\n *\n * @example\n *\n * var Moddle = require('moddle');\n *\n * var pkg = {\n *   name: 'mypackage',\n *   prefix: 'my',\n *   types: [\n *     { name: 'Root' }\n *   ]\n * };\n *\n * var moddle = new Moddle([pkg]);\n *\n * @param {Array<Package>} packages the packages to contain\n */\nfunction Moddle(packages) {\n\n  this.properties = new Properties(this);\n\n  this.factory = new Factory(this, this.properties);\n  this.registry = new Registry(packages, this.properties);\n\n  this.typeCache = {};\n}\n\n\n/**\n * Create an instance of the specified type.\n *\n * @method Moddle#create\n *\n * @example\n *\n * var foo = moddle.create('my:Foo');\n * var bar = moddle.create('my:Bar', { id: 'BAR_1' });\n *\n * @param  {String|Object} descriptor the type descriptor or name know to the model\n * @param  {Object} attrs   a number of attributes to initialize the model instance with\n * @return {Object}         model instance\n */\nModdle.prototype.create = function(descriptor, attrs) {\n  var Type = this.getType(descriptor);\n\n  if (!Type) {\n    throw new Error('unknown type <' + descriptor + '>');\n  }\n\n  return new Type(attrs);\n};\n\n\n/**\n * Returns the type representing a given descriptor\n *\n * @method Moddle#getType\n *\n * @example\n *\n * var Foo = moddle.getType('my:Foo');\n * var foo = new Foo({ 'id' : 'FOO_1' });\n *\n * @param  {String|Object} descriptor the type descriptor or name know to the model\n * @return {Object}         the type representing the descriptor\n */\nModdle.prototype.getType = function(descriptor) {\n\n  var cache = this.typeCache;\n\n  var name = isString(descriptor) ? descriptor : descriptor.ns.name;\n\n  var type = cache[name];\n\n  if (!type) {\n    descriptor = this.registry.getEffectiveDescriptor(name);\n    type = cache[name] = this.factory.createType(descriptor);\n  }\n\n  return type;\n};\n\n\n/**\n * Creates an any-element type to be used within model instances.\n *\n * This can be used to create custom elements that lie outside the meta-model.\n * The created element contains all the meta-data required to serialize it\n * as part of meta-model elements.\n *\n * @method Moddle#createAny\n *\n * @example\n *\n * var foo = moddle.createAny('vendor:Foo', 'http://vendor', {\n *   value: 'bar'\n * });\n *\n * var container = moddle.create('my:Container', 'http://my', {\n *   any: [ foo ]\n * });\n *\n * // go ahead and serialize the stuff\n *\n *\n * @param  {String} name  the name of the element\n * @param  {String} nsUri the namespace uri of the element\n * @param  {Object} [properties] a map of properties to initialize the instance with\n * @return {Object} the any type instance\n */\nModdle.prototype.createAny = function(name, nsUri, properties) {\n\n  var nameNs = parseName(name);\n\n  var element = {\n    $type: name,\n    $instanceOf: function(type) {\n      return type === this.$type;\n    }\n  };\n\n  var descriptor = {\n    name: name,\n    isGeneric: true,\n    ns: {\n      prefix: nameNs.prefix,\n      localName: nameNs.localName,\n      uri: nsUri\n    }\n  };\n\n  this.properties.defineDescriptor(element, descriptor);\n  this.properties.defineModel(element, this);\n  this.properties.define(element, '$parent', { enumerable: false, writable: true });\n  this.properties.define(element, '$instanceOf', { enumerable: false, writable: true });\n\n  forEach(properties, function(a, key) {\n    if (isObject(a) && a.value !== undefined) {\n      element[a.name] = a.value;\n    } else {\n      element[key] = a;\n    }\n  });\n\n  return element;\n};\n\n/**\n * Returns a registered package by uri or prefix\n *\n * @return {Object} the package\n */\nModdle.prototype.getPackage = function(uriOrPrefix) {\n  return this.registry.getPackage(uriOrPrefix);\n};\n\n/**\n * Returns a snapshot of all known packages\n *\n * @return {Object} the package\n */\nModdle.prototype.getPackages = function() {\n  return this.registry.getPackages();\n};\n\n/**\n * Returns the descriptor for an element\n */\nModdle.prototype.getElementDescriptor = function(element) {\n  return element.$descriptor;\n};\n\n/**\n * Returns true if the given descriptor or instance\n * represents the given type.\n *\n * May be applied to this, if element is omitted.\n */\nModdle.prototype.hasType = function(element, type) {\n  if (type === undefined) {\n    type = element;\n    element = this;\n  }\n\n  var descriptor = element.$model.getElementDescriptor(element);\n\n  return (type in descriptor.allTypesByName);\n};\n\n/**\n * Returns the descriptor of an elements named property\n */\nModdle.prototype.getPropertyDescriptor = function(element, property) {\n  return this.getElementDescriptor(element).propertiesByName[property];\n};\n\n/**\n * Returns a mapped type's descriptor\n */\nModdle.prototype.getTypeDescriptor = function(type) {\n  return this.registry.typeMap[type];\n};\n\nexport { Moddle, coerceType, isBuiltIn as isBuiltInType, isSimple as isSimpleType, parseName as parseNameNS };\n","module.exports = require('./lib/refs');\n\nmodule.exports.Collection = require('./lib/collection');","'use strict';\n\n/**\n * An empty collection stub. Use {@link RefsCollection.extend} to extend a\n * collection with ref semantics.\n *\n * @class RefsCollection\n */\n\n/**\n * Extends a collection with {@link Refs} aware methods\n *\n * @memberof RefsCollection\n * @static\n *\n * @param  {Array<Object>} collection\n * @param  {Refs} refs instance\n * @param  {Object} property represented by the collection\n * @param  {Object} target object the collection is attached to\n *\n * @return {RefsCollection<Object>} the extended array\n */\nfunction extend(collection, refs, property, target) {\n\n  var inverseProperty = property.inverse;\n\n  /**\n   * Removes the given element from the array and returns it.\n   *\n   * @method RefsCollection#remove\n   *\n   * @param {Object} element the element to remove\n   */\n  Object.defineProperty(collection, 'remove', {\n    value: function(element) {\n      var idx = this.indexOf(element);\n      if (idx !== -1) {\n        this.splice(idx, 1);\n\n        // unset inverse\n        refs.unset(element, inverseProperty, target);\n      }\n\n      return element;\n    }\n  });\n\n  /**\n   * Returns true if the collection contains the given element\n   *\n   * @method RefsCollection#contains\n   *\n   * @param {Object} element the element to check for\n   */\n  Object.defineProperty(collection, 'contains', {\n    value: function(element) {\n      return this.indexOf(element) !== -1;\n    }\n  });\n\n  /**\n   * Adds an element to the array, unless it exists already (set semantics).\n   *\n   * @method RefsCollection#add\n   *\n   * @param {Object} element the element to add\n   * @param {Number} optional index to add element to\n   *                 (possibly moving other elements around)\n   */\n  Object.defineProperty(collection, 'add', {\n    value: function(element, idx) {\n\n      var currentIdx = this.indexOf(element);\n\n      if (typeof idx === 'undefined') {\n\n        if (currentIdx !== -1) {\n          // element already in collection (!)\n          return;\n        }\n\n        // add to end of array, as no idx is specified\n        idx = this.length;\n      }\n\n      // handle already in collection\n      if (currentIdx !== -1) {\n\n        // remove element from currentIdx\n        this.splice(currentIdx, 1);\n      }\n\n      // add element at idx\n      this.splice(idx, 0, element);\n\n      if (currentIdx === -1) {\n        // set inverse, unless element was\n        // in collection already\n        refs.set(element, inverseProperty, target);\n      }\n    }\n  });\n\n  // a simple marker, identifying this element\n  // as being a refs collection\n  Object.defineProperty(collection, '__refs_collection', {\n    value: true\n  });\n\n  return collection;\n}\n\n\nfunction isExtended(collection) {\n  return collection.__refs_collection === true;\n}\n\nmodule.exports.extend = extend;\n\nmodule.exports.isExtended = isExtended;","'use strict';\n\nvar Collection = require('./collection');\n\nfunction hasOwnProperty(e, property) {\n  return Object.prototype.hasOwnProperty.call(e, property.name || property);\n}\n\nfunction defineCollectionProperty(ref, property, target) {\n\n  var collection = Collection.extend(target[property.name] || [], ref, property, target);\n\n  Object.defineProperty(target, property.name, {\n    enumerable: property.enumerable,\n    value: collection\n  });\n\n  if (collection.length) {\n\n    collection.forEach(function(o) {\n      ref.set(o, property.inverse, target);\n    });\n  }\n}\n\n\nfunction defineProperty(ref, property, target) {\n\n  var inverseProperty = property.inverse;\n\n  var _value = target[property.name];\n\n  Object.defineProperty(target, property.name, {\n    configurable: property.configurable,\n    enumerable: property.enumerable,\n\n    get: function() {\n      return _value;\n    },\n\n    set: function(value) {\n\n      // return if we already performed all changes\n      if (value === _value) {\n        return;\n      }\n\n      var old = _value;\n\n      // temporary set null\n      _value = null;\n\n      if (old) {\n        ref.unset(old, inverseProperty, target);\n      }\n\n      // set new value\n      _value = value;\n\n      // set inverse value\n      ref.set(_value, inverseProperty, target);\n    }\n  });\n\n}\n\n/**\n * Creates a new references object defining two inversly related\n * attribute descriptors a and b.\n *\n * <p>\n *   When bound to an object using {@link Refs#bind} the references\n *   get activated and ensure that add and remove operations are applied\n *   reversely, too.\n * </p>\n *\n * <p>\n *   For attributes represented as collections {@link Refs} provides the\n *   {@link RefsCollection#add}, {@link RefsCollection#remove} and {@link RefsCollection#contains} extensions\n *   that must be used to properly hook into the inverse change mechanism.\n * </p>\n *\n * @class Refs\n *\n * @classdesc A bi-directional reference between two attributes.\n *\n * @param {Refs.AttributeDescriptor} a property descriptor\n * @param {Refs.AttributeDescriptor} b property descriptor\n *\n * @example\n *\n * var refs = Refs({ name: 'wheels', collection: true, enumerable: true }, { name: 'car' });\n *\n * var car = { name: 'toyota' };\n * var wheels = [{ pos: 'front-left' }, { pos: 'front-right' }];\n *\n * refs.bind(car, 'wheels');\n *\n * car.wheels // []\n * car.wheels.add(wheels[0]);\n * car.wheels.add(wheels[1]);\n *\n * car.wheels // [{ pos: 'front-left' }, { pos: 'front-right' }]\n *\n * wheels[0].car // { name: 'toyota' };\n * car.wheels.remove(wheels[0]);\n *\n * wheels[0].car // undefined\n */\nfunction Refs(a, b) {\n\n  if (!(this instanceof Refs)) {\n    return new Refs(a, b);\n  }\n\n  // link\n  a.inverse = b;\n  b.inverse = a;\n\n  this.props = {};\n  this.props[a.name] = a;\n  this.props[b.name] = b;\n}\n\n/**\n * Binds one side of a bi-directional reference to a\n * target object.\n *\n * @memberOf Refs\n *\n * @param  {Object} target\n * @param  {String} property\n */\nRefs.prototype.bind = function(target, property) {\n  if (typeof property === 'string') {\n    if (!this.props[property]) {\n      throw new Error('no property <' + property + '> in ref');\n    }\n    property = this.props[property];\n  }\n\n  if (property.collection) {\n    defineCollectionProperty(this, property, target);\n  } else {\n    defineProperty(this, property, target);\n  }\n};\n\nRefs.prototype.ensureRefsCollection = function(target, property) {\n\n  var collection = target[property.name];\n\n  if (!Collection.isExtended(collection)) {\n    defineCollectionProperty(this, property, target);\n  }\n\n  return collection;\n};\n\nRefs.prototype.ensureBound = function(target, property) {\n  if (!hasOwnProperty(target, property)) {\n    this.bind(target, property);\n  }\n};\n\nRefs.prototype.unset = function(target, property, value) {\n\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).remove(value);\n    } else {\n      target[property.name] = undefined;\n    }\n  }\n};\n\nRefs.prototype.set = function(target, property, value) {\n\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).add(value);\n    } else {\n      target[property.name] = value;\n    }\n  }\n};\n\nmodule.exports = Refs;\n\n\n/**\n * An attribute descriptor to be used specify an attribute in a {@link Refs} instance\n *\n * @typedef {Object} Refs.AttributeDescriptor\n * @property {String} name\n * @property {boolean} [collection=false]\n * @property {boolean} [enumerable=false]\n */","'use strict';\n\n/**\n * This file contains source code adapted from Snap.svg (licensed Apache-2.0).\n *\n * @see https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js\n */\n\n/* eslint no-fallthrough: \"off\" */\n\nvar p2s = /,?([a-z]),?/gi,\n    toFloat = parseFloat,\n    math = Math,\n    PI = math.PI,\n    mmin = math.min,\n    mmax = math.max,\n    pow = math.pow,\n    abs = math.abs,\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[-+]?\\d+)?)[\\s]*,?[\\s]*/ig;\n\nvar isArray = Array.isArray || function(o) { return o instanceof Array; };\n\nfunction hasProperty(obj, property) {\n  return Object.prototype.hasOwnProperty.call(obj, property);\n}\n\nfunction clone(obj) {\n\n  if (typeof obj == 'function' || Object(obj) !== obj) {\n    return obj;\n  }\n\n  var res = new obj.constructor;\n\n  for (var key in obj) {\n    if (hasProperty(obj, key)) {\n      res[key] = clone(obj[key]);\n    }\n  }\n\n  return res;\n}\n\nfunction repush(array, item) {\n  for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n    return array.push(array.splice(i, 1)[0]);\n  }\n}\n\nfunction cacher(f) {\n\n  function newf() {\n\n    var arg = Array.prototype.slice.call(arguments, 0),\n        args = arg.join('\\u2400'),\n        cache = newf.cache = newf.cache || {},\n        count = newf.count = newf.count || [];\n\n    if (hasProperty(cache, args)) {\n      repush(count, args);\n      return cache[args];\n    }\n\n    count.length >= 1e3 && delete cache[count.shift()];\n    count.push(args);\n    cache[args] = f.apply(0, arg);\n\n    return cache[args];\n  }\n  return newf;\n}\n\nfunction parsePathString(pathString) {\n\n  if (!pathString) {\n    return null;\n  }\n\n  var pth = paths(pathString);\n\n  if (pth.arr) {\n    return clone(pth.arr);\n  }\n\n  var paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0 },\n      data = [];\n\n  if (isArray(pathString) && isArray(pathString[0])) { // rough assumption\n    data = clone(pathString);\n  }\n\n  if (!data.length) {\n\n    String(pathString).replace(pathCommand, function(a, b, c) {\n      var params = [],\n          name = b.toLowerCase();\n\n      c.replace(pathValues, function(a, b) {\n        b && params.push(+b);\n      });\n\n      if (name == 'm' && params.length > 2) {\n        data.push([b].concat(params.splice(0, 2)));\n        name = 'l';\n        b = b == 'm' ? 'l' : 'L';\n      }\n\n      while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    });\n  }\n\n  data.toString = paths.toString;\n  pth.arr = clone(data);\n\n  return data;\n}\n\nfunction paths(ps) {\n  var p = paths.ps = paths.ps || {};\n\n  if (p[ps]) {\n    p[ps].sleep = 100;\n  } else {\n    p[ps] = {\n      sleep: 100\n    };\n  }\n\n  setTimeout(function() {\n    for (var key in p) {\n      if (hasProperty(p, key) && key != ps) {\n        p[key].sleep--;\n        !p[key].sleep && delete p[key];\n      }\n    }\n  });\n\n  return p[ps];\n}\n\nfunction rectBBox(x, y, width, height) {\n\n  if (arguments.length === 1) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    x2: x + width,\n    y2: y + height\n  };\n}\n\nfunction pathToString() {\n  return this.join(',').replace(p2s, '$1');\n}\n\nfunction pathClone(pathArray) {\n  var res = clone(pathArray);\n  res.toString = pathToString;\n  return res;\n}\n\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t,\n      t13 = pow(t1, 3),\n      t12 = pow(t1, 2),\n      t2 = t * t,\n      t3 = t2 * t,\n      x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n      y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n\n  return {\n    x: fixError(x),\n    y: fixError(y)\n  };\n}\n\nfunction bezierBBox(points) {\n\n  var bbox = curveBBox.apply(null, points);\n\n  return rectBBox(\n    bbox.x0,\n    bbox.y0,\n    bbox.x1 - bbox.x0,\n    bbox.y1 - bbox.y0\n  );\n}\n\nfunction isPointInsideBBox(bbox, x, y) {\n  return x >= bbox.x &&\n    x <= bbox.x + bbox.width &&\n    y >= bbox.y &&\n    y <= bbox.y + bbox.height;\n}\n\nfunction isBBoxIntersect(bbox1, bbox2) {\n  bbox1 = rectBBox(bbox1);\n  bbox2 = rectBBox(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n    || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n    || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n        || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n    && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n        || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n}\n\nfunction base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n      t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n}\n\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\n  if (z == null) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n\n  var z2 = z / 2,\n      n = 12,\n      Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n      Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n      sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2,\n        xbase = base3(ct, x1, x2, x3, x4),\n        ybase = base3(ct, y1, y2, y3, y4),\n        comb = xbase * xbase + ybase * ybase;\n\n    sum += Cvalues[i] * math.sqrt(comb);\n  }\n\n  return z2 * sum;\n}\n\n\nfunction intersectLines(x1, y1, x2, y2, x3, y3, x4, y4) {\n\n  if (\n    mmax(x1, x2) < mmin(x3, x4) ||\n      mmin(x1, x2) > mmax(x3, x4) ||\n      mmax(y1, y2) < mmin(y3, y4) ||\n      mmin(y1, y2) > mmax(y3, y4)\n  ) {\n    return;\n  }\n\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n      denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n  if (!denominator) {\n    return;\n  }\n\n  var px = fixError(nx / denominator),\n      py = fixError(ny / denominator),\n      px2 = +px.toFixed(2),\n      py2 = +py.toFixed(2);\n\n  if (\n    px2 < +mmin(x1, x2).toFixed(2) ||\n      px2 > +mmax(x1, x2).toFixed(2) ||\n      px2 < +mmin(x3, x4).toFixed(2) ||\n      px2 > +mmax(x3, x4).toFixed(2) ||\n      py2 < +mmin(y1, y2).toFixed(2) ||\n      py2 > +mmax(y1, y2).toFixed(2) ||\n      py2 < +mmin(y3, y4).toFixed(2) ||\n      py2 > +mmax(y3, y4).toFixed(2)\n  ) {\n    return;\n  }\n\n  return { x: px, y: py };\n}\n\nfunction fixError(number) {\n  return Math.round(number * 100000000000) / 100000000000;\n}\n\nfunction findBezierIntersections(bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1),\n      bbox2 = bezierBBox(bez2);\n\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n\n  // As an optimization, lines will have only 1 segment\n\n  var l1 = bezlen.apply(0, bez1),\n      l2 = bezlen.apply(0, bez2),\n      n1 = isLine(bez1) ? 1 : ~~(l1 / 5) || 1,\n      n2 = isLine(bez2) ? 1 : ~~(l2 / 5) || 1,\n      dots1 = [],\n      dots2 = [],\n      xy = {},\n      res = justCount ? 0 : [];\n\n  for (var i = 0; i < n1 + 1; i++) {\n    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({ x: p.x, y: p.y, t: i / n1 });\n  }\n\n  for (i = 0; i < n2 + 1; i++) {\n    p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n    dots2.push({ x: p.x, y: p.y, t: i / n2 });\n  }\n\n  for (i = 0; i < n1; i++) {\n\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[i],\n          di1 = dots1[i + 1],\n          dj = dots2[j],\n          dj1 = dots2[j + 1],\n          ci = abs(di1.x - di.x) < .01 ? 'y' : 'x',\n          cj = abs(dj1.x - dj.x) < .01 ? 'y' : 'x',\n          is = intersectLines(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y),\n          key;\n\n      if (is) {\n        key = is.x.toFixed(9) + '#' + is.y.toFixed(9);\n\n        if (xy[key]) {\n          continue;\n        }\n\n        xy[key] = true;\n\n        var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n            t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n\n          if (justCount) {\n            res++;\n          } else {\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\n\n/**\n * Find or counts the intersections between two SVG paths.\n *\n * Returns a number in counting mode and a list of intersections otherwise.\n *\n * A single intersection entry contains the intersection coordinates (x, y)\n * as well as additional information regarding the intersecting segments\n * on each path (segment1, segment2) and the relative location of the\n * intersection on these segments (t1, t2).\n *\n * The path may be an SVG path string or a list of path components\n * such as `[ [ 'M', 0, 10 ], [ 'L', 20, 0 ] ]`.\n *\n * @example\n *\n * var intersections = findPathIntersections(\n *   'M0,0L100,100',\n *   [ [ 'M', 0, 100 ], [ 'L', 100, 0 ] ]\n * );\n *\n * // intersections = [\n * //   { x: 50, y: 50, segment1: 1, segment2: 1, t1: 0.5, t2: 0.5 }\n * // ]\n *\n * @param {String|Array<PathDef>} path1\n * @param {String|Array<PathDef>} path2\n * @param {Boolean} [justCount=false]\n *\n * @return {Array<Intersection>|Number}\n */\nfunction findPathIntersections(path1, path2, justCount) {\n  path1 = pathToCurve(path1);\n  path2 = pathToCurve(path2);\n\n  var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n      res = justCount ? 0 : [];\n\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n\n    if (pi[0] == 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n\n      if (pi[0] == 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n\n        if (pj[0] == 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n\n          if (pj[0] == 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n\n          var intr = findBezierIntersections(bez1, bez2, justCount);\n\n          if (justCount) {\n            res += intr;\n          } else {\n\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\n\nfunction pathToAbsolute(pathArray) {\n  var pth = paths(pathArray);\n\n  if (pth.abs) {\n    return pathClone(pth.abs);\n  }\n\n  if (!isArray(pathArray) || !isArray(pathArray && pathArray[0])) { // rough assumption\n    pathArray = parsePathString(pathArray);\n  }\n\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n\n  var res = [],\n      x = 0,\n      y = 0,\n      mx = 0,\n      my = 0,\n      start = 0,\n      pa0;\n\n  if (pathArray[0][0] == 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n\n    if (pa0 != pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n\n      switch (r[0]) {\n      case 'A':\n        r[1] = pa[1];\n        r[2] = pa[2];\n        r[3] = pa[3];\n        r[4] = pa[4];\n        r[5] = pa[5];\n        r[6] = +pa[6] + x;\n        r[7] = +pa[7] + y;\n        break;\n      case 'V':\n        r[1] = +pa[1] + y;\n        break;\n      case 'H':\n        r[1] = +pa[1] + x;\n        break;\n      case 'M':\n        mx = +pa[1] + x;\n        my = +pa[2] + y;\n      default:\n        for (var j = 1, jj = pa.length; j < jj; j++) {\n          r[j] = +pa[j] + ((j % 2) ? x : y);\n        }\n      }\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    pa0 = pa0.toUpperCase();\n\n    switch (r[0]) {\n    case 'Z':\n      x = +mx;\n      y = +my;\n      break;\n    case 'H':\n      x = r[1];\n      break;\n    case 'V':\n      y = r[1];\n      break;\n    case 'M':\n      mx = r[r.length - 2];\n      my = r[r.length - 1];\n    default:\n      x = r[r.length - 2];\n      y = r[r.length - 1];\n    }\n  }\n\n  res.toString = pathToString;\n  pth.abs = pathClone(res);\n\n  return res;\n}\n\nfunction isLine(bez) {\n  return (\n    bez[0] === bez[2] &&\n    bez[1] === bez[3] &&\n    bez[4] === bez[6] &&\n    bez[5] === bez[7]\n  );\n}\n\nfunction lineToCurve(x1, y1, x2, y2) {\n  return [\n    x1, y1, x2,\n    y2, x2, y2\n  ];\n}\n\nfunction qubicToCurve(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3,\n      _23 = 2 / 3;\n\n  return [\n    _13 * x1 + _23 * ax,\n    _13 * y1 + _23 * ay,\n    _13 * x2 + _23 * ax,\n    _13 * y2 + _23 * ay,\n    x2,\n    y2\n  ];\n}\n\nfunction arcToCurve(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var _120 = PI * 120 / 180,\n      rad = PI / 180 * (+angle || 0),\n      res = [],\n      xy,\n      rotate = cacher(function(x, y, rad) {\n        var X = x * math.cos(rad) - y * math.sin(rad),\n            Y = x * math.sin(rad) + y * math.cos(rad);\n\n        return { x: X, y: Y };\n      });\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n\n    var x = (x1 - x2) / 2,\n        y = (y1 - y2) / 2;\n\n    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\n    if (h > 1) {\n      h = math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx,\n        ry2 = ry * ry,\n        k = (large_arc_flag == sweep_flag ? -1 : 1) *\n            math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n        cx = k * rx * y / ry + (x1 + x2) / 2,\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\n        f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n        f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n    f1 = x1 < cx ? PI - f1 : f1;\n    f2 = x2 < cx ? PI - f2 : f2;\n    f1 < 0 && (f1 = PI * 2 + f1);\n    f2 < 0 && (f2 = PI * 2 + f2);\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - PI * 2;\n    }\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n\n  var df = f2 - f1;\n\n  if (abs(df) > _120) {\n    var f2old = f2,\n        x2old = x2,\n        y2old = y2;\n\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * math.cos(f2);\n    y2 = cy + ry * math.sin(f2);\n    res = arcToCurve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  df = f2 - f1;\n\n  var c1 = math.cos(f1),\n      s1 = math.sin(f1),\n      c2 = math.cos(f2),\n      s2 = math.sin(f2),\n      t = math.tan(df / 4),\n      hx = 4 / 3 * rx * t,\n      hy = 4 / 3 * ry * t,\n      m1 = [x1, y1],\n      m2 = [x1 + hx * s1, y1 - hy * c1],\n      m3 = [x2 + hx * s2, y2 - hy * c2],\n      m4 = [x2, y2];\n\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(',');\n    var newres = [];\n\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n\n    return newres;\n  }\n}\n\n// Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\nfunction curveBBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [],\n      bounds = [[], []],\n      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n  for (var i = 0; i < 2; ++i) {\n\n    if (i == 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (abs(a) < 1e-12) {\n\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    b2ac = b * b - 4 * c * a;\n    sqrtb2ac = math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var j = tvalues.length,\n      jlen = j,\n      mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n\n  return {\n    x0: mmin.apply(0, bounds[0]),\n    y0: mmin.apply(0, bounds[1]),\n    x1: mmax.apply(0, bounds[0]),\n    y1: mmax.apply(0, bounds[1])\n  };\n}\n\nfunction pathToCurve(path) {\n\n  var pth = paths(path);\n\n  // return cached curve, if existing\n  if (pth.curve) {\n    return pathClone(pth.curve);\n  }\n\n  var curvedPath = pathToAbsolute(path),\n      attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n      processPath = function(path, d, pathCommand) {\n        var nx, ny;\n\n        if (!path) {\n          return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n\n        !(path[0] in { T: 1, Q: 1 }) && (d.qx = d.qy = null);\n\n        switch (path[0]) {\n        case 'M':\n          d.X = path[1];\n          d.Y = path[2];\n          break;\n        case 'A':\n          path = ['C'].concat(arcToCurve.apply(0, [d.x, d.y].concat(path.slice(1))));\n          break;\n        case 'S':\n          if (pathCommand == 'C' || pathCommand == 'S') {\n\n            // In 'S' case we have to take into account, if the previous command is C/S.\n            nx = d.x * 2 - d.bx;\n\n            // And reflect the previous\n            ny = d.y * 2 - d.by;\n\n            // command's control point relative to the current point.\n          }\n          else {\n\n            // or some else or nothing\n            nx = d.x;\n            ny = d.y;\n          }\n          path = ['C', nx, ny].concat(path.slice(1));\n          break;\n        case 'T':\n          if (pathCommand == 'Q' || pathCommand == 'T') {\n\n            // In 'T' case we have to take into account, if the previous command is Q/T.\n            d.qx = d.x * 2 - d.qx;\n\n            // And make a reflection similar\n            d.qy = d.y * 2 - d.qy;\n\n            // to case 'S'.\n          }\n          else {\n\n            // or something else or nothing\n            d.qx = d.x;\n            d.qy = d.y;\n          }\n          path = ['C'].concat(qubicToCurve(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n          break;\n        case 'Q':\n          d.qx = path[1];\n          d.qy = path[2];\n          path = ['C'].concat(qubicToCurve(d.x, d.y, path[1], path[2], path[3], path[4]));\n          break;\n        case 'L':\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], path[2]));\n          break;\n        case 'H':\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], d.y));\n          break;\n        case 'V':\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.x, path[1]));\n          break;\n        case 'Z':\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.X, d.Y));\n          break;\n        }\n\n        return path;\n      },\n\n      fixArc = function(pp, i) {\n\n        if (pp[i].length > 7) {\n          pp[i].shift();\n          var pi = pp[i];\n\n          while (pi.length) {\n            pathCommands[i] = 'A'; // if created multiple C:s, their original seg is saved\n            pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n          }\n\n          pp.splice(i, 1);\n          ii = curvedPath.length;\n        }\n      },\n\n      pathCommands = [], // path commands of original path p\n      pfirst = '', // temporary holder for original path command\n      pathCommand = ''; // holder for previous path command of original path\n\n  for (var i = 0, ii = curvedPath.length; i < ii; i++) {\n    curvedPath[i] && (pfirst = curvedPath[i][0]); // save current path command\n\n    if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\n    {\n      pathCommands[i] = pfirst; // Save current path command\n      i && (pathCommand = pathCommands[i - 1]); // Get previous path command pathCommand\n    }\n    curvedPath[i] = processPath(curvedPath[i], attrs, pathCommand); // Previous path command is inputted to processPath\n\n    if (pathCommands[i] != 'A' && pfirst == 'C') pathCommands[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(curvedPath, i); // fixArc adds also the right amount of A:s to pathCommands\n\n    var seg = curvedPath[i],\n        seglen = seg.length;\n\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n  }\n\n  // cache curve\n  pth.curve = pathClone(curvedPath);\n\n  return curvedPath;\n}\n\nmodule.exports = findPathIntersections;\n","var fromCharCode = String.fromCharCode;\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar ENTITY_PATTERN = /&#(\\d+);|&#x([0-9a-f]+);|&(\\w+);/ig;\n\nvar ENTITY_MAPPING = {\n  'amp': '&',\n  'apos': '\\'',\n  'gt': '>',\n  'lt': '<',\n  'quot': '\"'\n};\n\n// map UPPERCASE variants of supported special chars\nObject.keys(ENTITY_MAPPING).forEach(function(k) {\n  ENTITY_MAPPING[k.toUpperCase()] = ENTITY_MAPPING[k];\n});\n\n\nfunction replaceEntities(_, d, x, z) {\n\n  // reserved names, i.e. &nbsp;\n  if (z) {\n    if (hasOwnProperty.call(ENTITY_MAPPING, z)) {\n      return ENTITY_MAPPING[z];\n    } else {\n\n      // fall back to original value\n      return '&' + z + ';';\n    }\n  }\n\n  // decimal encoded char\n  if (d) {\n    return fromCharCode(d);\n  }\n\n  // hex encoded char\n  return fromCharCode(parseInt(x, 16));\n}\n\n\n/**\n * A basic entity decoder that can decode a minimal\n * sub-set of reserved names (&amp;) as well as\n * hex (&#xaaf;) and decimal (&#1231;) encoded characters.\n *\n * @param {string} str\n *\n * @return {string} decoded string\n */\nfunction decodeEntities(s) {\n  if (s.length > 3 && s.indexOf('&') !== -1) {\n    return s.replace(ENTITY_PATTERN, replaceEntities);\n  }\n\n  return s;\n}\n\nvar XSI_URI = 'http://www.w3.org/2001/XMLSchema-instance';\nvar XSI_PREFIX = 'xsi';\nvar XSI_TYPE = 'xsi:type';\n\nvar NON_WHITESPACE_OUTSIDE_ROOT_NODE = 'non-whitespace outside of root node';\n\nfunction error(msg) {\n  return new Error(msg);\n}\n\nfunction missingNamespaceForPrefix(prefix) {\n  return 'missing namespace for prefix <' + prefix + '>';\n}\n\nfunction getter(getFn) {\n  return {\n    'get': getFn,\n    'enumerable': true\n  };\n}\n\nfunction cloneNsMatrix(nsMatrix) {\n  var clone = {}, key;\n  for (key in nsMatrix) {\n    clone[key] = nsMatrix[key];\n  }\n  return clone;\n}\n\nfunction uriPrefix(prefix) {\n  return prefix + '$uri';\n}\n\nfunction buildNsMatrix(nsUriToPrefix) {\n  var nsMatrix = {},\n      uri,\n      prefix;\n\n  for (uri in nsUriToPrefix) {\n    prefix = nsUriToPrefix[uri];\n    nsMatrix[prefix] = prefix;\n    nsMatrix[uriPrefix(prefix)] = uri;\n  }\n\n  return nsMatrix;\n}\n\nfunction noopGetContext() {\n  return { 'line': 0, 'column': 0 };\n}\n\nfunction throwFunc(err) {\n  throw err;\n}\n\n/**\n * Creates a new parser with the given options.\n *\n * @constructor\n *\n * @param  {!Object<string, ?>=} options\n */\nfunction Parser(options) {\n\n  if (!this) {\n    return new Parser(options);\n  }\n\n  var proxy = options && options['proxy'];\n\n  var onText,\n      onOpenTag,\n      onCloseTag,\n      onCDATA,\n      onError = throwFunc,\n      onWarning,\n      onComment,\n      onQuestion,\n      onAttention;\n\n  var getContext = noopGetContext;\n\n  /**\n   * Do we need to parse the current elements attributes for namespaces?\n   *\n   * @type {boolean}\n   */\n  var maybeNS = false;\n\n  /**\n   * Do we process namespaces at all?\n   *\n   * @type {boolean}\n   */\n  var isNamespace = false;\n\n  /**\n   * The caught error returned on parse end\n   *\n   * @type {Error}\n   */\n  var returnError = null;\n\n  /**\n   * Should we stop parsing?\n   *\n   * @type {boolean}\n   */\n  var parseStop = false;\n\n  /**\n   * A map of { uri: prefix } used by the parser.\n   *\n   * This map will ensure we can normalize prefixes during processing;\n   * for each uri, only one prefix will be exposed to the handlers.\n   *\n   * @type {!Object<string, string>}}\n   */\n  var nsUriToPrefix;\n\n  /**\n   * Handle parse error.\n   *\n   * @param  {string|Error} err\n   */\n  function handleError(err) {\n    if (!(err instanceof Error)) {\n      err = error(err);\n    }\n\n    returnError = err;\n\n    onError(err, getContext);\n  }\n\n  /**\n   * Handle parse error.\n   *\n   * @param  {string|Error} err\n   */\n  function handleWarning(err) {\n\n    if (!onWarning) {\n      return;\n    }\n\n    if (!(err instanceof Error)) {\n      err = error(err);\n    }\n\n    onWarning(err, getContext);\n  }\n\n  /**\n   * Register parse listener.\n   *\n   * @param  {string}   name\n   * @param  {Function} cb\n   *\n   * @return {Parser}\n   */\n  this['on'] = function(name, cb) {\n\n    if (typeof cb !== 'function') {\n      throw error('required args <name, cb>');\n    }\n\n    switch (name) {\n    case 'openTag': onOpenTag = cb; break;\n    case 'text': onText = cb; break;\n    case 'closeTag': onCloseTag = cb; break;\n    case 'error': onError = cb; break;\n    case 'warn': onWarning = cb; break;\n    case 'cdata': onCDATA = cb; break;\n    case 'attention': onAttention = cb; break; // <!XXXXX zzzz=\"eeee\">\n    case 'question': onQuestion = cb; break; // <? ....  ?>\n    case 'comment': onComment = cb; break;\n    default:\n      throw error('unsupported event: ' + name);\n    }\n\n    return this;\n  };\n\n  /**\n   * Set the namespace to prefix mapping.\n   *\n   * @example\n   *\n   * parser.ns({\n   *   'http://foo': 'foo',\n   *   'http://bar': 'bar'\n   * });\n   *\n   * @param  {!Object<string, string>} nsMap\n   *\n   * @return {Parser}\n   */\n  this['ns'] = function(nsMap) {\n\n    if (typeof nsMap === 'undefined') {\n      nsMap = {};\n    }\n\n    if (typeof nsMap !== 'object') {\n      throw error('required args <nsMap={}>');\n    }\n\n    var _nsUriToPrefix = {}, k;\n\n    for (k in nsMap) {\n      _nsUriToPrefix[k] = nsMap[k];\n    }\n\n    // FORCE default mapping for schema instance\n    _nsUriToPrefix[XSI_URI] = XSI_PREFIX;\n\n    isNamespace = true;\n    nsUriToPrefix = _nsUriToPrefix;\n\n    return this;\n  };\n\n  /**\n   * Parse xml string.\n   *\n   * @param  {string} xml\n   *\n   * @return {Error} returnError, if not thrown\n   */\n  this['parse'] = function(xml) {\n    if (typeof xml !== 'string') {\n      throw error('required args <xml=string>');\n    }\n\n    returnError = null;\n\n    parse(xml);\n\n    getContext = noopGetContext;\n    parseStop = false;\n\n    return returnError;\n  };\n\n  /**\n   * Stop parsing.\n   */\n  this['stop'] = function() {\n    parseStop = true;\n  };\n\n  /**\n   * Parse string, invoking configured listeners on element.\n   *\n   * @param  {string} xml\n   */\n  function parse(xml) {\n    var nsMatrixStack = isNamespace ? [] : null,\n        nsMatrix = isNamespace ? buildNsMatrix(nsUriToPrefix) : null,\n        _nsMatrix,\n        nodeStack = [],\n        anonymousNsCount = 0,\n        tagStart = false,\n        tagEnd = false,\n        i = 0, j = 0,\n        x, y, q, w, v,\n        xmlns,\n        elementName,\n        _elementName,\n        elementProxy\n        ;\n\n    var attrsString = '',\n        attrsStart = 0,\n        cachedAttrs // false = parsed with errors, null = needs parsing\n        ;\n\n    /**\n     * Parse attributes on demand and returns the parsed attributes.\n     *\n     * Return semantics: (1) `false` on attribute parse error,\n     * (2) object hash on extracted attrs.\n     *\n     * @return {boolean|Object}\n     */\n    function getAttrs() {\n      if (cachedAttrs !== null) {\n        return cachedAttrs;\n      }\n\n      var nsUri,\n          nsUriPrefix,\n          nsName,\n          defaultAlias = isNamespace && nsMatrix['xmlns'],\n          attrList = isNamespace && maybeNS ? [] : null,\n          i = attrsStart,\n          s = attrsString,\n          l = s.length,\n          hasNewMatrix,\n          newalias,\n          value,\n          alias,\n          name,\n          attrs = {},\n          seenAttrs = {},\n          skipAttr,\n          w,\n          j;\n\n      parseAttr:\n      for (; i < l; i++) {\n        skipAttr = false;\n        w = s.charCodeAt(i);\n\n        if (w === 32 || (w < 14 && w > 8)) { // WHITESPACE={ \\f\\n\\r\\t\\v}\n          continue;\n        }\n\n        // wait for non whitespace character\n        if (w < 65 || w > 122 || (w > 90 && w < 97)) {\n          if (w !== 95 && w !== 58) { // char 95\"_\" 58\":\"\n            handleWarning('illegal first char attribute name');\n            skipAttr = true;\n          }\n        }\n\n        // parse attribute name\n        for (j = i + 1; j < l; j++) {\n          w = s.charCodeAt(j);\n\n          if (\n            w > 96 && w < 123 ||\n            w > 64 && w < 91 ||\n            w > 47 && w < 59 ||\n            w === 46 || // '.'\n            w === 45 || // '-'\n            w === 95 // '_'\n          ) {\n            continue;\n          }\n\n          // unexpected whitespace\n          if (w === 32 || (w < 14 && w > 8)) { // WHITESPACE\n            handleWarning('missing attribute value');\n            i = j;\n\n            continue parseAttr;\n          }\n\n          // expected \"=\"\n          if (w === 61) { // \"=\" == 61\n            break;\n          }\n\n          handleWarning('illegal attribute name char');\n          skipAttr = true;\n        }\n\n        name = s.substring(i, j);\n\n        if (name === 'xmlns:xmlns') {\n          handleWarning('illegal declaration of xmlns');\n          skipAttr = true;\n        }\n\n        w = s.charCodeAt(j + 1);\n\n        if (w === 34) { // '\"'\n          j = s.indexOf('\"', i = j + 2);\n\n          if (j === -1) {\n            j = s.indexOf('\\'', i);\n\n            if (j !== -1) {\n              handleWarning('attribute value quote missmatch');\n              skipAttr = true;\n            }\n          }\n\n        } else if (w === 39) { // \"'\"\n          j = s.indexOf('\\'', i = j + 2);\n\n          if (j === -1) {\n            j = s.indexOf('\"', i);\n\n            if (j !== -1) {\n              handleWarning('attribute value quote missmatch');\n              skipAttr = true;\n            }\n          }\n\n        } else {\n          handleWarning('missing attribute value quotes');\n          skipAttr = true;\n\n          // skip to next space\n          for (j = j + 1; j < l; j++) {\n            w = s.charCodeAt(j + 1);\n\n            if (w === 32 || (w < 14 && w > 8)) { // WHITESPACE\n              break;\n            }\n          }\n\n        }\n\n        if (j === -1) {\n          handleWarning('missing closing quotes');\n\n          j = l;\n          skipAttr = true;\n        }\n\n        if (!skipAttr) {\n          value = s.substring(i, j);\n        }\n\n        i = j;\n\n        // ensure SPACE follows attribute\n        // skip illegal content otherwise\n        // example a=\"b\"c\n        for (; j + 1 < l; j++) {\n          w = s.charCodeAt(j + 1);\n\n          if (w === 32 || (w < 14 && w > 8)) { // WHITESPACE\n            break;\n          }\n\n          // FIRST ILLEGAL CHAR\n          if (i === j) {\n            handleWarning('illegal character after attribute end');\n            skipAttr = true;\n          }\n        }\n\n        // advance cursor to next attribute\n        i = j + 1;\n\n        if (skipAttr) {\n          continue parseAttr;\n        }\n\n        // check attribute re-declaration\n        if (name in seenAttrs) {\n          handleWarning('attribute <' + name + '> already defined');\n          continue;\n        }\n\n        seenAttrs[name] = true;\n\n        if (!isNamespace) {\n          attrs[name] = value;\n          continue;\n        }\n\n        // try to extract namespace information\n        if (maybeNS) {\n          newalias = (\n            name === 'xmlns'\n              ? 'xmlns'\n              : (name.charCodeAt(0) === 120 && name.substr(0, 6) === 'xmlns:')\n                ? name.substr(6)\n                : null\n          );\n\n          // handle xmlns(:alias) assignment\n          if (newalias !== null) {\n            nsUri = decodeEntities(value);\n            nsUriPrefix = uriPrefix(newalias);\n\n            alias = nsUriToPrefix[nsUri];\n\n            if (!alias) {\n\n              // no prefix defined or prefix collision\n              if (\n                (newalias === 'xmlns') ||\n                (nsUriPrefix in nsMatrix && nsMatrix[nsUriPrefix] !== nsUri)\n              ) {\n\n                // alocate free ns prefix\n                do {\n                  alias = 'ns' + (anonymousNsCount++);\n                } while (typeof nsMatrix[alias] !== 'undefined');\n              } else {\n                alias = newalias;\n              }\n\n              nsUriToPrefix[nsUri] = alias;\n            }\n\n            if (nsMatrix[newalias] !== alias) {\n              if (!hasNewMatrix) {\n                nsMatrix = cloneNsMatrix(nsMatrix);\n                hasNewMatrix = true;\n              }\n\n              nsMatrix[newalias] = alias;\n              if (newalias === 'xmlns') {\n                nsMatrix[uriPrefix(alias)] = nsUri;\n                defaultAlias = alias;\n              }\n\n              nsMatrix[nsUriPrefix] = nsUri;\n            }\n\n            // expose xmlns(:asd)=\"...\" in attributes\n            attrs[name] = value;\n            continue;\n          }\n\n          // collect attributes until all namespace\n          // declarations are processed\n          attrList.push(name, value);\n          continue;\n\n        } /** end if (maybeNs) */\n\n        // handle attributes on element without\n        // namespace declarations\n        w = name.indexOf(':');\n        if (w === -1) {\n          attrs[name] = value;\n          continue;\n        }\n\n        // normalize ns attribute name\n        if (!(nsName = nsMatrix[name.substring(0, w)])) {\n          handleWarning(missingNamespaceForPrefix(name.substring(0, w)));\n          continue;\n        }\n\n        name = defaultAlias === nsName\n          ? name.substr(w + 1)\n          : nsName + name.substr(w);\n\n        // end: normalize ns attribute name\n\n        // normalize xsi:type ns attribute value\n        if (name === XSI_TYPE) {\n          w = value.indexOf(':');\n\n          if (w !== -1) {\n            nsName = value.substring(0, w);\n\n            // handle default prefixes, i.e. xs:String gracefully\n            nsName = nsMatrix[nsName] || nsName;\n            value = nsName + value.substring(w);\n          } else {\n            value = defaultAlias + ':' + value;\n          }\n        }\n\n        // end: normalize xsi:type ns attribute value\n\n        attrs[name] = value;\n      }\n\n\n      // handle deferred, possibly namespaced attributes\n      if (maybeNS) {\n\n        // normalize captured attributes\n        for (i = 0, l = attrList.length; i < l; i++) {\n\n          name = attrList[i++];\n          value = attrList[i];\n\n          w = name.indexOf(':');\n\n          if (w !== -1) {\n\n            // normalize ns attribute name\n            if (!(nsName = nsMatrix[name.substring(0, w)])) {\n              handleWarning(missingNamespaceForPrefix(name.substring(0, w)));\n              continue;\n            }\n\n            name = defaultAlias === nsName\n              ? name.substr(w + 1)\n              : nsName + name.substr(w);\n\n            // end: normalize ns attribute name\n\n            // normalize xsi:type ns attribute value\n            if (name === XSI_TYPE) {\n              w = value.indexOf(':');\n\n              if (w !== -1) {\n                nsName = value.substring(0, w);\n\n                // handle default prefixes, i.e. xs:String gracefully\n                nsName = nsMatrix[nsName] || nsName;\n                value = nsName + value.substring(w);\n              } else {\n                value = defaultAlias + ':' + value;\n              }\n            }\n\n            // end: normalize xsi:type ns attribute value\n          }\n\n          attrs[name] = value;\n        }\n\n        // end: normalize captured attributes\n      }\n\n      return cachedAttrs = attrs;\n    }\n\n    /**\n     * Extract the parse context { line, column, part }\n     * from the current parser position.\n     *\n     * @return {Object} parse context\n     */\n    function getParseContext() {\n      var splitsRe = /(\\r\\n|\\r|\\n)/g;\n\n      var line = 0;\n      var column = 0;\n      var startOfLine = 0;\n      var endOfLine = j;\n      var match;\n      var data;\n\n      while (i >= startOfLine) {\n\n        match = splitsRe.exec(xml);\n\n        if (!match) {\n          break;\n        }\n\n        // end of line = (break idx + break chars)\n        endOfLine = match[0].length + match.index;\n\n        if (endOfLine > i) {\n          break;\n        }\n\n        // advance to next line\n        line += 1;\n\n        startOfLine = endOfLine;\n      }\n\n      // EOF errors\n      if (i == -1) {\n        column = endOfLine;\n        data = xml.substring(j);\n      } else\n\n      // start errors\n      if (j === 0) {\n        data = xml.substring(j, i);\n      }\n\n      // other errors\n      else {\n        column = i - startOfLine;\n        data = (j == -1 ? xml.substring(i) : xml.substring(i, j + 1));\n      }\n\n      return {\n        'data': data,\n        'line': line,\n        'column': column\n      };\n    }\n\n    getContext = getParseContext;\n\n\n    if (proxy) {\n      elementProxy = Object.create({}, {\n        'name': getter(function() {\n          return elementName;\n        }),\n        'originalName': getter(function() {\n          return _elementName;\n        }),\n        'attrs': getter(getAttrs),\n        'ns': getter(function() {\n          return nsMatrix;\n        })\n      });\n    }\n\n    // actual parse logic\n    while (j !== -1) {\n\n      if (xml.charCodeAt(j) === 60) { // \"<\"\n        i = j;\n      } else {\n        i = xml.indexOf('<', j);\n      }\n\n      // parse end\n      if (i === -1) {\n        if (nodeStack.length) {\n          return handleError('unexpected end of file');\n        }\n\n        if (j === 0) {\n          return handleError('missing start tag');\n        }\n\n        if (j < xml.length) {\n          if (xml.substring(j).trim()) {\n            handleWarning(NON_WHITESPACE_OUTSIDE_ROOT_NODE);\n          }\n        }\n\n        return;\n      }\n\n      // parse text\n      if (j !== i) {\n\n        if (nodeStack.length) {\n          if (onText) {\n            onText(xml.substring(j, i), decodeEntities, getContext);\n\n            if (parseStop) {\n              return;\n            }\n          }\n        } else {\n          if (xml.substring(j, i).trim()) {\n            handleWarning(NON_WHITESPACE_OUTSIDE_ROOT_NODE);\n\n            if (parseStop) {\n              return;\n            }\n          }\n        }\n      }\n\n      w = xml.charCodeAt(i+1);\n\n      // parse comments + CDATA\n      if (w === 33) { // \"!\"\n        q = xml.charCodeAt(i+2);\n\n        // CDATA section\n        if (q === 91 && xml.substr(i + 3, 6) === 'CDATA[') { // 91 == \"[\"\n          j = xml.indexOf(']]>', i);\n          if (j === -1) {\n            return handleError('unclosed cdata');\n          }\n\n          if (onCDATA) {\n            onCDATA(xml.substring(i + 9, j), getContext);\n            if (parseStop) {\n              return;\n            }\n          }\n\n          j += 3;\n          continue;\n        }\n\n        // comment\n        if (q === 45 && xml.charCodeAt(i + 3) === 45) { // 45 == \"-\"\n          j = xml.indexOf('-->', i);\n          if (j === -1) {\n            return handleError('unclosed comment');\n          }\n\n\n          if (onComment) {\n            onComment(xml.substring(i + 4, j), decodeEntities, getContext);\n            if (parseStop) {\n              return;\n            }\n          }\n\n          j += 3;\n          continue;\n        }\n      }\n\n      // parse question <? ... ?>\n      if (w === 63) { // \"?\"\n        j = xml.indexOf('?>', i);\n        if (j === -1) {\n          return handleError('unclosed question');\n        }\n\n        if (onQuestion) {\n          onQuestion(xml.substring(i, j + 2), getContext);\n          if (parseStop) {\n            return;\n          }\n        }\n\n        j += 2;\n        continue;\n      }\n\n      // find matching closing tag for attention or standard tags\n      // for that we must skip through attribute values\n      // (enclosed in single or double quotes)\n      for (x = i + 1; ; x++) {\n        v = xml.charCodeAt(x);\n        if (isNaN(v)) {\n          j = -1;\n          return handleError('unclosed tag');\n        }\n\n        // [10] AttValue ::= '\"' ([^<&\"] | Reference)* '\"' | \"'\" ([^<&'] | Reference)* \"'\"\n        // skips the quoted string\n        // (double quotes) does not appear in a literal enclosed by (double quotes)\n        // (single quote) does not appear in a literal enclosed by (single quote)\n        if (v === 34) { //  '\"'\n          q = xml.indexOf('\"', x + 1);\n          x = q !== -1 ? q : x;\n        } else if (v === 39) { // \"'\"\n          q = xml.indexOf(\"'\", x + 1);\n          x = q !== -1 ? q : x;\n        } else if (v === 62) { // '>'\n          j = x;\n          break;\n        }\n      }\n\n\n      // parse attention <! ...>\n      // previously comment and CDATA have already been parsed\n      if (w === 33) { // \"!\"\n\n        if (onAttention) {\n          onAttention(xml.substring(i, j + 1), decodeEntities, getContext);\n          if (parseStop) {\n            return;\n          }\n        }\n\n        j += 1;\n        continue;\n      }\n\n      // don't process attributes;\n      // there are none\n      cachedAttrs = {};\n\n      // if (xml.charCodeAt(i+1) === 47) { // </...\n      if (w === 47) { // </...\n        tagStart = false;\n        tagEnd = true;\n\n        if (!nodeStack.length) {\n          return handleError('missing open tag');\n        }\n\n        // verify open <-> close tag match\n        x = elementName = nodeStack.pop();\n        q = i + 2 + x.length;\n\n        if (xml.substring(i + 2, q) !== x) {\n          return handleError('closing tag mismatch');\n        }\n\n        // verify chars in close tag\n        for (; q < j; q++) {\n          w = xml.charCodeAt(q);\n\n          if (w === 32 || (w > 8 && w < 14)) { // \\f\\n\\r\\t\\v space\n            continue;\n          }\n\n          return handleError('close tag');\n        }\n\n      } else {\n        if (xml.charCodeAt(j - 1) === 47) { // .../>\n          x = elementName = xml.substring(i + 1, j - 1);\n\n          tagStart = true;\n          tagEnd = true;\n\n        } else {\n          x = elementName = xml.substring(i + 1, j);\n\n          tagStart = true;\n          tagEnd = false;\n        }\n\n        if (!(w > 96 && w < 123 || w > 64 && w < 91 || w === 95 || w === 58)) { // char 95\"_\" 58\":\"\n          return handleError('illegal first char nodeName');\n        }\n\n        for (q = 1, y = x.length; q < y; q++) {\n          w = x.charCodeAt(q);\n\n          if (w > 96 && w < 123 || w > 64 && w < 91 || w > 47 && w < 59 || w === 45 || w === 95 || w == 46) {\n            continue;\n          }\n\n          if (w === 32 || (w < 14 && w > 8)) { // \\f\\n\\r\\t\\v space\n            elementName = x.substring(0, q);\n\n            // maybe there are attributes\n            cachedAttrs = null;\n            break;\n          }\n\n          return handleError('invalid nodeName');\n        }\n\n        if (!tagEnd) {\n          nodeStack.push(elementName);\n        }\n      }\n\n      if (isNamespace) {\n\n        _nsMatrix = nsMatrix;\n\n        if (tagStart) {\n\n          // remember old namespace\n          // unless we're self-closing\n          if (!tagEnd) {\n            nsMatrixStack.push(_nsMatrix);\n          }\n\n          if (cachedAttrs === null) {\n\n            // quick check, whether there may be namespace\n            // declarations on the node; if that is the case\n            // we need to eagerly parse the node attributes\n            if ((maybeNS = x.indexOf('xmlns', q) !== -1)) {\n              attrsStart = q;\n              attrsString = x;\n\n              getAttrs();\n\n              maybeNS = false;\n            }\n          }\n        }\n\n        _elementName = elementName;\n\n        w = elementName.indexOf(':');\n        if (w !== -1) {\n          xmlns = nsMatrix[elementName.substring(0, w)];\n\n          // prefix given; namespace must exist\n          if (!xmlns) {\n            return handleError('missing namespace on <' + _elementName + '>');\n          }\n\n          elementName = elementName.substr(w + 1);\n        } else {\n          xmlns = nsMatrix['xmlns'];\n\n          // if no default namespace is defined,\n          // we'll import the element as anonymous.\n          //\n          // it is up to users to correct that to the document defined\n          // targetNamespace, or whatever their undersanding of the\n          // XML spec mandates.\n        }\n\n        // adjust namespace prefixs as configured\n        if (xmlns) {\n          elementName = xmlns + ':' + elementName;\n        }\n\n      }\n\n      if (tagStart) {\n        attrsStart = q;\n        attrsString = x;\n\n        if (onOpenTag) {\n          if (proxy) {\n            onOpenTag(elementProxy, decodeEntities, tagEnd, getContext);\n          } else {\n            onOpenTag(elementName, getAttrs, decodeEntities, tagEnd, getContext);\n          }\n\n          if (parseStop) {\n            return;\n          }\n        }\n\n      }\n\n      if (tagEnd) {\n\n        if (onCloseTag) {\n          onCloseTag(proxy ? elementProxy : elementName, decodeEntities, tagStart, getContext);\n\n          if (parseStop) {\n            return;\n          }\n        }\n\n        // restore old namespace\n        if (isNamespace) {\n          if (!tagStart) {\n            nsMatrix = nsMatrixStack.pop();\n          } else {\n            nsMatrix = _nsMatrix;\n          }\n        }\n      }\n\n      j += 1;\n    }\n  } /** end parse */\n\n}\n\nexport { Parser, decodeEntities as decode };\n","\n      import API from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../css-loader/dist/cjs.js??ruleSet[1].rules[1]!./bpmn.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../css-loader/dist/cjs.js??ruleSet[1].rules[1]!./bpmn.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../css-loader/dist/cjs.js??ruleSet[1].rules[1]!./bpmn-js.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../css-loader/dist/cjs.js??ruleSet[1].rules[1]!./bpmn-js.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../css-loader/dist/cjs.js??ruleSet[1].rules[1]!./diagram-js.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../css-loader/dist/cjs.js??ruleSet[1].rules[1]!./diagram-js.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1]!./Designer.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1]!./Designer.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","function ensureImported(element, target) {\n\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  return element;\n}\n\n/**\n * appendTo utility\n */\n\n/**\n * Append a node to a target element and return the appended node.\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the appended node\n */\nfunction appendTo(element, target) {\n  return target.appendChild(ensureImported(element, target));\n}\n\n/**\n * append utility\n */\n\n/**\n * Append a node to an element\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the element\n */\nfunction append(target, node) {\n  appendTo(node, target);\n  return target;\n}\n\n/**\n * attribute accessor utility\n */\n\nvar LENGTH_ATTR = 2;\n\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\n\n\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\n\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n  var type = CSS_PROPERTIES[hyphenated];\n\n  if (type) {\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\n\nfunction setAttributes(node, attrs) {\n\n  var names = Object.keys(attrs), i, name;\n\n  for (i = 0, name; (name = names[i]); i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n\n/**\n * Gets or sets raw attributes on a node.\n *\n * @param  {SVGElement} node\n * @param  {Object} [attrs]\n * @param  {String} [name]\n * @param  {String} [value]\n *\n * @return {String}\n */\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n\n  return node;\n}\n\n/**\r\n * Clear utility\r\n */\r\nfunction index(arr, obj) {\r\n  if (arr.indexOf) {\r\n    return arr.indexOf(obj);\r\n  }\r\n\r\n\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nvar re = /\\s+/;\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction defined(o) {\r\n  return typeof o !== 'undefined';\r\n}\r\n\r\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nfunction classes(el) {\r\n  return new ClassList(el);\r\n}\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required');\r\n  }\r\n  this.el = el;\r\n  this.list = el.classList;\r\n}\r\n\r\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.add = function(name) {\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.add(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (!~i) {\r\n    arr.push(name);\r\n  }\r\n\r\n  if (defined(this.el.className.baseVal)) {\r\n    this.el.className.baseVal = arr.join(' ');\r\n  } else {\r\n    this.el.className = arr.join(' ');\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.remove = function(name) {\r\n  if ('[object RegExp]' === toString.call(name)) {\r\n    return this.removeMatching(name);\r\n  }\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.remove(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (~i) {\r\n    arr.splice(i, 1);\r\n  }\r\n  this.el.className.baseVal = arr.join(' ');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\r\n\r\nClassList.prototype.removeMatching = function(re) {\r\n  var arr = this.array();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (re.test(arr[i])) {\r\n      this.remove(arr[i]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.toggle = function(name, force) {\r\n  // classList\r\n  if (this.list) {\r\n    if (defined(force)) {\r\n      if (force !== this.list.toggle(name, force)) {\r\n        this.list.toggle(name); // toggle again to correct\r\n      }\r\n    } else {\r\n      this.list.toggle(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  if (defined(force)) {\r\n    if (!force) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  } else {\r\n    if (this.has(name)) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.array = function() {\r\n  var className = this.el.getAttribute('class') || '';\r\n  var str = className.replace(/^\\s+|\\s+$/g, '');\r\n  var arr = str.split(re);\r\n  if ('' === arr[0]) {\r\n    arr.shift();\r\n  }\r\n  return arr;\r\n};\r\n\r\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.has =\r\nClassList.prototype.contains = function(name) {\r\n  return (\r\n    this.list ?\r\n      this.list.contains(name) :\r\n      !! ~index(this.array(), name)\r\n  );\r\n};\n\nfunction remove(element) {\n  var parent = element.parentNode;\n\n  if (parent) {\n    parent.removeChild(element);\n  }\n\n  return element;\n}\n\n/**\n * Clear utility\n */\n\n/**\n * Removes all children from the given element\n *\n * @param  {DOMElement} element\n * @return {DOMElement} the element (for chaining)\n */\nfunction clear(element) {\n  var child;\n\n  while ((child = element.firstChild)) {\n    remove(child);\n  }\n\n  return element;\n}\n\nfunction clone(element) {\n  return element.cloneNode(true);\n}\n\nvar ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n\n/**\n * DOM parsing utility\n */\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\n\nfunction parse(svg) {\n\n  var unwrap = false;\n\n  // ensure we import a valid svg document\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n    unwrap = true;\n  }\n\n  var parsed = parseDocument(svg);\n\n  if (!unwrap) {\n    return parsed;\n  }\n\n  var fragment = document.createDocumentFragment();\n\n  var parent = parsed.firstChild;\n\n  while (parent.firstChild) {\n    fragment.appendChild(parent.firstChild);\n  }\n\n  return fragment;\n}\n\nfunction parseDocument(svg) {\n\n  var parser;\n\n  // parse\n  parser = new DOMParser();\n  parser.async = false;\n\n  return parser.parseFromString(svg, 'text/xml');\n}\n\n/**\n * Create utility for SVG elements\n */\n\n\n/**\n * Create a specific type from name or SVG markup.\n *\n * @param {String} name the name or markup of the element\n * @param {Object} [attrs] attributes to set on the element\n *\n * @returns {SVGElement}\n */\nfunction create(name, attrs) {\n  var element;\n\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n\n  if (attrs) {\n    attr(element, attrs);\n  }\n\n  return element;\n}\n\n/**\n * Events handling utility\n */\n\nfunction on(node, event, listener, useCapture) {\n  node.addEventListener(event, listener, useCapture);\n}\n\nfunction off(node, event, listener, useCapture) {\n  node.removeEventListener(event, listener, useCapture);\n}\n\n/**\n * Geometry helpers\n */\n\n// fake node used to instantiate svg geometry elements\nvar node = create('svg');\n\nfunction extend(object, props) {\n  var i, k, keys = Object.keys(props);\n\n  for (i = 0; (k = keys[i]); i++) {\n    object[k] = props[k];\n  }\n\n  return object;\n}\n\n\nfunction createPoint(x, y) {\n  var point = node.createSVGPoint();\n\n  switch (arguments.length) {\n  case 0:\n    return point;\n  case 2:\n    x = {\n      x: x,\n      y: y\n    };\n    break;\n  }\n\n  return extend(point, x);\n}\n\n/**\n * Create matrix via args.\n *\n * @example\n *\n * createMatrix({ a: 1, b: 1 });\n * createMatrix();\n * createMatrix(1, 2, 0, 0, 30, 20);\n *\n * @return {SVGMatrix}\n */\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = node.createSVGMatrix();\n\n  switch (arguments.length) {\n  case 0:\n    return matrix;\n  case 1:\n    return extend(matrix, a);\n  case 6:\n    return extend(matrix, {\n      a: a,\n      b: b,\n      c: c,\n      d: d,\n      e: e,\n      f: f\n    });\n  }\n}\n\nfunction createTransform(matrix) {\n  if (matrix) {\n    return node.createSVGTransformFromMatrix(matrix);\n  } else {\n    return node.createSVGTransform();\n  }\n}\n\n/**\n * Serialization util\n */\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([\\n\\r\"]{1})/g;\n\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '\\''\n};\n\nfunction escape(str, pattern) {\n\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n\n  return str.replace(pattern, replaceFn);\n}\n\nfunction serialize(node, output) {\n\n  var i, len, attrMap, attrNode, childNodes;\n\n  switch (node.nodeType) {\n  // TEXT\n  case 3:\n    // replace special XML characters\n    output.push(escape(node.textContent, TEXT_ENTITIES));\n    break;\n\n  // ELEMENT\n  case 1:\n    output.push('<', node.tagName);\n\n    if (node.hasAttributes()) {\n      attrMap = node.attributes;\n      for (i = 0, len = attrMap.length; i < len; ++i) {\n        attrNode = attrMap.item(i);\n        output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n      }\n    }\n\n    if (node.hasChildNodes()) {\n      output.push('>');\n      childNodes = node.childNodes;\n      for (i = 0, len = childNodes.length; i < len; ++i) {\n        serialize(childNodes.item(i), output);\n      }\n      output.push('</', node.tagName, '>');\n    } else {\n      output.push('/>');\n    }\n    break;\n\n  // COMMENT\n  case 8:\n    output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n    break;\n\n  // CDATA\n  case 4:\n    output.push('<![CDATA[', node.nodeValue, ']]>');\n    break;\n\n  default:\n    throw new Error('unable to handle node ' + node.nodeType);\n  }\n\n  return output;\n}\n\n/**\n * innerHTML like functionality for SVG elements.\n * based on innerSVG (https://code.google.com/p/innersvg)\n */\n\n\nfunction set(element, svg) {\n\n  var parsed = parse(svg);\n\n  // clear element contents\n  clear(element);\n\n  if (!svg) {\n    return;\n  }\n\n  if (!isFragment(parsed)) {\n    // extract <svg> from parsed document\n    parsed = parsed.documentElement;\n  }\n\n  var nodes = slice(parsed.childNodes);\n\n  // import + append each node\n  for (var i = 0; i < nodes.length; i++) {\n    appendTo(nodes[i], element);\n  }\n\n}\n\nfunction get(element) {\n  var child = element.firstChild,\n      output = [];\n\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n\n  return output.join('');\n}\n\nfunction isFragment(node) {\n  return node.nodeName === '#document-fragment';\n}\n\nfunction innerSVG(element, svg) {\n\n  if (svg !== undefined) {\n\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n\n    return element;\n  } else {\n    return get(element);\n  }\n}\n\n\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\n/**\n * Selection utilities\n */\n\nfunction select(node, selector) {\n  return node.querySelector(selector);\n}\n\nfunction selectAll(node, selector) {\n  var nodes = node.querySelectorAll(selector);\n\n  return [].map.call(nodes, function(element) {\n    return element;\n  });\n}\n\n/**\n * prependTo utility\n */\n\n/**\n * Prepend a node to a target element and return the prepended node.\n *\n * @param  {SVGElement} node\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the prepended node\n */\nfunction prependTo(node, target) {\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\n}\n\n/**\n * prepend utility\n */\n\n/**\n * Prepend a node to a target element\n *\n * @param  {SVGElement} target\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the target element\n */\nfunction prepend(target, node) {\n  prependTo(node, target);\n  return target;\n}\n\n/**\n * Replace utility\n */\n\nfunction replace(element, replacement) {\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\n  return replacement;\n}\n\n/**\n * transform accessor utility\n */\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  }\n\n  return transform;\n}\n\n\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n\n  transformList.clear();\n\n  for (i = 0; (t = transforms[i]); i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n}\n\n/**\n * Get or set the transforms on the given node.\n *\n * @param {SVGElement} node\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\n *\n * @return {SVGTransform} the consolidated transform\n */\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n\n  if (transforms) {\n\n    if (!Array.isArray(transforms)) {\n      transforms = [ transforms ];\n    }\n\n    setTransforms(transformList, transforms);\n  }\n\n  return transformList.consolidate();\n}\n\nexport { append, appendTo, attr, classes, clear, clone, create, innerSVG, prepend, prependTo, remove, replace, transform, on, off, createPoint, createMatrix, createTransform, select, selectAll };\n","import DesignerFactory from \"./rootPages/Designer/ui.js\";\n\nexport default function (AB) {\n   var Designer = DesignerFactory(AB);\n\n   var application = {\n      id: \"ABDesigner\",\n      label: \"AB Designer\", // How to get Multilingual?\n      icon: \"fa-connectdevelop\",\n      // {string} the AB.Multilingual.Label(Key)\n      isPlugin: true,\n\n      pages: function () {\n         // Return the Root Pages required to\n         return this._pages;\n      },\n      _pages: [Designer],\n      // init: function (AB) {\n      //    debugger;\n      //    this._pages.forEach((p) => {\n      //       p.init(AB);\n      //    });\n      // },\n      datacollectionsIncluded: () => {\n         // return [];\n         var myDCs = [];\n         return AB.datacollections((d) => myDCs.indexOf(d.id) > -1);\n      },\n   };\n   Designer.application = application;\n   return application;\n}\n","module.exports = [];\n","/* eslint-disable */\nmodule.exports = {\n   /* key : label */\n};\n","//\n// Labels.js\n//\n// The index into our label library.\n\nvar Labels = {};\n// {hash}  { /* language_code : { key: label} */ }\n// all the <lang_code>.js files supported by the AppBuilder\n\nLabels.en = require(\"./en.js\");\n\nmodule.exports = Labels;\n","/*\n * EditorManager\n *\n * An Interface for managing all the various Component Editors we support.\n *\n */\nexport default function (AB) {\n   const Editors = [];\n   // {array}\n   // All the ABField Component Inerfaces available.\n   [\n      require(\"./views/ABViewCarousel\"),\n      require(\"./views/ABViewChart\"),\n      require(\"./views/ABViewChartArea\"),\n      require(\"./views/ABViewChartBar\"),\n      require(\"./views/ABViewChartLine\"),\n      require(\"./views/ABViewChartPie\"),\n      require(\"./views/ABViewComment\"),\n      require(\"./views/ABViewConditionalContainer\"),\n      require(\"./views/ABViewContainer\"),\n      require(\"./views/ABViewDataview\"),\n      require(\"./views/ABViewDetail\"),\n      require(\"./views/ABViewDocxBuilder\"),\n      require(\"./views/ABViewForm\"),\n      require(\"./views/ABViewGrid\"),\n      require(\"./views/ABViewLabel\"),\n      require(\"./views/ABViewLayout\"),\n      require(\"./views/ABViewMenu\"),\n      require(\"./views/ABViewPage\"),\n      require(\"./views/ABViewTab\"),\n      require(\"./views/ABViewText\"),\n   ].forEach((E) => {\n      const Klass = E.default(AB);\n\n      Editors.push(Klass);\n   });\n\n   return {\n      /*\n       * @function editors\n       * return all the currently defined Editors in an array.\n       * @param {fn} f\n       *        A filter for limiting which editor you want.\n       * @return [{ClassUI(Editor1)}, {ClassUI(Editor2)}, ...]\n       */\n      editors: function (f = () => true) {\n         return Editors.filter(f);\n      },\n   };\n}\n","/**\n * ABViewCarousel\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const UIClass = UI_Class(AB);\n      // var L = UIClass.L();\n      // var L = ABViewContainer.L();\n\n      myClass = class ABViewCarouselEditor extends UIClass {\n         static get key() {\n            return \"carousel\";\n         }\n\n         constructor(view, base = \"interface_editor_viewcarousel\") {\n            // base: {string} unique base id reference\n\n            super(base, {\n               label: \"\",\n            });\n\n            this.view = view;\n            this.settings = view.settings;\n            // shortcut to reference the settings\n\n            this.base = base;\n            this.AB = AB;\n\n            this.component = this.view.component();\n         }\n\n         ui() {\n            return this.component.ui();\n         }\n\n         init(AB) {\n            this.AB = AB;\n            return this.component.init(AB, 2);\n            // in our editor, we provide accessLv = 2\n         }\n\n         detatch() {\n            this.component.detatch();\n         }\n\n         onShow() {\n            this.component.onShow();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewChart\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport FABViewContainer from \"./ABViewContainer\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const BASE_ID = \"interface_editor_viewchart\";\n      const ABViewContainer = FABViewContainer(AB);\n\n      myClass = class ABViewChartEditor extends ABViewContainer {\n         static get key() {\n            return \"chart\";\n         }\n\n         constructor(view, base = BASE_ID) {\n            // base: {string} unique base id reference\n            super(view, base);\n         }\n\n         ui() {\n            const _ui = super.ui();\n\n            _ui.rows[0].cellHeight = 400;\n\n            return _ui;\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            await super.init(AB);\n\n            // this.component.onShow();\n            // in our editor, we provide accessLv = 2\n         }\n\n         detatch() {}\n\n         onShow() {\n            super.onShow();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewChartArea\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const BASE_ID = \"interface_editor_viewchart_area\";\n\n      const UIClass = UI_Class(AB);\n\n      myClass = class ABViewChartAreaEditor extends UIClass {\n         static get key() {\n            return \"area\";\n         }\n\n         constructor(view, base = BASE_ID) {\n            // base: {string} unique base id reference\n            super(base, {\n               view: \"\",\n            });\n\n            this.AB = AB;\n            this.view = view;\n            this.component = this.view.component();\n         }\n\n         ui() {\n            return {\n               id: this.ids.component,\n            };\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            await this.component.init(this.AB);\n\n            // this.component.onShow();\n            // in our editor, we provide accessLv = 2\n         }\n\n         detatch() {\n            this.component.detatch?.();\n         }\n\n         onShow() {\n            this.component.onShow();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewChartArea\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const BASE_ID = \"interface_editor_viewchart_bar\";\n\n      const UIClass = UI_Class(AB);\n\n      myClass = class ABViewChartBarEditor extends UIClass {\n         static get key() {\n            return \"bar\";\n         }\n\n         constructor(view, base = BASE_ID) {\n            // base: {string} unique base id reference\n            super(base, {\n               view: \"\",\n            });\n\n            this.AB = AB;\n            this.view = view;\n            this.component = this.view.component();\n         }\n\n         ui() {\n            return {\n               id: this.ids.component,\n            };\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            await this.component.init(this.AB);\n\n            // this.component.onShow();\n            // in our editor, we provide accessLv = 2\n         }\n\n         detatch() {\n            this.component.detatch?.();\n         }\n\n         onShow() {\n            this.component.onShow();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewChartArea\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const BASE_ID = \"interface_editor_viewchart_line\";\n\n      const UIClass = UI_Class(AB);\n\n      myClass = class ABViewChartLineEditor extends UIClass {\n         static get key() {\n            return \"line\";\n         }\n\n         constructor(view, base = BASE_ID) {\n            // base: {string} unique base id reference\n            super(base, {\n               view: \"\",\n            });\n\n            this.AB = AB;\n            this.view = view;\n            this.component = this.view.component();\n         }\n\n         ui() {\n            return {\n               id: this.ids.component,\n            };\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            await this.component.init(this.AB);\n\n            // this.component.onShow();\n            // in our editor, we provide accessLv = 2\n         }\n\n         detatch() {\n            this.component.detatch?.();\n         }\n\n         onShow() {\n            this.component.onShow();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewChartArea\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const BASE_ID = \"interface_editor_viewchart_pie\";\n\n      const UIClass = UI_Class(AB);\n\n      myClass = class ABViewChartPieEditor extends UIClass {\n         static get key() {\n            return \"pie\";\n         }\n\n         constructor(view, base = BASE_ID) {\n            // base: {string} unique base id reference\n            super(base, {\n               view: \"\",\n            });\n\n            this.AB = AB;\n            this.view = view;\n            this.component = this.view.component();\n         }\n\n         ui() {\n            return this.component.ui();\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            await this.component.init(this.AB);\n\n            // this.component.onShow();\n            // in our editor, we provide accessLv = 2\n         }\n\n         detatch() {\n            this.component.detatch?.();\n         }\n\n         onShow() {\n            this.component.onShow();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewComment\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const BASE_ID = \"interface_editor_viewcomment\";\n\n      const UIClass = UI_Class(AB);\n\n      myClass = class ABViewCommentEditor extends UIClass {\n         static get key() {\n            return \"comment\";\n         }\n\n         constructor(view, base = BASE_ID) {\n            // base: {string} unique base id reference\n            super(base);\n\n            this.AB = AB;\n            this.view = view;\n            this.component = this.view.component();\n         }\n\n         ui() {\n            return this.component.ui();\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            await this.component.init(this.AB);\n\n            // this.component.onShow();\n            // in our editor, we provide accessLv = 2\n         }\n\n         detatch() {\n            this.component.detatch?.();\n         }\n\n         onShow() {\n            this.component.onShow();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewConditionalContainer\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport FABViewContainer from \"./ABViewContainer\";\n\nexport default function (AB) {\n   if (myClass) return myClass;\n\n   const ABViewContainer = FABViewContainer(AB);\n\n   myClass = class ABViewConditionalContainerEditor extends ABViewContainer {\n      static get key() {\n         return \"conditionalcontainer\";\n      }\n\n      constructor(view, base = \"interface_editor_viewconditionalContainer\") {\n         // base: {string} unique base id reference\n         super(view, base);\n      }\n   };\n\n   return myClass;\n}\n","/**\n * ABViewContainerEditor\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      // const uiConfig = AB.Config.uiSettings();\n      const UIClass = UI_Class(AB);\n      var L = UIClass.L();\n\n      myClass = class ABViewContainerEditor extends UIClass {\n         static get key() {\n            return \"viewcontainer\";\n         }\n\n         constructor(view, base = \"interface_editor_viewcontainer\", ids = {}) {\n            // base: {string} unique base id reference\n            // ids: {hash}  { key => '' }\n            // this is provided by the Sub Class and has the keys\n            // unique to the Sub Class' interface elements.\n\n            var common = {\n               label: \"\",\n            };\n\n            Object.keys(ids).forEach((k) => {\n               if (typeof common[k] != \"undefined\") {\n                  console.error(\n                     `!!! ABFieldProperty:: passed in ids contains a restricted field : ${k}`\n                  );\n                  return;\n               }\n               common[k] = \"\";\n            });\n\n            super(base, common);\n\n            this.view = view;\n            this.settings = view.settings;\n            // shortcut to reference the settings\n\n            this.viewLoad(view);\n\n            this.base = base;\n            this.AB = AB;\n\n            this.subComponents = {\n               /* viewId: viewComponent */\n            };\n\n            this.cellHeight = 250;\n            // {int}\n            // default height of this editor component in our editing area.\n         }\n\n         ui() {\n            let key = ABViewContainerEditor.key;\n            let Defaults =\n               AB.Class.ABViewManager.viewClass(key).defaultValues();\n            return {\n               rows: [\n                  {\n                     id: this.ids.component,\n                     view: \"dashboard\",\n                     css: `ab-${key}-container`,\n                     cellHeight: this.cellHeight,\n                     gridColumns: this.settings.columns || Defaults.columns,\n                  },\n               ],\n            };\n         }\n\n         init(AB) {\n            var Dashboard = $$(this.ids.component);\n            if (Dashboard) {\n               webix.extend(Dashboard, webix.OverlayBox);\n               webix.extend(Dashboard, webix.ProgressBar);\n            }\n\n            // this.views().reverse().forEach((child) => {\n\n            // NOTE: need to sorting before .addView because there is a render position bug in webix 5.1.7\n            // https://webix.com/snippet/404cf0c7\n            var childViews = this.CurrentView.viewsSortByPosition();\n\n            // attach all the .UI views:\n            childViews.forEach((child) => {\n               child.warningsSilent = true;\n               // let's not be alerted to unconfigured settings in this context\n\n               // console.error(\"TODO: REMOVE THIS TESTING CODE:\");\n               // if (!child.componentOld) return;\n\n               var component = child.component();\n\n               // store\n               this.subComponents[child.id] = component;\n\n               let view = \"panel\";\n               if (child.settings.movable == false) view = \"scrollview\";\n\n               Dashboard.addView({\n                  view: view,\n\n                  // specific viewId to .name, it will be used to save view position\n                  name: child.id,\n                  icon: \"fa fa-arrows\",\n                  css: \"ab-widget-container\",\n                  body: {\n                     rows: [\n                        {\n                           view: \"template\",\n                           height: 30,\n                           css: \"ab-widget-header\",\n                           template: this.template(child),\n                           onClick: {\n                              \"ab-component-edit\": (e, id, trg) => {\n                                 this.viewEdit(e, child.id, trg);\n                              },\n                              \"ab-component-remove\": (e, id, trg) => {\n                                 this.viewDelete(e, child.id, trg);\n                              },\n                           },\n                        },\n                        component.ui(),\n                        // (mode == 'preview' ? component.ui : {\n                        //    // empty element\n                        //    view: 'spacer',\n                        //    hidden: true,\n                        // })\n                     ],\n                  },\n\n                  // dx: _logic.validatePosition(child.position.dx, 1, Dashboard.config.gridColumns),\n                  // dy: _logic.validatePosition(child.position.dy, 1, Dashboard.config.gridRows),\n\n                  dx: child.position.dx || 1,\n                  dy: child.position.dy || 1,\n                  x: this.validatePosition(\n                     child.position.x,\n                     0,\n                     Dashboard.config.gridColumns - 1\n                  ),\n                  y: child.position.y || 0,\n               });\n\n               // initial sub-component\n               component.init(AB, 2); // when in editor allow full access\n            });\n\n            // listen onChange event\n            // NOTE: listen after populate views by .addView\n            if (this._onChangeId) Dashboard.detachEvent(this._onChangeId);\n            this._onChangeId = Dashboard.attachEvent(\"onChange\", () => {\n               this.onReorder();\n            });\n\n            // show \"drop here\" panel\n            this.showEmptyPlaceholder();\n\n            Dashboard.adjust();\n         } // init()\n\n         /**\n          * @method detatch()\n          * Make sure we and any of our child components remove any\n          * active listeners on objects.\n          */\n         detatch() {\n            Object.keys(this.subComponents).forEach((k) => {\n               this.subComponents[k]?.detatch?.();\n            });\n\n            var Dashboard = $$(this.ids.component);\n            if (Dashboard) {\n               if (this._onChangeId) Dashboard.detachEvent(this._onChangeId);\n            }\n         }\n\n         /**\n          * @method busy()\n          * Display a progress in action icon\n          */\n         busy() {\n            let Dashboard = $$(this.ids.component);\n            Dashboard?.disable();\n            Dashboard?.showProgress({ type: \"icon\" });\n         }\n\n         /**\n          * @method onReorder()\n          * Attempt to encode the current layout order among all our\n          * child views.\n          */\n         async onReorder() {\n            this.busy();\n\n            var Dashboard = $$(this.ids.component);\n\n            // ignore in \"preview\" mode\n            // if (Dashboard == null || Dashboard.config.view != \"dashboard\") return;\n\n            var viewState = Dashboard.serialize();\n\n            var allViewUpdates = [];\n\n            // save view position state to views\n            this.CurrentView.views().forEach((v) => {\n               var state = viewState.filter((vs) => vs.name == v.id)[0];\n               if (state) {\n                  v.position.x = state.x;\n                  v.position.y = state.y;\n\n                  // validate position data\n                  if (v.position.x < 0) v.position.x = 0;\n                  if (v.position.y < 0) v.position.y = 0;\n\n                  allViewUpdates.push(v.save());\n               }\n            });\n\n            try {\n               // save template layout\n               // this.saveReorder()\n               await Promise.all(allViewUpdates);\n\n               await this.CurrentView.save();\n\n               this.ready();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  message: \"Error trying to save selected View:\",\n                  view: this.toObj(),\n               });\n               this.ready();\n            }\n         }\n\n         onShow() {\n            this.CurrentView.views().forEach((v) => {\n               var component = this.subComponents[v.id];\n               component?.onShow?.();\n            });\n\n            let dc = this.CurrentView.datacollection;\n            if (dc && dc.dataStatus == dc.dataStatusFlag.notInitial) {\n               // load data when a widget is showing\n               dc.loadData();\n            }\n         }\n\n         /**\n          * @method ready()\n          * Remove the progress in action icon.\n          */\n         ready() {\n            let Dashboard = $$(this.ids.component);\n            Dashboard?.enable();\n            Dashboard?.hideProgress();\n         }\n\n         /**\n          * @method showEmptyPlaceholder()\n          * Display the message to drop a new widget here to the UI\n          * when there are no child views.\n          */\n         showEmptyPlaceholder() {\n            var Dashboard = $$(this.ids.component);\n\n            // if we don't have any views, then place a \"drop here\" placeholder\n            if (Dashboard.getChildViews().length == 0) {\n               Dashboard.showOverlay(\n                  \"<div class='drop-zone'><div>\" +\n                     L(\"Add Widgets Here\") +\n                     \"</div></div>\"\n               );\n            }\n         }\n\n         /**\n          * @method template()\n          * render the list template for the View\n          * @param {obj} obj the current View instance\n          * @param {obj} common  Webix provided object with common UI tools\n          */\n         template(child) {\n            return `<div>\n               <i class=\"fa fa-${child.icon} webix_icon_btn\"></i> ${child.label}\n               <div class=\"ab-component-tools\">\n               ${\n                  child.settings.removable == false\n                     ? \"\"\n                     : '<i class=\"fa fa-trash ab-component-remove\"></i>'\n               }\n               <i class=\"fa fa-edit ab-component-edit\"></i>\n               </div></div>`;\n         }\n\n         /**\n          * @method validatePosition\n          * ensure the given position is within the specified bounds.\n          * @param {int} curPosition\n          * @param {int} minPosition\n          * @param {int} maxPosition\n          */\n         validatePosition(curPosition, minPosition, maxPosition) {\n            if (curPosition < minPosition) return minPosition;\n            if (curPosition > maxPosition) return maxPosition;\n            else return curPosition;\n         }\n\n         /**\n          * @method viewDelete()\n          * Called when the [delete] icon for a child View is clicked.\n          * @param {obj} e the onClick event object\n          * @param {integer} id the id of the element to delete\n          * @param {obj} trg  Webix provided object\n          */\n         viewDelete(e, id /*, trg */) {\n            var deletedView = this.CurrentView.views((v) => v.id == id)[0];\n            if (!deletedView) return false;\n\n            webix.confirm({\n               title: L(\"Delete component\"),\n               text: L(\"Do you want to delete <b>{0}</b>?\", [\n                  deletedView.label,\n               ]),\n               callback: async (result) => {\n                  if (!result) return;\n                  // let Dashboard = $$(ids.component);\n\n                  // // remove UI of this component in template\n                  // var deletedElem = Dashboard.queryView({ name: id });\n                  // if (deletedElem) {\n\n                  //    // store the removed view to signal event in .onChange\n                  //    this.__deletedView = deletedView;\n\n                  //    // remove view\n                  //    var remainingViews = this.views((v) => { return v.id != deletedView.id; })\n                  //    this._views = remainingViews;\n\n                  //    // this calls the remove REST to API server\n                  //    Dashboard.removeView(deletedElem);\n                  // }\n\n                  this.busy();\n\n                  try {\n                     await deletedView.destroy();\n\n                     // signal the current view has been deleted.\n                     deletedView.emit(\"destroyed\", deletedView);\n                     this.emit(\"view.destroyed\", deletedView);\n\n                     let Dashboard = $$(this.ids.component);\n\n                     // Update UI\n                     var deletedElem = Dashboard.queryView({ name: id });\n                     if (deletedElem) {\n                        Dashboard.blockEvent();\n                        Dashboard.removeView(deletedElem);\n                        Dashboard.unblockEvent();\n                     }\n\n                     this.showEmptyPlaceholder();\n                  } catch (err) {\n                     this.AB.notify.developer(err, {\n                        message: \"Error trying to delete selected View:\",\n                        view: deletedView,\n                     });\n                  }\n\n                  this.ready();\n               },\n            });\n            e.preventDefault();\n         } // viewDelete()\n\n         /**\n          * @method viewEdit()\n          * Called when the [edit] icon for a child View is clicked.\n          * @param {obj} e the onClick event object\n          * @param {integer} id the id of the element to edit\n          * @param {obj} trg  Webix provided object\n          */\n         viewEdit(e, id /*, trg */) {\n            var view = this.CurrentView.views((v) => v.id == id)[0];\n\n            if (!view) return false;\n\n            // NOTE: let webix finish this onClick event, before\n            // calling .populateInterfaceWorkspace() which will replace\n            // the interface elements with the edited view.  (apparently\n            // that causes errors.)\n            setTimeout(() => {\n               // App.actions.populateInterfaceWorkspace(view);\n               try {\n                  this.emit(\"view.edit\", view);\n               } catch (err) {\n                  console.error(err);\n               }\n            }, 15);\n\n            e.preventDefault();\n\n            return false;\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewDataviewEditor\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\n let myClass = null;\n // {singleton}\n // we will want to call this factory fn() repeatedly in our imports,\n // but we only want to define 1 Class reference.\n \n import FABViewContainer from \"./ABViewContainer\";\n \n export default function (AB) {\n    if (!myClass) {\n       const ABViewContainer = FABViewContainer(AB);\n       // var L = UIClass.L();\n       // var L = ABViewContainer.L();\n \n       myClass = class ABViewDataviewEditor extends ABViewContainer {\n          static get key() {\n             return \"dataview\";\n          }\n \n          constructor(view, base = \"interface_editor_viewdataview\") {\n             // base: {string} unique base id reference\n \n             super(view, base);\n \n             // this.component = this.view.component();\n          }\n \n          ui() {\n             let _ui = super.ui();\n             _ui.rows[0].cellHeight = 75;\n             return _ui;\n          }\n \n          init(AB) {\n             this.AB = AB;\n             return super.init(AB);\n          }\n \n          detatch() {\n             this.component?.detatch?.();\n          }\n \n          onShow() {\n             this.component?.onShow?.();\n          }\n       };\n    }\n \n    return myClass;\n }\n ","/**\n * ABViewDetailEditor\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport FABViewContainer from \"./ABViewContainer\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const ABViewContainer = FABViewContainer(AB);\n      // var L = UIClass.L();\n      // var L = ABViewContainer.L();\n\n      myClass = class ABViewDetailEditor extends ABViewContainer {\n         static get key() {\n            return \"detail\";\n         }\n\n         constructor(view, base = \"interface_editor_viewdetail\") {\n            // base: {string} unique base id reference\n\n            super(view, base);\n\n            // this.component = this.view.component();\n         }\n\n         ui() {\n            let _ui = super.ui();\n            _ui.rows[0].cellHeight = 75;\n            return _ui;\n         }\n\n         init(AB) {\n            this.AB = AB;\n            return super.init(AB);\n         }\n\n         detatch() {\n            this.component?.detatch?.();\n         }\n\n         onShow() {\n            this.component?.onShow?.();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewDocxBuilder\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (myClass) return myClass;\n\n   const UIClass = UI_Class(AB);\n   // var L = UIClass.L();\n   // var L = ABViewContainer.L();\n\n   myClass = class ABViewDocxBuilderEditor extends UIClass {\n      static get key() {\n         return \"docxBuilder\";\n      }\n\n      constructor(view, base = \"interface_editor_viewdocxBuilder\") {\n         // base: {string} unique base id reference\n\n         super(base, {});\n\n         this.view = view;\n         this.settings = view.settings;\n         // shortcut to reference the settings\n\n         this.base = base;\n         this.AB = AB;\n\n         this.component = this.view.component();\n      }\n\n      ui() {\n         return this.component.ui();\n      }\n\n      init(AB) {\n         this.AB = AB;\n         return this.component.init(AB, 2);\n         // in our editor, we provide accessLv = 2\n      }\n\n      detatch() {\n         this.component.detatch?.();\n      }\n\n      onShow() {\n         this.component.onShow?.();\n      }\n   };\n\n   return myClass;\n}\n","/**\n * ABViewFormEditor\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport FABViewContainer from \"./ABViewContainer\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const ABViewContainer = FABViewContainer(AB);\n      // var L = UIClass.L();\n      // var L = ABViewContainer.L();\n\n      myClass = class ABViewFormEditor extends ABViewContainer {\n         static get key() {\n            return \"form\";\n         }\n\n         constructor(view, base = \"interface_editor_viewform\") {\n            // base: {string} unique base id reference\n\n            super(view, base);\n\n            // this.component = this.view.component();\n         }\n\n         ui() {\n            let _ui = super.ui();\n            _ui.rows[0].cellHeight = 75;\n            return _ui;\n         }\n\n         init(AB) {\n            this.AB = AB;\n            return super.init(AB);\n         }\n\n         detatch() {\n            this.component?.detatch?.();\n         }\n\n         onShow() {\n            this.component?.onShow?.();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewGrid\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const UIClass = UI_Class(AB);\n      // var L = UIClass.L();\n      // var L = ABViewContainer.L();\n\n      myClass = class ABViewGridEditor extends UIClass {\n         static get key() {\n            return \"grid\";\n         }\n\n         constructor(view, base = \"interface_editor_viewgrid\") {\n            // base: {string} unique base id reference\n\n            super(base, {\n               label: \"\",\n            });\n\n            this.view = view;\n            this.settings = view.settings;\n            // shortcut to reference the settings\n\n            this.base = base;\n            this.AB = AB;\n\n            this.component = this.view.component();\n         }\n\n         ui() {\n            return this.component.ui();\n         }\n\n         init(AB) {\n            this.AB = AB;\n            this.component.ignoreLocal = true;\n            return this.component.init(AB, 2);\n            // in our editor, we provide accessLv = 2\n         }\n\n         detatch() {\n            this.component.detatch?.();\n         }\n\n         onShow() {\n            this.component.onShow?.();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewLabel\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const BASE_ID = \"interface_editor_viewlabel\";\n\n      const UIClass = UI_Class(AB);\n\n      myClass = class ABViewTextEditor extends UIClass {\n         static get key() {\n            return \"label\";\n         }\n\n         constructor(view, base = BASE_ID) {\n            // base: {string} unique base id reference\n            super(base);\n\n            this.AB = AB;\n            this.view = view;\n            this.component = this.view.component();\n         }\n\n         ui() {\n            const ids = this.ids;\n            const baseView = this.view;\n            const component = this.component;\n            const _ui = {\n               type: \"form\",\n               margin: 10,\n               padding: 10,\n               borderless: true,\n               rows: [\n                  {\n                     id: ids.component,\n                     view: \"label\",\n                     label: baseView.text || \"\",\n                     align: baseView.settings.alignment,\n                  },\n                  {},\n               ],\n            };\n\n            return component.uiFormatting(_ui);\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            webix.codebase = \"/js/webix/extras/\";\n\n            await this.component.init(this.AB);\n\n            // this.component.onShow();\n            // in our editor, we provide accessLv = 2\n         }\n\n         detatch() {\n            this.component.detatch?.();\n         }\n\n         onShow() {\n            this.component.onShow();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewLayoutEditor\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const UIClass = UI_Class(AB);\n      const L = (...params) => AB.Multilingual.label(...params);\n\n      myClass = class ABViewLayoutEditor extends UIClass {\n         static get key() {\n            return \"layout\";\n         }\n\n         constructor(view, base = \"interface_editor_view_layout\") {\n            // base: {string} unique base id reference\n\n            super(base);\n         }\n\n         get viewComponent() {\n            const currView = this.CurrentView;\n            if (currView) {\n               this._component = currView.component();\n            }\n\n            return this._component;\n         }\n\n         ui() {\n            const childViews = this.CurrentView.views();\n            const _ui = this.viewComponent.ui();\n            _ui.type = \"form\";\n\n            if (childViews.length) {\n               childViews.forEach((v, index) => {\n                  const vComponent = v.component();\n                  const vUI = vComponent.ui();\n\n                  _ui.cols[index] = {\n                     rows: [\n                        // Add action buttons\n                        {\n                           type: \"template\",\n                           css: \"ab-layout-header\",\n                           height: 30,\n                           template: this.templateButton({\n                              icon: v.icon,\n                              label: v.label,\n                           }),\n                           onClick: {\n                              \"ab-component-edit\": (e, id, trg) => {\n                                 this.viewEdit(e, v.id, trg);\n                              },\n                              \"ab-component-remove\": (e, id, trg) => {\n                                 this.viewDelete(e, v.id, trg);\n                              },\n                           },\n                        },\n                        // Preview display here\n                        vUI,\n                        {},\n                     ],\n                  };\n               });\n            } else {\n               _ui.cols[0] = {};\n            }\n\n            return _ui;\n         }\n\n         init(AB) {\n            this.AB = AB;\n\n            this.viewComponent.init();\n\n            // initial sub views\n            const childViews = this.CurrentView.views();\n            childViews.forEach((v) => {\n               const vComponent = v.component();\n               vComponent.init();\n            });\n         }\n\n         detatch() {\n            this.viewComponent?.detatch?.();\n         }\n\n         templateButton(obj) {\n            return `<div class=\"ab-widget-header ab-layout-header\">\n               <i class=\"fa fa-${obj.icon} webix_icon_btn\"></i> ${obj.label}\n               <div class=\"ab-component-tools\">\n               <i class=\"fa fa-trash ab-component-remove\"></i>\n               <i class=\"fa fa-edit ab-component-edit\"></i>\n               </div></div>`;\n         }\n\n         viewEdit(e, id, trg) {\n            const view = this.CurrentView.views((v) => v.id == id)[0];\n            if (!view) return false;\n\n            // NOTE: let webix finish this onClick event, before\n            // calling .populateInterfaceWorkspace() which will replace\n            // the interface elements with the edited view.  (apparently\n            // that causes errors.)\n            setTimeout(() => {\n               try {\n                  this.emit(\"view.edit\", view);\n               } catch (err) {\n                  console.error(err);\n               }\n            }, 50);\n\n            e.preventDefault();\n            return false;\n         }\n\n         viewDelete(e, id, trg) {\n            const view = this.CurrentView.views((v) => v.id == id)[0];\n            if (!view) return false;\n\n            this.AB.Webix.confirm({\n               title: L(\"Delete component\"),\n               text: L(\"Do you want to delete <b>{0}</b>?\", [view.label]),\n               callback: (result) => {\n                  if (result) {\n                     view.destroy().then(() => {\n                        view.emit(\"destroyed\", view);\n                        this.emit(\"view.destroyed\", view);\n                     });\n                  }\n               },\n            });\n            e.preventDefault();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewMenuEditor\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const UIClass = UI_Class(AB);\n      // var L = UIClass.L();\n      // var L = ABViewContainer.L();\n\n      myClass = class ABViewMenuEditor extends UIClass {\n         static get key() {\n            return \"menu\";\n         }\n\n         constructor(view, base = \"interface_editor_viewmenu\") {\n            // base: {string} unique base id reference\n\n            super(base);\n\n            this.view = view;\n            this.component = this.view.component();\n         }\n\n         ui() {\n            const menu = this.component.ui();\n\n            return {\n               type: \"space\",\n               rows: [menu, {}],\n            };\n         }\n\n         init(AB) {\n            this.AB = AB;\n\n            this.onShow();\n         }\n\n         detatch() {\n            this.component?.detatch?.();\n         }\n\n         onShow() {\n            const ids = this.component.ids;\n            const currView = this.view;\n\n            const $menu = $$(ids.menu);\n            currView.ClearPagesInView($menu);\n            if (currView?.settings?.order?.length) {\n               currView.AddPagesToView($menu, currView.settings.order);\n               // } else if (this.settings.pages && this.settings.pages.length) {\n               //    this.AddPagesToView(Menu, this.settings.pages);\n            }\n\n            this.component?.onShow?.();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewPage\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n *\n * ABViewPage is a glorified ABViewContainer\n */\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport FABViewContainer from \"./ABViewContainer\";\n\nexport default function (AB) {\n   if (!myClass) {\n      // const uiConfig = AB.Config.uiSettings();\n      const ABViewContainer = FABViewContainer(AB);\n      // var L = ABViewContainer.L();\n\n      myClass = class ABViewPageEditor extends ABViewContainer {\n         static get key() {\n            return \"page\";\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewTab\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\nimport FTabPopup from \"../../interface_common/ui_tab_form_popup\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const BASE_ID = \"interface_editor_viewtab\";\n\n      const UIClass = UI_Class(AB);\n      const L = UIClass.L();\n\n      const TabPopup = FTabPopup(AB);\n\n      myClass = class ABViewTabEditor extends UIClass {\n         static get key() {\n            return \"tab\";\n         }\n\n         constructor(view, base = BASE_ID) {\n            // base: {string} unique base id reference\n            super(base, {\n               view: \"\",\n            });\n\n            this.AB = AB;\n            this.view = view;\n            this.component = this.view.component();\n         }\n\n         ui() {\n            const ids = this.ids;\n            const baseView = this.view;\n            const component = this.component;\n            const componentUI = this.component.ui();\n\n            if (componentUI.rows) {\n               componentUI.rows[0].id = ids.component;\n               componentUI.rows[0].tabbar = {\n                  height: 60,\n                  type: \"bottom\",\n                  css: baseView.settings.darkTheme ? \"webix_dark\" : \"\",\n                  on: {\n                     onItemClick: (id, e) => {\n                        const tabID = $$(ids.component).getValue();\n                        const tab = baseView.views(\n                           (view) => view.id === tabID\n                        )[0];\n                        const currIndex = baseView._views.findIndex(\n                           (view) => view.id === tabID\n                        );\n\n                        // Rename\n                        if (e.target.classList.contains(\"rename\")) {\n                           baseView.tabPopup.show(tab);\n                        }\n                        // Reorder back\n                        else if (e.target.classList.contains(\"move-back\")) {\n                           baseView.viewReorder(tabID, currIndex - 1);\n\n                           // refresh editor view\n                           baseView.emit(\"properties.updated\", baseView);\n                        }\n                        // Reorder next\n                        else if (e.target.classList.contains(\"move-next\")) {\n                           baseView.viewReorder(tabID, currIndex + 1);\n\n                           // refresh editor view\n                           baseView.emit(\"properties.updated\", baseView);\n                        }\n                     },\n                  },\n               };\n\n               // Add action buttons\n               for (\n                  let i = 0;\n                  i < (componentUI.rows[0]?.cells ?? []).length;\n                  i++\n               ) {\n                  // Add 'move back' icon\n                  componentUI.rows[0].cells[\n                     i\n                  ].header = `<i class=\"fa fa-caret-left move-back ab-tab-back\"></i>${componentUI.rows[0]?.cells[i].header}`;\n\n                  // Add 'edit' icon\n                  componentUI.rows[0].cells[i].header +=\n                     ' <i class=\"fa fa-pencil-square rename ab-tab-edit\"></i>';\n\n                  // Add 'move next' icon\n                  componentUI.rows[0].cells[i].header +=\n                     ' <i class=\"fa fa-caret-right move-next ab-tab-next\"></i>';\n               }\n            } else if (componentUI.cols) {\n               // if we detect colums we are using sidebar and need to format the onItemClick event differently\n               let viewIndex = 1;\n               let tabIndex = 0;\n\n               if (baseView.settings.sidebarPos === \"right\") {\n                  // the sidebar is in the second column now so we need to reference it properly\n                  viewIndex = 0;\n                  tabIndex = 1;\n               }\n\n               componentUI.cols[viewIndex].id = ids.component;\n               componentUI.cols[tabIndex].on = {\n                  onItemClick: (id, e) => {\n                     const tabID = id.replace(\"_menu\", \"\");\n                     const tab = baseView.views((view) => view.id == tabID)[0];\n                     const currIndex = baseView._views.findIndex(\n                        (view) => view.id === tabID\n                     );\n\n                     component.onShow(tabID);\n\n                     // Rename\n                     if (e.target.classList.contains(\"rename\"))\n                        baseView.tabPopup.show(tab);\n                     // Reorder back\n                     else if (e.target.classList.contains(\"move-back\")) {\n                        baseView.viewReorder(tabID, currIndex - 1);\n\n                        // refresh editor view\n                        baseView.emit(\"properties.updated\", baseView);\n                     }\n                     // Reorder next\n                     else if (e.target.classList.contains(\"move-next\")) {\n                        baseView.viewReorder(tabID, currIndex + 1);\n\n                        // refresh editor view\n                        baseView.emit(\"properties.updated\", baseView);\n                     }\n                  },\n               };\n\n               // Add action buttons\n               for (\n                  let i = 0;\n                  i < (componentUI.cols[tabIndex].data ?? []).length;\n                  i++\n               ) {\n                  // Add 'edit' icon\n                  componentUI.cols[tabIndex].data[i].value =\n                     componentUI.cols[tabIndex].data[i].value +\n                     ' <i class=\"fa fa-pencil-square rename ab-tab-edit\"></i>';\n                  // Add 'move up' icon\n                  componentUI.cols[tabIndex].data[i].value +=\n                     '<i class=\"fa fa-caret-up move-back ab-tab-up\"></i>';\n                  // Add 'move down' icon\n                  componentUI.cols[tabIndex].data[i].value +=\n                     ' <i class=\"fa fa-caret-down move-next ab-tab-down\"></i>';\n               }\n            }\n\n            return {\n               rows: [componentUI],\n            };\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            const ids = this.ids;\n\n            await this.component.init(this.AB);\n\n            const $component = $$(ids.component);\n\n            // Add actions buttons - Edit , Delete\n            if ($component.config.view === \"tabview\") {\n               webix.ui({\n                  container: $component.getMultiview().$view,\n                  view: \"template\",\n                  autoheight: false,\n                  height: 1,\n                  width: 0,\n                  template: [\n                     '<div class=\"ab-component-tools ab-layout-view ab-tab-tools\">',\n                     '<i class=\"fa fa-trash ab-component-remove\"></i>',\n                     '<i class=\"fa fa-edit ab-component-edit\"></i>',\n                     \"</div>\",\n                  ].join(\"\"),\n                  onClick: {\n                     \"ab-component-edit\": (e, id, trg) => {\n                        this.tabEdit(e, id, trg);\n                     },\n                     \"ab-component-remove\": (e, id, trg) => {\n                        this.tabRemove(e, id, trg);\n                     },\n                  },\n               });\n            } else if ($component.config.view === \"multiview\") {\n               webix.ui({\n                  container: $component.$view,\n                  view: \"template\",\n                  autoheight: false,\n                  height: 1,\n                  width: 0,\n                  template: [\n                     '<div class=\"ab-component-tools ab-layout-view ab-tab-tools\">',\n                     '<i class=\"fa fa-trash ab-component-remove\"></i>',\n                     '<i class=\"fa fa-edit ab-component-edit\"></i>',\n                     \"</div>\",\n                  ].join(\"\"),\n                  onClick: {\n                     \"ab-component-edit\": (e) => {\n                        this.tabEdit(e);\n                     },\n                     \"ab-component-remove\": (e) => {\n                        this.tabRemove(e);\n                     },\n                  },\n               });\n            }\n\n            const baseView = this.view;\n\n            if (!baseView.tabPopup) {\n               baseView.tabPopup = new TabPopup(baseView);\n               baseView.tabPopup.init(AB);\n            }\n\n            // this.component.onShow();\n            // in our editor, we provide accessLv = 2\n         }\n\n         // templateBlock(tab) {\n         // \tconst _template = [\n         // \t\t'<div class=\"ab-component-in-page\">',\n         // \t\t'<div id=\"' + ids.view + '_#objID#\" >',\n         // \t\t'<i class=\"fa fa-#icon#\"></i>',\n         // \t\t' #label#',\n         // \t\t'</div>',\n         // \t\t'</div>'\n         // \t].join('');\n\n         // \treturn _template\n         // \t\t.replace('#objID#', tab.id)\n         // \t\t.replace('#icon#', tab.icon)\n         // \t\t.replace('#label#', tab.label);\n         // }\n\n         tabEdit(element) {\n            const tabID = $$(this.ids.component).getValue();\n            const view = this.view.views((view) => view.id == tabID)[0];\n\n            if (!view) return false;\n\n            // NOTE: let webix finish this onClick event, before\n            // calling .populateInterfaceWorkspace() which will replace\n            // the interface elements with the edited view.  (apparently\n            // that causes errors.)\n            setTimeout(() => {\n               try {\n                  this.emit(\"view.edit\", view);\n               } catch (err) {\n                  console.error(err);\n               }\n            }, 50);\n\n            element.preventDefault();\n\n            return false;\n         }\n\n         tabRemove(element) {\n            const ids = this.ids;\n\n            const $component = $$(ids.component);\n\n            const tabID = $component.getValue();\n            const deletedView = this.view.views((view) => view.id == tabID)[0];\n\n            if (deletedView) {\n               webix.confirm({\n                  title: L(\"Delete tab\"),\n                  text: L(\"Do you want to delete <b>{0}</b>?\", [\n                     deletedView.label,\n                  ]),\n                  callback: (result) => {\n                     if (result) {\n                        // this.viewDestroy(deletedView);\n                        deletedView.destroy();\n\n                        const componentUI = this.component.ui();\n\n                        // remove tab option\n                        if (componentUI.rows) $component.removeView(tabID);\n                        else {\n                           let $sidebar = null;\n\n                           for (let i = 0; i < componentUI.cols.length; i++)\n                              if (componentUI.cols[i].view === \"sidebar\") {\n                                 $sidebar = $$(componentUI.cols[i].id);\n\n                                 break;\n                              }\n\n                           $sidebar.remove(`${tabID}_menu`);\n                        }\n                     }\n                  },\n               });\n            }\n\n            element.preventDefault();\n\n            return false;\n         }\n\n         detatch() {\n            this.component.detatch?.();\n         }\n\n         onShow() {\n            this.component.onShow();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ABViewText\n * The widget that displays the UI Editor Component on the screen\n * when designing the UI.\n */\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      const BASE_ID = \"interface_editor_viewtext\";\n\n      const UIClass = UI_Class(AB);\n\n      myClass = class ABViewTextEditor extends UIClass {\n         static get key() {\n            return \"text\";\n         }\n\n         constructor(view, base = BASE_ID) {\n            // base: {string} unique base id reference\n            super(base);\n\n            this.AB = AB;\n            this.view = view;\n            this.component = this.view.component();\n         }\n\n         ui() {\n            const ids = this.ids;\n            const baseView = this.view;\n\n            return {\n               id: ids.component,\n               view: \"tinymce-editor\",\n               value: baseView.text,\n               config: {\n                  plugins: [\n                     \"advlist autolink lists link image charmap print preview anchor\",\n                     \"searchreplace visualblocks code fullscreen\",\n                     \"insertdatetime media table contextmenu paste imagetools wordcount\",\n                  ],\n                  toolbar:\n                     \"insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image\",\n                  // menu: {\n                  // \tfile: { title: 'File', items: 'newdocument' },\n                  // \tedit: { title: 'Edit', items: 'undo redo | cut copy paste pastetext | selectall' },\n                  // \tformat: { title: 'Format', items: 'formats | removeformat' }\n                  // },\n                  init_instance_callback: (editor) => {\n                     const eventHandlerOnChange = () => {\n                        this.onChange();\n                     };\n\n                     editor.on(\"Change\", eventHandlerOnChange);\n                  },\n               },\n            };\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            webix.codebase = \"/js/webix/extras/\";\n\n            await this.component.init(this.AB);\n\n            // this.component.onShow();\n            // in our editor, we provide accessLv = 2\n         }\n\n         onChange() {\n            const ids = this.ids;\n            const baseView = this.view;\n\n            if (baseView._onChangeFunction) {\n               clearTimeout(baseView._onChangeFunction);\n\n               baseView._onChangeFunction = null;\n            }\n\n            const $component = $$(ids.component);\n\n            baseView._onChangeFunction = setTimeout(() => {\n               baseView.text = $component.getValue();\n\n               baseView.save();\n            }, 400);\n         }\n\n         detatch() {\n            this.component.detatch?.();\n         }\n\n         onShow() {\n            this.component.onShow();\n         }\n      };\n   }\n\n   return myClass;\n}\n","/**\n * ui_tab_form_popup\n *\n * The widget that displays the UI Popup Component (Add/Edit Tab) on the screen\n * when designing the UI.\n */\n\nexport default function (AB) {\n   const L = (...params) => AB.Multilingual.label(...params);\n\n   class TabPopup extends AB.ClassUI {\n      constructor(view) {\n         super(`${view.id}_popup`, {\n            popupTabManager: \"\",\n            popupTabManagerForm: \"\",\n            popupTabManagerSaveButton: \"\",\n         });\n\n         this.view = view;\n      }\n\n      async init(AB) {\n         this.view.AB = AB;\n\n         this.create();\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return {\n            id: ids.popupTabManager,\n            view: \"window\",\n            height: 250,\n            width: 300,\n            modal: true,\n            position: \"center\",\n            head: \" \",\n            body: {\n               id: ids.popupTabManagerForm,\n               view: \"form\",\n               elements: [\n                  {\n                     view: \"text\",\n                     name: \"label\",\n                     label: L(\"Label\"),\n                     required: true,\n                  },\n                  {\n                     view: \"combo\",\n                     name: \"tabicon\",\n                     label: L(\"Icon\"),\n                     options: {\n                        filter: (item, value) => {\n                           if (\n                              item.value\n                                 .toString()\n                                 .toLowerCase()\n                                 .indexOf(value.toLowerCase()) === 0\n                           )\n                              return true;\n\n                           return false;\n                        },\n                        body: {\n                           data: this.view.AB._App.icons ?? [],\n                           template:\n                              \"<i class='fa fa-fw fa-#value#'></i> #value#\",\n                        },\n                     },\n                  },\n                  // action buttons\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.hide();\n                           },\n                        },\n                        {\n                           id: ids.popupTabManagerSaveButton,\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           value: L(\"Add Tab\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              const $form = $$(ids.popupTabManagerForm);\n\n                              if ($form.validate()) {\n                                 this.busy();\n\n                                 const vals = $form.getValues();\n\n                                 const doneFn = () => {\n                                    this.ready();\n                                    this.hide();\n\n                                    // Trigger the event - 'saved'\n                                    this.emit(\"saved\");\n                                 };\n\n                                 // add\n                                 if (!vals.id) {\n                                    this.addTab(vals).then(() => doneFn());\n                                 }\n                                 // edit\n                                 else {\n                                    this.editTab(vals).then(() => doneFn());\n                                 }\n                              }\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      create() {\n         this.view.AB.Webix.ui(this.ui()).hide();\n      }\n\n      show(tab) {\n         const ids = this.ids;\n\n         const $popup = $$(ids.popupTabManager);\n         const $form = $$(ids.popupTabManagerForm);\n         const $button = $$(ids.popupTabManagerSaveButton);\n\n         if ($popup) {\n            // Edit tab\n            if (tab) {\n               $form.setValues({\n                  id: tab.id,\n                  label: tab.label,\n                  tabicon: tab.tabicon,\n               });\n\n               $popup.getHead().setHTML(L(\"Edit Tab\"));\n               $button.setValue(L(\"Save\"));\n            }\n\n            // Add new tab\n            else {\n               $form.setValues({\n                  id: null,\n                  label: \"\",\n                  tabicon: \"\",\n               });\n\n               $popup.getHead().setHTML(L(\"Add Tab\"));\n               $button.setValue(L(\"Add\"));\n            }\n\n            $button.refresh();\n\n            // show 'add new field' popup\n            $popup.show();\n         }\n      }\n\n      hide() {\n         const ids = this.ids;\n\n         const $popup = $$(ids.popupTabManager);\n\n         if ($popup) $popup.hide();\n      }\n\n      busy() {\n         const ids = this.ids;\n\n         const $button = $$(ids.popupTabManagerSaveButton);\n\n         if ($button) $button.disable();\n      }\n\n      ready() {\n         const ids = this.ids;\n\n         const $button = $$(ids.popupTabManagerSaveButton);\n\n         if ($button) $button.enable();\n      }\n\n      addTab(values) {\n         // get current instance and .addTab()\n         const LayoutView = this.view;\n\n         return LayoutView.addTab(values.label ?? \"\", values.tabicon ?? null);\n      }\n\n      editTab(values) {\n         // get current instance and rename tab\n         const LayoutView = this.view;\n         const editedTab = LayoutView.views((view) => view.id === values.id)[0];\n\n         if (!editedTab) return;\n\n         editedTab.label = values.label;\n         editedTab.tabicon = values.tabicon;\n\n         return editedTab.save();\n      }\n   }\n\n   return TabPopup;\n}\n","/*\n * PropertyManager\n *\n * An Interface for managing all the various Property Editors we support.\n *\n */\nexport default function (AB) {\n   var Fields = [];\n   // {array}\n   // All the ABField Property Inerfaces available.\n   [\n      require(\"./dataFields/ABFieldAutoIndex\"),\n      require(\"./dataFields/ABFieldBoolean\"),\n      require(\"./dataFields/ABFieldCalculate\"),\n      require(\"./dataFields/ABFieldCombine\"),\n      require(\"./dataFields/ABFieldConnect\"),\n      require(\"./dataFields/ABFieldDate\"),\n      require(\"./dataFields/ABFieldDateTime\"),\n      require(\"./dataFields/ABFieldEmail\"),\n      require(\"./dataFields/ABFieldFile\"),\n      require(\"./dataFields/ABFieldFormula\"),\n      require(\"./dataFields/ABFieldImage\"),\n      require(\"./dataFields/ABFieldJson\"),\n      require(\"./dataFields/ABFieldList\"),\n      require(\"./dataFields/ABFieldLongText\"),\n      require(\"./dataFields/ABFieldNumber\"),\n      require(\"./dataFields/ABFieldString\"),\n      require(\"./dataFields/ABFieldTextFormula\"),\n      require(\"./dataFields/ABFieldTree\"),\n      require(\"./dataFields/ABFieldUser\"),\n   ].forEach((F) => {\n      let Klass = F.default(AB);\n      Fields.push(new Klass());\n   });\n\n   var Processes = [];\n   // {array}\n   // All the ABProcess... Property Interfaces Available\n   [\n      require(\"./process/ABProcessEnd.js\"),\n      require(\"./process/ABProcessParticipant.js\"),\n      require(\"./process/ABProcessTaskEmail.js\"),\n      require(\"./process/ABProcessTriggerLifecycle.js\"),\n      require(\"./process/ABProcessTaskService.js\"),\n      require(\"./process/ABProcessTaskServiceInsertRecord.js\"),\n      require(\"./process/ABProcessTaskServiceCalculate.js\"),\n      require(\"./process/ABProcessTaskServiceGetResetPasswordUrl.js\"),\n      require(\"./process/ABProcessTaskServiceQuery.js\"),\n      require(\"./process/ABProcessTaskUser.js\"),\n      require(\"./process/ABProcessTaskUserApproval.js\"),\n      require(\"./process/ABProcessTaskUserExternal.js\"),\n   ].forEach((P) => {\n      let Klass = P.default(AB);\n      Processes.push(Klass);\n   });\n\n   var Views = [];\n   // {array}\n   // All the ABViewXXX Property Interfaces Available.\n   [\n      require(\"./views/ABViewCarousel\"),\n      require(\"./views/ABViewChart\"),\n      require(\"./views/ABViewChartArea\"),\n      require(\"./views/ABViewChartBar\"),\n      require(\"./views/ABViewChartLine\"),\n      require(\"./views/ABViewChartPie\"),\n      require(\"./views/ABViewComment\"),\n      require(\"./views/ABViewConditionalContainer\"),\n      require(\"./views/ABViewDataview\"),\n      require(\"./views/ABViewDetail\"),\n      require(\"./views/ABViewDocxBuilder\"),\n      require(\"./views/ABViewForm\"),\n      require(\"./views/ABViewGrid\"),\n      require(\"./views/ABViewLabel\"),\n      require(\"./views/ABViewLayout\"),\n      require(\"./views/ABViewMenu\"),\n      require(\"./views/ABViewPage\"),\n      require(\"./views/ABViewTab\"),\n      require(\"./views/ABViewText\"),\n   ].forEach((V) => {\n      let Klass = V.default(AB);\n      Views.push(Klass);\n   });\n\n   return {\n      /*\n       * @function fields\n       * return all the currently defined Field Properties in an array.\n       * @param {fn} f\n       *        A filter for limiting which fields you want.\n       * @return [{ClassUI(Field1)}, {ClassUI(Field2)}, ...]\n       */\n      fields: function (f = () => true) {\n         return Fields.filter(f);\n      },\n\n      processElements: function (f = () => true) {\n         return Processes.filter(f);\n      },\n\n      views: function (v = () => true) {\n         return Views.filter(v);\n      },\n   };\n}\n","/*\n * ABField\n * A Generic Property manager for All our fields.\n */\nimport UI_Class from \"../../ui_class\";\n\nlet myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nexport default function (AB) {\n   if (!myClass) {\n      const uiConfig = AB.Config.uiSettings();\n      const UIClass = UI_Class(AB);\n      const L = UIClass.L();\n\n      myClass = class ABFieldProperty extends UIClass {\n         constructor(base = \"properties_abfield\", ids = {}) {\n            // base: {string} unique base id reference\n            // ids: {hash}  { key => '' }\n            // this is provided by the Sub Class and has the keys\n            // unique to the Sub Class' interface elements.\n\n            const common = {\n               // component: `${base}_component`,\n\n               // the common property fields\n               label: \"\",\n               columnName: \"\",\n               fieldDescription: \"\",\n               showIcon: \"\",\n               required: \"\",\n               numberOfNull: \"\",\n               unique: \"\",\n               filterComplex: \"\",\n               addValidation: \"\",\n               shorthand: \"\",\n               validationRules: \"\",\n\n               buttonCog: \"\",\n               editFieldName: \"\",\n               editFieldNameForm: \"\",\n               editFieldNameFormDatabaseColumn: \"\",\n               filterView: \"\",\n               uniqueView: \"\",\n            };\n\n            Object.keys(ids).forEach((k) => {\n               if (typeof common[k] != \"undefined\") {\n                  console.error(\n                     `!!! ABFieldProperty:: passed in ids contains a restricted field : ${k}`\n                  );\n                  return;\n               }\n               common[k] = \"\";\n            });\n\n            super(base, common);\n\n            this.base = base;\n            this.AB = AB;\n         }\n\n         ui(elements = []) {\n            const ids = this.ids;\n\n            const FC = this.FieldClass();\n            const _ui = {\n               view: \"form\",\n               id: ids.component,\n               borderless: true,\n               autowidth: true,\n               elements: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Field Name:\"),\n                           align: \"left\",\n                           width: 87,\n                        },\n                        {\n                           name: \"label\",\n                           id: ids.label,\n                           view: \"text\",\n                           placeholder: L(\"Database field name\"),\n                           fillspace: true,\n                           on: {\n                              onChange: (val) => {\n                                 // update field label default when appropriate\n                                 this.textFieldName(val);\n                              },\n                              onAfterRender: function () {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           view: \"text\",\n                           id: ids.columnName,\n                           name: \"columnName\",\n                           hidden: true,\n                           on: {\n                              onAfterRender() {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           id: ids.buttonCog,\n                           css: \"webix_transparent\",\n                           label: '<span class=\"webix_icon_btn\" style=\"margin: 0px;\"><i class=\"nomargin fa fa-cog\"></i></span>',\n                           width: 40,\n                           on: {\n                              onItemClick: () => {\n                                 this.buttonCog();\n                              },\n                              onAfterRender: function () {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Show icon:\"),\n                           align: \"left\",\n                           width: 75,\n                        },\n                        {\n                           view: \"switch\",\n                           id: ids.showIcon,\n                           name: \"showIcon\",\n                           value: 1,\n                           width: 55,\n                           on: {\n                              onAfterRender: function () {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        { width: 20 },\n                        {\n                           view: \"label\",\n                           label: L(\"Required:\"),\n                           align: \"left\",\n                           width: 66,\n                        },\n                        {\n                           view: \"switch\",\n                           id: ids.required,\n                           name: \"required\",\n                           disabled: !FC.defaults().supportRequire,\n                           value: 0,\n                           width: 55,\n                           on: {\n                              onChange: (newVal, oldVal) => {\n                                 this.requiredOnChange(newVal, oldVal, ids);\n\n                                 // If check require on edit field, then show warning message\n                                 this.getNumberOfNullValue(newVal);\n                              },\n\n                              onAfterRender: function () {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        { width: 20 },\n                        // warning message: number of null value rows\n                        {\n                           view: \"label\",\n                           id: ids.numberOfNull,\n                           css: { color: \"#f00\" },\n                           label: \"\",\n                           hidden: true,\n                           on: {\n                              onAfterRender: function () {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           view: \"label\",\n                           label: L(\"Unique:\"),\n                           align: \"left\",\n                           width: 59,\n                        },\n                        {\n                           view: \"switch\",\n                           id: ids.unique,\n                           name: \"unique\",\n                           disabled: !FC.defaults().supportUnique,\n                           disallowEdit: true,\n                           value: 0,\n                           width: 55,\n                           on: {\n                              onAfterRender: function () {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        { width: 20 },\n                        {\n                           id: ids.addValidation,\n                           view: \"button\",\n                           label: L(\"Add Field Validation\"),\n                           css: \"webix_primary\",\n                           popup: ids.filterView,\n                           on: {\n                              onItemClick: () => {\n                                 $$(ids.filterView).adjust();\n                              },\n\n                              onAfterRender: function () {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n\n                  // have a hidden field to contain the validationRules\n                  // value we will parse out later\n                  {\n                     id: ids.validationRules,\n                     view: \"text\",\n                     hidden: true,\n                     name: \"validationRules\",\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Custom Settings:\"),\n                           align: \"left\",\n                           width: 200,\n                        },\n                        {},\n                        {\n                           view: \"label\",\n                           id: ids.fieldDescription,\n                           label: L(\"Description\"), // Field.description,\n                           align: \"right\",\n                           on: {\n                              onAfterRender: function () {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.uniqueView,\n                     view: \"scrollview\",\n                     borderless: true,\n                     scroll: \"y\",\n                     css: {\n                        background: \"#ddd\",\n                     },\n                     body: {\n                        padding: {\n                           top: 25,\n                           bottom: 25,\n                           left: 25,\n                           right: 25,\n                        },\n                        // Add our passed in elements:\n                        rows: elements.map((e) => {\n                           // passed in elements might not have their .id\n                           // set, but have a .name. Let's default id =\n                           if (!e.id && e.name) {\n                              if (!this.ids[e.name]) {\n                                 this.ids[e.name] = `${this.base}_${e.name}`;\n                              }\n                              e.id = this.ids[e.name];\n                           }\n\n                           return e;\n                        }),\n                     },\n                  },\n               ],\n               rules: {\n                  label: webix.rules.isNotEmpty,\n                  columnName: webix.rules.isNotEmpty,\n               },\n            };\n\n            webix.ui({\n               view: \"window\",\n               id: ids.editFieldName,\n               modal: true,\n               hidden: true,\n               position: \"center\",\n               width: 450,\n               height: 250,\n               head: {\n                  view: \"toolbar\",\n                  css: \"webix_dark\",\n                  paddingX: 2,\n                  elements: [\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: L(\"Edit field name\"),\n                     },\n                  ],\n               },\n               body: {\n                  view: \"form\",\n                  id: ids.editFieldNameForm,\n                  elements: [\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Database Column:\"),\n                              align: \"right\",\n                              width: 125,\n                           },\n                           {\n                              view: \"text\",\n                              id: ids.editFieldNameFormDatabaseColumn,\n                              name: \"columnName\",\n                              placeholder: L(\"Database Column\"),\n                              on: {\n                                 onAfterRender: function () {\n                                    UIClass.CYPRESS_REF(this);\n                                 },\n                              },\n                           },\n                           { width: 30 },\n                        ],\n                     },\n                     {\n                        cols: [\n                           {},\n                           {\n                              view: \"button\",\n                              value: L(\"Cancel\"),\n                              css: \"webix_danger\",\n                              width: 100,\n                              on: {\n                                 onItemClick: () => {\n                                    this.buttonEditFieldNameButtonCancel();\n                                 },\n\n                                 onAfterRender: function () {\n                                    UIClass.CYPRESS_REF(this);\n                                 },\n                              },\n                           },\n                           {\n                              view: \"button\",\n                              value: L(\"Submit\"),\n                              css: \"webix_primary\",\n                              width: 100,\n                              on: {\n                                 onItemClick: () => {\n                                    this.buttonEditFieldNameButtonSubmit();\n                                 },\n\n                                 onAfterRender: function () {\n                                    UIClass.CYPRESS_REF(this);\n                                 },\n                              },\n                           },\n                           { width: 30 },\n                        ],\n                     },\n                  ],\n               },\n            });\n\n            webix.ui({\n               id: ids.filterView,\n               view: \"popup\",\n               resize: true,\n               height: 503,\n               width: 692,\n               position: \"center\",\n               body: {\n                  rows: [\n                     {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        paddingX: 0,\n                        elements: [\n                           {\n                              view: \"label\",\n                              align: \"center\",\n                              label: L(\"Field Validation\"),\n                           },\n                           {\n                              view: \"button\",\n                              label: '<span class=\"webix_icon\"><i class=\"nomargin fa fa-times\"></i></span>',\n                              css: \"webix_transparent\",\n                              width: 40,\n                              click: () => {\n                                 $$(ids.filterView).hide();\n                              },\n                              on: {\n                                 onAfterRender: () => {\n                                    UIClass.CYPRESS_REF(this);\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        cols: [\n                           {\n                              view: \"button\",\n                              label: L(\"Add\"),\n                              css: \"webix_secondary\",\n                              on: {\n                                 onItemClick: () => {\n                                    this.addValidation();\n                                 },\n                                 onAfterRender: function () {\n                                    UIClass.CYPRESS_REF(this);\n                                 },\n                              },\n                           },\n                           {\n                              view: \"button\",\n                              label: L(\"Delete All\"),\n                              css: \"webix_danger\",\n                              on: {\n                                 onItemClick: () => {\n                                    this.filterViewDeleteAllValidation();\n                                 },\n                                 onAfterRender: function () {\n                                    UIClass.CYPRESS_REF(this);\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        view: \"scrollview\",\n                        scroll: \"y\",\n                        body: {\n                           id: ids.filterComplex,\n                           rows: [],\n                        },\n                     },\n                  ],\n               },\n               on: {\n                  onViewResize: () => {\n                     $$(ids.filterView).show();\n                  },\n               },\n            });\n\n            return _ui;\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            const FC = this.FieldClass();\n            if (FC) {\n               $$(this.ids.fieldDescription).define(\n                  \"label\",\n                  \"*\" + L(FC.defaults().description)\n               );\n            } else {\n               $$(this.ids.fieldDescription).hide();\n            }\n         }\n\n         textFieldName(val) {\n            const latestVals = this.formValues();\n\n            if (!this.modeEdit) {\n               latestVals.label = val;\n               latestVals.columnName = latestVals.label;\n            } else latestVals.label = val;\n\n            $$(this.ids.component).setValues(latestVals);\n         }\n\n         buttonCog() {\n            if (this.isValid()) {\n               const latestVals = this.formValues();\n\n               $$(this.ids.editFieldNameForm).setValues({\n                  columnName: latestVals.columnName,\n               });\n\n               if (this.modeEdit)\n                  $$(this.ids.editFieldNameFormDatabaseColumn).disable();\n               else $$(this.ids.editFieldNameFormDatabaseColumn).enable();\n\n               $$(this.ids.editFieldName).show();\n            }\n         }\n\n         buttonEditFieldNameButtonCancel() {\n            const previousVal = $$(this.ids.component).getValues();\n\n            $$(this.ids.editFieldNameForm).setValues({\n               columnName: previousVal.columnName,\n            });\n            $$(this.ids.editFieldName).hide();\n         }\n\n         buttonEditFieldNameButtonSubmit() {\n            const latestVals = this.formValues();\n            const valColumnName = $$(this.ids.editFieldNameForm).getValues()\n               .columnName;\n\n            latestVals.columnName =\n               valColumnName !== \"\" ? valColumnName : latestVals.columnName;\n            $$(this.ids.component).setValues(latestVals);\n            $$(this.ids.editFieldName).hide();\n         }\n\n         addValidation(settings) {\n            const ids = this.ids;\n            const Filter = new this.AB.Class.FilterComplex(\n               this.AB._App,\n               \"field_validation_rules\",\n               this.AB\n            );\n\n            $$(ids.filterComplex).addView({\n               view: \"form\",\n               css: \"abValidationForm\",\n               cols: [\n                  {\n                     rows: [\n                        {\n                           view: \"text\",\n                           name: \"invalidMessage\",\n                           labelWidth: uiConfig.labelWidthLarge,\n                           value: settings?.invalidMessage\n                              ? settings.invalidMessage\n                              : \"\",\n                           label: L(\"Invalid Message\"),\n                        },\n                        Filter.ui,\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n                     click: function () {\n                        const $viewCond = this.getParentView();\n                        $$(ids.filterComplex).removeView($viewCond);\n\n                        // reset the validation rules UI\n                        const filterViews = $$(ids.filterComplex).queryView(\n                           {\n                              view: \"form\",\n                              css: \"abValidationForm\",\n                           },\n                           \"all\"\n                        );\n                        $$(ids.addValidation).define(\n                           \"badge\",\n                           filterViews.length !== 0 ? filterViews.length : null\n                        );\n                        $$(ids.addValidation).refresh();\n                     },\n                     on: {\n                        onAfterRender: function () {\n                           UIClass.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            });\n\n            this.resetDefaultValidation();\n\n            $$(Filter.ids.save).hide();\n            Filter.fieldsLoad(this.CurrentObject.fields());\n            if (settings && settings.rules) Filter.setValue(settings.rules);\n         }\n\n         filterViewDeleteAllValidation() {\n            const ids = this.ids;\n\n            // reset the validation rules UI\n            const filterViews = $$(ids.filterComplex).queryView(\n               {\n                  view: \"form\",\n                  css: \"abValidationForm\",\n               },\n               \"all\"\n            );\n\n            if (filterViews.length) {\n               filterViews.forEach((v) => {\n                  $$(ids.filterComplex).removeView(v);\n               });\n            }\n\n            this.resetDefaultValidation();\n         }\n\n         clearEditor() {\n            console.error(\"!!! Depreciated! call clear() instead.\");\n            this.clear();\n         }\n\n         clear() {\n            const ids = this.ids;\n            this._CurrentField = null;\n\n            const defaultValues = this.defaultValues();\n\n            for (const f in defaultValues) {\n               const component = $$(ids[f]);\n               if (component) component.setValue(defaultValues[f]);\n            }\n\n            this.filterViewDeleteAllValidation();\n\n            // $$(ids.addValidation).hide();\n\n            // hide warning message of null data\n            $$(ids.numberOfNull).hide();\n         }\n\n         resetDefaultValidation() {\n            const ids = this.ids;\n\n            // reset the validation rules UI\n            const filterViews = $$(ids.filterComplex).queryView(\n               {\n                  view: \"form\",\n                  css: \"abValidationForm\",\n               },\n               \"all\"\n            );\n            $$(ids.addValidation).define(\n               \"badge\",\n               filterViews.length !== 0 ? filterViews.length : null\n            );\n            $$(ids.addValidation).refresh();\n         }\n\n         /**\n          * @method defaults()\n          * Return the FieldClass() default values.\n          * NOTE: the child class MUST implement FieldClass() to return the\n          * proper ABFieldXXX class definition.\n          * @return {obj}\n          */\n         defaults() {\n            const FieldClass = this.FieldClass();\n            if (!FieldClass) {\n               console.error(\n                  \"!!! ABFieldStringProperty: could not find FieldClass[]\"\n               );\n               return null;\n            }\n            return FieldClass.defaults();\n         }\n\n         defaultValues() {\n            const values = {\n               label: \"\",\n               columnName: \"\",\n               showIcon: 1,\n               required: 0,\n               unique: 0,\n               validationRules: \"\",\n            };\n\n            const FieldClass = this.FieldClass();\n            if (FieldClass) {\n               const fcValues = FieldClass.defaultValues();\n               Object.keys(fcValues).forEach((k) => {\n                  if (typeof values[k] == \"undefined\") {\n                     values[k] = fcValues[k];\n                  }\n               });\n            }\n\n            return values;\n         }\n\n         /**\n          * @function eachDeep\n          * a depth first fn to apply fn() to each element of our list.\n          * @param {array} list  array of webix elements to scan\n          * @param {fn} fn function to apply to each element.\n          */\n         eachDeep(list, fn) {\n            list.forEach((e) => {\n               // process sub columns\n               if (e.cols) {\n                  this.eachDeep(e.cols, fn);\n                  return;\n               }\n\n               if (e.body?.cols) {\n                  this.eachDeep(e.body.cols, fn);\n                  return;\n               }\n\n               // or rows\n               if (e.rows) {\n                  this.eachDeep(e.rows, fn);\n                  return;\n               }\n\n               if (e.body?.rows) {\n                  this.eachDeep(e.body.rows, fn);\n                  return;\n               }\n\n               // or just process this element:\n               fn(e);\n            });\n         }\n\n         editorPopulate(field) {\n            console.error(\"!!! Depreciated. call populate() instead.\");\n            this.populate(field);\n         }\n\n         /**\n          * @method FieldClass()\n          * A method to return the proper ABFieldXXX Definition.\n          * NOTE: Must be overwritten by the Child Class\n          */\n         FieldClass() {\n            console.error(\"!!! Child Class has not overwritten FieldClass()\");\n            return null;\n            // return super._FieldClass(\"string\");\n         }\n\n         _FieldClass(key) {\n            return this.AB.Class.ABFieldManager.fieldByKey(key);\n         }\n\n         formValues() {\n            return $$(this.ids.component).getValues();\n         }\n\n         async getNumberOfNullValue(isRequired) {\n            const ids = this.ids;\n            if (\n               isRequired &&\n               this._CurrentField &&\n               this._CurrentField.id &&\n               this._CurrentField.settings.required != isRequired\n            ) {\n               // TODO: disable save button\n\n               // get count number\n               try {\n                  const data = await this._CurrentField.object.model().count({\n                     where: {\n                        glue: \"and\",\n                        rules: [\n                           {\n                              key: this._CurrentField.id,\n                              rule: \"is_null\",\n                           },\n                        ],\n                     },\n                  });\n\n                  if (data.count > 0) {\n                     $$(ids.numberOfNull).setValue(\n                        L(\n                           \"** There are {0} rows that will be updated to default value\",\n                           [data.count]\n                        )\n                     );\n                     $$(ids.numberOfNull).show();\n                  } else {\n                     $$(ids.numberOfNull).hide();\n                  }\n\n                  // TODO: enable save button\n               } catch (err) {\n                  // TODO: enable save button\n               }\n            } else {\n               $$(ids.numberOfNull).hide();\n            }\n         }\n\n         /**\n          * @method isValid()\n          * Verify the common ABField settings are valid before allowing\n          * us to create the new field.\n          * @return {bool}\n          */\n         isValid() {\n            const ids = this.ids;\n            let isValid = $$(ids.component).validate(),\n               colName = this.formValues()[\"columnName\"];\n\n            setTimeout(() => {\n               $$(ids.component).clearValidation();\n            }, 500);\n\n            // validate reserve column names\n            const FC = this.FieldClass();\n            if (!FC) {\n               this.AB.notify.developer(\n                  new Error(\"Unable to resolve FieldClass\"),\n                  {\n                     context: \"ABFieldProperty: isValid()\",\n                     base: this.ids.component,\n                  }\n               );\n            }\n\n            // columnName should not be one of the reserved names:\n            if (FC?.reservedNames.indexOf(colName.trim().toLowerCase()) > -1) {\n               this.markInvalid(\"columnName\", L(\"This is a reserved name\"));\n               isValid = false;\n            }\n\n            // columnName should not be in use by other fields on this object\n            // get All fields with matching colName\n            let fieldColName = this.CurrentObject?.fields(\n               (f) => f.columnName == colName\n            );\n            // ignore current edit field\n            if (this._CurrentField) {\n               fieldColName = fieldColName.filter(\n                  (f) => f.id != this._CurrentField.id\n               );\n            }\n            // if any more matches, this is a problem\n            if (fieldColName.length > 0) {\n               this.markInvalid(\n                  \"columnName\",\n                  L(\"This column name is in use by another field ({0})\", [\n                     fieldColName.label,\n                  ])\n               );\n               isValid = false;\n            }\n\n            return isValid;\n         }\n\n         markInvalid(name, message) {\n            $$(this.ids.component).markInvalid(name, message);\n         }\n\n         /**\n          * @function populate\n          * populate the property form with the given ABField instance provided.\n          * @param {ABField} field\n          *        The ABFieldXXX instance that we are editing the settings for.\n          */\n         populate(field) {\n            const ids = this.ids;\n            this._CurrentField = field;\n\n            // these columns are located on the base ABField object\n            [\"label\", \"columnName\"].forEach((c) => {\n               $$(ids[c]).setValue?.(field[c]);\n            });\n            $$(ids.fieldDescription).setValue(field.fieldDescription());\n\n            // the remaining columns are located in .settings\n            Object.keys(ids).forEach((c) => {\n               if (typeof field.settings[c] != \"undefined\") {\n                  $$(ids[c])?.setValue?.(field.settings[c]);\n               }\n            });\n            $$(ids.label).setValue(field.label);\n            $$(ids.columnName).setValue(field.columnName);\n            $$(ids.showIcon).setValue(field.settings.showIcon);\n            $$(ids.required).setValue(field.settings.required);\n            $$(ids.unique).setValue(field.settings.unique);\n\n            if (field.settings && field.settings.validationRules) {\n               let rules = field.settings.validationRules;\n               if (typeof rules == \"string\") {\n                  try {\n                     rules = JSON.parse(rules);\n                  } catch (e) {\n                     this.AB.notify.builder(e, {\n                        context: `ABField[${field.id}][${field.name}]: has invalid validationRules`,\n                        validationRules: field.settings.validationRules,\n                     });\n                     // so ... now what?\n                     rules = [];\n                  }\n               }\n               (rules || []).forEach((settings) => {\n                  field.addValidation(ids, settings);\n               });\n               $$(ids.addValidation).define(\n                  \"badge\",\n                  rules.length !== 0 ? rules.length : null\n               );\n               $$(ids.addValidation).refresh();\n            }\n         }\n\n         requiredOnChange() {\n            // Sub Class should overwrite this if it is necessary.\n         }\n\n         // show() {\n         //    super.show();\n         //    // AppList.show();\n         // }\n\n         /*\n          * @function values\n          *\n          * return the values for this form.\n          * @return {obj}\n          */\n         values() {\n            const ids = this.ids;\n\n            const settings = $$(ids.component).getValues();\n            if ($$(ids.filterComplex)) {\n               const validationRules = [];\n               const forms = $$(ids.filterComplex).queryView(\n                  { view: \"form\", css: \"abValidationForm\" },\n                  \"all\"\n               );\n               forms.forEach((form) => {\n                  const rules = form\n                     .queryView({ view: \"querybuilder\" })\n                     .getValue();\n                  const invalidMessage = form\n                     .queryView({ name: \"invalidMessage\" })\n                     .getValue();\n                  const validationObj = {\n                     invalidMessage: invalidMessage,\n                     rules: rules,\n                  };\n                  validationRules.push(validationObj);\n               });\n               settings.validationRules = JSON.stringify(validationRules);\n            }\n\n            const FC = this.FieldClass();\n\n            // convert flat settings into our ABField value format:\n            const values = FC.editorValues(settings);\n\n            values.key = FC.defaults().key;\n\n            return values;\n         }\n      };\n   }\n   return myClass;\n}\n","/*\n * ABFieldAutoIndex\n * A Property manager for our ABFieldAutoIndex.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldAutoIndexProperty extends ABField {\n      constructor() {\n         super(\"properties_abfield_autoindex\", {\n            prefix: \"\",\n            delimiter: \"\",\n            displayLength: \"\",\n            previewText: \"\",\n            // currentIndex: 'currentIndex',\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n         const FC = this.FieldClass();\n\n         return super.ui([\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Prefix:\"),\n                     align: \"right\",\n                     width: 75,\n                  },\n                  {\n                     id: ids.prefix,\n                     view: \"text\",\n                     name: \"prefix\",\n                     placeholder: L(\"Prefix\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.previewChange();\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Delimiter:\"),\n                     align: \"right\",\n                     width: 75,\n                  },\n                  {\n                     id: ids.delimiter,\n                     view: \"richselect\",\n                     name: \"delimiter\",\n                     value: \"none\",\n                     options: FC.delimiterList(),\n                     on: {\n                        onChange: () => {\n                           this.previewChange();\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Length:\"),\n                     align: \"right\",\n                     width: 75,\n                  },\n                  {\n                     id: ids.displayLength,\n                     view: \"counter\",\n                     name: \"displayLength\",\n                     step: 1,\n                     value: 4,\n                     min: 1,\n                     max: 10,\n                     width: 104,\n                     on: {\n                        onChange: () => {\n                           this.previewChange();\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Preview:\"),\n                     align: \"right\",\n                     width: 75,\n                  },\n                  {\n                     id: ids.previewText,\n                     view: \"text\",\n                     name: \"previewText\",\n                     value: \"0000\",\n                     disabled: true,\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            // {\n            // \tid: ids.currentIndex,\n            // \tview: \"text\",\n            // \tname: 'currentIndex',\n            // \tvalue: 0,\n            // \thidden: true\n            // }\n            // {\n            // \tview: \"checkbox\",\n            // \tname:'supportMultilingual',\n            // \tlabelRight: L('ab.dataField.string.supportMultilingual', '*Support multilingual'),\n            // \tlabelWidth: uiConfig.labelWidthCheckbox,\n            // \tvalue: true\n            // }\n         ]);\n      }\n\n      previewChange() {\n         const ids = this.ids;\n         const FC = this.FieldClass();\n\n         const previewResult = FC.setValueToIndex(\n            $$(ids.prefix).getValue(),\n            $$(ids.delimiter).getValue(),\n            $$(ids.displayLength).getValue(),\n            0\n         );\n\n         $$(ids.previewText).setValue(previewResult);\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"AutoIndex\");\n      }\n\n      populate(field) {\n         super.populate(field);\n\n         this.previewChange();\n      }\n   }\n   return ABFieldAutoIndexProperty;\n}\n","/*\n * ABFieldBoolean\n * A Property manager for our ABFieldBoolean.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldBoolean extends ABField {\n      constructor() {\n         super(\"properties_abfield_boolean\", {\n            checkBoxLabel: \"\",\n            default: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n         return super.ui([\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Default:\"),\n                     align: \"right\",\n                     width: 65,\n                  },\n                  {\n                     id: ids.default,\n                     name: \"default\",\n                     view: \"checkbox\",\n                     css: \"webix_table_checkbox\",\n                     width: 30,\n                     on: {\n                        onChange: (newVal) => {\n                           let checkLabel = L(\"Check\");\n                           let uncheckLabel = L(\"Uncheck\");\n\n                           $$(ids.checkBoxLabel).setValue(\n                              newVal ? checkLabel : uncheckLabel\n                           );\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     id: ids.checkBoxLabel,\n                     view: \"label\",\n                     label: L(\"Uncheck\"),\n                     width: 60,\n                  },\n               ],\n            },\n         ]);\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"boolean\");\n      }\n   }\n\n   return ABFieldBoolean;\n}\n","/*\n * ABFieldCalculate\n * A Property manager for our ABFieldCalculate.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldCalculate extends ABField {\n      constructor() {\n         super(\"properties_abfield_calculate\", {\n            formula: \"\",\n\n            fieldPopup: \"\",\n            fieldList: \"\",\n\n            numberOperatorPopup: \"\",\n            numberOperatorPopupList: \"\",\n\n            dateOperatorPopup: \"\",\n            dateFieldList: \"\",\n\n            decimalSign: \"\",\n            decimalPlaces: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         const delimiterList = [\n            {\n               id: \"none\",\n               value: L(\"None\"),\n            },\n            {\n               id: \"comma\",\n               value: L(\"Comma\"),\n               sign: \",\",\n            },\n            {\n               id: \"period\",\n               value: L(\"Period\"),\n               sign: \".\",\n            },\n            {\n               id: \"space\",\n               value: L(\"Space\"),\n               sign: \" \",\n            },\n         ];\n\n         // field popup\n         webix.ui({\n            id: ids.fieldPopup,\n            view: \"popup\",\n            hidden: true,\n            width: 200,\n            body: {\n               id: ids.fieldList,\n               view: \"list\",\n               data: [],\n               template: this.itemTemplate,\n               on: {\n                  onItemClick: (id) => {\n                     const component = $$(ids.fieldList).getItem(id);\n                     const message = \"{\" + component.columnName + \"}\";\n\n                     this.insertEquation(message);\n\n                     $$(ids.fieldPopup).hide();\n                  },\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n            on: {\n               onBeforeShow: () => {\n                  // refresh field list\n                  $$(ids.fieldList).clearAll();\n                  $$(ids.fieldList).parse(this.getNumberFields());\n               },\n            },\n         });\n\n         webix.ui({\n            id: ids.numberOperatorPopup,\n            view: \"popup\",\n            hidden: true,\n            width: 200,\n            body: {\n               id: ids.numberOperatorPopupList,\n               view: \"list\",\n               template: this.itemTemplate,\n               data: [\n                  {\n                     label: L(\"+ Adds\"),\n                     symbol: \"+\",\n                  },\n                  {\n                     label: L(\"- Subtracts\"),\n                     symbol: \"-\",\n                  },\n                  {\n                     label: L(\"* Multiples\"),\n                     symbol: \"*\",\n                  },\n                  {\n                     label: L(\"/ Divides\"),\n                     symbol: \"/\",\n                  },\n                  {\n                     label: L(\"( Open Bracket\"),\n                     symbol: \"(\",\n                  },\n                  {\n                     label: L(\") Closed Bracket\"),\n                     symbol: \")\",\n                  },\n               ],\n               on: {\n                  onItemClick: (id) => {\n                     const component = $$(ids.numberOperatorPopupList).getItem(\n                        id\n                     );\n\n                     this.insertEquation(component.symbol);\n\n                     $$(ids.numberOperatorPopup).hide();\n                  },\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n         });\n\n         webix.ui({\n            id: ids.dateOperatorPopup,\n            view: \"popup\",\n            hidden: true,\n            width: 280,\n            data: [],\n            body: {\n               id: ids.dateFieldList,\n               view: \"list\",\n               template: this.itemTemplate,\n               data: [],\n               on: {\n                  onItemClick: (id) => {\n                     const component = $$(ids.dateFieldList).getItem(id);\n\n                     this.insertEquation(component.function);\n\n                     $$(ids.dateOperatorPopup).hide();\n                  },\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n            on: {\n               onBeforeShow: () => {\n                  // refresh field list\n                  $$(ids.dateFieldList).clearAll();\n                  $$(ids.dateFieldList).parse(this.getDateFields());\n               },\n            },\n         });\n\n         return super.ui([\n            {\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Equation:\"),\n                           align: \"left\",\n                           width: 75,\n                        },\n                        {},\n                     ],\n                  },\n                  {\n                     id: ids.formula,\n                     name: \"formula\",\n                     view: \"textarea\",\n                     height: 100,\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"button\",\n                           type: \"icon\",\n                           css: \"webix_primary\",\n                           icon: \"fa fa-hashtag\",\n                           label: L(\"Number Fields\"),\n                           width: 185,\n                           click: function () {\n                              // show popup\n                              $$(ids.fieldPopup).show(this.$view);\n                           },\n                           on: {\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           type: \"icon\",\n                           css: \"webix_primary\",\n                           icon: \"fa fa-calendar\",\n                           label: L(\"Date Fields\"),\n                           click: function () {\n                              // show popup\n                              $$(ids.dateOperatorPopup).show(this.$view);\n                           },\n                           on: {\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-hashtag\",\n                           label: L(\"Number Operators\"),\n                           width: 185,\n                           click: function () {\n                              // show popup\n                              $$(ids.numberOperatorPopup).show(this.$view);\n                           },\n                           on: {\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {},\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Decimals:\"),\n                           align: \"right\",\n                           width: 67,\n                        },\n                        {\n                           id: ids.decimalSign,\n                           view: \"richselect\",\n                           name: \"decimalSign\",\n                           value: \"none\",\n                           options: delimiterList,\n                           on: {\n                              onChange: (newValue) => {\n                                 if (newValue == \"none\") {\n                                    $$(ids.decimalPlaces).disable();\n                                 } else {\n                                    $$(ids.decimalPlaces).enable();\n                                 }\n                              },\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           view: \"label\",\n                           label: L(\"Places:\"),\n                           align: \"right\",\n                           width: 67,\n                        },\n                        {\n                           id: ids.decimalPlaces,\n                           view: \"counter\",\n                           name: \"decimalPlaces\",\n                           step: 1,\n                           value: 1,\n                           min: 1,\n                           max: 10,\n                           disabled: true,\n                           width: 104,\n                           on: {\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ]);\n      }\n\n      getNumberFields() {\n         if (this.CurrentObject)\n            return this.CurrentObject.fields(\n               (f) =>\n                  f.key == \"number\" ||\n                  f.key == \"calculate\" ||\n                  f.key == \"formula\"\n            );\n         else return [];\n      }\n\n      getDateFields() {\n         if (this.CurrentObject) {\n            const options = [];\n\n            options.push({\n               label: L(\"Convert minutes to hours (Format: hours.minutes)\"),\n               function: \"MINUTE_TO_HOUR()\",\n            });\n\n            /** CURRENT DATE */\n            options.push({\n               label: L(\"Year of [{0}]\", [\"Current\"]),\n               function: \"YEAR(CURRENT)\",\n            });\n\n            options.push({\n               label: L(\"Month of [{0}]\", [\"Current\"]),\n               function: \"MONTH(CURRENT)\",\n            });\n\n            options.push({\n               label: L(\"Day of [{0}]\", [\"Current\"]),\n               function: \"DAY(CURRENT)\",\n            });\n\n            options.push({\n               label: L(\"Get days of [{0}] (since January 1, 1970)\", [\n                  \"Current\",\n               ]),\n               function: \"DATE(CURRENT)\",\n            });\n\n            options.push({\n               label: L(\"Get hours of [{0}] (since January 1, 1970)\", [\n                  \"Current\",\n               ]),\n               function: \"HOUR(CURRENT)\",\n            });\n\n            options.push({\n               label: L(\"Get minutes of [{0}] (since January 1, 1970)\", [\n                  \"Current\",\n               ]),\n               function: \"MINUTE(CURRENT)\",\n            });\n\n            /** DATE FIELDS */\n            this.CurrentObject.fields((f) => f.key == \"date\").forEach((f) => {\n               options.push({\n                  label: L(\"Calculate age from [{0}]\", [f.label]),\n                  function: `AGE({${f.columnName}})`,\n               });\n\n               options.push({\n                  label: L(\"Year of [{0}]\", [f.label]),\n                  function: `YEAR({${f.columnName}})`,\n               });\n\n               options.push({\n                  label: L(\"Month of [{0}]\", [f.label]),\n                  function: `MONTH({${f.columnName}})`,\n               });\n\n               options.push({\n                  label: L(\"Day of [{0}]\", [f.label]),\n                  function: `DAY({${f.columnName}})`,\n               });\n\n               options.push({\n                  label: L(\"Get days of [${0}] (since January 1, 1970)\", [\n                     f.label,\n                  ]),\n                  function: `DATE({${f.columnName}})`,\n               });\n\n               options.push({\n                  label: L(\"Get hours of [${0}] (since January 1, 1970)\", [\n                     f.label,\n                  ]),\n                  function: `HOUR({${f.columnName}})`,\n               });\n\n               options.push({\n                  label: L(\"Get minutes of [${0}] (since January 1, 1970)\", [\n                     f.label,\n                  ]),\n                  function: `MINUTE({${f.columnName}})`,\n               });\n            });\n\n            return options;\n         } else return [];\n      }\n\n      itemTemplate(item) {\n         let template = \"\";\n\n         if (item.icon) {\n            template += `<i class=\"fa fa-${item.icon}\" aria-hidden=\"true\"></i> `;\n         }\n\n         if (item.label) {\n            template += item.label;\n         }\n\n         return template;\n      }\n\n      insertEquation(message) {\n         const ids = this.ids;\n         const formula = $$(ids.formula).getValue();\n\n         $$(ids.formula).setValue(formula + message);\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"calculate\");\n      }\n\n      isValid() {\n         const ids = this.ids;\n         const FC = this.FieldClass();\n\n         let isValid = super.isValid();\n\n         if (isValid) {\n            $$(ids.component).markInvalid(\"formula\", false);\n\n            const formula = $$(ids.formula).getValue();\n\n            try {\n               FC.convertToJs(this.CurrentObject, formula, {});\n\n               // correct\n               isValid = true;\n            } catch (err) {\n               $$(ids.component).markInvalid(\"formula\", \"\");\n\n               // incorrect\n               isValid = false;\n            }\n         }\n\n         return isValid;\n      }\n   }\n\n   return ABFieldCalculate;\n}\n","/*\n * ABFieldCombine\n * A Property manager for our ABFieldCombine.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const uiConfig = AB.Config.uiSettings();\n\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldCombine extends ABField {\n      constructor() {\n         super(\"properties_abfield_combine\", {\n            combinedFields: \"\",\n            delimiter: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n         const FC = this.FieldClass();\n\n         return super.ui([\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Combined Fields:\"),\n                     align: \"right\",\n                     width: 125,\n                  },\n                  {\n                     id: ids.combinedFields,\n                     name: \"combinedFields\",\n                     view: \"multicombo\",\n                     labelWidth: uiConfig.labelWidthXLarge,\n                     disallowEdit: true,\n                     options: [],\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Delimiter:\"),\n                     align: \"right\",\n                     width: 125,\n                  },\n                  {\n                     id: ids.delimiter,\n                     view: \"richselect\",\n                     name: \"delimiter\",\n                     value: FC.defaultValues().delimiter,\n                     labelWidth: uiConfig.labelWidthXLarge,\n                     disallowEdit: true,\n                     options: [\n                        { id: \"plus\", value: L(\"Plus ( + )\") },\n                        { id: \"dash\", value: L(\"Dash ( - )\") },\n                        { id: \"period\", value: L(\"Period ( . )\") },\n                        { id: \"space\", value: L(\"Space ( )\") },\n                     ],\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n         ]);\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"combined\");\n      }\n\n      show() {\n         const ids = this.ids;\n\n         const fields = this.CurrentObject.fields((f) => {\n            return (\n               [\n                  \"string\",\n                  \"LongText\",\n                  \"number\",\n                  \"date\",\n                  \"datetime\",\n                  \"boolean\",\n                  \"list\",\n                  \"email\",\n                  \"user\",\n                  \"AutoIndex\",\n                  \"combined\",\n               ].indexOf(f.key) > -1 ||\n               (f.isConnection &&\n                  // 1:M\n                  ((f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)))\n            );\n         }).map((f) => {\n            return {\n               id: f.id,\n               value: f.label,\n            };\n         });\n\n         super.show();\n\n         const $combinedFields = $$(ids.combinedFields);\n         if ($combinedFields) {\n            $combinedFields.define(\"options\", fields);\n            $combinedFields.refresh();\n         }\n      }\n   }\n\n   return ABFieldCombine;\n}\n","/*\n * ABFieldNumber\n * A Property manager for our ABFieldNumber.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const uiConfig = AB.Config.uiSettings();\n\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldConnectProperty extends ABField {\n      constructor() {\n         super(\"properties_abfield_connect\", {\n            linkObject: \"\",\n            objectCreateNew: \"\",\n\n            fieldLink: \"\",\n            fieldLink2: \"\",\n            linkType: \"\",\n            linkViaType: \"\",\n            fieldLinkVia: \"\",\n            fieldLinkVia2: \"\",\n\n            link1: \"\",\n            link2: \"\",\n\n            isCustomFK: \"\",\n            indexField: \"\",\n            indexField2: \"\",\n\n            connectDataPopup: \"\",\n         });\n      }\n\n      ui() {\n         const FC = this.FieldClass();\n         const ids = this.ids;\n         return super.ui([\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Connected to:\"),\n                     align: \"right\",\n                     width: 94,\n                  },\n                  {\n                     id: ids.linkObject,\n                     view: \"richselect\",\n                     disallowEdit: true,\n                     name: \"linkObject\",\n                     labelWidth: uiConfig.labelWidthLarge,\n                     placeholder: L(\"Select object\"),\n                     options: [],\n                     // select: true,\n                     // height: 140,\n                     // template: \"<div class='ab-new-connectObject-list-item'>#label#</div>\",\n                     on: {\n                        onChange: (newV, oldV) => {\n                           this.selectObjectTo(newV, oldV);\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            /*\n            // NOTE: leave out of v2 until someone asks for it back.\n\n            {\n               view: \"button\",\n               css: \"webix_primary\",\n               id: ids.objectCreateNew,\n               disallowEdit: true,\n               value: L(\n                  \"Connect to new Object\"\n               ),\n               click: () => {\n                  ABFieldConnectComponent.logic.clickNewObject();\n               },\n            },\n            */\n            {\n               view: \"layout\",\n               id: ids.link1,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.fieldLink,\n                     view: \"label\",\n                     width: 300,\n                  },\n                  {\n                     id: ids.linkType,\n                     disallowEdit: true,\n                     name: \"linkType\",\n                     view: \"richselect\",\n                     value: FC.defaultValues().linkType,\n                     width: 95,\n                     options: [\n                        {\n                           id: \"many\",\n                           value: L(\"many\"),\n                        },\n                        {\n                           id: \"one\",\n                           value: L(\"one\"),\n                        },\n                     ],\n                     on: {\n                        onChange: (newValue, oldValue) => {\n                           this.selectLinkType(newValue, oldValue);\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     id: ids.fieldLinkVia,\n                     view: \"label\",\n                     label: L(\"<b>[Select Object]</b> entry.\"),\n                     width: 200,\n                  },\n               ],\n            },\n            {\n               view: \"layout\",\n               id: ids.link2,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.fieldLinkVia2,\n                     view: \"label\",\n                     label: L(\n                        \"Each <b>[Select object]</b> entry connects with\"\n                     ),\n                     width: 300,\n                  },\n                  {\n                     id: ids.linkViaType,\n                     name: \"linkViaType\",\n                     disallowEdit: true,\n                     view: \"richselect\",\n                     value: FC.defaultValues().linkViaType,\n                     width: 95,\n                     options: [\n                        {\n                           id: \"many\",\n                           value: L(\"many\"),\n                        },\n                        {\n                           id: \"one\",\n                           value: L(\"one\"),\n                        },\n                     ],\n                     on: {\n                        onChange: (newV, oldV) => {\n                           this.selectLinkViaType(newV, oldV);\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     id: ids.fieldLink2,\n                     view: \"label\",\n                     width: 200,\n                  },\n               ],\n            },\n            {\n               name: \"linkColumn\",\n               view: \"text\",\n               hidden: true,\n            },\n            {\n               name: \"isSource\",\n               view: \"text\",\n               hidden: true,\n            },\n            {\n               id: ids.isCustomFK,\n               name: \"isCustomFK\",\n               view: \"checkbox\",\n               disallowEdit: true,\n               labelWidth: 0,\n               labelRight: L(\"Custom Foreign Key\"),\n               hidden: true,\n               on: {\n                  onChange: () => {\n                     this.checkCustomFK();\n                  },\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n            {\n               id: ids.indexField,\n               name: \"indexField\",\n               view: \"richselect\",\n               disallowEdit: true,\n               hidden: true,\n               labelWidth: uiConfig.labelWidthLarge,\n               label: L(\"Index Field:\"),\n               placeholder: L(\"Select index field\"),\n               options: [],\n               on: {\n                  // onChange: () => {\n                  //    ABFieldConnectComponent.logic.updateColumnName();\n                  // },\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n            {\n               id: ids.indexField2,\n               name: \"indexField2\",\n               view: \"richselect\",\n               disallowEdit: true,\n               hidden: true,\n               labelWidth: uiConfig.labelWidthLarge,\n               label: L(\"Index Field:\"),\n               placeholder: L(\"Select index field\"),\n               options: [],\n               on: {\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n         ]);\n      }\n\n      clear() {\n         super.clear();\n         $$(this.ids.linkObject).setValue(\n            this.FieldClass().defaultValues().linkObject\n         );\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"connectObject\");\n      }\n\n      isValid() {\n         const ids = this.ids;\n         let isValid = super.isValid();\n\n         // validate require select linked object\n         const selectedObjId = $$(ids.linkObject).getValue();\n         if (!selectedObjId) {\n            this.markInvalid(\"linkObject\", L(\"Select an object\"));\n            // webix.html.addCss($$(ids.linkObject).$view, \"webix_invalid\");\n            isValid = false;\n         } else {\n            console.error(\"!!! Don't forget to refactor this .removeCss()\");\n            webix.html.removeCss($$(ids.linkObject).$view, \"webix_invalid\");\n         }\n\n         return isValid;\n      }\n\n      // populate(field) {\n      //    const ids = this.ids;\n      //    super.populate(field);\n      // }\n\n      selectLinkViaType(newValue /*, oldValue */) {\n         let labelEntry = L(\"entry\");\n         let labelEntries = L(\"entries\");\n\n         let $fieldLink2 = $$(this.ids.fieldLink2);\n\n         let message = $fieldLink2.getValue() || \"\";\n\n         if (newValue == \"many\") {\n            message = message.replace(labelEntry, labelEntries);\n         } else {\n            message = message.replace(labelEntries, labelEntry);\n         }\n         $fieldLink2.define(\"label\", message);\n         $fieldLink2.refresh();\n\n         this.updateCustomIndex();\n      }\n\n      show() {\n         super.show();\n\n         this.populateSelect(false);\n         const ids = this.ids;\n\n         // show current object name\n         $$(ids.fieldLink).setValue(\n            L(\"Each <b>{0}</b> entry connects with\", [\n               this.CurrentObject?.label,\n            ])\n         );\n         $$(ids.fieldLink2).setValue(\n            L(\"<b>{0}</b> entry.\", [this.CurrentObject?.label])\n         );\n\n         // keep the column name element to use when custom index is checked\n         // ABFieldConnectComponent._$columnName = $$(pass_ids.columnName);\n         this.updateCustomIndex();\n      }\n\n      ////\n\n      checkCustomFK() {\n         const ids = this.ids;\n         $$(ids.indexField).hide();\n         $$(ids.indexField2).hide();\n\n         let isChecked = $$(ids.isCustomFK).getValue();\n         if (isChecked) {\n            let menuItems = $$(ids.indexField).getList().config.data;\n            if (menuItems && menuItems.length) {\n               $$(ids.indexField).show();\n            }\n\n            let menuItems2 = $$(ids.indexField2).getList().config.data;\n            if (menuItems2 && menuItems2.length) {\n               $$(ids.indexField2).show();\n            }\n         }\n      }\n\n      //// NOTE: This feature wasn't currently working as of our Transition to\n      //// v2, so we decided to leave it out until someone requested for this\n      //// to come back.\n      /*\n      clickNewObject() {\n         if (!App.actions.addNewObject) return;\n\n         async.series(\n            [\n               function (callback) {\n                  App.actions.addNewObject(false, callback); // pass false because after it is created we do not want it to select it in the object list\n               },\n               function (callback) {\n                  populateSelect(true, callback); // pass true because we want it to select the last item in the list that was just created\n               },\n            ],\n            function (err) {\n               if (err) {\n                  App.AB.error(err);\n               }\n               // console.log('all functions complete')\n            }\n         );\n      }\n      */\n\n      /**\n       * @method populateSelect()\n       * Ensure that the linkObject list is populated with the ABObjects in\n       * our currentApplication.\n       * NOTE: in v1 we had an option to [create new object] from this\n       * Property panel. If we did, then the @populate & @callback params\n       * were used to add the new object and default select it in our\n       * panel.\n       *\n       * In v2: we haven't implement the [create new object] option ... yet.\n       *\n       * @param {bool} populate\n       *        Should we default choose the last entry in our list? It\n       *        would have been the one we just created.\n       * @param {fn} callback\n       *        The .clickNewObject() routine used callbacks to tell when\n       *        a task was complete. This is that callback.\n       */\n      populateSelect(/* populate, callback */) {\n         const options = [];\n         // if an ABApplication is set then load in the related objects\n         const application = this.CurrentApplication;\n         if (application) {\n            application.objectsIncluded().forEach((o) => {\n               options.push({ id: o.id, value: o.label });\n            });\n         } else {\n            // else load in all the ABObjects\n            this.AB.objects().forEach((o) => {\n               options.push({ id: o.id, value: o.label });\n            });\n         }\n\n         // sort by object's label  A -> Z\n         options.sort((a, b) => {\n            if (a.value < b.value) return -1;\n            if (a.value > b.value) return 1;\n            return 0;\n         });\n\n         const ids = this.ids;\n         const $linkObject = $$(ids.linkObject);\n         $linkObject.define(\"options\", options);\n         $linkObject.refresh();\n         /*\n         // NOTE: not implemented yet ...\n         if (populate != null && populate == true) {\n            $linkObject.setValue(options[options.length - 1].id);\n            $linkObject.refresh();\n            const selectedObj = $linkObject\n               .getList()\n               .getItem(options[options.length - 1].id);\n            if (selectedObj) {\n               const selectedObjLabel = selectedObj.value;\n               $$(ids.fieldLinkVia).setValue(\n                  L(\"<b>{0}</b> entry.\", [selectedObjLabel])\n               );\n               $$(ids.fieldLinkVia2).setValue(\n                  L(\"Each <b>{0}</b> entry connects with\", [selectedObjLabel])\n               );\n               $$(ids.link1).show();\n               $$(ids.link2).show();\n            }\n            callback?.();\n         }\n         */\n      }\n\n      selectLinkType(newValue /*, oldValue */) {\n         let labelEntry = L(\"entry\");\n         let labelEntries = L(\"entries\");\n         let $field = $$(this.ids.fieldLinkVia);\n\n         let message = $field.getValue() || \"\";\n\n         if (newValue == \"many\") {\n            message = message.replace(labelEntry, labelEntries);\n         } else {\n            message = message.replace(labelEntries, labelEntry);\n         }\n         $field.define(\"label\", message);\n         $field.refresh();\n\n         this.updateCustomIndex();\n      }\n\n      selectObjectTo(newValue, oldValue) {\n         const ids = this.ids;\n\n         if (!newValue) {\n            $$(ids.link1).hide();\n            $$(ids.link2).hide();\n         }\n         if (newValue == oldValue || newValue == \"\") return;\n\n         let selectedObj = $$(ids.linkObject).getList().getItem(newValue);\n         if (!selectedObj) return;\n\n         let selectedObjLabel = selectedObj.value;\n         $$(ids.fieldLinkVia).setValue(\n            L(\"<b>{0}</b> entry.\", [selectedObjLabel])\n         );\n         $$(ids.fieldLinkVia2).setValue(\n            L(\"Each <b>{0}</b> entry connects with\", [selectedObjLabel])\n         );\n         $$(ids.link1).show();\n         $$(ids.link2).show();\n\n         this.updateCustomIndex();\n      }\n\n      updateCustomIndex() {\n         const ids = this.ids;\n         let linkObjectId = $$(ids.linkObject).getValue();\n         let linkType = $$(ids.linkType).getValue();\n         let linkViaType = $$(ids.linkViaType).getValue();\n\n         let sourceObject = null; // object stores index column\n         let linkIndexes = null; // the index fields of link object M:N\n\n         $$(ids.indexField2).define(\"options\", []);\n         $$(ids.indexField2).refresh();\n\n         let link = `${linkType}:${linkViaType}`;\n         // 1:1\n         // 1:M\n         if ([\"one:one\", \"one:many\"].indexOf(link) > -1) {\n            sourceObject = this.AB.objectByID(linkObjectId);\n         }\n         // M:1\n         else if (link == \"many:one\") {\n            sourceObject = this.CurrentObject;\n         }\n         // M:N\n         else if (link == \"many:many\") {\n            sourceObject = this.CurrentObject;\n\n            let linkObject = this.AB.objectByID(linkObjectId);\n\n            // Populate the second index fields\n            let linkIndexFields = [];\n            linkIndexes = linkObject.indexes((idx) => idx.unique);\n            (linkIndexes || []).forEach((idx) => {\n               (idx.fields || []).forEach((f) => {\n                  if (\n                     (!f ||\n                        !f.settings ||\n                        !f.settings.required ||\n                        linkIndexFields.filter((opt) => opt.id == f.id)\n                           .length) &&\n                     f.key != \"AutoIndex\" &&\n                     f.key != \"combined\"\n                  )\n                     return;\n\n                  linkIndexFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               });\n            });\n            $$(ids.indexField2).define(\"options\", linkIndexFields);\n            $$(ids.indexField2).refresh();\n         }\n\n         $$(ids.indexField).hide();\n         $$(ids.indexField2).hide();\n\n         if (!sourceObject) {\n            $$(ids.isCustomFK).hide();\n            return;\n         }\n\n         let indexes = sourceObject.indexes((idx) => idx.unique);\n         if (\n            (!indexes || indexes.length < 1) &&\n            (!linkIndexes || linkIndexes.length < 1)\n         ) {\n            $$(ids.isCustomFK).hide();\n            $$(ids.indexField).define(\"options\", []);\n            $$(ids.indexField).refresh();\n            return;\n         }\n\n         let indexFields = [];\n         (indexes || []).forEach((idx) => {\n            (idx.fields || []).forEach((f) => {\n               if (\n                  (!f ||\n                     !f.settings ||\n                     !f.settings.required ||\n                     indexFields.filter((opt) => opt.id == f.id).length) &&\n                  f.key != \"AutoIndex\" &&\n                  f.key != \"combined\"\n               )\n                  return;\n\n               indexFields.push({\n                  id: f.id,\n                  value: f.label,\n                  field: f,\n               });\n            });\n         });\n         $$(ids.indexField).define(\"options\", indexFields);\n         $$(ids.indexField).refresh();\n\n         if (indexFields && indexFields.length) {\n            $$(ids.isCustomFK).show();\n         }\n\n         this.checkCustomFK();\n      }\n   }\n\n   return ABFieldConnectProperty;\n}\n","/*\n * ABFieldDate\n * A Property manager for our ABFieldDate.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldDate extends ABField {\n      constructor() {\n         super(\"properties_abfield_date\", {\n            default: \"\",\n            currentToDefault: \"\",\n\n            dateDisplay: \"\",\n\n            dateFormat: \"\",\n            defaultDate: \"\",\n            defaultDateValue: \"\",\n\n            // validation\n            validateCondition: \"\",\n            validateRange: \"\",\n            validateRangeUnit: \"\",\n            validateRangeBefore: \"\",\n            validateRangeAfter: \"\",\n            validateRangeBeforeLabel: \"\",\n            validateRangeAfterLabel: \"\",\n\n            validateStartDateContainer: \"\",\n            validateStartDateContainerLabel: \"\",\n            validateEndDateContainer: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Date Format:\"),\n                     align: \"right\",\n                     width: 88,\n                  },\n                  {\n                     view: \"richselect\",\n                     name: \"dateFormat\",\n                     id: ids.dateFormat,\n                     value: 2,\n                     options: [\n                        { id: 2, value: \"dd/mm/yyyy\" },\n                        { id: 3, value: \"mm/dd/yyyy\" },\n                        { id: 4, value: \"M D, yyyy\" },\n                        { id: 5, value: \"D M, yyyy\" },\n                     ],\n                     on: {\n                        onChange: () => {\n                           this.refreshDateValue();\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Default:\"),\n                     align: \"right\",\n                     width: 88,\n                  },\n                  {\n                     view: \"richselect\",\n                     name: \"defaultDate\",\n                     id: ids.defaultDate,\n                     value: 1,\n                     options: [\n                        { id: 1, value: L(\"None\") },\n                        {\n                           id: 2,\n                           value: L(\"Current Date\"),\n                        },\n                        {\n                           id: 3,\n                           value: L(\"Specific Date\"),\n                        },\n                     ],\n                     on: {\n                        onChange: () => {\n                           this.defaultDateChange();\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"datepicker\",\n                     name: \"defaultDateValue\",\n                     id: ids.defaultDateValue,\n                     gravity: 0.5,\n                     disabled: true,\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            // Validator\n            {\n               view: \"label\",\n               label: L(\"Validation criteria:\"),\n               width: 123,\n               css: \"ab-text-bold\",\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Condition:\"),\n                     align: \"right\",\n                     width: 88,\n                     css: \"ab-text-bold\",\n                  },\n                  {\n                     id: ids.validateCondition,\n                     view: \"select\",\n                     name: \"validateCondition\",\n                     value: \"none\",\n                     options: [\n                        { id: \"none\", value: L(\"None\") },\n                        {\n                           id: \"dateRange\",\n                           value: L(\"Range\"),\n                        },\n                        {\n                           id: \"between\",\n                           value: L(\"Between\"),\n                        },\n                        {\n                           id: \"notBetween\",\n                           value: L(\"Not between\"),\n                        },\n                        {\n                           id: \"=\",\n                           value: L(\"Equal to\"),\n                        },\n                        {\n                           id: \"<>\",\n                           value: L(\"Not equal to\"),\n                        },\n                        {\n                           id: \">\",\n                           value: L(\"Greater than\"),\n                        },\n                        {\n                           id: \"<\",\n                           value: L(\"Less than\"),\n                        },\n                        {\n                           id: \">=\",\n                           value: L(\"Greater than or Equal to\"),\n                        },\n                        {\n                           id: \"<=\",\n                           value: L(\"Less than or Equal to\"),\n                        },\n                     ],\n                     on: {\n                        onChange: (newVal) => {\n                           switch (newVal) {\n                              case \"none\":\n                                 $$(ids.validateRange).hide();\n                                 $$(ids.validateStartDateContainer).hide();\n                                 $$(ids.validateEndDateContainer).hide();\n                                 break;\n                              case \"dateRange\":\n                                 $$(ids.validateRange).show();\n                                 $$(ids.validateStartDateContainer).hide();\n                                 $$(ids.validateEndDateContainer).hide();\n                                 break;\n                              case \"between\":\n                              case \"notBetween\":\n                                 $$(ids.validateRange).hide();\n                                 $$(ids.validateStartDateContainerLabel).define(\n                                    \"label\",\n                                    L(\"Start Date:\")\n                                 );\n                                 $$(\n                                    ids.validateStartDateContainerLabel\n                                 ).refresh();\n                                 $$(ids.validateStartDateContainer).show();\n                                 $$(ids.validateEndDateContainer).show();\n                                 break;\n                              case \"=\":\n                              case \"<>\":\n                              case \">\":\n                              case \"<\":\n                              case \">=\":\n                              case \"<=\":\n                                 $$(ids.validateRange).hide();\n                                 $$(ids.validateStartDateContainerLabel).define(\n                                    \"label\",\n                                    L(\"Date:\")\n                                 );\n                                 $$(\n                                    ids.validateStartDateContainerLabel\n                                 ).refresh();\n                                 $$(ids.validateStartDateContainer).show();\n                                 $$(ids.validateEndDateContainer).hide();\n                                 break;\n                           }\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.validateRange,\n               hidden: true,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Unit:\"),\n                           align: \"right\",\n                           width: 88,\n                        },\n                        {\n                           id: ids.validateRangeUnit,\n                           view: \"select\",\n                           name: \"validateRangeUnit\",\n                           options: [\n                              {\n                                 id: \"days\",\n                                 value: L(\"Days\"),\n                              },\n                              {\n                                 id: \"months\",\n                                 value: L(\"Months\"),\n                              },\n                              {\n                                 id: \"years\",\n                                 value: L(\"Years\"),\n                              },\n                           ],\n                           on: {\n                              onChange: () => {\n                                 $$(ids.validateRangeBeforeLabel).refresh();\n                                 $$(ids.validateRangeAfterLabel).refresh();\n                              },\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.validateRangeBeforeLabel,\n                           view: \"template\",\n                           align: \"left\",\n                           width: 140,\n                           borderless: true,\n                           template: () => {\n                              let unit = $$(ids.validateRangeUnit).getValue(),\n                                 selectedUnit = $$(\n                                    ids.validateRangeUnit\n                                 ).config.options.filter(\n                                    (opt) => opt.id == unit\n                                 )[0];\n\n                              const beforeLabel = `${L(\"Before\")} ${$$(\n                                 ids.validateRangeBefore\n                              ).getValue()} ${selectedUnit.value}`;\n\n                              return beforeLabel;\n                           },\n                        },\n                        {\n                           view: \"label\",\n                           label: \"\",\n                           align: \"center\",\n                           width: 1,\n                        },\n                        {\n                           id: ids.validateRangeAfterLabel,\n                           view: \"template\",\n                           align: \"right\",\n                           borderless: true,\n                           template: () => {\n                              let unit = $$(ids.validateRangeUnit).getValue(),\n                                 selectedUnit = $$(\n                                    ids.validateRangeUnit\n                                 ).config.options.filter(\n                                    (opt) => opt.id == unit\n                                 )[0];\n\n                              const afterLabel = `${L(\"After\")} ${$$(\n                                 ids.validateRangeAfter\n                              ).getValue()} ${selectedUnit.value}`;\n\n                              return afterLabel;\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.validateRangeBefore,\n                           view: \"slider\",\n                           name: \"validateRangeBefore\",\n                           on: {\n                              onChange: () => {\n                                 $$(ids.validateRangeBeforeLabel).refresh();\n                              },\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           id: ids.validateRangeAfter,\n                           view: \"slider\",\n                           name: \"validateRangeAfter\",\n                           on: {\n                              onChange: () => {\n                                 $$(ids.validateRangeAfterLabel).refresh();\n                              },\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n            {\n               id: ids.validateStartDateContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.validateStartDateContainerLabel,\n                     view: \"label\",\n                     label: L(\"Start Date:\"),\n                     align: \"right\",\n                     width: 88,\n                  },\n                  {\n                     name: \"validateStartDate\",\n                     view: \"datepicker\",\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.validateEndDateContainer,\n               hidden: true,\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"End Date:\"),\n                     align: \"right\",\n                     width: 88,\n                  },\n                  {\n                     name: \"validateEndDate\",\n                     view: \"datepicker\",\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n         ]);\n      }\n\n      defaultDateChange() {\n         const ids = this.ids;\n\n         const defaultDateValue = $$(ids.defaultDate).getValue();\n         const defaultDate = parseInt(defaultDateValue);\n         switch (defaultDate) {\n            case 1:\n               {\n                  $$(ids.defaultDateValue).disable();\n                  $$(ids.defaultDateValue).setValue();\n               }\n               break;\n            case 2:\n               {\n                  $$(ids.defaultDateValue).enable();\n                  $$(ids.defaultDateValue).setValue(new Date());\n                  this.refreshDateValue();\n               }\n               break;\n            case 3:\n               {\n                  $$(ids.defaultDateValue).enable();\n                  $$(ids.defaultDateValue).setValue();\n               }\n               break;\n            default:\n               {\n                  $$(ids.defaultDateValue).disable();\n                  $$(ids.defaultDateValue).setValue(new Date());\n               }\n               break;\n         }\n      }\n\n      refreshDateValue() {\n         const ids = this.ids;\n\n         const defaultFormatValue = $$(ids.dateFormat).getValue();\n         const dateFormat = parseInt(defaultFormatValue);\n\n         let formatString = \"\";\n         switch (dateFormat) {\n            //Ignore Date\n            case (1, 2):\n               {\n                  formatString = \"%d/%m/%Y\";\n               }\n               break;\n            //mm/dd/yyyy\n            case 3:\n               {\n                  formatString = \"%m/%d/%Y\";\n               }\n               break;\n            //M D, yyyy\n            case 4:\n               {\n                  formatString = \"%M %d, %Y\";\n               }\n               break;\n            //D M, yyyy\n            case 5:\n               {\n                  formatString = \"%d %M, %Y\";\n               }\n               break;\n            default:\n               {\n                  formatString = \"%d/%m/%Y\";\n               }\n               break;\n         }\n\n         $$(ids.defaultDateValue).define(\"format\", formatString);\n         $$(ids.defaultDateValue).refresh();\n      }\n\n      defaultTimeChange() {\n         const ids = this.ids;\n\n         console.log(\"defaultTimeChange\");\n         const dateFormat = parseInt($$(ids.defaultTime).getValue());\n         switch (dateFormat) {\n            case 1:\n               {\n                  $$(ids.defaultTimeValue).disable();\n                  $$(ids.defaultTimeValue).setValue();\n               }\n               break;\n            case 2:\n               {\n                  $$(ids.defaultTimeValue).enable();\n                  $$(ids.defaultTimeValue).setValue(new Date());\n               }\n               break;\n            case 3:\n               {\n                  $$(ids.defaultTimeValue).enable();\n                  $$(ids.defaultTimeValue).setValue();\n               }\n               break;\n            default:\n               {\n                  $$(ids.defaultTimeValue).disable();\n                  $$(ids.defaultTimeValue).setValue();\n               }\n               break;\n         }\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"date\");\n      }\n\n      populate(field) {\n         const ids = this.ids;\n\n         super.populate(field);\n         $$(ids.defaultDateValue).setValue(\n            new Date(field.settings.defaultDateValue)\n         );\n      }\n\n      show() {\n         // dateDisplayRefresh();\n         this.refreshDateValue();\n         super.show();\n      }\n   }\n\n   return ABFieldDate;\n}\n","/*\n * ABFieldDateTime\n * A Property manager for our ABFieldDateTime.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldDateTime extends ABField {\n      constructor() {\n         super(\"properties_abfield_datetime\", {\n            default: \"\",\n            currentToDefault: \"\",\n\n            dateDisplay: \"\",\n\n            dateFormat: \"\",\n            defaultDate: \"\",\n            defaultDateValue: \"\",\n            timeFormat: \"\",\n            defaultTime: \"\",\n            defaultTimeValue: \"\",\n\n            // validation\n            validateCondition: \"\",\n            validateRange: \"\",\n            validateRangeUnit: \"\",\n            validateRangeBefore: \"\",\n            validateRangeAfter: \"\",\n            validateRangeBeforeLabel: \"\",\n            validateRangeAfterLabel: \"\",\n\n            validateStartDateContainer: \"\",\n            validateStartDateContainerLabel: \"\",\n            validateEndDateContainer: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               view: \"label\",\n               label: L(\"Date:\"),\n               align: \"left\",\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Format:\"),\n                     align: \"right\",\n                     width: 88,\n                  },\n                  {\n                     id: ids.dateFormat,\n                     view: \"richselect\",\n                     name: \"dateFormat\",\n                     value: 1,\n                     options: [\n                        {\n                           id: 1,\n                           value: L(\"Ignore Date\"),\n                        },\n                        { id: 2, value: \"dd/mm/yyyy\" },\n                        { id: 3, value: \"mm/dd/yyyy\" },\n                        { id: 4, value: \"M D, yyyy\" },\n                        { id: 5, value: \"D M, yyyy\" },\n                     ],\n                     on: {\n                        onChange: () => {\n                           this.refreshDateValue();\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Default:\"),\n                     align: \"right\",\n                     width: 88,\n                  },\n                  {\n                     view: \"richselect\",\n                     name: \"defaultDate\",\n                     id: ids.defaultDate,\n                     value: 1,\n                     options: [\n                        { id: 1, value: L(\"None\") },\n                        {\n                           id: 2,\n                           value: L(\"Current Date\"),\n                        },\n                        {\n                           id: 3,\n                           value: L(\"Specific Date\"),\n                        },\n                     ],\n                     on: {\n                        onChange: () => {\n                           this.defaultDateChange();\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"datepicker\",\n                     name: \"defaultDateValue\",\n                     id: ids.defaultDateValue,\n                     gravity: 0.5,\n                     disabled: true,\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            // Validator\n            {\n               view: \"label\",\n               label: L(\"Validation criteria:\"),\n               width: 123,\n               css: \"ab-text-bold\",\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Condition:\"),\n                     align: \"right\",\n                     width: 88,\n                     css: \"ab-text-bold\",\n                  },\n                  {\n                     id: ids.validateCondition,\n                     view: \"select\",\n                     name: \"validateCondition\",\n                     value: \"none\",\n                     options: [\n                        { id: \"none\", value: L(\"None\") },\n                        {\n                           id: \"dateRange\",\n                           value: L(\"Range\"),\n                        },\n                        {\n                           id: \"between\",\n                           value: L(\"Between\"),\n                        },\n                        {\n                           id: \"notBetween\",\n                           value: L(\"Not between\"),\n                        },\n                        {\n                           id: \"=\",\n                           value: L(\"Equal to\"),\n                        },\n                        {\n                           id: \"<>\",\n                           value: L(\"Not equal to\"),\n                        },\n                        {\n                           id: \">\",\n                           value: L(\"Greater than\"),\n                        },\n                        {\n                           id: \"<\",\n                           value: L(\"Less than\"),\n                        },\n                        {\n                           id: \">=\",\n                           value: L(\"Greater than or Equal to\"),\n                        },\n                        {\n                           id: \"<=\",\n                           value: L(\"Less than or Equal to\"),\n                        },\n                     ],\n                     on: {\n                        onChange: (newVal) => {\n                           switch (newVal) {\n                              case \"none\":\n                                 $$(ids.validateRange).hide();\n                                 $$(ids.validateStartDateContainer).hide();\n                                 $$(ids.validateEndDateContainer).hide();\n                                 break;\n                              case \"dateRange\":\n                                 $$(ids.validateRange).show();\n                                 $$(ids.validateStartDateContainer).hide();\n                                 $$(ids.validateEndDateContainer).hide();\n                                 break;\n                              case \"between\":\n                              case \"notBetween\":\n                                 $$(ids.validateRange).hide();\n                                 $$(ids.validateStartDateContainerLabel).define(\n                                    \"label\",\n                                    L(\"Start Date:\")\n                                 );\n                                 $$(\n                                    ids.validateStartDateContainerLabel\n                                 ).refresh();\n                                 $$(ids.validateStartDateContainer).show();\n                                 $$(ids.validateEndDateContainer).show();\n                                 break;\n                              case \"=\":\n                              case \"<>\":\n                              case \">\":\n                              case \"<\":\n                              case \">=\":\n                              case \"<=\":\n                                 $$(ids.validateRange).hide();\n                                 $$(ids.validateStartDateContainerLabel).define(\n                                    \"label\",\n                                    L(\"Date:\")\n                                 );\n                                 $$(\n                                    ids.validateStartDateContainerLabel\n                                 ).refresh();\n                                 $$(ids.validateStartDateContainer).show();\n                                 $$(ids.validateEndDateContainer).hide();\n                                 break;\n                           }\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.validateRange,\n               hidden: true,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Unit:\"),\n                           align: \"right\",\n                           width: 88,\n                        },\n                        {\n                           id: ids.validateRangeUnit,\n                           view: \"select\",\n                           name: \"validateRangeUnit\",\n                           options: [\n                              {\n                                 id: \"days\",\n                                 value: L(\"Days\"),\n                              },\n                              {\n                                 id: \"months\",\n                                 value: L(\"Months\"),\n                              },\n                              {\n                                 id: \"years\",\n                                 value: L(\"Years\"),\n                              },\n                           ],\n                           on: {\n                              onChange: () => {\n                                 $$(ids.validateRangeBeforeLabel).refresh();\n                                 $$(ids.validateRangeAfterLabel).refresh();\n                              },\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.validateRangeBeforeLabel,\n                           view: \"template\",\n                           align: \"left\",\n                           width: 140,\n                           borderless: true,\n                           template: () => {\n                              let unit = $$(ids.validateRangeUnit).getValue(),\n                                 selectedUnit = $$(\n                                    ids.validateRangeUnit\n                                 ).config.options.filter(\n                                    (opt) => opt.id == unit\n                                 )[0];\n\n                              const beforeLabel = `${L(\"Before\")} ${$$(\n                                 ids.validateRangeBefore\n                              ).getValue()} ${selectedUnit.value}`;\n\n                              return beforeLabel;\n                           },\n                        },\n                        {\n                           view: \"label\",\n                           label: \"\",\n                           align: \"center\",\n                           width: 1,\n                        },\n                        {\n                           id: ids.validateRangeAfterLabel,\n                           view: \"template\",\n                           align: \"right\",\n                           borderless: true,\n                           template: () => {\n                              let unit = $$(ids.validateRangeUnit).getValue(),\n                                 selectedUnit = $$(\n                                    ids.validateRangeUnit\n                                 ).config.options.filter(\n                                    (opt) => opt.id == unit\n                                 )[0];\n\n                              const afterLabel = `${L(\"After\")} ${$$(\n                                 ids.validateRangeAfter\n                              ).getValue()} ${selectedUnit.value}`;\n\n                              return afterLabel;\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.validateRangeBefore,\n                           view: \"slider\",\n                           name: \"validateRangeBefore\",\n                           on: {\n                              onChange: () => {\n                                 $$(ids.validateRangeBeforeLabel).refresh();\n                              },\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           id: ids.validateRangeAfter,\n                           view: \"slider\",\n                           name: \"validateRangeAfter\",\n                           on: {\n                              onChange: () => {\n                                 $$(ids.validateRangeAfterLabel).refresh();\n                              },\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n            {\n               id: ids.validateStartDateContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.validateStartDateContainerLabel,\n                     view: \"label\",\n                     label: L(\"Start Date:\"),\n                     align: \"right\",\n                     width: 88,\n                  },\n                  {\n                     name: \"validateStartDate\",\n                     view: \"datepicker\",\n                     om: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.validateEndDateContainer,\n               hidden: true,\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"End Date:\"),\n                     align: \"right\",\n                     width: 88,\n                  },\n                  {\n                     name: \"validateEndDate\",\n                     view: \"datepicker\",\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"label\",\n               label: L(\"Time:\"),\n               align: \"left\",\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Format:\"),\n                     align: \"right\",\n                     width: 88,\n                  },\n                  {\n                     view: \"richselect\",\n                     name: \"timeFormat\",\n                     id: ids.timeFormat,\n                     value: 2,\n                     options: [\n                        // {\n                        //    id: 1,\n                        //    value: L(\"ab.dataField.datetime.ignoreTime\", \"*Ignore Time\")\n                        // },\n                        { id: 2, value: L(\"HH:MM AM/PM\") },\n                        { id: 3, value: L(\"HH:MM (military)\") },\n                     ],\n                     on: {\n                        onChange: () => {\n                           this.refreshTimevalue();\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Default Time:\"),\n                     align: \"right\",\n                     width: 88,\n                  },\n                  {\n                     view: \"richselect\",\n                     name: \"defaultTime\",\n                     id: ids.defaultTime,\n                     labelWidth: 110,\n                     value: 1,\n                     options: [\n                        { id: 1, value: L(\"None\") },\n                        {\n                           id: 2,\n                           value: L(\"Current Time\"),\n                        },\n                        {\n                           id: 3,\n                           value: L(\"Specific Time\"),\n                        },\n                     ],\n                     on: {\n                        onChange: () => {\n                           this.defaultTimeChange();\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"datepicker\",\n                     name: \"defaultTimeValue\",\n                     type: \"time\",\n                     id: ids.defaultTimeValue,\n                     gravity: 0.5,\n                     disabled: true,\n                     onAfterRender: function () {\n                        ABField.CYPRESS_REF(this);\n                     },\n                  },\n               ],\n            },\n         ]);\n      }\n\n      defaultDateChange() {\n         const ids = this.ids;\n\n         const defaultDateValue = $$(ids.defaultDate).getValue();\n         const defaultDate = parseInt(defaultDateValue);\n         switch (defaultDate) {\n            case 1:\n               {\n                  $$(ids.defaultDateValue).disable();\n                  $$(ids.defaultDateValue).setValue();\n               }\n               break;\n            case 2:\n               {\n                  $$(ids.defaultDateValue).enable();\n                  $$(ids.defaultDateValue).setValue(new Date());\n                  this.refreshDateValue();\n               }\n               break;\n            case 3:\n               {\n                  $$(ids.defaultDateValue).enable();\n                  $$(ids.defaultDateValue).setValue();\n               }\n               break;\n            default:\n               {\n                  $$(ids.defaultDateValue).disable();\n                  $$(ids.defaultDateValue).setValue(new Date());\n               }\n               break;\n         }\n      }\n\n      refreshDateValue() {\n         const ids = this.ids;\n\n         const defaultFormatValue = $$(ids.dateFormat).getValue();\n         const dateFormat = parseInt(defaultFormatValue);\n\n         let formatString = \"\";\n         switch (dateFormat) {\n            //Ignore Date\n            case (1, 2):\n               {\n                  formatString = \"%d/%m/%Y\";\n               }\n               break;\n            //mm/dd/yyyy\n            case 3:\n               {\n                  formatString = \"%m/%d/%Y\";\n               }\n               break;\n            //M D, yyyy\n            case 4:\n               {\n                  formatString = \"%M %d, %Y\";\n               }\n               break;\n            //D M, yyyy\n            case 5:\n               {\n                  formatString = \"%d %M, %Y\";\n               }\n               break;\n            default:\n               {\n                  formatString = \"%d/%m/%Y\";\n               }\n               break;\n         }\n\n         $$(ids.defaultDateValue).define(\"format\", formatString);\n         $$(ids.defaultDateValue).refresh();\n      }\n\n      defaultTimeChange() {\n         const ids = this.ids;\n\n         const dateFormat = parseInt($$(ids.defaultTime).getValue());\n\n         switch (dateFormat) {\n            case 1:\n               {\n                  $$(ids.defaultTimeValue).disable();\n                  $$(ids.defaultTimeValue).setValue();\n               }\n               break;\n            case 2:\n               {\n                  $$(ids.defaultTimeValue).enable();\n                  $$(ids.defaultTimeValue).setValue(new Date());\n               }\n               break;\n            case 3:\n               {\n                  $$(ids.defaultTimeValue).enable();\n                  $$(ids.defaultTimeValue).setValue();\n               }\n               break;\n            default:\n               {\n                  $$(ids.defaultTimeValue).disable();\n                  $$(ids.defaultTimeValue).setValue();\n               }\n               break;\n         }\n         this.refreshTimevalue();\n      }\n\n      refreshTimevalue() {\n         const ids = this.ids;\n\n         const timeFormat = parseInt($$(ids.timeFormat).getValue());\n\n         let formatString = \"\";\n         switch (timeFormat) {\n            //HH:MM AM/PM\n            case 2:\n               {\n                  formatString = \"%h:%i %A\";\n               }\n               break;\n            //HH:MM (military)\n            case 3:\n               {\n                  formatString = \"%H:%i\";\n               }\n               break;\n            default:\n               {\n                  formatString = \"%h:%i %A\";\n               }\n               break;\n         }\n\n         $$(ids.defaultTimeValue).define(\"format\", formatString);\n         $$(ids.defaultTimeValue).refresh();\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"datetime\");\n      }\n\n      populate(field) {\n         const ids = this.ids;\n\n         super.populate(field);\n\n         $$(ids.defaultDateValue).setValue(\n            new Date(field.settings.defaultDateValue)\n         );\n         $$(ids.defaultTimeValue).setValue(\n            new Date(field.settings.defaultTimeValue)\n         );\n      }\n\n      show() {\n         // dateDisplayRefresh();\n         this.refreshDateValue();\n         this.refreshTimevalue();\n         super.show();\n      }\n   }\n\n   return ABFieldDateTime;\n}\n","/*\n * ABFieldEmail\n * A Property manager for our ABFieldEmail.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const uiConfig = AB.Config.uiSettings();\n\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldEmail extends ABField {\n      constructor() {\n         super(\"properties_abfield_email\", {\n            default: \"\",\n            defaultCheckbox: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Default Value:\"),\n                     align: \"right\",\n                     width: 100,\n                  },\n                  {\n                     id: ids.defaultCheckbox,\n                     view: \"checkbox\",\n                     width: 30,\n                     value: 0,\n                     on: {\n                        onChange: (newv) => {\n                           this.checkboxDefaultValue(newv);\n                        },\n                        onAfterRender: () => {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"text\",\n                     id: ids.default,\n                     name: \"default\",\n                     placeholder: L(\"Enter default value\"),\n                     disabled: true,\n                     labelWidth: uiConfig.labelWidthXLarge,\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n         ]);\n      }\n\n      checkboxDefaultValue(state) {\n         if (state === 0) {\n            $$(this.ids.default).disable();\n            $$(this.ids.default).setValue(\"\");\n         } else {\n            $$(this.ids.default).enable();\n         }\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"email\");\n      }\n\n      isValid() {\n         const ids = this.ids;\n         let isValid = super.isValid();\n\n         $$(ids.component).clearValidation();\n\n         const isRequired = $$(ids.required).getValue();\n         const emailDefault = $$(ids.default).getValue();\n\n         if (isRequired || emailDefault) {\n            if (!webix.rules.isEmail(emailDefault)) {\n               $$(ids.component).markInvalid(\n                  \"default\",\n                  L(\"This email is invalid\")\n               );\n               isValid = false;\n            } else isValid = true;\n         } else isValid = true;\n\n         return isValid;\n      }\n\n      populate(field) {\n         const ids = this.ids;\n         super.populate(field);\n\n         if (field.settings.default === \"\") {\n            $$(ids.defaultCheckbox).setValue(0);\n         } else {\n            $$(ids.defaultCheckbox).setValue(1);\n         }\n      }\n   }\n\n   return ABFieldEmail;\n}\n","/*\n * ABFieldFile\n * A Property manager for our ABFieldFile.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldFile extends ABField {\n      constructor() {\n         super(\"properties_abfield_file\", {\n            fileSize: \"\",\n            fileType: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Size (MB):\"),\n                     align: \"right\",\n                     width: 75,\n                  },\n                  {\n                     view: \"checkbox\",\n                     name: \"limitFileSize\",\n                     value: 1,\n                     width: 30,\n                     click: function () {\n                        if (this.getValue()) $$(ids.fileSize).enable();\n                        else $$(ids.fileSize).disable();\n                     },\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"counter\",\n                     name: \"fileSize\",\n                     id: ids.fileSize,\n                     width: 104,\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Type:\"),\n                     align: \"right\",\n                     width: 75,\n                  },\n                  {\n                     view: \"checkbox\",\n                     name: \"limitFileType\",\n                     width: 30,\n                     labelWidth: 0,\n                     value: 1,\n                     click: function () {\n                        if (this.getValue()) $$(ids.fileType).enable();\n                        else $$(ids.fileType).disable();\n                     },\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     id: ids.fileType,\n                     view: \"text\",\n                     name: \"fileType\",\n                     placeholder: L(\"txt,rtf,doc,docx,...\"),\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n         ]);\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"file\");\n      }\n\n      clear() {\n         const ids = this.ids;\n\n         super.clear();\n         $$(ids.fileSize).setValue(0);\n         $$(ids.fileType).setValue(\"\");\n      }\n   }\n\n   return ABFieldFile;\n}\n","/*\n * ABFieldFormula\n * A Property manager for our ABFieldFormula.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const uiConfig = AB.Config.uiSettings();\n\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldFormula extends ABField {\n      constructor() {\n         super(\"properties_abfield_formula\", {\n            field: \"\",\n            fieldList: \"\",\n         });\n      }\n\n      ui() {\n         const App = AB._App;\n         const FC = this.FieldClass();\n         const ids = this.ids;\n\n         this.rowFilter = AB.rowfilterNew(App, ids.component);\n\n         return super.ui([\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Type:\"),\n                     align: \"right\",\n                     width: 40,\n                  },\n                  {\n                     view: \"richselect\",\n                     name: \"type\",\n                     labelWidth: uiConfig.labelWidthMedium,\n                     value: \"sum\",\n                     options: [\n                        { id: \"sum\", value: L(\"Sum\") },\n                        { id: \"max\", value: L(\"Max\") },\n                        { id: \"min\", value: L(\"Min\") },\n                        {\n                           id: \"average\",\n                           value: L(\"Average\"),\n                        },\n                        {\n                           id: \"count\",\n                           value: L(\"Count\"),\n                        },\n                     ],\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Field:\"),\n                     align: \"right\",\n                     width: 40,\n                  },\n                  {\n                     id: ids.field,\n                     view: \"richselect\",\n                     name: \"field\",\n                     labelWidth: uiConfig.labelWidthMedium,\n                     options: {\n                        view: \"suggest\",\n                        body: {\n                           id: ids.fieldList,\n                           view: \"list\",\n                           template: this.itemTemplate,\n                           data: [],\n                        },\n                     },\n                     on: {\n                        onChange: () => {\n                           this.refreshFilter();\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            this.rowFilter.ui,\n         ]);\n      }\n\n      getFieldList() {\n         const options = [];\n\n         const connectFields = this.CurrentObject.connectFields();\n         connectFields.forEach((f) => {\n            const objLink = f.datasourceLink;\n\n            objLink.fields().forEach((fLink) => {\n               // pull 'number' and 'calculate' fields from link objects\n               // if (fLink.key == \"number\" || fLink.key == \"calculate\") {\n               // NOTE: calculate fields does not support in queries\n               if (fLink.key == \"number\") {\n                  // NOTE: calculate fields does not support in queries\n                  options.push({\n                     // UUID:UUID\n                     id: `${f.id}:${fLink.id}`,\n                     field: f,\n                     fieldLink: fLink,\n                  });\n               }\n            });\n         });\n\n         return options;\n      }\n\n      itemTemplate(opt) {\n         return `[${opt.field.label}] ${opt.fieldLink.object.label} -> <i class=\"fa fa-${opt.fieldLink.icon}\" aria-hidden=\"true\"></i><b>${opt.fieldLink.label}</b>`;\n      }\n\n      getSelectedField() {\n         const ids = this.ids;\n\n         const selectedId = $$(ids.field).getValue(); // fieldId:fieldLinkId\n         const selectedField = $$(ids.field)\n            .getList()\n            .data.find({ id: selectedId })[0];\n\n         return selectedField;\n      }\n\n      refreshFilter() {\n         const selectedField = this.getSelectedField();\n         if (\n            selectedField &&\n            selectedField.fieldLink &&\n            selectedField.fieldLink.object\n         ) {\n            // ABFieldFormulaComponent.rowFilter.applicationLoad(\n            //    selectedField.fieldLink.object.application\n            // );\n            this.rowFilter.fieldsLoad(selectedField.fieldLink.object.fields());\n            // ABFieldFormulaComponent.rowFilter.setValue({});\n         } else {\n            // ABFieldFormulaComponent.rowFilter.applicationLoad(null);\n            this.rowFilter.fieldsLoad([]);\n            // ABFieldFormulaComponent.rowFilter.setValue({});\n         }\n      }\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"formula\");\n      }\n\n      populate(field) {\n         const ids = this.ids;\n\n         super.populate(field);\n\n         if (field.settings.field) {\n            const selectedId = `${field.settings.field}:${field.settings.fieldLink}`;\n            $$(ids.field).setValue(selectedId || \"\");\n         } else {\n            $$(ids.field).setValue(\"\");\n         }\n\n         this.refreshFilter();\n         this.rowFilter.setValue(field.settings.where || {});\n      }\n\n      show() {\n         const ids = this.ids;\n         const list = this.getFieldList();\n\n         $$(ids.fieldList).clearAll();\n         $$(ids.fieldList).parse(list);\n         super.show();\n      }\n\n      values() {\n         const ids = this.ids;\n         const settings = $$(ids.component).getValues();\n         const selectedField = this.getSelectedField();\n\n         if (selectedField) {\n            settings.field = selectedField.field.id;\n            settings.fieldLink = selectedField.fieldLink.id;\n            settings.object = selectedField.fieldLink.object.id;\n         } else {\n            settings.field = \"\";\n            settings.fieldLink = \"\";\n            settings.object = \"\";\n         }\n\n         settings.where = this.rowFilter.getValue();\n\n         $$(ids.component).setValues(settings);\n\n         return super.values();\n      }\n   }\n\n   return ABFieldFormula;\n}\n","/*\n * ABFieldImage\n * A Property manager for our ABFieldImage.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldImage extends ABField {\n      constructor() {\n         super(\"properties_abfield_image\", {\n            imageWidth: \"\",\n            imageHeight: \"\",\n            imageContainer: \"\",\n            defaultImageUrl: \"\",\n\n            useWidth: \"\",\n            useHeight: \"\",\n            useDefaultImage: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Width:\"),\n                     align: \"right\",\n                     width: 60,\n                  },\n                  {\n                     id: ids.useWidth,\n                     view: \"checkbox\",\n                     name: \"useWidth\",\n                     width: 30,\n                     value: 1,\n                     click: function () {\n                        if (this.getValue()) $$(ids.imageWidth).enable();\n                        else $$(ids.imageWidth).disable();\n                     },\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     id: ids.imageWidth,\n                     view: \"text\",\n                     name: \"imageWidth\",\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Height:\"),\n                     align: \"right\",\n                     width: 60,\n                  },\n                  {\n                     id: ids.useHeight,\n                     view: \"checkbox\",\n                     name: \"useHeight\",\n                     width: 30,\n                     value: 1,\n                     click: function () {\n                        if (this.getValue()) $$(ids.imageHeight).enable();\n                        else $$(ids.imageHeight).disable();\n                     },\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"text\",\n                     name: \"imageHeight\",\n                     id: ids.imageHeight,\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Default image:\"),\n                     align: \"right\",\n                     width: 100,\n                  },\n                  {\n                     id: ids.useDefaultImage,\n                     view: \"checkbox\",\n                     name: \"useDefaultImage\",\n                     value: 0,\n                     click: function () {\n                        if (this.getValue()) $$(ids.imageContainer).enable();\n                        else $$(ids.imageContainer).disable();\n                     },\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.imageContainer,\n               disabled: true,\n               cols: [\n                  {},\n                  {\n                     view: \"uploader\",\n                     id: ids.defaultImageUrl,\n                     template: `<div style=\"text-align:center; font-size: 30px;\">\n                           <div class=\"default-image-holder\">\n                              <div class=\"image-data-field-icon\">\n                                 <i class=\"fa fa-picture-o fa-2x\"></i>\n                                 <div style=\"font-size: 15px;\">${L(\n                                    \"Drag and drop or click here\"\n                                 )}</div>\n                              </div>\n                              <div class=\"image-data-field-image\" style=\"display:none;\">\n                                 <a style=\"\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\" style=\"display:none;\"></i></a>\n                              </div>\n                           </div>\n                        </div>`,\n                     apiOnly: true,\n                     inputName: \"file\",\n                     multiple: false,\n                     name: \"defaultImageUrl\",\n                     height: 105,\n                     width: 150,\n                     on: {\n                        // when a file is added to the uploader\n                        onBeforeFileAdd: function (item) {\n                           // verify file type\n                           const acceptableTypes = [\n                              \"jpg\",\n                              \"jpeg\",\n                              \"bmp\",\n                              \"png\",\n                              \"gif\",\n                           ];\n                           const type = item.type.toLowerCase();\n                           if (acceptableTypes.indexOf(type) == -1) {\n                              //// TODO: multilingual\n                              webix.message(\n                                 L(\"Only [{0}] images are supported\", [\n                                    acceptableTypes.join(\", \"),\n                                 ])\n                              );\n\n                              return false;\n                           }\n                        },\n                        // if an error was returned\n                        onFileUploadError: function (item, response) {\n                           AB.notify.developer(\n                              new Error(\"Error loading image\"),\n                              {\n                                 message: \"Error loading image\",\n                                 response,\n                              }\n                           );\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {},\n               ],\n            },\n         ]);\n      }\n\n      urlImage(id) {\n         return `/file/${id}`;\n      }\n\n      urlUpload(isWebix = true) {\n         return `/file/upload/${this.CurrentObjectID}/${this._CurrentField}/${\n            isWebix ? \"1\" : \"0\"\n         }`;\n      }\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"image\");\n      }\n\n      populate(field) {\n         const ids = this.ids;\n         const uploader = $$(ids.defaultImageUrl);\n         const value = field.settings.defaultImageUrl;\n         const isUseDefaultImage = field.settings.useDefaultImage;\n\n         super.populate(field);\n\n         if (field.settings.useDefaultImage) {\n            $$(ids.imageContainer).enable();\n         }\n\n         if (value && isUseDefaultImage) {\n            //Show default image\n            uploader.attachEvent(\"onAfterRender\", function () {\n               const parentContainer = uploader.$view.querySelector(\n                  \".default-image-holder\"\n               );\n               parentContainer.querySelector(\n                  \".image-data-field-icon\"\n               ).style.display = \"none\";\n\n               const image = parentContainer.querySelector(\n                  \".image-data-field-image\"\n               );\n               image.style.display = \"\";\n               image.style.backgroundImage = `url('/file/${value}')`;\n               image.setAttribute(\"image-uuid\", value);\n\n               parentContainer.querySelector(\".delete-image\").style.display =\n                  \"table-cell\";\n            });\n\n            uploader.$view.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  const parentContainer = uploader.$view.querySelector(\n                     \".default-image-holder\"\n                  );\n                  parentContainer.querySelector(\n                     \".image-data-field-icon\"\n                  ).style.display = \"\";\n\n                  const image = parentContainer.querySelector(\n                     \".image-data-field-image\"\n                  );\n                  image.style.display = \"none\";\n                  image.style.backgroundImage = \"\";\n                  image.setAttribute(\"image-uuid\", \"\");\n\n                  parentContainer.querySelector(\".delete-image\").style.display =\n                     \"none\";\n               }\n            });\n         }\n      }\n\n      show() {\n         const ids = this.ids;\n         const url = this.urlUpload(true);\n\n         const uploader = $$(ids.defaultImageUrl);\n         uploader.config.upload = url;\n         uploader.attachEvent(\"onFileUpload\", function (file, response) {\n            $$(ids.defaultImageUrl).setValue(response.data.uuid);\n\n            const parentContainer = uploader.$view.querySelector(\n               \".default-image-holder\"\n            );\n            parentContainer.querySelector(\n               \".image-data-field-icon\"\n            ).style.display = \"none\";\n\n            const image = parentContainer.querySelector(\n               \".image-data-field-image\"\n            );\n            image.style.display = \"\";\n            image.style.backgroundImage = `url('${this.urlImage(\n               response.data.uuid\n            )}')`;\n\n            image.setAttribute(\"image-uuid\", response.data.uuid);\n\n            parentContainer.querySelector(\".delete-image\").style.display =\n               \"table-cell\";\n         });\n         uploader.attachEvent(\"onAfterRender\", function () {\n            const parentContainer = uploader.$view.querySelector(\n               \".default-image-holder\"\n            );\n            parentContainer.querySelector(\n               \".image-data-field-icon\"\n            ).style.display = \"\";\n\n            const image = parentContainer.querySelector(\n               \".image-data-field-image\"\n            );\n            image.style.display = \"none\";\n            image.style.backgroundImage = \"\";\n            image.setAttribute(\"image-uuid\", \"\");\n\n            parentContainer.querySelector(\".delete-image\").style.display =\n               \"none\";\n         });\n         uploader.addDropZone(uploader.$view);\n         uploader.render();\n\n         super.show();\n      }\n\n      clear() {\n         const ids = this.ids;\n\n         super.clear();\n\n         $$(ids.useWidth).setValue(0);\n         $$(ids.useHeight).setValue(0);\n         $$(ids.useDefaultImage).setValue(0);\n\n         $$(ids.imageWidth).setValue(\"\");\n         $$(ids.imageHeight).setValue(\"\");\n         $$(ids.defaultImageUrl).setValue(\"\");\n      }\n   }\n\n   return ABFieldImage;\n}\n","/*\n * ABFieldJson\n * A Property manager for our ABFieldJson.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const ABField = FFieldClass(AB);\n\n   class ABFieldJson extends ABField {\n      constructor() {\n         super(\"properties_abfield_json\", {});\n      }\n\n      ui() {\n         return super.ui([]);\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"json\");\n      }\n   }\n\n   return ABFieldJson;\n}\n","/*\n * ABFieldList\n * A Property manager for our ABFieldList.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   // const uiConfig = AB.Config.uiSettings();\n\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   const ABFieldSelectivity = AB.Class.ABFieldManager.fieldByKey(\"selectivity\");\n\n   /**\n    * ABFieldListProperty\n    *\n    * Defines the UI Component for this Data Field.  The ui component is responsible\n    * for displaying the properties editor, populating existing data, retrieving\n    * property values, etc.\n    */\n   class ABFieldListProperty extends ABField {\n      constructor() {\n         super(\"properties_abfield_list\", {\n            isMultiple: \"\",\n            hasColors: \"\",\n            default: \"\",\n            multipleDefault: \"\",\n            options: \"\",\n            colorboard: \"\",\n         });\n\n         this.colors = [\n            [\"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\"],\n            [\"#3F51B5\", \"#2196F3\", \"#03A9F4\", \"#00BCD4\"],\n            [\"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\"],\n            [\"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\"],\n            [\"#795548\", \"#9E9E9E\", \"#607D8B\", \"#000000\"],\n         ];\n         // {array}\n         // contains the color hex definitions of the list options when they\n         // are displayed.\n\n         this._originalOptions = [];\n         // {array} [ option.id, ... ]\n         // An array of the original options definitions before editing\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               view: \"checkbox\",\n               name: \"isMultiple\",\n               disallowEdit: true,\n               id: ids.isMultiple,\n               labelRight: L(\"Multiselect\"),\n               labelWidth: 0,\n               value: false,\n               on: {\n                  onChange: (newV /* , oldV */) => {\n                     if (newV == true) {\n                        $$(ids.default).hide();\n                        $$(ids.multipleDefault).show();\n                     } else {\n                        $$(ids.default).show();\n                        $$(ids.multipleDefault).hide();\n                     }\n\n                     this.updateDefaultList();\n                  },\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n            {\n               view: \"checkbox\",\n               name: \"hasColors\",\n               id: ids.hasColors,\n               labelRight: L(\"Customize Colors\"),\n               labelWidth: 0,\n               value: false,\n               on: {\n                  onChange: (newV, oldV) => {\n                     if (newV == oldV) return false;\n\n                     this.toggleColorControl(newV);\n                  },\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n            {\n               view: \"label\",\n               label: `<b>${L(\"Options\")}</b>: `,\n            },\n            {\n               id: ids.options,\n               name: \"options\",\n               css: \"padList\",\n               view: this.AB._App.custom.editlist.view,\n               template:\n                  \"<div style='position: relative;'><i class='ab-color-picker fa fa-lg fa-chevron-circle-down' style='color:#hex#'></i> #value#<i class='ab-new-field-remove fa fa-remove' style='position: absolute; top: 7px; right: 7px;'></i></div>\",\n               autoheight: true,\n               drag: true,\n               editable: true,\n               hex: \"\",\n               editor: \"text\",\n               editValue: \"value\",\n               onClick: {\n                  \"ab-new-field-remove\": (e, itemId /*, trg */) => {\n                     // Remove option item\n                     // check that item is in saved data already\n                     const matches = (this._originalOptions || []).filter(\n                        (x) => {\n                           return x.id == itemId;\n                        }\n                     )[0];\n                     if (matches) {\n                        // Ask the user if they want to remove option\n                        webix\n                           .confirm({\n                              title: L(\"Delete Option\"),\n                              text: L(\n                                 \"All exisiting entries with this value will be cleared. Are you sure you want to delete this option?\"\n                              ),\n                              type: \"confirm-warning\",\n                           })\n                           .then(() => {\n                              // This is the \"Yes\"/\"OK\" click\n\n                              // store the item that will be deleted for the save action\n\n                              this._CurrentField.pendingDeletions =\n                                 this._CurrentField.pendingDeletions || [];\n                              this._CurrentField.pendingDeletions.push(itemId);\n                              $$(ids.options).remove(itemId);\n                           });\n                     }\n                     // If this item did not be saved, then remove from list\n                     else {\n                        $$(ids.options).remove(itemId);\n                     }\n                     // NOTE: the edit list can be in process of showing the editor here.\n                     // .editCancel() only works if it is already being shown.  So we do\n                     // a little timeout to allow it to technically show, but then cancel it\n\n                     // setTimeout(() => {\n                     //    $$(ids.options).editCancel();\n                     // }, 0);\n\n                     // e.stopPropagation();\n                     return false;\n                  },\n                  \"ab-color-picker\": (e, itemID, trg) => {\n                     webix\n                        .ui({\n                           id: ids.colorboard,\n                           view: \"popup\",\n                           body: {\n                              view: \"colorboard\",\n                              type: \"classic\",\n                              id: \"color\",\n                              width: 125,\n                              height: 150,\n                              palette: this.colors,\n                              left: 125,\n                              top: 150,\n                              on: {\n                                 onSelect: (hex) => {\n                                    const vals = $$(ids.options).getItem(\n                                       itemID\n                                    );\n                                    vals.hex = hex;\n                                    $$(ids.options).updateItem(itemID, vals);\n                                    $$(ids.colorboard).hide();\n                                 },\n                              },\n                           },\n                        })\n                        .show(trg, { x: -7 });\n                     return false;\n                  },\n               },\n               on: {\n                  onAfterAdd: () => {\n                     this.updateDefaultList();\n                  },\n                  onAfterEditStop: () => {\n                     this.updateDefaultList();\n                  },\n                  onAfterDelete: () => {\n                     this.updateDefaultList();\n                  },\n                  onAfterRender: () => {\n                     this.toggleColorControl($$(ids.hasColors).getValue());\n                  },\n               },\n            },\n            {\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add new option\"),\n               click: () => {\n                  let itemId = webix.uid();\n                  let nextHex = this.getNextHex();\n                  let optionElem = $$(ids.options);\n                  if (!optionElem) return;\n\n                  optionElem.add(\n                     {\n                        id: itemId,\n                        value: \"\",\n                        hex: nextHex,\n                        isNew: true,\n                     },\n                     optionElem.count()\n                  );\n\n                  if (optionElem.exists(itemId)) optionElem.edit(itemId);\n               },\n               on: {\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Default:\"),\n                     width: 55,\n                  },\n                  {\n                     id: ids.default,\n                     placeholder: L(\"Select Default\"),\n                     name: \"default\",\n                     view: \"richselect\",\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.multipleDefault,\n               name: \"multipleDefault\",\n               view: \"forminput\",\n               labelWidth: 0,\n               height: 44,\n               borderless: true,\n               hidden: true,\n               body: {\n                  view: this.AB._App.custom.focusabletemplate.view,\n                  css: \"customFieldCls\",\n                  borderless: true,\n                  template:\n                     `<label style=\"width: 80px;text-align: left;line-height:32px;\" class=\"webix_inp_label\">${L(\n                        \"Default\"\n                     )}</label>` +\n                     '<div style=\"margin-left: 80px; height: 36px;\" class=\"list-data-values form-entry\"></div>',\n               },\n            },\n         ]);\n      }\n\n      clear() {\n         const ids = this.ids;\n         $$(ids.isMultiple).setValue(0);\n         $$(ids.hasColors).setValue(0);\n         $$(ids.options).clearAll();\n\n         $$(ids.default).define(\"options\", []);\n         $$(ids.default).setValue(this.FieldClass()?.defaultValues()?.default);\n\n         const domNode = $$(ids.multipleDefault).$view.querySelector(\n            \".list-data-values\"\n         );\n         if (domNode && domNode.selectivity) {\n            domNode.selectivity.setData([]);\n         }\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"list\");\n      }\n\n      getNextHex() {\n         const usedColors = [];\n         $$(this.ids.options)?.data.each(function (item) {\n            usedColors.push(item.hex);\n         });\n         const allColors = [];\n         this.colors.forEach((c) => {\n            c?.forEach?.((j) => {\n               allColors.push(j);\n            });\n         });\n         let newHex = \"#3498db\";\n         for (let i = 0; i < allColors.length; i++) {\n            if (usedColors.indexOf(allColors[i]) == -1) {\n               newHex = allColors[i];\n               break;\n            }\n         }\n         return newHex;\n      }\n\n      populate(field) {\n         super.populate(field);\n\n         // store the options that currently exisit to compare later for deletes\n         this._originalOptions = field?.settings?.options ?? [];\n\n         // set options to webix list\n         let opts = [];\n\n         // we need to access the fields -> object -> model to run updates on save (may be refactored later)\n         this._CurrentField = field;\n         if (this._CurrentField) {\n            // empty this out so we don't try to delete already deleted options (or delete options that we canceled before running)\n            this._CurrentField.pendingDeletions = [];\n            opts = (field?.settings.options || []).map((opt) => {\n               return {\n                  id: opt.id,\n                  value: opt.text,\n                  hex: opt.hex,\n                  translations: opt.translations,\n               };\n            });\n         }\n         const $opts = $$(this.ids.options);\n         $opts.parse(opts);\n         $opts.refresh();\n\n         setTimeout(() => {\n            this.updateDefaultList();\n         }, 10);\n      }\n\n      toggleColorControl(value) {\n         const colorPickers = $$(this.ids.options)?.$view.querySelectorAll(\n            \".ab-color-picker\"\n         );\n         colorPickers?.forEach(function (itm) {\n            if (value == 1) itm.classList.remove(\"hide\");\n            else itm.classList.add(\"hide\");\n         });\n      }\n\n      updateDefaultList() {\n         const ids = this.ids;\n         const settings = this._CurrentField?.settings;\n\n         const optList = $$(ids.options)\n            .find({})\n            .map(function (opt) {\n               return {\n                  id: opt.id,\n                  value: opt.value,\n                  hex: opt.hex,\n               };\n            });\n\n         if ($$(ids.isMultiple).getValue()) {\n            // Multiple default selector\n            const domNode = $$(ids.multipleDefault).$view.querySelector(\n               \".list-data-values\"\n            );\n            if (!domNode) return false;\n\n            const values = this.values();\n\n            const selectivityRender = new ABFieldSelectivity(values, this);\n\n            selectivityRender.selectivityRender(domNode, {\n               multiple: true,\n               data: settings?.multipleDefault ?? [],\n               placeholder: L(\"Select items\"),\n               items: optList.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     text: opt.value,\n                     hex: opt.hex,\n                  };\n               }),\n            });\n            domNode.addEventListener(\"change\", function (e) {\n               if (e.value.length) {\n                  $$(ids.multipleDefault).define(\"required\", false);\n               } else if (\n                  $$(ids.multipleDefault)\n                     .$view.querySelector(\".webix_inp_label\")\n                     .classList.contains(\"webix_required\")\n               ) {\n                  $$(ids.multipleDefault).define(\"required\", true);\n               }\n            });\n         } else {\n            // Single default selector\n            $$(ids.default).define(\"options\", optList);\n            if (settings?.default) $$(ids.default).setValue(settings.default);\n\n            $$(ids.default).refresh();\n         }\n      }\n\n      /*\n       * @function requiredOnChange\n       *\n       * The ABField.definitionEditor implements a default operation\n       * to look for a default field and set it to a required field\n       * if the field is set to required\n       *\n       * if you want to override that functionality, implement this fn()\n       *\n       * @param {string} newVal\tThe new value of label\n       * @param {string} oldVal\tThe previous value\n       */\n      // requiredOnChange: (newVal, oldVal, ids) => {\n\n      // \t// when require number, then default value needs to be reqired\n      // \t$$(ids.default).define(\"required\", newVal);\n      // \t$$(ids.default).refresh();\n\n      // \tif ($$(ids.multipleDefault).$view.querySelector(\".webix_inp_label\")) {\n      // \t\tif (newVal) {\n      // \t\t\t$$(ids.multipleDefault).define(\"required\", true);\n      // \t\t\t$$(ids.multipleDefault).$view.querySelector(\".webix_inp_label\").classList.add(\"webix_required\");\n      // \t\t} else {\n      // \t\t\t$$(ids.multipleDefault).define(\"required\", false);\n      // \t\t\t$$(ids.multipleDefault).$view.querySelector(\".webix_inp_label\").classList.remove(\"webix_required\");\n      // \t\t}\n      // \t}\n\n      // },\n\n      values() {\n         const values = super.values();\n\n         const ids = this.ids;\n\n         // Get options list from UI, then set them to settings\n         values.settings.options = [];\n         $$(ids.options).data.each((opt) => {\n            let optionId = opt.id;\n\n            // If it is a new option item, then .id uses string instead of UID\n            // for support custom index\n            if (\n               opt.isNew &&\n               opt.value &&\n               !values.settings.options.filter((o) => o.id == opt.value).length\n            ) {\n               optionId = opt.value;\n            }\n\n            values.settings.options.push({\n               id: optionId,\n               text: opt.value,\n               hex: opt.hex,\n               translations: opt.translations,\n            });\n         });\n\n         // Un-translate options list\n         values.settings.options.forEach((opt) => {\n            this.AB.Multilingual.unTranslate(opt, opt, [\"text\"]);\n         });\n\n         // Set multiple default value\n         values.settings.multipleDefault = [];\n         const domNode = $$(ids.multipleDefault).$view.querySelector(\n            \".list-data-values\"\n         );\n         if (domNode && domNode.selectivity) {\n            values.settings.multipleDefault =\n               domNode.selectivity.getData() || [];\n         }\n\n         return values;\n      }\n   }\n\n   return ABFieldListProperty;\n}\n","/*\n * ABFieldLongText\n * A Property manager for our ABFieldLongText.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const uiConfig = AB.Config.uiSettings();\n\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldLongText extends ABField {\n      constructor() {\n         super(\"properties_abfield_longtext\", {\n            default: \"\",\n            defaultCheckbox: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               view: \"layout\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Default Value:\"),\n                     align: \"right\",\n                     width: 100,\n                  },\n                  {\n                     id: ids.defaultCheckbox,\n                     view: \"checkbox\",\n                     width: 30,\n                     value: 0,\n                     on: {\n                        onChange: (newv) => {\n                           this.checkboxDefaultValue(newv);\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     id: ids.default,\n                     view: \"text\",\n                     name: \"default\",\n                     placeholder: L(\"Enter default value\"),\n                     disabled: true,\n                     labelWidth: uiConfig.labelWidthXLarge,\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"checkbox\",\n               name: \"supportMultilingual\",\n               disallowEdit: true,\n               labelRight: L(\"Support multilingual\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               value: false,\n               on: {\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n         ]);\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"LongText\");\n      }\n\n      populate(field) {\n         super.populate(field);\n         const value = field.settings.default === \"\" ? 0 : 1;\n         $$(this.ids.defaultCheckbox).setValue(value);\n      }\n\n      show() {\n         super.show();\n         $$(this.ids.defaultCheckbox).setValue(0);\n      }\n\n      checkboxDefaultValue(state) {\n         if (state == 0) {\n            $$(this.ids.default).disable();\n            $$(this.ids.default).setValue(\"\");\n         } else {\n            $$(this.ids.default).enable();\n         }\n      }\n   }\n\n   return ABFieldLongText;\n}\n","/*\n * ABFieldNumber\n * A Property manager for our ABFieldNumber.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const uiConfig = AB.Config.uiSettings();\n\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldNumberProperty extends ABField {\n      constructor() {\n         super(\"properties_abfield_number\", {\n            default: \"\",\n            decimalOptions: \"\",\n            typeDecimalPlaces: \"\",\n            typeRounding: \"\",\n            validation: \"\",\n            validateMinimum: \"\",\n            validateMaximum: \"\",\n\n            defaultCheckbox: \"\",\n            validateView: \"\",\n            typeDecimals: \"\",\n            typeFormat: \"\",\n            typeThousands: \"\",\n         });\n      }\n\n      ui() {\n         const FC = this.FieldClass();\n         const ids = this.ids;\n         return super.ui([\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Default Value:\"),\n                     align: \"right\",\n                     width: 100,\n                  },\n                  {\n                     id: ids.defaultCheckbox,\n                     view: \"checkbox\",\n                     width: 30,\n                     value: 0,\n                     on: {\n                        onChange: (newv) => {\n                           this.checkboxDefaultValue(newv);\n                        },\n                        onAfterRender: () => {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     id: ids.default,\n                     view: \"text\",\n                     name: \"default\",\n                     placeholder: L(\"Enter default value\"),\n                     disabled: true,\n                     labelWidth: uiConfig.labelWidthXLarge,\n                     on: {\n                        onChange: (newVal, oldVal) => {\n                           this.numValidation(newVal, oldVal, ids.default);\n                        },\n                        onAfterRender: () => {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Format:\"),\n                     align: \"right\",\n                     width: 100,\n                  },\n                  {\n                     id: ids.typeFormat,\n                     view: \"richselect\",\n                     name: \"typeFormat\",\n                     value: \"none\",\n                     labelWidth: uiConfig.labelWidthXLarge,\n                     options: FC.formatList(L),\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Decimals:\"),\n                     align: \"right\",\n                     width: 100,\n                  },\n                  {\n                     id: ids.typeDecimals,\n                     view: \"segmented\",\n                     name: \"typeDecimals\",\n                     disallowEdit: true,\n                     labelWidth: uiConfig.labelWidthXLarge,\n                     value: \"none\",\n                     options: FC.delimiterList(),\n                     on: {\n                        onChange: (newVal /*, oldVal */) => {\n                           this.segmentedDecimals(newVal);\n                        },\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               // show these options as sub optionsof our \"typeDecimals\"\n               id: ids.decimalOptions,\n               hidden: true,\n               disabled: true,\n               rows: [\n                  {\n                     cols: [\n                        { width: 20 },\n                        {\n                           view: \"label\",\n                           label: L(\"Places:\"),\n                           align: \"right\",\n                           width: 100,\n                        },\n                        {\n                           id: ids.typeDecimalPlaces,\n                           view: \"counter\",\n                           disallowEdit: true,\n                           name: \"typeDecimalPlaces\",\n                           width: 102,\n                           on: {\n                              onAfterRender() {\n                                 AB.ClassUI.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        { width: 20 },\n                        {\n                           view: \"label\",\n                           label: L(\"Rounding:\"),\n                           align: \"right\",\n                           width: 100,\n                        },\n                        {\n                           id: ids.typeRounding,\n                           view: \"richselect\",\n                           name: \"typeRounding\",\n                           value: \"none\",\n                           vertical: true,\n                           options: [\n                              { id: \"none\", value: L(\"Default\") },\n                              {\n                                 id: \"roundUp\",\n                                 value: L(\"Round Up\"),\n                              },\n                              {\n                                 id: \"roundDown\",\n                                 value: L(\"Round Down\"),\n                              },\n                           ],\n                           on: {\n                              onAfterRender() {\n                                 AB.ClassUI.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Thousands:\"),\n                     align: \"right\",\n                     width: 100,\n                  },\n                  {\n                     id: ids.typeThousands,\n                     view: \"segmented\",\n                     name: \"typeThousands\",\n                     value: \"none\",\n                     options: FC.delimiterList(),\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Validation:\"),\n                     align: \"right\",\n                     width: 100,\n                  },\n                  {\n                     view: \"switch\",\n                     id: ids.validation,\n                     name: \"validation\",\n                     value: 0,\n                     width: 55,\n                     on: {\n                        onChange: (newVal) => {\n                           this.switchValidation(newVal);\n                        },\n\n                        onAfterRender: () => {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.validateView,\n               hidden: true,\n               disabld: true,\n               rows: [\n                  {\n                     cols: [\n                        { width: 20 },\n                        {\n                           view: \"label\",\n                           label: L(\"Minimum:\"),\n                           align: \"right\",\n                           width: 100,\n                        },\n                        {\n                           view: \"text\",\n                           id: ids.validateMinimum,\n                           name: \"validateMinimum\",\n                           placeholder: L(\"Minimum Number\"),\n                           on: {\n                              onChange: (newVal, oldVal) => {\n                                 this.numValidation(\n                                    newVal,\n                                    oldVal,\n                                    ids.validateMinimum\n                                 );\n                              },\n\n                              onAfterRender: () => {\n                                 AB.ClassUI.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        { width: 20 },\n                        {\n                           view: \"label\",\n                           label: L(\"Maximum:\"),\n                           align: \"right\",\n                           width: 100,\n                        },\n                        {\n                           view: \"text\",\n                           id: ids.validateMaximum,\n                           name: \"validateMaximum\",\n                           placeholder: L(\"Maximum Number\"),\n                           on: {\n                              onChange: (newVal, oldVal) => {\n                                 this.numValidation(\n                                    newVal,\n                                    oldVal,\n                                    ids.validateMaximum\n                                 );\n                              },\n\n                              onAfterRender() {\n                                 AB.ClassUI.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ]);\n      }\n\n      numValidation(newVal, oldVal, id) {\n         // Validate number\n         if (!new RegExp(\"^[0-9.]*$\").test(newVal)) {\n            $$(id).setValue(oldVal || \"\");\n         }\n      }\n\n      checkboxDefaultValue(state) {\n         if (state == 0) {\n            $$(this.ids.default).disable();\n            $$(this.ids.default).setValue(\"\");\n         } else {\n            $$(this.ids.default).enable();\n         }\n      }\n\n      segmentedDecimals(val) {\n         if (val == \"none\") {\n            $$(this.ids.decimalOptions).disable();\n            $$(this.ids.decimalOptions).hide();\n         } else {\n            $$(this.ids.decimalOptions).enable();\n            $$(this.ids.decimalOptions).show();\n         }\n      }\n\n      switchValidation(state) {\n         if (state) {\n            $$(this.ids.validateView).enable();\n            $$(this.ids.validateView).show();\n         } else {\n            $$(this.ids.validateView).disable();\n            $$(this.ids.validateView).hide();\n         }\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"number\");\n      }\n\n      isValid() {\n         let isValid = super.isValid();\n\n         const values = this.formValues();\n\n         const defaultValue = values[\"default\"];\n         let fDefault = 0;\n         if (defaultValue !== \"\") {\n            fDefault = parseFloat(defaultValue);\n         }\n\n         // if required then default value must be set:\n         const required = values[\"required\"];\n         if (required) {\n            if (defaultValue === \"\") {\n               this.markInvalid(\n                  \"default\",\n                  L(\"If a field is required, you must set a default value.\")\n               );\n               isValid = false;\n            }\n         }\n\n         // Default Value must be within any min / max value set.\n         if (values[\"validation\"]) {\n            const minValue = values[\"validateMinimum\"];\n            const maxValue = values[\"validateMaximum\"];\n            let fmin = 0;\n            let fmax = 0;\n\n            if (minValue !== \"\") {\n               fmin = parseFloat(minValue);\n            }\n\n            if (maxValue !== \"\") {\n               fmax = parseFloat(maxValue);\n            }\n\n            // Default Value must be within any min / max value set.\n            if (defaultValue !== \"\") {\n               if (minValue !== \"\") {\n                  if (fDefault < fmin) {\n                     this.markInvalid(\n                        \"default\",\n                        L(\n                           \"default value must be within any min / max value setting\"\n                        )\n                     );\n                     isValid = false;\n                  }\n               }\n\n               if (maxValue !== \"\") {\n                  if (fDefault > fmax) {\n                     this.markInvalid(\n                        \"default\",\n                        L(\n                           \"default value must be within any min / max value setting\"\n                        )\n                     );\n                     isValid = false;\n                  }\n               }\n            }\n\n            // Min / Max values must be appropriate: min <= max\n            if (minValue != \"\" && maxValue != \"\") {\n               if (fmin > fmax) {\n                  this.markInvalid(\n                     \"validateMinimum\",\n                     L(\"minimum value must be <= maximum value\")\n                  );\n                  this.markInvalid(\n                     \"validateMaximum\",\n                     L(\"maximum value must be >= minimum value\")\n                  );\n                  isValid = false;\n               }\n            }\n         }\n\n         return isValid;\n      }\n\n      populate(field) {\n         const ids = this.ids;\n         super.populate(field);\n\n         if (field.settings.default === \"\") {\n            $$(ids.defaultCheckbox).setValue(0);\n         } else {\n            $$(ids.defaultCheckbox).setValue(1);\n         }\n\n         if (field.settings.validation === 0) {\n            $$(ids.validateView).hide();\n         } else {\n            $$(ids.validateView).show();\n         }\n\n         if (field.settings.typeDecimals === \"none\") {\n            $$(ids.decimalOptions).hide();\n            $$(ids.decimalOptions).disable();\n         } else {\n            $$(ids.decimalOptions).enable();\n            $$(ids.decimalOptions).show();\n            $$(ids.typeDecimalPlaces).enable();\n            $$(ids.typeDecimalPlaces).show();\n            $$(ids.typeRounding).enable();\n            $$(ids.typeRounding).show();\n         }\n      }\n   }\n\n   return ABFieldNumberProperty;\n}\n","/*\n * ABField\n * A Generic Property manager for All our fields.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const uiConfig = AB.Config.uiSettings();\n\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldStringProperty extends ABField {\n      constructor() {\n         super(\"properties_abfield_string\", {\n            default: \"\",\n            supportMultilingual: \"\",\n\n            defaultCheckbox: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n         return super.ui([\n            // {\n            //    view: \"text\",\n            //    id: ids.default,\n            //    name: \"default\",\n            //    labelWidth: uiConfig.labelWidthXLarge,\n            //    label: L(\"Default\"),\n            //    placeholder: L(\"Enter default value\"),\n            //    on: {\n            //       onAfterRender() {\n            //          AB.ClassUI.CYPRESS_REF(this);\n            //       },\n            //    },\n            // },\n            // {\n            //    view: \"checkbox\",\n            //    id: ids.supportMultilingual,\n            //    name: \"supportMultilingual\",\n            //    disallowEdit: true,\n            //    labelRight: L(\"Support multilingual\"),\n            //    labelWidth: uiConfig.labelWidthCheckbox,\n            //    value: false,\n            //    on: {\n            //       onAfterRender() {\n            //          AB.ClassUI.CYPRESS_REF(this);\n            //       },\n            //    },\n            // },\n            {\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Default Value:\"),\n                     align: \"right\",\n                     width: 100,\n                  },\n                  {\n                     id: ids.defaultCheckbox,\n                     view: \"checkbox\",\n                     width: 30,\n                     value: 0,\n                     on: {\n                        onChange: (newv) => {\n                           this.checkboxDefaultValue(newv);\n                        },\n                        onAfterRender: () => {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"text\",\n                     id: ids.default,\n                     name: \"default\",\n                     placeholder: L(\"Enter default value\"),\n                     disabled: true,\n                     labelWidth: uiConfig.labelWidthXLarge,\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"checkbox\",\n               id: ids.supportMultilingual,\n               name: \"supportMultilingual\",\n               disallowEdit: true,\n               labelRight: L(\"Support multilingual\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               value: false,\n               on: {\n                  onAfterRender() {\n                     AB.ClassUI.CYPRESS_REF(this);\n                  },\n               },\n            },\n         ]);\n      }\n\n      checkboxDefaultValue(state) {\n         if (state === 0) {\n            $$(this.ids.default).disable();\n            $$(this.ids.default).setValue(\"\");\n         } else {\n            $$(this.ids.default).enable();\n         }\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"string\");\n      }\n\n      populate(field) {\n         const ids = this.ids;\n         super.populate(field);\n\n         if (field.settings.default === \"\") {\n            $$(ids.defaultCheckbox).setValue(0);\n         } else {\n            $$(ids.defaultCheckbox).setValue(1);\n         }\n      }\n   }\n\n   return ABFieldStringProperty;\n}\n","/*\n * ABFieldTextFormula\n * A Property manager for our ABFieldTextFormula.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const uiConfig = AB.Config.uiSettings();\n\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldTextFormula extends ABField {\n      constructor() {\n         super(\"properties_abfield_textformula\", {\n            textFormula: \"\",\n            formulaSuggest: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               view: \"layout\",\n               cols: [\n                  {\n                     id: ids.textFormula,\n                     view: \"textarea\",\n                     // label: L(\"Text Formula\"),\n                     name: \"textFormula\",\n                     editor: \"text\",\n                     labelWidth: uiConfig.labelWidthLarge,\n                     placeholder: L(\"Text Formula\"),\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  { view: \"spacer\", width: 15 },\n                  {\n                     view: \"layout\",\n                     rows: [\n                        { view: \"spacer\", height: 5 },\n                        {\n                           id: ids.formulaSuggest,\n                           name: \"formulaSuggest\",\n                           view: \"dataview\",\n                           xCount: 1,\n                           // yCount: 2.8,\n                           // hidden: true,\n                           select: true,\n                           type: {\n                              height: 30,\n                              width: 246,\n                           },\n                           template: \"#value#\",\n                           on: {\n                              onItemClick: (id) => {\n                                 const item = $$(ids.formulaSuggest).getItem(\n                                    id\n                                 );\n                                 const inputSuggestString =\n                                    item.type == \"field\"\n                                       ? \"{\" + item.value + \"}\"\n                                       : item.value;\n                                 $$(ids.textFormula).setValue(\n                                    $$(ids.textFormula).getValue() +\n                                       inputSuggestString\n                                 );\n                                 $$(ids.formulaSuggest).unselect();\n                              },\n                              onAfterRender: function () {\n                                 ABField.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        { view: \"spacer\", height: 5 },\n                     ],\n                  },\n               ],\n            },\n         ]);\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"TextFormula\");\n      }\n      show() {\n         super.show();\n         this.loadSuggestions();\n      }\n\n      populate(field) {\n         super.populate(field);\n         this.loadSuggestions();\n      }\n\n      loadSuggestions() {\n         const ids = this.ids;\n         const FC = this.FieldClass();\n         // Load the object's fields\n         const fields = this.CurrentObject.fields()\n            .filter((field) => {\n               return (\n                  field.key != \"formula\" &&\n                  field.key != \"TextFormula\" &&\n                  !field.isConnection\n               );\n            })\n            .map((field) => {\n               return {\n                  id: field.id,\n                  value: field.columnName,\n                  type: \"field\",\n               };\n            });\n         // Add the common options\n         const formulaData = fields.concat(FC.getBuildInFunction());\n         $$(ids.formulaSuggest).clearAll();\n         $$(ids.formulaSuggest).parse(formulaData);\n      }\n   }\n\n   return ABFieldTextFormula;\n}\n","/*\n * ABFieldTree\n * A Property manager for our ABFieldTree.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const ABField = FFieldClass(AB);\n\n   class ABFieldTree extends ABField {\n      constructor() {\n         super(\"properties_abfield_tree\", {\n            options: \"\",\n            popup: \"\",\n            tree: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               view: \"button\",\n               type: \"icon\",\n               icon: \"fa fa-plus\",\n               height: 30,\n               click: () => {\n                  const itemId = webix.uid().toString();\n                  $$(ids.options).data.add({\n                     id: itemId,\n                     text: \"\",\n                  });\n                  $$(ids.options).openAll();\n                  $$(ids.options).config.height =\n                     $$(ids.options).count() * 28 + 18; // Number of pages plus 9px of padding top and bottom\n                  $$(ids.options).resize();\n                  $$(ids.options).edit(itemId);\n               },\n               on: {\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n            {\n               id: ids.options,\n               name: \"options\",\n               // css: \"padList\",\n               css: { background: \"transparent\" },\n               view: this.AB.custom.edittree.view,\n               template:\n                  \"<div style='position: relative;'><i class='ab-new-field-add fa fa-plus' style='position: relative; right: 0px;'></i> #text#<i class='ab-new-field-remove fa fa-remove' style='position: absolute; top: 7px; right: 7px;'></i></div>\",\n               autoheight: true,\n               drag: true,\n               editor: \"text\",\n               editable: true,\n               editValue: \"text\",\n               onClick: {\n                  \"ab-new-field-remove\": (e, itemId) => {\n                     // Remove option item\n                     $$(ids.options).remove(itemId);\n                     $$(ids.options).config.height = 0;\n                     $$(ids.options).config.height =\n                        $$(ids.options).count() * 28 + 18;\n                     // stop the default click action for this item\n                     return false;\n                  },\n                  \"ab-new-field-add\": (e, thisId) => {\n                     // Add option item\n                     const itemId = webix.uid().toString();\n                     const parentId = thisId.toString();\n                     $$(ids.options).data.add(\n                        {\n                           id: itemId,\n                           text: \"\",\n                        },\n                        null,\n                        parentId\n                     );\n                     $$(ids.options).openAll();\n                     $$(ids.options).config.height =\n                        $$(ids.options).count() * 28 + 18; // Number of pages plus 9px of padding top and bottom\n                     $$(ids.options).resize();\n                     $$(ids.options).edit(itemId);\n\n                     // stop the default click action for this item\n                     return false;\n                  },\n               },\n            },\n         ]);\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"tree\");\n      }\n\n      clear() {\n         const ids = this.ids;\n         $$(ids.options).clearAll();\n         $$(ids.options).config.height = 0;\n         $$(ids.options).resize();\n         $$(ids.options).refresh();\n      }\n\n      values() {\n         // Get options list from UI, then set them to settings\n         const values = super.values();\n         values.settings.options = $$(this.ids.options).serialize();\n         return values;\n      }\n\n      populate(field) {\n         const ids = this.ids;\n         $$(ids.options).clearAll();\n         $$(ids.options).parse(field.settings.options);\n         $$(ids.options).openAll();\n         $$(ids.options).config.height = $$(ids.options).count() * 28 + 18; // Number of pages plus 9px of padding top and bottom\n         $$(ids.options).resize();\n         $$(ids.options).refresh();\n      }\n   }\n\n   return ABFieldTree;\n}\n","/*\n * ABFieldUser\n * A Property manager for our ABFieldUser.\n */\n\nimport FFieldClass from \"./ABField\";\n\nexport default function (AB) {\n   const uiConfig = AB.Config.uiSettings();\n\n   const ABField = FFieldClass(AB);\n   const L = ABField.L();\n\n   class ABFieldUser extends ABField {\n      constructor() {\n         super(\"properties_abfield_user\", {\n            editable: \"\",\n            isMultiple: \"\",\n            isCurrentUser: \"\",\n            isShowProfileImage: \"\",\n            isShowUsername: \"\",\n         });\n      }\n\n      ui() {\n         // const FC = this.FieldClass();\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               view: \"checkbox\",\n               name: \"isMultiple\",\n               id: ids.isMultiple,\n               disallowEdit: true,\n               labelRight: L(\"Allow multiple users\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n            {\n               cols: [\n                  {\n                     view: \"checkbox\",\n                     name: \"isCurrentUser\",\n                     id: ids.isCurrentUser,\n                     labelRight: L(\"Default value as current user\"),\n                     labelWidth: uiConfig.labelWidthCheckbox,\n                     on: {\n                        onChange: function (newValue /*, oldValue*/) {\n                           if (newValue == 0) {\n                              $$(ids.editable).setValue(0);\n                              $$(ids.editable).hide();\n                           } else {\n                              $$(ids.editable).setValue(1);\n                              $$(ids.editable).show();\n                           }\n                        },\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"checkbox\",\n                     name: \"editable\",\n                     hidden: true,\n                     id: ids.editable,\n                     labelRight: L(\"Editable\"),\n                     labelWidth: uiConfig.labelWidthCheckbox,\n                     on: {\n                        onAfterRender: function () {\n                           ABField.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"checkbox\",\n               name: \"isShowProfileImage\",\n               id: ids.isShowProfileImage,\n               labelRight: L(\"Show Profile Image\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n            {\n               view: \"checkbox\",\n               name: \"isShowUsername\",\n               id: ids.isShowUsername,\n               labelRight: L(\"Show Username\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onAfterRender: function () {\n                     ABField.CYPRESS_REF(this);\n                  },\n               },\n            },\n         ]);\n      }\n\n      /**\n       * @method FieldClass()\n       * Call our Parent's _FieldClass() helper with the proper key to return\n       * the ABFieldXXX class represented by this Property Editor.\n       * @return {ABFieldXXX Class}\n       */\n      FieldClass() {\n         return super._FieldClass(\"user\");\n      }\n   }\n\n   return ABFieldUser;\n}\n","/*\n * ABProcessEnd\n *\n * Display the form for entering the properties for a new\n * End Task.\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UIProcessEnd extends UIClass {\n      constructor() {\n         super(\"properties_process_end\", {\n            name: \"\",\n         });\n      }\n\n      static get key() {\n         return \"End\";\n      }\n\n      // {string}\n      // This should match the ABProcessEndCore.defaults().key value.\n\n      ui() {\n         let ids = this.ids;\n         return {\n            id: ids.component,\n            rows: [\n               { view: \"label\", label: L(\"Terminate End Event\") },\n               {\n                  view: \"label\",\n                  label: L(\"Stops the flow of the process.\"),\n               },\n               {\n                  view: \"form\",\n                  elements: [\n                     {\n                        id: ids.name,\n                        view: \"text\",\n                        label: L(\"Name\"),\n                        name: \"name\",\n                        value: \"\",\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n\n      populate(element) {\n         let ids = this.ids;\n         $$(ids.name).setValue(element.name);\n      }\n\n      /**\n       * values()\n       * return an object hash representing the values for this component.\n       * @return {json}\n       */\n      values() {\n         var obj = {};\n         var ids = this.ids;\n         obj.label = $$(ids.name)?.getValue();\n         return obj;\n      }\n   }\n\n   return UIProcessEnd;\n}\n","/*\n * ABProcessparticipant\n *\n * Display the form for entering the properties for a Process\n * Participant Element\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\nimport FABProcessParticipant from \"./ABProcessParticipant_selectManagersUI\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   const ABProcessParticipantUsers = FABProcessParticipant(AB);\n\n   class ABProcessparticipant extends UIClass {\n      constructor() {\n         super(\"properties_process_participant\", {\n            name: \"\",\n            users: \"\",\n         });\n\n         this.users = new ABProcessParticipantUsers(\n            this.ids.component + \"_users_\"\n         );\n      }\n\n      static get key() {\n         return \"process.participant\";\n      }\n      // {string}\n      // This should match the ABProcessParticipant.defaults().key value.\n\n      uiUser(obj) {\n         var usersUI = this.users.ui(obj ?? {});\n         return {\n            id: this.ids.users,\n            rows: [usersUI],\n            paddingY: 10,\n         };\n      }\n\n      ui(obj) {\n         // we are creating these on the fly, and should have CurrentApplication\n         // defined already.\n\n         let ids = this.ids;\n         let ui = {\n            id: ids.component,\n            rows: [\n               { view: \"label\", label: L(\"Process Participant:\") },\n               {\n                  view: \"label\",\n                  label: L(\n                     \"This element defines a group of users that are responsible for the tasks contained within.\"\n                  ),\n               },\n               {\n                  view: \"form\",\n                  id: ids.form,\n                  // width: 300,\n                  elements: [\n                     {\n                        id: ids.name,\n                        view: \"text\",\n                        label: L(\"Name\"),\n                        name: \"name\",\n                        value: this.name,\n                     },\n                     // Select Users Template Goes here\n                  ],\n               },\n            ],\n         };\n         let usersUI = { id: ids.users };\n         // If we don't have any sub lanes, then offer the select user options:\n         if (obj?.laneIDs && obj?.laneIDs.length == 0) {\n            usersUI = this.uiUser(obj ?? {});\n         }\n         ui.rows[2].elements.push(usersUI);\n\n         return ui;\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n\n      // applicationLoad(application) {\n      //    super.applicationLoad(application);\n\n      //    $$(this.ids.objList).define(\"data\", listObj);\n      //    $$(this.ids.objList).refresh();\n      // }\n\n      // show() {\n      //    super.show();\n      //    AppList.show();\n      // }\n\n      populate(obj) {\n         let ids = this.ids;\n\n         $$(ids.name).setValue(obj.name);\n\n         if (obj.laneIDs && obj.laneIDs.length == 0) {\n            var usersUI = this.uiUser(obj ?? {});\n            webix.ui(usersUI, $$(ids.users));\n         }\n      }\n\n      /**\n       * values()\n       * return an object hash representing the values for this component.\n       * @return {json}\n       */\n      // values() {\n      //    var obj = {};\n      //    var ids = this.ids;\n\n      //    obj.label = $$(ids.name)?.getValue();\n      //    obj.objectID = $$(ids.objList)?.getValue();\n      //    obj.lifecycleKey = $$(ids.lifecycleList).getValue();\n      //    obj.triggerKey = `${obj.objectID}.${obj.lifecycleKey}`;\n\n      //    return obj;\n      // }\n\n      values() {\n         var obj = {};\n         var ids = this.ids;\n\n         obj.label = $$(ids.name).getValue();\n\n         // if (obj.laneIDs.length == 0) {\n         var userDef = this.users.values();\n         Object.keys(userDef).forEach((k) => {\n            obj[k] = userDef[k];\n         });\n         // }\n         return obj;\n      }\n   }\n\n   return ABProcessparticipant;\n}\n","/*\n * ABProcessParticipant_SelectManagersUI\n *\n * Display the form for entering how to select \"managers\".\n * this form allows you to choose Roles, or Users directly.\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UIProcessParticipant_SelectManagersUI extends UIClass {\n      constructor(id) {\n         super(id, {\n            form: \"\",\n            name: \"\",\n            role: \"\",\n            useRole: \"\",\n            useAccount: \"\",\n            useField: \"\", // bool on whether to use userFields from process\n            account: \"\",\n            fields: \"\", // to\\fromUsers.fields\n            userField: \"\",\n         });\n      }\n\n      ui(obj = {}) {\n         var __Roles = AB.Account.rolesAll().map((r) => {\n            return { id: r.id, value: r.name };\n         });\n         var __Users = AB.Account.userList().map((u) => {\n            return { id: u.uuid, value: u.username };\n         });\n         var __UserFields = [];\n         if (obj.userProcessFieldData) {\n            __UserFields = obj.userProcessFieldData.map((u) => {\n               return {\n                  uuid: u.field.id,\n                  id: u.key,\n                  value: u.label,\n                  key: u.key,\n               };\n            });\n         }\n\n         var ids = this.ids;\n\n         return {\n            view: \"form\",\n            id: this.ids.component,\n            css: \"no-margin\",\n            elements: [\n               {\n                  cols: [\n                     {\n                        view: \"checkbox\",\n                        id: this.ids.useRole,\n                        width: 34,\n                        labelWidth: 0,\n                        value: obj.useRole == \"1\" ? 1 : 0,\n                        click: function (id /*, event */) {\n                           if ($$(id).getValue()) {\n                              $$(ids.role).enable();\n                           } else {\n                              $$(ids.role).disable();\n                           }\n                        },\n                        on: {\n                           onAfterRender() {\n                              UIClass.CYPRESS_REF(this);\n                           },\n                        },\n                     },\n                     {\n                        view: \"label\",\n                        label: L(\"by Role\"),\n                        width: 88,\n                     },\n                     {\n                        view: \"multicombo\",\n                        id: this.ids.role,\n                        value: obj.role ? obj.role : 0,\n                        disabled: obj.useRole == \"1\" ? false : true,\n                        suggest: {\n                           body: {\n                              yCount: 4,\n                              data: __Roles,\n                              on: {\n                                 //\n                                 // TODO: looks like a Webix Bug that has us\n                                 // doing all this work.  Let's see if Webix\n                                 // can fix this for us.\n                                 onAfterRender() {\n                                    this.data.each((a) => {\n                                       UIClass.CYPRESS_REF(\n                                          this.getItemNode(a.id),\n                                          `${ids.role}_${a.id}`\n                                       );\n                                    });\n                                 },\n                                 onItemClick: function (id) {\n                                    var $roleCombo = $$(ids.role);\n                                    var currentItems = $roleCombo.getValue();\n                                    var indOf = currentItems.indexOf(id);\n                                    if (indOf == -1) {\n                                       currentItems.push(id);\n                                    } else {\n                                       currentItems.splice(indOf, 1);\n                                    }\n                                    $roleCombo.setValue(currentItems);\n                                    // var item = this.getItem(id);\n                                    // UIClass.CYPRESS_REF(\n                                    //    this.getItemNode(item.id),\n                                    //    `${ids.role}_${item.id}`\n                                    // );\n                                 },\n                              },\n                           },\n                        },\n                        placeholder: L(\"Click to add Role\"),\n                        labelAlign: \"left\",\n                        stringResult: false /* returns data as an array of [id] */,\n                        on: {\n                           onAfterRender: function () {\n                              // set data-cy for original field to track clicks to open option list\n                              UIClass.CYPRESS_REF(this.getNode(), ids.role);\n                           },\n                           onChange: (/* newVal, oldVal */) => {\n                              // trigger the onAfterRender function from the list so we can add data-cy to dom\n                              $$(this.ids.role)\n                                 .getList()\n                                 .callEvent(\"onAfterRender\");\n                           },\n                        },\n                     },\n                  ],\n               },\n               {},\n               {\n                  cols: [\n                     {\n                        view: \"checkbox\",\n                        id: this.ids.useAccount,\n                        width: 34,\n                        labelWidth: 0,\n                        value: obj.useAccount == \"1\" ? 1 : 0,\n                        click: function (id /*, event */) {\n                           if ($$(id).getValue()) {\n                              $$(ids.account).enable();\n                           } else {\n                              $$(ids.account).disable();\n                           }\n                        },\n                        on: {\n                           onAfterRender() {\n                              UIClass.CYPRESS_REF(this);\n                           },\n                        },\n                     },\n                     {\n                        view: \"label\",\n                        label: L(\"by Account\"),\n                        width: 88,\n                     },\n                     {\n                        view: \"multicombo\",\n                        id: this.ids.account,\n                        value: obj.account ? obj.account : 0,\n                        disabled: obj.useAccount == \"1\" ? false : true,\n                        suggest: {\n                           body: {\n                              yCount: 4,\n                              data: __Users,\n                              on: {\n                                 //\n                                 // TODO: looks like a Webix Bug that has us\n                                 // doing all this work.  Let's see if Webix\n                                 // can fix this for us.\n                                 onAfterRender() {\n                                    this.data.each((a) => {\n                                       UIClass.CYPRESS_REF(\n                                          this.getItemNode(a.id),\n                                          `${ids.account}_${a.id}`\n                                       );\n                                    });\n                                 },\n                                 onItemClick: function (id) {\n                                    var $accountCombo = $$(ids.account);\n                                    var currentItems = $accountCombo.getValue();\n                                    var indOf = currentItems.indexOf(id);\n                                    if (indOf == -1) {\n                                       currentItems.push(id);\n                                    } else {\n                                       currentItems.splice(indOf, 1);\n                                    }\n                                    $accountCombo.setValue(currentItems);\n                                    // var item = this.getItem(id);\n                                    // UIClass.CYPRESS_REF(\n                                    //    this.getItemNode(item.id),\n                                    //    `${ids.account}_${item.id}`\n                                    // );\n                                 },\n                              },\n                           },\n                        },\n                        placeholder: L(\"Click to add User\"),\n                        labelAlign: \"left\",\n                        stringResult: false /* returns data as an array of [id] */,\n                        on: {\n                           onAfterRender: function () {\n                              // set data-cy for original field to track clicks to open option list\n                              UIClass.CYPRESS_REF(this.getNode(), ids.account);\n                           },\n                           onChange: (/* newVal, oldVal */) => {\n                              // trigger the onAfterRender function from the list so we can add data-cy to dom\n                              $$(this.ids.account)\n                                 .getList()\n                                 .callEvent(\"onAfterRender\");\n                           },\n                        },\n                     },\n                  ],\n               },\n               {},\n               {\n                  cols: [\n                     {\n                        view: \"checkbox\",\n                        id: this.ids.useField,\n                        width: 34,\n                        labelWidth: 0,\n                        value: obj.useField == \"1\" ? 1 : 0,\n                        click: function (id /*, event */) {\n                           if ($$(id).getValue()) {\n                              $$(ids.userField).enable();\n                           } else {\n                              $$(ids.userField).disable();\n                           }\n                        },\n                        on: {\n                           onAfterRender() {\n                              UIClass.CYPRESS_REF(this);\n                           },\n                        },\n                     },\n                     {\n                        view: \"label\",\n                        label: L(\"by Field\"),\n                        width: 88,\n                     },\n                     {\n                        // TODO @achoobert look these up\n                        view: \"multicombo\",\n                        id: this.ids.userField,\n                        value: obj.userFields ? obj.userFields : 0,\n                        disabled: obj.useField == \"1\" ? false : true,\n                        suggest: {\n                           body: {\n                              yCount: 4,\n                              data: __UserFields,\n                              on: {\n                                 //\n                                 // TODO: looks like a Webix Bug that has us\n                                 // doing all this work.  Let's see if Webix\n                                 // can fix this for us.\n                                 onAfterRender() {\n                                    this.data.each((a) => {\n                                       UIClass.CYPRESS_REF(\n                                          this.getItemNode(a.id),\n                                          `${ids.userField}_${a.id}`\n                                       );\n                                    });\n                                 },\n                                 onItemClick: function (id) {\n                                    var $userFieldsCombo = $$(ids.userField);\n                                    var currentItems =\n                                       $userFieldsCombo.getValue();\n                                    var indOf = currentItems.indexOf(id);\n                                    if (indOf == -1) {\n                                       currentItems.push(id);\n                                    } else {\n                                       currentItems.splice(indOf, 1);\n                                    }\n                                    $userFieldsCombo.setValue(currentItems);\n                                    // var item = this.getItem(id);\n                                    // UIClass.CYPRESS_REF(\n                                    //    this.getItemNode(item.id),\n                                    //    `${ids.userField}_${item.id}`\n                                    // );\n                                 },\n                              },\n                           },\n                        },\n                        placeholder: L(\"Click to add User\"),\n                        labelAlign: \"left\",\n                        stringResult: false /* returns data as an array of [id] */,\n                        on: {\n                           onAfterRender: function () {\n                              // set data-cy for original field to track clicks to open option list\n                              UIClass.CYPRESS_REF(\n                                 this.getNode(),\n                                 ids.userField\n                              );\n                           },\n                           onChange: (/* newVal, oldVal */) => {\n                              // trigger the onAfterRender function from the list so we can add data-cy to dom\n                              $$(this.ids.userField)\n                                 .getList()\n                                 .callEvent(\"onAfterRender\");\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n\n      // show() {\n      //    super.show();\n      //    AppList.show();\n      // }\n\n      /**\n       * values()\n       * return an object hash representing the values for this component.\n       * @return {json}\n       */\n      values() {\n         var obj = {};\n         var ids = this.ids;\n\n         if ($$(ids.useRole)) {\n            obj.useRole = $$(ids.useRole).getValue();\n         }\n\n         if ($$(ids.role) && obj.useRole) {\n            obj.role = $$(ids.role).getValue();\n            if (obj.role === \"--\") obj.role = null;\n         } else {\n            obj.role = null;\n         }\n\n         if ($$(ids.useAccount)) {\n            obj.useAccount = $$(ids.useAccount).getValue();\n         }\n\n         if ($$(ids.account) && obj.useAccount) {\n            obj.account = $$(ids.account).getValue(/*{ options: true }*/);\n            if (obj.account === \"--\") obj.account = null;\n         } else {\n            obj.account = null;\n         }\n\n         if ($$(ids.useField)) {\n            obj.useField = $$(ids.useField).getValue();\n         }\n\n         if ($$(ids.useField)) {\n            obj[\"userFields\"] = $$(ids.userField).getValue();\n         } else {\n            obj.userFields = [];\n         }\n\n         return obj;\n      }\n   }\n\n   return UIProcessParticipant_SelectManagersUI;\n}\n","/*\n * UIProcessTaskEmail\n *\n * Display the form for entering the properties for a new\n * Email Task\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\nimport FABProcessParticipant from \"./ABProcessParticipant_selectManagersUI\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   const ABProcessParticipant = FABProcessParticipant(AB);\n\n   class UIProcessEmail extends UIClass {\n      constructor() {\n         super(\"properties_process_email\", {\n            name: \"\",\n            to: \"\",\n            from: \"\",\n            subject: \"\",\n            fromUser: \"\",\n            toUser: \"\",\n            message: \"\",\n            toCustom: \"\",\n            toCustomFields: \"\",\n            fromCustom: \"\",\n            fromCustomFields: \"\",\n            customFrom: \"\",\n            toEmailForm: \"\",\n            fromEmailForm: \"\",\n         });\n\n         this.toUser = new ABProcessParticipant(this.ids.component + \"_to_\");\n         this.fromUser = new ABProcessParticipant(\n            this.ids.component + \"_from_\"\n         );\n      }\n\n      static get key() {\n         return \"Email\";\n      }\n      // {string}\n      // This should match the ABProcessTaskEmailCore.defaults().key value.\n\n      ui(obj) {\n         // we are creating these on the fly, and should have CurrentApplication\n         // defined already.\n\n         var toUserUI = this.toUser.ui(obj?.toUsers ?? {});\n         var fromUserUI = this.fromUser.ui(obj?.fromUsers ?? {});\n\n         let ids = this.ids;\n         return {\n            id: ids.component,\n            rows: [\n               { view: \"label\", label: L(\"Send Email:\") },\n               {\n                  view: \"label\",\n                  label: L(\"Generate an Email message to be sent.\"),\n               },\n               {\n                  // id: ids.component,\n                  view: \"form\",\n                  elements: [\n                     {\n                        id: ids.name,\n                        view: \"text\",\n                        label: L(\"Name\"),\n                        name: \"name\",\n                        value: this.name,\n                     },\n                     {\n                        id: ids.to,\n                        view: \"select\",\n                        label: L(\"To\"),\n                        name: \"to\",\n                        value: this.to,\n                        options: [\n                           {\n                              id: 0,\n                              value: L(\"Next Participant\"),\n                           },\n                           {\n                              id: 1,\n                              value: L(\"Select Role or User\"),\n                           },\n                           {\n                              id: 2,\n                              value: L(\"Custom\"),\n                           },\n                        ],\n                        on: {\n                           onChange: (val) => {\n                              if (parseInt(val) == 1) {\n                                 $$(ids.toUser).show();\n                                 $$(ids.toEmailForm).hide();\n                              } else if (parseInt(val) == 2) {\n                                 $$(ids.toUser).hide();\n                                 $$(ids.toEmailForm).show();\n                              } else {\n                                 $$(ids.toUser).hide();\n                                 $$(ids.toEmailForm).hide();\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toUser,\n                        rows: [toUserUI],\n                        paddingY: 10,\n                        hidden: parseInt(this.to) == 1 ? false : true,\n                     },\n                     {\n                        id: ids.toEmailForm,\n                        name: \"toEmailForm\",\n                        type: \"form\",\n                        css: \"no-margin\",\n                        rows: [\n                           {\n                              id: ids.toCustom,\n                              view: \"text\",\n                              label: L(\"Email\"),\n                              placeholder: L(\"Type email address here...\"),\n                              name: \"toCustom\",\n                              value: this.toCustom,\n                           },\n                           {\n                              // process fields TO\n                              id: ids.toCustomFields,\n                              label: L(\"toCustomFields\"),\n                              name: \"toCustomFields\",\n                              value: this.toCustomFields,\n                              view: \"multicombo\",\n                              placeholder: L(\"...\"),\n                              suggest: {\n                                 body: {\n                                    data: [],\n                                    on: {\n                                       onAfterRender() {\n                                          this.data.each((a) => {\n                                             UIClass.CYPRESS_REF(\n                                                this.getItemNode(a.id),\n                                                `${ids.toCustomFields}_${a.id}`\n                                             );\n                                          });\n                                       },\n                                       onItemClick: function (id) {\n                                          var $toCustomFields = $$(\n                                             ids.toCustomFields\n                                          );\n                                          var currentItems =\n                                             $toCustomFields.getValue();\n                                          var indOf = currentItems.indexOf(id);\n                                          if (indOf == -1) {\n                                             currentItems.push(id);\n                                          } else {\n                                             currentItems.splice(indOf, 1);\n                                          }\n                                          $toCustomFields.setValue(\n                                             currentItems\n                                          );\n                                       },\n                                    },\n                                 },\n                              },\n                              labelAlign: \"left\",\n                              stringResult: false /* returns data as an array of [id] */,\n                              on: {\n                                 onAfterRender: function () {\n                                    // set data-cy for original field to track clicks to open option list\n                                    UIClass.CYPRESS_REF(\n                                       this.getNode(),\n                                       ids.toCustomFields\n                                    );\n                                 },\n                                 onChange: (/* newVal, oldVal */) => {\n                                    // trigger the onAfterRender function from the list so we can add data-cy to dom\n                                    $$(this.ids.toCustomFields)\n                                       .getList()\n                                       .callEvent(\"onAfterRender\");\n                                 },\n                              },\n                           },\n                        ],\n                        hidden: parseInt(this.to) == 2 ? false : true,\n                     },\n                     {\n                        id: ids.from,\n                        view: \"select\",\n                        label: L(\"From\"),\n                        name: \"from\",\n                        value: this.from,\n                        options: [\n                           {\n                              id: 0,\n                              value: L(\"Current Participant\"),\n                           },\n                           {\n                              id: 1,\n                              value: L(\"Select Role or User\"),\n                           },\n                           {\n                              id: 2,\n                              value: L(\"Custom\"),\n                           },\n                        ],\n                        on: {\n                           onChange: (val) => {\n                              if (parseInt(val) == 1) {\n                                 $$(ids.fromUser).show();\n                                 $$(ids.fromEmailForm).hide();\n                              } else if (parseInt(val) == 2) {\n                                 $$(ids.fromUser).hide();\n                                 $$(ids.fromEmailForm).show();\n                              } else {\n                                 $$(ids.fromUser).hide();\n                                 $$(ids.fromEmailForm).hide();\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.fromUser,\n                        rows: [fromUserUI],\n                        paddingY: 10,\n                        hidden: parseInt(this.from) == 1 ? false : true,\n                     },\n                     {\n                        id: ids.fromEmailForm,\n                        name: \"fromEmailForm\",\n                        type: \"form\",\n                        css: \"no-margin\",\n                        rows: [\n                           {\n                              id: ids.fromCustom,\n                              view: \"text\",\n                              label: L(\"Email\"),\n                              placeholder: L(\"Type email address here...\"),\n                              name: \"fromCustom\",\n                              value: this.fromCustom,\n                              // hidden: parseInt(this.from) == 2 ? false : true,\n                           },\n                           {\n                              id: ids.fromCustomFields,\n                              view: \"multicombo\",\n                              label: L(\"Process\"),\n                              placeholder: L(\"...\"),\n                              name: \"fromCustomFields\",\n                              suggest: {\n                                 body: {\n                                    data: [],\n                                    on: {\n                                       onAfterRender() {\n                                          this.data.each((a) => {\n                                             UIClass.CYPRESS_REF(\n                                                this.getItemNode(a.id),\n                                                `${ids.fromCustomFields}_${a.id}`\n                                             );\n                                          });\n                                       },\n                                       onItemClick: function (id) {\n                                          var $fromCustomFields = $$(\n                                             ids.fromCustomFields\n                                          );\n                                          var currentItems =\n                                             $fromCustomFields.getValue();\n                                          var indOf = currentItems.indexOf(id);\n                                          if (indOf == -1) {\n                                             currentItems.push(id);\n                                          } else {\n                                             currentItems.splice(indOf, 1);\n                                          }\n                                          $fromCustomFields.setValue(\n                                             currentItems\n                                          );\n                                       },\n                                    },\n                                 },\n                              },\n                              labelAlign: \"left\",\n                              value: this.fromCustomFields,\n                              // hidden: parseInt(this.from) == 2 ? false : true,\n                              stringResult: false /* returns data as an array of [id] */,\n                              on: {\n                                 onAfterRender: function () {\n                                    // set data-cy for original field to track clicks to open option list\n                                    UIClass.CYPRESS_REF(\n                                       this.getNode(),\n                                       ids.fromCustomFields\n                                    );\n                                 },\n                                 onChange: (/* newVal, oldVal */) => {\n                                    // trigger the onAfterRender function from the list so we can add data-cy to dom\n                                    $$(this.ids.fromCustomFields)\n                                       .getList()\n                                       .callEvent(\"onAfterRender\");\n                                 },\n                              },\n                           },\n                        ],\n                        hidden: parseInt(this.from) == 2 ? false : true,\n                     },\n                     {\n                        id: ids.subject,\n                        view: \"text\",\n                        label: L(\"Subject\"),\n                        name: \"subject\",\n                        value: this.subject,\n                     },\n                     {\n                        view: \"spacer\",\n                        height: 10,\n                     },\n                     {\n                        id: ids.message,\n                        view: \"tinymce-editor\",\n                        label: L(\"Message\"),\n                        name: \"message\",\n                        value: this.message,\n                        borderless: true,\n                        minHeight: 500,\n                        config: {\n                           plugins: [\n                              \"advlist autolink lists link image charmap print preview anchor\",\n                              \"searchreplace visualblocks code fullscreen\",\n                              \"insertdatetime media table contextmenu paste imagetools wordcount\",\n                           ],\n                           toolbar:\n                              \"insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image\",\n                           // init_instance_callback: (editor) => {\n                           //    editor.on(\"KeyUp\", (event) => {\n                           //       // _logic.onChange();\n                           //    });\n\n                           //    editor.on(\"Change\", function (event) {\n                           //       // _logic.onChange();\n                           //    });\n                           // },\n                        },\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n\n      applicationLoad(application) {\n         //    super.applicationLoad(application);\n         super.applicationLoad(application);\n\n         // $$(this.ids.objList).define(\"data\", listObj);\n         // $$(this.ids.objList).refresh();\n      }\n\n      processLoad(process) {\n         super.processLoad(process);\n         this.process = process;\n      }\n\n      // show() {\n      //    super.show();\n      //    AppList.show();\n      // }\n\n      populate(obj) {\n         let ids = this.ids;\n\n         // get process data user-fields\n         let userProcessFieldData = obj.process\n            .processDataFields(obj)\n            .filter((e) => e.field?.key == \"user\");\n         obj.toUsers[\"userProcessFieldData\"] = userProcessFieldData;\n         obj.fromUsers[\"userProcessFieldData\"] = userProcessFieldData;\n\n         // get process data email-fields\n         let emailProcessFieldData = obj.process\n            .processDataFields(obj)\n            .filter((e) => e.field?.key == \"email\");\n         let __EmailFields = emailProcessFieldData.map((u) => {\n            return {\n               uuid: u.field.id,\n               id: u.key,\n               value: u.label,\n               key: u.key,\n            };\n         });\n\n         $$(ids.name).setValue(obj.name);\n         $$(ids.to).setValue(obj.to);\n         $$(ids.from).setValue(obj.from);\n         $$(ids.subject).setValue(obj.subject);\n         $$(ids.message).setValue(obj.message);\n         $$(ids.toCustom).setValue(obj.toCustom);\n         $$(ids.fromCustom).setValue(obj.fromCustom);\n\n         $$(ids.fromCustomFields).options_setter(__EmailFields);\n         $$(ids.fromCustomFields).refresh();\n         $$(ids.fromCustomFields).setValue(obj.fromCustomFields);\n         $$(ids.toCustomFields).options_setter(__EmailFields);\n         $$(ids.toCustomFields).refresh();\n         $$(ids.toCustomFields).setValue(obj.toCustomFields);\n\n         let $toUser = this.toUser.ui(obj.toUsers ?? {});\n         let $newToUser = {\n            id: ids.toUser,\n            rows: [$toUser],\n            paddingY: 10,\n            hidden: parseInt(obj.to) == 1 ? false : true,\n         };\n         webix.ui($newToUser, $$(ids.toUser));\n\n         // obj.toUsers = this.toUser.values();\n         // obj.fromUsers = this.fromUser.values();\n         let $fromUser = this.fromUser.ui(obj.fromUsers ?? {});\n         let $newFromUser = {\n            id: ids.fromUser,\n            rows: [$fromUser],\n            paddingY: 10,\n            hidden: parseInt(obj.from) == 1 ? false : true,\n         };\n         webix.ui($newFromUser, $$(ids.fromUser));\n      }\n\n      /**\n       * values()\n       * return an object hash representing the values for this component.\n       * @return {json}\n       */\n      // values() {\n      //    var obj = {};\n      //    var ids = this.ids;\n\n      //    obj.label = $$(ids.name)?.getValue();\n      //    obj.objectID = $$(ids.objList)?.getValue();\n      //    obj.lifecycleKey = $$(ids.lifecycleList).getValue();\n      //    obj.triggerKey = `${obj.objectID}.${obj.lifecycleKey}`;\n\n      //    return obj;\n      // }\n\n      values() {\n         var obj = {};\n         var ids = this.ids;\n\n         obj.label = $$(ids.name).getValue();\n         obj.to = $$(ids.to).getValue();\n         obj.from = $$(ids.from).getValue();\n         obj.subject = $$(ids.subject).getValue();\n         obj.message = $$(ids.message).getValue();\n         obj.toCustom = $$(ids.toCustom).getValue();\n         obj.toCustomFields = $$(ids.toCustomFields).getValue();\n         obj.fromCustom = $$(ids.fromCustom).getValue();\n         obj.fromCustomFields = $$(ids.fromCustomFields).getValue();\n         obj.toUsers = this.toUser.values();\n         obj.fromUsers = this.fromUser.values();\n\n         return obj;\n      }\n   }\n\n   return UIProcessEmail;\n}\n","import UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   const ProcessTaskManager = AB.Class.ABProcessTaskManager;\n\n   class UIProcessService extends UIClass {\n      constructor() {\n         super(\"properties_process_service\", {\n            name: \"\",\n            option: \"\",\n         });\n      }\n\n      static get key() {\n         return \"TaskService\";\n      }\n      // {string}\n      // This should match the ABProcessTaskServiceCore.defaults().key value.\n\n      ui() {\n         // we are creating these on the fly, and should have CurrentApplication\n         // defined already.\n\n         const ids = this.ids;\n\n         return {\n            id: ids.component,\n            view: \"form\",\n            elements: [\n               {\n                  id: ids.name,\n                  view: \"text\",\n                  label: L(\"Name\"),\n                  name: \"name\",\n                  value: \"\",\n               },\n               {\n                  id: ids.option,\n                  rows: [\n                     {\n                        view: \"button\",\n                        label: L(\"Accounting: Process Batch\"),\n                        click: () => {\n                           this.switchTo(\"accountingBatch\");\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        label: L(\"Accounting: Fiscal Period Close\"),\n                        click: () => {\n                           this.switchTo(\"accountingFPClose\");\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        label: L(\"Accounting: Fiscal Period Year Close\"),\n                        click: () => {\n                           this.switchTo(\n                              \"accountingFPYearClose\",\n                              ids.component\n                           );\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        label: L(\"Accounting: Journal Entry Archive\"),\n                        click: () => {\n                           this.switchTo(\"accountingJEArchive\");\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        label: L(\"Query Task\"),\n                        click: () => {\n                           this.switchTo(\"query\");\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        label: L(\"Insert Record Task\"),\n                        click: () => {\n                           this.switchTo(\"InsertRecord\");\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        label: L(\"Calculate Task\"),\n                        click: () => {\n                           this.switchTo(\"calculate\");\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        label: L(\"Get Reset Password Url\"),\n                        click: () => {\n                           this.switchTo(\"GetResetPasswordUrl\");\n                        },\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n      /**\n       * switchTo()\n       * replace this object with an instance of one of our child classes:\n       * @param {string} classType\n       *        a key representing with subObject to create an instance of.\n       * @param {string} propertiesID\n       *        the webix ui.id container for the properties panel.\n       */\n      switchTo(key) {\n         const ids = this.ids;\n\n         const values = this.values();\n\n         values.id = this.element.id;\n         values.diagramID = this.element.diagramID;\n         values.key = key ?? this.key;\n\n         const subtask =\n            ProcessTaskManager.newTask(values, this.element.process, this.AB) ??\n            null;\n         if (subtask) {\n            this.element.switchTo(subtask, ids.component);\n         }\n      }\n\n      // applicationLoad(application) {\n      //    super.applicationLoad(application);\n\n      //    $$(this.ids.objList).define(\"data\", listObj);\n      //    $$(this.ids.objList).refresh();\n      // }\n\n      // show() {\n      //    super.show();\n      //    AppList.show();\n      // }\n\n      values() {\n         const ids = this.ids;\n\n         let obj = {};\n\n         const $name = $$(ids.name);\n\n         obj.label = $name?.getValue() ?? \"\";\n         obj.name = $name?.getValue() ?? \"\";\n\n         return obj;\n      }\n\n      populate(element) {\n         const ids = this.ids;\n\n         const $name = $$(ids.name);\n\n         this.element = element;\n\n         $name?.setValue(element.label ?? \"\");\n      }\n   }\n\n   return UIProcessService;\n}\n","/*\n * UIProcessTaskServiceCalculate\n *\n * Display the form for entering the properties for a new\n * ServiceCalculate Task\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UIProcessServiceCalculate extends UIClass {\n      constructor() {\n         super(\"properties_process_service_calculate\", {\n            name: \"\",\n            formulaText: \"\",\n            variableList: \"\",\n\n            variablePopup: \"\",\n            operatorPopup: \"\",\n         });\n\n         this.element = null;\n      }\n\n      static get key() {\n         return \"Calculate\";\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         webix.ui({\n            id: ids.variablePopup,\n            view: \"popup\",\n            hidden: true,\n            body: {\n               id: ids.variableList,\n               view: \"list\",\n               template: (item) => {\n                  return item.value;\n               },\n               data: \"\",\n               on: {\n                  onItemClick: function (id) {\n                     var component = this.getItem(id);\n\n                     insertFormula(`{${component.value}}`);\n\n                     $$(ids.variablePopup).hide();\n                  },\n               },\n            },\n         });\n\n         const insertFormula = (message) => {\n            const formula = $$(ids.formulaText).getValue();\n\n            $$(ids.formulaText).setValue(`${formula}${message} `);\n         };\n\n         webix.ui({\n            id: ids.operatorPopup,\n            view: \"popup\",\n            hidden: true,\n            width: 180,\n            body: {\n               view: \"list\",\n               template: (item) => {\n                  var template = \"\";\n\n                  if (item.icon) {\n                     template += `<i class=\"fa fa-${item.icon}\" aria-hidden=\"true\"></i> `;\n                  }\n\n                  if (item.label) {\n                     template += item.label;\n                  }\n\n                  return template;\n               },\n               data: [\n                  {\n                     label: L(\"+ Adds\"),\n                     symbol: \"+\",\n                  },\n                  {\n                     label: L(\"- Subtracts\"),\n                     symbol: \"-\",\n                  },\n                  {\n                     label: L(\"* Multiples\"),\n                     symbol: \"*\",\n                  },\n                  {\n                     label: L(\"/ Divides\"),\n                     symbol: \"/\",\n                  },\n                  {\n                     label: L(\"( Open Bracket\"),\n                     symbol: \"(\",\n                  },\n                  {\n                     label: L(\") Closed Bracket\"),\n                     symbol: \")\",\n                  },\n               ],\n               on: {\n                  onItemClick: function (id, e, node) {\n                     var component = this.getItem(id);\n\n                     insertFormula(component.symbol);\n\n                     $$(ids.operatorPopup).hide();\n                  },\n               },\n            },\n         });\n         let labelWidth = 120;\n         return {\n            rows: [\n               {\n                  //     id: id,\n                  view: \"form\",\n                  elementsConfig: {\n                     labelWidth: labelWidth,\n                  },\n                  elements: [\n                     {\n                        id: ids.name,\n                        view: \"text\",\n                        label: L(\"Name\"),\n                        name: \"name\",\n                        value: this.name,\n                     },\n\n                     {\n                        id: ids.formulaText,\n                        view: \"texthighlight\",\n                        height: 200,\n                        label: L(\"Formula\"),\n                        type: \"textarea\",\n                        value: this.formulaText || \"\",\n                        highlight: (text) => {\n                           return text;\n                        },\n                     },\n                     {\n                        cols: [\n                           {\n                              width: labelWidth,\n                              fillspace: true,\n                           },\n                           {\n                              view: \"button\",\n                              css: \"webix_primary\",\n                              type: \"icon\",\n                              icon: \"fa fa-at\",\n                              label: L(\"Parameters\"),\n                              click: function () {\n                                 // show popup\n                                 $$(ids.variablePopup).show(this.$view);\n                              },\n                           },\n                           {\n                              view: \"button\",\n                              css: \"webix_primary\",\n                              type: \"icon\",\n                              icon: \"fa fa-hashtag\",\n                              label: L(\"Operators\"),\n                              click: function () {\n                                 // show popup\n                                 $$(ids.operatorPopup).show(this.$view);\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      populate(element) {\n         const ids = this.ids;\n\n         const list = (element?.process?.processDataFields(element) || []).map(\n            (item) => {\n               return {\n                  id: item.key,\n                  value: item.label,\n               };\n            }\n         );\n\n         $$(ids.name).setValue(element.name);\n         $$(ids.formulaText).setValue(element.formulaText);\n         $$(ids.variableList).define(\"data\", list);\n         $$(ids.variableList).refresh();\n      }\n\n      values() {\n         const obj = {};\n         const ids = this.ids;\n\n         obj.name = $$(ids.name)?.getValue();\n         obj.formulaText = $$(ids.formulaText).getValue();\n\n         return obj;\n      }\n\n      /**\n       * @method propertiesStash()\n       * pull our values from our property panel.\n       * @param {string} id\n       *        the webix $$(id) of the properties panel area.\n       */\n      propertiesStash(id) {\n         const ids = this.propertyIDs(id);\n\n         this.name = this.property(ids.name);\n         this.formulaText = this.property(ids.formulaText);\n      }\n   } //End\n\n   return UIProcessServiceCalculate;\n}\n","/*\n * UIProcessTaskServiceGetResetPasswordUrl\n *\n * Display the form for entering the properties for a new\n * ServiceGetResetPasswordUrl Task\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UIProcessServiceGetResetPasswordUrl extends UIClass {\n      constructor() {\n         super(\"properties_process_service_getResetPasswordUrl\", {\n            name: \"\",\n            email: \"\",\n         });\n      }\n\n      static get key() {\n         return \"GetResetPasswordUrl\";\n      }\n      // {string}\n      // This should match the ABProcessTaskServiceGetResetPasswordUrlCore.defaults().key value.\n\n      ui() {\n         // we are creating these on the fly, and should have CurrentApplication\n         // defined already.\n\n         const ids = this.ids;\n\n         return {\n            id: ids.component,\n            view: \"form\",\n            rows: [\n               {\n                  id: ids.name,\n                  view: \"text\",\n                  label: L(\"Name\"),\n                  name: \"name\",\n                  value: \"\",\n               },\n               {\n                  id: ids.email,\n                  view: \"multicombo\",\n                  label: L(\"Email\"),\n                  name: \"email\",\n                  options: [],\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n         return Promise.resolve();\n      }\n\n      // applicationLoad(application) {\n      //    super.applicationLoad(application);\n\n      //    $$(this.ids.objList).define(\"data\", listObj);\n      //    $$(this.ids.objList).refresh();\n      // }\n\n      // show() {\n      //    super.show();\n      //    AppList.show();\n      // }\n\n      populate(element) {\n         const processData = (\n            element.process.processDataFields(element) ?? []\n         ).filter((item) => item.field?.key == \"email\").map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n\n         const ids = this.ids;\n\n         const $name = $$(ids.name);\n         const $email = $$(ids.email);\n\n         $name.setValue(element.label);\n         $email.setValue(element.email);\n         $email.define(\"options\", processData);\n         $email.refresh();\n\n      }\n\n      /**\n       * values()\n       * return an object hash representing the values for this component.\n       * @return {json}\n       */\n\n      values() {\n         const obj = {};\n         const ids = this.ids;\n\n         const $name = $$(ids.name);\n         const $email = $$(ids.email);\n\n         obj.label = $name?.getValue() ?? \"\";\n         obj.name = $name?.getValue() ?? \"\";\n         obj.email = $email?.getValue() ?? \"\";\n\n         return obj;\n      }\n   }\n\n   return UIProcessServiceGetResetPasswordUrl;\n}\n","/*\n * UIProcessTaskServiceInsertRecord\n *\n * Display the form for entering the properties for a new\n * ServiceInsertRecord Task\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UIProcessServiceInsertRecord extends UIClass {\n      constructor() {\n         super(\"properties_process_service_insertRecord\", {\n            name: \"\",\n            objectID: \"\",\n            fieldValues: \"\",\n\n            repeatLayout: \"\",\n            repeatMode: \"\",\n            repeatColumn: \"\",\n         });\n      }\n\n      static get key() {\n         return \"InsertRecord\";\n      }\n      // {string}\n      // This should match the ABProcessTaskServiceInsertRecordCore.defaults().key value.\n\n      ui() {\n         // we are creating these on the fly, and should have CurrentApplication\n         // defined already.\n\n         const ids = this.ids;\n\n         const objectList = this.CurrentApplication.objectsIncluded().map(\n            (o) => {\n               return { id: o.id, value: o.label ?? o.name };\n            }\n         );\n\n         return {\n            id: ids.component,\n            view: \"form\",\n            elementsConfig: {\n               labelWidth: 120,\n            },\n            elements: [\n               {\n                  id: ids.name,\n                  view: \"text\",\n                  label: L(\"Name\"),\n                  name: \"name\",\n                  value: \"\",\n               },\n               {\n                  id: ids.objectID,\n                  view: \"select\",\n                  label: L(\"Object\"),\n                  value: \"\",\n                  name: \"objectID\",\n                  options: objectList,\n                  on: {\n                     onChange: (newVal) => {\n                        this.element.objectID = newVal;\n                        this.refreshFieldValues(newVal);\n                     },\n                  },\n               },\n               {\n                  id: ids.repeatLayout,\n                  hidden: true,\n                  cols: [\n                     {\n                        id: ids.repeatMode,\n                        view: \"select\",\n                        label: L(\"Repeat\"),\n                        value: \"\",\n                        name: \"repeatMode\",\n                        width: 330,\n                        options: [\n                           {\n                              id: \"rootData\",\n                              value: L(\"For Connection in root data\"),\n                           },\n                        ],\n                        on: {\n                           onChange: (newVal) => {\n                              this.element.repeatMode = newVal;\n                              this.refreshFieldValues();\n                           },\n                        },\n                     },\n                     {\n                        id: ids.repeatColumn,\n                        view: \"select\",\n                        label: \"\",\n                        value: this.repeatColumn,\n                        name: \"repeatColumn\",\n                        options: [],\n                        on: {\n                           onChange: (newVal) => {\n                              this.element.repeatColumn = newVal;\n                              this.refreshFieldValues();\n                           },\n                        },\n                     },\n                  ],\n                  on: {\n                     onViewShow: () => {\n                        this.refreshFieldValues();\n                     },\n                  },\n               },\n               {\n                  view: \"fieldset\",\n                  label: L(\"Values\"),\n                  body: {\n                     id: ids.fieldValues,\n                     view: \"form\",\n                     borderless: true,\n                     elements: [],\n                  },\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n\n      getFieldOptions(object) {\n         const result = [];\n         result.push({\n            id: \"PK\",\n            value: L(\"Primary Key\"),\n         });\n\n         object.fields().forEach((f) => {\n            // Populate fields of linked data source\n            if (f.isConnection) {\n               const linkDS = f.datasourceLink;\n               if (linkDS) {\n                  result.push({\n                     id: `${f.id}|PK`,\n                     value: `${f.label} -> ${L(\"Primary Key\")}`,\n                  });\n\n                  linkDS.fields().forEach((linkF) => {\n                     result.push({\n                        id: `${f.id}|${linkF.id}`,\n                        value: `${f.label} -> ${linkF.label}`,\n                     });\n                  });\n               }\n            } else {\n               result.push({\n                  id: f.id,\n                  value: f.label,\n               });\n            }\n         });\n\n         return result;\n      }\n\n      refreshFieldValues(objectID) {\n         const ids = this.ids;\n\n         const $fieldValues = $$(ids.fieldValues);\n         if (!$fieldValues) return;\n\n         // clear form\n         webix.ui([], $fieldValues);\n\n         const object = this.AB.objectByID(objectID ?? this.element.objectID);\n         if (!object) return;\n\n         // Pull object & fields of start step\n         const startElemObj = this.element.objectOfStartElement;\n         const startElemObjFields = startElemObj\n            ? this.getFieldOptions(startElemObj)\n            : [];\n\n         // Pull object & fields of previous step\n         const prevElemObj = this.element.objectOfPrevElement;\n         const prevElemObjFields = prevElemObj\n            ? this.getFieldOptions(prevElemObj)\n            : [];\n\n         const setOptions = [\n            { id: 0, value: L(\"Not Set\") },\n            { id: 1, value: L(\"Set by custom value\") },\n            {\n               id: 2,\n               value: L(\"Set by the root data [{0}]\", [\n                  startElemObj ? startElemObj.label : \"\",\n               ]),\n            },\n            {\n               id: 3,\n               value: L(\"Set by previous step data [{0}]\", [\n                  prevElemObj ? prevElemObj.label : \"\",\n               ]),\n            },\n            {\n               id: 4,\n               value: L(\"Set by formula format\"),\n            },\n         ];\n\n         let repeatObjectFields = [];\n         const fieldRepeat = this.element.fieldRepeat;\n\n         if (fieldRepeat && fieldRepeat.datasourceLink) {\n            setOptions.push({\n               id: 5,\n               value: L(\"Set by the instance [{0}]\", [\n                  this.fieldRepeat ? this.element.fieldRepeat.label : \"\",\n               ]),\n            });\n\n            repeatObjectFields = this.getFieldOptions(\n               fieldRepeat.datasourceLink\n            );\n         }\n\n         setOptions.push({\n            id: 6,\n            value: L(\"Set by the parameter of a Query task\"),\n         });\n\n         // Pull query tasks option list\n         const queryTaskOptions = (\n            this.element.process.processDataFields(this.element) ?? []\n         ).map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n         // field options to the form\n         object.fields().forEach((f) => {\n            $fieldValues.addView({\n               fieldId: f.id,\n               view: \"layout\",\n               cols: [\n                  {\n                     rows: [\n                        {\n                           view: \"label\",\n                           label: f.label,\n                           width: 100,\n                        },\n                        { fillspace: true },\n                     ],\n                  },\n                  {\n                     rows: [\n                        {\n                           name: \"setSelector\",\n                           view: \"select\",\n                           options: setOptions,\n                           on: {\n                              onChange: function (newVal) {\n                                 const $parent = this.getParentView();\n                                 const $valuePanel = $parent.queryView({\n                                    name: \"valuePanel\",\n                                 });\n                                 $valuePanel.showBatch(newVal);\n                              },\n                           },\n                        },\n                        {\n                           name: \"valuePanel\",\n                           view: \"multiview\",\n                           visibleBatch: 0,\n                           cols: [\n                              { batch: 0, fillspace: true },\n                              { batch: 1, view: \"text\" },\n                              {\n                                 batch: 2,\n                                 view: \"select\",\n                                 options: startElemObjFields,\n                              },\n                              {\n                                 batch: 3,\n                                 view: \"select\",\n                                 options: prevElemObjFields,\n                              },\n                              { batch: 4, view: \"text\" },\n                              {\n                                 batch: 5,\n                                 view: \"select\",\n                                 options: repeatObjectFields,\n                              },\n                              {\n                                 batch: 6,\n                                 view: \"multicombo\",\n                                 label: \"\",\n                                 options: queryTaskOptions,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            });\n         });\n      }\n\n      setFieldValues() {\n         const ids = this.ids;\n\n         const $fieldValues = $$(ids.fieldValues);\n         const $fValueItems = $fieldValues.getChildViews() ?? [];\n\n         this.element.fieldValues = this.element.fieldValues ?? {};\n\n         $fValueItems.forEach(($item) => {\n            const fieldId = $item.config.fieldId;\n            const fValue = this.element.fieldValues[fieldId] ?? {};\n\n            const $setSelector = $item.queryView({ name: \"setSelector\" });\n            $setSelector.setValue(fValue.set);\n\n            const $valuePanel = $item.queryView({ name: \"valuePanel\" });\n            const $valueSelector = $valuePanel.queryView({\n               batch: $valuePanel.config.visibleBatch,\n            });\n            if ($valueSelector && $valueSelector.setValue)\n               $valueSelector.setValue(fValue.value);\n         });\n      }\n\n      getFieldValues() {\n         const result = {};\n         const ids = this.ids;\n         const $fieldValues = $$(ids.fieldValues);\n         const $fValueItems = $fieldValues.getChildViews() ?? [];\n\n         $fValueItems.forEach(($item) => {\n            const fieldId = $item.config.fieldId;\n\n            const $setSelector = $item.queryView({ name: \"setSelector\" });\n            const $valuePanel = $item.queryView({ name: \"valuePanel\" });\n            const $valueSelector = $valuePanel.queryView({\n               batch: $valuePanel.config.visibleBatch,\n            });\n\n            result[fieldId] = {};\n            result[fieldId].set = $setSelector.getValue();\n\n            result[fieldId].value = $valueSelector?.getValue?.() ?? null;\n         });\n\n         return result;\n      }\n\n      // applicationLoad(application) {\n      //    super.applicationLoad(application);\n\n      //    $$(this.ids.objList).define(\"data\", listObj);\n      //    $$(this.ids.objList).refresh();\n      // }\n\n      // show() {\n      //    super.show();\n      //    AppList.show();\n      // }\n\n      populate(element) {\n         const ids = this.ids;\n\n         const $name = $$(ids.name);\n         const $objectID = $$(ids.objectID);\n         const $repeatLayout = $$(ids.repeatLayout);\n         const $repeatMode = $$(ids.repeatMode);\n         const $repeatColumn = $$(ids.repeatColumn);\n\n         const repeatColumnList =\n            element?.objectOfStartElement?.connectFields().map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            }) ?? [];\n\n         this.element = element;\n\n         $name.setValue(element.label);\n         $objectID.setValue(element.objectID);\n         $repeatMode.setValue(element.repeatMode);\n         $repeatColumn.define(\"options\", repeatColumnList);\n         $repeatColumn.refresh();\n\n         this.refreshFieldValues();\n         this.setFieldValues();\n\n         if (element.isRepeat) $repeatLayout.show();\n      }\n\n      /**\n       * values()\n       * return an object hash representing the values for this component.\n       * @return {json}\n       */\n\n      values() {\n         const obj = {};\n         const ids = this.ids;\n\n         const $name = $$(ids.name);\n         const $objectID = $$(ids.objectID);\n         const $repeatMode = $$(ids.repeatMode);\n         const $repeatColumn = $$(ids.repeatColumn);\n\n         obj.label = $name.getValue() ?? \"\";\n         obj.name = $name.getValue() ?? \"\";\n         obj.objectID = $objectID.getValue() ?? \"\";\n         obj.repeatMode = $repeatMode.getValue() ?? \"\";\n         obj.repeatColumn = $repeatColumn.getValue() ?? \"\";\n\n         obj.fieldValues = this.getFieldValues();\n\n         return obj;\n      }\n   }\n\n   return UIProcessServiceInsertRecord;\n}\n","/*\n * UIProcessTaskServiceQuery\n *\n * Display the form for entering the properties for a new\n * ServiceGetResetPasswordUrl Task\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   class UIProcessServiceQuery extends UIClass {\n      constructor() {\n         super(\"properties_process_service_query\", {\n            name: \"\",\n            query: \"\",\n            suggestions: \"\",\n         });\n      }\n\n      static get key() {\n         return \"TaskServiceQuery\";\n      }\n      // {string}\n      // This should match the ABProcessTaskServiceQueryCore.defaults().key value.\n\n      ui() {\n         // we are creating these on the fly, and should have CurrentApplication\n         // defined already.\n\n         const ids = this.ids;\n\n         return {\n            id: ids.component,\n            view: \"form\",\n            elements: [\n               {\n                  id: ids.name,\n                  view: \"text\",\n                  label: L(\"Name\"),\n                  name: \"name\",\n                  value: this.name,\n               },\n               {\n                  id: ids.query,\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n\n      // applicationLoad(application) {\n      //    super.applicationLoad(application);\n\n      //    $$(this.ids.objList).define(\"data\", listObj);\n      //    $$(this.ids.objList).refresh();\n      // }\n\n      // show() {\n      //    super.show();\n      //    AppList.show();\n      // }\n\n      populate(element) {\n         const ids = this.ids;\n\n         const Builder = element\n            .ABQLManager()\n            .builder(element.qlObj, element, this.AB);\n\n         const $name = $$(ids.name);\n\n         this.element = element;\n\n         webix.ui(Builder.ui(ids.query), $$(ids.query));\n         Builder.init(ids.query);\n\n         $name.setValue(element.label);\n      }\n\n      /**\n       * values()\n       * return an object hash representing the values for this component.\n       * @return {json}\n       */\n\n      values() {\n         const obj = {};\n         const ids = this.ids;\n\n         const $name = $$(ids.name);\n\n         obj.label = $name.getValue() ?? \"\";\n         obj.name = $name.getValue() ?? \"\";\n         obj.qlObj =\n            this.element\n               .ABQLManager()\n               .parse(ids.query, this.element, this.AB) ?? null;\n\n         return obj;\n      }\n   }\n\n   return UIProcessServiceQuery;\n}\n","import UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   const ProcessTaskManager = AB.Class.ABProcessTaskManager;\n\n   class UIProcessUser extends UIClass {\n      constructor() {\n         super(\"properties_process_user\", {\n            name: \"\",\n            option: \"\",\n         });\n      }\n\n      static get key() {\n         return \"TaskUser\";\n      }\n      // {string}\n      // This should match the ABProcessTaskServiceCore.defaults().key value.\n\n      ui() {\n         // we are creating these on the fly, and should have CurrentApplication\n         // defined already.\n\n         const ids = this.ids;\n\n         return {\n            id: ids.component,\n            view: \"form\",\n            elements: [\n               {\n                  id: ids.name,\n                  view: \"text\",\n                  label: L(\"Name\"),\n                  name: \"name\",\n                  value: \"\",\n               },\n               {\n                  id: ids.option,\n                  rows: [\n                     {\n                        view: \"button\",\n                        label: L(\"Approval Task\"),\n                        click: () => {\n                           this.switchTo(\"Approval\");\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        label: L(\"External Task\"),\n                        click: () => {\n                           this.switchTo(\"External\");\n                        },\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n      /**\n       * switchTo()\n       * replace this object with an instance of one of our child classes:\n       * @param {string} classType\n       *        a key representing with subObject to create an instance of.\n       * @param {string} propertiesID\n       *        the webix ui.id container for the properties panel.\n       */\n      switchTo(key) {\n         const ids = this.ids;\n\n         const values = this.values();\n\n         values.id = this.element.id;\n         values.diagramID = this.element.diagramID;\n         values.key = key ?? UIProcessUser.key;\n\n         const subtask =\n            ProcessTaskManager.newTask(values, this.element.process, this.AB) ??\n            null;\n\n         if (subtask) {\n            this.element.switchTo(subtask, ids.component);\n         }\n      }\n\n      // applicationLoad(application) {\n      //    super.applicationLoad(application);\n\n      //    $$(this.ids.objList).define(\"data\", listObj);\n      //    $$(this.ids.objList).refresh();\n      // }\n\n      // show() {\n      //    super.show();\n      //    AppList.show();\n      // }\n\n      values() {\n         const ids = this.ids;\n\n         let obj = {};\n\n         const $name = $$(ids.name);\n\n         obj.label = $name?.getValue() ?? \"\";\n         obj.name = $name?.getValue() ?? \"\";\n\n         return obj;\n      }\n\n      populate(element) {\n         const ids = this.ids;\n         const $name = $$(ids.name);\n         this.element = element;\n         $name?.setValue(element.label ?? \"\");\n      }\n   }\n\n   return UIProcessUser;\n}\n","/*\n * ABProcessTaskUserApproval\n *\n * Display the form for entering the properties for an Approval Task\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\nimport FABProcessParticipant from \"./ABProcessParticipant_selectManagersUI\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   const ABProcessParticipantUsers = FABProcessParticipant(AB);\n\n   class UIProcessUserApproval extends UIClass {\n      constructor() {\n         super(\"properties_process_user_approval\", {\n            name: \"\",\n            who: \"\",\n            toUser: \"\",\n            formBuilder: \"\",\n            modalWindow: \"\",\n            formPreview: \"\",\n         });\n\n         this.toUser = new ABProcessParticipantUsers(\n            `${this.ids.component}_to_`\n         );\n         this.on(\"save\", () => {\n            this.processComponents();\n         });\n      }\n\n      static get key() {\n         return \"Approval\";\n      }\n      // {string}\n      // This should match the ABProcessTaskServiceGetResetPasswordUrlCore.defaults().key value.\n\n      uiUser(obj) {\n         var usersUI = this.users.ui(obj ?? {});\n         return {\n            id: this.ids.users,\n            rows: [usersUI],\n            paddingY: 10,\n         };\n      }\n\n      ui(element) {\n         // we are creating these on the fly, and should have CurrentApplication\n         // defined already.\n\n         const ids = this.ids;\n\n         const whoOptions = [\n            // current lane/participant\n            {\n               id: 0,\n               value: L(\"Current Participant\"),\n            },\n            // manually select User/Role\n            {\n               id: 1,\n               value: L(\"Select Role or User\"),\n            },\n         ];\n\n         // if we don't have a lane, then remove the lane option:\n         if (!this.laneDiagramID || this.laneDiagramID == \"?laneID?\") {\n            whoOptions.shift();\n         }\n\n         const modalUi = () => {\n            return {\n               id: ids.modalWindow,\n               view: \"window\",\n               position: \"center\",\n               fullscreen: true,\n               modal: true,\n               head: {\n                  view: \"toolbar\",\n                  css: \"webix_dark\",\n                  cols: [\n                     {\n                        view: \"spacer\",\n                        width: 17,\n                     },\n                     {\n                        view: \"label\",\n                        label: L(\"Customize the approval layout\"),\n                     },\n                     {\n                        view: \"spacer\",\n                     },\n                     {\n                        view: \"button\",\n                        label: L(\"Cancel\"),\n                        autowidth: true,\n                        click: function () {\n                           $$(ids.modalWindow).close();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webixtype_form\",\n                        label: L(\"Save\"),\n                        autowidth: true,\n                        click: () => {\n                           this.formBuilder = $$(ids.formBuilder).getFormData();\n                           this.element.formBuilder = this.formBuilder;\n                           (this.formBuilder.components || []).forEach(\n                              (component) => {\n                                 if (\n                                    component._key &&\n                                    component.key != component._key\n                                 )\n                                    component.key = component._key;\n                              }\n                           );\n                           this.emit(\"save\");\n                           $$(ids.modalWindow).close();\n                        },\n                     },\n                     {\n                        view: \"spacer\",\n                        width: 17,\n                     },\n                  ],\n               },\n               body: {\n                  id: ids.formBuilder,\n                  view: \"formiobuilder\",\n                  dataFields: this.dataFields,\n                  formComponents: this.formIOComponents,\n               },\n            };\n         };\n\n         const toUserUI = this.toUser.ui(element?.toUsers ?? {});\n\n         return {\n            id: ids.component,\n            view: \"form\",\n            rows: [\n               {\n                  id: ids.name,\n                  view: \"text\",\n                  label: L(\"Name\"),\n                  name: \"name\",\n                  value: \"\",\n               },\n               {\n                  id: ids.who,\n                  view: \"select\",\n                  label: L(\"Who\"),\n                  name: \"who\",\n                  options: whoOptions,\n                  value: whoOptions.length == 1 ? \"1\" : \"\",\n                  on: {\n                     onChange: (val) => {\n                        if (parseInt(val) == 1) {\n                           $$(ids.toUser).show();\n                        } else {\n                           $$(ids.toUser).hide();\n                        }\n                     },\n                  },\n               },\n               {\n                  id: ids.toUser,\n                  rows: [toUserUI],\n                  paddingY: 10,\n               },\n               {\n                  view: \"spacer\",\n                  height: 10,\n               },\n               {\n                  view: \"toolbar\",\n                  type: \"clean\",\n                  borderless: true,\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: L(\"Data To Approve\"),\n                     },\n                     {\n                        view: \"spacer\",\n                     },\n                     {\n                        view: \"button\",\n                        value: L(\"Customize Layout\"),\n                        autowidth: true,\n                        click: () => {\n                           webix.ui(modalUi()).show();\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"layout\",\n                  type: \"form\",\n                  rows: [\n                     {\n                        view: \"layout\",\n                        padding: 20,\n                        rows: [\n                           {\n                              id: ids.formPreview,\n                              view: \"formiopreview\",\n                              formComponents: [],\n                              height: 500,\n                           },\n                        ],\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n\n      /**\n       * process the formIOComponents components and data for the preview and\n       * form builder\n       * @function processComponents\n       */\n      processComponents() {\n         const ids = this.ids;\n         this.dataFields = this.element.process.processDataFields(this.element);\n         this.formIOComponents = this.element.preProcessFormIOComponents();\n\n         const $preview = $$(ids.formPreview).getParentView();\n         $preview.removeView(ids.formPreview);\n\n         $preview.addView({\n            id: ids.formPreview,\n            view: \"formiopreview\",\n            formComponents: this.formIOComponents,\n            height: 500,\n         });\n      }\n\n      populate(element) {\n         this.element = element;\n         const ids = this.ids;\n\n         const $name = $$(ids.name);\n         const $who = $$(ids.who);\n\n         $name.setValue(element.label);\n\n         if (element.who !== null) {\n            $who.setValue(element.who);\n            if (element.who === \"0\") {\n               $$(ids.toUser).hide();\n            } else {\n               let $toUser = this.toUser.ui(element.toUsers ?? {});\n               let $toUserUi = {\n                  id: ids.toUser,\n                  rows: [$toUser],\n                  paddingY: 10,\n               };\n               webix.ui($toUserUi, $$(ids.toUser));\n            }\n         }\n         this.processComponents();\n      }\n\n      /**\n       * values()\n       * return an object hash representing the values for this component.\n       * @return {json}\n       */\n\n      values() {\n         const obj = {};\n         const ids = this.ids;\n\n         const $name = $$(ids.name);\n         // \"who\", \"toUsers\", \"formBuilder\"\n         const $who = $$(ids.who);\n\n         obj.label = $name?.getValue() ?? \"\";\n         obj.name = $name?.getValue() ?? \"\";\n         obj.who = $who?.getValue() ?? \"\";\n         obj.formBuilder = this.formBuilder;\n         obj.toUsers = this.toUser.values();\n\n         return obj;\n      }\n   }\n\n   return UIProcessUserApproval;\n}\n","/*\n * ABProcessTaskUserExternal\n *\n * Display the form for entering the properties for an External Task\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\nimport FABProcessParticipant from \"./ABProcessParticipant_selectManagersUI\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   const ABProcessParticipantUsers = FABProcessParticipant(AB);\n\n   class UIProcessUserExternal extends UIClass {\n      constructor() {\n         super(\"properties_process_user_external\", {\n            toUsers: \"\",\n         });\n\n         this.toUsers = new ABProcessParticipantUsers(\n            `${this.ids.component}_to_`\n         );\n      }\n\n      static get key() {\n         return \"External\";\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return {\n            id: ids.component,\n            view: \"form\",\n            elements: [\n               {\n                  view: \"text\",\n                  label: L(\"Name\"),\n                  name: \"name\",\n                  value: \"\",\n               },\n               {\n                  view: \"select\",\n                  label: L(\"Who\"),\n                  name: \"who\",\n                  options: [\n                     // current lane/participant\n                     {\n                        id: 0,\n                        value: L(\"Current Participant\"),\n                     },\n                     // manually select User/Role\n                     {\n                        id: 1,\n                        value: L(\"Select Role or User\"),\n                     },\n                  ],\n                  value: \"0\",\n                  on: {\n                     onChange: (value) => {\n                        const $toUsers = $$(ids.toUsers);\n                        if (parseInt(value) === 1) $toUsers.show();\n                        else $toUsers.hide();\n                     },\n                  },\n               },\n               {\n                  id: ids.toUsers,\n                  rows: [this.toUsers.ui({})],\n               },\n               {\n                  view: \"texthighlight\",\n                  label: L(\"URL\"),\n                  name: \"url\",\n                  value: \"\",\n                  highlight: (string) => {\n                     return string.replace(/{%=[^%]*%}/g, (x) => {\n                        return `<span style=\"font-weight:500;background-color:#ebedf0;\">${x}</span>`\n                     })\n                  },\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n\n      populate(element) {\n         const ids = this.ids;\n         const obj = {\n            name: element.name,\n            who: element.who,\n            url: element.url,\n         };\n         const $component = $$(ids.component);\n         const $toUsers = $$(ids.toUsers);\n\n         this.element = element;\n\n         $component.setValues(obj);\n\n         if (element.who === \"0\") $toUsers.hide();\n         else\n            webix.ui(\n               {\n                  id: ids.toUsers,\n                  rows: [this.toUsers.ui(element.toUsers ?? {})],\n                  paddingY: 10,\n               },\n               $toUsers\n            );\n      }\n\n      /**\n       * values()\n       * return an object hash representing the values for this component.\n       * @return {json}\n       */\n\n      values() {\n         const ids = this.ids;\n\n         const $component = $$(ids.component);\n\n         const obj = $component.getValues();\n\n         obj.label = obj.name;\n         obj.toUsers = this.toUsers.values();\n\n         return obj;\n      }\n   }\n\n   return UIProcessUserExternal;\n}\n","/*\n * UIProcessTriggerLifecycle\n *\n * Display the form for entering the properties for a new\n * Lifecycle Trigger.\n *\n * @return {ClassUI} The Class Definition for this UI widget.\n */\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UIProcessTriggerLifecycle extends UIClass {\n      constructor() {\n         super(\"properties_process_trigger_lifecycle\", {\n            name: \"\",\n            objList: \"\",\n            lifecycleList: \"\",\n         });\n      }\n\n      static get key() {\n         return \"TriggerLifecycle\";\n      }\n      // {string}\n      // This should match the ABProcessTriggerLifecycleCore.defaults().key value.\n\n      ui() {\n         // we are creating these on the fly, and should have CurrentApplication\n         // defined already.\n\n         var allObjects = this.CurrentApplication.objectsIncluded();\n         var listObj = [];\n         allObjects.forEach((obj) => {\n            listObj.push({ id: obj.id, value: obj.label });\n         });\n\n         let ids = this.ids;\n         return {\n            id: ids.component,\n            rows: [\n               { view: \"label\", label: L(\"Object Lifecycle Trigger:\") },\n               {\n                  view: \"label\",\n                  label: L(\n                     \"Begins a process when an object's data is Added, Updated or Deleted.\"\n                  ),\n               },\n               {\n                  view: \"form\",\n                  id: ids.component,\n                  elements: [\n                     {\n                        id: ids.name,\n                        view: \"text\",\n                        label: L(\"Name\"),\n                        name: \"name\",\n                        value: \"\",\n                     },\n                     {\n                        id: ids.objList,\n                        view: \"select\",\n                        label: L(\"Object\"),\n                        // value: this.objectID,\n                        options: listObj,\n                     },\n                     {\n                        id: ids.lifecycleList,\n                        view: \"select\",\n                        label: L(\"lifecycle\"),\n                        // value: this.lifecycleKey,\n                        options: [\n                           { id: \"added\", value: L(\"after Add\") },\n                           { id: \"updated\", value: L(\"after Update\") },\n                           { id: \"deleted\", value: L(\"after Delete\") },\n                        ],\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         return Promise.resolve();\n      }\n\n      // applicationLoad(application) {\n      //    super.applicationLoad(application);\n\n      //    $$(this.ids.objList).define(\"data\", listObj);\n      //    $$(this.ids.objList).refresh();\n      // }\n\n      // show() {\n      //    super.show();\n      //    AppList.show();\n      // }\n\n      populate(element) {\n         let ids = this.ids;\n         $$(ids.name).setValue(element.name);\n         $$(ids.objList).setValue(element.objectID);\n         $$(ids.lifecycleList).setValue(element.lifecycleKey);\n      }\n\n      /**\n       * values()\n       * return an object hash representing the values for this component.\n       * @return {json}\n       */\n      values() {\n         var obj = {};\n         var ids = this.ids;\n\n         obj.label = $$(ids.name)?.getValue();\n         obj.objectID = $$(ids.objList)?.getValue();\n         obj.lifecycleKey = $$(ids.lifecycleList).getValue();\n         obj.triggerKey = `${obj.objectID}.${obj.lifecycleKey}`;\n\n         return obj;\n      }\n   }\n\n   return UIProcessTriggerLifecycle;\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = UIClass.L();\n\n   class ABViewQueryBuilderObjectFieldConditions extends UIClass {\n      /**\n       * @param {object} App\n       *      The shared App object that is created in OP.Component\n       * @param {string} idBase\n       *      Identifier for this component\n       */\n      constructor(base, label) {\n         super(`${base}_ofc`, {\n            queryBuilder: \"\",\n            queryBuilderContainer: \"\",\n            queryBuilderLayout: \"\",\n            showQBButton: \"\",\n         });\n         this.label = label;\n\n         this.FilterComplex = AB.filterComplexNew(`${this.ids.component}_fc`);\n      }\n\n      /**\n       * cleanRules\n       * walk through all the QueryBuilder (QB) rules and make conversions\n       * of the data into their proper formats.\n       * @param {obj} rules  the {rules} obj that is returned from the QB object\n       * @param {array} fields  an array of field definitions from the QB object\n       * @param {bool} dateToString  convert Dates to String format?\n       */\n      cleanRules(rules, fields, dateToString) {\n         if (typeof dateToString == \"undefined\") dateToString = true;\n\n         // walk the given condition rules / values, walk them and make sure\n         // any given rules have properly formatted values.\n         function processCondition(rule) {\n            // make sure rule is provided\n            if (rule) {\n               if (rule.glue && rule.rules) {\n                  rule.rules.forEach((r) => {\n                     processCondition(r);\n                  });\n               } else {\n                  // converting a single rule:\n\n                  var field = fields.filter((f) => {\n                     return f.id == rule.key;\n                  })[0];\n                  if (field) {\n                     switch (field.type) {\n                        case \"number\":\n                        case \"formula\":\n                           // when getting data from the server, the numbers are\n                           // sent back as strings (\"100.25\").\n                           // make sure to convert strings to numbers:\n                           if (typeof rule.value == \"string\") {\n                              if (rule.value.indexOf(\".\") == -1) {\n                                 rule.value = parseInt(rule.value);\n                              } else {\n                                 rule.value = parseFloat(rule.value);\n                              }\n                           }\n                           break;\n                        case \"date\":\n                           // in some cases we want to convert the Date() object returned\n                           // by QueryBuilder into a string for saving on the Server.\n                           if (dateToString) {\n                              // if we have a Date() obj returned from QueryBuilder,\n                              // convert to a string format:\n                              if (rule.value instanceof Date) {\n                                 rule.value = webix.i18n.dateFormatStr(\n                                    rule.value\n                                 );\n                              }\n                           } else {\n                              // in other cases we want to convert the string returned\n                              // by the server into a Date() for the QB\n                              if (typeof rule.value == \"string\") {\n                                 rule.value = new Date(rule.value);\n                              }\n                           }\n\n                           break;\n                     }\n                  }\n               }\n            }\n         }\n         processCondition(rules);\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         let _ui = {\n            id: ids.queryBuilderLayout,\n            view: \"layout\",\n            hidden: true,\n            type: \"line\",\n            rows: [\n               {\n                  id: ids.showQBButton,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"addqb\",\n                        value: L(\"Add Custom Conditions\"),\n                        autowidth: true,\n                        click: () => {\n                           $$(ids.queryBuilderContainer).show();\n                           $$(ids.showQBButton).hide();\n                           // _logic.buttonCancel();\n                           // Timing Wise, this needs to be called when the\n                           // query UI is already created.\n                           this.FilterComplex.fieldsLoad(\n                              this.conditionFields(),\n                              this.CurrentObject\n                           );\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n               {\n                  hidden: true,\n                  id: ids.queryBuilderContainer,\n                  cols: [this.FilterComplex.ui],\n               },\n            ],\n         };\n\n         if (this.label) {\n            _ui.rows[1].cols.unshift({\n               view: \"label\",\n               css: \"ab-text-bold\",\n               label: this.label,\n               width: uiConfig.labelWidthLarge,\n            });\n         }\n\n         return _ui;\n      }\n\n      init(AB) {\n         this.AB = AB;\n         this.FilterComplex.init(/*{isRecordRule: true}*/);\n      }\n\n      // // component\n      // // initialize the UI display for this popup editor.\n      // component(App, idBase) {\n      //    this.App = App;\n      //    this.idBase = idBase;\n\n      //    var L = App.Label;\n\n      //    var uniqueInstanceID = webix.uid();\n      //    var myUnique = (key) => {\n      //       // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n      //       return `${idBase}_${key}_${uniqueInstanceID}`;\n      //    };\n\n      //    // internal list of Webix IDs to reference our UI components.\n      //    var ids = (this.ids = {\n      //       component: myUnique(\"qbObjectFieldConditions\"),\n      //       queryBuilder: myUnique(\"qBuilder\"),\n      //       queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n      //       queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n      //       showQBButton: myUnique(\"showQBButton\"),\n      //    });\n\n      //    // webix UI definition:\n      //    this.ui = {\n      //       view: \"layout\",\n      //       id: ids.queryBuilderLayout,\n      //       hidden: true,\n      //       type: \"line\",\n      //       rows: [\n      //          {\n      //             id: ids.showQBButton,\n      //             cols: [\n      //                { fillspace: true },\n      //                {\n      //                   view: \"button\",\n      //                   css: \"webix_primary\",\n      //                   name: \"addqb\",\n      //                   value: L(\"Add Custom Conditions\"),\n      //                   autowidth: true,\n      //                   click: function () {\n      //                      $$(ids.queryBuilderContainer).show();\n      //                      $$(ids.showQBButton).hide();\n      //                      // _logic.buttonCancel();\n      //                   },\n      //                },\n      //                { fillspace: true },\n      //             ],\n      //          },\n      //          {\n      //             hidden: true,\n      //             id: ids.queryBuilderContainer,\n      //             cols: [\n      //                {\n      //                   view: \"querybuilder\",\n      //                   id: ids.queryBuilder,\n      //                   fields: this.conditionFields(),\n      //                },\n      //             ],\n      //          },\n      //       ],\n      //    };\n\n      //    // tack on a label if provided.\n      //    if (this.label) {\n      //       this.ui.rows[1].cols.unshift({\n      //          view: \"label\",\n      //          css: \"ab-text-bold\",\n      //          label: this.label,\n      //          width: uiConfig.labelWidthLarge,\n      //       });\n      //    }\n\n      //    // for setting up UI\n      //    this.init = (options) => {\n      //       options = options || {};\n\n      //       // register callbacks:\n      //       for (var c in _logic.callbacks) {\n      //          _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //       }\n      //    };\n\n      //    // internal business logic\n      //    var _logic = (this._logic = {\n      //       callbacks: {\n      //          onCancel: function () {\n      //             console.warn(\"NO onCancel()!\");\n      //          },\n      //          onSave: function (field) {\n      //             console.warn(\"NO onSave()!\");\n      //          },\n      //       },\n\n      //       /**\n      //        * cleanRules\n      //        * walk through all the QueryBuilder (QB) rules and make conversions\n      //        * of the data into their proper formats.\n      //        * @param {obj} rules  the {rules} obj that is returned from the QB object\n      //        * @param {array} fields  an array of field definitions from the QB object\n      //        * @param {bool} dateToString  convert Dates to String format?\n      //        */\n      //       cleanRules: (rules, fields, dateToString) => {\n      //          this.cleanRules(rules, fields, dateToString);\n      //       },\n\n      //       getValue: () => {\n      //          var values = null;\n      //          var QB = $$(ids.queryBuilder);\n      //          if (QB) {\n      //             values = QB.getValue();\n      //          }\n\n      //          // convert dates to simpler format:\n      //          // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n      //          // and webix doesn't seem to understand them when we send them back.\n      //          // so save simple date values: \"mm/dd/yyyy\"\n      //          if (values) {\n      //             _logic.cleanRules(values[0], values[1], true);\n      //          }\n\n      //          return values;\n      //       },\n\n      //       setValue: (values) => {\n      //          values = values || [];\n      //          if (!Array.isArray(values)) values = [values];\n      //          if (values.length == 0) {\n      //             values.push({});\n      //          } // push default rules\n      //          if (values.length < 2) {\n      //             values.push(this.conditionFields());\n      //          }\n\n      //          // convert dates from our server side \"string\" format into\n      //          // Date() objects.\n      //          _logic.cleanRules(values[0], values[1], false);\n\n      //          var QB = $$(ids.queryBuilder);\n      //          if (QB) {\n      //             if (values[0] && values[0].rules && values[0].rules.length) {\n      //                QB.setValue(values[0]);\n      //                $$(ids.queryBuilderContainer).show();\n      //                $$(ids.showQBButton).hide();\n      //             }\n      //          }\n      //       },\n      //    });\n\n      //    this.getValue = _logic.getValue;\n      //    this.show = _logic.show;\n      //    this.setValue = _logic.setValue;\n      // }\n\n      objectLoad(object) {\n         super.objectLoad(object);\n         this.FilterComplex.fieldsLoad(this.conditionFields(), object);\n      }\n\n      getValue() {\n         var condition = this.FilterComplex.getValue();\n         let fields = this.conditionFields();\n\n         // convert dates to simpler format:\n         // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n         // and webix doesn't seem to understand them when we send them back.\n         // so save simple date values: \"mm/dd/yyyy\"\n\n         if (condition) {\n            this.cleanRules(condition, fields, true);\n         }\n\n         return condition; // [condition, fields];\n      }\n\n      setValue(condition) {\n         // previous format was [ condition, fields ]\n         if (Array.isArray(condition)) {\n            condition = condition[0];\n         }\n\n         condition = condition || { glue: \"and\", rules: [] };\n         // if (!Array.isArray(values)) values = [values];\n         // if (values.length == 0) {\n         //    values.push({});\n         // } // push default rules\n         // if (values.length < 2) {\n         //    values.push(this.conditionFields());\n         // }\n\n         // convert dates from our server side \"string\" format into\n         // Date() objects.\n         this.cleanRules(condition, this.conditionFields(), false);\n\n         this.FilterComplex.setValue(condition);\n\n         /*\n         var QB = $$(ids.queryBuilder);\n         if (QB) {\n            if (values[0] && values[0].rules && values[0].rules.length) {\n               QB.setValue(values[0]);\n               $$(ids.queryBuilderContainer).show();\n               $$(ids.showQBButton).hide();\n            }\n         }\n*/\n      }\n\n      // conditionFields()\n      // Return the list of fields we are able to update.\n      // @return {array} of querybuilder field definitions:\n      //\t\t\t\t\t[\n      // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n      //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n      //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n      //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n      //\t\t\t\t\t]\n      conditionFields() {\n         var fieldTypes = [\n            \"string\",\n            \"LongText\",\n            \"number\",\n            \"date\",\n            \"email\",\n            \"formula\",\n            \"calculate\",\n         ];\n\n         var currFields = [];\n\n         if (this.CurrentObject) {\n            this.CurrentObject.fields().forEach((f) => {\n               if (fieldTypes.indexOf(f.key) != -1) {\n                  // NOTE: the .id value must match the obj[.id]  in the data set\n                  // so if your object data looks like:\n                  // \t{\n                  //\t\tname_first:'Neo',\n                  //\t\tname_last: 'The One'\n                  //  },\n                  // then the ids should be:\n                  // { id:'name_first', value:'xxx', type:'string' }\n\n                  ////\n                  //// New FilterComplex wants actual fields returned:\n                  ////\n\n                  // let type = f.key;\n                  // if (f.key == \"formula\" || f.key == \"calculate\")\n                  //    type = \"number\";\n                  // else if (f.key == \"LongText\") type = \"string\";\n\n                  // currFields.push({\n                  //    id: f.columnName,\n                  //    value: f.label,\n                  //    type: type,\n                  // });\n\n                  currFields.push(f);\n               }\n            });\n         }\n\n         return currFields;\n      }\n\n      // process\n      // Take the provided data and process each of our rules.\n      // @param {obj} options\n      // @return {promise}\n      // process(options) {\n      //    return new Promise((resolve, reject) => {\n      //       var numDone = 0;\n      //       var onDone = () => {\n      //          numDone++;\n      //          if (numDone >= this.listRules.length) {\n      //             resolve();\n      //          }\n      //       };\n\n      //       this.listRules.forEach((rule) => {\n      //          rule\n      //             .process(options)\n      //             .then(function () {\n      //                onDone();\n      //             })\n      //             .catch((err) => {\n      //                reject(err);\n      //             });\n      //       });\n\n      //       if (this.listRules.length == 0) {\n      //          resolve();\n      //       }\n      //    });\n      // }\n\n      // showQueryBuilderContainer() {\n      //    $$(this.ids.queryBuilderLayout).show();\n      //    $$(this.ids.queryBuilderContainer).show();\n      //    $$(this.ids.showQBButton).hide();\n      // }\n   }\n\n   return ABViewQueryBuilderObjectFieldConditions;\n}\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nimport FObjectQueryBuilder from \"./ABViewQueryBuilderObjectFieldConditions\";\n// const ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = UIClass.L();\n\n   const ObjectQueryBuilder = FObjectQueryBuilder(AB);\n\n   class ABViewRule extends UIClass {\n      /**\n       * @param {object} App\n       *      The shared App object that is created in OP.Component\n       * @param {string} idBase\n       *      Identifier for this component\n       */\n      constructor(base, listActions) {\n         super(base, {\n            selectAction: \"\",\n            queryBuilder: \"\",\n            valueDisplay: \"\",\n         });\n\n         // NOTE: there can be multiple instances of this Rule displayed,\n         // so make each one unique.\n         var uniqueInstanceID = webix.uid();\n         var myUnique = (key) => {\n            // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n            return `${key}_${uniqueInstanceID}`;\n         };\n         Object.keys(this.ids).forEach((k) => {\n            this.ids[k] = myUnique(k);\n         });\n\n         this.listActions = listActions || []; // the list of Actions this Rule manages\n\n         this.actionDropList = []; // the Webix UI droplist\n         this.listActions.forEach((a) => {\n            this.actionDropList.push({ id: a.key, value: a.label });\n         });\n\n         this.selectedAction = null; // the currently selected Action.key\n         if (this.actionDropList.length > 0) {\n            this.selectedAction = this.actionDropList[0].id;\n         }\n\n         this.removable = true; // can I delete this rule?\n\n         this.objectQB = null; // The QueryBuilder (QB) object\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         this.objectQB?.init(AB);\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.init(this.AB);\n            // // Action.component(this.App, this.idBase);\n            // var comp = Action.valueDisplay(this.ids.valueDisplay);\n\n            // this.replaceValueDisplay(comp);\n\n            // // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            // comp.init();\n         }\n      }\n\n      // component(App, idBase) {\n      //    this.App = App;\n      //    this.idBase = idBase;\n\n      //    // this is different because multiple instances of this View can be displayed\n      //    // at the same time.  So make each instance Unique:\n      //    var uniqueInstanceID = webix.uid();\n      //    var myUnique = (key) => {\n      //       // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n      //       return `${idBase}_${key}_${uniqueInstanceID}`;\n      //    };\n\n      //    // internal list of Webix IDs to reference our UI components.\n      //    var ids = (this.ids = {\n      //       // each instance must be unique\n      //       component: myUnique(\"component\"),\n\n      //       selectAction: myUnique(\"chooseAction\"),\n\n      //       queryBuilder: myUnique(\"queryBuilder\"),\n\n      //       valueDisplay: myUnique(\"valueArea\"),\n      //    });\n\n      //    this.objectQB.label = L(\"When\");\n      //    this.objectQB.component(this.App, this.idBase);\n\n      //    // for setting up UI\n      //    this.init = (options) => {\n      //       // register callbacks:\n      //       for (var c in _logic.callbacks) {\n      //          _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //       }\n\n      //       this.objectQB.init();\n\n      //       // make sure the current Action's value display is initialized:\n      //       var Action = this.currentAction();\n      //       if (Action) {\n      //          Action.component(this.App, this.idBase);\n      //          var comp = Action.valueDisplay(ids.valueDisplay);\n\n      //          _logic.replaceValueDisplay(comp);\n\n      //          // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n      //          comp.init();\n      //       }\n      //    };\n\n      //    // internal business logic\n      //    var _logic = (this._logic = {\n      //       callbacks: {\n      //          onDelete: function () {\n      //             console.warn(\"NO onDelete()!\");\n      //          },\n      //          onSave: function (field) {\n      //             console.warn(\"NO onSave()!\");\n      //          },\n      //       },\n\n      //       replaceValueDisplay: (component) => {\n      //          // remove current content area:\n      //          var $ValueDisplay = $$(this.ids.valueDisplay);\n      //          if (!$ValueDisplay) return;\n\n      //          var children = $ValueDisplay.getChildViews();\n      //          var cloneChildren = [];\n      //          children.forEach((c) => {\n      //             cloneChildren.push(c);\n      //          });\n      //          cloneChildren.forEach((c) => {\n      //             $ValueDisplay.removeView(c);\n      //          });\n\n      //          $ValueDisplay.addView(component.ui);\n      //       },\n\n      //       selectAction: (newValue, oldVal) => {\n      //          if (newValue) {\n      //             $$(this.ids.component)\n      //                .getChildViews()\n      //                .forEach((views) => {\n      //                   views.show();\n      //                });\n      //          }\n      //          // bonus:  save current state of previous Action\n      //          var prevAction = this.getAction(oldVal);\n      //          if (prevAction) {\n      //             prevAction.stashCondition(this.objectQB.getValue());\n      //          }\n\n      //          // now switch to the new Action\n      //          this.selectedAction = newValue;\n      //          var currAction = this.currentAction();\n      //          if (currAction) {\n      //             // reset Condition filters.\n      //             this.objectQB.setValue(currAction.condition());\n\n      //             // have Action display it's values form\n      //             currAction.component(this.App, this.idBase);\n      //             var component = currAction.valueDisplay(ids.valueDisplay);\n      //             _logic.replaceValueDisplay(component);\n      //             component.init();\n      //             // currAction.valueDisplay(ids.valueDisplay);\n      //          }\n      //       },\n      //    });\n      // }\n\n      // not intended to be called externally\n      ui() {\n         return {\n            id: this.ids.component,\n            view: \"layout\",\n            css: \"ab-component-form-rules\",\n            padding: 20,\n            // margin: 10,\n\n            // this should be a CSS setting: this.AB.Config.xxxx\n            // width: 680,\n            type: \"line\",\n            rows: [\n               {\n                  view: \"template\",\n                  css: \"ab-component-form-rules-delete\",\n                  template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n                  height: 30,\n                  borderless: true,\n                  hidddatasourceen: this.removable == false,\n                  onClick: {\n                     \"ab-component-remove\": (/*e, id, trg*/) => {\n                        this.emit(\"delete\", this);\n                        // this._logic.callbacks.onDelete(this);\n                     },\n                  },\n               },\n               // Action\n               {\n                  id: this.ids.selectAction,\n                  view: \"richselect\",\n                  label: L(\"Action\"),\n                  placeholder: L(\"Choose an action\"),\n                  labelWidth: uiConfig.labelWidthLarge,\n                  options: this.actionDropList,\n                  on: {\n                     onChange: (newVal, oldVal) => {\n                        this.selectAction(newVal, oldVal);\n                     },\n                  },\n               },\n\n               // Values\n               {\n                  for: \"values\",\n                  hidden: true,\n                  cells: [\n                     {\n                        view: \"layout\",\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Values\"),\n                              css: \"ab-text-bold\",\n                              width: uiConfig.labelWidthLarge,\n                           },\n                           {\n                              id: this.ids.valueDisplay,\n                              view: \"layout\",\n                              rows: [\n                                 {\n                                    label: L(\n                                       \" ABViewRule: This should be the Set Area\"\n                                    ),\n                                    css: \"ab-text-bold\",\n                                    height: 30,\n                                 },\n                              ],\n                           },\n                        ],\n                     },\n                  ],\n               },\n\n               // When\n               this.objectQB.ui(),\n            ],\n         };\n      }\n\n      replaceValueDisplay(component) {\n         // remove current content area:\n         var $ValueDisplay = $$(this.ids.valueDisplay);\n         if (!$ValueDisplay) return;\n\n         var children = $ValueDisplay.getChildViews();\n         var cloneChildren = [];\n         children.forEach((c) => {\n            cloneChildren.push(c);\n         });\n         cloneChildren.forEach((c) => {\n            $ValueDisplay.removeView(c);\n         });\n\n         $ValueDisplay.addView(component.ui());\n      }\n\n      selectAction(newValue, oldVal) {\n         if (newValue) {\n            $$(this.ids.component)\n               .getChildViews()\n               .forEach((views) => {\n                  views.show();\n               });\n         }\n         // bonus:  save current state of previous Action\n         var prevAction = this.getAction(oldVal);\n         if (prevAction) {\n            prevAction.stashCondition(this.objectQB.getValue());\n         }\n\n         // now switch to the new Action\n         this.selectedAction = newValue;\n         var currAction = this.currentAction();\n         if (currAction) {\n            // reset Condition filters.\n            this.objectQB?.setValue(currAction.condition());\n\n            // have Action display it's values form\n            // currAction.component(this.App, this.idBase);\n            this.replaceValueDisplay(currAction);\n            currAction.init(this.AB);\n            // var component = currAction.valueDisplay(this.ids.valueDisplay);\n            // this.replaceValueDisplay(component);\n            // this.replaceValueDisplay(currAction.ui());\n            // component.init();\n            // currAction.valueDisplay(ids.valueDisplay);\n         }\n      }\n\n      // return the QueryBuilder fields data for the currently selected Action.\n      conditionFields() {\n         var fields = [];\n\n         var selectedAction = this.currentAction();\n         if (selectedAction) {\n            fields = selectedAction.conditionFields();\n         }\n\n         return fields;\n      }\n\n      currentAction() {\n         return this.getAction(this.selectedAction);\n      }\n\n      getAction(key) {\n         return this.listActions.filter((a) => {\n            return a.key == key;\n         })[0];\n      }\n\n      objectLoad(object) {\n         super.objectLoad(object);\n         this.listActions.forEach((a) => {\n            a.objectLoad(object);\n         });\n\n         var label = L(\"When\");\n\n         this.objectQB = new ObjectQueryBuilder(this.ids.component, label);\n         this.objectQB.objectLoad(object);\n      }\n\n      formLoad(form) {\n         this.viewLoad(form);\n         this.listActions.forEach((a) => {\n            a.formLoad(form);\n         });\n      }\n\n      get currentForm() {\n         return this.CurrentView;\n      }\n\n      // processPre(options = {}) {\n      //    let isValid = this.isValid(options.data);\n      //    if (!isValid) return;\n\n      //    let currentAction = this.currentAction();\n      //    if (!currentAction) return;\n\n      //    currentAction.processUpdateObject({}, options.data);\n      // }\n\n      // // process\n      // // Take the provided data and process this rule\n      // // @param {obj} options\n      // // @return {Promise}\n      // process(options) {\n      //    var currentAction = this.currentAction();\n      //    if (!currentAction) return Promise.resolve();\n\n      //    let isValid = this.isValid(options.data);\n      //    if (isValid) {\n      //       return currentAction.process(options);\n      //    } else {\n      //       // else just resolve and continue on\n      //       return new Promise((resolve /* , reject */) => {\n      //          resolve();\n      //       });\n      //    }\n      // }\n\n      fromSettings(settings) {\n         settings = settings || {};\n\n         if (settings.selectedAction) {\n            // store our Query Rules\n            this.selectedAction = settings.selectedAction;\n            var selectedAction = this.currentAction();\n            if (!selectedAction) return;\n            selectedAction.stashCondition(settings.queryRules || {});\n\n            // if our UI components are present, populate them properly:\n            if (this.ids) {\n               // Trigger our UI to refresh with this selected Action:\n               // NOTE: this also populates the QueryBuilder\n               $$(this.ids.selectAction).setValue(this.selectedAction);\n               // this._logic.selectAction(this.selectedAction);\n            }\n\n            // now continue with setting up our settings:\n            selectedAction.fromSettings(settings.actionSettings);\n         }\n      }\n\n      toSettings() {\n         var settings = {};\n\n         if (this.selectedAction) {\n            settings.selectedAction = this.selectedAction;\n            settings.queryRules = this.objectQB.getValue();\n            let currentAction = this.currentAction();\n            if (currentAction) {\n               settings.actionSettings = currentAction.toSettings();\n            }\n         }\n\n         return settings;\n      }\n\n      // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n      // choosers properly if it hasn't been shown before the .setValue() call.\n      // so this work around allows us to refresh the display after the .show()\n      // on the popup.\n      // When they've fixed the bug, we'll remove this workaround:\n      qbFixAfterShow() {\n         var currAction = this.currentAction();\n         if (currAction && this.objectQB) {\n            this.objectQB.setValue(currAction.condition());\n            currAction.qbFixAfterShow();\n         }\n      }\n\n      /**\n       * @method isReady()\n       * returns a promise that gets resolved once our action is ready to work.\n       * @return {Promise}\n       */\n      async isReady() {\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            return currentAction.isReady();\n         }\n         return Promise.resolve();\n      }\n\n      isValid(data = {}) {\n         var id = \"hiddenQB_\" + webix.uid();\n\n         // if our data passes the QueryRules then tell Action to process\n         var ui = {\n            id: id,\n            hidden: true,\n            view: \"querybuilder\",\n         };\n         var hiddenQB = webix.ui(ui);\n\n         let currentAction = this.currentAction();\n         var QBCondition = currentAction.condition();\n\n         if (this.objectQB) {\n            this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n         }\n\n         let query = QBCondition[0] || {},\n            fields = QBCondition[1] || [];\n\n         let convertToNumber = (text = \"\") => {\n            // if we have multiple rules we need to check if value is already a\n            // number before converting.\n            if (typeof text == \"number\") return text;\n\n            return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n         };\n\n         // Fix string data in number type\n         // NOTE: \"1000\" > \"99\" = false    >_<!\n         fields\n            .filter(\n               (f) =>\n                  f.type == \"number\" ||\n                  f.type == \"calculate\" ||\n                  f.type == \"formula\"\n            )\n            .forEach((f) => {\n               try {\n                  // filter conditions\n                  if (query && query.rules && Array.isArray(query.rules)) {\n                     query.rules.forEach((r) => {\n                        if (r.key != f.id) return;\n\n                        r.value = convertToNumber(r.value);\n                     });\n                  }\n\n                  // row data\n                  if (data[f.id] && typeof data[f.id] === \"string\") {\n                     data[f.id] = convertToNumber(data[f.id]);\n                  }\n               } catch (e) {\n                  // continue regardless of error\n               }\n            });\n\n         // hiddenQB.setValue(QBCondition);\n         hiddenQB.setValue({\n            query: query,\n            fields: fields,\n         });\n\n         var QBHelper = hiddenQB.getFilterHelper();\n         var isValid = QBHelper(data);\n\n         hiddenQB.destructor(); // remove the QB\n\n         return isValid;\n      }\n\n      get isPreProcess() {\n         let currentAction = this.currentAction();\n         return currentAction.isPreProcess || false;\n      }\n   }\n\n   return ABViewRule;\n}\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = UIClass.L();\n\n   class ABViewRuleAction extends UIClass {\n      /**\n       * @param {object} App\n       *      The shared App object that is created in OP.Component\n       * @param {string} idBase\n       *      Identifier for this component\n       * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n       */\n      constructor(idBase, ids) {\n         super(idBase, ids);\n\n         let uid = webix.uid();\n         Object.keys(this.ids).forEach((k) => {\n            this.ids[k] = `${k}_${uid}`;\n         });\n\n         this.key = \"ABViewRuleAction\";\n\n         this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n         this.queryRules = {}; // default set of rules for the Query Builder condition\n\n         this.valueRules = {}; // the initial Value Rules for this Action\n         // The Action Subclass defines what this {} is.\n\n         // this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n      }\n\n      ui() {\n         return {};\n      }\n\n      init(AB) {\n         this.AB = AB;\n         return Promise.resolve();\n      }\n      // component(App, idBase) {\n      //    this.App = App;\n      //    this.idBase = idBase;\n\n      //    this.label = L(\"generic abviewruleaction\");\n\n      //    function myUnique(key) {\n      //       return App.unique(`${idBase}_${key}`);\n      //    }\n\n      //    // internal list of Webix IDs to reference our UI components.\n      //    var ids = (this.ids = {\n      //       // each instance must be unique\n      //       component: `${myUnique(\"component\")}_${webix.uid()}`,\n      //    });\n\n      //    this._ui = null; // internally track our UI Component value Rules\n\n      //    // for setting up UI\n      //    this.init = (options) => {\n      //       // register callbacks:\n      //       for (var c in _logic.callbacks) {\n      //          _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //       }\n      //    };\n\n      //    // internal business logic\n      //    var _logic = (this._logic = {\n      //       callbacks: {\n      //          onDelete: function () {\n      //             console.warn(\"NO onDelete()!\");\n      //          },\n      //          onSave: function (field) {\n      //             console.warn(\"NO onSave()!\");\n      //          },\n      //       },\n      //    });\n      // }\n\n      // condition\n      // Return the querybuilder setup structure for this Action.\n      // @return {array}  of querybuilder setup\n      //\t\t\t\t\t[\n      //\t\t\t\t\t\t{rules},\n      //\t\t\t\t\t\t[fields]\n      //\t\t\t\t\t]\n      condition() {\n         return [this.conditionRules(), this.conditionFields()];\n      }\n\n      // stashCondition\n      // capture the current set of rules provided by the QB object.\n      // This doesn't guarantee these will be saved to the App settings.\n      // Instead it is a temporary stash. Only the selected Action's\n      // values will be persisited to the App settings.\n      // @param {obj/Array} rules  The QueryBuilder rule value returned from\n      //\t\t\t\t\t\t\t .getValue()\n      //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n      //\n      stashCondition(rules) {\n         // check to see if they sent us the raw QueryBuilder values and only\n         // pull off the rules if they did\n         if (Array.isArray(rules)) {\n            rules = rules[0];\n         }\n\n         // sanity check on glue value: don't update if null or not given.\n         if (rules) {\n            // sometimes .glue is undefined  so default to 'and'\n            if (rules.glue != \"or\") rules.glue = \"and\";\n            rules.rules = rules.rules || [];\n\n            this.queryRules = rules;\n         }\n      }\n\n      // conditionFields()\n      // Return the list of fields we are able to update.\n      // @return {array} of querybuilder field definitions:\n      //\t\t\t\t\t[\n      // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n      //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n      //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n      //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n      //\t\t\t\t\t]\n      conditionFields() {\n         var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n         var currFields = [];\n\n         if (this.queryObject) {\n            this.queryObject.fields().forEach((f) => {\n               if (fieldTypes.indexOf(f.key) != -1) {\n                  // NOTE: the .id value must match the obj[.id]  in the data set\n                  // so if your object data looks like:\n                  // \t{\n                  //\t\tname_first:'Neo',\n                  //\t\tname_last: 'The One'\n                  //  },\n                  // then the ids should be:\n                  // { id:'name_first', value:'xxx', type:'string' }\n                  currFields.push({\n                     id: f.columnName,\n                     value: f.label,\n                     type: f.key,\n                  });\n               }\n            });\n         }\n\n         return currFields;\n      }\n\n      // conditionRules()\n      // Return the current rule definition object for this Action.\n      // @return {obj}\n      conditionRules() {\n         return this.queryRules;\n      }\n\n      // objectLoad\n      // save the current object this Action is associated with.\n      objectLoad(object) {\n         super.objectLoad(object);\n         this.queryObjectLoad(object);\n      }\n\n      // queryObjectLoad\n      // save the current object this Action is using to build query rules.\n      queryObjectLoad(object) {\n         this.queryObject = object;\n      }\n\n      formLoad(form) {\n         this.viewLoad(form);\n      }\n\n      get currentForm() {\n         return this.CurrentView;\n      }\n\n      // process\n      // gets called when a form is submitted and the data passes the Query Builder Rules.\n      // @param {obj} options\n      // @return {Promise}\n      // process(options) {\n      //    console.error(\n      //       \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      //    );\n      //    return new Promise((resolve, reject) => {\n      //       reject(\n      //          new Error(\n      //             \"ABViewRuleAction.process() should be overridden by its child class.\"\n      //          )\n      //       );\n      //    });\n      // }\n\n      // valueDisplay\n      // create the form to collect the specific data this Action needs to function.\n      // @param {string} webixID  the $$(webixID) of the area to insert our display.\n      valueDisplay(webixID) {\n         return this.valueDisplayComponent(webixID);\n      }\n\n      // valueDisplayComponent\n      // Return an ABView to display our values form.\n      //\n      valueDisplayComponent(/* idBase */) {\n         return (this._ui = {\n            ui: {\n               template: \"ABViewRuleAction.valueDisplayComponent\",\n            },\n            init: (data) => {\n               console.error(\n                  \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n               );\n               console.warn(\" --> passed in data:\", data);\n            },\n         });\n      }\n\n      // fromSettings\n      // initialize this Action from a given set of setting values.\n      // @param {obj}  settings\n      fromSettings(settings) {\n         // settings: {\n         //\tvalueRules:{}\n         // }\n         settings = settings || {};\n         this.valueRules = settings.valueRules || {};\n      }\n\n      // toSettings\n      // return an object that represents the current state of this Action\n      // @return {obj}\n      toSettings() {\n         var settings = {};\n\n         // require the child to insert the valueRules\n         return settings;\n      }\n\n      /**\n       * @method isReady()\n       * returns a promise that gets resolved once our action is ready to work.\n       * @return {Promise}\n       */\n      isReady() {\n         return Promise.resolve();\n      }\n\n      // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n      // choosers properly if it hasn't been shown before the .setValue() call.\n      // so this work around allows us to refresh the display after the .show()\n      // on the popup.\n      // When they've fixed the bug, we'll remove this workaround:\n      qbFixAfterShow() {\n         // our child classes can implement this if needed.\n         // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n      }\n   }\n\n   return ABViewRuleAction;\n}\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   class ABViewRuleList extends UIClass {\n      /**\n       * @param {object} App\n       *      The shared App object that is created in OP.Component\n       * @param {string} idBase\n       *      Identifier for this component\n       */\n      constructor(base, childSettings) {\n         base = base || \"ABViewRuleList\";\n         super(base, {\n            rules: \"\",\n            rulesScrollview: \"\",\n\n            action: \"\",\n            when: \"\",\n\n            values: \"\",\n            set: \"\",\n         });\n\n         this.listRules = [];\n\n         // ensure required values:\n         childSettings = childSettings || {};\n         childSettings.labels = childSettings.labels || {};\n         childSettings.labels.header =\n            childSettings.labels.header || L(\"Rule List\");\n         childSettings.labels.headerDefault =\n            childSettings.labels.headerDefault || L(\"Rule List\");\n         this.childSettings = childSettings;\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return {\n            view: \"window\",\n            id: ids.component,\n            modal: true,\n            position: \"center\",\n            resize: true,\n            width: 700,\n            height: 450,\n            css: \"ab-main-container\",\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: this.childSettings.labels.headerDefault,\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     icon: \"fa fa-plus\",\n                     type: \"iconButton\",\n                     label: L(\"Add new rule\"),\n                     width: 150,\n                     click: () => {\n                        this.addRule();\n                        $$(ids.rulesScrollview).scrollTo(\n                           0,\n                           $$(ids.rules).$height\n                        );\n                     },\n                  },\n               ],\n            },\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"scrollview\",\n                     id: ids.rulesScrollview,\n                     scroll: \"xy\",\n                     body: {\n                        view: \"layout\",\n                        id: ids.rules,\n                        margin: 20,\n                        padding: 10,\n                        rows: [],\n                     },\n                  },\n                  // {\n                  //    css: { 'background-color': '#fff' },\n                  //    cols: [\n                  //       {\n                  //          view: \"button\",\n                  //          icon: \"plus\",\n                  //          type: \"iconButton\",\n                  //          label: labels.component.addNewRule,\n                  //          width: 150,\n                  //          click: () => {\n                  //             this.addRule();\n                  //          }\n                  //       },\n                  //       { fillspace: true }\n                  //    ]\n                  // },\n                  {\n                     css: { \"background-color\": \"#fff\" },\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           name: \"cancel\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           name: \"save\",\n                           label: L(\"Save\"),\n                           type: \"form\",\n                           autowidth: true,\n                           click: () => {\n                              this.buttonSave();\n                           },\n                        },\n                        { fillspace: true },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n         webix.ui(this.ui());\n         return Promise.resolve();\n      }\n\n      buttonCancel() {\n         $$(this.ids.component)?.hide();\n      }\n\n      buttonSave() {\n         var results = this.toSettings();\n\n         this.emit(\"save\", results);\n         // _logic.callbacks.onSave(results);\n         this.hide();\n      }\n\n      hide() {\n         $$(this.ids.component)?.hide();\n      }\n\n      show() {\n         $$(this.ids.component)?.show();\n      }\n\n      /**\n       * @method component\n       * initialize the UI display for this popup editor.\n       * @param {obj} App  The common UI App object shared among our UI components\n       * @param {string} idBase A unique Key used the the base of our unique ids\n       */\n      // component() {\n\n      //    // internal business logic\n      //    var _logic = (this._logic = {\n      //       buttonCancel: function () {\n      //          $$(ids.component).hide();\n      //       },\n\n      //       buttonSave: () => {\n      //          var results = this.toSettings();\n\n      //          _logic.callbacks.onSave(results);\n      //          _logic.hide();\n      //       },\n\n      //       callbacks: {\n      //          onCancel: function () {\n      //             console.warn(\"NO onCancel()!\");\n      //          },\n      //          onSave: function (field) {\n      //             console.warn(\"NO onSave()!\");\n      //          },\n      //       },\n\n      //       hide: function () {\n      //          $$(ids.component).hide();\n      //       },\n\n      //       show: function () {\n      //          $$(ids.component).show();\n      //       },\n      //    });\n\n      //    this.show = _logic.show;\n      //    this.setValue = _logic.setValue;\n      // }\n\n      /**\n       * @method addRule\n       * Instantiate a new Rule in our list.\n       * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n       */\n      addRule(settings) {\n         var Rule = this.getRule();\n         if (!Rule) return;\n\n         this.listRules.push(Rule);\n\n         // if our list actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            // Rule.component(this.App, this.idBase); // prepare the UI component\n            RulesUI.addView(Rule.ui());\n            Rule.objectLoad(this.CurrentObject);\n\n            Rule.on(\"delete\", (deletedRule) => {\n               $$(this.ids.rules).removeView(Rule.ids.component);\n\n               var index = this.listRules.indexOf(deletedRule);\n               if (index !== -1) {\n                  this.listRules.splice(index, 1);\n               }\n            });\n         }\n\n         if (settings) {\n            Rule.fromSettings(settings);\n         }\n      }\n\n      /**\n       * @method fromSettings\n       * Create an initial set of default values based upon our settings object.\n       * @param {obj} settings  The settings object we created in .toSettings()\n       */\n      fromSettings(settings) {\n         // settings: [\n         //  { rule.settings },\n         //  { rule.settings }\n         // ]\n\n         // clear any existing Rules:\n         this.listRules.forEach((rule) => {\n            if (this.ids?.rules && rule?.ids?.component) {\n               $$(this.ids.rules).removeView(rule.ids.component);\n            }\n         });\n         this.listRules = [];\n\n         if (settings) {\n            settings.forEach((ruleSettings) => {\n               this.addRule(ruleSettings);\n            });\n         }\n      }\n\n      /**\n       * @method objectLoad\n       * A rule is based upon a Form that was working with an Object.\n       * .objectLoad() is how we specify which object we are working with.\n       * @param {ABObject} object\n       *        The object that will be used to evaluate the Rules\n       */\n      objectLoad(object) {\n         super.objectLoad(object);\n\n         // tell each of our rules about our object\n         this.listRules.forEach((r) => {\n            r.objectLoad(object);\n         });\n      }\n      /*\n      processPre(options) {\n         (this.listRules || [])\n            .filter((rule) => rule.isPreProcess == true)\n            .forEach((rule) => {\n               rule.processPre(options, options.data);\n            });\n      }\n*/\n      /**\n       * @method process\n       * Take the provided data and process each of our rules.\n       * @param {obj} options\n       * @return {promise}\n       */ /*\n      process(options) {\n         return new Promise((resolve, reject) => {\n            let listRules = (this.listRules || []).filter(\n               (rule) => !rule.isPreProcess\n            );\n\n            var numDone = 0;\n            var onDone = () => {\n               numDone++;\n               if (numDone >= listRules.length) {\n                  resolve();\n               }\n            };\n\n            listRules.forEach((rule) => {\n               rule\n                  .process(options)\n                  .then(function () {\n                     onDone();\n                  })\n                  .catch((err) => {\n                     reject(err);\n                  });\n            });\n\n            if (listRules.length == 0) {\n               resolve();\n            }\n         });\n      }\n*/\n\n      /**\n       * @method toSettings\n       * create a settings object to be persisted with the application.\n       * @return {array} of rule settings.\n       */\n      toSettings() {\n         var settings = [];\n         this.listRules.forEach((r) => {\n            settings.push(r.toSettings());\n         });\n         return settings;\n      }\n\n      getRule() {\n         console.error(\n            \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n         );\n         return null;\n      }\n\n      formLoad(form) {\n         this.viewLoad(form);\n      }\n\n      get currentForm() {\n         return this.CurrentView;\n      }\n\n      /**\n       * @method isReady()\n       * returns a promise that gets resolved once our action is ready to work.\n       * @return {Promise}\n       */\n      rulesReady() {\n         // This base class should be overwritten by any subclass that needs\n         // to prepare:\n         return Promise.resolve();\n      }\n\n      // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n      // choosers properly if it hasn't been shown before the .setValue() call.\n      // so this work around allows us to refresh the display after the .show()\n      // on the popup.\n      // When they've fixed the bug, we'll remove this workaround:\n      qbFixAfterShow() {\n         this.listRules.forEach((r) => {\n            r.qbFixAfterShow();\n         });\n      }\n   }\n\n   return ABViewRuleList;\n}\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nimport FABViewRuleList from \"./ABViewRuleList\";\nimport FABViewRule from \"./ABViewRule\";\n\n// import FRuleConfirmMessage from \"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\";\n// const RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\n// const RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nimport FRuleUpdateConnected from \"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\";\n// const RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\n// const RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nexport default function (AB, iBase) {\n   const ABViewRuleList = FABViewRuleList(AB);\n   const ABViewRule = FABViewRule(AB);\n   const L = ABViewRuleList.L();\n\n   const RuleUpdateConnected = FRuleUpdateConnected(AB);\n   // const RuleEmail = FRuleEmail(AB);\n\n   class ABViewRuleListFormRecordRules extends ABViewRuleList {\n      constructor(base = `ABViewRuleListFormRecordRules`) {\n         var settings = {\n            labels: {\n               header: L(\"Record Rules\"),\n               headerDefault: L(\"Record Rules\"),\n            },\n         };\n         super(base, settings);\n         this.base = base;\n      }\n\n      // must return the actual Rule object.\n      getRule() {\n         var listActions = [\n            new RuleUpdateConnected(`${this.base}_ruleActionUpdateConnected`),\n            // new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n            // new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n            // new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n            // new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         ];\n\n         var Rule = new ABViewRule(`${this.base}_rule_record`, listActions);\n         Rule.init(this.AB);\n         Rule.objectLoad(this.CurrentObject);\n         Rule.formLoad(this.currentForm);\n         return Rule;\n      }\n   }\n\n   return new ABViewRuleListFormRecordRules(iBase);\n}\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nimport FABViewRuleList from \"./ABViewRuleList\";\nimport FABViewRule from \"./ABViewRule\";\n\nimport FRuleConfirmMessage from \"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\";\n// const RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\n// const RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\n// const RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\n// const RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nimport FRuleEmail from \"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\";\n\nexport default function (AB, iBase) {\n   const ABViewRuleList = FABViewRuleList(AB);\n   const ABViewRule = FABViewRule(AB);\n   const L = ABViewRuleList.L();\n\n   const RuleConfirmMessage = FRuleConfirmMessage(AB);\n   const RuleEmail = FRuleEmail(AB);\n\n   class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n      constructor(base = `ABViewRuleListFormSubmitRules`) {\n         var settings = {\n            labels: {\n               header: L(\"Submit Rules\"),\n               headerDefault: L(\"Submit Rules\"),\n            },\n         };\n         super(base, settings);\n         this.base = base;\n      }\n\n      // must return the actual Rule object.\n      getRule() {\n         var listActions = [\n            new RuleConfirmMessage(`${this.idBase}_ruleActionConfirmMessage`),\n            // new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n            // new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n            // new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n            // new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n            new RuleEmail(`${this.idBase}_ruleActionEmail`),\n         ];\n\n         var Rule = new ABViewRule(`${this.base}_rule`, listActions);\n         Rule.init(this.AB);\n         Rule.objectLoad(this.CurrentObject);\n         Rule.formLoad(this.currentForm);\n         return Rule;\n      }\n   }\n\n   return new ABViewRuleListFormSubmitRules(iBase);\n}\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nimport FUIClass from \"../../../ui_class\";\nimport FABViewRuleActionObjectUpdater from \"./ABViewRuleActionObjectUpdater\";\nimport FABViewRuleAction from \"../ABViewRuleAction\";\n\nimport FObjectQueryBuilder from \"../ABViewQueryBuilderObjectFieldConditions\";\n\nexport default function (AB) {\n   const UIClass = FUIClass(AB);\n   const ABViewRuleAction = FABViewRuleAction(AB);\n   const ABViewRuleActionObjectUpdater = FABViewRuleActionObjectUpdater(AB);\n   // const uiConfig = AB.Config.uiSettings();\n   const L = ABViewRuleActionObjectUpdater.L();\n\n   const ObjectQueryBuilder = FObjectQueryBuilder(AB);\n\n   class ABViewValueDisplayChooser extends UIClass {\n      constructor(base, RuleAction) {\n         super(base, {\n            updateForm: \"\",\n            selectConnectedField: \"\",\n            updateFieldsForm: \"\",\n         });\n\n         this.base = base;\n\n         this.RuleAction = RuleAction;\n         // {ABViewRuleActionFormRecordRuleUpdateConnected}\n         // the parent RuleAction that created this display.\n         // We need to reference it to display the QueryBuilder.\n\n         this.uniqueIDs();\n\n         this.ObjectUpdater = new ABViewRuleActionObjectUpdater(\n            `${this.base}_objupdater`,\n            {}\n         );\n      }\n\n      ui() {\n         return {\n            id: this.ids.component,\n            view: \"layout\",\n            css: \"ab-component-form-rule\",\n            rows: [\n               {\n                  id: this.ids.selectConnectedField,\n                  view: \"richselect\",\n                  label: L(\"Select which connected object to update.\"),\n                  labelWidth: 300,\n                  value: this.RuleAction.selectedField(),\n                  options: this.RuleAction.fieldDropList,\n                  on: {\n                     onChange: (newVal, oldVal) => {\n                        this.selectAction(newVal, oldVal);\n                     },\n                  },\n               },\n            ],\n         };\n      }\n\n      init(AB) {\n         // make sure our currently selected field is selected.\n         // if (this.selectedFieldID) {\n         //    var select = $$(ids.selectConnectedField);\n         //    if (select) {\n         //       select.setValue(this.selectedFieldID);\n         //    }\n         // }\n         return this.ObjectUpdater.init(AB);\n      }\n\n      addDisplay(view) {\n         $$(this.ids.component).addView(view);\n      }\n\n      // removePreviousDisplays\n      // remove the previous components that reflected the conditions and\n      // update values of the previously selected field.\n      removePreviousDisplays() {\n         var allViews = $$(this.ids.component).getChildViews();\n         var cloneAllViews = [];\n         allViews.forEach((v) => {\n            cloneAllViews.push(v);\n         });\n         cloneAllViews.forEach((v) => {\n            // don't remove the field picker\n            if (v.config.id != this.ids.selectConnectedField) {\n               $$(this.ids.component).removeView(v);\n            }\n         });\n      }\n\n      selectAction(newVal /*, oldVal */) {\n         this.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n         this.RuleAction.selectedFieldID = newVal;\n         var connectedObject = this.RuleAction.connectedObject();\n\n         if (connectedObject) {\n            // it is the remote object that we are allowed to Update fields on.\n            this.ObjectUpdater.objectLoad(connectedObject);\n            this.ObjectUpdater.applicationLoad(\n               this.RuleAction.CurrentApplication\n            );\n            ///// NOTE: important to call super.valueDisplayComponent()\n            this.updateComponent = this.ObjectUpdater.valueDisplayComponent(\n               this.ids.updateFieldsForm\n            ); // parent obj\n\n            this.showQBIfNeeded();\n\n            // create a new blank update form\n            this.addDisplay(this.updateComponent.ui());\n            this.updateComponent.init(this.AB);\n\n            if (this.isUpdateValueDisabled) {\n               let $updateForm = this.updateComponent.formGet();\n               if ($updateForm) {\n                  $updateForm.disable();\n                  $updateForm.hide();\n               }\n            }\n         } else {\n            this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n               fieldID: this.selectedFieldID,\n            });\n         }\n      }\n\n      showQBIfNeeded() {\n         //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n         //// the user the ability to set a condition on the update even if the field\n         //// is only a one to one.\n         //// If we want to remove the filter in case of a \"one\" linkType, then put\n         //// these conditions back in:\n\n         // var field = this.selectedField();\n\n         // // we don't need the QB if the destination object link type if 'one'.\n         // // there will only be one to get back, so no conditions needed.\n         // if (field.settings.linkType != 'one') {\n\n         var qbComponent = this.RuleAction.queryBuilderDisplay(this.base);\n\n         // qbComponent.component(this.idBase);\n         this.addDisplay(qbComponent.ui());\n         qbComponent.init(this.AB);\n\n         // }\n      }\n\n      fromSettings(settings) {\n         // // first time through, be sure to set the connectedObject first\n         // this.selectedFieldID = settings.selectedFieldID;\n         // var connectedObject = this.connectedObject();\n\n         // this triggers the update of the display, creation of QB,\n         $$(this.ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n         if (this.objectQB) {\n            this.objectQB.setValue(this.qbCondition);\n         }\n\n         if (this.updateComponent) {\n            this.updateComponent.fromSettings(settings);\n         }\n      }\n\n      toSettings() {\n         return this.updateComponent.toSettings();\n      }\n   }\n\n   class ABViewRuleActionFormRecordRuleUpdateConnected extends ABViewRuleAction {\n      constructor(idBase) {\n         super(idBase, {});\n\n         this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n         this.label = L(\"Update Connected Record\");\n\n         // this.baseObject = null; // the object the current form is working with.\n         // Use this to find our connected fields.\n\n         this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n         // used for updating.  This should be one of the connection Fields.\n\n         this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n         this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n         this.qbCondition = null; // the QB condition entered for selecting which remote object.\n\n         this._uiChooser = null;\n         // our reference to our valueDisplayComponent.\n      }\n\n      // field\n\n      ui() {\n         if (!this._uiChooser) {\n            this.valueDisplayComponent(this.base);\n         }\n\n         return this._uiChooser.ui();\n      }\n\n      /**\n       * objectLoad\n       * save the current object this Action is associated with.\n       * in the case of the UpdateConnected Action, assigning us\n       * this object only impacts the queryObject.\n       *\n       * The Updater form will use another object we select in\n       * the form dropdown.\n       *\n       * @param {object} object\n       *\n       */\n      objectLoad(object) {\n         super.objectLoad(object);\n         // this.queryObjectLoad(object);\n         // this.baseObject = object;\n\n         // now build our fieldDropList for the select\n         var connectionFields = this.connectedFieldList();\n         connectionFields.forEach((cf) => {\n            this.fieldDropList.push({\n               id: cf.id,\n               value: cf.label,\n            });\n         });\n      }\n\n      /**\n       * connectedFieldList\n       * return the fields in our .baseObject that are connections to other objects.\n       * @return {array} of {ABField}\n       */\n      connectedFieldList() {\n         return this.CurrentObject.connectFields();\n      }\n\n      /**\n       * connectedObject\n       * return the ABObject associated with the selected connection field.\n       * @return {ABObject}\n       */\n      connectedObject() {\n         if (this.selectedFieldID) {\n            var selectedField = this.selectedField();\n            if (selectedField) {\n               return selectedField.datasourceLink;\n            }\n         }\n\n         return null;\n      }\n\n      /**\n       * selectedField\n       * return the selected {ABField} object.\n       * @return {ABField}\n       */\n      selectedField() {\n         return this.connectedFieldList().filter((f) => {\n            return f.id == this.selectedFieldID;\n         })[0];\n      }\n\n      /**\n       * valueDisplayComponent\n       * Return an ABView to display our values form.\n       * @param {string}  idBase  a unique webix id to base our sub components on.\n       */\n      valueDisplayComponent(idBase) {\n         if (this._uiChooser == null) {\n            this._uiChooser = new ABViewValueDisplayChooser(idBase, this); // this.valueDisplayChooser(idBase);\n\n            // this._uiChooser.on(\"selected\", (newVal) => {});\n         }\n\n         return this._uiChooser;\n      }\n\n      superValueDisplayComponent(idBase) {\n         return super.valueDisplayComponent(idBase);\n      }\n\n      /**\n       * valueDisplayChooser\n       * Our Values Display is a Select Box with a choice of connected fields.\n       * Once a field is chosen, then we display the Updater form.\n       * @param {string}  idBase  a unique webix id to base our sub components on.\n       */\n      // valueDisplayChooser(idBase) {\n      //    var uniqueInstanceID = webix.uid();\n      //    var myUnique = (key) => {\n      //       // return idBase + '_' + key  + '_' + uniqueInstanceID;\n      //       return key + \"_\" + uniqueInstanceID;\n      //    };\n\n      //    var ids = {\n      //       component: myUnique(\"updateConnectedValues\"),\n      //       updateForm: myUnique(\"updateChooser\"),\n      //       selectConnectedField: myUnique(\"updateSelect\"),\n      //       updateFieldsForm: myUnique(\"updateForm\"),\n      //    };\n\n      //    var _ui = {\n      //       id: ids.component,\n      //       view: \"layout\",\n      //       css: \"ab-component-form-rule\",\n      //       rows: [\n      //          {\n      //             id: ids.selectConnectedField,\n      //             view: \"richselect\",\n      //             label: L(\"Select which connected object to update.\"),\n      //             labelWidth: 300,\n      //             value: this.selectedField,\n      //             options: this.fieldDropList,\n      //             on: {\n      //                onChange: (newVal, oldVal) => {\n      //                   _logic.selectAction(newVal, oldVal);\n      //                },\n      //             },\n      //          },\n      //       ],\n      //    };\n\n      //    var init = (valueRules) => {\n      //       valueRules = valueRules || this.valueRules;\n\n      //       // make sure our currently selected field is selected.\n      //       if (this.selectedFieldID) {\n      //          var select = $$(ids.selectConnectedField);\n      //          if (select) {\n      //             select.setValue(this.selectedFieldID);\n      //          }\n      //       }\n      //    };\n\n      //    var _logic = (this._logic = {\n      //       addDisplay: (view) => {\n      //          $$(ids.component).addView(view);\n      //       },\n\n      //       // removePreviousDisplays\n      //       // remove the previous components that reflected the conditions and\n      //       // update values of the previously selected field.\n      //       removePreviousDisplays: () => {\n      //          var allViews = $$(ids.component).getChildViews();\n      //          var cloneAllViews = [];\n      //          allViews.forEach((v) => {\n      //             cloneAllViews.push(v);\n      //          });\n      //          cloneAllViews.forEach((v) => {\n      //             // don't remove the field picker\n      //             if (v.config.id != ids.selectConnectedField) {\n      //                $$(ids.component).removeView(v);\n      //             }\n      //          });\n      //       },\n\n      //       selectAction: (newVal, oldVal) => {\n      //          _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n      //          this.selectedFieldID = newVal;\n      //          var connectedObject = this.connectedObject();\n\n      //          if (connectedObject) {\n      //             // it is the remote object that we are allowed to Update fields on.\n      //             this.updateObjectLoad(connectedObject);\n      //             ///// NOTE: important to call super.valueDisplayComponent()\n      //             this.updateComponent = super.valueDisplayComponent(\n      //                ids.updateFieldsForm\n      //             ); // parent obj\n\n      //             _logic.showQBIfNeeded();\n\n      //             // create a new blank update form\n      //             _logic.addDisplay(this.updateComponent.ui);\n      //             this.updateComponent.init();\n\n      //             if (this.isUpdateValueDisabled) {\n      //                let $updateForm = $$(this.updateComponent.ui.id);\n      //                if ($updateForm) {\n      //                   $updateForm.disable();\n      //                   $updateForm.hide();\n      //                }\n      //             }\n      //          } else {\n      //             this.AB.notify.builder(\n      //                new Error(\"No connectedObject found.\"),\n      //                {\n      //                   fieldID: this.selectedFieldID,\n      //                }\n      //             );\n      //          }\n      //       },\n\n      //       showQBIfNeeded: () => {\n      //          //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n      //          //// the user the ability to set a condition on the update even if the field\n      //          //// is only a one to one.\n      //          //// If we want to remove the filter in case of a \"one\" linkType, then put\n      //          //// these conditions back in:\n\n      //          // var field = this.selectedField();\n\n      //          // // we don't need the QB if the destination object link type if 'one'.\n      //          // // there will only be one to get back, so no conditions needed.\n      //          // if (field.settings.linkType != 'one') {\n\n      //          var qbComponent = this.queryBuilderDisplay();\n\n      //          qbComponent.component(this.App, this.idBase);\n      //          _logic.addDisplay(qbComponent.ui);\n      //          qbComponent.init({});\n\n      //          // }\n      //       },\n\n      //       fromSettings: (settings) => {\n      //          // // first time through, be sure to set the connectedObject first\n      //          // this.selectedFieldID = settings.selectedFieldID;\n      //          // var connectedObject = this.connectedObject();\n\n      //          // this triggers the update of the display, creation of QB,\n      //          $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n      //          if (this.objectQB) {\n      //             this.objectQB.setValue(this.qbCondition);\n      //          }\n\n      //          if (this.updateComponent) {\n      //             this.updateComponent.fromSettings(settings);\n      //          }\n      //       },\n\n      //       toSettings: () => {\n      //          // valueRules = {\n      //          //\tfieldOperations:[\n      //          //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n      //          //\t]\n      //          // }\n      //          var settings = { fieldOperations: [] };\n\n      //          // for each of our formRows, decode the propery {}\n      //          this.formRows.forEach((fr) => {\n      //             var rowSettings = fr.toSettings();\n      //             if (rowSettings) {\n      //                settings.fieldOperations.push(rowSettings);\n      //             }\n      //          });\n\n      //          return settings;\n      //       },\n      //    });\n\n      //    return {\n      //       ui: _ui,\n      //       init: init,\n      //       fromSettings: (settings) => {\n      //          _logic.fromSettings(settings);\n      //       },\n      //       toSettings: () => {\n      //          return _logic.toSettings();\n      //       },\n      //       _logic: _logic,\n      //    };\n      // }\n\n      /**\n       * queryBuilderDisplay\n       * returns our Query Builder object used in our display.\n       * It is called by the .showQBIfNeeded() method.\n       * @return {ABViewQueryBuilderObjectFieldConditions}\n       */\n      queryBuilderDisplay(base) {\n         if (!this.objectQB) {\n            this.objectQB = new ObjectQueryBuilder(\n               base,\n               L(\"How to choose which object:\")\n            );\n\n            var connObj = this.connectedObject();\n            if (connObj) this.objectQB.objectLoad(connObj);\n         }\n         return this.objectQB;\n      }\n\n      /**\n       * process\n       * gets called when a form is submitted and the data passes the Query Builder Rules.\n       * @param {obj} options\n       *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n       *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n       * @return {Promise}\n       */\n      // process(options) {\n      //    this._formData = options.data;\n\n      //    // get connected object\n      //    var connObj = this.connectedObject();\n      //    var model = connObj.model();\n\n      //    var connectionField = this.selectedField();\n\n      //    var condition = null; // our lookup condition\n\n      //    // modifyCondition\n      //    // async fn() to fill out what the condition should be for limiting the remote\n      //    // objects to values in use by the current object.\n      //    // @param {fn} cb  the callback to use when we are finished:\n      //    //\t\t\t\t\tcb(err, )\n      //    var modifyCondition = (cb) => {\n      //       // So, let's get a copy of our current data, with all it's connected items\n      //       // attached.\n      //       var thisModel = this.baseObject.model();\n      //       thisModel\n      //          .findConnected(connectionField.columnName, options.data)\n      //          .then((items) => {\n      //             // if we didn't get any results, then simply return\n      //             // NOTE: this will leave condition == null and cancel this update.\n      //             if (!items || items.length == 0) {\n      //                cb();\n      //                return;\n      //             }\n\n      //             // then use these to limit the connected data of our Action:\n\n      //             // get all the ids\n      //             var ids = items.map((i) => {\n      //                return i.id;\n      //             });\n\n      //             // resulting condition: { id in [listIDs]} AND { QB Condition }\n      //             condition = {\n      //                glue: \"and\",\n      //                rules: [\n      //                   {\n      //                      key: connObj.PK(),\n      //                      rule: \"in\",\n      //                      value: ids,\n      //                   },\n      //                ],\n      //             };\n\n      //             // check to make sure qbCondition actually has a condition before adding it\n      //             // to our condition:\n      //             if (Object.keys(this.qbCondition).length > 0) {\n      //                condition.rules.push(this.qbCondition);\n      //             }\n\n      //             cb();\n      //          })\n      //          .catch(cb);\n      //    };\n\n      //    // .process() returns a Promise\n      //    return new Promise((resolve, reject) => {\n      //       // upateIt()\n      //       // updates a given item with our changes.\n      //       // @param {obj} item  the item to update\n      //       // @param {fn}  cb    a callback function when update is complete.\n      //       var updateIt = (item, cb) => {\n      //          let isUpdated = this.processUpdateObject({}, item);\n      //          if (!isUpdated) {\n      //             cb();\n      //          } else {\n      //             model\n      //                .update(item.id, item)\n      //                .then(() => {\n      //                   cb();\n      //                })\n      //                .catch((err) => {\n      //                   this.AB.notify.developer(err, {\n      //                      message:\n      //                         \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n      //                      data: options.data,\n      //                   });\n      //                   cb(err);\n      //                });\n      //          }\n      //       };\n\n      //       // now figure out which elements belong to this object\n      //       // done in modifyCondition()\n      //       modifyCondition((err) => {\n      //          if (err) {\n      //             reject(err);\n      //             return;\n      //          }\n\n      //          if (condition === null) {\n      //             // this is the case where we didn't have the proper data to complete our\n      //             // update.  So let's just fail gracefully, and continue on.\n\n      //             // QUESTION: is this the right way to handle it?\n      //             resolve();\n      //          } else {\n      //             // get all the entries that match our condition:\n      //             model\n      //                .findAll({ where: condition })\n      //                .then((list) => {\n      //                   var done = 0;\n\n      //                   // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n      //                   if (list && list.data) {\n      //                      list = list.data;\n      //                   }\n\n      //                   // for each entry, update it with our values:\n      //                   list.forEach((item) => {\n      //                      updateIt(item, (err) => {\n      //                         if (err) {\n      //                            return reject(err);\n      //                         }\n      //                         done++;\n      //                         if (done >= list.length) {\n      //                            // now they are all updated, so continue.\n      //                            resolve();\n      //                         }\n      //                      });\n      //                   });\n\n      //                   // if there were no entries to update -> continue\n      //                   if (list.length == 0) {\n      //                      resolve();\n      //                   }\n      //                })\n      //                .catch(reject);\n      //          }\n      //       }); // end modifyCondition()\n      //    }); // end Promise()\n      // }\n\n      /**\n       * fromSettings\n       * initialize this Action = require(a given set of setting values.\n       * @param {obj} settings  the settings {} returned = require(toSettings()\n       */\n      fromSettings(settings) {\n         settings = settings || {};\n\n         this.selectedFieldID = settings.selectedFieldID || null;\n         this.qbCondition = settings.qbCondition || {};\n\n         super.fromSettings(settings);\n\n         // if we have a display component, then populate it:\n         if (this._uiChooser) {\n            this._uiChooser.fromSettings(settings);\n         }\n      }\n\n      /**\n       * toSettings\n       * return an object that represents the current state of this Action\n       * @return {obj}\n       */\n      toSettings() {\n         // settings: {\n         // \tselectedFieldID: 'guid',\n         //  qbCondition: [],\n         //\tvalueRules:{}\n         // }\n\n         // let our parent store our QB settings\n         var settings = super.toSettings();\n\n         settings.selectedFieldID = this.selectedFieldID;\n\n         var qbCond = null;\n         if (this.objectQB) {\n            qbCond = this.objectQB.getValue();\n            if (Array.isArray(qbCond)) {\n               qbCond = qbCond[0];\n            }\n\n            // FIX: make sure qbCond root element has a 'glue'\n            if (qbCond) {\n               qbCond.glue = qbCond.glue || \"and\";\n            }\n         }\n         settings.qbCondition = qbCond;\n\n         if (this._uiChooser) {\n            settings.valueRules = this._uiChooser.toSettings();\n         }\n\n         return settings;\n      }\n\n      // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n      // choosers properly if it hasn't been shown before the .setValue() call.\n      // so this work around allows us to refresh the display after the .show()\n      // on the popup.\n      // When they've fixed the bug, we'll remove this workaround:\n      qbFixAfterShow() {\n         if (this.objectQB) {\n            this.objectQB.setValue(this.qbCondition);\n         }\n      }\n   }\n\n   return ABViewRuleActionFormRecordRuleUpdateConnected;\n}\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nimport FABViewRuleAction from \"../ABViewRuleAction\";\n\nexport default function (AB) {\n   const ABViewRuleAction = FABViewRuleAction(AB);\n   const L = ABViewRuleAction.L();\n\n   class ABViewRuleActionFormSubmitRuleConfirmMessage extends ABViewRuleAction {\n      /**\n       * @param {object} App\n       *      The shared App object that is created in OP.Component\n       * @param {string} idBase\n       *      Identifier for this component\n       */\n      constructor(idBase) {\n         super(idBase, {\n            message: \"\",\n         });\n\n         this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n         this.label = L(\"Show a confirmation message\");\n\n         this.formRows = []; // keep track of the Value Components being set\n         // [\n         //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n         // ]\n      }\n\n      // conditionFields() {\n      //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      //    var currFields = [];\n\n      //    if (this.currentObject) {\n      //       this.currentObject.fields().forEach((f) => {\n      //          if (fieldTypes.indexOf(f.key) != -1) {\n      //             // NOTE: the .id value must match the obj[.id]  in the data set\n      //             // so if your object data looks like:\n      //             // \t{\n      //             //\t\tname_first:'Neo',\n      //             //\t\tname_last: 'The One'\n      //             //  },\n      //             // then the ids should be:\n      //             // { id:'name_first', value:'xxx', type:'string' }\n      //             currFields.push({\n      //                id: f.columnName,\n      //                value: f.label,\n      //                type: f.key\n      //             });\n      //          }\n      //       });\n      //    }\n\n      //    return currFields;\n      // }\n\n      ui() {\n         return {\n            id: this.ids.message,\n            view: \"textarea\",\n            height: 130,\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n         return Promise.resolve();\n      }\n\n      // valueDisplayComponent\n      // Return an ABView to display our values form.\n      //\n      // valueDisplayComponent(idBase) {\n      //    var ids = {\n      //       message: `${idBase}_message`,\n      //    };\n\n      //    this._ui = {\n      //       ui: {\n      //          id: ids.message,\n      //          view: \"textarea\",\n      //          // label: this.labels.component.message,\n      //          // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n      //          height: 130,\n      //       },\n\n      //       init: () => {},\n\n      //       _logic: _logic,\n\n      //       fromSettings: (valueRules) => {\n      //          _logic.fromSettings(valueRules);\n      //       },\n      //       toSettings: () => {\n      //          return _logic.toSettings();\n      //       },\n      //    };\n\n      //    var _logic = {\n      //       fromSettings: (valueRules) => {\n      //          valueRules = valueRules || {};\n\n      //          $$(ids.message).setValue(valueRules.message || \"\");\n      //       },\n\n      //       toSettings: () => {\n      //          // return the confirm message\n      //          return {\n      //             message: $$(ids.message).getValue() || \"\",\n      //          };\n      //       },\n      //    };\n\n      //    return this._ui;\n      // }\n\n      // // process\n      // // gets called when a form is submitted and the data passes the Query Builder Rules.\n      // // @param {obj} options\n      // process(options) {\n      //    return new Promise((resolve, reject) => {\n      //       var confirmMessage = this.valueRules.message || \"\";\n\n      //       webix.message({\n      //          text: confirmMessage,\n      //          type: \"info\",\n      //       });\n\n      //       resolve();\n      //    });\n      // }\n\n      // fromSettings\n      // initialize this Action from a given set of setting values.\n      // @param {obj}  settings\n      fromSettings(settings) {\n         settings = settings || {};\n         super.fromSettings(settings); // let the parent handle the QB\n\n         // if we have a display component, then populate it:\n         $$(this.ids.message)?.setValue(settings.message || \"\");\n      }\n\n      // toSettings\n      // return an object that represents the current state of this Action\n      // @return {obj}\n      toSettings() {\n         // settings: {\n         //\tmessage:''\n         // }\n\n         // let our parent store our QB settings\n         var settings = super.toSettings();\n\n         settings.message = $$(this.ids.message)?.getValue() || \"\";\n\n         return settings;\n      }\n   }\n\n   return ABViewRuleActionFormSubmitRuleConfirmMessage;\n}\n","//\n// ABViewRuleActionFormSubmitRuleEmail\n//\n//\n//\n\nimport FABViewRuleAction from \"../ABViewRuleAction\";\n// const ABViewRuleAction = require(\"../ABViewRuleAction\");\n// const ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n// const ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nexport default function (AB) {\n   const ABViewRuleAction = FABViewRuleAction(AB);\n   const L = ABViewRuleAction.L();\n\n   class ABViewRuleActionFormSubmitRuleEmail extends ABViewRuleAction {\n      /**\n       * @param {object} App\n       *      The shared App object that is created in OP.Component\n       * @param {string} idBase\n       *      Identifier for this component\n       */\n      constructor(idBase) {\n         super(idBase, {\n            form: \"\",\n            popup: \"\",\n            list: \"\",\n            toEmailsContainer: \"\",\n            toEmails: \"\",\n\n            fromName: \"\",\n\n            message: \"\",\n         });\n\n         this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n         this.label = L(\"Send a custom email\");\n\n         this.formRows = []; // keep track of the Value Components being set\n         // [\n         //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n         // ]\n      }\n\n      // conditionFields() {\n      //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      //    var currFields = [];\n\n      //    if (this.CurrentObject) {\n      //       this.CurrentObject.fields().forEach((f) => {\n      //          if (fieldTypes.indexOf(f.key) != -1) {\n      //             // NOTE: the .id value must match the obj[.id]  in the data set\n      //             // so if your object data looks like:\n      //             // \t{\n      //             //\t\tname_first:'Neo',\n      //             //\t\tname_last: 'The One'\n      //             //  },\n      //             // then the ids should be:\n      //             // { id:'name_first', value:'xxx', type:'string' }\n      //             currFields.push({\n      //                id: f.columnName,\n      //                value: f.label,\n      //                type: f.key\n      //             });\n      //          }\n      //       });\n      //    }\n\n      //    return currFields;\n      // }\n\n      ui() {\n         const ids = this.ids;\n         const _this = this;\n\n         return {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        // id: ids.fromName,\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (/* newVal, oldVal */) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    L(\"Email is invalid\")\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    this.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        id: ids.message,\n                        view: \"textarea\",\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     //    view: 'label',\n                     //    label: 'Message',\n                     //    css: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     //    view: 'forminput',\n                     //    id: ids.message,\n                     //    name: 'message',\n                     //    label: 'Message',\n                     //    css: \"ab-rich-text\",\n                     //    width: 320,\n                     //    height: 400,\n                     //    body: {\n                     //       view: 'tinymce-editor'\n                     //    }\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: (obj, common) => {\n                           return this.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id /*, e, node */) {\n                              var component = this.getItem(id);\n                              _this.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         const ids = this.ids;\n\n         if (this.CurrentObject) {\n            $$(ids.list).parse(\n               this.CurrentObject.fields((f) => f.fieldUseAsLabel())\n            );\n            $$(ids.list).refresh();\n         }\n\n         this.refreshUI();\n      }\n\n      // // valueDisplayComponent\n      // // Return an ABView to display our values form.\n      // //\n      // valueDisplayComponent(idBase) {\n      //    var ids = {\n      //       form: `${idBase}_form`,\n      //       popup: `${idBase}_popup`,\n      //       list: `${idBase}_fieldList`,\n      //       toEmailsContainer: `${idBase}_toEmailsContainer`,\n      //       toEmails: `${idBase}_toEmails`,\n      //       message: `${idBase}_message`,\n      //    };\n\n      //    this._ui = {\n      //       ui: {\n      //          id: ids.form,\n      //          view: \"form\",\n      //          width: 450,\n      //          elementsConfig: {\n      //             labelPosition: \"top\",\n      //             labelWidth: 100,\n      //          },\n      //          cols: [\n      //             // email form\n      //             {\n      //                width: 330,\n      //                rows: [\n      //                   {\n      //                      view: \"text\",\n      //                      name: \"fromName\",\n      //                      label: L(\"From Name\"),\n      //                   },\n      //                   {\n      //                      view: \"text\",\n      //                      name: \"fromEmail\",\n      //                      label: L(\"From Email\"),\n      //                      validate: webix.rules.isEmail,\n      //                      on: {\n      //                         onChange: function (newVal, oldVal) {\n      //                            if (this.getValue() && !this.validate()) {\n      //                               $$(ids.form).markInvalid(\n      //                                  \"fromEmail\",\n      //                                  \"Email is invalid\"\n      //                               );\n      //                            } else {\n      //                               $$(ids.form).markInvalid(\n      //                                  \"fromEmail\",\n      //                                  false\n      //                               );\n      //                            }\n      //                         },\n      //                      },\n      //                   },\n      //                   {\n      //                      id: ids.toEmailsContainer,\n      //                      view: \"forminput\",\n      //                      name: \"toEmails\",\n      //                      label: L(\"Send\"),\n      //                      css: \"ab-rich-text\",\n      //                      width: 320,\n      //                      body: {\n      //                         width: 320,\n      //                         rows: [\n      //                            {\n      //                               height: 25,\n      //                            },\n      //                            {\n      //                               id: ids.toEmails,\n      //                               width: 320,\n      //                               view: \"layout\",\n      //                               rows: [],\n      //                            },\n      //                            {\n      //                               view: \"button\",\n      //                               css: \"webix_primary\",\n      //                               type: \"icon\",\n      //                               icon: \"fa fa-plus\",\n      //                               label: L(\"Add a recipient\"),\n      //                               width: 150,\n      //                               click: () => {\n      //                                  _logic.toEmailAdd();\n      //                               },\n      //                            },\n      //                         ],\n      //                      },\n      //                   },\n      //                   {\n      //                      view: \"text\",\n      //                      name: \"subject\",\n      //                      label: L(\"Subject\"),\n      //                   },\n      //                   {\n      //                      view: \"textarea\",\n      //                      id: ids.message,\n      //                      name: \"message\",\n      //                      label: L(\"Message\"),\n      //                      width: 320,\n      //                      height: 400,\n      //                   },\n      //                   // {\n      //                   // \tview: 'label',\n      //                   // \tlabel: 'Message',\n      //                   // \tcss: { 'font-weight': 'bold' }\n      //                   // },\n      //                   // {\n      //                   // \tview: 'forminput',\n      //                   // \tid: ids.message,\n      //                   // \tname: 'message',\n      //                   // \tlabel: 'Message',\n      //                   // \tcss: \"ab-rich-text\",\n      //                   // \twidth: 320,\n      //                   // \theight: 400,\n      //                   // \tbody: {\n      //                   // \t\tview: 'tinymce-editor'\n      //                   // \t}\n      //                   // }\n      //                ],\n      //             },\n      //             // field list\n      //             {\n      //                rows: [\n      //                   {\n      //                      view: \"template\",\n      //                      type: \"header\",\n      //                      template: \"Fields\",\n      //                   },\n      //                   {\n      //                      id: ids.list,\n      //                      view: \"list\",\n      //                      width: 120,\n      //                      css: { \"background-color\": \"#fff !important;\" },\n      //                      template: function (obj, common) {\n      //                         return _logic.fieldTemplate(obj, common);\n      //                      },\n      //                      on: {\n      //                         onItemClick: function (id, e, node) {\n      //                            var component = this.getItem(id);\n\n      //                            _logic.enterField(component);\n      //                         },\n      //                      },\n      //                   },\n      //                ],\n      //             },\n      //          ],\n      //       },\n\n      //       init: () => {\n      //          if (this.CurrentObject) {\n      //             $$(ids.list).parse(\n      //                this.CurrentObject.fields((f) => f.fieldUseAsLabel())\n      //             );\n      //             $$(ids.list).refresh();\n      //          }\n\n      //          _logic.refreshUI();\n      //       },\n\n      //       _logic: _logic,\n\n      //       fromSettings: (valueRules) => {\n      //          _logic.fromSettings(valueRules);\n      //       },\n      //       toSettings: () => {\n      //          return _logic.toSettings();\n      //       },\n      //    };\n\n      //    var _logic = {\n      //       fromSettings: (valueRules) => {\n      //          valueRules = valueRules || {};\n\n      //          $$(ids.form).setValues(valueRules);\n\n      //          // Populate recipients\n      //          var recipients = valueRules.toEmails || [];\n      //          recipients.forEach((r) => {\n      //             _logic.toEmailAdd({\n      //                type: r.type, // 'to', 'cc' or 'bcc'\n      //                emailType: r.emailType, // 'email' or 'field'\n      //                value: r.value,\n      //             });\n      //          });\n\n      //          _logic.refreshUI();\n      //       },\n\n      //       toSettings: () => {\n      //          var formVals = $$(ids.form).getValues() || {};\n\n      //          // Get recipients\n      //          var recipients = [];\n      //          $$(ids.toEmails)\n      //             .getChildViews()\n      //             .forEach((e) => {\n      //                // var type = e.queryView({ name: 'type' }).getValue();\n      //                var type = \"to\"; // TODO\n      //                var emailType = e\n      //                   .queryView({ name: \"emailType\" })\n      //                   .getValue();\n      //                var value = e.queryView({ name: emailType }).getValue();\n\n      //                recipients.push({\n      //                   type: type,\n      //                   emailType: emailType,\n      //                   value: value,\n      //                });\n      //             });\n\n      //          // return the confirm message\n      //          return {\n      //             fromName: formVals[\"fromName\"],\n      //             fromEmail: formVals[\"fromEmail\"],\n      //             toEmails: recipients,\n      //             subject: formVals[\"subject\"],\n      //             message: formVals[\"message\"],\n      //          };\n      //       },\n\n      //       /**\n      //        * @method toEmailTemplate\n      //        *\n      //        * @param settings - {\n      //        * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n      //        * \t\t\temailType: string, // 'email' or 'field'\n      //        * \t\t\tvalue: string\n      //        * }\n      //        */\n      //       toEmailTemplate: (settings) => {\n      //          settings = settings || {};\n\n      //          return {\n      //             width: 320,\n      //             cols: [\n      //                // {\n      //                // \tview: 'richselect',\n      //                // \tname: 'type',\n      //                // \tvalue: settings.type || 'to',\n      //                // \twidth: 80,\n      //                // \toptions: [\n      //                // \t\t{ id: 'to', value: \"To:\" },\n      //                // \t\t// EmailNotification does not support cc, bcc and reply.\n      //                // \t\t// { id: 'cc', value: \"Cc:\" },\n      //                // \t\t// { id: 'bcc', value: \"Bcc:\" },\n      //                // \t\t// { id: 'reply', value: \"Reply-To:\" }\n      //                // \t]\n      //                // },\n      //                {\n      //                   view: \"richselect\",\n      //                   name: \"emailType\",\n      //                   value: settings.emailType || \"email\",\n      //                   width: 150,\n      //                   options: [\n      //                      {\n      //                         id: \"email\",\n      //                         value: L(\"A custom email address\"),\n      //                      },\n      //                      { id: \"field\", value: L(\"An email field\") },\n      //                      { id: \"query\", value: L(\"From query\") },\n      //                   ],\n      //                   on: {\n      //                      onChange: function (newVal, oldVal) {\n      //                         _logic.emailTypeChange(newVal, this);\n      //                      },\n      //                   },\n      //                },\n      //                {\n      //                   width: 150,\n      //                   name: \"emailValue\",\n      //                   visibleBatch: settings.emailType || \"email\",\n      //                   cols: [\n      //                      {\n      //                         view: \"text\",\n      //                         name: \"email\",\n      //                         batch: \"email\",\n      //                         value:\n      //                            settings.emailType == \"email\"\n      //                               ? settings.value\n      //                               : \"\",\n      //                         validate: webix.rules.isEmail,\n      //                         width: 150,\n      //                         on: {\n      //                            onChange: function (newVal, oldVal) {\n      //                               _logic.toEmailValidate();\n      //                            },\n      //                         },\n      //                      },\n      //                      {\n      //                         view: \"richselect\",\n      //                         name: \"field\",\n      //                         batch: \"field\",\n      //                         value:\n      //                            settings.emailType == \"field\"\n      //                               ? settings.value\n      //                               : \"\",\n      //                         width: 150,\n      //                         suggest: {\n      //                            on: {\n      //                               onBeforeShow: function () {\n      //                                  this.define(\"width\", 300);\n      //                                  this.resize();\n      //                               },\n      //                            },\n      //                            data: _logic.emailFieldOptions(),\n      //                         },\n      //                      },\n      //                      {\n      //                         view: \"richselect\",\n      //                         name: \"query\",\n      //                         batch: \"query\",\n      //                         value:\n      //                            settings.emailType == \"query\"\n      //                               ? settings.value\n      //                               : \"\",\n      //                         width: 150,\n      //                         suggest: {\n      //                            on: {\n      //                               onBeforeShow: function () {\n      //                                  this.define(\"width\", 300);\n      //                                  this.resize();\n      //                               },\n      //                            },\n      //                            data: _logic.queryOptions(),\n      //                         },\n      //                      },\n      //                   ],\n      //                },\n      //                {\n      //                   view: \"button\",\n      //                   css: \"webix_danger\",\n      //                   type: \"icon\",\n      //                   icon: \"fa fa-trash-o\",\n      //                   width: 32,\n      //                   click: function () {\n      //                      var $toView = this.getParentView();\n\n      //                      _logic.toEmailRemove($toView);\n      //                   },\n      //                },\n      //             ],\n      //          };\n      //       },\n\n      //       toEmailAdd: (settings) => {\n      //          var count = $$(ids.toEmails).getChildViews().length;\n\n      //          $$(ids.toEmails).addView(\n      //             _logic.toEmailTemplate(settings),\n      //             count\n      //          );\n\n      //          _logic.refreshUI();\n      //       },\n\n      //       emailTypeChange: (type, $select) => {\n      //          var $recipient = $select.getParentView();\n      //          var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n      //          switch (type) {\n      //             case \"field\":\n      //                $emailValue.showBatch(\"field\");\n      //                break;\n      //             case \"query\":\n      //                $emailValue.showBatch(\"query\");\n      //                break;\n      //             default:\n      //                $emailValue.showBatch(\"email\");\n      //                break;\n      //          }\n\n      //          $$(ids.toEmailsContainer).adjust();\n      //       },\n\n      //       toEmailRemove: ($toView) => {\n      //          $$(ids.toEmails).removeView($toView);\n\n      //          _logic.refreshUI();\n      //       },\n\n      //       toEmailValidate: () => {\n      //          var isAllValid = true;\n\n      //          $$(ids.toEmails)\n      //             .getChildViews()\n      //             .forEach((v) => {\n      //                let emailText = v.queryView({ name: \"email\" });\n      //                if (emailText.getValue() && !emailText.validate()) {\n      //                   isAllValid = false;\n      //                }\n      //             });\n\n      //          if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n      //          else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n      //       },\n\n      //       fieldTemplate: (field, common) => {\n      //          return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n      //       },\n\n      //       emailFieldOptions: () => {\n      //          var existsFieldIds = [];\n      //          var options = [];\n\n      //          var fnAddOptions = (currObj, fLink) => {\n      //             var emailFields = currObj\n      //                .fields((f) => f instanceof ABFieldEmail)\n      //                .map((f) => {\n      //                   var optId = \"\",\n      //                      optLabel = \"\";\n\n      //                   if (fLink) {\n      //                      optId = `${fLink.id}|${f.urlPointer()}`;\n      //                      optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n      //                   } else {\n      //                      optId = `|${f.urlPointer()}`;\n      //                      optLabel = `${currObj.label}.${f.label}`;\n      //                   }\n\n      //                   return {\n      //                      id: optId, // linkFieldId|fieldUrl\n      //                      value: optLabel,\n      //                   };\n      //                });\n\n      //             // TODO: prevent duplicate\n\n      //             options = options.concat(emailFields);\n      //          };\n\n      //          fnAddOptions(this.CurrentObject);\n\n      //          this.CurrentObject.connectFields().forEach((f) => {\n      //             // prevent looping\n      //             if (\n      //                // - prevent include connect objects of the base object\n      //                // f.datasourceLink.id == this.CurrentObject.id ||\n      //                // - check duplicate include objects\n      //                existsFieldIds.indexOf(f.id) > -1\n      //             )\n      //                return;\n\n      //             // store\n      //             existsFieldIds.push(f.id);\n\n      //             // add email fields of link object\n      //             fnAddOptions(f.datasourceLink, f);\n      //          });\n\n      //          return options;\n      //       },\n\n      //       queryOptions: () => {\n      //          var options = [];\n\n      //          // get data collections who is query and contains email field\n      //          let dcQueries = this.currentForm.AB.datacollections((dc) => {\n      //             let obj = dc.datasource;\n      //             return (\n      //                dc.settings.isQuery &&\n      //                obj &&\n      //                obj.fields((f) => f.key == \"email\").length > 0\n      //             );\n      //          });\n\n      //          dcQueries.forEach((dv) => {\n      //             if (dv.datasource) {\n      //                dv.datasource\n      //                   .fields((f) => f.key == \"email\")\n      //                   .forEach((f) => {\n      //                      options.push({\n      //                         id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n      //                         value: `${dv.label}.${f.label}`,\n      //                      });\n      //                   });\n      //             }\n      //          });\n\n      //          return options;\n      //       },\n\n      //       enterField: (field) => {\n      //          var focusElem = webix.UIManager.getFocus();\n      //          var val = \"\";\n\n      //          if (\n      //             focusElem.config.view != \"text\" ||\n      //             focusElem.config.view != \"textarea\"\n      //          ) {\n      //             if (focusElem.getValue) val = focusElem.getValue();\n\n      //             if (focusElem.setValue)\n      //                focusElem.setValue(`${val}${field.label}`);\n\n      //             webix.UIManager.setFocus(focusElem);\n      //          }\n      //       },\n\n      //       refreshUI: () => {\n      //          $$(ids.toEmailsContainer).adjust();\n      //          $$(ids.message).adjust();\n      //       },\n      //    };\n\n      //    return this._ui;\n      // }\n\n      fromSettings(settings) {\n         super.fromSettings(settings); // let the parent handle the QB\n\n         let valueRules = settings.valueRules || {};\n\n         $$(this.ids.form).setValues(valueRules);\n\n         // Populate recipients\n         var recipients = valueRules.toEmails || [];\n         recipients.forEach((r) => {\n            this.toEmailAdd({\n               type: r.type, // 'to', 'cc' or 'bcc'\n               emailType: r.emailType, // 'email' or 'field'\n               value: r.value,\n            });\n         });\n\n         this.refreshUI();\n      }\n\n      toSettings() {\n         const ids = this.ids;\n\n         var settings = super.toSettings();\n\n         var formVals = $$(ids.form).getValues() || {};\n\n         // Get recipients\n         var recipients = [];\n         $$(ids.toEmails)\n            .getChildViews()\n            .forEach((e) => {\n               // var type = e.queryView({ name: 'type' }).getValue();\n               var type = \"to\"; // TODO\n               var emailType = e.queryView({ name: \"emailType\" }).getValue();\n               var value = e.queryView({ name: emailType }).getValue();\n\n               recipients.push({\n                  type: type,\n                  emailType: emailType,\n                  value: value,\n               });\n            });\n\n         // return the confirm message\n         settings.valueRules = {\n            fromName: formVals[\"fromName\"],\n            fromEmail: formVals[\"fromEmail\"],\n            toEmails: recipients,\n            subject: formVals[\"subject\"],\n            message: formVals[\"message\"],\n         };\n\n         return settings;\n      }\n\n      /**\n       * @method toEmailTemplate\n       *\n       * @param settings - {\n       *          type: string, // 'to', 'cc' or 'bcc'\n       *          emailType: string, // 'email' or 'field'\n       *          value: string\n       * }\n       */\n      toEmailTemplate(settings) {\n         settings = settings || {};\n         const _this = this;\n\n         return {\n            width: 320,\n            cols: [\n               // {\n               //    view: 'richselect',\n               //    name: 'type',\n               //    value: settings.type || 'to',\n               //    width: 80,\n               //    options: [\n               //       { id: 'to', value: \"To:\" },\n               //       // EmailNotification does not support cc, bcc and reply.\n               //       // { id: 'cc', value: \"Cc:\" },\n               //       // { id: 'bcc', value: \"Bcc:\" },\n               //       // { id: 'reply', value: \"Reply-To:\" }\n               //    ]\n               // },\n               {\n                  view: \"richselect\",\n                  name: \"emailType\",\n                  value: settings.emailType || \"email\",\n                  width: 150,\n                  options: [\n                     {\n                        id: \"email\",\n                        value: L(\"A custom email address\"),\n                     },\n                     { id: \"field\", value: L(\"An email field\") },\n                     { id: \"query\", value: L(\"From query\") },\n                  ],\n                  on: {\n                     onChange: function (newVal /* , oldVal */) {\n                        _this.emailTypeChange(newVal, this);\n                     },\n                  },\n               },\n               {\n                  width: 150,\n                  name: \"emailValue\",\n                  visibleBatch: settings.emailType || \"email\",\n                  cols: [\n                     {\n                        view: \"text\",\n                        name: \"email\",\n                        batch: \"email\",\n                        value:\n                           settings.emailType == \"email\" ? settings.value : \"\",\n                        validate: webix.rules.isEmail,\n                        width: 150,\n                        on: {\n                           onChange: (/* newVal, oldVal */) => {\n                              this.toEmailValidate();\n                           },\n                        },\n                     },\n                     {\n                        view: \"richselect\",\n                        name: \"field\",\n                        batch: \"field\",\n                        value:\n                           settings.emailType == \"field\" ? settings.value : \"\",\n                        width: 150,\n                        suggest: {\n                           on: {\n                              onBeforeShow: function () {\n                                 this.define(\"width\", 300);\n                                 this.resize();\n                              },\n                           },\n                           data: this.emailFieldOptions(),\n                        },\n                     },\n                     {\n                        view: \"richselect\",\n                        name: \"query\",\n                        batch: \"query\",\n                        value:\n                           settings.emailType == \"query\" ? settings.value : \"\",\n                        width: 150,\n                        suggest: {\n                           on: {\n                              onBeforeShow: function () {\n                                 this.define(\"width\", 300);\n                                 this.resize();\n                              },\n                           },\n                           data: this.queryOptions(),\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  type: \"icon\",\n                  icon: \"fa fa-trash-o\",\n                  width: 32,\n                  click: function () {\n                     var $toView = this.getParentView();\n                     _this.toEmailRemove($toView);\n                  },\n               },\n            ],\n         };\n      }\n\n      toEmailAdd(settings) {\n         var count = $$(this.ids.toEmails).getChildViews().length;\n\n         $$(this.ids.toEmails).addView(this.toEmailTemplate(settings), count);\n\n         this.refreshUI();\n      }\n\n      emailTypeChange(type, $select) {\n         var $recipient = $select.getParentView();\n         var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n         switch (type) {\n            case \"field\":\n               var fields = this.emailFieldOptions();\n               if (fields.length > 0) {\n                  $emailValue.showBatch(\"field\");\n               } else {\n                  $select.setValue(\"email\");\n                  webix.message(\n                     L(\"This form's chosen Datacollection has no Email Fields\")\n                  );\n               }\n               break;\n            case \"query\":\n               var queries = this.queryOptions();\n               if (queries.length > 0) {\n                  $emailValue.showBatch(\"query\");\n               } else {\n                  $select.setValue(\"email\");\n                  webix.message(\n                     L(\n                        \"There are no queries with Email Fields in this Application\"\n                     )\n                  );\n               }\n               break;\n            default:\n               $emailValue.showBatch(\"email\");\n               break;\n         }\n\n         $$(this.ids.toEmailsContainer).adjust();\n      }\n\n      toEmailRemove($toView) {\n         $$(this.ids.toEmails).removeView($toView);\n         this.refreshUI();\n      }\n\n      toEmailValidate() {\n         let isAllValid = true;\n\n         $$(this.ids.toEmails)\n            .getChildViews()\n            .forEach((v) => {\n               let emailText = v.queryView({ name: \"email\" });\n               if (emailText.getValue() && !emailText.validate()) {\n                  isAllValid = false;\n               }\n            });\n\n         if (isAllValid) $$(this.ids.form).markInvalid(\"toEmails\", false);\n         else $$(this.ids.form).markInvalid(\"toEmails\", L(\"Email is invalid\"));\n      }\n\n      fieldTemplate(field /*, common */) {\n         return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n      }\n\n      emailFieldOptions() {\n         var existsFieldIds = [];\n         var options = [];\n\n         var fnAddOptions = (currObj, fLink) => {\n            var emailFields = currObj\n               .fields((f) => f.key == \"email\")\n               .map((f) => {\n                  var optId = \"\",\n                     optLabel = \"\";\n\n                  if (fLink) {\n                     optId = `${fLink.id}|${f.urlPointer()}`;\n                     optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                  } else {\n                     optId = `|${f.urlPointer()}`;\n                     optLabel = `${currObj.label}.${f.label}`;\n                  }\n\n                  return {\n                     id: optId, // linkFieldId|fieldUrl\n                     value: optLabel,\n                  };\n               });\n\n            // TODO: prevent duplicate\n\n            options = options.concat(emailFields);\n         };\n\n         fnAddOptions(this.CurrentObject);\n\n         this.CurrentObject.connectFields().forEach((f) => {\n            // prevent looping\n            if (\n               // - prevent include connect objects of the base object\n               // f.datasourceLink.id == this.CurrentObject.id ||\n               // - check duplicate include objects\n               existsFieldIds.indexOf(f.id) > -1\n            )\n               return;\n\n            // store\n            existsFieldIds.push(f.id);\n\n            // add email fields of link object\n            fnAddOptions(f.datasourceLink, f);\n         });\n\n         return options;\n      }\n\n      queryOptions() {\n         var options = [];\n\n         // get data collections who is query and contains email field\n         // Limit ourselves to what is Included in our current Application\n         let dcQueries = this.currentForm.application.datacollectionsIncluded(\n            (dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            }\n         );\n\n         dcQueries.forEach((dv) => {\n            if (dv.datasource) {\n               dv.datasource\n                  .fields((f) => f.key == \"email\")\n                  .forEach((f) => {\n                     options.push({\n                        id: `${dv.id}|${f.id}`,\n                        // ABDatacollectionID|fieldID\n                        value: `${dv.label}.${f.label}`,\n                     });\n                  });\n            }\n         });\n\n         return options;\n      }\n\n      enterField(field) {\n         var focusElem = webix.UIManager.getFocus();\n         var val = \"\";\n\n         if (\n            focusElem.config.view != \"text\" ||\n            focusElem.config.view != \"textarea\"\n         ) {\n            if (focusElem.getValue) val = focusElem.getValue();\n\n            if (focusElem.setValue) focusElem.setValue(`${val}${field.label}`);\n\n            webix.UIManager.setFocus(focusElem);\n         }\n      }\n\n      refreshUI() {\n         $$(this.ids.toEmailsContainer).adjust();\n         $$(this.ids.message).adjust();\n      }\n\n      // // process\n      // // gets called when a form is submitted and the data passes the Query Builder Rules.\n      // // @param {obj} options - {\n      // //\t\t\t\t\t\t\tdata: {obj} rowData,\n      // //\t\t\t\t\t\t\tform: {ABViewForm}\n      // //\t\t\t\t\t\t}\n      // process(options) {\n      //    // validate sender's email is invalid\n      //    if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n      //       return Promise.resolve();\n      //    }\n\n      //    var recipients = [];\n\n      //    return Promise.resolve()\n      //       .then(() => {\n      //          // Pull recipients data\n      //          return new Promise((resolve, reject) => {\n      //             var tasks = [];\n\n      //             this.valueRules.toEmails.forEach((rec) => {\n      //                tasks.push(\n      //                   new Promise((next, err) => {\n      //                      // TODO: Cc, Bcc\n\n      //                      // field\n      //                      if (rec.emailType == \"field\") {\n      //                         var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n      //                         var emailField =\n      //                            this.CurrentObject.application.urlResolve(\n      //                               emailFieldUrl\n      //                            );\n      //                         if (emailField) {\n      //                            // Pull email source object\n      //                            if (\n      //                               emailField.object.id == this.CurrentObject.id\n      //                            ) {\n      //                               var emailData =\n      //                                  options.data[emailField.columnName];\n      //                               if (emailData)\n      //                                  recipients =\n      //                                     recipients.concat(emailData);\n      //                            }\n      //                            // Pull emails from link object\n      //                            else {\n      //                               let linkFieldId = rec.value.split(\"|\")[0];\n      //                               let linkFields = this.CurrentObject.fields(\n      //                                  (f) =>\n      //                                     f instanceof ABFieldConnect &&\n      //                                     f.id == linkFieldId\n      //                               );\n      //                               linkFields.forEach((f) => {\n      //                                  var linkedData =\n      //                                     options.data[f.relationName()] || [];\n\n      //                                  // convert to an array\n      //                                  if (\n      //                                     linkedData &&\n      //                                     !Array.isArray(linkedData)\n      //                                  )\n      //                                     linkedData = [linkedData];\n\n      //                                  // pull email address\n      //                                  linkedData.forEach((d) => {\n      //                                     var email = d[emailField.columnName];\n      //                                     if (email)\n      //                                        recipients =\n      //                                           recipients.concat(email);\n      //                                  });\n      //                               });\n      //                            }\n\n      //                            next();\n      //                         } else {\n      //                            next();\n      //                         }\n      //                      }\n\n      //                      // query\n      //                      else if (rec.emailType == \"query\") {\n      //                         var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n      //                         if (!dvIdAndFieldId) return next();\n\n      //                         var dcId = dvIdAndFieldId.split(\"|\")[0];\n      //                         var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n      //                         var dcQuery =\n      //                            this.currentForm.AB.datacollectionByID(dcId);\n      //                         if (!dcQuery) return next();\n\n      //                         var field = dcQuery.datasource.fieldByID(fieldId);\n      //                         if (!field) return next();\n\n      //                         // get data of data collection\n      //                         dcQuery.getData().forEach((data) => {\n      //                            var emailAddr = data[field.columnName];\n      //                            if (emailAddr) recipients.push(emailAddr);\n      //                         });\n\n      //                         next();\n      //                      }\n\n      //                      // email\n      //                      else {\n      //                         recipients.push(rec.value);\n      //                         next();\n      //                      }\n      //                   })\n      //                );\n      //             });\n\n      //             Promise.all(tasks).catch(reject).then(resolve);\n      //          });\n      //       })\n      //       .then(() => {\n      //          // send out\n      //          return new Promise((resolve, reject) => {\n      //             recipients = this.AB.uniq(recipients).filter((r) => r);\n\n      //             if (!recipients || recipients.length < 1) return resolve();\n\n      //             // replace form value to template\n      //             var fromName = this.valueRules.fromName,\n      //                subject = this.valueRules.subject,\n      //                message = this.valueRules.message;\n\n      //             this.CurrentObject\n      //                .fields((f) => f.fieldUseAsLabel())\n      //                .forEach((f) => {\n      //                   var template = new RegExp(`{${f.label}}`, \"g\"),\n      //                      data = f.format(options.data);\n\n      //                   fromName = fromName.replace(template, data);\n      //                   subject = subject.replace(template, data);\n      //                   message = message.replace(template, data);\n      //                });\n\n      //             // send a email\n      //             this.AB.Network.post({\n      //                url: \"/app_builder/email\",\n      //                params: {\n      //                   fromName: fromName,\n      //                   fromEmail: this.valueRules.fromEmail,\n      //                   subject: subject,\n      //                   message: message,\n      //                   recipients: this.AB.uniq(recipients),\n      //                },\n      //             })\n      //                .then(() => {\n      //                   resolve();\n      //                })\n      //                .catch(reject);\n      //          });\n      //       });\n      // }\n   }\n\n   return ABViewRuleActionFormSubmitRuleEmail;\n}\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nimport FUIClass from \"../../../ui_class\";\nimport FABViewRuleAction from \"../ABViewRuleAction\";\n\n// const RowFilter = require(\"../../platform/RowFilter\");\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nexport default function (AB) {\n   const UIClass = FUIClass(AB);\n   const ABViewRuleAction = FABViewRuleAction(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABViewRuleAction.L();\n\n   class ABViewValueDisplayList extends UIClass {\n      constructor(base, Rule) {\n         super(base, {\n            updateForm: \"\",\n         });\n\n         this.uniqueIDs();\n\n         this.base = base;\n\n         this.Rule = Rule;\n         // {ABViewRuleActionObjectUpdater}\n         // Our parent ObjectUpdater RuleAction.\n         // we need this to see what rules are already chosen.\n\n         this.valueRules = null;\n      }\n\n      ui() {\n         return {\n            view: \"form\",\n            id: this.ids.updateForm,\n            elements: [],\n         };\n      }\n\n      init(AB, valueRules) {\n         this.AB = AB;\n\n         valueRules = valueRules || this.valueRules;\n         this.setValues(valueRules);\n      }\n\n      removeAddRow() {\n         // get our Form\n         var UpdateForm = this.formGet();\n         if (!UpdateForm) return;\n\n         // check row that's unselect a field\n         var rows = UpdateForm.getChildViews();\n\n         var addRow = rows.filter((r) => {\n            return r.queryView(function (view) {\n               return view.config.name == \"field\" && !view.getValue();\n            });\n         })[0];\n         if (!addRow) return;\n\n         UpdateForm.removeView(addRow);\n      }\n\n      /**\n       * @method addRow()\n       * add a new data entry to this form.\n       * @param {obj} data  (optional)\n       *        initial values for this row.\n       */\n      addRow(data) {\n         // get our Form\n         var UpdateForm = this.formGet();\n         if (!UpdateForm) return;\n\n         // check row that's unselect a field\n         var rows = UpdateForm.getChildViews();\n         if (\n            data == null &&\n            rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            }).length > 0\n         )\n            return;\n\n         // get a new Row Component\n         var row = new ABViewValueDisplayRow(this.base, this.Rule);\n\n         // add row to Form\n         UpdateForm.addView(row.ui());\n\n         // initialize row with any provided data:\n         row.init(this.AB, data);\n         row.on(\"add\", () => {\n            this.addRow();\n         });\n         row.on(\"delete\", (rowId) => {\n            this.delRow(rowId);\n         });\n\n         // store this row\n         this.Rule.formRows.push(row);\n      }\n\n      delRow(rowId) {\n         // store this row\n         this.Rule.formRows.forEach((r, index) => {\n            if (r.ui.id == rowId) this.Rule.formRows.splice(index, 0);\n         });\n\n         // get our Form\n         var UpdateForm = this.formGet();\n         if (!UpdateForm) return;\n\n         // remove UI\n         UpdateForm.removeView($$(rowId));\n      }\n\n      formClear() {\n         var UpdateForm = this.formGet();\n         if (!UpdateForm) return;\n\n         var children = UpdateForm.getChildViews();\n\n         // NOTE: need to clone this array, because it is connected with the UpdatForm's\n         // internal array of items.  Once we start .removeView() the element actually\n         // is removed from the internal array, which then upset's the .forEach() from\n         // properly iterating through the structure.  It results in missed items from\n         // being sent to the .forEach().\n         // So Clone it and use that for .forEach()\n         var cloneChildren = [];\n         children.forEach((c) => {\n            cloneChildren.push(c);\n         });\n         cloneChildren.forEach((c) => {\n            UpdateForm.removeView(c);\n         });\n\n         // clear our stored .formRows\n         this.Rule.formRows = [];\n      }\n\n      formGet() {\n         var UpdateForm = $$(this.ids.updateForm);\n         if (!UpdateForm) {\n            // this is a problem!\n            let message =\n               \"ABViewRuleActionFormRecordRuleUpdate.formGet() could not find webix form.\";\n            this.AB.notify.developer(new Error(message), {\n               context: message,\n               updateForm: this.ids.updateForm,\n            });\n\n            return null;\n         }\n\n         return UpdateForm;\n      }\n\n      setValues(valueRules) {\n         // valueRules = {\n         // fieldOperations:[\n         //    { fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n         // ]\n         // }\n\n         valueRules = valueRules || {};\n         valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n         // find the form\n         var UpdateForm = this.formGet();\n         if (!UpdateForm) return;\n\n         // clear form:\n         this.formClear();\n\n         // if there are values to add\n         if (valueRules.fieldOperations.length > 0) {\n            valueRules.fieldOperations.forEach((r) => {\n               this.addRow(r);\n            });\n         }\n\n         // our default operation will cause an empty row to\n         // appear after our first value entry.\n         // let's remove that one, and then add a new one\n         // at the end:\n         this.removeAddRow();\n\n         // display an empty row\n         this.addRow();\n      }\n\n      fromSettings(settings) {\n         // Note: we just want the { valueRules:[] } here:\n         var mySettings = settings.valueRules || settings;\n\n         this.setValues(mySettings);\n      }\n\n      toSettings() {\n         // valueRules = {\n         // fieldOperations:[\n         //    { fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n         // ]\n         // }\n         var settings = { fieldOperations: [] };\n\n         // for each of our formRows, decode the propery {}\n         this.Rule.formRows.forEach((fr) => {\n            var rowSettings = fr.toSettings();\n            if (rowSettings) {\n               settings.fieldOperations.push(fr.toSettings());\n            }\n         });\n\n         return settings;\n      }\n   }\n\n   class ABViewValueDisplayRow extends UIClass {\n      constructor(base, Rule) {\n         super(base, {\n            row: \"\",\n            updateForm: \"\",\n            field: \"\",\n            value: \"\",\n            selectDc: \"\",\n            selectBy: \"\",\n            queryField: \"\",\n            multiview: \"\",\n            buttonAdd: \"\",\n            buttonDelete: \"\",\n         });\n\n         this.uniqueIDs();\n\n         this.base = base;\n\n         this.FilterComponent = null;\n         // {FilterComplex}\n         // An optional Filter used when selecting values from a DC.\n\n         this.Rule = Rule;\n         // {ABViewRuleActionObjectUpdater}\n         // Our parent ObjectUpdater RuleAction.\n         // we need this to see what rules are already chosen.\n      }\n\n      ui() {\n         const ids = this.ids;\n         return {\n            id: ids.row,\n            view: \"layout\",\n            rows: [\n               {\n                  cols: [\n                     {\n                        // Label\n                        view: \"label\",\n                        width: uiConfig.labelWidthSmall,\n                        label: L(\"Set\"),\n                     },\n                     {\n                        // Field list\n                        id: ids.field,\n                        view: \"combo\",\n                        name: \"field\",\n                        placeholder: L(\"Choose a field\"),\n                        height: 32,\n                        options: this.getFieldList(true),\n                        on: {\n                           onChange: (columnId) => {\n                              this.selectField(columnId);\n                           },\n                        },\n                     },\n                     {\n                        // Label\n                        view: \"label\",\n                        width: uiConfig.labelWidthSmall,\n                        label: L(\"To\"),\n                     },\n\n                     // Field value\n                     // NOTE: this view gets replaced each time a field is selected.\n                     // We replace it with a component associated with the Field\n                     {},\n\n                     {\n                        // \"Remove\" button\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        id: ids.buttonDelete,\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        hidden: true,\n                        click: () => {\n                           this.emit(\"delete\", ids.row);\n                           // this.callbacks.onDelete(ids.row);\n                        },\n                     },\n                  ],\n               },\n               {}, // we will add filters here if we need them\n            ],\n         };\n      }\n\n      buttonsToggle() {\n         const $cols = $$(this.ids.row).getChildViews()[0].getChildViews();\n         $cols[4].hide();\n         $cols[5].show();\n      }\n\n      getFieldList(shouldFilter) {\n         var options = [];\n         if (this.Rule.CurrentObject) {\n            options = (this.Rule.CurrentObject.fields() || []).map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n            // options = (this.updateObject.fields() || [])\n            // .filter(f => {\n            //\n            //    if (f.key != 'connectObject') {\n            //       return true;\n            //    } else {\n            //       // if this is a connection field, only return\n            //       // fields that are 1:x  where this field is the\n            //       // source:\n            //       // return ((f.linkType() == 'one') && (f.isSource()))\n            //\n            //       // 6-14-2018 Changing from only 1:x to support many\n            //       // if this is a connected field, only return\n            //       // fields that this is the source\n            //       return (f.isSource())\n            //    }\n            // })\n            // .map(f => {\n            //    return {\n            //       id: f.id,\n            //       value: f.label\n            //    };\n            // });\n\n            // Remove fields who are selected\n            if (shouldFilter) {\n               // store this row\n               var usedHash = {};\n               this.Rule.formRows.forEach((row) => {\n                  var rowView = $$(row.ids.row);\n                  if (rowView) {\n                     var field = rowView.getChildViews()[0].getChildViews()[1];\n                     usedHash[field.getValue()] = true;\n                  }\n               });\n               options = options.filter((o) => {\n                  return !usedHash[o.id];\n               });\n            }\n         }\n         return options;\n      }\n\n      isValid() {\n         const ids = this.ids;\n         var validator = this.AB.Validation.validator();\n         var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n         var FormView = valueField.getParentView().getParentView();\n\n         var field = this.Rule.getUpdateObjectField($$(ids.field).getValue());\n         if (field) {\n            var value = field.getValue(valueField, {});\n\n            // // if a standard component that supports .getValue()\n            // if (valueField.getValue) {\n            //    value = valueField.getValue();\n            // } else {\n            //    // else use for field.getValue();\n            //    value = field.getValue(valueField, {});\n            // }\n\n            // our .isValidData() wants value in an object:\n            var obj = {};\n            obj[field.columnName] = value;\n\n            field.isValidData(obj, validator);\n\n            // if value is empty, this is also an error:\n            if (\n               value == \"\" ||\n               value == null ||\n               (Array.isArray(value) && value.length == 0)\n            ) {\n               validator.addError(field.columnName, L(\"\"));\n            }\n\n            // field.getParentView()  ->  row\n            // row.getParentView()  -> Form\n            FormView.clearValidation();\n            validator.updateForm(FormView);\n\n            return validator.pass();\n         } else {\n            // if we didn't find an associated field ... then this isn't good\n            // data.\n\n            //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n            // field.\n            var fieldField = $$(ids.row).getChildViews()[0].getChildViews()[1];\n            fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n            fieldField.define(\"invalid\", true);\n            fieldField.refresh();\n            // fieldField.markInvalid(this.labels.component.errorRequired);\n            return false;\n         }\n      }\n\n      selectField(columnID) {\n         const ids = this.ids;\n         var field = this.Rule.getUpdateObjectField(columnID);\n         if (!field) return;\n\n         var fieldComponent = field.formComponent(),\n            abView = fieldComponent.newInstance(this.Rule.CurrentApplication),\n            formFieldComponent = abView.component(this.App),\n            $componentView,\n            $inputView;\n\n         console.warn(\"TODO: remove this testing code:\");\n         if (typeof formFieldComponent.ui == \"function\") {\n            // this is proper V2 code:\n            $componentView = formFieldComponent.ui();\n         } else {\n            $componentView = formFieldComponent.ui;\n         }\n\n         $componentView.id = ids.value; // set our expected id\n\n         // find all the DataSources\n         var datasources = this.Rule.CurrentApplication.datacollectionsIncluded(\n            (dc) => dc.datasource\n         );\n\n         // create a droplist with those dataSources\n         var optionsDataSources = [];\n         datasources.forEach((dc) => {\n            optionsDataSources.push({\n               id: dc.id,\n               value: dc.label,\n               icon: dc.settings.isQuery ? \"fa fa-filter\" : \"fa fa-database\",\n            });\n         });\n\n         // create a droplist with select options\n         var optionsSelectBy = [\n            { id: \"select-one\", value: L(\"Current selection\") },\n            {\n               id: \"filter-select-one\",\n               value: L(\"Select first after filter by...\"),\n            },\n         ];\n\n         var $optionUpdateExsits = {\n            type: \"clean\",\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.selectDc,\n                        view: \"richselect\",\n                        options: { data: optionsDataSources },\n                        placeholder: L(\"Choose a data source\"),\n                        on: {\n                           onChange: (newv /*, oldv */) => {\n                              var selectedDC =\n                                 this.Rule.CurrentApplication.datacollectionsIncluded(\n                                    (dc) => dc.id == newv\n                                 )[0];\n                              if (\n                                 selectedDC &&\n                                 (selectedDC.sourceType == \"query\" ||\n                                    field.key != \"connectObject\")\n                              ) {\n                                 var queryFieldOptions = [];\n                                 selectedDC.datasource.fields().forEach((f) => {\n                                    queryFieldOptions.push({\n                                       id: f.id,\n                                       value: f.label,\n                                    });\n                                 });\n                                 $$(ids.queryField).define(\n                                    \"options\",\n                                    queryFieldOptions\n                                 );\n                                 $$(ids.queryField).refresh();\n                                 $$(ids.queryField).show();\n                              } else {\n                                 $$(ids.queryField).hide();\n                              }\n                           },\n                        },\n                     },\n                     // we will place a list of query fields if you choose a datasource that has a query source type\n                     {\n                        id: ids.queryField,\n                        view: \"combo\",\n                        hidden: true,\n                        placeholder: L(\"Choose value from...\"),\n                        options: [{ id: 1, value: \"figure this out\" }],\n                     },\n                  ],\n               },\n               {\n                  id: ids.selectBy,\n                  view: \"combo\",\n                  options: optionsSelectBy,\n                  placeholder: L(\"Choose select option\"),\n                  on: {\n                     onChange: (newv /*, oldv */) => {\n                        var $row = $$(ids.row);\n                        $row.removeView($row.getChildViews()[1]);\n                        if (newv == \"select-one\") {\n                           $row.addView({}, 1);\n                        } else {\n                           var options =\n                              this.Rule.CurrentView.datacollection.datasource\n                                 .fields()\n                                 .map(function (f) {\n                                    return {\n                                       id: f.id,\n                                       value: f.label,\n                                    };\n                                 });\n\n                           // TODO: Swtich to FilterComplex\n                           this.FilterComponent = this.AB.filterComplexNew(\n                              this.base\n                           );\n\n                           // this.FilterComponent.applicationLoad(\n                           //    this.currentForm.application\n                           // );\n                           this.FilterComponent.init({\n                              isRecordRule: true,\n                              fieldOptions: options,\n                           });\n\n                           this.FilterComponent.on(\"changed\", (...params) => {\n                              return this.onFilterChange(...params);\n                           });\n\n                           // Transition v1 to v2:\n                           console.warn(\"TODO: remove this transition Code:\");\n                           if (typeof this.FilterComponent.ui == \"function\") {\n                              $row.addView(this.FilterComponent.ui(), 1);\n                           } else {\n                              $row.addView(this.FilterComponent.ui, 1);\n                           }\n\n                           var dcId = $$(ids.selectDc).getValue();\n                           var dataCollection =\n                              this.Rule.CurrentApplication.datacollectionsIncluded(\n                                 (dc) => dc.id == dcId\n                              )[0];\n                           if (dataCollection) {\n                              this.populateFilters(dataCollection);\n                           }\n                        }\n                     },\n                  },\n               },\n            ],\n         };\n\n         // WORKAROUND: add '[Current User]' option to the user data field\n         if (field.key == \"user\") {\n            $componentView.options = $componentView.options || [];\n            $componentView.options.unshift({\n               id: \"ab-current-user\",\n               value: L(\"Current User\"),\n            });\n         }\n\n         // UPDATE: ok, in practice we have not had any use cases where\n         // we want individual values on connectedObject fields, but\n         // instead we want to insert the current selected element from\n         // a relevant data view.  So, replace the fieldComponet\n         // from a connectedObject field with a list of data views that\n         // are based upon the same object we are connected to:\n         if (field.isConnection) {\n            // key == \"connectObject\") {\n            // find the ABObject this field connects to\n            var connectedObject = field.datasourceLink;\n\n            // find all the DataSources that are based upon this ABObject\n            datasources = datasources.filter((dc) => {\n               return dc.datasource.id == connectedObject.id;\n            });\n\n            var dcQueries =\n               this.Rule.CurrentApplication.datacollectionsIncluded((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n            datasources = datasources.concat(dcQueries);\n\n            // refresh a droplist with those dataSources\n            optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({\n                  id: dc.id,\n                  value: dc.label,\n                  icon: dc.settings.isQuery ? \"fa fa-filter\" : \"fa fa-database\",\n               });\n            });\n\n            // add select an array value option\n            optionsSelectBy.push({\n               id: \"filter-select-all\",\n               value: L(\"Select all after filter by...\"),\n            });\n\n            $inputView = $optionUpdateExsits;\n\n            // update the dataSources option list to UI\n            if ($$(ids.selectDc)) {\n               $$(ids.selectDc).parse(optionsDataSources);\n               $$(ids.selectDc).refresh();\n            } else {\n               $inputView.rows[0].cols[0].options = optionsDataSources;\n            }\n\n            // and the upcoming formFieldComponent.init()\n            // doesn't need to do anything:\n            formFieldComponent = {\n               init: function () {},\n            };\n\n            // and we reset field so it's customDisplay isn't called:\n            // field = {};\n         } else {\n            $inputView = {\n               id: ids.multiview,\n               view: \"multiview\",\n               cells: [\n                  {\n                     batch: \"custom\",\n                     rows: [\n                        $componentView,\n                        {\n                           view: \"label\",\n                           label: L(\"<a>Or exists value</a>\"),\n                           on: {\n                              onItemClick: function () {\n                                 var $container = this.getParentView(),\n                                    $multiview = $container.getParentView();\n\n                                 $multiview.showBatch(\"exist\");\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     // Update value from exists object\n                     batch: \"exist\",\n                     rows: [\n                        $optionUpdateExsits,\n                        {\n                           view: \"label\",\n                           label: L(\"<a>Or custom value</a>\"),\n                           on: {\n                              onItemClick: function () {\n                                 var $container = this.getParentView(),\n                                    $multiview = $container.getParentView();\n\n                                 // clear filter view\n                                 $$(ids.selectBy).setValue(\"select-one\");\n\n                                 $multiview.showBatch(\"custom\");\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         }\n\n         // Change component to display this field's form input\n         var $row = $$(ids.row).getChildViews()[0];\n         $row.removeView($row.getChildViews()[3]);\n         $row.addView($inputView, 3);\n\n         formFieldComponent.init();\n\n         // Show custom display of data field\n         if (!field.isConnection && field.customDisplay) {\n            // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n            var compNodeView = $$($componentView.id).$view;\n\n            // wait until render UI complete\n            setTimeout(() => {\n               field.customDisplay(field, this.App, compNodeView, {\n                  editable: true,\n\n                  // tree\n                  isForm: true,\n               });\n            }, 50);\n         }\n\n         // Show the remove button\n         var $buttonRemove = $row.getChildViews()[4];\n         $buttonRemove.show();\n\n         // Add a new row\n         if (columnID) this.emit(\"add\"); // _logic.callbacks.onAdd();\n      }\n\n      setValue(data) {\n         const ids = this.ids;\n         $$(ids.field).setValue(data.fieldID);\n         // note: this triggers our _logic.selectField() fn.\n         var field = this.Rule.getUpdateObjectField(data.fieldID);\n         if (field) {\n            var setValueFn = () => {\n               $$(ids.selectDc).setValue(data.value);\n               if (data.queryField) {\n                  $$(ids.queryField).setValue(data.queryField);\n               }\n               var selectBy = data.selectBy || \"select-one\";\n               $$(ids.selectBy).setValue(selectBy);\n\n               if (selectBy != \"select-one\") {\n                  var collectionId = data.value;\n                  var dataCollection =\n                     this.currentForm.application.datacollectionsIncluded(\n                        (dc) => dc.id == collectionId\n                     )[0];\n                  if (dataCollection && data.filterConditions) {\n                     this.populateFilters(\n                        dataCollection,\n                        data.filterConditions\n                     );\n                  }\n               }\n            };\n\n            // now handle our special connectedObject case:\n            if (field.key == \"connectObject\") {\n               setValueFn();\n            } else {\n               if (data.valueType == \"exist\") {\n                  $$(ids.multiview).showBatch(\"exist\");\n\n                  setValueFn();\n               } else {\n                  $$(ids.multiview).showBatch(\"custom\");\n\n                  // wait until render UI complete\n                  setTimeout(function () {\n                     // set value to custom field\n                     var rowData = {};\n                     rowData[field.columnName] = data.value;\n                     field.setValue($$(ids.value), rowData);\n                  }, 50);\n               }\n            }\n         }\n      }\n\n      populateFilters(dataView, filterConditions) {\n         filterConditions =\n            filterConditions ||\n            ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n         // Populate data to popups\n         // FilterComponent.objectLoad(objectCopy);\n         this.FilterComponent.fieldsLoad(\n            dataView.datasource ? dataView.datasource.fields() : []\n         );\n         this.FilterComponent.setValue(filterConditions);\n      }\n\n      toSettings() {\n         const ids = this.ids;\n\n         // if this isn't the last entry row\n         // * a row with valid data has the [delete] button showing.\n         var buttonDelete = $$(ids.buttonDelete);\n         if (buttonDelete && buttonDelete.isVisible()) {\n            var data = {};\n            data.fieldID = $$(ids.field).getValue();\n\n            var $valueField = $$(ids.value);\n            var field = this.Rule.getUpdateObjectField(data.fieldID);\n\n            var getValueFn = () => {\n               data.value = $$(ids.selectDc).getValue();\n               data.queryField = $$(ids.queryField).getValue();\n               data.op = \"set\"; // possible to create other types of operations.\n               data.type = field.key;\n               data.selectBy = $$(ids.selectBy).getValue();\n               data.valueType = \"exist\";\n               if (this.FilterComponent) {\n                  data.filterConditions = this.FilterComponent.getValue();\n               }\n            };\n\n            // now handle our special connectedObject case:\n            if (field.key == \"connectObject\") {\n               getValueFn();\n            } else {\n               if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                  getValueFn();\n               } else {\n                  data.value = field.getValue($valueField, {});\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.valueType = \"custom\";\n               }\n            }\n\n            return data;\n         } else {\n            return null;\n         }\n      }\n\n      init(AB, data) {\n         this.AB = AB;\n\n         if (data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            this.setValue(data);\n         }\n\n         return Promise.resolve();\n      }\n   }\n\n   class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n      /**\n       * @param {object} App\n       *      The shared App object that is created in OP.Component\n       * @param {string} idBase\n       *      Identifier for this component\n       */\n      constructor(idBase, ids) {\n         super(idBase, ids);\n\n         this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n         this.label = L(\"Update Record\");\n\n         // this.updateObject = null; // the object this Action will Update.\n\n         this.formRows = []; // keep track of the Value Components being set\n         // [\n         //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n         // ]\n\n         this.stashRules = {}; // keep track of rule settings among our selected objects.\n\n         // Labels for UI components\n         // var labels = (this.labels = {\n         //    // common: App.labels,\n         //    component: {\n         //       errorRequired: L(\n         //          \"ab.ruleAction.Update.required\",\n         //          \"*A value is required\"\n         //       ),\n         //       set: L(\"ab.component.form.set\", \"*Set\"),\n         //       setPlaceholder: L(\n         //          \"ab.component.form.setPlaceholder\",\n         //          \"*Choose a field\"\n         //       ),\n         //       to: L(\"ab.component.form.to\", \"*To\"),\n         //       chooseSource: L(\n         //          \"ab.component.ruleaction.chooseSource\",\n         //          \"*Choose a data source\"\n         //       ),\n         //       chooseField: L(\n         //          \"ab.component.ruleaction.chooseField\",\n         //          \"*Choose value from...\"\n         //       ),\n         //       selectBy: L(\n         //          \"ab.component.ruleaction.selectBy\",\n         //          \"*Choose select option\"\n         //       ),\n         //    },\n         // });\n      }\n\n      ui() {\n         if (!this._uiChooser) {\n            this.valueDisplayComponent(this.base);\n         }\n\n         return this._uiChooser.ui();\n      }\n\n      // valueDisplayComponent\n      // Return an ABView to display our values form.\n      //\n      valueDisplayComponent(idBase) {\n         if (this._uiUpdater == null) {\n            this._uiUpdater = new ABViewValueDisplayList(idBase, this);\n         }\n\n         return this._uiUpdater;\n      }\n\n      // Our Values Display is a List of ValueRows\n      // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n      // valueDisplayList(idBase) {\n      //    var uniqueInstanceID = webix.uid();\n      //    var myUnique = (key) => {\n      //       // return idBase + '_' + key  + '_' + uniqueInstanceID;\n      //       return idBase + \"_\" + key + \"_\" + uniqueInstanceID;\n      //    };\n      //    var ids = {\n      //       updateForm: myUnique(\"updateForm\"),\n      //    };\n\n      //    var _ui = {\n      //       view: \"form\",\n      //       id: ids.updateForm,\n      //       elements: [],\n      //    };\n\n      //    var init = (valueRules) => {\n      //       valueRules = valueRules || this.valueRules;\n      //       _logic.setValues(valueRules);\n      //    };\n\n      //    var _logic = {\n      //       removeAddRow: () => {\n      //          // get our Form\n      //          var UpdateForm = _logic.formGet();\n      //          if (!UpdateForm) return;\n\n      //          // check row that's unselect a field\n      //          var rows = UpdateForm.getChildViews();\n\n      //          var addRow = rows.filter((r) => {\n      //             return r.queryView(function (view) {\n      //                return view.config.name == \"field\" && !view.getValue();\n      //             });\n      //          })[0];\n      //          if (!addRow) return;\n\n      //          UpdateForm.removeView(addRow);\n      //       },\n\n      //       // addRow\n      //       // add a new data entry to this form.\n      //       // @param {obj} data  (optional) initial values for this row.\n      //       addRow: (data) => {\n      //          // get our Form\n      //          var UpdateForm = _logic.formGet();\n      //          if (!UpdateForm) return;\n\n      //          // check row that's unselect a field\n      //          var rows = UpdateForm.getChildViews();\n      //          if (\n      //             data == null &&\n      //             rows.filter((r) => {\n      //                return r.queryView(function (view) {\n      //                   return view.config.name == \"field\" && !view.getValue();\n      //                });\n      //             }).length > 0\n      //          )\n      //             return;\n\n      //          // get a new Row Component\n      //          var row = this.valueDisplayRow(idBase);\n\n      //          // add row to Form\n      //          UpdateForm.addView(row.ui);\n\n      //          // initialize row with any provided data:\n      //          row.init({\n      //             onAdd: () => {\n      //                // add a new Row\n      //                _logic.addRow();\n      //             },\n      //             onDelete: (rowId) => {\n      //                // remove a row\n      //                _logic.delRow(rowId);\n      //             },\n      //             data: data,\n      //          });\n\n      //          // store this row\n      //          this.formRows.push(row);\n      //       },\n\n      //       delRow: (rowId) => {\n      //          // store this row\n      //          this.formRows.forEach((r, index) => {\n      //             if (r.ui.id == rowId) this.formRows.splice(index, 0);\n      //          });\n\n      //          // get our Form\n      //          var UpdateForm = _logic.formGet();\n      //          if (!UpdateForm) return;\n\n      //          // remove UI\n      //          UpdateForm.removeView($$(rowId));\n      //       },\n\n      //       formClear: () => {\n      //          var UpdateForm = _logic.formGet();\n      //          if (!UpdateForm) return;\n\n      //          var children = UpdateForm.getChildViews();\n\n      //          // NOTE: need to clone this array, because it is connected with the UpdatForm's\n      //          // internal array of items.  Once we start .removeView() the element actually\n      //          // is removed from the internal array, which then upset's the .forEach() from\n      //          // properly iterating through the structure.  It results in missed items from\n      //          // being sent to the .forEach().\n      //          // So Clone it and use that for .forEach()\n      //          var cloneChildren = [];\n      //          children.forEach((c) => {\n      //             cloneChildren.push(c);\n      //          });\n      //          cloneChildren.forEach((c) => {\n      //             UpdateForm.removeView(c);\n      //          });\n\n      //          // clear our stored .formRows\n      //          this.formRows = [];\n      //       },\n\n      //       formGet: () => {\n      //          var UpdateForm = $$(ids.updateForm);\n      //          if (!UpdateForm) {\n      //             // this is a problem!\n      //             OP.Error.log(\n      //                \"ABViewRuleActionFormRecordRuleUpdate.init() could not find webix form.\",\n      //                { id: ids.updateForm }\n      //             );\n      //             return null;\n      //          }\n\n      //          return UpdateForm;\n      //       },\n\n      //       setValues: (valueRules) => {\n      //          // valueRules = {\n      //          //\tfieldOperations:[\n      //          //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n      //          //\t]\n      //          // }\n\n      //          valueRules = valueRules || {};\n      //          valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n      //          // find the form\n      //          var UpdateForm = _logic.formGet();\n      //          if (!UpdateForm) return;\n\n      //          // clear form:\n      //          _logic.formClear();\n\n      //          // if there are values to\n      //          if (valueRules.fieldOperations.length > 0) {\n      //             valueRules.fieldOperations.forEach((r) => {\n      //                _logic.addRow(r);\n      //             });\n      //          }\n\n      //          // our default operation will cause an empty row to\n      //          // appear after our first value entry.\n      //          // let's remove that one, and then add a new one\n      //          // at the end:\n      //          _logic.removeAddRow();\n\n      //          // display an empty row\n      //          _logic.addRow();\n      //       },\n\n      //       fromSettings: (settings) => {\n      //          // Note: we just want the { valueRules:[] } here:\n      //          var mySettings = settings.valueRules || settings;\n\n      //          _logic.setValues(mySettings);\n      //       },\n\n      //       toSettings: () => {\n      //          // valueRules = {\n      //          //\tfieldOperations:[\n      //          //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n      //          //\t]\n      //          // }\n      //          var settings = { fieldOperations: [] };\n\n      //          // for each of our formRows, decode the propery {}\n      //          this.formRows.forEach((fr) => {\n      //             var rowSettings = fr.toSettings();\n      //             if (rowSettings) {\n      //                settings.fieldOperations.push(fr.toSettings());\n      //             }\n      //          });\n\n      //          return settings;\n      //       },\n      //    };\n\n      //    return {\n      //       ui: _ui,\n      //       init: init,\n      //       fromSettings: (settings) => {\n      //          _logic.fromSettings(settings);\n      //       },\n      //       toSettings: () => {\n      //          return _logic.toSettings();\n      //       },\n      //       _logic: _logic,\n      //    };\n      // }\n\n      // valueDisplayRow(iBase) {\n      //    return new ABViewValueDisplayRow(iBase, this);\n      // }\n\n      // valueDisplayRowOld(idBase) {\n      //    var uniqueInstanceID = webix.uid();\n      //    var myUnique = (key) => {\n      //       // return idBase + '_' + key  + '_' + uniqueInstanceID;\n      //       return key + \"_\" + uniqueInstanceID;\n      //    };\n\n      //    var ids = {\n      //       row: myUnique(\"row\"),\n      //       updateForm: myUnique(\"updateFormRow\"),\n      //       field: myUnique(\"field\"),\n      //       value: myUnique(\"value\"),\n      //       selectDc: myUnique(\"selectDc\"),\n      //       selectBy: myUnique(\"selectBy\"),\n      //       queryField: myUnique(\"queryField\"),\n      //       multiview: myUnique(\"multiview\"),\n      //       buttonAdd: myUnique(\"add\"),\n      //       buttonDelete: myUnique(\"delete\"),\n      //    };\n\n      //    var FilterComponent;\n\n      //    var _logic = {\n      //       callbacks: {\n      //          onAdd: () => {},\n      //          onDelete: () => {},\n      //       },\n\n      //       buttonsToggle: () => {\n      //          $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n      //          $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n      //       },\n\n      //       getFieldList: (shouldFilter) => {\n      //          var options = [];\n      //          if (this.updateObject) {\n      //             options = (this.updateObject.fields() || []).map((f) => {\n      //                return {\n      //                   id: f.id,\n      //                   value: f.label,\n      //                };\n      //             });\n\n      //             // options = (this.updateObject.fields() || [])\n      //             // .filter(f => {\n      //             //\n      //             // \tif (f.key != 'connectObject') {\n      //             // \t\treturn true;\n      //             // \t} else {\n      //             // \t\t// if this is a connection field, only return\n      //             // \t\t// fields that are 1:x  where this field is the\n      //             // \t\t// source:\n      //             // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n      //             //\n      //             // \t\t// 6-14-2018 Changing from only 1:x to support many\n      //             // \t\t// if this is a connected field, only return\n      //             // \t\t// fields that this is the source\n      //             // \t\treturn (f.isSource())\n      //             // \t}\n      //             // })\n      //             // .map(f => {\n      //             // \treturn {\n      //             // \t\tid: f.id,\n      //             // \t\tvalue: f.label\n      //             // \t};\n      //             // });\n\n      //             // Remove fields who are selected\n      //             if (shouldFilter) {\n      //                // store this row\n      //                var usedHash = {};\n      //                this.formRows.forEach((row) => {\n      //                   var rowView = $$(row.ui.id);\n      //                   if (rowView) {\n      //                      var field = rowView\n      //                         .getChildViews()[0]\n      //                         .getChildViews()[1];\n      //                      usedHash[field.getValue()] = true;\n      //                   }\n      //                });\n      //                options = options.filter((o) => {\n      //                   return !usedHash[o.id];\n      //                });\n      //             }\n      //          }\n      //          return options;\n      //       },\n\n      //       isValid: () => {\n      //          var validator = OP.Validation.validator();\n      //          var valueField = $$(ids.row)\n      //             .getChildViews()[0]\n      //             .getChildViews()[3];\n      //          var FormView = valueField.getParentView().getParentView();\n\n      //          var field = this.getUpdateObjectField($$(ids.field).getValue());\n      //          if (field) {\n      //             var value = field.getValue(valueField, {});\n\n      //             // // if a standard component that supports .getValue()\n      //             // if (valueField.getValue) {\n      //             // \tvalue = valueField.getValue();\n      //             // } else {\n      //             // \t// else use for field.getValue();\n      //             // \tvalue = field.getValue(valueField, {});\n      //             // }\n\n      //             // our .isValidData() wants value in an object:\n      //             var obj = {};\n      //             obj[field.columnName] = value;\n\n      //             field.isValidData(obj, validator);\n\n      //             // if value is empty, this is also an error:\n      //             if (\n      //                value == \"\" ||\n      //                value == null ||\n      //                (Array.isArray(value) && value.length == 0)\n      //             ) {\n      //                validator.addError(\n      //                   field.columnName,\n      //                   this.labels.component.errorRequired\n      //                );\n      //             }\n\n      //             // field.getParentView()  ->  row\n      //             // row.getParentView()  -> Form\n      //             FormView.clearValidation();\n      //             validator.updateForm(FormView);\n\n      //             return validator.pass();\n      //          } else {\n      //             // if we didn't find an associated field ... then this isn't good\n      //             // data.\n\n      //             //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n      //             // field.\n      //             var fieldField = $$(ids.row)\n      //                .getChildViews()[0]\n      //                .getChildViews()[1];\n      //             fieldField.define(\n      //                \"invalidMessage\",\n      //                this.labels.component.errorRequired\n      //             );\n      //             fieldField.define(\"invalid\", true);\n      //             fieldField.refresh();\n      //             // fieldField.markInvalid(this.labels.component.errorRequired);\n      //             return false;\n      //          }\n      //       },\n\n      //       selectField: (columnID) => {\n      //          var field = this.getUpdateObjectField(columnID);\n      //          if (!field) return;\n\n      //          var fieldComponent = field.formComponent(),\n      //             abView = fieldComponent.newInstance(field.object.application),\n      //             formFieldComponent = abView.component(this.App),\n      //             $componentView = formFieldComponent.ui,\n      //             $inputView;\n\n      //          $componentView.id = ids.value; // set our expected id\n\n      //          // find all the DataSources\n      //          var datasources = this.currentForm.application.datacollections(\n      //             (dc) => dc.datasource\n      //          );\n\n      //          // create a droplist with those dataSources\n      //          var optionsDataSources = [];\n      //          datasources.forEach((dc) => {\n      //             optionsDataSources.push({ id: dc.id, value: dc.label });\n      //          });\n\n      //          // create a droplist with select options\n      //          var optionsSelectBy = [\n      //             { id: \"select-one\", value: \"*Current selection\" },\n      //             {\n      //                id: \"filter-select-one\",\n      //                value: \"*Select first after filter by...\",\n      //             },\n      //          ];\n\n      //          var $optionUpdateExsits = {\n      //             type: \"clean\",\n      //             rows: [\n      //                {\n      //                   cols: [\n      //                      {\n      //                         id: ids.selectDc,\n      //                         view: \"combo\",\n      //                         options: optionsDataSources,\n      //                         placeholder: this.labels.component.chooseSource,\n      //                         on: {\n      //                            onChange: (newv, oldv) => {\n      //                               var selectedDC =\n      //                                  this.currentForm.application.datacollections(\n      //                                     (dc) => dc.id == newv\n      //                                  )[0];\n      //                               if (\n      //                                  selectedDC &&\n      //                                  (selectedDC.sourceType == \"query\" ||\n      //                                     field.key != \"connectObject\")\n      //                               ) {\n      //                                  var queryFieldOptions = [];\n      //                                  selectedDC.datasource\n      //                                     .fields()\n      //                                     .forEach((f) => {\n      //                                        queryFieldOptions.push({\n      //                                           id: f.id,\n      //                                           value: f.label,\n      //                                        });\n      //                                     });\n      //                                  $$(ids.queryField).define(\n      //                                     \"options\",\n      //                                     queryFieldOptions\n      //                                  );\n      //                                  $$(ids.queryField).refresh();\n      //                                  $$(ids.queryField).show();\n      //                               } else {\n      //                                  $$(ids.queryField).hide();\n      //                               }\n      //                            },\n      //                         },\n      //                      },\n      //                      // we will place a list of query fields if you choose a datasource that has a query source type\n      //                      {\n      //                         id: ids.queryField,\n      //                         view: \"combo\",\n      //                         hidden: true,\n      //                         placeholder: this.labels.component.chooseField,\n      //                         options: [{ id: 1, value: \"figure this out\" }],\n      //                      },\n      //                   ],\n      //                },\n      //                {\n      //                   id: ids.selectBy,\n      //                   view: \"combo\",\n      //                   options: optionsSelectBy,\n      //                   placeholder: this.labels.component.selectBy,\n      //                   on: {\n      //                      onChange: (newv, oldv) => {\n      //                         var $row = $$(ids.row);\n      //                         $row.removeView($row.getChildViews()[1]);\n      //                         if (newv == \"select-one\") {\n      //                            $row.addView({}, 1);\n      //                         } else {\n      //                            var options =\n      //                               this.currentForm.datacollection.datasource\n      //                                  .fields()\n      //                                  .map(function (f) {\n      //                                     return {\n      //                                        id: f.id,\n      //                                        value: f.label,\n      //                                     };\n      //                                  });\n\n      //                            FilterComponent = new RowFilter(\n      //                               this.App,\n      //                               idBase + \"_filter\"\n      //                            );\n      //                            FilterComponent.applicationLoad(\n      //                               this.currentForm.application\n      //                            );\n      //                            FilterComponent.init({\n      //                               isRecordRule: true,\n      //                               onChange: _logic.onFilterChange,\n      //                               fieldOptions: options,\n      //                            });\n\n      //                            $row.addView(FilterComponent.ui, 1);\n\n      //                            var dcId = $$(ids.selectDc).getValue();\n      //                            var dataCollection =\n      //                               this.currentForm.application.datacollections(\n      //                                  (dc) => dc.id == dcId\n      //                               )[0];\n      //                            if (dataCollection) {\n      //                               _logic.populateFilters(dataCollection);\n      //                            }\n      //                         }\n      //                      },\n      //                   },\n      //                },\n      //             ],\n      //          };\n\n      //          // WORKAROUND: add '[Current User]' option to the user data field\n      //          if (field.key == \"user\") {\n      //             $componentView.options = $componentView.options || [];\n      //             $componentView.options.unshift({\n      //                id: \"ab-current-user\",\n      //                value: \"*[Current User]\",\n      //             });\n      //          }\n\n      //          // UPDATE: ok, in practice we have not had any use cases where\n      //          // we want individual values on connectedObject fields, but\n      //          // instead we want to insert the current selected element from\n      //          // a relevant data view.  So, replace the fieldComponet\n      //          // from a connectedObject field with a list of data views that\n      //          // are based upon the same object we are connected to:\n      //          if (field.key == \"connectObject\") {\n      //             // find the ABObject this field connects to\n      //             var connectedObject = field.datasourceLink;\n\n      //             // find all the DataSources that are based upon this ABObject\n      //             // to do this, we find the root Page we are on, then ask that Page for datasources:\n      //             datasources = datasources.filter((dc) => {\n      //                return dc.datasource.id == connectedObject.id;\n      //             });\n\n      //             var dcQueries = this.currentForm.application.datacollections(\n      //                (dc) => {\n      //                   return (\n      //                      dc.sourceType == \"query\" &&\n      //                      dc.datasource &&\n      //                      dc.datasource.canFilterObject(connectedObject)\n      //                   );\n      //                   // return dc.datasource.id == connectedObject.id;\n      //                }\n      //             );\n\n      //             datasources = datasources.concat(dcQueries);\n\n      //             // refresh a droplist with those dataSources\n      //             optionsDataSources = [];\n      //             datasources.forEach((dc) => {\n      //                optionsDataSources.push({ id: dc.id, value: dc.label });\n      //             });\n\n      //             // add select an array value option\n      //             optionsSelectBy.push({\n      //                id: \"filter-select-all\",\n      //                value: \"*Select all after filter by...\",\n      //             });\n\n      //             $inputView = $optionUpdateExsits;\n\n      //             // update the dataSources option list to UI\n      //             if ($$(ids.selectDc)) {\n      //                $$(ids.selectDc).parse(optionsDataSources);\n      //                $$(ids.selectDc).refresh();\n      //             } else {\n      //                $inputView.rows[0].cols[0].options = optionsDataSources;\n      //             }\n\n      //             // and the upcoming formFieldComponent.init()\n      //             // doesn't need to do anything:\n      //             formFieldComponent = {\n      //                init: function () {},\n      //             };\n\n      //             // and we reset field so it's customDisplay isn't called:\n      //             // field = {};\n      //          } else {\n      //             $inputView = {\n      //                id: ids.multiview,\n      //                view: \"multiview\",\n      //                cells: [\n      //                   {\n      //                      batch: \"custom\",\n      //                      rows: [\n      //                         $componentView,\n      //                         {\n      //                            view: \"label\",\n      //                            label: \"<a>Or exists value</a>\",\n      //                            on: {\n      //                               onItemClick: function () {\n      //                                  var $container = this.getParentView(),\n      //                                     $multiview =\n      //                                        $container.getParentView();\n\n      //                                  $multiview.showBatch(\"exist\");\n      //                               },\n      //                            },\n      //                         },\n      //                      ],\n      //                   },\n      //                   {\n      //                      // Update value from exists object\n      //                      batch: \"exist\",\n      //                      rows: [\n      //                         $optionUpdateExsits,\n      //                         {\n      //                            view: \"label\",\n      //                            label: \"<a>Or custom value</a>\",\n      //                            on: {\n      //                               onItemClick: function () {\n      //                                  var $container = this.getParentView(),\n      //                                     $multiview =\n      //                                        $container.getParentView();\n\n      //                                  // clear filter view\n      //                                  $$(ids.selectBy).setValue(\"select-one\");\n\n      //                                  $multiview.showBatch(\"custom\");\n      //                               },\n      //                            },\n      //                         },\n      //                      ],\n      //                   },\n      //                ],\n      //             };\n      //          }\n\n      //          // Change component to display this field's form input\n      //          var $row = $$(ids.row).getChildViews()[0];\n      //          $row.removeView($row.getChildViews()[3]);\n      //          $row.addView($inputView, 3);\n\n      //          formFieldComponent.init();\n\n      //          // Show custom display of data field\n      //          if (field.key != \"connectObject\" && field.customDisplay) {\n      //             // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n      //             var compNodeView = $$($componentView.id).$view;\n\n      //             // wait until render UI complete\n      //             setTimeout(() => {\n      //                field.customDisplay(field, this.App, compNodeView, {\n      //                   editable: true,\n\n      //                   // tree\n      //                   isForm: true,\n      //                });\n      //             }, 50);\n      //          }\n\n      //          // Show the remove button\n      //          var $buttonRemove = $row.getChildViews()[4];\n      //          $buttonRemove.show();\n\n      //          // Add a new row\n      //          if (columnID) _logic.callbacks.onAdd();\n      //       },\n\n      //       setValue: (data) => {\n      //          $$(ids.field).setValue(data.fieldID);\n      //          // note: this triggers our _logic.selectField() fn.\n      //          var field = this.getUpdateObjectField(data.fieldID);\n      //          if (field) {\n      //             var setValueFn = () => {\n      //                $$(ids.selectDc).setValue(data.value);\n      //                if (data.queryField) {\n      //                   $$(ids.queryField).setValue(data.queryField);\n      //                }\n      //                var selectBy = data.selectBy || \"select-one\";\n      //                $$(ids.selectBy).setValue(selectBy);\n\n      //                if (selectBy != \"select-one\") {\n      //                   var collectionId = data.value;\n      //                   var dataCollection =\n      //                      this.currentForm.application.datacollections(\n      //                         (dc) => dc.id == collectionId\n      //                      )[0];\n      //                   if (dataCollection && data.filterConditions) {\n      //                      _logic.populateFilters(\n      //                         dataCollection,\n      //                         data.filterConditions\n      //                      );\n      //                   }\n      //                }\n      //             };\n\n      //             // now handle our special connectedObject case:\n      //             if (field.key == \"connectObject\") {\n      //                setValueFn();\n      //             } else {\n      //                if (data.valueType == \"exist\") {\n      //                   $$(ids.multiview).showBatch(\"exist\");\n\n      //                   setValueFn();\n      //                } else {\n      //                   $$(ids.multiview).showBatch(\"custom\");\n\n      //                   // wait until render UI complete\n      //                   setTimeout(function () {\n      //                      // set value to custom field\n      //                      var rowData = {};\n      //                      rowData[field.columnName] = data.value;\n      //                      field.setValue($$(ids.value), rowData);\n      //                   }, 50);\n      //                }\n      //             }\n      //          }\n      //       },\n\n      //       populateFilters: (dataView, filterConditions) => {\n      //          filterConditions =\n      //             filterConditions ||\n      //             ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n      //          // Populate data to popups\n      //          // FilterComponent.objectLoad(objectCopy);\n      //          FilterComponent.fieldsLoad(\n      //             dataView.datasource ? dataView.datasource.fields() : []\n      //          );\n      //          FilterComponent.setValue(filterConditions);\n      //       },\n\n      //       toSettings: () => {\n      //          // if this isn't the last entry row\n      //          // * a row with valid data has the [delete] button showing.\n      //          var buttonDelete = $$(ids.buttonDelete);\n      //          if (buttonDelete && buttonDelete.isVisible()) {\n      //             var data = {};\n      //             data.fieldID = $$(ids.field).getValue();\n\n      //             var $valueField = $$(ids.value);\n      //             var field = this.getUpdateObjectField(data.fieldID);\n\n      //             var getValueFn = () => {\n      //                data.value = $$(ids.selectDc).getValue();\n      //                data.queryField = $$(ids.queryField).getValue();\n      //                data.op = \"set\"; // possible to create other types of operations.\n      //                data.type = field.key;\n      //                data.selectBy = $$(ids.selectBy).getValue();\n      //                data.valueType = \"exist\";\n      //                if (FilterComponent) {\n      //                   data.filterConditions = FilterComponent.getValue();\n      //                }\n      //             };\n\n      //             // now handle our special connectedObject case:\n      //             if (field.key == \"connectObject\") {\n      //                getValueFn();\n      //             } else {\n      //                if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n      //                   getValueFn();\n      //                } else {\n      //                   data.value = field.getValue($valueField, {});\n      //                   data.op = \"set\"; // possible to create other types of operations.\n      //                   data.type = field.key;\n      //                   data.valueType = \"custom\";\n      //                }\n      //             }\n\n      //             return data;\n      //          } else {\n      //             return null;\n      //          }\n      //       },\n      //    };\n\n      //    var _ui = {\n      //       id: ids.row,\n      //       view: \"layout\",\n      //       rows: [\n      //          {\n      //             cols: [\n      //                {\n      //                   // Label\n      //                   view: \"label\",\n      //                   width: this.App.config.labelWidthSmall,\n      //                   label: this.labels.component.set,\n      //                },\n      //                {\n      //                   // Field list\n      //                   view: \"combo\",\n      //                   name: \"field\",\n      //                   placeholder: this.labels.component.setPlaceholder,\n      //                   id: ids.field,\n      //                   height: 32,\n      //                   options: _logic.getFieldList(true),\n      //                   on: {\n      //                      onChange: function (columnId) {\n      //                         _logic.selectField(columnId);\n      //                      },\n      //                   },\n      //                },\n      //                {\n      //                   // Label\n      //                   view: \"label\",\n      //                   width: this.App.config.labelWidthSmall,\n      //                   label: this.labels.component.to,\n      //                },\n\n      //                // Field value\n      //                // NOTE: this view gets replaced each time a field is selected.\n      //                // We replace it with a component associated with the Field\n      //                {},\n\n      //                {\n      //                   // \"Remove\" button\n      //                   view: \"button\",\n      //                   css: \"webix_danger\",\n      //                   id: ids.buttonDelete,\n      //                   icon: \"fa fa-trash\",\n      //                   type: \"icon\",\n      //                   width: 30,\n      //                   hidden: true,\n      //                   click: function () {\n      //                      _logic.callbacks.onDelete(ids.row);\n      //                   },\n      //                },\n      //             ],\n      //          },\n      //          {}, // we will add filters here if we need them\n      //       ],\n      //    };\n\n      //    var init = (options) => {\n      //       for (var c in _logic.callbacks) {\n      //          _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //       }\n\n      //       if (options.data) {\n      //          // options.data = { formID:xxx, value:yyy,  type:zzzz }\n      //          _logic.setValue(options.data);\n\n      //          // _logic.buttonsToggle();\n      //       }\n      //    };\n\n      //    return {\n      //       ui: _ui,\n      //       init: init,\n      //       toSettings: () => {\n      //          return _logic.toSettings();\n      //       },\n      //       _logic: _logic,\n      //    };\n      // }\n\n      getUpdateObjectField(fieldID) {\n         return this.CurrentObject.fieldByID(fieldID);\n      }\n\n      ////\n      //// For ab_platform_web:\n      // /**\n      //  * @method processUpdateObject\n      //  * Perform the specified update actions on the provided objectToUpdate\n      //  * @param {obj} options  Additional information required to make updates.\n      //  * @param {obj} objectToUpdate  The object to make the updates on.\n      //  * @return {boolean}   true if an update took place, false if no updates.\n      //  */\n      // processUpdateObject(options, objectToUpdate) {\n      //    this._formData = objectToUpdate;\n      //    // return new Promise((resolve, reject) => {\n      //    var isUpdated = false;\n\n      //    this.valueRules = this.valueRules || {};\n      //    this.valueRules.fieldOperations =\n      //       this.valueRules.fieldOperations || [];\n\n      //    // var allPromises = [];\n\n      //    // for each of our operations\n      //    this.valueRules.fieldOperations.forEach((op) => {\n      //       // op = {\n      //       // \tfieldID:'zzzzz',\n      //       //\tvalue: 'xxx',\n      //       //\top: 'set',\n      //       //  type:'',\n      //       //  queryField: '', // id of ABField\n      //       //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n      //       //  valueType: \"\", ['custom', 'exist']\n      //       // \tfilterConditions: { // array of filters to apply to the data table\n      //       //\t\tglue: 'and',\n      //       // \t\trules: []\n      //       //  }\n      //       // }\n\n      //       var field = this.getUpdateObjectField(op.fieldID);\n      //       if (!field) return;\n\n      //       var value = op.value;\n\n      //       if (value == \"ab-current-user\") value = OP.User.username();\n\n      //       // in the case of a connected Field, we use op.value to get the\n      //       // datacollection, and find it's currently selected value:\n      //       if (field.key == \"connectObject\" || op.valueType == \"exist\") {\n      //          // NOTE: 30 May 2018 :current decision from Ric is to limit this\n      //          // to only handle 1:x connections where we update the current obj\n      //          // with the PK of the value from the DC.\n      //          //\n      //          // In the future, if we want to handle the other options,\n      //          // we need to modify this to handle the M:x connections where\n      //          // we insert our PK into the value from the DC.\n\n      //          // op.value is the ABDatacollection.id we need to find\n      //          var dataCollection =\n      //             this.currentForm.application.datacollections(\n      //                (dc) => dc.id == op.value\n      //             )[0];\n\n      //          // we don't want to mess with the dataView directly since it might\n      //          // be used by other parts of the system and this refresh might reset\n      //          // it's cursor.\n      //          // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n      //          // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n      //          // adjust operator and switch key value to actual value when found\n      //          var filterConditions = _.cloneDeep(op.filterConditions);\n      //          if (filterConditions && filterConditions.rules) {\n      //             filterConditions.rules\n      //                .filter((r) => {\n      //                   return (\n      //                      r.rule == \"same_as_field\" ||\n      //                      r.rule == \"not_same_as_field\"\n      //                   );\n      //                })\n      //                .forEach((item) => {\n      //                   var valueField =\n      //                      this.currentForm.datacollection.datasource.fields(\n      //                         (f) => {\n      //                            return f.id == item.value;\n      //                         }\n      //                      )[0];\n      //                   if (valueField.key == \"connectObject\") {\n      //                      item.value = valueField.format(this._formData);\n      //                   } else {\n      //                      item.value = this._formData[valueField.columnName];\n      //                   }\n\n      //                   if (item.rule == \"not_same_as_field\") {\n      //                      item.rule = \"not equals\";\n      //                   } else {\n      //                      item.rule = \"equals\";\n      //                   }\n      //                });\n      //          }\n\n      //          let clonedDataCollection =\n      //             dataCollection.filteredClone(filterConditions);\n\n      //          switch (op.selectBy) {\n      //             // the 'select-one' is getting the currently set cursor on this data collection\n      //             // and using that value.\n      //             // TODO: rename to 'select-cursor'\n      //             case \"select-one\":\n      //             default: // dataView.getItem(dataView.getCursor());\n      //                value = clonedDataCollection.getCursor();\n\n      //                if (value) {\n      //                   // NOTE: webix documentation issue: .getCursor() is supposed to return\n      //                   // the .id of the item.  However it seems to be returning the {obj}\n\n      //                   if (op.valueType == \"exist\") {\n      //                      var fieldWithValue =\n      //                         clonedDataCollection.datasource.fields((f) => {\n      //                            return f.id == op.queryField;\n      //                         })[0];\n\n      //                      if (fieldWithValue)\n      //                         value = value[fieldWithValue.columnName];\n      //                   } else if (value.id) {\n      //                      value = value.id;\n      //                   }\n      //                }\n\n      //                // QUESTION: if value returns undefined should we do something else?\n      //                switch (op.op) {\n      //                   case \"set\":\n      //                      if (!value) break;\n\n      //                      if (field.key == \"connectObject\") {\n      //                         // if we are setting a connection we do not want to pass the full object because\n      //                         // batch creates payload gets too large\n      //                         objectToUpdate[field.columnName] = {};\n      //                         objectToUpdate[field.columnName].id =\n      //                            value[field.datasourceLink.PK()];\n      //                         objectToUpdate[field.columnName][\n      //                            field.datasourceLink.PK()\n      //                         ] = value[field.datasourceLink.PK()];\n\n      //                         // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n      //                         if (field.settings.isCustomFK) {\n      //                            if (field.indexField) {\n      //                               objectToUpdate[field.columnName][\n      //                                  field.indexField.columnName\n      //                               ] = value[field.indexField.columnName];\n      //                            }\n      //                            if (field.indexField2) {\n      //                               objectToUpdate[field.columnName][\n      //                                  field.indexField2.columnName\n      //                               ] = value[field.indexField2.columnName];\n      //                            }\n      //                         }\n\n      //                         field.datasourceLink\n      //                            .fields(\n      //                               (f) =>\n      //                                  f.key == \"combined\" ||\n      //                                  f.key == \"AutoIndex\"\n      //                            )\n      //                            .forEach((f) => {\n      //                               objectToUpdate[field.columnName][\n      //                                  f.columnName\n      //                               ] = value[f.columnName];\n      //                            });\n      //                      } else {\n      //                         objectToUpdate[field.columnName] = value;\n      //                      }\n\n      //                      break;\n      //                }\n      //                break;\n\n      //             // attempt to filter this data collection by the given filterConditions\n      //             case \"filter-select-all\":\n      //                var newValues = [];\n\n      //                var currRow = clonedDataCollection.getFirstRecord();\n      //                while (currRow) {\n      //                   // do something there\n\n      //                   switch (clonedDataCollection.sourceType) {\n      //                      // case: datacollection is an object\n      //                      // we want to set our field to this values\n      //                      case \"object\":\n      //                         newValues.push(currRow.id);\n      //                         break;\n\n      //                      // case: datacollection is a query\n      //                      // our field is a pointer to an object. we want to pull out that object\n      //                      // from the query data.\n      //                      case \"query\":\n      //                         var fieldWithValue =\n      //                            clonedDataCollection.datasource.fields((f) => {\n      //                               return f.id == op.queryField;\n      //                            })[0];\n\n      //                         var newValue = currRow[fieldWithValue.columnName];\n\n      //                         if (typeof newValue == \"undefined\") {\n      //                            newValue =\n      //                               currRow[fieldWithValue.relationName()];\n\n      //                            if (Array.isArray(newValue)) {\n      //                               newValue = newValue.map((v) => {\n      //                                  return v.id ? v.id : v;\n      //                               });\n      //                            } else if (newValue.id) {\n      //                               newValue = newValue.id;\n      //                            }\n      //                         }\n\n      //                         newValues = _.uniq(newValues.concat(newValue));\n\n      //                         break;\n      //                   }\n\n      //                   currRow = clonedDataCollection.getNextRecord(currRow);\n      //                }\n\n      //                // QUESTION: if value returns undefined should we do something else?\n      //                switch (op.op) {\n      //                   case \"set\":\n      //                      if (field.linkType() == \"one\") {\n      //                         var updates = [];\n      //                         newValues.forEach((v) => {\n      //                            var objectToUpdateClone =\n      //                               _.cloneDeep(objectToUpdate);\n      //                            objectToUpdateClone[field.columnName] = v;\n      //                            updates.push(objectToUpdateClone);\n      //                         });\n      //                         objectToUpdate.newRecords = updates;\n      //                      } else {\n      //                         objectToUpdate[field.columnName] = newValues;\n      //                      }\n      //                      break;\n      //                }\n      //                break;\n\n      //             case \"filter-select-one\":\n      //                newValues = [];\n\n      //                value = clonedDataCollection.getFirstRecord();\n\n      //                if (value) {\n      //                   // case: datacollection is a query\n      //                   // our field is a pointer to an object. we want to pull out that object\n      //                   // from the query data.\n      //                   if (\n      //                      clonedDataCollection.sourceType == \"query\" ||\n      //                      (op.valueType == \"exist\" && op.queryField)\n      //                   ) {\n      //                      var fieldWithValue =\n      //                         clonedDataCollection.datasource.fields((f) => {\n      //                            return f.id == op.queryField;\n      //                         })[0];\n\n      //                      var newValue = value[fieldWithValue.columnName];\n\n      //                      if (typeof newValue == \"undefined\") {\n      //                         newValue = value[fieldWithValue.relationName()];\n      //                         if (Array.isArray(newValue)) {\n      //                            newValue = newValue[0];\n      //                         }\n      //                         if (newValue.id) newValue = newValue.id;\n      //                      }\n\n      //                      value = newValue;\n      //                   }\n      //                   // case: datacollection is an object\n      //                   // we want to set our field to this values\n      //                   else if (clonedDataCollection.sourceType == \"object\") {\n      //                      // NOTE: webix documentation issue: .getCursor() is supposed to return\n      //                      // the .id of the item.  However it seems to be returning the {obj}\n\n      //                      // we need to use the objects indexField(2) if there is one\n      //                      // otherwise default to the id\n      //                      var lookup;\n      //                      if (field.indexField) {\n      //                         lookup = field.indexField.columnName;\n      //                      } else if (field.indexField2) {\n      //                         lookup = field.indexField2.columnName;\n      //                      }\n      //                      if (lookup && value[lookup]) {\n      //                         value = value[lookup];\n      //                      } else if (value.id) {\n      //                         value = value.id;\n      //                      }\n      //                   }\n      //                }\n\n      //                // QUESTION: if value returns undefined should we do something else?\n      //                switch (op.op) {\n      //                   case \"set\":\n      //                      objectToUpdate[field.columnName] = value;\n      //                      break;\n      //                }\n      //                break;\n      //          }\n\n      //          isUpdated = true;\n\n      //          // allPromises.push(connectedPromise);\n      //       } else {\n      //          // var setPromise = new Promise((resolve, reject) => {\n      //          switch (op.op) {\n      //             case \"set\":\n      //                objectToUpdate[field.columnName] = value;\n      //                break;\n      //          }\n\n      //          isUpdated = true;\n\n      //          //    resolve(isUpdated);\n      //          // });\n\n      //          // allPromises.push(setPromise);\n\n      //          // console.log(\"finished\");\n      //       }\n      //    });\n\n      //    return isUpdated;\n      //    // Promise.all(allPromises).then(() => {\n      //    //    resolve(isUpdated);\n      //    // });\n      //    // });\n      // }\n\n      // // process\n      // // gets called when a form is submitted and the data passes the Query Builder Rules.\n      // // @param {obj} options\n      // // @return {Promise}\n      // process(options) {\n      //    this._formData = options.data;\n\n      //    return new Promise((resolve, reject) => {\n      //       let isUpdated = this.processUpdateObject({}, options.data);\n      //       if (!isUpdated) {\n      //          resolve();\n      //       } else {\n      //          // get the model from the provided Form Obj:\n      //          var dv = options.form.datacollection;\n      //          if (!dv) return resolve();\n\n      //          var model = dv.model;\n      //          model\n      //             .update(options.data.id, options.data)\n      //             .catch((err) => {\n      //                OP.Error.log(\n      //                   \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n      //                   { error: err, data: options.data }\n      //                );\n      //                reject(err);\n      //             })\n      //             .then(resolve);\n      //       }\n      //    });\n      // }\n\n      // objectLoad\n      // save the current object this Action is associated with.\n      objectLoad(object) {\n         // stash rules for old object\n         if (this.CurrentObject) {\n            this.stashRules[this.CurrentObject.id] = this.valueRules;\n         }\n\n         super.objectLoad(object);\n\n         // with a new CurrentObject, then reset our UI\n         this._uiUpdater = null;\n\n         // reload any stashed rules, or set to {}\n         if (object) {\n            this.valueRules = this.stashRules[this.CurrentObject.id] || {};\n         }\n      }\n\n      // fromSettings\n      // initialize this Action from a given set of setting values.\n      // @param {obj}  settings\n      fromSettings(settings) {\n         settings = settings || {};\n\n         super.fromSettings(settings); // let the parent handle the QB\n\n         // make sure UI is updated:\n         // set our updateObject\n         if (settings.updateObjectID) {\n            var updateObject = this.AB.objectByID(settings.updateObjectID);\n            this.objectLoad(updateObject);\n         }\n\n         // if we have a display component, then populate it:\n         if (this._uiUpdater) {\n            // now we handle our valueRules:{} object settings.\n            // pass the settings off to our DisplayList component:\n            this._uiUpdater.fromSettings(settings);\n         }\n      }\n\n      // toSettings\n      // return an object that represents the current state of this Action\n      // @return {obj}\n      toSettings() {\n         // settings: {\n         //\tvalueRules:{}\n         // }\n\n         // let our parent store our QB settings\n         var settings = super.toSettings();\n\n         settings.valueRules = this._uiUpdater.toSettings();\n         settings.updateObjectID = this.CurrentObject.id;\n\n         return settings;\n      }\n   }\n   return ABViewRuleActionObjectUpdater;\n}\n","/*\n * ABView\n * A Generic Property manager for All our ABViews.\n */\n\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB) {\n   if (!myClass) {\n      // const uiConfig = AB.Config.uiSettings();\n      const UIClass = UI_Class(AB);\n      var L = UIClass.L();\n\n      myClass = class ABViewProperty extends UIClass {\n         constructor(base = \"properties_abview\", ids = {}) {\n            // base: {string} unique base id reference\n            // ids: {hash}  { key => '' }\n            // this is provided by the Sub Class and has the keys\n            // unique to the Sub Class' interface elements.\n\n            var common = {\n               label: \"\",\n            };\n\n            Object.keys(ids).forEach((k) => {\n               if (typeof common[k] != \"undefined\") {\n                  console.error(\n                     `!!! ABFieldProperty:: passed in ids contains a restricted field : ${k}`\n                  );\n                  return;\n               }\n               common[k] = \"\";\n            });\n\n            super(base, common);\n\n            this.base = base;\n            this.AB = AB;\n         }\n\n         ui(elements = [], rules = {}) {\n            let ids = this.ids;\n\n            let _ui = {\n               view: \"form\",\n               id: ids.component,\n               scroll: true,\n               elements: [\n                  {\n                     id: ids.label,\n                     view: \"text\",\n                     label: L(\"Name\"),\n                     name: \"name\",\n                     value: \"\",\n                  },\n               ],\n               rules: {\n                  // label: webix.rules.isNotEmpty,\n               },\n            };\n\n            elements.forEach((e) => {\n               _ui.elements.push(e);\n            });\n\n            Object.keys(rules).forEach((r) => {\n               _ui.rules[r] = rules[r];\n            });\n\n            return _ui;\n         }\n\n         async init(AB) {\n            this.AB = AB;\n\n            var VC = this.ViewClass();\n            if (VC) {\n               /*\n// TODO:\n               $$(this.ids.fieldDescription).define(\n                  \"label\",\n                  L(FC.defaults().description)\n               );\n            } else {\n               $$(this.ids.fieldDescription).hide();\n*/\n            }\n         }\n\n         clearEditor() {\n            console.error(\"!!! Depreciated! call clear() instead.\");\n            this.clear();\n         }\n\n         clear() {\n            $$(this.ids.label).setValue(\"\");\n         }\n\n         propertyDatacollections(view) {\n            return view.application.datacollectionsIncluded().map((d) => {\n               return { id: d.id, value: d.label };\n            });\n         }\n\n         /**\n          * @method defaults()\n          * Return the ViewClass() default values.\n          * NOTE: the child class MUST implement ViewClass() to return the\n          * proper ABViewXXX class definition.\n          * @return {obj}\n          */\n         defaults() {\n            var ViewClass = this.ViewClass();\n            if (!ViewClass) {\n               console.error(\n                  \"!!! properties/views/ABView: could not find ViewClass\"\n               );\n               return null;\n            }\n            return ViewClass.common();\n         }\n\n         editorPopulate(field) {\n            console.error(\"!!! Depreciated. call populate() instead.\");\n            this.populate(field);\n         }\n\n         formValues() {\n            return $$(this.ids.component).getValues();\n         }\n\n         /**\n          * @method isValid()\n          * Verify the common ABField settings are valid before allowing\n          * us to create the new field.\n          * @return {bool}\n          */\n         isValid() {\n            /*\n// TODO:\n            var ids = this.ids;\n            var isValid = $$(ids.component).validate(),\n               colName = this.formValues()[\"columnName\"];\n\n            // validate reserve column names\n            var FC = this.FieldClass();\n            if (!FC) {\n               this.AB.notify.developer(\n                  new Error(\"Unable to resolve FieldClass\"),\n                  {\n                     context: \"ABFieldProperty: isValid()\",\n                     base: this.ids.component,\n                  }\n               );\n            }\n\n            // columnName should not be one of the reserved names:\n            if (FC?.reservedNames.indexOf(colName.trim().toLowerCase()) > -1) {\n               this.markInvalid(\"columnName\", L(\"This is a reserved name\"));\n               isValid = false;\n            }\n\n            // columnName should not be in use by other fields on this object\n            // get All fields with matching colName\n            var fieldColName = this.currentObject?.fields(\n               (f) => f.columnName == colName\n            );\n            // ignore current edit field\n            if (this._CurrentField) {\n               fieldColName = fieldColName.filter(\n                  (f) => f.id != this._CurrentField.id\n               );\n            }\n            // if any more matches, this is a problem\n            if (fieldColName.length > 0) {\n               this.markInvalid(\n                  \"columnName\",\n                  L(\"This column name is in use by another field ({0})\", [\n                     fieldColName.label,\n                  ])\n               );\n               isValid = false;\n            }\n\n            return isValid;\n*/\n         }\n\n         markInvalid(name, message) {\n            $$(this.ids.component).markInvalid(name, message);\n         }\n\n         /**\n          * @method onChange()\n          * emit a \"changed\" event so our property manager can know\n          * there are new values that need saving.\n          */\n         onChange() {\n            this.emit(\"changed\");\n         }\n\n         /**\n          * @function populate\n          * populate the property form with the given ABField instance provided.\n          * @param {ABView} view\n          *        The ABViewXXX instance that we are editing the settings for.\n          */\n         populate(view) {\n            this.viewLoad(view);\n            $$(this.ids.label).setValue(view.label);\n         }\n\n         requiredOnChange() {\n            // Sub Class should overwrite this if it is necessary.\n         }\n\n         // show() {\n         //    super.show();\n         //    // AppList.show();\n         // }\n\n         /*\n          * @function values\n          *\n          * return the values for this form.\n          * @return {obj}\n          */\n         values() {\n            let vals = {};\n            vals.label = $$(this.ids.label).getValue();\n            return vals;\n         }\n\n         /**\n          * @method ViewClass()\n          * A method to return the proper ABViewXXX Definition.\n          * NOTE: Must be overwritten by the Child Class\n          */\n         ViewClass() {\n            console.error(\"!!! Child Class has not overwritten ViewClass()\");\n            return null;\n            // return super._ViewClass(\"string\");\n         }\n\n         _ViewClass(key) {\n            var app = this.CurrentApplication;\n            if (!app) {\n               app = this.AB.applicationNew({});\n            }\n            return app.viewAll((V) => V.common().key == key)[0];\n         }\n      };\n   }\n   return myClass;\n}\n","/*\n * ABViewCSVImporter\n * A Property manager for our ABViewCSVImporter widget\n */\n\nimport FViewClass from \"./ABView\";\n\nexport default function (AB) {\n   const ABViewClassProperty = FViewClass(AB);\n   // const L = ABViewClassProperty.L();\n\n   class ABViewCSVImporterProperty extends ABViewClassProperty {\n      constructor() {\n         super(\"properties_abview\", {\n            // Put our ids here\n         });\n      }\n\n      ui() {\n         /*\n// TODO: this is still from ABField.js\n\n            var ids = this.ids;\n\n            var FC = this.FieldClass();\n\n            var _ui = {\n               view: \"form\",\n               id: ids.component,\n               autoheight: true,\n               borderless: true,\n               elements: [\n                  // {\n                  //    view: \"label\",\n                  //    label: \"<span class='webix_icon fa fa-{0}'></span>{1}\".replace('{0}', Field.icon).replace('{1}', Field.menuName)\n                  // },\n                  {\n                     view: \"text\",\n                     id: ids.label,\n                     name: \"label\",\n                     label: L(\"Label\"),\n                     placeholder: L(\"Label\"),\n                     labelWidth: uiConfig.labelWidthLarge,\n                     css: \"ab-new-label-name\",\n                     on: {\n                        onChange: function (newVal, oldVal = \"\") {\n                           // update columnName when appropriate\n                           if (\n                              newVal != oldVal &&\n                              oldVal == $$(ids.columnName).getValue() &&\n                              $$(ids.columnName).isEnabled()\n                           ) {\n                              $$(ids.columnName).setValue(newVal);\n                           }\n                        },\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"text\",\n                     id: ids.columnName,\n                     name: \"columnName\",\n                     disallowEdit: true,\n                     label: L(\"Field Name\"),\n                     labelWidth: uiConfig.labelWidthLarge,\n                     placeholder: L(\"Database field name\"),\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"label\",\n                     id: ids.fieldDescription,\n                     label: L(\"Description\"), // Field.description,\n                     align: \"right\",\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"checkbox\",\n                     id: ids.showIcon,\n                     name: \"showIcon\",\n                     labelRight: L(\"show icon?\"),\n                     labelWidth: uiConfig.labelWidthCheckbox,\n                     value: true,\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"checkbox\",\n                     id: ids.required,\n                     name: \"required\",\n                     hidden: !FC.defaults().supportRequire,\n                     labelRight: L(\"Required\"),\n                     // disallowEdit: true,\n                     labelWidth: uiConfig.labelWidthCheckbox,\n                     on: {\n                        onChange: (newVal, oldVal) => {\n                           this.requiredOnChange(newVal, oldVal, ids);\n\n                           // If check require on edit field, then show warning message\n                           this.getNumberOfNullValue(newVal);\n                        },\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  // warning message: number of null value rows\n                  {\n                     view: \"label\",\n                     id: ids.numberOfNull,\n                     css: { color: \"#f00\" },\n                     label: \"\",\n                     hidden: true,\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     view: \"checkbox\",\n                     id: ids.unique,\n                     name: \"unique\",\n                     hidden: !FC.defaults().supportUnique,\n                     labelRight: L(\"Unique\"),\n                     disallowEdit: true,\n                     labelWidth: uiConfig.labelWidthCheckbox,\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  {\n                     id: ids.filterComplex,\n                     rows: [],\n                  },\n                  {\n                     id: ids.addValidation,\n                     view: \"button\",\n                     label: L(\"Add Field Validation\"),\n                     css: \"webix_primary\",\n                     click: () => {\n                        this.addValidation();\n                     },\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the validationRules\n                  // value we will parse out later\n                  {\n                     id: ids.validationRules,\n                     view: \"text\",\n                     hidden: true,\n                     name: \"validationRules\",\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n\n               rules: {\n                  label: webix.rules.isNotEmpty,\n                  columnName: webix.rules.isNotEmpty,\n               },\n            };\n\n            // Add our passed in elements:\n            elements.forEach((e) => {\n               // passed in elements might not have their .id\n               // set, but have a .name. Let's default id =\n               if (!e.id && e.name) {\n                  if (!this.ids[e.name]) {\n                     this.ids[e.name] = `${this.base}_${e.name}`;\n                  }\n                  e.id = this.ids[e.name];\n               }\n               _ui.elements.push(e);\n            });\n\n            return _ui;\n*/\n\n         return super.ui([]);\n      }\n\n      async init(AB) {\n         return super.init(AB);\n      }\n\n      defaultValues() {\n         var values = {\n            dataviewID: null,\n            buttonLabel: \"Upload CSV\",\n            width: 0,\n            recordRules: [],\n         };\n\n         var FieldClass = this.ViewClass();\n         if (FieldClass) {\n            var fcValues = FieldClass.defaultValues();\n            Object.keys(fcValues).forEach((k) => {\n               values[k] = fcValues[k];\n            });\n         }\n\n         return values;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"csvImporter\");\n      }\n\n      toSettings() {\n         var base = this.defaults();\n         base.settings = this.defaultValues();\n         return base;\n      }\n   }\n\n   return new ABViewCSVImporterProperty();\n}\n","/*\n * ABViewCarousel\n * A Property manager for our ABViewCarousel definitions\n */\n\nimport FABView from \"./ABView\";\n\nimport FABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport FABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nexport default function (AB) {\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   const base = \"properties_abview_carousel\";\n   const ABViewPropertyFilterData = FABViewPropertyFilterData(AB, base);\n   const PopupCarouselFilterMenu = new ABViewPropertyFilterData();\n\n   const LinkPageHelper = new FABViewPropertyLinkPage(AB, base);\n\n   class ABViewCarouselProperty extends ABView {\n      constructor() {\n         super(base, {\n            // Put our ids here\n            datacollection: \"\",\n            field: \"\",\n            filterByCursor: \"\",\n            width: \"\",\n            height: \"\",\n            showLabel: \"\",\n            hideItem: \"\",\n            hideButton: \"\",\n            navigationType: \"\",\n\n            gridFilterMenuButton: \"\",\n            detailsPage: \"\",\n            editPage: \"\",\n         });\n\n         this.ABFieldImage = AB.Class.ABFieldManager.fieldByKey(\"image\");\n         // {ABFieldImage}  the Class reference\n         // we use this later to help find which fields in an object\n         // are image fields.\n\n         this._preFilterSettings = null;\n         // {json}\n         // The settings that were in the Filter popup when we chose to\n         // display them.  We will use these values to undo any modifications\n         // if the user clicks [cancel] or [close];\n\n         this.linkPageComponent = new LinkPageHelper();\n      }\n\n      static get key() {\n         return \"carousel\";\n      }\n\n      ui() {\n         let ids = this.ids;\n         let _this = this;\n\n         return super.ui([\n            {\n               view: \"fieldset\",\n               label: L(\"Data:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.datacollection,\n                        view: \"select\",\n                        name: \"datacollection\",\n                        label: L(\"Datacollection:\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        options: [],\n                        on: {\n                           onChange: (newv, oldv) => {\n                              if (newv != oldv) {\n                                 this.linkPageComponent.clear();\n\n                                 let imageFields = [];\n\n                                 let dataCollection =\n                                    this.AB.datacollectionByID(newv);\n                                 if (dataCollection) {\n                                    let datasource = dataCollection.datasource;\n                                    if (datasource) {\n                                       imageFields =\n                                          datasource\n                                             .fields(\n                                                (f) =>\n                                                   f instanceof\n                                                   this.ABFieldImage\n                                             )\n                                             .map((f) => {\n                                                return {\n                                                   id: f.id,\n                                                   value: f.label,\n                                                };\n                                             }) || [];\n                                    }\n                                 }\n                                 if (imageFields.length > 0) {\n                                    imageFields.unshift({\n                                       id: \"\",\n                                       value: L(\"Select a field\"),\n                                    });\n                                 } else {\n                                    imageFields.unshift({\n                                       id: \"\",\n                                       value: L(\"no image fields.\"),\n                                    });\n                                 }\n\n                                 $$(ids.field).define(\"options\", imageFields);\n                                 $$(ids.field).refresh();\n                                 this.onChange();\n                              }\n                           },\n                        },\n                     },\n\n                     {\n                        id: ids.field,\n                        view: \"select\",\n                        name: \"field\",\n                        label: L(\"Image Field:\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        options: [],\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n\n                     {\n                        id: ids.filterByCursor,\n                        view: \"checkbox\",\n                        name: \"filterByCursor\",\n                        labelWidth: 0,\n                        labelRight: L(\"Filter images by cursor\"),\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n            this.linkPageComponent.ui(),\n            // this.linkPageComponent.ui,\n            // {\n            //    view: \"fieldset\",\n            //    label: L('ab.component.label.linkedPages', '*Linked Pages:'),\n            //    labelWidth: uiConfig.labelWidthLarge,\n            //    body: {\n            //       type: \"clean\",\n            //       padding: 10,\n            //       rows: [\n            //          {\n            //             view: \"select\",\n            //             name: \"detailsPage\",\n            //             label: L('ab.component.label.detailsPage', '*Details Page:'),\n            //             labelWidth: uiConfig.labelWidthLarge,\n            //             options: []\n            //          },\n            //          {\n            //             view: \"select\",\n            //             name: \"editPage\",\n            //             label: L('ab.component.label.editForm', '*Edit Form:'),\n            //             labelWidth: uiConfig.labelWidthLarge,\n            //             options: []\n            //          }\n            //       ]\n            //    }\n            // },\n            {\n               view: \"fieldset\",\n               label: L(\"Customize Display:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.navigationType,\n                        view: \"select\",\n                        name: \"navigationType\",\n                        label: L(\"Navigation Type\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        options: [\n                           { id: \"corner\", value: L(\"Corner\") },\n                           { id: \"side\", value: L(\"Side\") },\n                        ],\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n\n                     {\n                        id: ids.showLabel,\n                        view: \"checkbox\",\n                        name: \"showLabel\",\n                        labelRight: L(\"Show label of image\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n\n                     {\n                        id: ids.hideItem,\n                        view: \"checkbox\",\n                        name: \"hideItem\",\n                        labelRight: L(\"Hide item list\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n\n                     {\n                        id: ids.hideButton,\n                        view: \"checkbox\",\n                        name: \"hideButton\",\n                        labelRight: L(\"Hide navigation buttons\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n\n                     {\n                        id: ids.width,\n                        view: \"counter\",\n                        name: \"width\",\n                        label: L(\"Width:\"),\n                        labelWidth: uiConfig.labelWidthXLarge,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n\n                     {\n                        id: ids.height,\n                        view: \"counter\",\n                        name: \"height\",\n                        label: L(\"Height:\"),\n                        labelWidth: uiConfig.labelWidthXLarge,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Filter Option:\"),\n                              css: \"ab-text-bold\",\n                              width: uiConfig.labelWidthXLarge,\n                           },\n                           {\n                              id: ids.gridFilterMenuButton,\n                              view: \"button\",\n                              css: \"webix_primary\",\n                              label: L(\"Settings\"),\n                              icon: \"fa fa-gear\",\n                              type: \"icon\",\n                              // badge: 0,\n                              click: function () {\n                                 _this.filterMenuShow(this.$view);\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               },\n            },\n         ]);\n      }\n\n      async init(AB) {\n         super.init(AB);\n\n         this._handler_onCancel = () => {\n            // we have to set the values BACK to what they were:\n            PopupCarouselFilterMenu.setSettings(this._preFilterSettings);\n            this.filter_property_popup.hide();\n         };\n\n         this.filter_property_popup = webix.ui({\n            view: \"window\",\n            modal: true,\n            position: \"center\",\n            resize: true,\n            width: 700,\n            height: 450,\n            css: \"ab-main-container\",\n            hidden: true,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Filter Menu\"),\n                  },\n                  {\n                     view: \"button\",\n                     autowidth: true,\n                     // width: 50,\n                     type: \"icon\",\n                     icon: \"nomargin fa fa-times\",\n                     click: this._handler_onCancel,\n                     on: {\n                        onAfterRender() {\n                           ABView.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            body: PopupCarouselFilterMenu.ui(),\n         });\n\n         PopupCarouselFilterMenu.on(\"cancel\", this._handler_onCancel);\n\n         PopupCarouselFilterMenu.on(\"save\", () => {\n            this.filter_property_popup.hide();\n            this.onChange();\n         });\n\n         let allInits = [];\n\n         allInits.push(PopupCarouselFilterMenu.init(AB));\n         allInits.push(this.linkPageComponent.init(AB));\n         return Promise.all(allInits);\n      }\n\n      populate(view) {\n         super.populate(view);\n         let ids = this.ids;\n\n         if (!view) return;\n\n         // Set the objects you can choose from in the list\n         // Pull data collections to options\n         var objectOptions = this.propertyDatacollections(view);\n         $$(ids.datacollection).define(\"options\", objectOptions);\n         $$(ids.datacollection).refresh();\n\n         $$(ids.datacollection).setValue(view.settings.dataviewID);\n         $$(ids.field).setValue(view.settings.field);\n         $$(ids.filterByCursor).setValue(view.settings.filterByCursor);\n\n         $$(ids.width).setValue(view.settings.width);\n         $$(ids.height).setValue(view.settings.height);\n         $$(ids.showLabel).setValue(view.settings.showLabel);\n         $$(ids.hideItem).setValue(view.settings.hideItem);\n         $$(ids.hideButton).setValue(view.settings.hideButton);\n         $$(ids.navigationType).setValue(view.settings.navigationType);\n\n         // Populate values to QueryBuilder\n         var selectedDv = view.datacollection;\n         if (selectedDv) {\n            PopupCarouselFilterMenu.objectLoad(selectedDv.datasource);\n            PopupCarouselFilterMenu.setSettings(view.settings.filter);\n         }\n\n         // Populate values to link page properties\n         this.linkPageComponent.viewLoad(view);\n         this.linkPageComponent.setSettings(view.settings);\n      }\n\n      defaultValues() {\n         let values = {};\n         var ViewClass = this.ViewClass();\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n         return values;\n      }\n\n      filterMenuShow() {\n         // var currView = _logic.currentEditObject();\n\n         this._preFilterSettings = PopupCarouselFilterMenu.getSettings();\n\n         // show filter popup\n         this.filter_property_popup.show();\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         let ids = this.ids;\n         let vals = super.values();\n\n         vals.settings = vals.settings || {};\n         vals.settings.dataviewID = $$(ids.datacollection).getValue();\n         vals.settings.field = $$(ids.field).getValue();\n         vals.settings.filterByCursor =\n            $$(ids.filterByCursor).getValue() || false;\n\n         vals.settings.width = $$(ids.width).getValue();\n         vals.settings.height = $$(ids.height).getValue();\n         vals.settings.showLabel = $$(ids.showLabel).getValue();\n         vals.settings.hideItem = $$(ids.hideItem).getValue();\n         vals.settings.hideButton = $$(ids.hideButton).getValue();\n         vals.settings.navigationType = $$(ids.navigationType).getValue();\n\n         // filter\n         vals.settings.filter = PopupCarouselFilterMenu.getSettings();\n\n         // link pages\n         let linkSettings = this.linkPageComponent.getSettings();\n         for (let key in linkSettings) {\n            vals.settings[key] = linkSettings[key];\n         }\n\n         return vals;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"carousel\");\n      }\n   }\n\n   return ABViewCarouselProperty;\n}\n","/*\n * ABViewChart\n * A Property manager for our ABViewChart definitions\n */\n\nimport FABViewContainer from \"./ABViewContainer\";\n\nexport default function (AB) {\n   const BASE_ID = \"properties_abview_chart\";\n\n   const ABViewContainer = FABViewContainer(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABViewContainer.L();\n\n   class ABViewChartProperty extends ABViewContainer {\n      constructor() {\n         super(BASE_ID, {\n            dataviewID: \"\",\n            columnLabel: \"\",\n            columnValue: \"\",\n            multipleSeries: \"\",\n            columnValue2: \"\",\n         });\n\n         this.AB = AB;\n      }\n\n      static get key() {\n         return \"chart\";\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               id: ids.dataviewID,\n               name: \"dataviewID\",\n               view: \"richselect\",\n               label: L(\"Chart Data\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                     this.populateFieldOptions();\n\n                     if ($$(ids.multipleSeries).getValue())\n                        this.populateFieldOptions2();\n                  },\n               },\n            },\n            {\n               id: ids.columnLabel,\n               name: \"columnLabel\",\n               view: \"richselect\",\n               label: L(\"Label Column\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.columnValue,\n               name: \"columnValue\",\n               view: \"richselect\",\n               label: L(\"Value Column\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.multipleSeries,\n               name: \"multipleSeries\",\n               view: \"checkbox\",\n               label: L(\"Multiple Series\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: 0,\n               on: {\n                  onChange: (newValue) => {\n                     const $columnValue2 = $$(ids.columnValue2);\n\n                     if (newValue) this.populateFieldOptions2();\n                     else {\n                        $columnValue2.setValue(\"\");\n                        $columnValue2.disable();\n                     }\n\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.columnValue2,\n               name: \"columnValue2\",\n               view: \"richselect\",\n               label: L(\"Value Column 2\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               disabled: true,\n               options: [],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"isPercentage\",\n               view: \"checkbox\",\n               labelRight: L(\"Percentage\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"showLabel\",\n               view: \"checkbox\",\n               label: L(\"Display Label\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"labelPosition\",\n               view: \"richselect\",\n               label: L(\"Label Position\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [\n                  {\n                     id: \"left\",\n                     value: L(\"Left\"),\n                  },\n                  {\n                     id: \"top\",\n                     value: L(\"Top\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"labelWidth\",\n               view: \"counter\",\n               label: L(\"Label Width\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               view: \"counter\",\n               name: \"height\",\n               label: `${L(\"Height\")}: `,\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n         ]);\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         await super.init(AB);\n\n         webix.extend($$(this.ids.component), webix.ProgressBar);\n      }\n\n      updateCharts() {\n         // UPDATE charts when parent properties are changed\n         this.CurrentView.refreshData();\n\n         // baseView.views().forEach((e) => {\n         //    e.parent.refreshData();\n         // });\n      }\n\n      populateDataview() {\n         // Pull data collections to options\n         // / NOTE: only include System Objects if the user has permission\n         const datacollectionFilter = this.AB.Account.isSystemDesigner()\n            ? (obj) => !obj.isSystemObject\n            : () => true;\n         const datacollections =\n            this.CurrentApplication.datacollectionsIncluded(\n               datacollectionFilter\n            );\n\n         // Set the objects you can choose from in the list\n         const $dataviewID = $$(this.ids.dataviewID);\n\n         $dataviewID.define(\n            \"options\",\n            datacollections.map((e) => {\n               return {\n                  id: e.id,\n                  value: e.label,\n               };\n            })\n         );\n         $dataviewID.refresh();\n      }\n\n      populateFieldOptions() {\n         const baseView = this.CurrentView;\n         const dc = baseView.datacollection;\n\n         if (!dc) return;\n\n         const obj = dc.datasource;\n\n         if (!obj) return;\n\n         const ids = this.ids;\n         const $columnLabel = $$(ids.columnLabel);\n         const $columnValue = $$(ids.columnValue);\n\n         $columnLabel.define(\n            \"options\",\n            obj.fields().map((e) => {\n               return {\n                  id: e.id,\n                  value: e.columnName,\n                  key: e.key,\n               };\n            })\n         );\n         $columnLabel.refresh();\n         $columnValue.define(\n            \"options\",\n            obj\n               .fields(\n                  (f) =>\n                     f.key === \"number\" ||\n                     f.key === \"formula\" ||\n                     f.key === \"calculate\"\n               )\n               .map((e) => {\n                  return {\n                     id: e.id,\n                     value: e.columnName,\n                     key: e.key,\n                  };\n               })\n         );\n         $columnValue.refresh();\n      }\n\n      populateFieldOptions2() {\n         const baseView = this.CurrentView;\n         const dc = baseView.datacollection;\n\n         if (!dc) return;\n\n         const obj = dc.datasource;\n\n         if (!obj) return;\n\n         const $columnValue2 = $$(this.ids.columnValue2);\n\n         $columnValue2.define(\n            \"options\",\n            obj\n               .fields(\n                  (f) =>\n                     f.key === \"number\" ||\n                     f.key === \"formula\" ||\n                     f.key === \"calculate\"\n               )\n               .map((e) => {\n                  return {\n                     id: e.id,\n                     value: e.columnName,\n                     key: e.key,\n                  };\n               })\n         );\n         $columnValue2.enable();\n         $columnValue2.refresh();\n      }\n\n      populate(view) {\n         super.populate(view);\n\n         const ids = this.ids;\n         const $component = $$(ids.component);\n         const defaultValues = this.defaultValues();\n         const values = Object.assign(\n            $component.getValues(),\n            Object.assign(defaultValues, view.settings)\n         );\n\n         this.populateDataview();\n         this.populateFieldOptions();\n\n         if (values.multipleSeries) this.populateFieldOptions2();\n\n         $component.setValues(values);\n      }\n\n      defaultValues() {\n         const ViewClass = this.ViewClass();\n\n         let values = null;\n\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const values = super.values();\n         const ids = this.ids;\n         const $component = $$(ids.component);\n\n         values.settings = Object.assign(\n            $component.getValues(),\n            values.settings\n         );\n\n         // Retrive the values of your properties from Webix and store them in the view\n\n         return values;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"chart\");\n      }\n   }\n\n   return ABViewChartProperty;\n}\n","/*\n * ABViewChartArea\n * A Property manager for our ABViewChartArea definitions\n */\n\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const BASE_ID = \"properties_abview_chart_area\";\n\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   class ABViewChartAreaProperty extends ABView {\n      constructor() {\n         super(BASE_ID, {});\n\n         this.AB = AB;\n      }\n\n      static get key() {\n         return \"area\";\n      }\n\n      ui() {\n         return super.ui([\n            {\n               name: \"areaType\",\n               view: \"richselect\",\n               label: L(\"Chart Type\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [\n                  {\n                     id: \"area\",\n                     value: L(\"Area\"),\n                  },\n                  {\n                     id: \"stackedArea\",\n                     value: L(\"Stacked Area\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            // {\n            // \tname: 'chartWidth',\n            // \tview: 'counter',\n            // \tmin: 1,\n            // \tlabel: L('ab.component.chart.area.chartWidth', '*Width')\n            // },\n            {\n               name: \"chartHeight\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Height\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"stepValue\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Step\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"maxValue\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Max Value\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"labelFontSize\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Label Font Size\"),\n               labelWidth: uiConfig.labelWidthXLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"isLegend\",\n               view: \"checkbox\",\n               labelRight: L(\"Show Legend\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n         ]);\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         await super.init(AB);\n      }\n\n      populate(view) {\n         super.populate(view);\n\n         const $component = $$(this.ids.component);\n         const defaultValues = this.defaultValues();\n         const values = Object.assign(\n            $component.getValues(),\n            Object.assign(defaultValues, view.settings)\n         );\n\n         $component.setValues(values);\n      }\n\n      defaultValues() {\n         const ViewClass = this.ViewClass();\n\n         let values = null;\n\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const values = super.values();\n\n         values.settings = Object.assign(\n            $$(this.ids.component).getValues(),\n            values.settings\n         );\n\n         return values;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"area\");\n      }\n   }\n\n   return ABViewChartAreaProperty;\n}\n","/*\n * ABViewChartArea\n * A Property manager for our ABViewChartArea definitions\n */\n\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const BASE_ID = \"properties_abview_chart_bar\";\n\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   class ABViewChartBarProperty extends ABView {\n      constructor() {\n         super(BASE_ID, {});\n\n         this.AB = AB;\n      }\n\n      static get key() {\n         return \"bar\";\n      }\n\n      ui() {\n         return super.ui([\n            {\n               name: \"barType\",\n               view: \"richselect\",\n               label: L(\"Chart Type\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [\n                  {\n                     id: \"bar\",\n                     value: L(\"Vertical\"),\n                  },\n                  {\n                     id: \"barH\",\n                     value: L(\"Horizontal\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"barPreset\",\n               view: \"richselect\",\n               label: L(\"Chart Preset\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [\n                  {\n                     id: \"column\",\n                     value: L(\"Column\"),\n                  },\n                  {\n                     id: \"stick\",\n                     value: L(\"Stick\"),\n                  },\n                  {\n                     id: \"alpha\",\n                     value: L(\"Alpha\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            // {\n            // \tname: 'chartWidth',\n            // \tview: 'counter',\n            // \tmin: 1,\n            // \tlabel: L('ab.component.chart.bar.chartWidth', '*Width')\n            // },\n            {\n               name: \"height\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Height\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"stepValue\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Step\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"maxValue\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Max Value\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"labelFontSize\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Label Font Size\"),\n               labelWidth: uiConfig.labelWidthXLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"isLegend\",\n               view: \"checkbox\",\n               labelRight: L(\"Show Legend\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n         ]);\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         await super.init(AB);\n      }\n\n      populate(view) {\n         super.populate(view);\n\n         const $component = $$(this.ids.component);\n         const defaultValues = this.defaultValues();\n         const values = Object.assign(\n            $component.getValues(),\n            Object.assign(defaultValues, view.settings)\n         );\n\n         $component.setValues(values);\n      }\n\n      defaultValues() {\n         const ViewClass = this.ViewClass();\n\n         let values = null;\n\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const values = super.values();\n\n         values.settings = Object.assign(\n            $$(this.ids.component).getValues(),\n            values.settings\n         );\n\n         return values;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"bar\");\n      }\n   }\n\n   return ABViewChartBarProperty;\n}\n","/*\n * ABViewChartline\n * A Property manager for our ABViewChartLine definitions\n */\n\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const BASE_ID = \"properties_abview_chart_line\";\n\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   class ABViewChartLineProperty extends ABView {\n      constructor() {\n         super(BASE_ID, {});\n\n         this.AB = AB;\n      }\n\n      static get key() {\n         return \"line\";\n      }\n\n      ui() {\n         return super.ui([\n            {\n               name: \"lineType\",\n               view: \"richselect\",\n               label: L(\"Chart Type\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [\n                  {\n                     id: \"line\",\n                     value: L(\"Line\"),\n                  },\n                  {\n                     id: \"spline\",\n                     value: L(\"Spline\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"linePreset\",\n               view: \"richselect\",\n               label: L(\"Chart Preset\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [\n                  {\n                     id: \"plot\",\n                     value: L(\"Plot\"),\n                  },\n                  {\n                     id: \"diamond\",\n                     value: L(\"Diamond\"),\n                  },\n                  {\n                     id: \"simple\",\n                     value: L(\"Simple\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            // {\n            // \tname: 'chartWidth',\n            // \tview: 'counter',\n            // \tmin: 1,\n            // \tlabel: L('ab.component.chart.line.chartWidth', '*Width')\n            // },\n            {\n               name: \"chartHeight\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Height\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"stepValue\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Step\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"maxValue\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Max Value\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"labelFontSize\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Label Font Size\"),\n               labelWidth: uiConfig.labelWidthXLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"isLegend\",\n               view: \"checkbox\",\n               labelRight: L(\"Show Legend\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n         ]);\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         await super.init(AB);\n      }\n\n      populate(view) {\n         super.populate(view);\n\n         const $component = $$(this.ids.component);\n         const defaultValues = this.defaultValues();\n         const values = Object.assign(\n            $component.getValues(),\n            Object.assign(defaultValues, view.settings)\n         );\n\n         $component.setValues(values);\n      }\n\n      defaultValues() {\n         const ViewClass = this.ViewClass();\n\n         let values = null;\n\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const values = super.values();\n\n         values.settings = Object.assign(\n            $$(this.ids.component).getValues(),\n            values.settings\n         );\n\n         return values;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"line\");\n      }\n   }\n\n   return ABViewChartLineProperty;\n}\n","/*\n * ABViewChartline\n * A Property manager for our ABViewChartLine definitions\n */\n\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const BASE_ID = \"properties_abview_chart_pie\";\n\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   class ABViewChartPieProperty extends ABView {\n      constructor() {\n         super(BASE_ID, {});\n\n         this.AB = AB;\n      }\n\n      static get key() {\n         return \"pie\";\n      }\n\n      ui() {\n         return super.ui([\n            {\n               name: \"pieType\",\n               view: \"richselect\",\n               label: L(\"Chart Type\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [\n                  {\n                     id: \"pie\",\n                     value: L(\"Standard\"),\n                  },\n                  {\n                     id: \"pie3D\",\n                     value: L(\"Pie3D\"),\n                  },\n                  {\n                     id: \"donut\",\n                     value: L(\"Donut\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            // {\n            // \tname: 'chartWidth',\n            // \tview: 'counter',\n            // \tmin: 1,\n            // \tlabel: L('ab.component.chart.pie.chartWidth', '*Width')\n            // },\n            {\n               name: \"height\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Height\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"innerFontSize\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Inner Font Size\"),\n               labelWidth: uiConfig.labelWidthXLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"labelFontSize\",\n               view: \"counter\",\n               min: 1,\n               label: L(\"Label Font Size\"),\n               labelWidth: uiConfig.labelWidthXLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"isLegend\",\n               view: \"checkbox\",\n               labelRight: L(\"Show Legend\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n         ]);\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         await super.init(AB);\n      }\n\n      populate(view) {\n         super.populate(view);\n\n         const $component = $$(this.ids.component);\n         const defaultValues = this.defaultValues();\n         const values = Object.assign(\n            $component.getValues(),\n            Object.assign(defaultValues, view.settings)\n         );\n\n         $component.setValues(values);\n      }\n\n      defaultValues() {\n         const ViewClass = this.ViewClass();\n\n         let values = null;\n\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const values = super.values();\n\n         values.settings = Object.assign(\n            $$(this.ids.component).getValues(),\n            values.settings\n         );\n\n         return values;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"pie\");\n      }\n   }\n\n   return ABViewChartPieProperty;\n}\n","/*\n * ABViewComment\n * A Property manager for our ABViewTab definitions\n */\n\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const BASE_ID = \"properties_abview_comment\";\n\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   class ABViewCommentProperty extends ABView {\n      constructor() {\n         super(BASE_ID, {\n            dataviewID: \"\",\n            columnUser: \"\",\n            columnComment: \"\",\n            columnDate: \"\",\n            height: \"\",\n         });\n\n         this.AB = AB;\n      }\n\n      static get key() {\n         return \"comment\";\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               id: ids.dataviewID,\n               view: \"richselect\",\n               name: \"dataviewID\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: (newValue) => {\n                     this.selectSource(newValue);\n                  },\n               },\n            },\n            {\n               id: ids.columnUser,\n               view: \"richselect\",\n               name: \"columnUser\",\n               label: L(\"Select a user field\"),\n               labelWidth: uiConfig.labelWidthLarge,\n            },\n            {\n               id: ids.columnComment,\n               view: \"richselect\",\n               name: \"columnComment\",\n               label: L(\"Select a comment field\"),\n               labelWidth: uiConfig.labelWidthLarge,\n            },\n            {\n               id: ids.columnDate,\n               view: \"richselect\",\n               name: \"columnDate\",\n               label: L(\"Select a date field\"),\n               labelWidth: uiConfig.labelWidthLarge,\n            },\n            {\n               id: ids.height,\n               view: \"counter\",\n               name: \"height\",\n               label: L(\"Height:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n            },\n         ]);\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         await super.init(AB);\n      }\n\n      selectSource(datacollectionID) {\n         //  Update field options in property\n         this.updateUserFieldOptions(datacollectionID);\n         this.updateCommentFieldOptions(datacollectionID);\n         this.updateDateFieldOptions(datacollectionID);\n      }\n\n      updateDatacollectionOptions(datacollectionID) {\n         // Pull data collections to options\n         // Load in all the Available Datacollections:\n         const datacollections =\n            this.CurrentApplication.datacollectionsIncluded().map((e) => {\n               return {\n                  id: e.id,\n                  value: e.label,\n                  icon:\n                     e.sourceType === \"query\"\n                        ? \"fa fa-filter\"\n                        : \"fa fa-database\",\n               };\n            });\n\n         const ids = this.ids;\n\n         $$(ids.dataviewID).define(\"options\", datacollections);\n         $$(ids.dataviewID).define(\"value\", datacollectionID);\n         $$(ids.dataviewID).refresh();\n      }\n\n      updateUserFieldOptions(datacollectionID) {\n         const currentView = this.CurrentView;\n         const datacollection =\n            currentView.AB.datacollectionByID(datacollectionID);\n         const object = datacollection ? datacollection.datasource : null;\n\n         // Pull field list\n         const fieldOptions = object\n            ? object\n                 .fields((f) => f.key === \"user\")\n                 .map((f) => {\n                    return {\n                       id: f.id,\n                       value: f.label,\n                    };\n                 })\n            : [];\n\n         // Add a default option\n         const defaultOption = { id: null, value: \"[Select]\" };\n         fieldOptions.unshift(defaultOption);\n\n         const ids = this.ids;\n\n         $$(ids.columnUser).define(\"options\", fieldOptions);\n         $$(ids.columnUser).refresh();\n      }\n\n      updateCommentFieldOptions(datacollectionID) {\n         const currentView = this.CurrentView;\n         const datacollection =\n            currentView.AB.datacollectionByID(datacollectionID);\n         const object = datacollection ? datacollection.datasource : null;\n\n         // Pull field list\n         const fieldOptions = object\n            ? object\n                 .fields((f) => f.key === \"string\" || f.key === \"LongText\")\n                 .map((f) => {\n                    return {\n                       id: f.id,\n                       value: f.label,\n                    };\n                 })\n            : [];\n\n         // Add a default option\n         const defaultOption = { id: null, value: \"[Select]\" };\n         fieldOptions.unshift(defaultOption);\n\n         const ids = this.ids;\n\n         $$(ids.columnComment).define(\"options\", fieldOptions);\n         $$(ids.columnComment).refresh();\n      }\n\n      updateDateFieldOptions(datacollectionID) {\n         const currentView = this.CurrentView;\n         const datacollection =\n            currentView.AB.datacollectionByID(datacollectionID);\n         const object = datacollection ? datacollection.datasource : null;\n\n         // Pull field list\n         const fieldOptions = object\n            ? object\n                 .fields((f) => f.key === \"date\")\n                 .map((f) => {\n                    return {\n                       id: f.id,\n                       value: f.label,\n                    };\n                 })\n            : [];\n\n         // Add a default option\n         const defaultOption = { id: null, value: \"[Select]\" };\n         fieldOptions.unshift(defaultOption);\n\n         const ids = this.ids;\n\n         $$(ids.columnDate).define(\"options\", fieldOptions);\n         $$(ids.columnDate).refresh();\n      }\n\n      populate(view) {\n         super.populate(view);\n\n         const ids = this.ids;\n         const datacollectionId = view.settings.dataviewID\n            ? view.settings.dataviewID\n            : null;\n\n         this.updateDatacollectionOptions(datacollectionId);\n         this.updateUserFieldOptions(datacollectionId);\n         this.updateCommentFieldOptions(datacollectionId);\n         this.updateDateFieldOptions(datacollectionId);\n\n         const $component = $$(ids.component);\n\n         const values = $component.getValues();\n\n         for (const key in view.settings)\n            values[key] = values[key] || view.settings[key];\n\n         $component.setValues(values);\n      }\n\n      defaultValues() {\n         const ViewClass = this.ViewClass();\n\n         let values = null;\n\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const ids = this.ids;\n\n         const $component = $$(ids.component);\n\n         const values = super.values();\n\n         values.settings = $component.getValues();\n\n         // Retrive the values of your properties from Webix and store them in the view\n\n         return values;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"comment\");\n      }\n   }\n\n   return ABViewCommentProperty;\n}\n","/*\n * ABViewConditionalContainer\n * A Property manager for our ABViewConditionalContainer definitions\n */\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   const idBase = \"properties_abview_conditionalcontainer\";\n\n   let ABViewPropertyDefaults;\n\n   class ABViewConditionalContainerProperty extends ABView {\n      constructor() {\n         super(idBase, {\n            // Put our ids here\n            buttonFilter: \"\",\n            datacollection: \"\",\n         });\n\n         this.AB = AB;\n         ABViewPropertyDefaults = this.AB.Class.ABViewManager.viewClass(\n            \"conditionalcontainer\"\n         ).defaultValues();\n      }\n\n      static get key() {\n         return \"conditionalcontainer\";\n      }\n\n      get filterComponent() {\n         if (this._filterComponent == null) {\n            this._filterComponent = this.AB.filterComplexNew(\n               `${idBase}_filter`\n            );\n         }\n\n         return this._filterComponent;\n      }\n\n      ui() {\n         this.filterComponent.init();\n         this.filterComponent.on(\"save\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         if (this._filterPopup == null) {\n            this._filterPopup = this.AB.Webix.ui({\n               view: \"popup\",\n               width: 800,\n               hidden: true,\n               body: this.filterComponent.ui,\n            });\n         }\n\n         return super.ui([\n            {\n               id: this.ids.datacollection,\n               name: \"datacollection\",\n               view: \"richselect\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: (dvId) => {\n                     this.changeDatacollection(dvId);\n                  },\n               },\n            },\n            {\n               view: \"fieldset\",\n               name: \"filter\",\n               label: L(\"Filter:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Filter Data:\"),\n                              width: uiConfig.labelWidthLarge,\n                           },\n                           {\n                              id: this.ids.buttonFilter,\n                              view: \"button\",\n                              name: \"buttonFilter\",\n                              label: L(\"Settings\"),\n                              icon: \"fa fa-gear\",\n                              type: \"icon\",\n                              css: \"webix_primary\",\n                              autowidth: true,\n                              badge: 0,\n                              click: () => {\n                                 const $button = $$(this.ids.buttonFilter);\n                                 this.showFilterPopup($button);\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               },\n            },\n         ]);\n      }\n\n      populate(view) {\n         super.populate(view);\n         if (!view) return;\n\n         const ids = this.ids;\n\n         // this.filterComponent.applicationLoad(view.application);\n         const SourceSelector = $$(ids.datacollection);\n\n         // Pull data collections to options\n         const dcOptions = view.application\n            .datacollectionsIncluded()\n            .map((dc) => {\n               return {\n                  id: dc.id,\n                  value: dc.label,\n               };\n            });\n         SourceSelector.define(\"options\", dcOptions);\n         SourceSelector.define(\"value\", view?.settings?.dataviewID ?? null);\n         SourceSelector.refresh();\n\n         this.populatePopupEditors(view);\n      }\n\n      defaultValues() {\n         let values = {};\n         const ViewClass = this.ViewClass();\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const ids = this.ids;\n         const filterValues = this.filterComponent.getValue();\n\n         const vals = super.values();\n         vals.settings = vals.settings ?? {};\n         vals.settings.dataviewID = $$(ids.datacollection).getValue();\n         vals.settings.filterConditions = filterValues;\n\n         return vals;\n      }\n\n      /**\n       * @method ViewClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"conditionalcontainer\");\n      }\n\n      changeDatacollection(dcId) {\n         const view = this.CurrentView;\n\n         this.populatePopupEditors(view, dcId);\n\n         // clear filter condition\n         this.filterComponent.setValue(ABViewPropertyDefaults.filterConditions);\n\n         this.onChange();\n\n         this.populateBadgeNumber(view);\n      }\n\n      showFilterPopup($view) {\n         this._filterPopup.show($view, { pos: \"bottom\" });\n      }\n\n      hideFilterPopup() {\n         this._filterPopup.hide();\n      }\n\n      onFilterChange() {\n         // Update .settings values\n         this.values();\n\n         let allComplete = true;\n         const filterValues = this.filterComponent.getValue();\n         filterValues.rules.forEach((f) => {\n            // if all 3 fields are present, we are good.\n            if (f.key && f.rule && f.value) {\n               allComplete = allComplete && true;\n            } else {\n               // else, we found an entry that wasn't complete:\n               allComplete = false;\n            }\n         });\n\n         // only perform the update if a complete row is specified:\n         if (allComplete) {\n            this.hideFilterPopup();\n\n            // we want to call .save() but give webix a chance to properly update it's\n            // select boxes before this call causes them to be removed:\n            setTimeout(() => {\n               this.onChange();\n\n               const view = this.CurrentView;\n               this.populateBadgeNumber(view);\n            }, 10);\n         }\n      }\n\n      populatePopupEditors(view, datacollectionId) {\n         // pull current data collection\n         let dc = view.datacollection;\n\n         // specify data collection id\n         if (datacollectionId) {\n            dc = view.AB.datacollectionByID(datacollectionId);\n         }\n\n         if (dc?.datasource) {\n            this.filterComponent.fieldsLoad(dc.datasource.fields());\n         } else {\n            this.filterComponent.fieldsLoad();\n         }\n\n         this.filterComponent.setValue(\n            view.settings.filterConditions ??\n               ABViewPropertyDefaults.filterConditions\n         );\n\n         this.populateBadgeNumber(view);\n      }\n\n      populateBadgeNumber(view) {\n         const ids = this.ids;\n         const $buttonFilter = $$(ids.buttonFilter);\n\n         if (view?.settings?.filterConditions?.rules) {\n            $buttonFilter.define(\n               \"badge\",\n               view.settings.filterConditions.rules.length || null\n            );\n         } else {\n            $buttonFilter.define(\"badge\", null);\n         }\n\n         $buttonFilter.refresh();\n      }\n   }\n\n   return ABViewConditionalContainerProperty;\n}\n","/*\n * ABViewContainer\n * A Generic Property manager for views that are ABViewContainers.\n */\n\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport FABView from \"./ABView\";\n\nconst ABViewContainerDefaults = {\n   columns: 1,\n   // {int}\n   // The number of columns this view is broken up into.\n\n   gravity: 1,\n   // {int}\n   // the gravity or weight of the column relative to other columns.\n   // the higher the number, the wider the space relative to other columns.\n   // so a gravity of 2 will be twice as wide as a gravity of 1.\n};\n\nexport default function (AB) {\n   if (!myClass) {\n      const uiConfig = AB.Config.uiSettings();\n      const ABView = FABView(AB);\n      var L = ABView.L();\n\n      myClass = class ABViewContainerProperty extends ABView {\n         constructor(base = \"properties_abview_container\", ids = {}) {\n            // base: {string} unique base id reference\n            // ids: {hash}  { key => '' }\n            // this is provided by the Sub Class and has the keys\n            // unique to the Sub Class' interface elements.\n\n            var common = {\n               columns: \"\",\n               gravity: \"\",\n            };\n\n            Object.keys(ids).forEach((k) => {\n               if (typeof common[k] != \"undefined\") {\n                  console.error(\n                     `!!! ABViewContainerProperty:: passed in ids contains a restricted id : ${k}`\n                  );\n                  return;\n               }\n               common[k] = \"\";\n            });\n\n            super(base, common);\n\n            this.base = base;\n            this.AB = AB;\n         }\n\n         ui(elements = [], rules = {}) {\n            let ids = this.ids;\n\n            let _elements = [\n               {\n                  id: ids.columns,\n                  name: \"columns\",\n                  view: \"counter\",\n                  min: 1,\n                  label: L(\"Columns\"),\n                  labelWidth: uiConfig.labelWidthXLarge,\n                  on: {\n                     onChange: (newVal, oldVal) => {\n                        if (newVal > 8) $$(ids.columns).setValue(8);\n\n                        let $grav = $$(ids.gravity);\n                        let addCounter = (counterNum) => {\n                           var pos = $grav.getParentView().index($grav);\n                           $grav.getParentView().addView(\n                              {\n                                 view: \"counter\",\n                                 value: \"1\",\n                                 min: 1,\n                                 label: L(\"Column {0} Gravity\", [counterNum]),\n                                 labelWidth: uiConfig.labelWidthXLarge,\n                                 css: \"gravity_counter\",\n                                 on: {\n                                    onChange: () => {\n                                       this.onChange();\n                                    },\n                                 },\n                              },\n                              pos\n                           );\n                        };\n\n                        function removeCounter() {\n                           $grav\n                              .getParentView()\n                              .removeView(\n                                 $grav.getParentView().getChildViews()[\n                                    $grav.getParentView().index($grav) - 1\n                                 ]\n                              );\n                        }\n\n                        if (newVal > oldVal) {\n                           // Add a Gravity Counter\n\n                           // SPECIAL CASE:\n                           // we are now hiding the gravity counter if only\n                           // 1 column.  So be sure to show the hidden counter\n                           // when switching to 2:\n                           if (newVal == 2) {\n                              addCounter(1);\n                           }\n\n                           addCounter(newVal);\n                        } else if (newVal < oldVal) {\n                           // Remove a gravity counter\n                           removeCounter();\n\n                           // SPECIAL CASE\n                           // if we go back to 1 column, hide them all\n                           if (newVal == 1) {\n                              removeCounter();\n                           }\n                        }\n\n                        this.onChange();\n                     },\n                  },\n               },\n               {\n                  id: ids.gravity,\n                  view: \"text\",\n                  name: \"gravity\",\n                  height: 1,\n               },\n            ];\n\n            _elements = _elements.concat(elements);\n\n            // Object.keys(rules).forEach((r) => {\n            //    _ui.rules[r] = rules[r];\n            // });\n\n            return super.ui(_elements, rules);\n         }\n\n         //          async init(AB) {\n         //             this.AB = AB;\n\n         //             var VC = this.ViewClass();\n         //             if (VC) {\n\n         // // TODO:\n         //                $$(this.ids.fieldDescription).define(\n         //                   \"label\",\n         //                   L(FC.defaults().description)\n         //                );\n         //             } else {\n         //                $$(this.ids.fieldDescription).hide();\n\n         //             }\n         //          }\n\n         clear() {}\n\n         /**\n          * @method defaults()\n          * Return the ViewClass() default values.\n          * NOTE: the child class MUST implement ViewClass() to return the\n          * proper ABViewXXX class definition.\n          * @return {obj}\n          */\n         defaults() {\n            var ViewClass = this.ViewClass();\n            if (!ViewClass) {\n               console.error(\n                  \"!!! properties/views/ABView: could not find ViewClass\"\n               );\n               return null;\n            }\n            return ViewClass.common();\n         }\n\n         editorPopulate(field) {\n            console.error(\"!!! Depreciated. call populate() instead.\");\n            this.populate(field);\n         }\n\n         formValues() {\n            return $$(this.ids.component).getValues();\n         }\n\n         /**\n          * @method isValid()\n          * Verify the common ABField settings are valid before allowing\n          * us to create the new field.\n          * @return {bool}\n          */\n         isValid() {\n            /*\n// TODO:\n            var ids = this.ids;\n            var isValid = $$(ids.component).validate(),\n               colName = this.formValues()[\"columnName\"];\n\n            // validate reserve column names\n            var FC = this.FieldClass();\n            if (!FC) {\n               this.AB.notify.developer(\n                  new Error(\"Unable to resolve FieldClass\"),\n                  {\n                     context: \"ABFieldProperty: isValid()\",\n                     base: this.ids.component,\n                  }\n               );\n            }\n\n            // columnName should not be one of the reserved names:\n            if (FC?.reservedNames.indexOf(colName.trim().toLowerCase()) > -1) {\n               this.markInvalid(\"columnName\", L(\"This is a reserved name\"));\n               isValid = false;\n            }\n\n            // columnName should not be in use by other fields on this object\n            // get All fields with matching colName\n            var fieldColName = this.currentObject?.fields(\n               (f) => f.columnName == colName\n            );\n            // ignore current edit field\n            if (this._CurrentField) {\n               fieldColName = fieldColName.filter(\n                  (f) => f.id != this._CurrentField.id\n               );\n            }\n            // if any more matches, this is a problem\n            if (fieldColName.length > 0) {\n               this.markInvalid(\n                  \"columnName\",\n                  L(\"This column name is in use by another field ({0})\", [\n                     fieldColName.label,\n                  ])\n               );\n               isValid = false;\n            }\n\n            return isValid;\n*/\n         }\n\n         markInvalid(name, message) {\n            $$(this.ids.component).markInvalid(name, message);\n         }\n\n         /**\n          * @function populate\n          * populate the property form with the given ABField instance provided.\n          * @param {ABField} field\n          *        The ABFieldXXX instance that we are editing the settings for.\n          */\n         populate(view) {\n            super.populate(view);\n            let ids = this.ids;\n\n            let $col = $$(ids.columns);\n            $col?.setValue(\n               view.settings.columns || ABViewContainerDefaults.columns\n            );\n\n            // remove all the gravity counters:\n            let $grav = $$(ids.gravity);\n            $grav\n               .getParentView()\n               .queryView({ css: \"gravity_counter\" }, \"all\")\n               .map((counter) => $grav.getParentView().removeView(counter));\n\n            let numCol = $col.getValue();\n\n            if (numCol > 1) {\n               // now add gravity counters for the number of columns we have\n               for (var step = 1; step <= numCol; step++) {\n                  var pos = $grav.getParentView().index($grav);\n                  $grav.getParentView().addView(\n                     {\n                        view: \"counter\",\n                        min: 1,\n                        label: L(\"Column {0} Gravity\", [step]),\n                        labelWidth: uiConfig.labelWidthXLarge,\n                        css: \"gravity_counter\",\n                        value:\n                           view.settings.gravity &&\n                           view.settings.gravity[step - 1]\n                              ? view.settings.gravity[step - 1]\n                              : ABViewContainerDefaults.gravity,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                     pos\n                  );\n               }\n            }\n         }\n\n         requiredOnChange() {\n            // Sub Class should overwrite this if it is necessary.\n         }\n\n         // show() {\n         //    super.show();\n         //    // AppList.show();\n         // }\n\n         /**\n          * @method values\n          * return the values for this form.\n          * @return {obj}\n          */\n         values() {\n            let vals = super.values();\n            vals.settings = {};\n            vals.settings.columns = $$(this.ids.columns).getValue();\n\n            var gravity = [];\n            $$(this.ids.gravity)\n               .getParentView()\n               .queryView({ css: \"gravity_counter\" }, \"all\")\n               .map((counter) => gravity.push($$(counter).getValue()));\n            vals.settings.gravity = gravity;\n\n            return vals;\n         }\n\n         /**\n          * @method ViewClass()\n          * A method to return the proper ABViewXXX Definition.\n          * NOTE: Must be overwritten by the Child Class\n          */\n         // ViewClass() {\n         //    console.error(\"!!! Child Class has not overwritten ViewClass()\");\n         //    return null;\n         //    // return super._ViewClass(\"string\");\n         // }\n\n         // _ViewClass(key) {\n         //    var app = this.CurrentApplication;\n         //    if (!app) {\n         //       app = this.AB.applicationNew({});\n         //    }\n         //    return app.viewAll((V) => V.common().key == key)[0];\n         // }\n      };\n   }\n   return myClass;\n}\n","/*\n * ABViewDataview\n * A Property manager for our ABViewDataview definitions\n */\n\nimport FABViewDetail from \"./ABViewDetail\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nexport default function (AB) {\n   const base = \"properties_abview_dataview\";\n\n   const ABViewDetail = FABViewDetail(AB);\n   const LinkPageProperty = ABViewPropertyLinkPage(AB, base);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABViewDetail.L();\n\n   let ABViewDataviewPropertyComponentDefaults = {};\n\n   class ABViewDataviewProperty extends ABViewDetail {\n      constructor() {\n         super(base, {\n            // Put our ids here\n            xCount: \"\",\n         });\n\n         this.AB = AB;\n         ABViewDataviewPropertyComponentDefaults =\n            this.AB.Class.ABViewManager.viewClass(\"dataview\").defaultValues();\n\n         this.linkPageComponent = new LinkPageProperty(AB, base);\n      }\n\n      static get key() {\n         return \"dataview\";\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               id: ids.xCount,\n               view: \"counter\",\n               name: \"xCount\",\n               min: 1, // we cannot have 0 columns per row so lets not accept it\n               label: L(\"Items in a row\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               step: 1,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            this.linkPageComponent.ui(),\n         ]);\n      }\n\n      init() {\n         super.init(this.AB);\n\n         this.linkPageComponent.init();\n         this.linkPageComponent.on(\"change\", () => {\n            this.onChange();\n         });\n      }\n\n      populate(view) {\n         super.populate(view);\n         if (!view) return;\n\n         const ids = this.ids;\n\n         $$(ids.xCount).setValue(\n            view.settings.xCount ||\n               ABViewDataviewPropertyComponentDefaults.xCount\n         );\n\n         this.linkPageComponent.viewLoad(view);\n         this.linkPageComponent.setSettings(view.settings);\n      }\n\n      defaultValues() {\n         let values = {};\n         const ViewClass = this.ViewClass();\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const ids = this.ids;\n         let vals = super.values();\n\n         vals.settings = vals.settings ?? {};\n         vals.settings.xCount = $$(ids.xCount).getValue();\n\n         let linkSettings = this.linkPageComponent.getSettings();\n         for (let key in linkSettings) {\n            vals.settings[key] = linkSettings[key];\n         }\n\n         return vals;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"dataview\");\n      }\n   }\n\n   return ABViewDataviewProperty;\n}\n","/*\n * ABViewDetail\n * A Property manager for our ABViewDetail definitions\n */\n\nimport FABViewContainer from \"./ABViewContainer\";\n\nexport default function (AB) {\n   const ABViewContainer = FABViewContainer(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABViewContainer.L();\n\n   let ABViewDetailPropertyComponentDefaults = {};\n\n   const base = \"properties_abview_detail\";\n\n   class ABViewDetailProperty extends ABViewContainer {\n      constructor(base, ids = {}) {\n         super(\n            base,\n            Object.assign(\n               {\n                  // Put our ids here\n                  datacollection: \"\",\n                  fields: \"\",\n                  showLabel: \"\",\n                  labelPosition: \"\",\n                  labelWidth: \"\",\n                  height: \"\",\n               },\n               ids\n            )\n         );\n\n         this.AB = AB;\n         ABViewDetailPropertyComponentDefaults =\n            this.AB.Class.ABViewManager.viewClass(\"detail\").defaultValues();\n      }\n\n      static get key() {\n         return \"detail\";\n      }\n\n      ui(elements) {\n         const ids = this.ids;\n\n         let _ui = [\n            {\n               id: ids.datacollection,\n               name: \"datacollection\",\n               view: \"richselect\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               skipAutoSave: true,\n               on: {\n                  onChange: (newId, oldId) => {\n                     this.selectSource(newId, oldId);\n                  },\n               },\n            },\n            {\n               id: ids.fields,\n               name: \"fields\",\n               view: \"list\",\n               select: false,\n               minHeight: 200,\n               template: this.listTemplate,\n               type: {\n                  markCheckbox: function (item) {\n                     return (\n                        \"<span class='check webix_icon fa fa-\" +\n                        (item.selected ? \"check-\" : \"\") +\n                        \"square-o'></span>\"\n                     );\n                  },\n               },\n               onClick: {\n                  check: (...params) => this.check(...params),\n               },\n            },\n            {\n               id: ids.showLabel,\n               name: \"showLabel\",\n               view: \"checkbox\",\n               label: L(\"Display Label\"),\n               labelWidth: uiConfig.labelWidthLarge,\n            },\n            {\n               id: ids.labelPosition,\n               name: \"labelPosition\",\n               view: \"richselect\",\n               label: L(\"Label Position\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [\n                  {\n                     id: \"left\",\n                     value: L(\"Left\"),\n                  },\n                  {\n                     id: \"top\",\n                     value: L(\"Top\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.labelWidth,\n               name: \"labelWidth\",\n               view: \"counter\",\n               label: L(\"Label Width\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.height,\n               name: \"height\",\n               view: \"counter\",\n               label: L(\"Height:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n         ];\n\n         // Union arrays: ._ui + .elements\n         (elements ?? []).forEach((elem) => {\n            _ui.push(elem);\n         });\n\n         return super.ui(_ui);\n      }\n\n      populate(view) {\n         super.populate(view);\n         if (!view) return;\n\n         const ids = this.ids;\n\n         const datacollectionId = view.settings?.dataviewID;\n         const SourceSelector = $$(ids.datacollection);\n\n         // Pull data collections to options\n         const dcOptions = view.application\n            .datacollectionsIncluded()\n            .filter((dc) => {\n               const obj = dc.datasource;\n               return dc.sourceType == \"object\" && obj && !obj.isImported;\n            })\n            .map((d) => {\n               let entry = { id: d.id, value: d.label };\n               if (d.sourceType == \"query\") {\n                  entry.icon = \"fa fa-filter\";\n               } else {\n                  entry.icon = \"fa fa-database\";\n               }\n               return entry;\n            });\n         SourceSelector.define(\"options\", dcOptions);\n         SourceSelector.define(\"value\", datacollectionId);\n         SourceSelector.refresh();\n\n         this.propertyUpdateFieldOptions(datacollectionId, view);\n\n         $$(ids.showLabel).setValue(\n            view.settings.showLabel ??\n               ABViewDetailPropertyComponentDefaults.showLabel\n         );\n         $$(ids.labelPosition).setValue(\n            view.settings.labelPosition ??\n               ABViewDetailPropertyComponentDefaults.labelPosition\n         );\n         $$(ids.labelWidth).setValue(\n            parseInt(view.settings.labelWidth) ??\n               ABViewDetailPropertyComponentDefaults.labelWidth\n         );\n         $$(ids.height).setValue(\n            view.settings.height >= 0\n               ? view.settings.height\n               : ABViewDetailPropertyComponentDefaults.height\n         );\n\n         // update properties when a field component is deleted\n         view?.views().forEach((v) => {\n            if (v instanceof this.AB.Class.ABViewDetailItem)\n               v.once(\"destroyed\", () => this.populate(view));\n         });\n      }\n\n      defaultValues() {\n         let values = {};\n         const ViewClass = this.ViewClass();\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const ids = this.ids;\n         let vals = super.values();\n\n         vals.settings = vals.settings ?? {};\n         vals.settings.dataviewID = $$(ids.datacollection).getValue();\n         vals.settings.showLabel = $$(ids.showLabel).getValue();\n         vals.settings.labelPosition = $$(ids.labelPosition).getValue();\n         vals.settings.labelWidth = $$(ids.labelWidth).getValue();\n         vals.settings.height = $$(ids.height).getValue();\n\n         return vals;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"detail\");\n      }\n\n      /**\n       * @method propertyUpdateFieldOptions\n       * Populate fields of object to select list in property\n       *\n       * @param {string} dcId - id of ABDatacollection\n       */\n      propertyUpdateFieldOptions(dcId, view) {\n         const ids = this.ids;\n         const datacollection = this.AB.datacollections(\n            (dc) => dc.id == dcId\n         )[0];\n         const object = datacollection?.datasource;\n\n         // Pull field list\n         const fieldOptions = object?.fields().map((f) => {\n            f.selected =\n               view?.views((com) => f.id == com.settings.fieldId).length > 0;\n\n            return f;\n         });\n\n         $$(ids.fields).clearAll();\n         $$(ids.fields).parse(fieldOptions ?? []);\n      }\n\n      async selectSource(dcId) {\n         const ids = this.ids;\n         // _logic.busy();\n\n         let currView = this.CurrentView;\n\n         currView.settings.dataviewID = dcId;\n\n         // clear sub views\n         let viewsToRemove = currView._views;\n         currView._views = [];\n\n         // remove all old field components\n         let allRemoves = [];\n         viewsToRemove.forEach((v) => {\n            allRemoves.push(v.destroy());\n         });\n         await Promise.all(allRemoves);\n\n         // refresh UI\n         // Update field options in property\n         this.propertyUpdateFieldOptions(dcId);\n\n         // add all fields to editor by default\n         if (currView._views.length < 1) {\n            let saveTasks = [];\n            let fields = $$(ids.fields).find({});\n            fields.reverse();\n            fields.forEach((f, index) => {\n               if (!f.selected) {\n                  const yPosition = fields.length - index - 1;\n\n                  // Add new form field\n                  const newFieldView = currView.addFieldToDetail(f, yPosition);\n                  if (newFieldView) {\n                     newFieldView.once(\"destroyed\", () =>\n                        this.populate(currView)\n                     );\n\n                     // // Call save API\n                     saveTasks.push(newFieldView.save());\n                  }\n\n                  // update item to UI list\n                  f.selected = 1;\n                  $$(ids.fields).updateItem(f.id, f);\n               }\n            });\n\n            await Promise.all(saveTasks);\n         }\n\n         // Saving\n         await currView.save();\n\n         // Finally\n         const detailView = currView.parentDetailComponent();\n         detailView?.emit(\"properties.updated\", currView);\n\n         // _logic.ready();\n         this.onChange();\n      }\n\n      listTemplate(field, common) {\n         return (\n            common.markCheckbox(field) +\n            \" #label#\".replace(\"#label#\", field.label)\n         );\n      }\n\n      check(e, fieldId) {\n         const ids = this.ids;\n         const currView = this.CurrentView;\n         const detailView = currView.parentDetailComponent();\n\n         // update UI list\n         const item = $$(ids.fields).getItem(fieldId);\n         item.selected = item.selected ? 0 : 1;\n         $$(ids.fields).updateItem(fieldId, item);\n\n         const doneFn = () => {\n            // refresh UI\n            currView.emit(\"properties.updated\", currView);\n            this.onChange();\n         };\n\n         // add a field to the form\n         if (item.selected) {\n            const fieldView = currView.addFieldToDetail(item);\n            if (fieldView) {\n               fieldView.save().then(() => {\n                  fieldView.once(\"destroyed\", () => this.populate(currView));\n                  currView.viewInsert(fieldView).then(() => {\n                     doneFn();\n                  });\n               });\n            }\n         }\n         // remove field in the form\n         else {\n            const fieldView = detailView.views(\n               (c) => c.settings.fieldId == fieldId\n            )[0];\n\n            if (fieldView) {\n               fieldView.destroy();\n               currView.viewRemove(fieldView).then(() => {\n                  doneFn();\n               });\n            }\n         }\n      }\n   }\n\n   return ABViewDetailProperty;\n}\n","/*\n * ABViewDocxBuilder\n * A Property manager for our ABViewDocxBuilder definitions\n */\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   let ABViewDocxBuilderPropertyComponentDefaults = {};\n\n   const base = \"properties_abview_docxBuilder\";\n\n   class ABViewDocxBuilderProperty extends ABView {\n      constructor() {\n         super(base, {\n            // Put our ids here\n            buttonlabel: \"\",\n            buttonPosition: \"\",\n            datacollection: \"\",\n            docxFile: \"\",\n            docxDownload: \"\",\n            filelabel: \"\",\n            language: \"\",\n            toolbarBackground: \"\",\n            width: 0,\n         });\n\n         this.AB = AB;\n         ABViewDocxBuilderPropertyComponentDefaults =\n            this.AB.Class.ABViewManager.viewClass(\n               \"docxBuilder\"\n            ).defaultValues();\n      }\n\n      static get key() {\n         return \"docxBuilder\";\n      }\n\n      ui() {\n         //  const ids = this.ids;\n\n         // Populate language options\n         const langOptions = this.AB.Multilingual.languages().map((lang) => {\n            return {\n               id: lang.language_code,\n               value: lang.language_label,\n            };\n         });\n\n         // docxFile: \"\",\n         // docxDownload: \"\",\n         // toolbarBackground: \"\",\n         // width: 0,\n\n         return super.ui([\n            {\n               view: \"fieldset\",\n               label: L(\"Data:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: this.ids.datacollection,\n                        name: \"datacollection\",\n                        view: \"richselect\",\n                        // view: \"multicombo\",\n                        label: L(\"Data Source\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n\n            {\n               view: \"fieldset\",\n               label: L(\"Template file:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"DOCX file:\"),\n                              css: \"ab-text-bold\",\n                              width: uiConfig.labelWidthXLarge,\n                           },\n                           {\n                              id: this.ids.docxFile,\n                              view: \"uploader\",\n                              value: L(\"Upload\"),\n                              name: \"docxFile\",\n                              apiOnly: true,\n                              inputName: \"file\",\n                              multiple: false,\n                              on: {\n                                 onBeforeFileAdd: (item) => {\n                                    return this.validateType(item);\n                                 },\n\n                                 onFileUpload: (file, response) => {\n                                    this.uploadedFile(file);\n                                 },\n\n                                 onFileUploadError: (file, response) => {},\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        id: this.ids.filelabel,\n                        name: \"filelabel\",\n                        view: \"text\",\n                        label: L(\"Filename\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.docxDownload,\n                        name: \"docxDownload\",\n                        view: \"button\",\n                        type: \"icon\",\n                        css: \"webix_primary\",\n                        icon: \"fa fa-file-word-o\",\n                        label: L(\"Download Template File\"),\n                        click: () => {\n                           this.downloadFile();\n                        },\n                     },\n                  ],\n               },\n            },\n\n            {\n               view: \"fieldset\",\n               label: L(\"Language:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: this.ids.language,\n                        name: \"language\",\n                        view: \"richselect\",\n                        label: L(\"Language\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        options: langOptions,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n\n            {\n               view: \"fieldset\",\n               label: L(\"Customize Display:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: this.ids.buttonlabel,\n                        name: \"buttonlabel\",\n                        view: \"text\",\n                        label: L(\"Label\"),\n                        labelWidth: uiConfig.labelWidthXLarge,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n\n                     {\n                        id: this.ids.width,\n                        view: \"counter\",\n                        name: \"width\",\n                        label: L(\"Width:\"),\n                        labelWidth: uiConfig.labelWidthXLarge,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.toolbarBackground,\n                        view: \"richselect\",\n                        name: \"toolbarBackground\",\n                        label: L(\"Page background:\"),\n                        labelWidth: uiConfig.labelWidthXLarge,\n                        options: [\n                           {\n                              id: \"ab-background-default\",\n                              value: L(\"White (default)\"),\n                           },\n                           {\n                              id: \"webix_dark\",\n                              value: L(\"Dark\"),\n                           },\n                           {\n                              id: \"ab-background-lightgray\",\n                              value: L(\"Gray\"),\n                           },\n                        ],\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n\n                     {\n                        id: this.ids.buttonPosition,\n                        view: \"richselect\",\n                        name: \"buttonPosition\",\n                        label: L(\"Button Position:\"),\n                        labelWidth: uiConfig.labelWidthXLarge,\n                        options: [\n                           {\n                              id: \"left\",\n                              value: L(\"Left (default)\"),\n                           },\n                           {\n                              id: \"center\",\n                              value: L(\"Centered\"),\n                           },\n                           {\n                              id: \"right\",\n                              value: L(\"Right\"),\n                           },\n                        ],\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n         ]);\n      }\n\n      populate(view) {\n         super.populate(view);\n         if (!view) return;\n\n         const ids = this.ids;\n\n         const $DcSelector = $$(ids.datacollection);\n\n         const selectedDvId = view.settings.dataviewID ?? null;\n\n         $$(ids.toolbarBackground).setValue(\n            view.settings.toolbarBackground ??\n               ABViewDocxBuilderPropertyComponentDefaults.toolbarBackground\n         );\n         $$(ids.buttonPosition).setValue(\n            view.settings.buttonPosition ??\n               ABViewDocxBuilderPropertyComponentDefaults.buttonPosition\n         );\n\n         // Pull data views to options\n         const dcOptions = view.application\n            .datacollectionsIncluded()\n            .map((dc) => {\n               return {\n                  id: dc.id,\n                  value: dc.label,\n               };\n            });\n\n         $DcSelector.define(\"options\", dcOptions);\n         $DcSelector.define(\"value\", selectedDvId);\n         $DcSelector.refresh();\n\n         $$(ids.language).setValue(\n            view.settings.language ??\n               ABViewDocxBuilderPropertyComponentDefaults.language\n         );\n\n         $$(ids.filelabel).setValue(view.filelabel ?? view.settings.filelabel);\n         $$(ids.buttonlabel).setValue(\n            view.buttonlabel ?? view.settings.buttonlabel\n         );\n         $$(ids.width).setValue(view.settings.width);\n\n         if (view.settings.filename) {\n            $$(ids.docxDownload).show();\n         } else {\n            $$(ids.docxDownload).hide();\n         }\n      }\n\n      defaultValues() {\n         let values = {};\n         const ViewClass = this.ViewClass();\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const ids = this.ids;\n         let vals = super.values();\n\n         vals.settings = vals.settings ?? {};\n         vals.settings.buttonlabel = $$(ids.buttonlabel).getValue();\n         vals.settings.dataviewID = $$(ids.datacollection).getValue();\n         vals.settings.width = $$(ids.width).getValue();\n         vals.filelabel = $$(ids.filelabel).getValue();\n         vals.settings.language = $$(ids.language).getValue();\n         vals.settings.toolbarBackground = $$(ids.toolbarBackground).getValue();\n         vals.settings.buttonPosition = $$(ids.buttonPosition).getValue();\n\n         return vals;\n      }\n\n      /**\n       * @method ViewClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"docxBuilder\");\n      }\n\n      validateType(item) {\n         const ids = this.ids;\n\n         // verify file type\n         const acceptableTypes = [\"docx\"];\n         const type = item.type.toLowerCase();\n         if (acceptableTypes.indexOf(type) == -1) {\n            this.AB.Webix.message(\n               L(`Only [${acceptableTypes.join(\", \")}] files are supported`)\n            );\n            return false;\n         } else {\n            // set upload url to uploader\n            const currView = this.CurrentView;\n            const uploadUrl = currView.uploadUrl();\n\n            $$(ids.docxFile).define(\"upload\", uploadUrl);\n            $$(ids.docxFile).refresh();\n\n            return true;\n         }\n      }\n\n      uploadedFile(fileInfo) {\n         if (!fileInfo || !fileInfo.data) return;\n\n         const ids = this.ids;\n         let currView = this.CurrentView;\n         currView.settings.filename = fileInfo.data.uuid;\n         currView.filelabel = fileInfo.name;\n\n         $$(ids.filelabel).setValue(currView.filelabel);\n         $$(ids.docxDownload).show();\n      }\n\n      downloadFile() {\n         const currView = this.CurrentView;\n         const url = currView.downloadUrl();\n\n         fetch(url)\n            .then((response) => response.blob())\n            .then((blob) => {\n               currView.letUserDownload(blob, currView.filelabel);\n            });\n      }\n   }\n\n   return ABViewDocxBuilderProperty;\n}\n","/*\n * ABViewForm\n * A Property manager for our ABViewForm definitions\n */\n\nimport FABViewContainer from \"./ABViewContainer\";\nimport FABViewRuleListFormRecordRules from \"../rules/ABViewRuleListFormRecordRules\";\nimport FABViewRuleListFormSubmitRules from \"../rules/ABViewRuleListFormSubmitRules\";\n\nexport default function (AB) {\n   const ABViewContainer = FABViewContainer(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABViewContainer.L();\n\n   var ABViewFormPropertyComponentDefaults = {};\n\n   const base = \"properties_abview_form\";\n\n   const PopupRecordRule = FABViewRuleListFormRecordRules(\n      AB,\n      `${base}_popupRecordRule`\n   );\n\n   const PopupSubmitRule = FABViewRuleListFormSubmitRules(\n      AB,\n      `${base}_popupSubmitRule`\n   );\n\n   class ABViewFormProperty extends ABViewContainer {\n      constructor() {\n         super(base, {\n            // Put our ids here\n            datacollection: \"\",\n            fields: \"\",\n            showLabel: \"\",\n            labelPosition: \"\",\n            labelWidth: \"\",\n            height: \"\",\n            clearOnLoad: \"\",\n            clearOnSave: \"\",\n\n            buttonSubmitRules: \"\",\n            buttonRecordRules: \"\",\n         });\n\n         this.AB = AB;\n         ABViewFormPropertyComponentDefaults =\n            this.AB.Class.ABViewManager.viewClass(\"form\").defaultValues();\n      }\n\n      static get key() {\n         return \"form\";\n      }\n\n      ui() {\n         let ids = this.ids;\n\n         return super.ui([\n            {\n               id: ids.datacollection,\n               view: \"richselect\",\n               name: \"datacollection\",\n               label: L(\"Datacollection\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               skipAutoSave: true,\n               on: {\n                  onChange: (newId, oldId) => {\n                     this.selectSource(newId, oldId);\n                  },\n               },\n            },\n\n            {\n               view: \"fieldset\",\n               label: L(\"Form Fields:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.fields,\n                        view: \"list\",\n                        name: \"fields\",\n\n                        select: false,\n                        minHeight: 200,\n                        template: (...params) => {\n                           return this.listTemplate(...params);\n                        },\n                        type: {\n                           markCheckbox: function (item) {\n                              return (\n                                 \"<span class='check webix_icon fa fa-\" +\n                                 (item.selected ? \"check-\" : \"\") +\n                                 \"square-o'></span>\"\n                              );\n                           },\n                        },\n                        onClick: {\n                           check: (...params) => {\n                              return this.check(...params);\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n            {\n               id: ids.showLabel,\n               name: \"showLabel\",\n               view: \"checkbox\",\n               label: L(\"Display Label\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               click: () => {\n                  this.onChange();\n               },\n            },\n            {\n               id: ids.labelPosition,\n               view: \"richselect\",\n               name: \"labelPosition\",\n\n               label: L(\"Label Position\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               options: [\n                  {\n                     id: \"left\",\n                     value: L(\"Left\"),\n                  },\n                  {\n                     id: \"top\",\n                     value: L(\"Top\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.labelWidth,\n               view: \"counter\",\n               name: \"labelWidth\",\n\n               label: L(\"Label Width\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.height,\n               view: \"counter\",\n               name: \"height\",\n               label: L(\"Height\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.clearOnLoad,\n               view: \"checkbox\",\n               name: \"clearOnLoad\",\n\n               label: L(\"Clear on load\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.clearOnSave,\n               view: \"checkbox\",\n               name: \"clearOnSave\",\n               label: L(\"Clear on save\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               view: \"fieldset\",\n               label: L(\"Rules:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Submit Rules:\"),\n                              width: uiConfig.labelWidthLarge,\n                           },\n                           {\n                              id: ids.buttonSubmitRules,\n                              view: \"button\",\n                              css: \"webix_primary\",\n                              name: \"buttonSubmitRules\",\n                              label: L(\"Settings\"),\n                              icon: \"fa fa-gear\",\n                              type: \"icon\",\n                              badge: 0,\n                              click: () => {\n                                 this.submitRuleShow();\n                              },\n                           },\n                        ],\n                     },\n                     // {\n                     //    cols: [\n                     //       {\n                     //          view: \"label\",\n                     //          label: L(\"Display Rules:\"),\n                     //          width: uiConfig.labelWidthLarge,\n                     //       },\n                     //       {\n                     //          view: \"button\",\n                     //          name: \"buttonDisplayRules\",\n                     //          css: \"webix_primary\",\n                     //          label: L(\"Settings\"),\n                     //          icon: \"fa fa-gear\",\n                     //          type: \"icon\",\n                     //          badge: 0,\n                     //          click: () => {\n                     //             this.displayRuleShow();\n                     //          },\n                     //       },\n                     //    ],\n                     // },\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Record Rules:\"),\n                              width: uiConfig.labelWidthLarge,\n                           },\n                           {\n                              id: ids.buttonRecordRules,\n                              view: \"button\",\n                              name: \"buttonRecordRules\",\n                              css: \"webix_primary\",\n                              label: L(\"Settings\"),\n                              icon: \"fa fa-gear\",\n                              type: \"icon\",\n                              badge: 0,\n                              click: () => {\n                                 this.recordRuleShow();\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               },\n            },\n         ]);\n      }\n\n      async init(AB) {\n         super.init(AB);\n\n         webix.extend($$(this.ids.component), webix.ProgressBar);\n\n         let allInits = [];\n         allInits.push(PopupRecordRule.init(AB));\n         PopupRecordRule.on(\"save\", () => {\n            this.onChange();\n            this.populateBadgeNumber();\n         });\n         allInits.push(PopupSubmitRule.init(AB));\n         PopupSubmitRule.on(\"save\", (/* settings */) => {\n            this.onChange();\n            this.populateBadgeNumber();\n         });\n\n         return Promise.all(allInits);\n      }\n\n      populate(view) {\n         super.populate(view);\n         let ids = this.ids;\n         if (!view) return;\n\n         let formCom = view.parentFormComponent();\n         let datacollectionId = formCom.settings.dataviewID\n            ? formCom.settings.dataviewID\n            : null;\n         var SourceSelector = $$(ids.datacollection);\n\n         // Pull data collections to options\n         var dcOptions = view.application\n            .datacollectionsIncluded()\n            .filter((dc) => {\n               var obj = dc.datasource;\n               return dc.sourceType == \"object\" && obj && !obj.isImported;\n            })\n            .map((d) => {\n               let entry = { id: d.id, value: d.label };\n               if (d.sourceType == \"query\") {\n                  entry.icon = \"fa fa-filter\";\n               } else {\n                  entry.icon = \"fa fa-database\";\n               }\n               return entry;\n            });\n         SourceSelector.define(\"options\", dcOptions);\n         SourceSelector.define(\"value\", datacollectionId);\n         SourceSelector.refresh();\n\n         this.propertyUpdateFieldOptions(datacollectionId);\n\n         // update properties when a field component is deleted\n         view.views().forEach((v) => {\n            if (v instanceof this.AB.Class.ABViewFormComponent)\n               v.once(\"destroyed\", () => this.populate(view));\n         });\n\n         SourceSelector.enable();\n         $$(ids.showLabel).setValue(view.settings.showLabel);\n         $$(ids.labelPosition).setValue(\n            view.settings.labelPosition ||\n               ABViewFormPropertyComponentDefaults.labelPosition\n         );\n         $$(ids.labelWidth).setValue(\n            view.settings.labelWidth ||\n               ABViewFormPropertyComponentDefaults.labelWidth\n         );\n         $$(ids.height).setValue(\n            view.settings.height || ABViewFormPropertyComponentDefaults.height\n         );\n         $$(ids.clearOnLoad).setValue(\n            view.settings.clearOnLoad ||\n               ABViewFormPropertyComponentDefaults.clearOnLoad\n         );\n         $$(ids.clearOnSave).setValue(\n            view.settings.clearOnSave ||\n               ABViewFormPropertyComponentDefaults.clearOnSave\n         );\n\n         // NOTE: load the object and view BEFORE the .fromSettings();\n         PopupRecordRule.objectLoad(this.CurrentObject);\n         PopupRecordRule.viewLoad(view);\n         PopupRecordRule.fromSettings(view.settings.recordRules || []);\n\n         PopupSubmitRule.objectLoad(this.CurrentObject);\n         PopupSubmitRule.viewLoad(view);\n         PopupSubmitRule.fromSettings(view.settings.submitRules || []);\n\n         // this.propertyUpdateRules(ids, view, datacollectionId);\n         this.populateBadgeNumber();\n\n         // when a change is made in the properties the popups need to reflect the change\n         this.updateEventIds = this.updateEventIds || {}; // { viewId: boolean, ..., viewIdn: boolean }\n         if (!this.updateEventIds[view.id]) {\n            this.updateEventIds[view.id] = true;\n\n            view.addListener(\"properties.updated\", () => {\n               this.populateBadgeNumber();\n            });\n         }\n      }\n\n      defaultValues() {\n         let values = {};\n         var ViewClass = this.ViewClass();\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         let ids = this.ids;\n         let vals = super.values();\n\n         vals.settings = vals.settings || {};\n\n         vals.settings.dataviewID = $$(ids.datacollection).getValue();\n         vals.settings.showLabel = $$(ids.showLabel).getValue();\n         vals.settings.labelPosition =\n            $$(ids.labelPosition).getValue() ||\n            ABViewFormPropertyComponentDefaults.labelPosition;\n         vals.settings.labelWidth =\n            $$(ids.labelWidth).getValue() ||\n            ABViewFormPropertyComponentDefaults.labelWidth;\n         vals.settings.height = $$(ids.height).getValue();\n         vals.settings.clearOnLoad = $$(ids.clearOnLoad).getValue();\n         vals.settings.clearOnSave = $$(ids.clearOnSave).getValue();\n\n         vals.settings.recordRules = PopupRecordRule.toSettings();\n         vals.settings.submitRules = PopupSubmitRule.toSettings();\n         return vals;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"carousel\");\n      }\n\n      //\n      //\n      //\n\n      busy() {\n         $$(this.ids.component)?.showProgress?.({ type: \"icon\" });\n      }\n\n      check(e, fieldId) {\n         const ids = this.ids;\n         let currView = this.CurrentView;\n         let formView = currView.parentFormComponent();\n\n         // update UI list\n         let item = $$(ids.fields).getItem(fieldId);\n         item.selected = item.selected ? 0 : 1;\n         $$(ids.fields).updateItem(fieldId, item);\n\n         let doneFn = () => {\n            formView\n               .refreshDefaultButton(ids)\n               .save()\n               .then(() => {\n                  // refresh UI\n                  currView.emit(\"properties.updated\", currView);\n                  this.onChange();\n               });\n\n            // // trigger a save()\n            // this.propertyEditorSave(ids, currView);\n         };\n\n         // add a field to the form\n         if (item.selected) {\n            let fieldView = currView.addFieldToForm(item);\n            if (fieldView) {\n               fieldView.save().then(() => {\n                  fieldView.once(\"destroyed\", () => this.populate(currView));\n                  currView.viewInsert(fieldView).then(() => {\n                     doneFn();\n                  });\n               });\n            }\n         }\n         // remove field in the form\n         else {\n            let fieldView = formView\n               .fieldComponents()\n               .filter((c) => c.settings.fieldId == fieldId)[0];\n            if (fieldView) {\n               // let remainingViews = formView.views(c => c.settings.fieldId != fieldId);\n               // formView._views = remainingViews;\n\n               fieldView.destroy();\n               currView.viewRemove(fieldView).then(() => {\n                  doneFn();\n               });\n            }\n         }\n      }\n\n      populateBadgeNumber(/* */) {\n         const ids = this.ids;\n\n         let view = this.CurrentView;\n\n         if (!view) return;\n\n         if (view.settings.submitRules) {\n            $$(ids.buttonSubmitRules).define(\n               \"badge\",\n               view.settings.submitRules.length || null\n            );\n         } else {\n            $$(ids.buttonSubmitRules).define(\"badge\", null);\n         }\n         $$(ids.buttonSubmitRules).refresh();\n\n         // if (view.settings.displayRules) {\n         //    $$(ids.buttonDisplayRules).define(\n         //       \"badge\",\n         //       view.settings.displayRules.length || null\n         //    );\n         //    $$(ids.buttonDisplayRules).refresh();\n         // } else {\n         //    $$(ids.buttonDisplayRules).define(\"badge\", null);\n         //    $$(ids.buttonDisplayRules).refresh();\n         // }\n\n         if (view.settings.recordRules) {\n            $$(ids.buttonRecordRules).define(\n               \"badge\",\n               view.settings.recordRules.length || null\n            );\n         } else {\n            $$(ids.buttonRecordRules).define(\"badge\", null);\n         }\n         $$(ids.buttonRecordRules).refresh();\n      }\n\n      ready() {\n         $$(this.ids.component)?.hideProgress?.();\n      }\n\n      recordRuleShow() {\n         PopupRecordRule.fromSettings(this.CurrentView.settings.recordRules);\n         PopupRecordRule.show();\n      }\n\n      submitRuleShow() {\n         PopupSubmitRule.fromSettings(this.CurrentView.settings.submitRules);\n         PopupSubmitRule.show();\n      }\n\n      listTemplate(field, common) {\n         let currView = this.CurrentView;\n\n         // disable in form\n         var fieldComponent = field.formComponent();\n         if (fieldComponent == null)\n            return `<i class='fa fa-times'></i>  ${field.label} <div class='ab-component-form-fields-component-info'> Disable </div>`;\n\n         var componentKey = fieldComponent.common().key;\n         var formComponent = currView.application.viewAll(\n            (v) => v.common().key == componentKey\n         )[0];\n\n         return `${common.markCheckbox(field)} ${\n            field.label\n         } <div class='ab-component-form-fields-component-info'> <i class='fa fa-${\n            formComponent ? formComponent.common().icon : \"fw\"\n         }'></i> ${\n            formComponent ? L(formComponent.common().labelKey) : \"\"\n         } </div>`;\n      }\n\n      /**\n       * @method propertyUpdateFieldOptions\n       * Populate fields of object to select list in property\n       *\n       * @param {ABViewForm} view - the current component\n       * @param {string} dcId - id of ABDatacollection\n       */\n      propertyUpdateFieldOptions(dcId) {\n         const ids = this.ids;\n         var formComponent = this.CurrentView.parentFormComponent();\n         var existsFields = formComponent.fieldComponents();\n         var datacollection = this.AB.datacollectionByID(dcId);\n         var object = datacollection ? datacollection.datasource : null;\n\n         // Pull field list\n         var fieldOptions = [];\n         if (object != null) {\n            fieldOptions = object.fields().map((f) => {\n               f.selected =\n                  existsFields.filter((com) => {\n                     return f.id == com.settings.fieldId;\n                  }).length > 0;\n\n               return f;\n            });\n\n            this.objectLoad(object);\n         }\n\n         $$(ids.fields).clearAll();\n         $$(ids.fields).parse(fieldOptions);\n      }\n\n      refreshDefaultButton() {\n         const ids = this.ids;\n\n         // If default button is not exists, then skip this\n         let defaultButton = this.views(\n            (v) => v instanceof this.ABViewFormButton && v.settings.isDefault\n         )[0];\n\n         // Add a default button\n         if (defaultButton == null) {\n            defaultButton = ABViewFormButton.newInstance(\n               this.application,\n               this\n            );\n            defaultButton.settings.isDefault = true;\n         }\n         // Remove default button from array, then we will add it to be the last item later (.push)\n         else {\n            this._views = this.views(\n               (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n            );\n         }\n\n         // Calculate position Y of the default button\n         let yList = this.views().map((v) => (v.position.y || 0) + 1);\n         yList.push(this._views.length || 0);\n         yList.push($$(ids.fields).length || 0);\n         let posY = Math.max(...yList);\n\n         // Update to be the last item\n         defaultButton.position.y = posY;\n\n         // Keep the default button is always the last item of array\n         this._views.push(defaultButton);\n\n         return defaultButton;\n      }\n\n      selectSource(dcId /*, oldDcId */) {\n         // TODO : warning message\n         const ids = this.ids;\n         this.busy();\n\n         let currView = this.CurrentView;\n         let formView = currView.parentFormComponent();\n\n         currView.settings.dataviewID = dcId;\n\n         // clear sub views\n         var viewsToRemove = currView._views;\n         currView._views = [];\n\n         return (\n            Promise.resolve()\n               .then(() => {\n                  var allRemoves = [];\n                  viewsToRemove.forEach((v) => {\n                     allRemoves.push(v.destroy());\n                  });\n                  return Promise.all(allRemoves);\n               })\n               // .then(() => {\n               //    // remove all old components\n               //    let destroyTasks = [];\n               //    if (oldDcId != null) {\n               //       let oldComps = formView.views();\n               //       oldComps.forEach(child => destroyTasks.push(() => child.destroy()));\n               //    }\n\n               //    return destroyTasks.reduce((promiseChain, currTask) => {\n               //       return promiseChain.then(currTask);\n               //    }, Promise.resolve([]));\n               // })\n               .then(() => {\n                  // refresh UI\n                  // formView.emit('properties.updated', currView);\n\n                  // Update field options in property\n                  this.propertyUpdateFieldOptions(dcId);\n\n                  // add all fields to editor by default\n                  if (currView._views.length > 0) return Promise.resolve();\n\n                  let saveTasks = [];\n                  let fields = $$(ids.fields).find({});\n                  fields.reverse();\n                  fields.forEach((f, index) => {\n                     if (!f.selected) {\n                        let yPosition = fields.length - index - 1;\n\n                        // Add new form field\n                        let newFieldView = currView.addFieldToForm(\n                           f,\n                           yPosition\n                        );\n                        if (newFieldView) {\n                           newFieldView.once(\"destroyed\", () =>\n                              this.populate(currView)\n                           );\n\n                           // // Call save API\n                           saveTasks.push(newFieldView.save());\n                        }\n\n                        // update item to UI list\n                        f.selected = 1;\n                        $$(ids.fields).updateItem(f.id, f);\n                     }\n                  });\n\n                  let defaultButton = formView.refreshDefaultButton(ids);\n                  if (defaultButton) saveTasks.push(defaultButton.save());\n\n                  return Promise.all(saveTasks);\n               })\n               // Saving\n               .then(() => {\n                  //// NOTE: the way the .addFieldToForm() works, it will prevent\n                  //// the typical field.save() -> triggering the form.save() on a\n                  //// new Field.  So once all our field.saves() are finished, we\n                  //// need to perform a form.save() to persist the changes.\n                  return currView.save();\n               })\n               // Finally\n               .then(() => {\n                  // refresh UI\n                  formView.emit(\"properties.updated\", currView);\n\n                  // Update field options in property\n                  this.propertyUpdateRules(ids, currView, dcId);\n\n                  this.ready();\n                  this.onChange();\n                  return Promise.resolve();\n               })\n         );\n      }\n   }\n\n   return ABViewFormProperty;\n}\n","/*\n * ABViewGrid\n * A Property manager for our ABViewGrid definitions\n */\n\nimport FABView from \"./ABView\";\n\nimport FPopupCountFields from \"../../ui_work_object_workspace_popupCountColumns\";\nimport FPopupFrozenColumns from \"../../ui_work_object_workspace_popupFrozenColumns\";\nimport FPopupHideFields from \"../../ui_work_object_workspace_popupHideFields\";\nimport FPopupSummaryFields from \"../../ui_work_object_workspace_popupSummaryColumns\";\n\nimport FABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport FABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nexport default function (AB) {\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   const base = \"properties_abview_grid\";\n   const ABViewPropertyFilterData = FABViewPropertyFilterData(AB, base);\n   const PopupFilterMenu = new ABViewPropertyFilterData();\n\n   const LinkPageHelper = new FABViewPropertyLinkPage(AB, base);\n\n   class ABViewGridProperty extends ABView {\n      constructor() {\n         super(base, {\n            // Put our ids here\n            isEditable: \"\",\n            massUpdate: \"\",\n            allowDelete: \"\",\n            isSortable: \"\",\n            isExportable: \"\",\n\n            datacollection: \"\",\n\n            groupBy: \"\",\n            groupByList: \"\",\n\n            buttonFieldsVisible: \"\",\n            buttonFieldsFreeze: \"\",\n            buttonSummaryFields: \"\",\n            buttonCountFields: \"\",\n            height: \"\",\n            hideHeader: \"\",\n            labelAsField: \"\",\n            hideButtons: \"\",\n         });\n\n         this._preFilterSettings = null;\n         // {json}\n         // The settings that were in the Filter popup when we chose to\n         // display them.  We will use these values to undo any modifications\n         // if the user clicks [cancel] or [close];\n\n         this.linkPageComponent = new LinkPageHelper();\n\n         this.PopupCountColumnsComponent = FPopupCountFields(\n            AB,\n            `${base}_count`\n         );\n         this.PopupCountColumnsComponent.on(\"changed\", (settings) => {\n            this.badgesCount(settings);\n            this.onChange();\n         });\n\n         this.PopupFrozenColumnsComponent = new FPopupFrozenColumns(\n            AB,\n            `${base}_frozenFields`\n         );\n         this.PopupFrozenColumnsComponent.on(\"changed\", (settings) => {\n            this.badgesFrozen(settings);\n            this.PopupHideFieldComponent.setFrozenColumnID(settings);\n            this.onChange();\n         });\n\n         this.PopupHideFieldComponent = FPopupHideFields(\n            AB,\n            `${base}_hideFields`\n         );\n         this.PopupHideFieldComponent.on(\"changed\", (settings = []) => {\n            this.badgesHidden(settings);\n            this.PopupFrozenColumnsComponent.setHiddenFields(settings);\n            this.onChange();\n         });\n\n         this.PopupSummaryColumnsComponent = FPopupSummaryFields(\n            AB,\n            `${base}_summary`\n         );\n         this.PopupSummaryColumnsComponent.on(\"changed\", (settings) => {\n            this.badgesSummary(settings);\n            this.onChange();\n         });\n      }\n\n      static get key() {\n         return \"grid\";\n      }\n\n      ui() {\n         let ids = this.ids;\n         let _this = this;\n\n         return super.ui([\n            {\n               view: \"fieldset\",\n               label: L(\"Grid Properties:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.isEditable,\n                        view: \"checkbox\",\n                        name: \"isEditable\",\n                        labelRight: L(\"User can edit in grid.\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        click: () => {\n                           this.onChange();\n                        },\n                     },\n                     {\n                        id: ids.massUpdate,\n                        view: \"checkbox\",\n                        name: \"massUpdate\",\n                        labelRight: L(\n                           \"User can edit multiple items at one time.\"\n                        ),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        click: () => {\n                           this.onChange();\n                        },\n                     },\n                     {\n                        id: ids.allowDelete,\n                        view: \"checkbox\",\n                        name: \"allowDelete\",\n                        labelRight: L(\"User can delete records.\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        click: () => {\n                           this.onChange();\n                        },\n                     },\n                     {\n                        id: ids.isSortable,\n                        view: \"checkbox\",\n                        name: \"isSortable\",\n                        labelRight: L(\"User can sort records.\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        click: () => {\n                           this.onChange();\n                        },\n                     },\n                     {\n                        id: ids.isExportable,\n                        view: \"checkbox\",\n                        name: \"isExportable\",\n                        labelRight: L(\"User can export.\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        click: () => {\n                           this.onChange();\n                        },\n                     },\n                  ],\n               },\n            },\n            {\n               view: \"fieldset\",\n               label: L(\"Grid Data:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.datacollection,\n                        view: \"richselect\",\n                        name: \"datacollection\",\n                        label: L(\"Datacollection:\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        options: [],\n                        on: {\n                           onChange: (newv, oldv) => {\n                              if (newv != oldv) {\n                                 this.linkPageComponent.clear();\n\n                                 let currDC =\n                                    this.CurrentView?.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 // disallow edit data of query\n                                 if (currDC && currDC.sourceType == \"query\") {\n                                    $$(ids.isEditable).setValue(false);\n                                    $$(ids.massUpdate).setValue(false);\n                                    $$(ids.allowDelete).setValue(false);\n                                    $$(ids.isEditable).disable();\n                                    $$(ids.massUpdate).disable();\n                                    $$(ids.allowDelete).disable();\n                                 } else {\n                                    $$(ids.isEditable).enable();\n                                    $$(ids.massUpdate).enable();\n                                    $$(ids.allowDelete).enable();\n                                 }\n\n                                 this.refreshGroupBy(currDC);\n\n                                 this.onChange();\n                              }\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n            {\n               view: \"fieldset\",\n               label: L(\"Group:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.groupBy,\n                        view: \"multiselect\",\n                        name: \"groupBy\",\n                        label: L(\"Group by:\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        options: [],\n                        on: {\n                           onChange: (newV /*, oldV */) => {\n                              this.refreshGroupByList(newV);\n                              this.onChange();\n                           },\n                        },\n                     },\n                     {\n                        id: ids.groupByList,\n                        view: \"list\",\n                        name: \"groupByList\",\n                        drag: true,\n                        data: [],\n                        height: 200,\n                        template:\n                           \"<span class='fa fa-sort'></span>&nbsp;&nbsp; #value#\",\n                        on: {\n                           onAfterDrop: () => {\n                              // let currView = _logic.currentEditObject();\n                              // this.propertyEditorSave(ids, currView);\n                              this.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n            this.linkPageComponent.ui(),\n            {\n               view: \"fieldset\",\n               label: L(\"Customize Display:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Hidden Fields:\"),\n                              css: \"ab-text-bold\",\n                              width: uiConfig.labelWidthXLarge,\n                           },\n                           {\n                              id: ids.buttonFieldsVisible,\n                              view: \"button\",\n                              name: \"buttonFieldsVisible\",\n                              label: L(\"Settings\"),\n                              icon: \"fa fa-gear\",\n                              type: \"icon\",\n                              click: function () {\n                                 _this.PopupHideFieldComponent.show(this.$view);\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Filter Option:\"),\n                              css: \"ab-text-bold\",\n                              width: uiConfig.labelWidthXLarge,\n                           },\n                           {\n                              id: ids.buttonFilterData,\n                              view: \"button\",\n                              name: \"buttonFilterData\",\n                              label: L(\"Settings\"),\n                              icon: \"fa fa-gear\",\n                              type: \"icon\",\n                              click: () => {\n                                 this.filter_property_popup.show();\n                                 // PopupFilterMenu.show(this.$view);\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Freeze Columns:\"),\n                              css: \"ab-text-bold\",\n                              width: uiConfig.labelWidthXLarge,\n                           },\n                           {\n                              id: ids.buttonFieldsFreeze,\n                              view: \"button\",\n                              name: \"buttonFieldsFreeze\",\n                              label: L(\"Settings\"),\n                              icon: \"fa fa-gear\",\n                              type: \"icon\",\n                              click: function () {\n                                 _this.PopupFrozenColumnsComponent.show(\n                                    this.$view\n                                 );\n                              },\n                           },\n                        ],\n                     },\n\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Summary Fields:\"),\n                              css: \"ab-text-bold\",\n                              width: uiConfig.labelWidthXLarge,\n                           },\n                           {\n                              id: ids.buttonSummaryFields,\n                              view: \"button\",\n                              name: \"buttonSummaryFields\",\n                              label: L(\"Settings\"),\n                              icon: \"fa fa-gear\",\n                              type: \"icon\",\n                              click: function () {\n                                 _this.PopupSummaryColumnsComponent.show(\n                                    this.$view\n                                 );\n                              },\n                           },\n                        ],\n                     },\n\n                     {\n                        cols: [\n                           {\n                              view: \"label\",\n                              label: L(\"Count Fields:\"),\n                              css: \"ab-text-bold\",\n                              width: uiConfig.labelWidthXLarge,\n                           },\n                           {\n                              id: ids.buttonCountFields,\n                              view: \"button\",\n                              name: \"buttonCountFields\",\n                              label: L(\"Settings\"),\n                              icon: \"fa fa-gear\",\n                              type: \"icon\",\n                              click: function () {\n                                 _this.PopupCountColumnsComponent.show(\n                                    this.$view\n                                 );\n                              },\n                           },\n                        ],\n                     },\n\n                     {\n                        id: ids.height,\n                        view: \"counter\",\n                        name: \"height\",\n                        label: L(\"Height:\"),\n                        labelWidth: uiConfig.labelWidthXLarge,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n\n                     {\n                        id: ids.hideHeader,\n                        view: \"checkbox\",\n                        name: \"hideHeader\",\n                        labelRight: L(\"Hide table header\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        click: () => {\n                           this.onChange();\n                        },\n                     },\n\n                     {\n                        id: ids.labelAsField,\n                        view: \"checkbox\",\n                        name: \"labelAsField\",\n                        labelRight: L(\"Show a field using label template\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        click: () => {\n                           this.onChange();\n                        },\n                     },\n\n                     {\n                        id: ids.hideButtons,\n                        view: \"checkbox\",\n                        name: \"hideButtons\",\n                        labelRight: L(\"Hide edit and view buttons\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        click: () => {\n                           this.onChange();\n                        },\n                     },\n                  ],\n               },\n            },\n            {},\n         ]);\n      }\n\n      async init(AB) {\n         super.init(AB);\n\n         // Load in all the Available Datacollections:\n         var listDC = this.CurrentApplication.datacollectionsIncluded().map(\n            (d) => {\n               let entry = { id: d.id, value: d.label };\n               if (d.sourceType == \"query\") {\n                  entry.icon = \"fa fa-filter\";\n               } else {\n                  entry.icon = \"fa fa-database\";\n               }\n               return entry;\n            }\n         );\n         $$(this.ids.datacollection).define(\"options\", listDC);\n         $$(this.ids.datacollection).refresh();\n\n         /// Filter Data Helper:\n\n         this._handler_onCancel = () => {\n            // we have to set the values BACK to what they were:\n            PopupFilterMenu.setSettings(this._preFilterSettings);\n            this.filter_property_popup.hide();\n         };\n\n         this.filter_property_popup = webix.ui({\n            view: \"window\",\n            modal: true,\n            position: \"center\",\n            resize: true,\n            width: 700,\n            height: 450,\n            css: \"ab-main-container\",\n            hidden: true,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Filter Menu\"),\n                  },\n                  {\n                     view: \"button\",\n                     autowidth: true,\n                     // width: 50,\n                     type: \"icon\",\n                     icon: \"nomargin fa fa-times\",\n                     click: this._handler_onCancel,\n                     on: {\n                        onAfterRender() {\n                           ABView.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            body: PopupFilterMenu.ui(),\n         });\n\n         PopupFilterMenu.on(\"cancel\", this._handler_onCancel);\n\n         PopupFilterMenu.on(\"save\", () => {\n            this.filter_property_popup.hide();\n            this.onChange();\n         });\n\n         let allInits = [];\n\n         allInits.push(PopupFilterMenu.init(AB));\n         allInits.push(this.linkPageComponent.init(AB));\n\n         allInits.push(this.PopupFrozenColumnsComponent.init(AB));\n         allInits.push(this.PopupHideFieldComponent.init(AB));\n         allInits.push(this.PopupSummaryColumnsComponent.init(AB));\n         allInits.push(this.PopupCountColumnsComponent.init(AB));\n\n         return Promise.all(allInits);\n      }\n\n      /**\n       * @method badgesCount()\n       * Set the badge count for the Count Fields button.\n       * @param {array} settings\n       *        An array of the ABFieldXXX.id that should be hidden.\n       */\n      badgesCount(settings) {\n         let badgeCount = settings.length;\n         if (badgeCount == 0) badgeCount = false;\n         $$(this.ids.buttonCountFields).config.badge = badgeCount;\n         $$(this.ids.buttonCountFields).refresh();\n      }\n\n      /**\n       * @method badgesHidden()\n       * Set the badge count for the Hidden Fields button.\n       * @param {array} settings\n       *        An array of the ABFieldXXX.id that should be hidden.\n       */\n      badgesHidden(settings) {\n         let badgeCount = settings.length;\n         if (badgeCount == 0) badgeCount = false;\n         $$(this.ids.buttonFieldsVisible).config.badge = badgeCount;\n         $$(this.ids.buttonFieldsVisible).refresh();\n      }\n\n      /**\n       * @method badgesFrozen()\n       * Set the badge count for the Frozen Fields button.\n       * @param {string} settings\n       *        The ABFieldXXX.id that should be frozen.\n       */\n      badgesFrozen(settings) {\n         const hidden = this.CurrentView.settings.hiddenFields || [];\n\n         const visibleFields = this.CurrentView.datacollection.datasource\n            .fields((f) => hidden.indexOf(f.columnName) == -1)\n            .map((f) => f.columnName);\n\n         let badgeCount = visibleFields.indexOf(settings) + 1;\n         if (badgeCount == 0) badgeCount = false;\n         $$(this.ids.buttonFieldsFreeze).config.badge = badgeCount;\n         $$(this.ids.buttonFieldsFreeze).refresh();\n      }\n\n      /**\n       * @method badgesSummary()\n       * Set the badge count for the Hidden Fields button.\n       * @param {array} settings\n       *        An array of the ABFieldXXX.id that should be hidden.\n       */\n      badgesSummary(settings) {\n         let badgeCount = settings.length;\n         if (badgeCount == 0) badgeCount = false;\n         $$(this.ids.buttonSummaryFields).config.badge = badgeCount;\n         $$(this.ids.buttonSummaryFields).refresh();\n      }\n\n      get datacollection() {\n         return this.AB.datacollectionByID(\n            this.CurrentView.settings?.dataviewID\n         );\n      }\n\n      populate(view) {\n         super.populate(view);\n         let ids = this.ids;\n\n         if (!view) return;\n\n         // this.viewEditing = view;\n\n         $$(ids.datacollection).setValue(view.settings.dataviewID);\n         $$(ids.isEditable).setValue(view.settings.isEditable);\n         $$(ids.massUpdate).setValue(view.settings.massUpdate);\n         $$(ids.allowDelete).setValue(view.settings.allowDelete);\n         $$(ids.isSortable).setValue(view.settings.isSortable);\n         $$(ids.isExportable).setValue(view.settings.isExportable);\n\n         // populate the Datacollection chooser\n         if (view.settings.datacollection != \"\") {\n            $$(ids.datacollection).setValue(view.settings.dataviewID);\n            // $$(ids.linkedObject).show();\n         } else {\n            $$(ids.datacollection).setValue(\"\");\n            // $$(ids.linkedObject).hide();\n         }\n\n         $$(ids.height).setValue(view.settings.height);\n         $$(ids.hideHeader).setValue(view.settings.hideHeader);\n         $$(ids.labelAsField).setValue(view.settings.labelAsField);\n         $$(ids.hideButtons).setValue(view.settings.hideButtons);\n\n         /*\n\n   //    // initial populate of properties and popups\n   //    view.populateEditor(ids, view);\n   //    view.populatePopupEditors(view);\n   //    view.populateBadgeNumber(ids, view);\n\n*/\n\n         // Grouping options\n         this.refreshGroupBy();\n         this.refreshGroupByList(view.settings.groupBy);\n\n         // Populate values to QueryBuilder\n         // NOTE: we are going around the standard: view.datacollection getter\n         // since calling that without a datacollection set will display an error.\n         // BUT, since we are the designer, this is a normal situation, so:\n         // var selectedDv = view.datacollection;\n         let selectedDv = this.datacollection;\n         if (selectedDv) {\n            PopupFilterMenu.objectLoad(selectedDv.datasource);\n            PopupFilterMenu.setSettings(view.settings.filter);\n\n            this.PopupCountColumnsComponent.objectLoad(selectedDv.datasource);\n            this.PopupCountColumnsComponent.setValue(\n               view.settings.countColumns || \"\"\n            );\n\n            this.PopupFrozenColumnsComponent.objectLoad(selectedDv.datasource);\n            this.PopupFrozenColumnsComponent.setValue(\n               view.settings.frozenColumnID || \"\"\n            );\n            this.PopupFrozenColumnsComponent.setHiddenFields(\n               view.settings.hiddenFields\n            );\n\n            this.PopupHideFieldComponent.objectLoad(selectedDv.datasource);\n            this.PopupHideFieldComponent.setSettings(\n               view.settings.hiddenFields\n            );\n            this.PopupHideFieldComponent.setFrozenColumnID(\n               view.settings.frozenColumnID || \"\"\n            );\n\n            this.PopupSummaryColumnsComponent.objectLoad(selectedDv.datasource);\n            this.PopupSummaryColumnsComponent.setValue(\n               view.settings.summaryColumns || []\n            );\n\n            this.badgesCount(view.settings.countColumns);\n            this.badgesHidden(view.settings.hiddenFields);\n            this.badgesFrozen(view.settings.frozenColumnID);\n            this.badgesSummary(view.settings.summaryColumns);\n         }\n\n         // Populate values to link page properties\n         this.linkPageComponent.viewLoad(view);\n         this.linkPageComponent.setSettings(view.settings);\n      }\n\n      defaultValues() {\n         let values = {};\n         var ViewClass = this.ViewClass();\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n         return values;\n      }\n\n      filterMenuShow() {\n         // var currView = _logic.currentEditObject();\n\n         this._preFilterSettings = PopupFilterMenu.getSettings();\n\n         // show filter popup\n         this.filter_property_popup.show();\n      }\n\n      refreshGroupBy(dv) {\n         const ids = this.ids;\n         let view = this.CurrentView;\n         let groupFields = [];\n         dv = dv || this.datacollection;\n         if (dv && dv.datasource) {\n            dv.datasource\n               .fields((f) => {\n                  return (\n                     !f.isConnection &&\n                     view.settings.hiddenFields.indexOf(f.columnName) < 0\n                  );\n               })\n               .forEach((f) => {\n                  groupFields.push({\n                     id: f.columnName,\n                     value: f.label,\n                  });\n               });\n         }\n         $$(ids.groupBy).define(\"options\", groupFields);\n         $$(ids.groupBy).refresh();\n         $$(ids.groupBy).setValue(view.settings.groupBy);\n      }\n\n      refreshGroupByList(groupBy) {\n         const ids = this.ids;\n\n         let colNames = groupBy || [];\n         if (typeof colNames == \"string\") {\n            colNames = colNames.split(\",\");\n         }\n\n         let options = $$(ids.groupBy).getList().data.find({});\n\n         $$(ids.groupByList).clearAll();\n         colNames.forEach((colName) => {\n            let opt = options.filter((o) => o.id == colName)[0];\n            if (opt) {\n               $$(ids.groupByList).add(opt);\n            }\n         });\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         let ids = this.ids;\n         let vals = super.values();\n\n         vals.settings = vals.settings || {};\n         vals.settings.dataviewID = $$(ids.datacollection).getValue();\n         vals.settings.isEditable = $$(ids.isEditable).getValue();\n         vals.settings.massUpdate = $$(ids.massUpdate).getValue();\n         vals.settings.allowDelete = $$(ids.allowDelete).getValue();\n         vals.settings.isSortable = $$(ids.isSortable).getValue();\n         vals.settings.isExportable = $$(ids.isExportable).getValue();\n\n         vals.settings.height = $$(ids.height).getValue();\n         vals.settings.hideHeader = $$(ids.hideHeader).getValue();\n         vals.settings.labelAsField = $$(ids.labelAsField).getValue();\n         vals.settings.hideButtons = $$(ids.hideButtons).getValue();\n         //    // view.settings.groupBy = $$(ids.groupBy).getValue();\n\n         // pull order groupBy list\n         let groupByList = $$(ids.groupByList).serialize() || [];\n         vals.settings.groupBy = groupByList.map((item) => item.id).join(\",\");\n\n         // filter\n         vals.settings.gridFilter = PopupFilterMenu.getSettings();\n\n         //    view.settings.objectWorkspace = view.settings.objectWorkspace || {};\n         vals.settings.hiddenFields =\n            this.PopupHideFieldComponent.getSettings();\n         vals.settings.frozenColumnID =\n            this.PopupFrozenColumnsComponent.getValue();\n\n         vals.settings.summaryColumns =\n            this.PopupSummaryColumnsComponent.getValue();\n\n         vals.settings.countColumns =\n            this.PopupCountColumnsComponent.getValue();\n\n         // link pages\n         let linkSettings = this.linkPageComponent.getSettings();\n         for (let key in linkSettings) {\n            vals.settings[key] = linkSettings[key];\n         }\n\n         return vals;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"grid\");\n      }\n   }\n\n   return ABViewGridProperty;\n}\n","/*\n * ABViewLabel\n * A Property manager for our ABViewLabel definitions\n */\n\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const BASE_ID = \"properties_abview_label\";\n\n   const ABView = FABView(AB);\n   const L = ABView.L();\n\n   class ABViewLabelProperty extends ABView {\n      constructor() {\n         super(BASE_ID);\n\n         this.AB = AB;\n      }\n\n      static get key() {\n         return \"label\";\n      }\n\n      ui() {\n         const defaultValues = this.defaultValues();\n\n         return super.ui([\n            // .text :  The Text displayed for this label\n            {\n               view: \"text\",\n               name: \"text\",\n               label: L(\"Text\"),\n               placeholder: L(\"Text Placeholder\"),\n               // labelWidth: this.AB.UISettings.config().labelWidthMedium,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     if (newValue !== oldValue) {\n                        const baseView = this.CurrentView;\n\n                        baseView.text = newValue;\n\n                        baseView.save();\n                        this.onChange();\n                     }\n                  },\n               },\n            },\n            {\n               view: \"fieldset\",\n               label: L(\"Format Options:\"),\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        view: \"radio\",\n                        name: \"format\",\n                        vertical: true,\n                        value: defaultValues.format,\n                        options: [\n                           {\n                              id: 0,\n                              value: L(\"normal\"),\n                           },\n                           {\n                              id: 1,\n                              value: L(\"title\"),\n                           },\n                           {\n                              id: 2,\n                              value: L(\"description\"),\n                           },\n                        ],\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n            {\n               view: \"fieldset\",\n               label: L(\"Alignment:\"),\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        view: \"radio\",\n                        name: \"alignment\",\n                        vertical: true,\n                        value: defaultValues.alignment,\n                        options: [\n                           {\n                              id: \"left\",\n                              value: L(\"Left\"),\n                           },\n                           {\n                              id: \"center\",\n                              value: L(\"Center\"),\n                           },\n                           {\n                              id: \"right\",\n                              value: L(\"Right\"),\n                           },\n                        ],\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n            {},\n         ]);\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         await super.init(AB);\n      }\n\n      populate(view) {\n         super.populate(view);\n\n         const ids = this.ids;\n\n         const $component = $$(ids.component);\n\n         const values = $component.getValues();\n\n         for (const key in view.settings)\n            values[key] = values[key] || view.settings[key];\n\n         $component.setValues(values);\n      }\n\n      defaultValues() {\n         const ViewClass = this.ViewClass();\n\n         let values = null;\n\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const ids = this.ids;\n\n         const $component = $$(ids.component);\n\n         const values = super.values();\n\n         values.settings = $component.getValues();\n         values.text = values.settings.text;\n\n         return values;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"label\");\n      }\n   }\n\n   return ABViewLabelProperty;\n}\n","/*\n * ABViewLayout\n * A Property manager for our ABViewLayout definitions\n */\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const ABView = FABView(AB);\n   const L = ABView.L();\n\n   const base = \"properties_abview_layout\";\n\n   class ABViewLayoutProperty extends ABView {\n      constructor() {\n         super(base, {\n            // Put our ids here\n         });\n\n         this.AB = AB;\n      }\n\n      static get key() {\n         return \"layout\";\n      }\n\n      ui() {\n         return super.ui([\n            // [button] : add column\n            {\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Column \"),\n               click: () => this.addView(),\n            },\n         ]);\n      }\n\n      defaultValues() {\n         let values = {};\n         const ViewClass = this.ViewClass();\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n         return values;\n      }\n\n      /**\n       * @method ViewClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"layout\");\n      }\n\n      /**\n       * @method addView\n       * called when the .propertyEditorDefaultElements() button is clicked.\n       * This method should find the current View instance and call it's .addColumn()\n       * method.\n       */\n      async addView() {\n         // get current instance and .addColumn()\n         const currView = this.CurrentView;\n         currView.addColumn();\n\n         // save child views\n         const addingTasks = [];\n         currView.views().forEach((v) => {\n            addingTasks.push(v.save());\n         });\n         await Promise.all(addingTasks);\n\n         // const includeSubViews = true; // we ask later on down the save if we should save subviews...we do this time\n\n         // trigger a save()\n         // this.propertyEditorSave(ids, currView, includeSubViews);\n\n         this.onChange();\n      }\n   }\n\n   return ABViewLayoutProperty;\n}\n","/*\n * ABViewMenu\n * A Property manager for our ABViewMenu definitions\n */\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   let ABViewMenuPropertyComponentDefaults = {};\n\n   const base = \"properties_abview_menu\";\n\n   class ABViewMenuProperty extends ABView {\n      constructor() {\n         super(base, {\n            // Put our ids here\n            orientation: \"\",\n            buttonStyle: \"\",\n            menuAlignment: \"\",\n            menuInToolbar: 0,\n            menuPadding: \"\",\n            menuTheme: \"\",\n            menuPosition: \"\",\n            menuTextLeft: \"\",\n            menuTextCenter: \"\",\n            menuTextRight: \"\",\n            pages: \"\",\n            treeDnD: \"\",\n            pagesFieldset: \"\",\n            pageOrderFieldset: \"\",\n         });\n\n         this.AB = AB;\n         ABViewMenuPropertyComponentDefaults =\n            this.AB.Class.ABViewManager.viewClass(\"menu\").defaultValues();\n      }\n\n      static get key() {\n         return \"menu\";\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               id: ids.orientation,\n               name: \"orientation\",\n               view: \"richselect\",\n               label: L(\"Orientation\"),\n               value: ABViewMenuPropertyComponentDefaults.orientation,\n               labelWidth: uiConfig.labelWidthXLarge,\n               options: [\n                  {\n                     id: \"x\",\n                     value: L(\"Horizontal\"),\n                  },\n                  {\n                     id: \"y\",\n                     value: L(\"Vertical\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.buttonStyle,\n               name: \"buttonStyle\",\n               view: \"richselect\",\n               label: L(\"Button Style\"),\n               value: ABViewMenuPropertyComponentDefaults.buttonStyle,\n               labelWidth: uiConfig.labelWidthXLarge,\n               options: [\n                  {\n                     id: \"ab-menu-default\",\n                     value: L(\"Default\"),\n                  },\n                  {\n                     id: \"ab-menu-link\",\n                     value: L(\"Link\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.menuAlignment,\n               name: \"menuAlignment\",\n               view: \"richselect\",\n               label: L(\"Menu Alignment\"),\n               value: ABViewMenuPropertyComponentDefaults.menuAlignment,\n               labelWidth: uiConfig.labelWidthXLarge,\n               options: [\n                  {\n                     id: \"ab-menu-left\",\n                     value: L(\"Left\"),\n                  },\n                  {\n                     id: \"ab-menu-center\",\n                     value: L(\"Center\"),\n                  },\n                  {\n                     id: \"ab-menu-right\",\n                     value: L(\"Right\"),\n                  },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.menuInToolbar,\n               name: \"menuInToolbar\",\n               view: \"checkbox\",\n               labelRight: L(\"Put menu in toolbar\"),\n               value: ABViewMenuPropertyComponentDefaults.menuInToolbar,\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               name: \"toolbarFieldset\",\n               view: \"fieldset\",\n               label: L(\"Toolbar Settings:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  view: \"layout\",\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.menuPadding,\n                        name: \"menuPadding\",\n                        view: \"counter\",\n                        label: L(\"Toolbar padding\"),\n                        value: ABViewMenuPropertyComponentDefaults.menuPadding,\n                        labelWidth: uiConfig.labelWidthLarge,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                     {\n                        id: ids.menuTheme,\n                        name: \"menuTheme\",\n                        view: \"richselect\",\n                        label: L(\"Toolbar theme\"),\n                        value: ABViewMenuPropertyComponentDefaults.menuTheme,\n                        labelWidth: uiConfig.labelWidthLarge,\n                        options: [\n                           {\n                              id: \"white\",\n                              value: L(\"White\"),\n                           },\n                           {\n                              id: \"bg_gray\",\n                              value: L(\"Gray\"),\n                           },\n                           {\n                              id: \"webix_dark\",\n                              value: L(\"Dark\"),\n                           },\n                        ],\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                     {\n                        id: ids.menuPosition,\n                        name: \"menuPosition\",\n                        view: \"richselect\",\n                        label: L(\"Menu Position\"),\n                        value: ABViewMenuPropertyComponentDefaults.menuPosition,\n                        labelWidth: uiConfig.labelWidthLarge,\n                        options: [\n                           {\n                              id: \"left\",\n                              value: L(\"Left\"),\n                           },\n                           {\n                              id: \"center\",\n                              value: L(\"Center\"),\n                           },\n                           {\n                              id: \"right\",\n                              value: L(\"Right\"),\n                           },\n                        ],\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                     {\n                        id: ids.menuTextLeft,\n                        name: \"menuTextLeft\",\n                        view: \"text\",\n                        label: L(\"Text Left\"),\n                        placeholder: L(\"Place text in left region of toolbar.\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        labelPosition: \"top\",\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                     {\n                        id: ids.menuTextCenter,\n                        name: \"menuTextCenter\",\n                        view: \"text\",\n                        label: L(\"Text Center\"),\n                        placeholder: L(\n                           \"Place text in center region of toolbar.\"\n                        ),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        labelPosition: \"top\",\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                     {\n                        id: ids.menuTextRight,\n                        name: \"menuTextRight\",\n                        view: \"text\",\n                        label: L(\"Text Right\"),\n                        placeholder: L(\n                           \"Place text in right region of toolbar.\"\n                        ),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        labelPosition: \"top\",\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n            {\n               id: ids.pagesFieldset,\n               name: \"pagesFieldset\",\n               view: \"fieldset\",\n               label: L(\"Page List:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  view: \"layout\",\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.pages,\n                        name: \"pages\",\n                        view: \"edittree\",\n                        borderless: true,\n                        css: \"transparent\",\n                        // editor: \"inline-text\",\n                        editable: true,\n                        editValue: \"aliasname\",\n                        editor: \"text\",\n                        template: function (item, common) {\n                           return `<div class='ab-page-list-item'>\n                              ${common.icon(item)} ${common.checkbox(\n                              item,\n                              false\n                           )} <div class=\"fa fa-${\n                              item.key == \"viewcontainer\"\n                                 ? \"window-maximize\"\n                                 : \"file\"\n                           }\"></div> \n                              ${item.label}</div>`;\n                        },\n                        on: {\n                           onItemCheck: (id, state) => {\n                              // trigger to save settings\n                              this.onChange();\n                              this.updateTreeDnD(id, state);\n                           },\n                           onBeforeEditStart: function (id) {\n                              const item = this.getItem(id);\n                              if (!item.aliasname) {\n                                 item.aliasname = item.label;\n                                 this.updateItem(item);\n                              }\n                           },\n                           onBeforeEditStop: (state, editor) => {\n                              const $pages = $$(ids.pages);\n                              const $treeDnD = $$(ids.treeDnD);\n\n                              let item = $pages.getItem(editor.id);\n                              if (item) {\n                                 item.translations.forEach((t) => {\n                                    if (\n                                       t.language_code ==\n                                       this.AB.Multilingual.currentLanguage()\n                                    ) {\n                                       t.aliasname = state.value;\n                                    }\n                                 });\n                                 item.label = state.value;\n                                 $pages.updateItem(editor.id, item);\n                              }\n\n                              if ($treeDnD.exists(editor.id)) {\n                                 // we need to update the drag and drop tree item as well so get it first\n                                 let treeItem =\n                                    $treeDnD.getItem(editor.id) || {};\n                                 // change the value (since that is what is being displayed)\n                                 treeItem.value = state.value;\n                                 // then change the aliasname (since that property controls the final view)\n                                 treeItem.aliasname = state.value;\n                                 // trigger a save so when we update the preview it has the new data to work with\n                                 this.onChange();\n                                 // tell the tree to update with new alias (this will trigger a page reorder save and the values already saved will be used to rebuild the component)\n                                 $treeDnD.updateItem(editor.id, treeItem);\n                              }\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n            {\n               id: ids.pageOrderFieldset,\n               name: \"pageOrderFieldset\",\n               view: \"fieldset\",\n               label: L(\"Drag & Drop to Reorder/Click to Add Icon:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  view: \"layout\",\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.treeDnD,\n                        view: \"edittree\",\n                        borderless: true,\n                        name: \"treeDnD\",\n                        template:\n                           \"{common.icon()} <i class='fa fa-fw fa-#icon#'></i> <span>#value#</span>\",\n                        drag: true,\n                        editable: true,\n                        editValue: \"icon\",\n                        editor: \"combo\",\n                        options: this.AB._App.icons,\n                        suggest: {\n                           template: \"#value#\",\n                           filter: function (item, value) {\n                              return (\n                                 item.value\n                                    .toString()\n                                    .toLowerCase()\n                                    .indexOf(value.toLowerCase()) === 0\n                              );\n                           },\n                           body: {\n                              template:\n                                 \"<i class='fa fa-fw fa-#value#'></i> #value#\",\n                           },\n                        },\n                        on: {\n                           onBeforeDrop: function (context) {\n                              context.parent = context.target; //drop as child\n                              context.index = -1; //as last child\n                           },\n                           onAfterDrop: (context, native_event) => {\n                              this.reorderPages();\n                           },\n                           onDataUpdate: () => {\n                              this.reorderPages();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n         ]);\n      }\n\n      populate(view) {\n         super.populate(view);\n         if (!view) return;\n\n         const ids = this.ids;\n\n         $$(ids.orientation).setValue(\n            view.settings.orientation ??\n               ABViewMenuPropertyComponentDefaults.orientation\n         );\n         $$(ids.buttonStyle).setValue(\n            view.settings.buttonStyle ??\n               ABViewMenuPropertyComponentDefaults.buttonStyle\n         );\n         $$(ids.menuAlignment).setValue(\n            view.settings.menuAlignment ??\n               ABViewMenuPropertyComponentDefaults.menuAlignment\n         );\n         $$(ids.menuInToolbar).setValue(\n            parseInt(view.settings.menuInToolbar) ??\n               ABViewMenuPropertyComponentDefaults.menuInToolbar\n         );\n         $$(ids.menuPadding).setValue(\n            view.settings.menuPadding ??\n               ABViewMenuPropertyComponentDefaults.menuPadding\n         );\n         $$(ids.menuTheme).setValue(\n            view.settings.menuTheme ??\n               ABViewMenuPropertyComponentDefaults.menuTheme\n         );\n         $$(ids.menuPosition).setValue(\n            view.settings.menuPosition ??\n               ABViewMenuPropertyComponentDefaults.menuPosition\n         );\n         view.menuTextLeft = view.menuTextLeft || view.settings.menuTextLeft;\n         $$(ids.menuTextLeft).setValue(\n            view.menuTextLeft ??\n               ABViewMenuPropertyComponentDefaults.menuTextLeft\n         );\n         view.menuTextCenter =\n            view.menuTextCenter || view.settings.menuTextCenter;\n         $$(ids.menuTextCenter).setValue(\n            view.menuTextCenter ??\n               ABViewMenuPropertyComponentDefaults.menuTextCenter\n         );\n         view.menuTextRight = view.menuTextRight || view.settings.menuTextRight;\n         $$(ids.menuTextRight).setValue(\n            view.menuTextRight ??\n               ABViewMenuPropertyComponentDefaults.menuTextRight\n         );\n\n         const pageTree = new this.AB.Webix.TreeCollection();\n         const application = view.application;\n         // const currentPage = view.pageParent();\n         // const parentPage = currentPage.pageParent();\n         const rootPage = view.pageRoot();\n\n         application\n            .pages((p) => rootPage?.id == p.id, true)\n            .forEach((p, index) => {\n               this.addPage(view, p, index, pageTree);\n            });\n\n         const $pages = $$(ids.pages);\n         $pages.clearAll();\n         $pages.data.importData(pageTree);\n         $pages.refresh();\n         $pages.blockEvent();\n         $pages.uncheckAll();\n         $pages.unblockEvent();\n         $pages.openAll();\n\n         const $treeDnD = $$(ids.treeDnD);\n         $treeDnD.clearAll();\n         view?.settings?.order?.forEach((page) => {\n            if ($pages.exists(page.tabId ?? page.pageId)) {\n               //after this command all events will be ignored\n               $pages.blockEvent();\n               // we don't want to send a toggle event because it triggers saves to the database\n               $pages.checkItem(page.tabId ?? page.pageId);\n               //resume listening\n               $pages.unblockEvent();\n            }\n            const label = view.getAliasname(page);\n            $treeDnD.add(\n               {\n                  id: page.tabId ?? page.pageId,\n                  value: label,\n                  type: page.type,\n                  pageId: page.pageId ?? \"\",\n                  tabId: page.tabId ?? \"\",\n                  icon: page.icon,\n               },\n               page.position ? parseInt(page.position) : 0,\n               page.parent && page.parent != \"0\" ? page.parent : \"\"\n            );\n         });\n         // } else if (view.settings.pages && view.settings.pages.forEach) {\n         //    view.settings.pages.forEach((page) => {\n         //       if (page.isChecked) {\n         //          let label = view.getAliasname(page);\n         //          $treeDnD.add({\n         //             id: page.tabId || page.pageId,\n         //             value: label,\n         //             type: page.type,\n         //             pageId: page.pageId\n         //          });\n         //       }\n         //    });\n         $treeDnD.openAll();\n         // }\n\n         // $$(ids.pagesFieldset).config.height = ($$(ids.pages).count()*28)+18; // Number of pages plus 9px of padding top and bottom\n         $$(ids.pagesFieldset).config.height = $pages.count() * 28 + 18 + 40; // Number of pages plus 9px of padding top and bottom\n         $$(ids.pagesFieldset).resize();\n         $$(ids.pageOrderFieldset).config.height =\n            $pages.count() * 28 + 18 + 40; // Number of pages plus 9px of padding top and bottom\n         $$(ids.pageOrderFieldset).resize();\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const ids = this.ids;\n         let vals = super.values();\n\n         vals.settings = vals.settings ?? {};\n         vals.settings.orientation = $$(ids.orientation).getValue();\n         vals.settings.buttonStyle = $$(ids.buttonStyle).getValue();\n         vals.settings.menuAlignment = $$(ids.menuAlignment).getValue();\n         vals.settings.menuInToolbar = $$(ids.menuInToolbar).getValue();\n         vals.settings.menuPadding = $$(ids.menuPadding).getValue();\n         vals.settings.menuTheme = $$(ids.menuTheme).getValue();\n         vals.settings.menuPosition = $$(ids.menuPosition).getValue();\n         vals.menuTextLeft = $$(ids.menuTextLeft).getValue();\n         vals.menuTextCenter = $$(ids.menuTextCenter).getValue();\n         vals.menuTextRight = $$(ids.menuTextRight).getValue();\n         // Legacy support: clear the old settings when new values are created\n         // otherwise leave them\n         if (vals.menuTextLeft.length) {\n            vals.settings.menuTextLeft = \"\";\n         }\n         if (vals.menuTextCenter.length) {\n            vals.settings.menuTextCenter = \"\";\n         }\n         if (vals.menuTextCenter.length) {\n            vals.settings.menuTextRight = \"\";\n         }\n\n         if ($$(ids.pages)) {\n            for (let i = 0; i < $$(ids.pages).data.count(); i++) {\n               let currentPageId = $$(ids.pages).getIdByIndex(i);\n               const currentItem = $$(ids.pages).getItem(currentPageId);\n\n               let type = \"page\",\n                  tabId;\n               if (currentItem.key == \"viewcontainer\") {\n                  type = \"tab\";\n                  tabId = currentPageId;\n                  currentPageId = currentItem.pageParent().id;\n               } else {\n                  // if we have left the tabs we were looping through we need to reset the tabId\n                  tabId = \"\";\n               }\n\n               // let pageInfo = view.settings.pages.filter(\n               //    (p) => p.pageId == currentPageId\n               // )[0];\n\n               let translations = [];\n\n               if (currentItem && currentItem.translations)\n                  translations = currentItem.translations;\n               // else if (pageInfo && pageInfo.translations)\n               //    translations = AB.cloneDeep(pageInfo.translations);\n\n               // pagesIdList.push({\n               //    pageId: currentPageId,\n               //    tabId: tabId,\n               //    type: type,\n               //    aliasname: currentItem.aliasname,\n               //    isChecked: currentItem.checked,\n               //    translations: translations\n               // });\n            }\n            // view.settings.pages = pagesIdList;\n            if (vals.settings.pages) delete vals.settings.pages;\n         }\n\n         return vals;\n      }\n\n      /**\n       * @method ViewClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"menu\");\n      }\n\n      updateTreeDnD(id, state) {\n         const ids = this.ids;\n         const currView = this.CurrentView;\n         const $treeDnD = $$(ids.treeDnD);\n         const $pages = $$(ids.pages);\n\n         // let curPage = currView.settings.pages.filter((page) => {\n         //    return page.pageId == id || page.tabId == id;\n         // })[0];\n\n         let curPage = currView.application.pages(\n            (page) => page.id == id,\n            true\n         )[0];\n\n         // must not have been a page...lets check tabs\n         if (!curPage) {\n            curPage = currView.application.views(\n               (view) => view.id == id,\n               true\n            )[0];\n         }\n\n         if (state) {\n            let label = currView.getAliasname(curPage);\n            $treeDnD.add({\n               id: curPage.id,\n               value: label,\n               type: curPage.type,\n               pageId: curPage.pageId ?? \"\",\n               tabId: curPage.tabId ?? \"\",\n            });\n            this.reorderPages();\n         } else {\n            // if this item exists in the tree and does not have a submenu you can remove it\n            // otherwise we will ask the user to move its submenu items out before deleting\n            if ($treeDnD.exists(id) && !$treeDnD.isBranch(id)) {\n               $treeDnD.remove(id);\n               this.reorderPages();\n            } else if ($treeDnD.exists(id) && $treeDnD.isBranch(id)) {\n               $pages.blockEvent();\n               // we don't want to send a toggle event because it triggers saves to the database\n               $pages.checkItem(id);\n               this.AB.Webix.message({\n                  text: L(\n                     \"Item comtains submenu, please remove items in submenu before removing.\"\n                  ),\n                  type: \"error\",\n                  expire: 10000,\n               });\n               //resume listening\n               $pages.unblockEvent();\n            }\n         }\n      }\n\n      reorderPages() {\n         const ids = this.ids;\n         const currView = this.CurrentView;\n         const $treeDnD = $$(ids.treeDnD);\n\n         // add a new pages container\n         let pages = [];\n         // loop through tree to reorder pages\n         $treeDnD.data.each((obj) => {\n            // find the page in settings that matches the item in the tree\n            // let curPage = currView.settings.pages.filter((page) => {\n            //    return page.pageId == obj.id || page.tabId == obj.id;\n            // })[0];\n\n            let curPage = currView.application.pages(\n               (page) => page.id == obj.id,\n               true\n            )[0];\n\n            // must not have been a page...lets check tabs\n            if (!curPage) {\n               curPage = currView.application.views(\n                  (view) => view.id == obj.id,\n                  true\n               )[0];\n            }\n\n            // put that page in the next possition of the page container\n            pages.push(curPage);\n         });\n\n         let newPageOrder = [];\n         // loop through pages\n         /*\n        {\n           \"pageId\": \"9b8a9458-3ad4-46c1-9ea8-6c96950e161d\",\n           \"tabId\": \"\",\n           \"type\": \"page\",\n           \"isChecked\": \"true\",\n           \"translations\": [\n              {\n                 \"language_code\": \"en\",\n                 \"label\": \"Sub Page 1\",\n                 \"aliasname\": \"Sub Page 1\"\n              }\n           ],\n           \"parent\": \"0\",\n           \"position\": \"0\"\n        }\n        */\n         pages.forEach((page) => {\n            if (page) {\n               const thisPage = {};\n               // get the id of the element we are clicking to\n               const id = page.id;\n               // get the object of the data with the id in the tree view\n               const treeItem = $$(ids.treeDnD).getItem(id);\n               // set the parent element in the page if the treeItem has one\n               thisPage.parent = treeItem.$parent;\n               // store the position so we can put it back in the right spot later\n               thisPage.position = $$(ids.treeDnD).getBranchIndex(id);\n               // store the icon\n               thisPage.icon = treeItem.icon;\n               // store the getAliasname\n               //thisPage.aliasname = currView.getAliasname(page);\n               // store the page types\n               thisPage.type = page.key == \"viewcontainer\" ? \"tab\" : \"page\";\n               if (thisPage.type == \"tab\") {\n                  thisPage.tabId = page.id;\n                  thisPage.pageId = currView.getParentPageId(page);\n               } else {\n                  thisPage.pageId = page.id;\n               }\n               thisPage.isChecked = \"true\";\n               thisPage.translations = page.translations;\n               newPageOrder.push(thisPage);\n            }\n         });\n         currView.settings.order = newPageOrder;\n\n         this.onChange();\n         $treeDnD.openAll();\n      }\n\n      /**\n       * @method addPage\n       *\n       * @param {ABView} view\n       * @param {ABView} page\n       * @param {integer} index\n       * @param {Webix.TreeCollection} pageTree\n       * @param {uuid} parentId\n       */\n      addPage(view, page, index, pageTree, parentId) {\n         // update .aliasname and .translations of the page\n         view?.settings?.order?.forEach((localpage) => {\n            if (\n               (localpage.pageId == page.id && !localpage.id) ||\n               (parentId &&\n                  localpage.pageId == parentId &&\n                  localpage.tabId == page.id)\n            ) {\n               page.translations = localpage.translations;\n            }\n         });\n         const alias = view.getAliasname(page);\n         page.label = alias ? alias : page.label;\n         // add to tree collection\n         pageTree.add(page, index, parentId);\n\n         // add sub-pages\n         const subPages = page.pages ? page.pages() : [];\n         subPages.forEach((childPage, childIndex) => {\n            this.addPage(view, childPage, childIndex, pageTree, page.id);\n         });\n\n         // add tabs\n         const ABViewTab = this.AB.Class.ABViewManager.viewClass(\"tab\");\n         page\n            .views((v) => v instanceof ABViewTab)\n            .forEach((tab, tabIndex) => {\n               // tab views\n               tab.views().forEach((tabView, tabViewIndex) => {\n                  // tab items will be below sub-page items\n                  const tIndex = subPages.length + tabIndex + tabViewIndex;\n\n                  this.addPage(view, tabView, tIndex, pageTree, page.id);\n               });\n            });\n      }\n   }\n\n   return ABViewMenuProperty;\n}\n","/*\n * ABViewPage\n * A Property manager for our ABViewPage definitions\n */\n\nimport FABViewContainer from \"./ABViewContainer\";\n\nexport default function (AB) {\n   const ABViewContainer = FABViewContainer(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABViewContainer.L();\n\n   class ABViewPageProperty extends ABViewContainer {\n      constructor() {\n         super(\"properties_abview_page\", {\n            // Put our ids here\n            type: \"\",\n            popupSettings: \"\",\n            popupWidth: \"\",\n            popupHeight: \"\",\n            pageSettings: \"\",\n            fixedPageWidth: \"\",\n            pageWidth: \"\",\n            pageBackground: \"\",\n            // pagePermissionPanel: \"\",\n         });\n      }\n\n      static get key() {\n         return \"page\";\n      }\n\n      ui() {\n         let ids = this.ids;\n         let _this = this;\n\n         return super.ui([\n            {\n               id: ids.type,\n               name: \"type\",\n               view: \"richselect\",\n               label: L(\"Type\"),\n               options: [\n                  { id: \"page\", value: L(\"Page\") },\n                  { id: \"popup\", value: L(\"Popup\") },\n               ],\n               on: {\n                  onChange: (newv /*, oldv */) => {\n                     if (newv == \"page\") {\n                        $$(ids.popupSettings).hide();\n                        $$(ids.pageSettings).show();\n                     } else {\n                        $$(ids.popupSettings).show();\n                        $$(ids.pageSettings).hide();\n                     }\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.popupSettings,\n               view: \"fieldset\",\n               name: \"popupSettings\",\n               label: L(\"Popup Settings\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.popupWidth,\n                        view: \"text\",\n                        name: \"popupWidth\",\n                        placeholder: L(\"Set popup width\"),\n                        label: L(\"Width:\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                     {\n                        id: ids.popupHeight,\n                        view: \"text\",\n                        name: \"popupHeight\",\n                        placeholder: L(\"Set popup height\"),\n                        label: L(\"Height:\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n            {\n               id: ids.pageSettings,\n               view: \"fieldset\",\n               name: \"pageSettings\",\n               label: L(\"Page Settings\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: ids.fixedPageWidth,\n                        view: \"checkbox\",\n                        name: \"fixedPageWidth\",\n                        labelRight: L(\"Page has fixed width\"),\n                        labelWidth: uiConfig.labelWidthCheckbox,\n                        click: function (/*id, event */) {\n                           if (this.getValue() == 1) {\n                              $$(ids.pageWidth).show();\n                           } else {\n                              $$(ids.pageWidth).hide();\n                           }\n                           _this.onChange();\n                        },\n                     },\n                     {\n                        id: ids.pageWidth,\n                        view: \"text\",\n                        name: \"pageWidth\",\n                        placeholder: L(\"Set page width\"),\n                        label: L(\"Page width:\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                     {\n                        id: ids.pageBackground,\n                        view: \"richselect\",\n                        name: \"pageBackground\",\n                        label: L(\"Page background:\"),\n                        labelWidth: uiConfig.labelWidthXLarge,\n                        options: [\n                           {\n                              id: \"ab-background-default\",\n                              value: L(\"White (default)\"),\n                           },\n                           {\n                              id: \"ab-background-gray\",\n                              value: L(\"Dark\"),\n                           },\n                           // { \"id\":\"ab-background-texture\", \"value\":L('ab.component.page.pageBackgroundTextured', '*Textured')}\n                        ],\n                        on: {\n                           onChange: () => {\n                              this.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n            },\n         ]);\n      }\n\n      // async init(AB) {\n      //    return super.init(AB);\n      // }\n\n      populate(view) {\n         super.populate(view);\n         let ids = this.ids;\n\n         let DefaultValues = this.defaultValues();\n\n         $$(ids.type).setValue(view.settings.type || DefaultValues.type);\n         $$(ids.popupWidth).setValue(\n            view.settings.popupWidth || DefaultValues.popupWidth\n         );\n         $$(ids.popupHeight).setValue(\n            view.settings.popupHeight || DefaultValues.popupHeight\n         );\n         $$(ids.pageWidth).setValue(\n            view.settings.pageWidth || DefaultValues.pageWidth\n         );\n         $$(ids.fixedPageWidth).setValue(\n            view.settings.fixedPageWidth || DefaultValues.fixedPageWidth\n         );\n         $$(ids.pageBackground).setValue(\n            view.settings.pageBackground || DefaultValues.pageBackground\n         );\n\n         // Disable select type of page when this page is root\n         if (view.isRoot()) {\n            $$(ids.type).hide();\n         } else {\n            $$(ids.type).show();\n         }\n\n         if (view.settings.type == \"popup\") {\n            $$(ids.popupSettings).show();\n            $$(ids.pageSettings).hide();\n         } else {\n            $$(ids.popupSettings).hide();\n            $$(ids.pageSettings).show();\n         }\n\n         if (view.settings.fixedPageWidth == 1) {\n            $$(ids.pageWidth).show();\n         } else {\n            $$(ids.pageWidth).hide();\n         }\n      }\n\n      defaultValues() {\n         let values = {};\n         var ViewClass = this.ViewClass();\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         let ids = this.ids;\n         let vals = super.values();\n\n         vals.settings = vals.settings || {};\n         vals.settings.type = $$(ids.type).getValue();\n         vals.settings.popupWidth = $$(ids.popupWidth).getValue();\n         vals.settings.popupHeight = $$(ids.popupHeight).getValue();\n         vals.settings.pageWidth = $$(ids.pageWidth).getValue();\n         vals.settings.fixedPageWidth = $$(ids.fixedPageWidth).getValue();\n         vals.settings.pageBackground = $$(ids.pageBackground).getValue();\n\n         return vals;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"page\");\n      }\n   }\n\n   return ABViewPageProperty;\n}\n","/*\n * ABViewTab\n * A Property manager for our ABViewTab definitions\n */\n\nimport FABView from \"./ABView\";\nimport FTabPopup from \"../../interface_common/ui_tab_form_popup\";\n\nexport default function (AB) {\n   const BASE_ID = \"properties_abview_tab\";\n\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   const TabPopup = FTabPopup(AB);\n\n   class ABViewTabProperty extends ABView {\n      constructor() {\n         super(BASE_ID, {\n            sidebarWidth: \"\",\n            sidebarPos: \"\",\n            iconOnTop: \"\",\n            height: \"\",\n            minWidth: \"\",\n            stackTabs: \"\",\n            darkTheme: \"\",\n         });\n\n         this.AB = AB;\n      }\n\n      static get key() {\n         return \"tab\";\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return super.ui([\n            {\n               id: ids.height,\n               view: \"counter\",\n               label: L(\"Height\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.minWidth,\n               view: \"counter\",\n               label: L(\"Minimum width\"),\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.stackTabs,\n               view: \"checkbox\",\n               labelRight: L(\"Stack Tabs Vertically\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onChange: (newValue) => {\n                     if (newValue == 1) {\n                        $$(ids.sidebarWidth).show();\n                        $$(ids.sidebarPos).show();\n                        $$(ids.iconOnTop).hide();\n                     } else {\n                        $$(ids.sidebarWidth).hide();\n                        $$(ids.sidebarPos).hide();\n                        $$(ids.iconOnTop).show();\n                     }\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.iconOnTop,\n               view: \"checkbox\",\n               labelRight: L(\"Position icon above text\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.darkTheme,\n               view: \"checkbox\",\n               labelRight: L(\"Use Dark Theme\"),\n               labelWidth: uiConfig.labelWidthCheckbox,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.sidebarWidth,\n               view: \"counter\",\n               label: L(\"Width of Sidebar\"),\n               labelWidth: uiConfig.labelWidthXLarge,\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            {\n               id: ids.sidebarPos,\n               view: \"richselect\",\n               label: L(\"Position of Sidebar\"),\n               labelWidth: uiConfig.labelWidthXLarge,\n               options: [\n                  { id: \"left\", value: L(\"Left\") },\n                  { id: \"right\", value: L(\"Right\") },\n               ],\n               on: {\n                  onChange: () => {\n                     this.onChange();\n                  },\n               },\n            },\n            // [button] : add tab\n            {\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Tab\"),\n               click: () => {\n                  const baseView = this.CurrentView;\n\n                  baseView.tabPopup.show();\n               },\n            },\n         ]);\n      }\n\n      async init(AB) {\n         await super.init(AB);\n\n         const baseView = this.CurrentView;\n\n         if (!baseView.tabPopup) {\n            baseView.tabPopup = new TabPopup(baseView);\n\n            await baseView.tabPopup.init(AB);\n\n            baseView.tabPopup.on(\"saved\", () => {\n               this.onChange();\n            });\n         }\n      }\n\n      populate(view) {\n         super.populate(view);\n\n         const ids = this.ids;\n\n         $$(ids.height).setValue(view.settings.height);\n         $$(ids.minWidth).setValue(view.settings.minWidth);\n         $$(ids.stackTabs).setValue(view.settings.stackTabs);\n         $$(ids.darkTheme).setValue(view.settings.darkTheme);\n         $$(ids.sidebarWidth).setValue(view.settings.sidebarWidth);\n         $$(ids.sidebarPos).setValue(view.settings.sidebarPos);\n         $$(ids.iconOnTop).setValue(view.settings.iconOnTop);\n\n         if (view.settings.stackTabs) {\n            $$(ids.sidebarWidth).show();\n            $$(ids.sidebarPos).show();\n            $$(ids.iconOnTop).hide();\n         } else {\n            $$(ids.sidebarWidth).hide();\n            $$(ids.sidebarPos).hide();\n            $$(ids.iconOnTop).show();\n         }\n      }\n\n      defaultValues() {\n         const ViewClass = this.ViewClass();\n\n         let values = null;\n\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const ids = this.ids;\n         const values = super.values();\n\n         values.settings = values.settings ?? {};\n         values.settings.height = $$(ids.height).getValue();\n         values.settings.minWidth = $$(ids.minWidth).getValue();\n         values.settings.stackTabs = $$(ids.stackTabs).getValue();\n         values.settings.darkTheme = $$(ids.darkTheme).getValue();\n         values.settings.sidebarWidth = $$(ids.sidebarWidth).getValue();\n         values.settings.sidebarPos = $$(ids.sidebarPos).getValue();\n         values.settings.iconOnTop = $$(ids.iconOnTop).getValue();\n\n         return values;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"tab\");\n      }\n   }\n\n   return ABViewTabProperty;\n}\n","/*\n * ABViewText\n * A Property manager for our ABViewTab definitions\n */\n\nimport FABView from \"./ABView\";\n\nexport default function (AB) {\n   const BASE_ID = \"properties_abview_text\";\n\n   const ABView = FABView(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const L = ABView.L();\n\n   class ABViewTextProperty extends ABView {\n      constructor() {\n         super(BASE_ID, {\n            dataviewID: \"\",\n            field: \"\",\n         });\n\n         this.AB = AB;\n      }\n\n      static get key() {\n         return \"text\";\n      }\n\n      ui() {\n         const ids = this.ids;\n         const self = this;\n\n         return super.ui([\n            {\n               view: \"counter\",\n               name: \"height\",\n               label: L(\"Height:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n            },\n            {\n               id: ids.dataviewID,\n               name: \"dataviewID\",\n               view: \"richselect\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               on: {\n                  onChange: (newValue) => {\n                     self.selectSource(newValue);\n                  },\n               },\n            },\n            {\n               id: ids.field,\n               name: \"field\",\n               view: \"list\",\n               maxHeight: 322,\n               template: \"#label#\",\n               on: {\n                  onItemClick: function (id) {\n                     const field = this.getItem(id);\n\n                     self.selectField(field);\n                  },\n               },\n            },\n         ]);\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         await super.init(AB);\n      }\n\n      selectSource(dataviewID) {\n         const currentView = this.CurrentView;\n\n         // Update field options in property\n         this.updateFieldOptions(currentView, dataviewID);\n      }\n\n      selectField(field) {\n         const format = `{${field.label}}`;\n\n         // insert text to tinymce\n         tinymce.activeEditor.execCommand(\"mceInsertContent\", false, format);\n      }\n\n      updateFieldOptions(view, dataviewID) {\n         const ids = this.ids;\n         const datacollection =\n            view.AB.datacollectionByID(dataviewID) ??\n            view.AB.datacollectionByID(view.parent.settings.dataviewID) ??\n            null;\n\n         if (view.parent.key === \"dataview\")\n            dataviewID = view.parent.settings.dataviewID;\n\n         const $dataviewID = $$(ids.dataviewID);\n         const $field = $$(ids.field);\n\n         $dataviewID.setValue(dataviewID);\n\n         if (!datacollection) {\n            $field.clearAll();\n\n            return;\n         }\n\n         const object = datacollection?.datasource ?? null;\n\n         // Pull field list\n         $field.clearAll();\n\n         if (object) $field.parse(object.fields());\n\n         $field.refresh();\n      }\n\n      populate(view) {\n         super.populate(view);\n\n         const ids = this.ids;\n\n         const dataviewID = view.settings.dataviewID ?? \"none\";\n\n         const $dataviewID = $$(ids.dataviewID);\n\n         // Pull data collections to options\n         const applicationLoad = this.CurrentApplication;\n\n         // / NOTE: only include System Objects if the user has permission\n         const datacollectionFilter = this.AB.Account.isSystemDesigner()\n            ? (obj) => !obj.isSystemObject\n            : () => true;\n\n         const datacollections =\n            applicationLoad.datacollectionsIncluded(datacollectionFilter);\n         const options = [\n            {\n               id: \"none\",\n               value: \"None\",\n            },\n            ...datacollections.map((e) => {\n               return {\n                  id: e.id,\n                  value: e.label,\n               };\n            }),\n         ];\n\n         $dataviewID.define(\"options\", options);\n         $dataviewID.define(\"value\", dataviewID);\n         $dataviewID.refresh();\n\n         this.updateFieldOptions(view, dataviewID);\n\n         const $component = $$(ids.component);\n\n         const values = $component.getValues();\n\n         for (const key in view.settings)\n            values[key] = values[key] || view.settings[key];\n\n         $component.setValues(values);\n      }\n\n      defaultValues() {\n         const ViewClass = this.ViewClass();\n\n         let values = null;\n\n         if (ViewClass) {\n            values = ViewClass.defaultValues();\n         }\n\n         return values;\n      }\n\n      /**\n       * @method values\n       * return the values for this form.\n       * @return {obj}\n       */\n      values() {\n         const ids = this.ids;\n\n         const $component = $$(ids.component);\n\n         const values = super.values();\n\n         values.settings = $component.getValues();\n\n         return values;\n      }\n\n      /**\n       * @method FieldClass()\n       * A method to return the proper ABViewXXX Definition.\n       * NOTE: Must be overwritten by the Child Class\n       */\n      ViewClass() {\n         return super._ViewClass(\"text\");\n      }\n   }\n\n   return ABViewTextProperty;\n}\n","/*\n * ABViewPropertyFilterData\n * This provides the UI interface for collecting the settings that drive the\n * common ABViewPropertyFilterData component on the UI.\n *\n * This is a common UI interface among our View widgets that offer the ability\n * to filter their data.\n */\n\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../../ui_class\";\n\nexport default function (AB, idBase) {\n   if (!myClass) {\n      const base = `${idBase}_viewpropertyfilterdata`;\n      const UIClass = UI_Class(AB);\n      const uiConfig = AB.Config.uiSettings();\n      var L = UIClass.L();\n\n      class FilterRuleSettings extends AB.Class.ABMLClass {\n         constructor() {\n            super([\"label\"], AB);\n         }\n\n         fromSettings(settings) {\n            super.fromValues(settings);\n            this.filters = settings.filters;\n         }\n\n         toSettings() {\n            let obj = super.toObj();\n            obj.filters = this.filters;\n            return obj;\n         }\n      }\n\n      class FilterRule extends UIClass {\n         constructor(indx) {\n            let frbase = `${base}_filterrule_${indx}`;\n            super(frbase, {\n               label: \"\",\n               filter: \"\",\n               btnDelete: \"\",\n            });\n\n            this.indx = indx;\n            // use this for uniqueness in our UI\n\n            this.base = frbase;\n\n            this.rowFilter = null;\n            // {FilterComplex}\n            // the widget that generates the filter condition\n         }\n\n         ui() {\n            return {\n               id: this.ids.component,\n               cols: [\n                  {\n                     id: this.ids.label,\n                     view: \"text\",\n                     value: \"\",\n                  },\n                  {\n                     id: this.ids.filter,\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     value: L(\"Add Filter\"),\n                     click: () => {\n                        this.rowFilter.popUp($$(this.ids.filter).getNode());\n                     },\n                  },\n                  {\n                     id: this.ids.btnDelete,\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: () => {\n                        webix.confirm({\n                           title: L(\"Remove Filter?\"),\n                           message: L(\n                              \"Are you sure you want to remove this filter?\"\n                           ),\n                           callback: async (result) => {\n                              if (result) {\n                                 let $row = $$(this.ids.component);\n                                 let parent = $row.getParentView();\n                                 parent.removeView($row);\n                                 this.emit(\"deleted\");\n                              }\n                           },\n                        });\n                     },\n                  },\n               ],\n            };\n         }\n\n         init(AB) {\n            this.AB = AB;\n            this.rowFilter = this.AB.filterComplexNew(`${this.ids.filter}_fc`);\n         }\n\n         fromSettings(settings) {\n            this.settings = new FilterRuleSettings();\n            this.settings.fromSettings(settings);\n\n            $$(this.ids.label).setValue(this.settings.label);\n            this.rowFilter?.setValue(this.settings.filters);\n         }\n\n         toSettings() {\n            this.settings.label = $$(this.ids.label).getValue();\n            this.settings.filters = this.rowFilter?.getValue();\n            return this.settings.toSettings();\n         }\n\n         objectLoad(object) {\n            this.object = object;\n            if (this.rowFilter) {\n               this.rowFilter.fieldsLoad(this.object.fields(), this.object);\n            }\n         }\n      }\n\n      myClass = class ABViewPropertyFilterData extends UIClass {\n         static get default() {\n            return {\n               filterOption: 1, // 0 - Not allow, 1 - Enable user filter, 2 - Predefined filter menu, 3 - Global filter input\n\n               // 1- Enable user filter options\n               userFilterPosition: \"toolbar\", // \"toolbar\" || \"form\"\n\n               // 2 - Predefined filter menu options\n               // queryRules: [], // An array of ABViewGridFilterRule object\n\n               // 3 - Global filter input options\n               // globalFilterPosition: \"default\", // \"default\" || \"single\"\n\n               isGlobalToolbar: 1, // \"boolean\"\n            };\n         }\n\n         constructor(options) {\n            // base: {string} unique base id reference\n\n            super(base, {\n               filterRules: \"\",\n               filterRulesScrollview: \"\",\n\n               filterOptionRadio: \"\",\n               filterUserLayout: \"\",\n               filterUser: \"\",\n               filterGlobal: \"\",\n               filterMenuLayout: \"\",\n\n               needLoadAllLabel: \"\",\n               globalToolbar: \"\",\n            });\n\n            this.AB = AB;\n\n            this.queryRules = [];\n            // {array}\n            // of ... ?\n\n            this.isGrid = false;\n            if (options?.isGrid) {\n               this.isGrid = true;\n            }\n         }\n\n         ui() {\n            const ids = this.ids;\n\n            return {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"radio\",\n                     id: ids.filterOptionRadio,\n                     value: 0,\n                     options: [\n                        { id: 0, value: L(\"Do not Allow User filters\") },\n                        { id: 1, value: L(\"Enable User filters\") },\n                        { id: 2, value: L(\"Use a filter menu\") },\n                        { id: 3, value: L(\"Use a global filter input\") },\n                     ],\n                     vertical: true,\n                     label: \"Filter Option\",\n                     labelWidth: uiConfig.labelWidthLarge,\n                     on: {\n                        onChange: (newValue /*, oldValue */) => {\n                           this.setFilterOption(newValue);\n                        },\n                     },\n                  },\n\n                  {\n                     view: \"radio\",\n                     id: ids.filterGlobal,\n                     hidden: true,\n                     vertical: true,\n                     label: \"Show\",\n                     labelWidth: uiConfig.labelWidthLarge,\n                     options: [\n                        { id: \"default\", value: L(\"All matching records\") },\n                        { id: \"single\", value: L(\"Single records only\") },\n                     ],\n                  },\n\n                  {\n                     view: \"layout\",\n                     id: ids.filterUserLayout,\n                     hidden: true,\n                     cols: [\n                        {\n                           view: \"radio\",\n                           vertical: true,\n                           id: ids.filterUser,\n                           value: \"toolbar\",\n                           label: \"Display\",\n                           labelWidth: uiConfig.labelWidthLarge,\n                           width: 200,\n                           options: [\n                              { id: \"toolbar\", value: L(\"Toolbar\") },\n                              { id: \"form\", value: L(\"Form\") },\n                           ],\n                           on: {\n                              onChange: (newValue) => {\n                                 this.setFilterUser(newValue);\n                              },\n                           },\n                        },\n                        {\n                           view: \"checkbox\",\n                           id: ids.globalToolbar,\n                           width: 350,\n                           labelRight: L(\"Include a global filter input\"),\n                        },\n                        {},\n                     ],\n                  },\n\n                  {\n                     view: \"layout\",\n                     id: ids.filterMenuLayout,\n                     hidden: true,\n                     rows: [\n                        {\n                           css: { \"padding-bottom\": 10 },\n                           cols: [\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 icon: \"fa fa-plus\",\n                                 type: \"iconButton\",\n                                 label: L(\"Add new filter\"),\n                                 width: 150,\n                                 click: () => {\n                                    this.addFilterRule({});\n                                 },\n                              },\n                              {\n                                 id: ids.needLoadAllLabel,\n                                 view: \"label\",\n                                 label: L('need \"LoadAll\" from datasource'),\n                                 css: { color: \"red\" },\n                                 hidden: true,\n                              },\n                              { fillspace: true },\n                           ],\n                        },\n                        {\n                           id: ids.filterRulesScrollview,\n                           view: \"scrollview\",\n                           scroll: \"xy\",\n                           body: {\n                              id: ids.filterRules,\n                              view: \"layout\",\n                              margin: 20,\n                              padding: 10,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     css: { \"background-color\": \"#fff\" },\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           name: \"cancel\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           name: \"save\",\n                           label: L(\"Save\"),\n                           type: \"form\",\n                           autowidth: true,\n                           click: () => {\n                              this.buttonSave();\n                           },\n                        },\n                        { fillspace: true },\n                     ],\n                  },\n               ],\n            };\n         }\n\n         init(AB) {\n            this.AB = AB;\n         }\n\n         buttonCancel() {\n            this.emit(\"cancel\");\n         }\n\n         buttonSave() {\n            this.emit(\"save\");\n         }\n\n         objectLoad(object, isLoadAll = false) {\n            this.object = object;\n            this.isLoadAll = isLoadAll;\n\n            //tell each of our rules about our object\n            if (this.queryRules && this.queryRules.length) {\n               this.queryRules.forEach((r) => {\n                  r.objectLoad(object);\n               });\n            }\n         }\n\n         setSettings(settings = {}) {\n            const ids = this.ids;\n\n            if (!settings) settings = {};\n\n            //Convert some condition from string to integer\n            (settings.queryRules || []).forEach((qr) => {\n               if (qr?.queryRules?.[0]?.rules) {\n                  qr.queryRules[0].rules.forEach((rule) => {\n                     if (/^[+-]?\\d+(\\.\\d+)?$/.exec(rule.value)) {\n                        rule.value = JSON.parse(rule.value);\n                     }\n                  });\n               }\n            });\n\n            let option = settings.filterOption;\n            if (option == null || Number.isNaN(option)) {\n               option = ABViewPropertyFilterData.default.filterOption;\n            }\n            $$(ids.filterOptionRadio).setValue(option);\n            $$(ids.filterUser).setValue(\n               settings.userFilterPosition ||\n                  ABViewPropertyFilterData.default.userFilterPosition\n            );\n            $$(ids.globalToolbar).setValue(\n               typeof settings.isGlobalToolbar != \"undefined\"\n                  ? settings.isGlobalToolbar\n                  : ABViewPropertyFilterData.default.isGlobalToolbar\n            );\n\n            $$(ids.filterGlobal).setValue(\n               settings.globalFilterPosition ||\n                  ABViewPropertyFilterData.default.globalFilterPosition\n            );\n\n            // clear any existing Rules:\n            (this.queryRules ?? []).forEach((rule) => {\n               if ($$(ids.filterRules))\n                  $$(ids.filterRules).removeView(rule.ids.component);\n            });\n            this.queryRules = [];\n\n            (settings.queryRules || []).forEach((ruleSettings) => {\n               this.addFilterRule(ruleSettings);\n            });\n         }\n\n         getSettings() {\n            const ids = this.ids;\n            var settings = {};\n            settings.filterOption = parseInt(\n               $$(ids.filterOptionRadio).getValue()\n            );\n            settings.queryRules = [];\n\n            switch (settings.filterOption) {\n               case 0: // Disable User filters\n                  settings.isGlobalToolbar = 0;\n                  break;\n               case 1: // Enable User filters\n                  if (this.isGrid) {\n                     settings.userFilterPosition = $$(\n                        ids.filterUser\n                     ).getValue();\n                     settings.isGlobalToolbar = $$(\n                        ids.globalToolbar\n                     ).getValue();\n                  } else {\n                     settings.userFilterPosition = \"form\";\n                     settings.isGlobalToolbar = 0;\n                  }\n\n                  break;\n               case 2: // Use a filter menu\n                  this.queryRules.forEach((r) => {\n                     settings.queryRules.push(r.toSettings());\n                  });\n                  break;\n               case 3: // Use a global filter menu\n                  settings.globalFilterPosition = $$(\n                     ids.filterGlobal\n                  ).getValue();\n                  break;\n            }\n\n            return settings;\n         }\n\n         /**\n          * @method addFilterRule\n          * Instantiate a new Rule in our list.\n          * @param {obj} settings\n          *        The settings object from the Rule we created in .toSettings()\n          */\n         addFilterRule(settings) {\n            if (this.object == null) return;\n\n            settings = settings ?? {};\n\n            // pull indx from our largest queryRules entry:\n            let indx = 0;\n            this.queryRules.forEach((r) => {\n               if (r.indx > indx) {\n                  indx = r.indx;\n               }\n            });\n            indx++;\n\n            let Rule = new FilterRule(indx);\n\n            var RulesUI = $$(this.ids.filterRules);\n            if (RulesUI) {\n               /* var viewId = */ RulesUI.addView(Rule.ui());\n               Rule.init(this.AB);\n               Rule.objectLoad(this.object);\n               Rule.fromSettings(settings);\n               Rule.on(\"deleted\", () => {\n                  this.queryRules = this.queryRules.filter((r) => {\n                     return r.indx != Rule.indx;\n                  });\n               });\n            }\n\n            this.queryRules.push(Rule);\n            return;\n\n            /*\n            var Rule = getRule(instance.object, App, idBase);\n            instance.queryRules.push(Rule);\n\n            // if we have tried to create our component:\n            if (ids) {\n               // if our actually exists, then populate it:\n               var RulesUI = $$(ids.filterRules);\n               if (RulesUI) {\n                  // make sure Rule.ui is created before calling .init()\n                  Rule.component(App, idBase); // prepare the UI component\n                  var viewId = RulesUI.addView(Rule.ui);\n                  Rule.showQueryBuilderContainer();\n                  Rule.init({\n                     onDelete: (deletedRule) => {\n                        $$(ids.filterRules).removeView(Rule.ids.component);\n\n                        var index = instance.queryRules.indexOf(deletedRule);\n                        if (index !== -1) {\n                           instance.queryRules.splice(index, 1);\n                        }\n                     },\n                  });\n               }\n            }\n\n            if (settings) {\n               Rule.fromSettings(settings);\n            }\n            */\n         }\n\n         onShow() {\n            if (!this.isLoadAll) {\n               $$(this.ids.needLoadAllLabel).show();\n            } else {\n               $$(this.ids.needLoadAllLabel).hide();\n            }\n         }\n\n         setFilterOption(value) {\n            const ids = this.ids;\n\n            switch (JSON.parse(value || 0)) {\n               case 1: // Enable User filters\n                  $$(ids.filterMenuLayout).hide();\n                  $$(ids.filterGlobal).hide();\n                  if (this.isGrid) {\n                     $$(ids.filterUserLayout).show();\n                  }\n                  break;\n               case 2: // Use a filter menu\n                  $$(ids.filterUserLayout).hide();\n                  $$(ids.filterGlobal).hide();\n                  $$(ids.filterMenuLayout).show();\n                  break;\n               case 3: // Use a global filter menu\n                  $$(ids.filterUserLayout).hide();\n                  $$(ids.filterMenuLayout).hide();\n                  $$(ids.filterGlobal).show();\n                  break;\n               case 0:\n               default:\n                  // Do not Allow User filters\n                  $$(ids.filterUserLayout).hide();\n                  $$(ids.filterMenuLayout).hide();\n                  $$(ids.filterGlobal).hide();\n                  break;\n            }\n         }\n\n         setFilterUser(val) {\n            switch (val) {\n               case \"toolbar\":\n                  $$(this.ids.globalToolbar).show();\n                  break;\n               case \"form\":\n                  $$(this.ids.globalToolbar).hide();\n                  break;\n            }\n         }\n      };\n   }\n\n   return myClass;\n}\n","/*\n * ABViewPropertyLinkPage\n * This provides the UI interface for collecting the settings that link a\n * component to various other Pages for editing/viewing/etc...\n */\n\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nimport UI_Class from \"../../../ui_class\";\n\nexport default function (AB, idBase) {\n   if (!myClass) {\n      const base = `${idBase}_viewpropertylinkpage`;\n      const UIClass = UI_Class(AB);\n      const uiConfig = AB.Config.uiSettings();\n      var L = UIClass.L();\n\n      myClass = class ABViewPropertyLinkPage extends UIClass {\n         constructor() {\n            super(base, {\n               detailsPage: \"\",\n               editPage: \"\",\n            });\n\n            this.AB = AB;\n         }\n\n         /**\n          * @property default\n          * return default settings\n          *\n          * @return {Object}\n          */\n         static get default() {\n            return {\n               detailsPage: null, // uuid\n               detailsTab: null, // uuid\n               editPage: null, // uuid\n               editTab: null, // uuid\n            };\n         }\n\n         ui() {\n            return {\n               view: \"fieldset\",\n               label: L(\"Linked Pages:\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               body: {\n                  type: \"clean\",\n                  padding: 10,\n                  rows: [\n                     {\n                        id: this.ids.detailsPage,\n                        view: \"combo\",\n                        clear: true,\n                        placeholder: L(\"No linked view\"),\n                        name: \"detailsPage\",\n                        label: L(\"Details Page:\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        options: [],\n                        on: {\n                           onChange: () => this.emit(\"change\"),\n                        },\n                     },\n                     {\n                        id: this.ids.editPage,\n                        view: \"combo\",\n                        clear: true,\n                        placeholder: L(\"No linked form\"),\n                        name: \"editPage\",\n                        label: L(\"Edit Form:\"),\n                        labelWidth: uiConfig.labelWidthLarge,\n                        options: [],\n                        on: {\n                           onChange: () => this.emit(\"change\"),\n                        },\n                     },\n                  ],\n               },\n            };\n         }\n\n         init(AB) {\n            this.AB = AB;\n            return Promise.resolve();\n         }\n\n         clear() {\n            $$(this.ids.detailsPage).setValue(\"\");\n            $$(this.ids.editPage).setValue(\"\");\n         }\n\n         viewLoad(view) {\n            this.view = view;\n            const ids = this.ids;\n\n            let filter = (v, widgetKey) => {\n               return (\n                  v.key == widgetKey &&\n                  v.settings.dataviewID == view.settings.dataviewID\n               );\n            };\n\n            // Set the options of the possible detail views\n            let pagesHasDetail = [];\n\n            pagesHasDetail = pagesHasDetail.concat(\n               view\n                  .pageRoot()\n                  .views((v) => {\n                     return filter(v, \"detail\");\n                  }, true)\n                  .map((p) => {\n                     return {\n                        id: p.id,\n                        value: p.label,\n                     };\n                  })\n            );\n\n            pagesHasDetail = pagesHasDetail.concat(\n               view\n                  .pageRoot()\n                  .pages((p) => {\n                     return p.views((v) => {\n                        return filter(v, \"detail\");\n                     }, true).length;\n                  }, true)\n                  .map((p) => {\n                     return {\n                        id: p.id,\n                        value: p.label,\n                     };\n                  })\n            );\n\n            // pagesHasDetail.unshift({\n            //    id: \"\",\n            //    value: L(\"No linked view\"),\n            // });\n            $$(ids.detailsPage).define(\"options\", pagesHasDetail);\n            $$(ids.detailsPage).refresh();\n\n            // Set the options of the possible edit forms\n            let pagesHasForm = [];\n\n            pagesHasForm = pagesHasForm.concat(\n               view\n                  .pageRoot()\n                  .views((v) => {\n                     return filter(v, \"form\");\n                  }, true)\n                  .map((p) => {\n                     return {\n                        id: p.id,\n                        value: p.label,\n                     };\n                  })\n            );\n\n            pagesHasForm = pagesHasForm.concat(\n               view\n                  .pageRoot()\n                  .pages((p) => {\n                     return p.views((v) => {\n                        return filter(v, \"form\");\n                     }, true).length;\n                  }, true)\n                  .map((p) => {\n                     return {\n                        id: p.id,\n                        value: p.label,\n                     };\n                  })\n            );\n\n            // pagesHasForm.unshift({\n            //    id: 0,\n            //    value: L(\"No linked form\"),\n            // });\n            $$(ids.editPage).define(\"options\", pagesHasForm);\n            $$(ids.editPage).refresh();\n         }\n\n         setSettings(settings) {\n            if (settings.detailsPage) {\n               let details = settings.detailsPage;\n               if (settings.detailsTab != \"\") {\n                  details += \":\" + settings.detailsTab;\n               }\n               $$(this.ids.detailsPage).setValue(details);\n            } else {\n               $$(this.ids.detailsPage).setValue(null);\n            }\n\n            if (settings.editPage) {\n               var edit = settings.editPage;\n               if (settings.editTab != \"\") {\n                  edit += \":\" + settings.editTab;\n               }\n               $$(this.ids.editPage).setValue(edit);\n            } else {\n               $$(this.ids.editPage).setValue(null);\n            }\n         }\n\n         getSettings() {\n            let settings = {};\n\n            var detailsPage = $$(this.ids.detailsPage).getValue();\n            var detailsTab = \"\";\n            if (detailsPage.split(\":\").length > 1) {\n               var detailsVals = detailsPage.split(\":\");\n               detailsPage = detailsVals[0];\n               detailsTab = detailsVals[1];\n            }\n            settings.detailsPage = detailsPage;\n            settings.detailsTab = detailsTab;\n\n            var editPage = $$(this.ids.editPage).getValue();\n            var editTab = \"\";\n            if (editPage.split(\":\").length > 1) {\n               var editVals = editPage.split(\":\");\n               editPage = editVals[0];\n               editTab = editVals[1];\n            }\n            settings.editPage = editPage;\n            settings.editTab = editTab;\n\n            return settings;\n         }\n      };\n   }\n\n   return myClass;\n}\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   settings: {\n      dataviewID: \"\",\n      // {string}\n      // {ABDatacollection.id} of the datacollection that contains the data for\n      // the Gantt chart.\n\n      titleFieldID: \"\",\n      // {string}\n      // {ABFieldXXX.id} of the field that contains the value of the title\n      // ABFieldString, ABFieldLongText\n\n      startDateFieldID: \"\",\n      // {string}\n      // {ABFieldDate.id} of the field that contains the start date\n\n      endDateFieldID: \"\",\n      // {string}\n      // {ABFieldDate.id} of the field that contains the end date\n\n      durationFieldID: \"\",\n      // {string}\n      // {ABFieldNumber.id} of the field that contains the duration\n\n      progressFieldID: \"\",\n      // {string}\n      // {ABFieldNumber.id} of the field that marks the duration\n\n      notesFieldID: \"\",\n      // {string}\n      // {ABFieldXXX.id} of the field that contains the value of the notes\n      // ABFieldString, ABFieldLongText\n   },\n};\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB, ibase) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   const ABFieldDate = AB.Class.ABFieldManager.fieldByKey(\"date\");\n   const ABFieldNumber = AB.Class.ABFieldManager.fieldByKey(\"number\");\n   const ABFieldString = AB.Class.ABFieldManager.fieldByKey(\"string\");\n   const ABFieldLongText = AB.Class.ABFieldManager.fieldByKey(\"LongText\");\n\n   class ABObjectWorkspaceViewGantt extends UIClass {\n      constructor(idBase) {\n         super(idBase, {\n            title: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            duration: \"\",\n            progress: \"\",\n            notes: \"\",\n         });\n\n         this.on(\"field.added\", (field) => {\n            // refresh our droplists with the new field.\n            this.refreshOptions(this.CurrentObject, this._view);\n            if (this._autoSelectInput) {\n               $$(this._autoSelectInput)?.setValue(field.id);\n            }\n         });\n\n         this._autoSelectInput = null;\n         // {string}\n         // contains the webix.id of the input that should be auto selected\n         // if we receive a \"field.add\" event;\n\n         this._dateFields = [];\n         // {array}\n         // an array of webix options { id, value } that represent all the date\n         // fields of the CurrentObject.\n      }\n\n      /**\n       * unique key describing this View.\n       * @return {string}\n       */\n      type() {\n         return \"gantt\";\n      }\n\n      /**\n       * @return {string}\n       */\n      icon() {\n         return \"fa fa-tasks\";\n      }\n\n      refreshOptions(object, view) {\n         let ids = this.ids;\n\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // sort by value\n         dateFields.sort((a, b) => (a.value > b.value ? 1 : -1));\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n         this._dateFields = dateFields;\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // sort by value\n         numberFields.sort((a, b) => (a.value > b.value ? 1 : -1));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         this._numberFields = numberFields;\n\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         // let decimalFields = object\n         //    .fields((f) => f instanceof ABFieldNumber)\n         //    .map(({ id, label }) => ({ id, value: label }));\n\n         // // sort by value\n         // decimalFields.sort((a, b) => (a.value > b.value ? 1 : -1));\n\n         // // Add default option\n         // decimalFields.unshift({\n         //    id: \"none\",\n         //    value: L(\"Select a number field\"),\n         // });\n         $$(ids.progress).define(\"options\", numberFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // sort by value\n         stringFields.sort((a, b) => (a.value > b.value ? 1 : -1));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         this._stringFields = stringFields;\n\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDateFieldID) {\n            $$(ids.startDate).define(\"value\", view.startDateFieldID);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDateFieldID) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDateFieldID || defaultValues.settings.endDateFieldID\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.durationFieldID) {\n            $$(ids.duration).define(\n               \"value\",\n               view.durationFieldID || defaultValues.settings.durationFieldID\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progressFieldID) {\n            $$(ids.progress).define(\"value\", view.progressFieldID);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notesFieldID) {\n            $$(ids.notes).define(\"value\", view.notesFieldID);\n            $$(ids.notes).refresh();\n         }\n      }\n\n      /**\n       * @method syncCommonLists()\n       * Make sure the given lists do not contain options for the other lists\n       * in their selections.\n       * In this case, we have multiple lists of fields that can be options for\n       * the start and end dates.  However once the start date field is chosen\n       * we want to make sure that entry doesn't show up in the end date.\n       * @param {array} commonIDs\n       *        an array of [ webix.id, webix.id ] of the lists that share the\n       *        same values, but shouldn't show the options of the others.\n       * @param {array} fullOptions\n       *        The full list of options available for those lists.\n       */\n      syncCommonLists(commonIDs, fullOptions) {\n         // for each of the Other lists\n\n         commonIDs.forEach((idCurr) => {\n            let otherVals = [];\n            let otherIDs = commonIDs.filter((i) => i != idCurr);\n            otherIDs.forEach((idOther) => {\n               otherVals.push($$(idOther).getValue());\n            });\n\n            let $list = $$(idCurr);\n            let newOptions = fullOptions.filter(\n               (o) => otherVals.indexOf(o.id) == -1\n            );\n            $list.define(\"options\", newOptions);\n            $list.refresh();\n         });\n      }\n\n      ui() {\n         let ids = this.ids;\n\n         // let labels = {\n         //    common: App.labels,\n         //    component: {\n         //       title: L(\"ab.add_view.gantt.title\", \"*Title\"),\n         //       startDate: L(\"ab.add_view.gantt.startDate\", \"*Start Date\"),\n         //       endDate: L(\"ab.add_view.gantt.endDate\", \"*End Date\"),\n         //       duration: L(\"ab.add_view.gantt.duration\", \"*Duration\"),\n         //       progress: L(\"ab.add_view.gantt.progress\", \"*Progress\"),\n         //       notes: L(\"ab.add_view.gantt.notes\", \"*Notes\"),\n\n         //       datePlaceholder: L(\n         //          \"ab.add_view.gantt.datePlaceholder\",\n         //          \"*Select a date field\"\n         //       ),\n         //       numberPlaceholder: L(\n         //          \"ab.add_view.gantt.numberPlaceholder\",\n         //          \"*Select a number field\"\n         //       ),\n         //       stringPlaceholder: L(\n         //          \"ab.add_view.gantt.stringPlaceholder\",\n         //          \"*Select a string field\"\n         //       ),\n         //    },\n         // };\n\n         // var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         //    App,\n         //    idBase + \"_gantt\"\n         // );\n\n         return {\n            batch: \"gantt\",\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.title,\n                        view: \"richselect\",\n                        label: `<span style='opacity: 0.6;' class='webix_icon fa fa-calendar'></span> ${L(\n                           \"Title\"\n                        )}`,\n                        placeholder: L(\"Select a string field\"),\n                        labelWidth: 130,\n                        name: \"titleFieldID\",\n                        options: [],\n                        on: {\n                           onChange: (newValue, oldValue) => {\n                              this.syncCommonLists(\n                                 [ids.title, ids.notes],\n                                 this._stringFields\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-plus\",\n                        label: \"\",\n                        width: 30,\n                        click: () => {\n                           this._autoSelectInput = ids.title;\n                           this.emit(\"new.field\", ABFieldString.defaults().key);\n                        },\n                     },\n                  ],\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.startDate,\n                        view: \"richselect\",\n                        label: `<span style='opacity: 0.6;' class='webix_icon fa fa-calendar'></span> ${L(\n                           \"Start Date\"\n                        )}`,\n                        placeholder: L(\"Select a date field\"),\n                        labelWidth: 130,\n                        name: \"startDateFieldID\",\n                        required: true,\n                        options: [],\n                        on: {\n                           onChange: (newValue, oldValue) => {\n                              this.syncCommonLists(\n                                 [ids.startDate, ids.endDate],\n                                 this._dateFields\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-plus\",\n                        label: \"\",\n                        width: 30,\n                        click: () => {\n                           this._autoSelectInput = ids.startDate;\n                           this.emit(\"new.field\", ABFieldDate.defaults().key);\n                        },\n                     },\n                  ],\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.endDate,\n                        view: \"richselect\",\n                        label: `<span style='opacity: 0.6;' class='webix_icon fa fa-calendar'></span> ${L(\n                           \"End Date\"\n                        )}`,\n                        placeholder: L(\"Select a date field\"),\n                        labelWidth: 130,\n                        name: \"endDateFieldID\",\n                        options: [],\n                        on: {\n                           onChange: (newValue, oldValue) => {\n                              this.syncCommonLists(\n                                 [ids.startDate, ids.endDate],\n                                 this._dateFields\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-plus\",\n                        label: \"\",\n                        width: 30,\n                        click: () => {\n                           this._autoSelectInput = ids.endDate;\n                           this.emit(\"new.field\", ABFieldDate.defaults().key);\n                        },\n                     },\n                  ],\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.duration,\n                        view: \"richselect\",\n                        label: `<span style='opacity: 0.6;' class='webix_icon fa fa-hashtag'></span> ${L(\n                           \"Duration\"\n                        )}`,\n                        placeholder: L(\"Select a number field\"),\n                        labelWidth: 130,\n                        name: \"durationFieldID\",\n                        options: [],\n                        on: {\n                           onChange: (newValue, oldValue) => {\n                              this.syncCommonLists(\n                                 [ids.duration, ids.progress],\n                                 this._numberFields\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-plus\",\n                        label: \"\",\n                        width: 30,\n                        click: () => {\n                           this._autoSelectInput = ids.duration;\n                           this.emit(\"new.field\", ABFieldNumber.defaults().key);\n                        },\n                     },\n                  ],\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.progress,\n                        view: \"richselect\",\n                        label: `<span style='opacity: 0.6;' class='webix_icon fa fa-hashtag'></span> ${L(\n                           \"Progress\"\n                        )}`,\n                        placeholder: L(\"Select a number field\"),\n                        labelWidth: 130,\n                        name: \"progressFieldID\",\n                        required: false,\n                        options: [],\n                        on: {\n                           onChange: (newValue, oldValue) => {\n                              this.syncCommonLists(\n                                 [ids.duration, ids.progress],\n                                 this._numberFields\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-plus\",\n                        label: \"\",\n                        width: 30,\n                        click: () => {\n                           this._autoSelectInput = ids.progress;\n                           this.emit(\"new.field\", ABFieldNumber.defaults().key);\n                        },\n                     },\n                  ],\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.notes,\n                        view: \"richselect\",\n                        label: `<span style='opacity: 0.6;' class='webix_icon fa fa-align-right'></span> ${L(\n                           \"Notes\"\n                        )}`,\n                        placeholder: L(\"Select a string field\"),\n                        labelWidth: 130,\n                        name: \"notesFieldID\",\n                        required: false,\n                        options: [],\n                        on: {\n                           onChange: (newValue, oldValue) => {\n                              this.syncCommonLists(\n                                 [ids.title, ids.notes],\n                                 this._stringFields\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-plus\",\n                        label: \"\",\n                        width: 30,\n                        click: () => {\n                           this._autoSelectInput = ids.notes;\n                           this.emit(\n                              \"new.field\",\n                              ABFieldLongText.defaults().key\n                           );\n                        },\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      init(object, view) {\n         this.objectLoad(object);\n         this._view = view;\n         this.refreshOptions(object, view);\n      }\n\n      validate($form) {\n         let ids = this.ids;\n\n         let endDate =\n               $$(ids.endDate).getValue() ||\n               defaultValues.settings.endDateFieldID,\n            duration =\n               $$(ids.duration).getValue() ||\n               defaultValues.settings.durationFieldID;\n\n         if (\n            endDate == defaultValues.settings.endDateFieldID &&\n            duration == defaultValues.settings.durationFieldID\n         ) {\n            $form.markInvalid(\"endDateFieldID\", \"Required\");\n            $form.markInvalid(\"duration\", \"Required\");\n\n            return false;\n         } else {\n            return true;\n         }\n      }\n\n      values() {\n         let ids = this.ids;\n\n         let result = {};\n\n         result.titleFieldID =\n            $$(ids.title).getValue() || defaultValues.settings.titleFieldID;\n         result.startDateFieldID =\n            $$(ids.startDate).getValue() ||\n            defaultValues.settings.startDateFieldID;\n         result.endDateFieldID =\n            $$(ids.endDate).getValue() || defaultValues.settings.endDateFieldID;\n         result.durationFieldID =\n            $$(ids.duration).getValue() ||\n            defaultValues.settings.durationFieldID;\n         result.progressFieldID =\n            $$(ids.progress).getValue() ||\n            defaultValues.settings.progressFieldID;\n         result.notesFieldID =\n            $$(ids.notes).getValue() || defaultValues.settings.notesFieldID;\n\n         return result;\n      }\n\n      /**\n       * @method fromObj\n       * take our persisted data, and properly load it\n       * into this object instance.\n       * @param {json} data  the persisted data\n       */\n      fromSettings(data) {\n         for (let v in defaultValues) {\n            if (v != \"settings\") {\n               this[v] = data[v] || defaultValues[v];\n            }\n         }\n         this.settings = {};\n         for (let v in defaultValues.settings) {\n            this.settings[v] = data.settings?.[v] ?? defaultValues.settings[v];\n         }\n\n         this.type = this.type();\n      }\n\n      /**\n       * @method toObj()\n       * compile our current state into a {json} object\n       * that can be persisted.\n       */\n      toSettings() {\n         var obj = {}; //super.toObj();\n\n         for (let v in defaultValues) {\n            if (v != \"settings\") {\n               obj[v] = this[v] || defaultValues[v];\n            }\n         }\n         obj.settings = {};\n         for (let s in defaultValues.settings) {\n            obj.settings[s] = this.settings?.[s] || defaultValues.settings[s];\n         }\n\n         obj.key = this.type();\n         obj.type = this.type();\n         return obj;\n      }\n   }\n\n   return new ABObjectWorkspaceViewGantt(ibase);\n}\n","// ABViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n// These properties serve 2 purposes: they collect the configuration information\n// for a grid view, and they also are able to store those settings\n\n// const ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB, ibase) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class ABViewGrid extends UIClass {\n      constructor(idBase) {\n         super(idBase);\n\n         /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n      }\n\n      /**\n       * unique key describing this View.\n       * @return {string}\n       */\n      type() {\n         return \"grid\";\n      }\n\n      /**\n       * @return {string}\n       */\n      icon() {\n         return \"fa fa-table\";\n      }\n\n      /**\n       * @method fromObj\n       * take our persisted data, and properly load it\n       * into this object instance.\n       * @param {json} data  the persisted data\n       */\n      fromSettings(data) {\n         // super.fromObj(data);\n\n         for (var v in defaultValues) {\n            this[v] = data[v] || defaultValues[v];\n         }\n\n         this.type = this.type();\n         this.key = this.type();\n      }\n\n      /**\n       * @method toObj()\n       * compile our current state into a {json} object\n       * that can be persisted.\n       */\n      toSettings() {\n         var obj = {}; // super.toObj();\n\n         for (var v in defaultValues) {\n            obj[v] = this[v] || defaultValues[v];\n         }\n\n         obj.key = this.type();\n         obj.type = this.type();\n         return obj;\n      }\n   }\n\n   return new ABViewGrid(ibase);\n}\n","// ABViewKanbanProperties.js\n//\n// Manages the settings for a KanBan View in the Object Workspace\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   // filterConditions: [], // array of filters to apply to the data table\n   // sortFields: [],\n   settings: {\n      verticalGroupingField: null,\n      horizontalGroupingField: null,\n      ownerField: null,\n   },\n};\n\nimport UI_Class from \"../../ui_class\";\n\nexport default function (AB, ibase) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   const ABFieldConnect = AB.Class.ABFieldManager.fieldByKey(\"connectObject\");\n   const ABFieldList = AB.Class.ABFieldManager.fieldByKey(\"list\");\n   const ABFieldUser = AB.Class.ABFieldManager.fieldByKey(\"user\");\n\n   class ABViewKanban extends UIClass {\n      constructor(idBase) {\n         super(idBase, {\n            vGroupInput: \"\",\n            hGroupInput: \"\",\n            ownerInput: \"\",\n         });\n\n         this.on(\"field.added\", (field) => {\n            // refresh our droplists with the new field.\n            this.refreshOptions(this.CurrentObject, this._view);\n            if (this._autoSelectInput) {\n               $$(this._autoSelectInput)?.setValue(field.id);\n            }\n         });\n\n         this._autoSelectInput = null;\n         // {string}\n         // contains the webix.id of the input that should be auto selected\n         // if we receive a \"field.add\" event;\n      }\n\n      /**\n       * unique key describing this View.\n       * @return {string}\n       */\n      type() {\n         return \"kanban\";\n      }\n\n      /**\n       * @return {string}\n       */\n      icon() {\n         return \"fa fa-columns\";\n      }\n\n      refreshOptions(object, view, options = {}) {\n         let ids = this.ids;\n\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      }\n\n      ui() {\n         let ids = this.ids;\n         return {\n            batch: \"kanban\",\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.vGroupInput,\n                        view: \"richselect\",\n                        label: `<span style=\"opacity: 0.6;\" class='webix_icon fa fa-columns'></span> ${L(\n                           \"Vertical Grouping\"\n                        )}`,\n                        placeholder: L(\"Select a field\"),\n                        labelWidth: 180,\n                        name: \"vGroup\",\n                        required: true,\n                        options: [],\n                        on: {\n                           onChange: function (id) {\n                              $$(ids.vGroupInput).validate();\n                              $$(ids.hGroupInput).validate();\n                           },\n                        },\n                        invalidMessage: L(\"Required\"),\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-plus\",\n                        label: \"\",\n                        width: 30,\n                        click: () => {\n                           this._autoSelectInput = ids.vGroupInput;\n                           this.emit(\"new.field\", ABFieldList.defaults().key);\n                        },\n                     },\n                  ],\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.hGroupInput,\n                        view: \"richselect\",\n                        label: `<span style=\"opacity: 0.6;\"class='webix_icon fa fa-list'></span> ${L(\n                           \"Horizontal Grouping\"\n                        )}`,\n                        placeholder: L(\"Select a field\"),\n                        labelWidth: 180,\n                        name: \"hGroup\",\n                        required: false,\n                        options: [],\n                        invalidMessage: L(\n                           \"Cannot be the same as vertical grouping field\"\n                        ),\n                        validate: (value) => {\n                           var vGroupValue = $$(ids.vGroupInput).getValue();\n                           return (\n                              !vGroupValue || !value || vGroupValue !== value\n                           );\n                        },\n                        on: {\n                           onChange: function (id) {\n                              $$(ids.hGroupInput).validate();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-plus\",\n                        label: \"\",\n                        width: 30,\n                        click: () => {\n                           this._autoSelectInput = ids.hGroupInput;\n                           this.emit(\"new.field\", ABFieldList.defaults().key);\n                        },\n                     },\n                  ],\n               },\n               {\n                  cols: [\n                     {\n                        view: \"richselect\",\n                        label: `<span style=\"opacity: 0.6;\" class='webix_icon fa fa-user-circle'></span> ${L(\n                           \"Card Owner\"\n                        )}`,\n                        placeholder: L(\"Select a user field\"),\n                        id: ids.ownerInput,\n                        labelWidth: 180,\n                        name: \"owner\",\n                        options: [],\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-plus\",\n                        label: \"\",\n                        width: 30,\n                        click: () => {\n                           this._autoSelectInput = ids.ownerInput;\n                           this.emit(\n                              \"new.field\",\n                              ABFieldConnect.defaults().key\n                           );\n                        },\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      init(object, view) {\n         this.objectLoad(object);\n         this._view = view;\n         this.refreshOptions(object, view);\n      }\n\n      values() {\n         let ids = this.ids;\n         let result = {};\n         result.verticalGroupingField = $$(ids.vGroupInput).getValue() || null;\n         result.horizontalGroupingField =\n            $$(ids.hGroupInput).getValue() || null;\n         result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n         return result;\n      }\n\n      /**\n       * @method fromObj\n       * take our persisted data, and properly load it\n       * into this object instance.\n       * @param {json} data  the persisted data\n       */\n      fromSettings(data) {\n         // super.fromObj(data);\n\n         for (var v in defaultValues) {\n            this[v] = data[v] || defaultValues[v];\n         }\n\n         this.type = this.type();\n         this.key = this.type();\n      }\n\n      /**\n       * @method toObj()\n       * compile our current state into a {json} object\n       * that can be persisted.\n       */\n      toSettings() {\n         var obj = {}; // super.toObj();\n\n         for (var v in defaultValues) {\n            obj[v] = this[v] || defaultValues[v];\n         }\n\n         obj.key = this.type();\n         obj.type = this.type();\n         return obj;\n      }\n   }\n\n   return new ABViewKanban(ibase);\n}\n","/*\n * UI\n *\n * The central Controller for the ABDesigner.\n *\n * We switch between allowing a User to Choose an application to work\n * with, and the actual Workspace for an Application.\n */\nimport UI_Class from \"./ui_class\";\nimport AppChooserFactory from \"./ui_choose.js\";\nimport AppWorkspaceFactory from \"./ui_work.js\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n\n   const AppChooser = AppChooserFactory(AB);\n   const AppWorkspace = AppWorkspaceFactory(AB);\n\n   var L = UIClass.L();\n\n   class UI extends UIClass {\n      constructor() {\n         super(\"abd\");\n         this.id = this.ids.component;\n         this.icon = \"connectdevelop\";\n      }\n\n      label() {\n         return L(\"AB Designer\");\n      }\n\n      // return \"popup\" or \"page\"\n      type() {\n         return \"page\";\n      }\n\n      // Return any sub pages.\n      pages() {\n         return [];\n      }\n\n      /* mimic the ABPage.component() */\n      component() {\n         return {\n            ui: this.ui(),\n            init: () => {\n               return this.init(AB);\n            },\n            onShow: () => {\n               /* does anything special need to happen here? */\n               this.show();\n            },\n         };\n      }\n\n      /* mimic ABPage.getUserAccess() */\n      getUserAccess() {\n         return 2;\n      }\n\n      ui() {\n         return {\n            id: this.ids.component,\n            view: \"multiview\",\n            borderless: true,\n            animate: false,\n            // height : 800,\n            rows: [AppChooser.ui(), AppWorkspace.ui()],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         AppChooser.on(\"view.workplace\", (application) => {\n            AppWorkspace.transitionWorkspace(application);\n         });\n\n         AppWorkspace.on(\"view.chooser\", () => {\n            AppChooser.show();\n         });\n         AppWorkspace.on(\"warnings\", () => {\n            AppChooser.emit(\"warnings\");\n         });\n\n         await Promise.all([AppChooser.init(AB), AppWorkspace.init(AB)]);\n\n         try {\n            await this.AB.Network.post({\n               url: `/definition/register`,\n            });\n         } catch (err) {\n            if (err?.code == \"E_NOPERM\") {\n               // ?? What do we do here ??\n               this.AB.notify.developer(err, {\n                  plugin: \"ABDesigner\",\n                  context: \"ui::init():/definition/register\",\n                  msg: \"User is not able to access /definition/register\",\n               });\n            }\n         }\n      }\n\n      /**\n       * isRoot()\n       * indicates this is a RootPage.\n       * @return {bool}\n       */\n      isRoot() {\n         return true;\n      }\n\n      show() {\n         super.show();\n         AppChooser.show();\n      }\n   }\n   return new UI();\n}\n","/*\n * UI Choose\n *\n * Display the initial options of Applications we can work with.\n *\n * When choosing an initial application to work with, we can\n *   - select an application from a list  :  ab_choose_list\n *   - create an application from a form  :  ab_choose_form\n *\n */\nimport UI_Class from \"./ui_class\";\nimport AB_Choose_List_Factory from \"./ui_choose_list\";\nimport AB_Choose_Form_Factory from \"./ui_choose_form\";\n\nexport default function (AB) {\n   const AppList = AB_Choose_List_Factory(AB);\n   const AppForm = AB_Choose_Form_Factory(AB);\n   const UIClass = UI_Class(AB);\n\n   class UI_Choose extends UIClass {\n      constructor() {\n         super(\"abd_choose\");\n      }\n\n      ui() {\n         return {\n            id: this.ids.component,\n            view: \"multiview\",\n            animate: false,\n            cells: [AppList.ui()],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         this.warningsPropogate([AppList, AppForm]);\n         this.on(\"warnings\", () => {\n            AppList.refreshList();\n         });\n\n         AppList.on(\"view.workplace\", (application) => {\n            this.emit(\"view.workplace\", application);\n         });\n\n         AppList.on(\"view.form\", () => {\n            AppForm.formReset();\n            AppForm.show();\n         });\n\n         AppList.on(\"edit.form\", (app) => {\n            AppForm.formPopulate(app);\n            AppForm.show();\n         });\n\n         AppForm.on(\"view.list\", () => {\n            AppList.show();\n         });\n         return Promise.all([AppList.init(AB), AppForm.init(AB)]);\n      }\n\n      show() {\n         super.show();\n         AppList.show();\n      }\n   }\n   return new UI_Choose();\n}\n","/*\n * AB Choose Form\n *\n * Display the form for creating a new Application.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_Warnings from \"./ui_warnings\";\n// const ABComponent = require(\"../classes/platform/ABComponent\");\n// const ABApplication = require(\"../classes/platform/ABApplication\");\nimport ABProcessParticipant_selectManagersUI from \"./properties/process/ABProcessParticipant_selectManagersUI.js\";\n\nexport default function (AB, init_settings) {\n   const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n   const ClassSelectManagersUI = ABProcessParticipant_selectManagersUI(AB);\n\n   var Warnings = UI_Warnings(AB, `view_warnings`, init_settings);\n\n   var issue_icon =\n      \"<span class='webix_icon wxi-alert' style='font-size:18px; color:#EED202;'>&nbsp;</span>\";\n\n   var richselect_icon = AB.UISettings.icons.map((x) => `fa-${x}`);\n\n   class ABChooseForm extends UIClass {\n      // .extend(idBase, function(App) {\n\n      constructor() {\n         super(\"abd_choose_form\", {\n            form: \"\",\n            appFormPermissionList: \"\",\n            appFormCreateRoleButton: \"\",\n\n            saveButton: \"\",\n            accessManager: \"\",\n            accessManagerToolbar: \"\",\n            translationManager: \"\",\n            translationManagerToolbar: \"\",\n\n            issue_id: \"\",\n            issue_list: \"\",\n         });\n      }\n\n      ui() {\n         this.accessManagerUI = new ClassSelectManagersUI(\"application_amp\");\n         this.translationManagerUI = new ClassSelectManagersUI(\n            \"application_translate\"\n         );\n\n         return {\n            view: \"window\",\n            id: this.ids.component,\n            css: \"app_form_window\",\n            height: 670,\n            width: 770,\n            position: \"center\",\n            move: true,\n            scroll: true,\n            resize: true,\n            modal: true,\n            head: {\n               type: \"clean\",\n               cols: [\n                  // Warnings.ui(),\n                  {\n                     view: \"spacer\",\n                     width: 4,\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-alert\",\n                     css: \"alert\",\n                     on: {\n                        onItemClick: () => {\n                           const $issueID = $$(this.ids.issue_id);\n                           const $issueList = $$(this.ids.issue_list);\n\n                           $issueList.define(\"data\", this.warningData());\n                           $issueList.refresh();\n                           $issueID.show();\n                        },\n                     },\n                  },\n                  {\n                     template: L(\"Application Info\"),\n                     type: \"header\",\n                     css: \"webix_win_title\",\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     click() {\n                        this.getTopParentView().hide();\n                     },\n                  },\n                  {\n                     view: \"spacer\",\n                     width: 4,\n                  },\n               ],\n            },\n            body: {\n               view: \"scrollview\",\n               scroll: true,\n               body: {\n                  padding: 4,\n                  cols: [\n                     {\n                        view: \"spacer\",\n                        width: 2,\n                     },\n                     {\n                        rows: [\n                           {\n                              view: \"form\",\n                              id: this.ids.form,\n                              rules: {\n                                 label: (value) => {\n                                    return (\n                                       0 < value.length && value.length <= 20\n                                    );\n                                 },\n                              },\n                              borderless: true,\n                              elements: [\n                                 {\n                                    name: \"label\",\n                                    view: \"text\",\n                                    label: L(\"Name\"),\n                                    labelWidth: 100,\n                                    placeholder: L(\"Application Name\"),\n                                    invalidMessage: L(\n                                       \"&nbsp; Name must be less than or equal to 20 letters.\"\n                                    ),\n                                    on: {\n                                       onAfterRender() {\n                                          AB.ClassUI.CYPRESS_REF(\n                                             this,\n                                             \"abd_choose_form_label\"\n                                          );\n                                       },\n                                    },\n                                 },\n                                 {\n                                    name: \"icon\",\n                                    view: \"richselect\",\n                                    id: \"richselect1\",\n                                    label: L(\"Icon\"),\n                                    labelWidth: 100,\n                                    placeholder: L(\"Menu Icon\"),\n                                    options: {\n                                       body: {\n                                          template:\n                                             \"<span class='fa #value#' style='color: #33b5e5;'></span>&nbsp; #value#\",\n                                          yCount: 3,\n                                          data: richselect_icon,\n                                       },\n                                    },\n                                    on: {\n                                       onAfterRender() {\n                                          AB.ClassUI.CYPRESS_REF(\n                                             this,\n                                             \"abd_choose_form_icon\"\n                                          );\n                                       },\n                                    },\n                                 },\n                                 { height: uiConfig.smallSpacer },\n                                 {\n                                    name: \"description\",\n                                    view: \"textarea\",\n                                    label: L(\"Description\"),\n                                    labelWidth: 100,\n                                    height: 100,\n                                    placeholder: L(\"Application Description\"),\n                                    on: {\n                                       onAfterRender() {\n                                          AB.ClassUI.CYPRESS_REF(\n                                             this,\n                                             \"abd_choose_form_description\"\n                                          );\n                                       },\n                                    },\n                                 },\n                                 {\n                                    view: \"spacer\",\n                                    height: 4,\n                                 },\n                                 {\n                                    name: \"isSystemObject\",\n                                    view: \"checkbox\",\n                                    labelRight: L(\"Is this a System Object?\"),\n                                    labelWidth: 0,\n                                    on: {\n                                       onAfterRender() {\n                                          AB.ClassUI.CYPRESS_REF(\n                                             this,\n                                             \"abd_choose_form_isSystemObj\"\n                                          );\n                                       },\n                                    },\n                                 },\n                                 {\n                                    view: \"label\",\n                                    label: L(\"Who can use this app?\"),\n                                    css: \"npr_smallLabels\",\n                                 },\n                                 // {\n                                 //    view: \"checkbox\",\n                                 //    id: this.ids.appFormCreateRoleButton,\n                                 //    align: \"right\",\n                                 //    labelRight: L(\"Create new role\"),\n                                 //    labelWidth: 0,\n                                 //    width: 150,\n                                 //    on: {\n                                 //       onItemClick: (/* id, e */) => {\n                                 //          this.createRoleButtonClick();\n                                 //       },\n                                 //    },\n                                 // },\n                                 {\n                                    name: \"roleAccess\",\n                                    view: \"multicombo\",\n                                    id: this.ids.appFormPermissionList,\n                                    label: \"\",\n                                    labelPosition: \"top\",\n                                    placeholder: L(\"Click to add Role\"),\n                                    button: true,\n                                    on: {\n                                       onAfterRender() {\n                                          this.data.value.forEach((a) => {\n                                             AB.ClassUI.CYPRESS_REF(\n                                                // this.getItemNode(a.id),\n                                                `perm_role_${a.id}`\n                                             );\n                                          });\n                                       },\n                                       // onItemClick: (id, e, node) => {\n                                       //    this.permissionClick(id, e, node);\n                                       // },\n                                       onChange: function () {\n                                          webix.message({\n                                             text: L(\"Data was changed\"),\n                                             type: \"success\",\n                                          });\n                                       },\n                                    },\n                                 },\n                                 {\n                                    name: \"isAccessManaged\",\n                                    view: \"checkbox\",\n                                    labelRight: L(\n                                       \"Enable Page / Tab Access Management\"\n                                    ),\n                                    labelWidth: 0,\n                                    on: {\n                                       onAfterRender() {\n                                          AB.ClassUI.CYPRESS_REF(\n                                             this,\n                                             \"abd_choose_form_isAccessManaged\"\n                                          );\n                                       },\n                                       onChange: (newv /* , oldv */) => {\n                                          if (newv) {\n                                             $$(this.ids.accessManager).show();\n                                             $$(\n                                                this.ids.accessManagerToolbar\n                                             ).show();\n                                          } else {\n                                             $$(this.ids.accessManager).hide();\n                                             $$(\n                                                this.ids.accessManagerToolbar\n                                             ).hide();\n                                          }\n                                       },\n                                       onItemClick: (id /*, e */) => {\n                                          var enabled = $$(id).getValue();\n                                          if (enabled) {\n                                             $$(this.ids.accessManager).show();\n                                             $$(\n                                                this.ids.accessManagerToolbar\n                                             ).show();\n                                          } else {\n                                             $$(this.ids.accessManager).hide();\n                                             $$(\n                                                this.ids.accessManagerToolbar\n                                             ).hide();\n                                          }\n                                       },\n                                    },\n                                 },\n                                 {\n                                    view: \"toolbar\",\n                                    id: this.ids.accessManagerToolbar,\n                                    cols: [\n                                       {\n                                          view: \"label\",\n                                          label: L(\n                                             \"Who can manage page / tab access for this app?\"\n                                          ), // labels.component.managerHeader,\n                                          css: \"npr_smallLabels\",\n                                       },\n                                    ],\n                                    borderless: true,\n                                    hidden:\n                                       parseInt(this.accessManagement) == 1\n                                          ? false\n                                          : true,\n                                 },\n                                 {\n                                    id: this.ids.accessManager,\n                                    rows: [this.accessManagerUI.ui()],\n                                    paddingY: 10,\n                                    hidden:\n                                       parseInt(this.accessManagement) == 1\n                                          ? false\n                                          : true,\n                                 },\n                                 {\n                                    view: \"spacer\",\n                                    height: 6,\n                                 },\n                                 {\n                                    name: \"isTranslationManaged\",\n                                    view: \"checkbox\",\n                                    labelRight: L(\"Enable Translation Tool\"), // labels.component.enableTranslationManagement,\n                                    labelWidth: 0,\n                                    on: {\n                                       onAfterRender() {\n                                          AB.ClassUI.CYPRESS_REF(\n                                             this,\n                                             \"abd_choose_form_isTranslationManaged\"\n                                          );\n                                       },\n                                       onChange: (newv /*, oldv */) => {\n                                          if (newv) {\n                                             $$(\n                                                this.ids.translationManager\n                                             ).show();\n                                             $$(\n                                                this.ids\n                                                   .translationManagerToolbar\n                                             ).show();\n                                          } else {\n                                             $$(\n                                                this.ids.translationManager\n                                             ).hide();\n                                             $$(\n                                                this.ids\n                                                   .translationManagerToolbar\n                                             ).hide();\n                                          }\n                                       },\n                                       onItemClick: (id /*, e*/) => {\n                                          var enabled = $$(id).getValue();\n                                          if (enabled) {\n                                             $$(\n                                                this.ids.translationManager\n                                             ).show();\n                                             $$(\n                                                this.ids\n                                                   .translationManagerToolbar\n                                             ).show();\n                                          } else {\n                                             $$(\n                                                this.ids.translationManager\n                                             ).hide();\n                                             $$(\n                                                this.ids\n                                                   .translationManagerToolbar\n                                             ).hide();\n                                          }\n                                       },\n                                    },\n                                 },\n                                 {\n                                    view: \"toolbar\",\n                                    id: this.ids.translationManagerToolbar,\n                                    cols: [\n                                       {\n                                          view: \"label\",\n                                          label: L(\n                                             \"Who can translate this app?\"\n                                          ),\n                                          css: \"npr_smallLabels\",\n                                       },\n                                    ],\n                                    borderless: true,\n                                    hidden:\n                                       parseInt(this.translationManagement) == 1\n                                          ? false\n                                          : true,\n                                 },\n                                 {\n                                    id: this.ids.translationManager,\n                                    rows: [this.translationManagerUI.ui()],\n                                    paddingY: 10,\n                                    hidden:\n                                       parseInt(this.translationManagement) == 1\n                                          ? false\n                                          : true,\n                                 },\n                                 {\n                                    view: \"spacer\",\n                                    height: 2,\n                                 },\n                                 {\n                                    view: \"toolbar\",\n                                    margin: 14,\n                                    paddingY: 20,\n                                    cols: [\n                                       {\n                                          view: \"button\",\n                                          value: L(\"Cancel\"),\n                                          css: \"ab-cancel-button\",\n                                          inputWidth: 100,\n                                          align: \"right\",\n                                          click: () => {\n                                             this.cancel();\n                                          },\n                                          on: {\n                                             onAfterRender() {\n                                                AB.ClassUI.CYPRESS_REF(\n                                                   this,\n                                                   \"abd_choose_form_cancel\"\n                                                );\n                                             },\n                                          },\n                                       },\n                                       {\n                                          view: \"button\",\n                                          id: this.ids.saveButton,\n                                          value: L(\"Save\"),\n                                          css: \"webix_primary\",\n                                          inputWidth: 100,\n                                          click: () => {\n                                             this.buttonSaveClick();\n                                          }, // end click()\n                                          on: {\n                                             onAfterRender() {\n                                                AB.ClassUI.CYPRESS_REF(this);\n                                             },\n                                          },\n                                       },\n                                    ],\n                                    borderless: true,\n                                 },\n                              ],\n                           },\n                        ],\n                     },\n                     {\n                        view: \"spacer\",\n                        width: 8,\n                     },\n                  ],\n               },\n            },\n         };\n      } // ui()\n\n      init(AB) {\n         this.AB = AB;\n\n         this.AB.Webix.ui(this.ui());\n\n         webix.extend($$(this.ids.form), this.AB.Webix.ProgressBar);\n         webix.extend(\n            $$(this.ids.appFormPermissionList),\n            this.AB.Webix.ProgressBar\n         );\n\n         // Warnings.init(AB);\n\n         // $$(Warnings.ids.buttonWarning).show();\n\n         const $warningsWindow = this.AB.Webix.ui({\n            view: \"window\",\n            id: this.ids.issue_id,\n            css: \"app_form_window_2\",\n            height: 222,\n            width: 700,\n            head: {\n               type: \"clean\",\n               cols: [\n                  {\n                     view: \"spacer\",\n                     width: 50,\n                  },\n                  {\n                     template: issue_icon + L(\" Issues\"),\n                     type: \"header\",\n                     css: \"webix_win_title\",\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     click() {\n                        this.getTopParentView().hide();\n                     },\n                  },\n                  {\n                     view: \"spacer\",\n                     width: 4,\n                  },\n               ],\n            },\n            position: \"center\",\n            close: true,\n            modal: true,\n            move: true,\n            scroll: true,\n            body: {\n               rows: [\n                  {\n                     view: \"list\",\n                     id: this.ids.issue_list,\n                     template: issue_icon + \" #issue#\",\n                     scrollX: true,\n                     scrollY: true,\n                     select: true,\n                     editable: false,\n                     autoheight: false,\n                     autowidth: false,\n                     data: [],\n                     click() {\n                        this.getParentView().show();\n                     },\n                  },\n               ],\n            },\n         });\n\n         // Make sure we listen for New/Updated Role information\n\n         this.permissionPopulate();\n      }\n\n      toList() {\n         this.emit(\"view.list\");\n      }\n\n      warningData() {\n         const apps = this.AB.applications();\n         const warnings = [];\n\n         apps.forEach((e) => {\n            warnings.push(...e.warningsAll());\n         });\n\n         return warnings?.length\n            ? warnings.map((e, i) => {\n                 return { id: i, issue: L(e.message) };\n              })\n            : [{ id: 1, issue: L(\"No Issues Found\") }];\n      }\n\n      /**\n       * @function applicationCreate\n       *\n       * Step through the process of creating an ABApplication with the\n       * current state of the Form.\n       *\n       * @param {obj} values \tcurrent value hash of the form values.\n       */\n      async applicationCreate(values) {\n         // on a CREATE, make sure .name is set:\n         values.name = values.label;\n\n         // work with a new ABApplication\n         var app = this.AB.applicationNew(values);\n         try {\n            await app.save();\n            webix.message({\n               type: \"success\",\n               text: L(\"{0}&nbsp; Successfully Created\", [values.label]),\n            });\n\n            // NOTE: the new App isn't actually stored in AB.applications()\n            // until after the 'ab.abdefinition.created' message is returned\n            // from the Server.\n\n            // TODO: detect if our Network type is REST and then manually\n            // add the Application to the AB factory.\n         } catch (e) {\n            webix.message({\n               type: \"error\",\n               text: L(\"Error Creating {0}\", [values.label]),\n            });\n            this.AB.notify.developer(e, {\n               plugin: \"ABDesigner\",\n               context: \"ui_choose_form:applicationCreate()\",\n               values,\n            });\n         }\n      }\n\n      /**\n       * @method applicationUpdate\n       * Step through the process of updating an ABApplication with the\n       * current state of the Form.\n       * @param {ABApplication} application\n       */\n      async applicationUpdate(Application) {\n         var values = this.formValues();\n         // {hash} /key : value\n         // the new values pulled from the form\n\n         var oldVals = {};\n         // {hash} /key : value\n         // a set of the original values to reset to incase of an error saving.\n\n         Object.keys(values).forEach((k) => {\n            oldVals[k] = Application[k];\n            Application[k] = values[k];\n         });\n\n         try {\n            await Application.save();\n            webix.message({\n               type: \"success\",\n               text: L(\"{0} Successfully Updated\", [Application.label]),\n            });\n         } catch (e) {\n            webix.message({\n               type: \"error\",\n               text: L(\"Error Updating {0}\", [Application.label]),\n            });\n            this.AB.notify.developer(e, {\n               context: \"ui_choose_form:applicationUpdate()\",\n               application: Application.toObj(),\n               values,\n            });\n            // Reset our Application to the original values.\n            Object.keys(oldVals).forEach((k) => {\n               Application[k] = oldVals[k];\n            });\n         }\n\n         // .then(function () {\n         //    next();\n         // })\n         // .catch(next);\n\n         /*\n               async.waterfall(\n                  [\n                     function (next) {\n                        _logic\n                           .permissionSave(Application)\n                           .then(function (result) {\n                              next(null, result);\n                           })\n                           .catch(next);\n                     },\n                     function (app_role, next) {\n                        // Update application data\n                        Application.label = values.label;\n                        Application.description = values.description;\n                        // Application.isAdminApp = values.isAdminApp;\n                        Application.isAccessManaged = values.isAccessManaged;\n                        Application.isTranslationManaged =\n                           values.isTranslationManaged;\n                        Application.accessManagers = accessManagers;\n                        Application.translationManagers = translationManagers;\n\n                        if (app_role && app_role.id)\n                           Application.role = app_role.id;\n                        else Application.role = null;\n\n                        Application.save()\n                           .then(function () {\n                              next();\n                           })\n                           .catch(next);\n                     },\n                  ],\n                  function (err) {\n                     _logic.formReady();\n                     _logic.buttonSaveEnable();\n                     if (err) {\n                        webix.message({\n                           type: \"error\",\n                           text: labels.common.updateErrorMessage.replace(\n                              \"{0}\",\n                              Application.label\n                           ),\n                        });\n                        AD.error.log(\n                           \"App Builder : Error update application data\",\n                           { error: err }\n                        );\n                        return false;\n                     }\n\n                     App.actions.transitionApplicationList();\n\n                     webix.message({\n                        type: \"success\",\n                        text: labels.common.updateSucessMessage.replace(\n                           \"{0}\",\n                           Application.label\n                        ),\n                     });\n                  }\n               );\n*/\n      }\n\n      /**\n       * @function buttonSaveClick\n       * Process the user clicking on the [Save] button.\n       */\n      async buttonSaveClick() {\n         this.buttonSaveDisable();\n         this.formBusy();\n\n         // if there is a selected Application, then this is an UPDATE\n         // var updateApp = App.actions.getSelectedApplication();\n         if (this.CurrentApplication) {\n            if (this.formValidate(\"update\")) {\n               try {\n                  await this.applicationUpdate(this.CurrentApplication);\n                  this.toList();\n               } catch (e) {\n                  /* error is handled in .applicationUpdate() */\n               }\n\n               this.formReady();\n               this.buttonSaveEnable();\n               $$(this.ids.component).hide();\n            }\n         } else {\n            // else this is a Create\n            if (this.formValidate(\"add\")) {\n               try {\n                  await this.applicationCreate(this.formValues());\n                  this.formReset();\n                  this.toList();\n               } catch (e) {\n                  /* error is handled in .applicationCreate() */\n               }\n               this.formReady();\n               this.buttonSaveEnable();\n               $$(this.ids.component).hide();\n            }\n         }\n      }\n\n      /**\n       * @function buttonSaveDisable\n       * Disable the save button.\n       */\n      buttonSaveDisable() {\n         $$(this.ids.saveButton).disable();\n      }\n\n      /**\n       * @function buttonSaveEnable\n       * Re-enable the save button.\n       */\n      buttonSaveEnable() {\n         $$(this.ids.saveButton).enable();\n      }\n\n      /**\n       * @function cancel\n       * Cancel the current Form Operation and return us to the AppList.\n       */\n      cancel() {\n         this.formReset();\n         this.toList();\n         $$(this.ids.component).hide();\n         // App.actions.transitionApplicationList();\n      }\n\n      /**\n       * @function createRoleButtonClick\n       *\n       * The user clicked the [Create Role] button.  Update the UI and add a\n       * unique Application permission to our list.\n       */\n      // createRoleButtonClick: function () {\n      //    if ($$(ids.appFormCreateRoleButton).getValue()) {\n      //       // TODO: if not called from anywhere else, then move the name gathering into .permissionAddNew()\n      //       // Add new app role\n      //       var appName = $$(ids.form).elements[\"label\"].getValue();\n      //       _logic.permissionAddNew(appName);\n      //    } else {\n      //       // Remove app role\n      //       _logic.permissionRemoveNew();\n      //    }\n      // },\n\n      /**\n       * @function formBusy\n       *\n       * Show the progress indicator to indicate a Form operation is in\n       * progress.\n       */\n      formBusy() {\n         $$(this.ids.form).showProgress({ type: \"icon\" });\n      }\n\n      /**\n       * @methoc formPopulate()\n       * populate the form values from the given ABApplication\n       * @param {ABApplication} application  instance of the ABApplication\n       */\n      formPopulate(application) {\n         super.applicationLoad(application);\n\n         // Populate data to form\n         if (application) {\n            [\n               \"label\",\n               \"description\",\n               \"icon\",\n               \"isSystemObject\",\n               \"isAccessManaged\",\n               \"isTranslationManaged\",\n            ].forEach((f) => {\n               if ($$(this.ids.form).elements[f]) {\n                  $$(this.ids.form).elements[f].setValue(application[f]);\n               }\n            });\n\n            // populate access manager ui\n            var $accessManager = $$(this.ids.accessManager);\n            $accessManager.removeView($accessManager.getChildViews()[0]);\n            $accessManager.addView(\n               this.accessManagerUI.ui(application.accessManagers || {}),\n               0\n            );\n\n            // populate translation manager ui\n            var $translationManager = $$(this.ids.translationManager);\n            $translationManager.removeView(\n               $translationManager.getChildViews()[0]\n            );\n            $translationManager.addView(\n               this.translationManagerUI.ui(\n                  application.translationManagers || {}\n               ),\n               0\n            );\n         }\n\n         this.permissionPopulate(application);\n      }\n\n      /**\n       * @function formReady()\n       *\n       * remove the busy indicator from the form.\n       */\n      formReady() {\n         $$(this.ids.form).hideProgress();\n      }\n\n      /**\n       * @function formReset()\n       *\n       * return the form to an empty state.\n       */\n      formReset() {\n         super.applicationLoad(null);\n\n         $$(this.ids.form).clear();\n         $$(this.ids.form).clearValidation();\n\n         this.permissionPopulate(); // leave empty to clear selections.\n\n         $$(this.ids.accessManager).removeView(\n            $$(this.ids.accessManager).getChildViews()[0]\n         );\n         $$(this.ids.translationManager).removeView(\n            $$(this.ids.translationManager).getChildViews()[0]\n         );\n         $$(this.ids.accessManager).addView(this.accessManagerUI.ui(), 0);\n         $$(this.ids.translationManager).addView(\n            this.translationManagerUI.ui(),\n            0\n         );\n      }\n\n      /**\n       * @function formValidate()\n       * validate the form values.\n       * @param {string} op\n       *        The key of the operation we are validating. Can be either\n       *        \"add\", \"update\" or \"destroy\"\n       * @return {bool}\n       *         true if all values pass validation.  false otherwise.\n       */\n      formValidate(op) {\n         // op : ['add', 'update', 'destroy']\n\n         if (!$$(this.ids.form).validate()) {\n            // TODO : Error message\n\n            this.formReady();\n            this.buttonSaveEnable();\n            return false;\n         }\n\n         var errors = [];\n\n         // TODO: replace with manual checking of Application Name\n         switch (op) {\n            case \"add\":\n               // make sure no other Applications have the same name.\n               var values = this.formValues();\n               values.name = values.label;\n               var mockApp = this.AB.applicationNew(values);\n               var matchingApps = [];\n               (this.AB.applications() || []).forEach((app) => {\n                  // NOTE: .areaKey() uses .name in a formatted way, so\n                  // any matching .areaKey() would be a matching .name\n                  if (app.areaKey() == mockApp.areaKey()) {\n                     matchingApps.push(app);\n                  }\n               });\n               if (matchingApps.length > 0) {\n                  errors.push({\n                     attr: \"label\",\n                     msg: L(\"&nbsp; Name ({0}) is already in use.\", [\n                        mockApp.label,\n                     ]),\n                  });\n               }\n               break;\n         }\n\n         if (errors.length > 0) {\n            var hasFocus = false;\n            errors.forEach((e) => {\n               $$(this.ids.form).markInvalid(e.attr, e.msg);\n               if (!hasFocus) {\n                  $$(this.ids.form).elements[e.attr].focus();\n                  hasFocus = true;\n               }\n            });\n\n            this.formReady();\n            this.buttonSaveEnable();\n            return false;\n         }\n\n         return true;\n      }\n\n      /**\n       * @function formValues()\n       *\n       * return an object hash of name:value pairs of the current Form.\n       *\n       * @return {obj}\n       */\n      formValues() {\n         // return the current values of the Form elements.\n         const values = $$(this.ids.form).getValues();\n         values.roleAccess = (values.roleAccess ?? \"\").split(\",\"); // Convert to an array\n         // values.roleAccess = $$(this.ids.appFormPermissionList).getValue();\n         // if (!Array.isArray(values.roleAccess)) {\n         //    values.roleAccess = [values.roleAccess];\n         // }\n         values.accessManagers = this.accessManagerUI.values();\n         values.translationManagers = this.translationManagerUI.values();\n         return values;\n      }\n\n      /**\n       * @function permissionAddNew\n       *\n       * create a new permission entry based upon the current Application.label\n       *\n       * This not only adds it to our Permission List, but also selects it.\n       *\n       * @param {string} appName\tThe Application.label of the current Application\n       */\n      // permissionAddNew: function (appName) {\n      //    // add new role entry\n      //    $$(ids.appFormPermissionList).add(\n      //       {\n      //          id: \"newRole\",\n      //          name: _logic.permissionName(appName),\n      //          isApplicationRole: true,\n      //          markCheckbox: 1,\n      //       },\n      //       0\n      //    );\n\n      //    // Select new role\n      //    var selectedIds = $$(ids.appFormPermissionList).getSelectedId(\n      //       true\n      //    );\n      //    selectedIds.push(\"newRole\");\n      //    $$(ids.appFormPermissionList).select(selectedIds);\n      // },\n\n      /**\n       * @function permissionClick\n       *\n       * Process when a permission entry in the list is clicked.\n       */\n      // permissionClick(id /*, e, node*/) {\n      //    var List = $$(this.ids.appFormPermissionList);\n\n      //    var item = List.getItem(id);\n\n      //    if (List.getItem(id).isApplicationRole) {\n      //       return;\n      //    }\n\n      //    if (List.isSelected(id)) {\n      //       item.markCheckbox = 0;\n      //       List.unselect(id);\n      //    } else {\n      //       item.markCheckbox = 1;\n      //       var selectedIds = List.getSelectedId();\n\n      //       if (typeof selectedIds === \"string\" || !isNaN(selectedIds)) {\n      //          if (selectedIds) selectedIds = [selectedIds];\n      //          else selectedIds = [];\n      //       }\n\n      //       selectedIds.push(id);\n\n      //       List.select(selectedIds);\n      //       List.updateItem(id, item);\n      //    }\n      // }\n\n      /**\n       * @function permissionName\n       *\n       * returns a formatted name for a Permission Role based upon the provided Application.label\n       *\n       * @param {string} appName\tthe current value of the Application.label\n       * @return {string} \tPermission Role Name.\n       */\n      // permissionName(appName) {\n      //    return appName + \" Application Role\";\n      // }\n\n      /**\n       * @method permissionPopulate\n       * fill out the Permission list\n       * @param {ABApplication} application\tthe current ABApplication we are editing\n       */\n      permissionPopulate(application) {\n         const PermForm = $$(this.ids.appFormPermissionList);\n\n         // Get user's roles\n         const availableRoles = this.AB.Account.rolesAll().map((r) => {\n            return { id: r.id, value: r.name };\n         });\n\n         if (application) {\n            availableRoles\n               .filter((r) => application.roleAccess.indexOf(r.id) > -1)\n               .map((r) => {\n                  r.markCheckbox = 1;\n               });\n         }\n\n         const selectedIDs = availableRoles\n            .filter((r) => r.markCheckbox)\n            .map((r) => r.id);\n\n         // availableRoles.forEach(function (r) {\n         //    if (selectedIDs.indexOf(r.id) > -1) {\n         //       const item = PermForm.getValue();\n         //       item.markCheckbox = 1;\n         //    }\n         // });\n\n         PermForm.define(\"suggest\", availableRoles);\n         PermForm.refresh();\n      }\n\n      /**\n       * @function permissionRemoveNew()\n       *\n       * Intended to be called when the USER unselects the option to create a Permission\n       * for this Application.\n       *\n       * We remove any Permission Role created for this Application.\n       */\n      // permissionRemoveNew: function () {\n      //    // find any roles that are put here from our application form:\n      //    var appRoles = $$(ids.appFormPermissionList).find(function (\n      //       perm\n      //    ) {\n      //       return perm.isApplicationRole;\n      //    });\n\n      //    // remove them:\n      //    appRoles.forEach(function (r) {\n      //       $$(ids.appFormPermissionList).remove(r.id);\n      //    });\n      // },\n\n      /*\n       * permissionRenameRole\n       *\n       * When the name of the Appliction changes, change the Name of the Permission as well.\n       *\n       * @param {string} newValue  the current name of the application\n       * @param {string} oldValue  the previous name of the application\n       */\n      // permissionRenameRole(newValue, oldValue) {\n      //    var editRole = $$(ids.appFormPermissionList).find(function (d) {\n      //       return d.name === _logic.permissionName(oldValue);\n      //    });\n\n      //    editRole.forEach(function (r) {\n      //       var editItem = $$(ids.appFormPermissionList).getItem(r.id);\n      //       editItem.name = _logic.permissionName(newValue);\n\n      //       $$(ids.appFormPermissionList).updateItem(\n      //          editItem.id,\n      //          editItem\n      //       );\n      //    });\n      // }\n\n      /**\n       * @function permissionSave()\n       *\n       * step through saving the current Permission Settings and associating\n       * them with the current Application.\n       *\n       * @param {ABApplication} App  \tThe current Application we are working with.\n       * @return {Promise}\t\t\t.resolve( {Permission} ) if one is created for this App\n       */\n      // permissionSave(app) {\n      //    debugger;\n      //    //// REFACTOR:\n      //    // this step implies that ab_choose_form understands the intracies of how\n      //    // ABApplication and Permissions work.\n      //    return new Promise((resolve, reject) => {\n      //       var saveRoleTasks = [],\n      //          appRole = null;\n\n      //       //// Process the option to create a newRole For this Application:\n\n      //       // if the button is set\n      //       if ($$(ids.appFormCreateRoleButton).getValue()) {\n      //          // check to see if we already have a permission that isApplicationRole\n      //          var selectedPerms = $$(\n      //             ids.appFormPermissionList\n      //          ).getSelectedItem(true);\n      //          selectedPerms = selectedPerms.filter((perm) => {\n      //             return perm.isApplicationRole;\n      //          });\n\n      //          // if not, then create one:\n      //          if (selectedPerms.length == 0) {\n      //             // Create new role for application\n      //             saveRoleTasks.push(function (cb) {\n      //                app.createPermission()\n      //                   .then(function (result) {\n      //                      // remember the Role we just created\n      //                      appRole = result;\n      //                      cb();\n      //                   })\n      //                   .catch(cb);\n      //             });\n      //          }\n      //       } else {\n      //          // Delete any existing application roles\n      //          saveRoleTasks.push(function (cb) {\n      //             app.deletePermission()\n      //                .then(function () {\n      //                   cb();\n      //                })\n      //                .catch(cb);\n      //          });\n      //       }\n\n      //       //// Now process any additional roles:\n\n      //       // get array of selected permissions that are not our newRole\n      //       var permItems = $$(ids.appFormPermissionList).getSelectedItem(\n      //          true\n      //       );\n      //       permItems = permItems.filter(function (item) {\n      //          return item.id !== \"newRole\";\n      //       }); // Remove new role item\n\n      //       // Make sure Application is linked to selected permission items:\n      //       saveRoleTasks.push(function (cb) {\n      //          // ok, so we removed the 'newRole' entry, but we might\n      //          // have created an entry for it earlier, if so, add in\n      //          // the created one here:\n      //          if (\n      //             $$(ids.appFormCreateRoleButton).getValue() &&\n      //             appRole\n      //          ) {\n      //             // make sure it isn't already in there:\n      //             var appRoleItem = permItems.filter(function (item) {\n      //                return item.id == appRole.id;\n      //             });\n      //             if (!appRoleItem || appRoleItem.length < 1) {\n      //                // if not, add it :\n      //                permItems.push({\n      //                   id: appRole.id,\n      //                   isApplicationRole: true,\n      //                });\n      //             }\n      //          }\n\n      //          // Assign Role Permissions\n      //          app.assignPermissions(permItems)\n      //             .then(function () {\n      //                cb();\n      //             })\n      //             .catch(cb);\n      //       });\n\n      //       async.series(saveRoleTasks, function (err, results) {\n      //          if (err) {\n      //             reject(err);\n      //          } else {\n      //             // we return the instance of the newly created Permission.\n      //             resolve(appRole);\n      //          }\n      //       });\n      //    });\n\n      //    //// REFACTOR QUESTION:\n      //    // why are we updating the app.permissions with this data structure?\n      //    // where is this data structure being used?\n      //    // Earlier we are using another structure (permissionAddNew()) ... how is that related to this?\n\n      //    // // Final task\n      //    // saveRoleTasks.push(function (cb) {\n      //    // \t// Update store app data\n      //    // \tvar applicationData = self.data.filter(function (d) { return d.id == app.id; });\n      //    // \tapplicationData.forEach(function (app) {\n      //    // \t\tapp.attr('permissions', $.map(permItems, function (item) {\n      //    // \t\t\treturn {\n      //    // \t\t\t\tapplication: app.id,\n      //    // \t\t\t\tpermission: item.id,\n      //    // \t\t\t\tisApplicationRole: item.isApplicationRole\n      //    // \t\t\t}\n      //    // \t\t}));\n      //    // \t});\n\n      //    // \tq.resolve(appRole);\n      //    // \tcb();\n      //    // })\n      // }\n\n      /**\n       * @function show()\n       *\n       * Show the Form Component.\n       */\n      show() {\n         $$(this.ids.component).show();\n         // Warnings.show(this.CurrentApplication);\n      }\n\n      /*\n         this.actions({\n            // initiate a request to create a new Application\n            transitionApplicationForm: function (application) {\n               // if no application is given, then this should be a [create] operation,\n\n               // so clear our AppList\n               if (\"undefined\" == typeof application) {\n                  App.actions.unselectApplication();\n               }\n\n               // now prepare our form:\n               _logic.formReset();\n               if (application) {\n                  // populate Form here:\n                  _logic.formPopulate(application);\n               }\n               _logic.permissionPopulate(application);\n               _logic.show();\n            },\n         });\n         */\n   }\n\n   return new ABChooseForm();\n}\n","/*\n * UI Choose List\n *\n * Display a list of Applications we can work with.\n *\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_Choose_List_Menu_Factory from \"./ui_common_popupEditMenu\";\n\nexport default function (AB) {\n   // const AppList = AB_Choose_List_Factory(AB);\n   // const AppForm = AB_Choose_Form_Factory(AB);\n\n   const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   const UI_Choose_List_Menu = UI_Choose_List_Menu_Factory(AB);\n\n   class UIChooseList extends UIClass {\n      constructor() {\n         super(\"abd_choose_list\", {\n            toolbar: \"\",\n            buttonCreateNewApplication: \"\",\n            uploader: \"\",\n            exporter: \"\",\n            list: \"\",\n         });\n      }\n\n      ui() {\n         return {\n            id: this.ids.component,\n            responsive: \"hide\",\n            type: \"space\",\n\n            cols: [\n               {\n                  maxWidth: uiConfig.appListSpacerColMaxWidth,\n                  minWidth: uiConfig.appListSpacerColMinWidth,\n                  width: uiConfig.appListSpacerColMaxWidth,\n               },\n               {\n                  responsiveCell: false,\n                  rows: [\n                     {\n                        maxHeight: uiConfig.appListSpacerRowHeight,\n                        hidden: uiConfig.hideMobile,\n                     },\n                     //\n                     // ToolBar\n                     //\n                     {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        id: this.ids.toolBar,\n                        cols: [\n                           { view: \"spacer\", width: 10 },\n                           {\n                              view: \"label\",\n                              label: L(\"Applications\"),\n                              fillspace: true,\n                              on: {\n                                 onAfterRender() {\n                                    UIClass.CYPRESS_REF(this);\n                                 },\n                              },\n                           },\n                           // {\n                           //    view: \"button\",\n                           //    type: \"icon\",\n                           //    label: labels.component.administration,\n                           //    icon: \"fa fa-user\",\n                           //    autowidth: true,\n                           //    css: \"webix_transparent\",\n                           //    click: () => {\n                           //       App.actions.transitionAdministration();\n                           //    },\n                           // },\n\n                           // {\n                           //    view: \"button\",\n                           //    type: \"icon\",\n                           //    label: L(\"Settings\"),\n                           //    icon: \"fa fa-cog\",\n                           //    autowidth: true,\n                           //    css: \"webix_transparent\",\n                           //    click: () => {\n                           //       this.emit(\"view.config\");\n                           //    },\n                           // },\n                           {\n                              id: this.ids.buttonCreateNewApplication,\n                              view: \"button\",\n                              label: L(\"Add new application\"),\n                              autowidth: true,\n                              type: \"icon\",\n                              icon: \"fa fa-plus\",\n                              css: \"webix_transparent\",\n                              click: () => {\n                                 // Inform our Chooser we have a request to create an Application:\n                                 this.emit(\"view.form\", null); // leave null for CREATE\n                              },\n                              on: {\n                                 onAfterRender() {\n                                    UIClass.CYPRESS_REF(this);\n                                 },\n                              },\n                           },\n                           {\n                              view: \"uploader\",\n                              id: this.ids.uploader,\n                              label: L(\"Import\"),\n                              autowidth: true,\n                              upload: \"/definition/import\",\n                              multiple: false,\n                              type: \"icon\",\n                              icon: \"fa fa-upload no-margin\",\n                              autosend: true,\n                              css: \"webix_transparent\",\n                              on: {\n                                 onAfterFileAdd: () => {\n                                    $$(this.ids.uploader).disable();\n                                 },\n                                 onFileUpload: (/*item, response */) => {\n                                    // the file upload process has finished\n                                    // reload the page:\n                                    window.location.reload();\n                                    return false;\n                                 },\n                                 onFileUploadError: (\n                                    details /*, response */\n                                 ) => {\n                                    // {obj} details\n                                    //   .file : {obj} file details hash\n                                    //   .name : {string} filename\n                                    //   .size : {int} file size\n                                    //   .status : {string} \"error\"\n                                    //   .xhr :  {XHR Object}\n                                    //      .responseText\n                                    //      .status : {int}  404\n                                    //      .statusText : {string}\n\n                                    this.AB.notify.developer(\n                                       \"Error uploading file\",\n                                       {\n                                          url: details.xhr.responseURL,\n                                          status: details.status,\n                                          code: details.xhr.status,\n                                          response: details.xhr.responseText,\n                                       }\n                                    );\n                                    $$(this.ids.uploader).enable();\n                                    return false;\n                                 },\n                                 onAfterRender() {\n                                    UIClass.CYPRESS_REF(this);\n                                 },\n                              },\n                           },\n\n                           {\n                              view: \"button\",\n                              id: this.ids.exporter,\n                              label: L(\"Export All\"), // labels.common.export,\n                              autowidth: true,\n                              type: \"icon\",\n                              icon: \"fa fa-download\",\n                              css: \"webix_transparent\",\n                              click: function () {\n                                 window.location.assign(\n                                    \"/definition/export/all?download=1\"\n                                 );\n                              },\n                              on: {\n                                 onAfterRender() {\n                                    UIClass.CYPRESS_REF(this);\n                                 },\n                              },\n                           },\n                        ],\n                     },\n\n                     //\n                     // The List of Applications\n                     //\n                     {\n                        id: this.ids.list,\n                        view: \"list\",\n                        css: \"ab-app-select-list\",\n                        template: (obj, common) => {\n                           return this.templateListItem(obj, common);\n                        },\n                        tooltip: (obj) => {\n                           return this.toolTipListItem(obj);\n                        },\n                        type: {\n                           height: uiConfig.appListRowHeight, // Defines item height\n                           iconGear: function (app) {\n                              return `<span class=\"webix_icon fa fa-cog\" data-cy=\"edit_${app.id}\"></span>`;\n                           },\n                           iconAdmin: function (app) {\n                              return app.isAdminApp\n                                 ? \"<span class='webix_icon fa fa-circle-o-notch'></span> \"\n                                 : \"\";\n                           },\n                        },\n                        select: false,\n                        onClick: {\n                           \"ab-app-list-item\": (ev, id, trg) => {\n                              return this.onClickListItem(ev, id, trg);\n                           },\n                           \"ab-app-list-edit\": (ev, id, trg) => {\n                              return this.onClickListEdit(ev, id, trg);\n                           },\n                        },\n                        onHover: {},\n                        on: {\n                           onAfterRender() {\n                              this.data.each((a) => {\n                                 UIClass.CYPRESS_REF(\n                                    this.getItemNode(a.id),\n                                    a.id\n                                 );\n                              });\n                           },\n                        },\n                     },\n                     {\n                        maxHeight: uiConfig.appListSpacerRowHeight,\n                        hidden: uiConfig.hideMobile,\n                     },\n                  ],\n               },\n               {\n                  maxWidth: uiConfig.appListSpacerColMaxWidth,\n                  minWidth: uiConfig.appListSpacerColMinWidth,\n                  width: uiConfig.appListSpacerColMaxWidth,\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         this.$list = $$(this.ids.list);\n         // {webix.list}  The webix component that manages our Application List\n\n         webix.extend(this.$list, webix.ProgressBar);\n         webix.extend(this.$list, webix.OverlayBox);\n\n         // Setup our popup Editor Menu for our Applications\n         this.MenuComponent = new UI_Choose_List_Menu(this.ids.component);\n         this.MenuComponent.init(AB);\n         var options = [\n            {\n               label: L(\"Edit\"), //labels.common.edit,\n               icon: \"fa fa-pencil-square-o\",\n               command: \"edit\",\n            },\n            {\n               label: L(\"Export\"), //labels.common.export,\n               icon: \"fa fa-download\",\n               command: \"export\",\n            },\n            {\n               label: L(\"Delete\"), // labels.common.delete,\n               icon: \"fa fa-trash\",\n               command: \"delete\",\n            },\n         ];\n         this.MenuComponent.menuOptions(options);\n         this.MenuComponent.on(\"click\", (action) => {\n            var selectedApp = this.$list.getSelectedItem();\n\n            switch (action) {\n               case \"edit\":\n                  this.emit(\"edit.form\", selectedApp);\n                  break;\n\n               case \"delete\":\n                  webix.confirm({\n                     title: L(\"Delete {0}?\", [L(\"Application\")]),\n                     text: L(\"Do you want to delete <b>{0}</b>?\", [\n                        selectedApp.label,\n                     ]),\n                     ok: L(\"Yes\"),\n                     cancel: L(\"No\"),\n                     callback: async (result) => {\n                        if (!result) return;\n\n                        this.busy();\n                        try {\n                           await selectedApp.destroy();\n                           this.refreshList();\n                           webix.message({\n                              type: \"success\",\n                              text: L(\"{0}&nbsp; Successfully Deleted\", [\n                                 selectedApp.label,\n                              ]),\n                           });\n                        } catch (e) {\n                           webix.message({\n                              type: \"error\",\n                              text: L(\"There was an error deleting {0}.\", [\n                                 selectedApp.label,\n                              ]),\n                           });\n                        }\n                        this.ready();\n                     },\n                  });\n                  break;\n\n               case \"export\":\n                  // Download the JSON file to disk\n                  window.location.assign(\n                     `/definition/export/${selectedApp.id}?download=1`\n                  );\n                  break;\n            }\n         });\n\n         // listen for the AllApplications response:\n         this.AB.Network.on(\n            \"definitions.allapplications\",\n            (context, err, allDefinitions) => {\n               this.ready();\n               if (err) {\n                  // log the error\n                  this.AB.notify.developer(err, {\n                     plugin: \"ABDesigner\",\n                     context:\n                        \"ui_choose_list:init(): /definition/allapplications\",\n                  });\n                  context?.reject?.(err);\n                  return;\n               }\n\n               this.AB.definitionsParse(allDefinitions);\n\n               context?.resolve?.();\n            }\n         );\n\n         this._handler_reload = (def) => {\n            if (def?.type == \"application\") {\n               this.loaded = false;\n               this.loadData();\n            } else if (!def) {\n               this.AB.notify.developer(new Error(\"No def passed\"), {\n                  plugin: \"ABDesigner\",\n                  context: \"_handler_reload(): /definition/allapplications\",\n               });\n            }\n         };\n         // {fn}\n         // The handler that triggers a reload of our Application List\n         // when we are alerted of changes to our applications.\n\n         // return Promise.all([AppList.init(AB) /*, AppForm.init(AB)*/]);\n         return this.loadAllApps().then(() => {\n            // NOTE: .loadAllApps() will generate a TON of \"definition.updated\"\n            // events.  So add these handlers after that is all over.\n\n            // Refresh our Application List each time we are notified of a change\n            // in our Application definitions:\n            this.AB.on(\"definition.created\", this._handler_reload);\n         });\n      }\n\n      //\n      // Logic Methods\n      //\n\n      busy() {\n         this.$list.disable();\n         if (this.$list.showProgress) this.$list.showProgress({ type: \"icon\" });\n      }\n\n      /**\n       * @method loadAllApps();\n       * specifically call for loading all the available ABApplications so that a\n       * builder can work with them.\n       * @return {Promise}\n       */\n      async loadAllApps() {\n         // NOTE: we only actually perform this 1x.\n         // so track the _loadInProgress as our indicator of having done that.\n         if (!this._loadInProgress) {\n            this.busy();\n            this._loadInProgress = new Promise((resolve, reject) => {\n               var jobResponse = {\n                  key: \"definitions.allapplications\",\n                  context: { resolve, reject },\n               };\n\n               this.AB.Network.get(\n                  {\n                     url: `/definition/allapplications`,\n                  },\n                  jobResponse\n               );\n            });\n         }\n\n         return this._loadInProgress;\n      }\n\n      /**\n       * @function loadData\n       *\n       * Load all the ABApplications and display them in our App List\n       */\n      async loadData() {\n         await this.loadAllApps();\n\n         if (this.loaded) return;\n\n         this.loaded = true;\n\n         // Get applications data from the server\n         this.busy();\n\n         // User needs Access To Role (System Designer) in order to see\n         // app.isSystemObj ABApplications.\n         var f = (app) => !app.isSystemObj;\n\n         if (this.AB.Account.isSystemDesigner()) {\n            f = () => true;\n         }\n         var allApps = this.AB.applications(f);\n         this.dcEditableApplications = new webix.DataCollection({\n            data: allApps || [],\n         });\n         // {webix.DataCollection} dcEditableApplications\n         // a list of all our applications we are able to edit.\n\n         // Now for each of our Apps, be sure to listen for either\n         // .updated or .deleted and then reload our list.\n         [\"definition.updated\", \"definition.deleted\"].forEach((e) => {\n            allApps.forEach((a) => {\n               // make sure we only have 1 listener registered.\n               a.removeListener(e, this._handler_reload);\n               a.on(e, this._handler_reload);\n            });\n         });\n\n         this.dcEditableApplications.attachEvent(\n            \"onAfterAdd\",\n            (/* id, index */) => {\n               this.refreshOverlay();\n            }\n         );\n\n         this.dcEditableApplications.attachEvent(\n            \"onAfterDelete\",\n            (/* id */) => {\n               this.refreshOverlay();\n            }\n         );\n\n         // // TODO: we should track the order in the List and save as\n         // // .sortOrder ... or .local.sortOrder\n         // this.dcEditableApplications.sort(\"label\");\n         // moved to .refreshList()\n\n         this.refreshList();\n         this.ready();\n      }\n\n      /**\n       * @function onClickListEdit\n       * UI updates for when the edit gear is clicked\n       */\n      onClickListEdit(ev, id, trg) {\n         // Show menu\n         this.MenuComponent.show(trg);\n         this.$list.select(id);\n\n         return false; // block default behavior\n      }\n\n      /**\n       * @method onClickListItem\n       * An item in the list is selected. So update the workspace with that\n       * object.\n       */\n      onClickListItem(ev, id /*, trg */) {\n         this.$list.select(id);\n         let selectedApp = this.$list.getItem(id);\n         if (selectedApp) {\n            // set the common App so it is accessible for all the Applications views\n            selectedApp.App = this.AB.App;\n\n            // We've selected an Application to work with\n            this.emit(\"view.workplace\", selectedApp);\n         }\n         return false; // block default behavior\n      }\n\n      /**\n       * @method ready\n       * remove the busy indicator on our App List\n       */\n      ready() {\n         this.$list.enable();\n         if (this.$list.hideProgress) this.$list.hideProgress();\n      }\n\n      /**\n       * @method refreshList\n       * Apply our list of ABApplication data to our AppList\n       */\n      refreshList() {\n         this.$list.clearAll();\n         this.$list.data.unsync();\n         this.$list.data.sync(this.dcEditableApplications);\n         this.$list.sort(\"label\", \"asc\");\n         this.refreshOverlay();\n         this.$list.refresh();\n         this.ready();\n      }\n\n      /**\n       * @method refreshOverlay\n       * If we have no items in our list, display a Message.\n       */\n      refreshOverlay() {\n         if (!this.$list.count())\n            this.$list.showOverlay(L(\"There is no application data\"));\n         else this.$list.hideOverlay();\n      }\n\n      /**\n       * @method show\n       * Trigger our List component to show\n       */\n      show() {\n         super.show();\n\n         // start things off by loading the current list of Applications\n         this.loadData();\n      }\n\n      templateListItem(obj, common) {\n         // JAMES: here are the warning interface:\n         // obj.warnings() : Returns the warning for this specific object (Application)\n         //       {array} [  { message, data } ]\n         //             message: {string} A description of the warning\n         //             data: {obj} An object holding related data values.\n         //\n         // obj.warningsAll(): Like .warnings() but will return the warnings of\n         //    this object and any of it's sub objects.\n         //\n         //\n         var warnings = {\n            icon: \"\",\n            count: 0,\n         };\n         if (obj.warningsAll().length) {\n            warnings.icon = `<span class=\"webix_icon fa fa-warning pulseLight smalltext\"></span>`;\n            warnings.count = obj.warningsAll().length;\n         }\n         return `<div class='ab-app-list-item'>\n   <div class='ab-app-list-info'>\n      <div class='ab-app-list-name'><i class=\"lighten fa-fw fa ${\n         obj.icon\n      }\"></i> ${common.iconAdmin(obj)}${obj.label ?? \"\"}</div>\n      <div class='ab-app-list-description'>${obj.description ?? \"\"}</div>\n   </div>\n   <div class='ab-app-list-edit'>\n      ${warnings.icon}\n      ${common.iconGear(obj)}\n   </div>\n</div>`;\n      }\n\n      toolTipListItem(obj) {\n         let issues = $$(this.ids.list)\n            .data.getItem(obj.id)\n            .warningsAll().length;\n         return issues ? `${issues} issues` : \"\";\n      }\n   }\n   return new UIChooseList();\n}\n","/*\n * ui_class\n *\n * A common UI object for our UI pages.\n *\n\n */\n\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nexport default function (AB) {\n   if (!myClass) {\n      myClass = class UI extends AB.ClassUI {\n         constructor(...params) {\n            super(...params);\n\n            this.AB = AB;\n            // {ABFactory}\n            // Our common ABFactory for our application.\n\n            this.CurrentApplicationID = null;\n            // {string} uuid\n            // The current ABApplication.id we are working with.\n\n            this.CurrentDatacollectionID = null;\n            // {string}\n            // the ABDataCollection.id of the datacollection we are working with.\n\n            this.CurrentObjectID = null;\n            // {string}\n            // the ABObject.id of the object we are working with.\n\n            this.CurrentProcessID = null;\n            // {string}\n            // the ABProcess.id of the process we are working with.\n\n            this.CurrentQueryID = null;\n            // {string}\n            // the ABObjectQuery.id of the query we are working with.\n\n            this.CurrentViewID = null;\n            // {string}\n            // the ABView.id of the view we are working with.\n         }\n\n         static L() {\n            return function (...params) {\n               return AB.Multilingual.labelPlugin(\"ABDesigner\", ...params);\n            };\n         }\n\n         /**\n          * @function applicationLoad\n          * save the ABApplication.id of the current application.\n          * @param {ABApplication} app\n          */\n         applicationLoad(app) {\n            this.CurrentApplicationID = app?.id;\n         }\n\n         datacollectionLoad(dc) {\n            this.CurrentDatacollectionID = dc?.id;\n         }\n\n         objectLoad(obj) {\n            this.CurrentObjectID = obj?.id;\n         }\n\n         processLoad(process) {\n            this.CurrentProcessID = process?.id;\n         }\n\n         queryLoad(query) {\n            this.CurrentQueryID = query?.id;\n         }\n\n         viewLoad(view) {\n            this.CurrentViewID = view?.id;\n\n            if (view?.application) {\n               this.applicationLoad(view.application);\n            }\n         }\n\n         /**\n          * @method CurrentApplication\n          * return the current ABApplication being worked on.\n          * @return {ABApplication} application\n          */\n         get CurrentApplication() {\n            return this.AB.applicationByID(this.CurrentApplicationID);\n         }\n\n         /**\n          * @method CurrentDatacollection()\n          * A helper to return the current ABDataCollection we are working with.\n          * @return {ABObject}\n          */\n         get CurrentDatacollection() {\n            return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n         }\n\n         /**\n          * @method CurrentObject()\n          * A helper to return the current ABObject we are working with.\n          * @return {ABObject}\n          */\n         get CurrentObject() {\n            let obj = this.AB.objectByID(this.CurrentObjectID);\n            if (!obj) {\n               obj = this.AB.queryByID(this.CurrentObjectID);\n            }\n            return obj;\n         }\n\n         /**\n          * @method CurrentProcess()\n          * A helper to return the current ABProcess we are working with.\n          * @return {ABProcess}\n          */\n         get CurrentProcess() {\n            return this.AB.processByID(this.CurrentProcessID);\n         }\n\n         /**\n          * @method CurrentQuery()\n          * A helper to return the current ABObjectQuery we are working with.\n          * @return {ABObjectQuery}\n          */\n         get CurrentQuery() {\n            return this.AB.queryByID(this.CurrentQueryID);\n         }\n\n         /**\n          * @method CurrentView()\n          * A helper to return the current ABObjectQuery we are working with.\n          * @return {ABObjectQuery}\n          */\n         get CurrentView() {\n            return this.CurrentApplication?.views(\n               (v) => v.id == this.CurrentViewID\n            )[0];\n         }\n\n         /**\n          * @method uniqueIDs()\n          * add a unique identifier to each of our this.ids to ensure they are\n          * unique.  Useful for components that are repeated, like items in a list.\n          */\n         uniqueIDs() {\n            let uniqueInstanceID = webix.uid();\n            Object.keys(this.ids).forEach((k) => {\n               this.ids[k] = `${this.ids[k]}_${uniqueInstanceID}`;\n            });\n         }\n\n         /**\n          * @method refreshWarnings()\n          * reset the warnings on the provided ABObject and then start propogating\n          * the \"warnings\" display updates.\n          */\n         warningsRefresh(ABObject) {\n            ABObject.warningsEval();\n            this.emit(\"warnings\");\n         }\n\n         /**\n          * @method warningsPropogate()\n          * If any of the passed in ui elements issue a \"warnings\" event, we will\n          * propogate that upwards.\n          */\n         warningsPropogate(elements = []) {\n            elements.forEach((e) => {\n               e.on(\"warnings\", () => {\n                  this.emit(\"warnings\");\n               });\n            });\n         }\n      };\n   }\n\n   return myClass;\n}\n","/*\n * ab_common_list\n *\n * A common interface for displaying AB category list widget\n *\n */\n\nimport UIListEditMenuFactory from \"./ui_common_popupEditMenu\";\n\nexport default function (AB, options) {\n   var UIListEditMenu = UIListEditMenuFactory(AB);\n\n   const uiConfig = AB.Config.uiSettings();\n   var L = function (...params) {\n      return AB.Multilingual.labelPlugin(\"ABDesigner\", ...params);\n   };\n\n   class UI_Common_List extends AB.ClassUI {\n      constructor(attributes) {\n         // attributes.idBase = attributes.idBase || \"ui_common_list\";\n         var base = attributes.idBase || \"ui_common_list\";\n         super(base, {\n            listSetting: \"\",\n            list: \"\",\n            searchText: \"\",\n            sort: \"\",\n            group: \"\",\n            buttonNew: \"\",\n         });\n\n         this.idBase = base;\n\n         this.labels = {\n            addNew: \"Add new item\",\n            confirmDeleteTitle: \"Delete Item\",\n            title: \"Items\",\n            searchPlaceholder: \"Item name\",\n            renameErrorMessage: \"error renaming {0}\",\n\n            // we can reuse some of the Object ones:\n            confirmDeleteMessage: \"Do you want to delete <b>{0}</b>?\",\n            listSearch: \"Search\",\n            listSetting: \"Settings\",\n            listSort: \"Sort\",\n            listAsc: \"A -> Z\",\n            listDesc: \"Z -> A\",\n            listGroup: \"Group\",\n         };\n         // copy in any passed in labels:\n         if (attributes.labels) {\n            for (var key in attributes.labels) {\n               this.labels[key] = attributes.labels[key];\n            }\n         }\n         // {lookup hash} id : Label Key\n         // we allow the creating UI component to pass in alternate\n         // label keys for this list.  That's how to customize the labels\n         // for the current situation.\n\n         attributes.menu = attributes.menu || {};\n         attributes.menu.copy =\n            typeof attributes.menu.copy == \"undefined\"\n               ? true\n               : attributes.menu.copy;\n         attributes.menu.exclude =\n            typeof attributes.menu.exclude == \"undefined\"\n               ? true\n               : attributes.menu.exclude;\n         this.attributes = attributes;\n\n         /*\n          * _templateListItem\n          *\n          * The Process Row template definition.\n          */\n         this._templateListItem =\n            attributes.templateListItem ||\n            [\n               \"<div class='ab-object-list-item'>\",\n               \"#label##warnings#\",\n               \"{common.iconGear}\",\n               \"</div>\",\n            ].join(\"\");\n\n         this.CurrentApplication = null;\n         this.itemList = null;\n\n         this._initialized = false;\n         this._settings = {};\n      }\n\n      ui() {\n         // the popup edit list for each entry in the list.\n         this.PopupEditComponent = new UIListEditMenu(this.ids.component);\n\n         //PopupListEditMenuComponent\n         // console.log(\"look here------------------>\", App.custom.editunitlist.view);\n\n         var ids = this.ids;\n         // for our onAfterRender() handler\n\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            rows: [\n               {\n                  view: AB.custom.editunitlist.view, // \"editunitlist\"\n                  id: this.ids.list,\n                  width: uiConfig.columnWidthLarge,\n\n                  select: true,\n\n                  editaction: \"custom\",\n                  editable: true,\n                  editor: \"text\",\n                  editValue: \"label\",\n\n                  uniteBy: (/* item */) => {\n                     return L(this.labels.title);\n                  },\n                  template: (obj, common) => {\n                     return this.templateListItem(obj, common);\n                  },\n                  tooltip: (obj) => {\n                     return this.toolTipListItem(obj);\n                  },\n                  type: {\n                     height: 35,\n                     headerHeight: 35,\n                     iconGear: (obj) => {\n                        return `<div class=\"ab-object-list-edit\"><span class=\"webix_icon fa fa-cog\" data-cy=\"${this.ids.list}_edit_${obj.id}\"></span></div>`;\n                     },\n                  },\n                  on: {\n                     onAfterSelect: (id) => {\n                        this.onSelectItem(id);\n                     },\n                     onBeforeEditStop: (state, editor) => {\n                        this.onBeforeEditStop(state, editor);\n                     },\n                     onAfterEditStop: (state, editor, ignoreUpdate) => {\n                        this.onAfterEditStop(state, editor, ignoreUpdate);\n                     },\n                     onAfterRender() {\n                        this.data.each((a) => {\n                           AB.ClassUI.CYPRESS_REF(\n                              this.getItemNode(a.id),\n                              `${ids.list}_${a.id}`\n                           );\n                        });\n                     },\n                  },\n                  onClick: {\n                     \"ab-object-list-edit\": (e, id, trg) => {\n                        this.clickEditMenu(e, id, trg);\n                     },\n                  },\n               },\n               {\n                  view: \"accordion\",\n                  multi: true,\n                  css: \"ab-object-list-filter\",\n                  rows: [\n                     {\n                        id: this.ids.listSetting,\n                        header: L(this.labels.listSetting),\n                        headerHeight: 45,\n                        headerAltHeight: 45,\n                        body: {\n                           padding: 5,\n                           rows: [\n                              {\n                                 id: this.ids.searchText,\n                                 view: \"search\",\n                                 icon: \"fa fa-search\",\n                                 label: L(this.labels.listSearch),\n                                 labelWidth: 80,\n                                 placeholder: L(this.labels.searchPlaceholder),\n                                 height: 35,\n                                 keyPressTimeout: 100,\n                                 on: {\n                                    onAfterRender() {\n                                       AB.ClassUI.CYPRESS_REF(this);\n                                    },\n                                    onTimedKeyPress: () => {\n                                       this.listSearch();\n                                       this.save();\n                                    },\n                                 },\n                              },\n                              {\n                                 id: this.ids.sort,\n                                 view: \"segmented\",\n                                 label: L(this.labels.listSort),\n                                 labelWidth: 80,\n                                 height: 35,\n                                 options: [\n                                    {\n                                       id: \"asc\",\n                                       value: L(this.labels.listAsc),\n                                    },\n                                    {\n                                       id: \"desc\",\n                                       value: L(this.labels.listDesc),\n                                    },\n                                 ],\n                                 on: {\n                                    onAfterRender() {\n                                       this.$view\n                                          .querySelectorAll(\"button\")\n                                          .forEach((b) => {\n                                             var bid =\n                                                b.getAttribute(\"button_id\");\n                                             AB.ClassUI.CYPRESS_REF(\n                                                b,\n                                                `${ids.sort}_${bid}`\n                                             );\n                                          });\n                                    },\n                                    onChange: (newVal /*, oldVal */) => {\n                                       this.listSort(newVal);\n                                       this.save();\n                                    },\n                                 },\n                              },\n                              {\n                                 id: this.ids.group,\n                                 view: \"checkbox\",\n                                 label: L(this.labels.listGroup),\n                                 labelWidth: 80,\n                                 on: {\n                                    onAfterRender() {\n                                       AB.ClassUI.CYPRESS_REF(this);\n                                    },\n                                    onChange: (newVal /*, oldVal */) => {\n                                       this.listGroup(newVal);\n                                       this.save();\n                                    },\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                  ],\n                  on: {\n                     onAfterCollapse: (/* id */) => {\n                        this.listSettingCollapse();\n                        this.save();\n                     },\n                     onAfterExpand: (/* id */) => {\n                        this.listSettingExpand();\n                        this.save();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  id: this.ids.buttonNew,\n                  value: L(this.labels.addNew),\n                  type: \"form\",\n                  click: () => {\n                     this.clickAddNew(true); // pass true so it will select the new object after you created it\n                  },\n                  on: {\n                     onAfterRender() {\n                        AB.ClassUI.CYPRESS_REF(this);\n                     },\n                  },\n               },\n            ],\n         };\n      }\n\n      // Our init() function for setting up our UI\n      init(AB) {\n         this.AB = AB;\n\n         if ($$(this.ids.component)) $$(this.ids.component).adjust();\n\n         this.$list = $$(this.ids.list);\n         if (this.$list) {\n            webix.extend(this.$list, webix.ProgressBar);\n            this.$list.adjust();\n         }\n\n         this.PopupEditComponent.init(AB, {\n            // onClick: _logic.callbackProcessEditorMenu,\n            hideCopy: !this.attributes.menu.copy,\n            hideExclude: !this.attributes.menu.exclude,\n         });\n\n         this.PopupEditComponent.on(\"click\", (command) => {\n            var selectedItem = this.$list.getSelectedItem(false);\n            switch (command) {\n               case \"delete\":\n                  this.remove();\n                  break;\n\n               case \"rename\":\n                  this.rename();\n                  break;\n\n               case \"exclude\":\n                  this.emit(\"exclude\", selectedItem);\n                  break;\n\n               case \"copy\":\n                  this.copy(selectedItem);\n                  // this.emit(\"copy\", selectedItem);\n                  break;\n\n               default:\n                  this.emit(\"menu\", {\n                     command: command,\n                     id: selectedItem.id,\n                  });\n                  break;\n            }\n         });\n\n         this._settings = this.AB.Storage.get(this.idBase) || {\n            objectlistIsOpen: false,\n            objectlistSearchText: \"\",\n            objectlistSortDirection: \"\",\n            objectlistIsGroup: false,\n         };\n\n         // mark initialed\n         this._initialized = true;\n      }\n\n      /**\n       * @function applicationLoad\n       *\n       * Initialize the Process List from the provided ABApplication\n       *\n       * If no ABApplication is provided, then show an empty form. (create operation)\n       *\n       * @param {ABApplication} application  \t[optional] The current ABApplication\n       *\t\t\t\t\t\t\t\t\t\twe are working with.\n       */\n      // applicationLoad(application) {\n      //    // this.CurrentApplication = application;\n      // }\n\n      dataLoad(data) {\n         this.busy();\n\n         // get a DataCollection of all our objects\n         this.itemList = new webix.DataCollection({\n            data: data,\n         });\n\n         // setup object list settings\n         var $listSetting = $$(this.ids.listSetting);\n         $listSetting.getParentView().blockEvent();\n         $listSetting.define(\n            \"collapsed\",\n            this._settings.objectlistIsOpen != true\n         );\n         $listSetting.refresh();\n         $listSetting.getParentView().unblockEvent();\n\n         var $searchText = $$(this.ids.searchText);\n         $searchText.blockEvent();\n         $searchText.setValue(this._settings.objectlistSearchText);\n         $searchText.unblockEvent();\n\n         var $sort = $$(this.ids.sort);\n         $sort.blockEvent();\n         $sort.setValue(this._settings.objectlistSortDirection);\n         $sort.unblockEvent();\n\n         var $group = $$(this.ids.group);\n         $group.blockEvent();\n         $group.setValue(this._settings.objectlistIsGroup);\n         $group.unblockEvent();\n\n         // clear our list and display our objects:\n         var List = this.$list;\n         List.clearAll();\n         List.data.unsync();\n         List.data.sync(this.itemList);\n         List.refresh();\n         List.unselectAll();\n\n         // sort objects\n         this.listSort(this._settings.objectlistSortDirection);\n\n         // filter object list\n         this.listSearch();\n\n         // hide progress loading cursor\n         this.ready();\n      }\n\n      clickEditMenu(e, id, trg) {\n         // Show menu\n         this.PopupEditComponent.show(trg);\n         return false;\n      }\n\n      /**\n       * @method copy\n       * make a copy of the current selected item.\n       *\n       * copies should have all the same .toObj() data,\n       * but will need unique names, and ids.\n       *\n       * we start the process by making a copy and then\n       * having the user enter a new label/name for it.\n       *\n       * our .afterEdit() routines will detect it is a copy\n       * then alert the parent UI component of the \"copied\" data\n       *\n       * @param {obj} selectedItem the currently selected item in\n       * \t\tour list.\n       */\n      copy(selectedItem) {\n         var newItem = selectedItem.toObj();\n         newItem.id = \"copy_\" + (this.itemList ? this.itemList.count() : \"01\");\n         delete newItem.translations;\n         newItem.name = newItem.name + \" copy\";\n         newItem.label = newItem.name;\n\n         // find the current index of the item being copied:\n         var list = this.$list;\n         var selectedIndex = list.getIndexById(list.getSelectedId());\n\n         // insert copy in it's place and make it editable:\n         list.add(newItem, selectedIndex);\n         list.select(newItem.id);\n         list.edit(newItem.id);\n      }\n\n      listSettingCollapse() {\n         this._settings.objectlistIsOpen = false;\n      }\n\n      listSettingExpand() {\n         this._settings.objectlistIsOpen = true;\n      }\n\n      busy() {\n         this.$list?.showProgress?.({ type: \"icon\" });\n      }\n\n      ready() {\n         this.$list?.hideProgress?.();\n      }\n\n      listSearch() {\n         var searchText = $$(this.ids.searchText).getValue().toLowerCase();\n\n         this.$list.filter(function (item) {\n            return (\n               !item.label || item.label.toLowerCase().indexOf(searchText) > -1\n            );\n         });\n\n         this._settings.objectlistSearchText = searchText;\n      }\n\n      listSort(sortType) {\n         if (this.itemList == null) return;\n         this.itemList.sort(\"label\", sortType);\n         this.listSearch();\n         this._settings.objectlistSortDirection = sortType;\n      }\n\n      listGroup(isGroup) {\n         if (isGroup == true) {\n            this.$list.define(\"uniteBy\", (item) => {\n               return item.label.toUpperCase().substr(0, 1);\n            });\n         } else {\n            this.$list.define(\"uniteBy\", (/* item */) => {\n               return L(this.labels.title);\n            });\n         }\n         this.$list.refresh();\n         this._settings.objectlistIsGroup = isGroup;\n      }\n\n      listCount() {\n         if (this.$list) return this.$list.count();\n      }\n\n      selectedItem() {\n         return this.$list.getSelectedItem(false);\n      }\n\n      onAfterEditStop(state, editor /*, ignoreUpdate */) {\n         this.showGear(editor.id);\n\n         if (state.value != state.old) {\n            this.busy();\n\n            var selectedItem = this.$list.getSelectedItem(false);\n            selectedItem.label = state.value;\n\n            // if this item supports .save()\n            if (selectedItem.save) {\n               // Call server to rename\n               selectedItem\n                  .save()\n                  .catch((err) => {\n                     this.ready();\n\n                     webix.alert({\n                        title: L(\"Alert\"),\n                        text: L(this.labels.renameErrorMessage, state.old),\n                     });\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ui_common_list:onAfterEditStop():Error saving item.\",\n                        id: selectedItem.id,\n                        value: state.value,\n                     });\n                  })\n                  .then(() => {\n                     this.ready();\n                  });\n            } else {\n               // maybe this is from a .copy() command:\n               if (selectedItem.id.indexOf(\"copy_\") == 0) {\n                  // if so, then our default name should be what\n                  // the label is:\n                  selectedItem.name = selectedItem.label;\n                  var currID = selectedItem.id;\n\n                  // remove our temp id\n                  delete selectedItem.id;\n\n                  // alert the parent UI of the copied data:\n                  this.emit(\"copied\", {\n                     item: selectedItem,\n                     currID: currID,\n                  });\n               }\n            }\n         }\n      }\n\n      onBeforeEditStop(state /*, editor */) {\n         var selectedItem = this.$list.getSelectedItem(false);\n         selectedItem.label = state.value;\n\n         // if this item supports isValid()\n         if (selectedItem.isValid) {\n            var validator = selectedItem.isValid();\n            if (validator.fail()) {\n               selectedItem.label = state.old;\n\n               return false; // stop here.\n            }\n         }\n\n         return true;\n      }\n\n      /**\n       * @function onSelectItem()\n       *\n       * Perform these actions when an Process is selected in the List.\n       */\n      onSelectItem(id) {\n         var process = this.$list.getItem(id);\n\n         // _logic.callbacks.onChange(object);\n         this.emit(\"selected\", process);\n\n         this.showGear(id);\n      }\n\n      /**\n       * @function save()\n       *\n       */\n      save() {\n         // if this UI has not been initialed, then skip it\n         if (!this._initialized) return;\n\n         // CurrentApplication.save();\n         this.AB.Storage.set(this.idBase, this._settings);\n      }\n\n      selectItem(id) {\n         this.$list.blockEvent();\n         this.select(id);\n         this.$list.unblockEvent();\n      }\n\n      showGear(id) {\n         let $item = this.$list.getItemNode(id);\n         if ($item) {\n            let gearIcon = $item.querySelector(\".ab-object-list-edit\");\n            if (gearIcon) {\n               gearIcon.style.visibility = \"visible\";\n               gearIcon.style.display = \"block\";\n            }\n         }\n      }\n\n      /**\n       * @function templateListItem\n       *\n       * Defines the template for each row of our ProcessList.\n       *\n       * @param {obj} obj the current instance of ABProcess for the row.\n       * @param {?} common the webix.common icon data structure\n       * @return {string}\n       */\n      templateListItem(obj, common) {\n         var warnings = obj.warningsAll();\n\n         if (typeof this._templateListItem == \"string\") {\n            var warnText = \"\";\n            if (warnings.length > 0) {\n               warnText = `<span class=\"webix_sidebar_dir_icon webix_icon fa fa-warning pulseLight smalltext\"></span>`;\n            }\n\n            return this._templateListItem\n               .replace(\"#label#\", obj.label || \"??label??\")\n               .replace(\"{common.iconGear}\", common.iconGear(obj))\n               .replace(\"#warnings#\", warnText);\n         }\n         // else they sent in a function()\n         return this._templateListItem(obj, common, warnings);\n      }\n\n      /**\n       * @function toolTipListItem\n       * Defines the tooltip text for an item in our list.\n       * @param {obj} obj the current instance of the Object being displayed\n       *              in each row.\n       * @return {string}\n       */\n      toolTipListItem(obj) {\n         let issues = $$(this.ids.list)\n            .data.getItem(obj.id)\n            .warningsAll().length;\n\n         return issues ? `${issues} issues` : \"\";\n      }\n\n      /**\n       * @function callbackNewProcess\n       *\n       * Once a New Process was created in the Popup, follow up with it here.\n       */\n      // callbackNewProcess:function(err, object, selectNew, callback){\n\n      // \tif (err) {\n      // \t\tOP.Error.log('Error creating New Process', {error: err});\n      // \t\treturn;\n      // \t}\n\n      // \tlet objects = CurrentApplication.objects();\n      // \titemList.parse(objects);\n\n      // \t// if (processList.exists(object.id))\n      // \t// \tprocessList.updateItem(object.id, object);\n      // \t// else\n      // \t// \tprocessList.add(object);\n\n      // \tif (selectNew != null && selectNew == true) {\n      // \t\t$$(ids.list).select(object.id);\n      // \t}\n      // \telse if (callback) {\n      // \t\tcallback();\n      // \t}\n\n      // },\n\n      /**\n       * @function clickAddNew\n       *\n       * Manages initiating the transition to the new Process Popup window\n       */\n      clickAddNew(selectNew) {\n         this.emit(\"addNew\", selectNew);\n      }\n\n      /**\n       * @function exclude()\n       *\n       * alert calling UI that a list item was chosen for \"exclude\"\n       */\n      exclude() {\n         var item = this.$list.getSelectedItem(false);\n         this.emit(\"exclude\", item);\n      }\n\n      rename() {\n         var itemId = this.$list.getSelectedId(false);\n         this.$list.edit(itemId);\n      }\n\n      remove() {\n         var selectedItem = this.$list.getSelectedItem(false);\n\n         // verify they mean to do this:\n         webix.confirm({\n            title: L(this.labels.confirmDeleteTitle),\n            text: L(this.labels.confirmDeleteMessage, [selectedItem.label]),\n            ok: L(\"Yes\"),\n            cancel: L(\"No\"),\n            callback: async (isOK) => {\n               if (isOK) {\n                  this.busy();\n\n                  try {\n                     await selectedItem.destroy();\n                     this.ready();\n                     this.itemList.remove(selectedItem.id);\n\n                     // let the calling component know about\n                     // the deletion:\n                     this.emit(\"deleted\", selectedItem);\n\n                     // clear object workspace\n                     this.emit(\"selected\", null);\n                  } catch (e) {\n                     this.AB.notify.developer(e, {\n                        context: \"ui_common_list:remove(): error removing item\",\n                     });\n                     this.ready();\n                  }\n               }\n            },\n         });\n      }\n\n      select(id) {\n         this.$list.select(id);\n      }\n\n      callbackProcessEditorMenu(action) {\n         switch (action) {\n            case \"rename\":\n               this.rename();\n               break;\n            case \"exclude\":\n               this.exclude();\n               break;\n            case \"delete\":\n               this.remove();\n               break;\n         }\n      }\n\n      // Expose any globally accessible Actions:\n      // this.actions({\n      //    /**\n      //     * @function getSelectedProcess\n      //     *\n      //     * returns which ABProcess is currently selected.\n      //     * @return {ABProcess}  or {null} if nothing selected.\n      //     */\n      //    getSelectedProcess: function () {\n      //       return $$(ids.list).getSelectedItem();\n      //    },\n\n      //    addNewProcess: function (selectNew, callback) {\n      //       _logic.clickNewProcess(selectNew, callback);\n      //    },\n      // });\n   }\n\n   // NOTE: We are returning the Class here, not an instance:\n   return new UI_Common_List(options);\n}\n","/*\n * ab_common_popupEditMenu\n *\n * Many of our Lists offer a gear icon that allows a popup menu to select\n * a set of options for this entry.  This is a common Popup Editor for those\n * options.\n *\n */\nimport UI_Class from \"./ui_class\";\n\nvar myClass = null;\n// {singleton}\n// we will want to call this factory fn() repeatedly in our imports,\n// but we only want to define 1 Class reference.\n\nexport default function (AB) {\n   if (!myClass) {\n      const UIClass = UI_Class(AB);\n      var L = UIClass.L();\n\n      myClass = class ABCommonPopupEditMenu extends UIClass {\n         constructor(contextID) {\n            var idBase = \"abd_common_popupEditMenu\";\n            super(idBase);\n\n            this.labels = {\n               copy: L(\"Copy\"),\n               exclude: L(\"Exclude\"),\n               rename: L(\"Rename\"),\n               delete: L(\"Delete\"),\n            };\n\n            // since multiple instances of this component can exists, we need to\n            // make each instance have unique ids => so add contextID to them:\n            this.ids.menu = `${idBase}_menu_${contextID}`;\n            this.ids.list = `${idBase}_list_${contextID}`;\n\n            this.Popup = null;\n            this._menuOptions = [\n               {\n                  label: this.labels.rename,\n                  icon: \"fa fa-pencil-square-o\",\n                  command: \"rename\",\n               },\n               {\n                  label: this.labels.copy,\n                  icon: \"fa fa-files-o\",\n                  command: \"copy\",\n               },\n               {\n                  label: this.labels.exclude,\n                  icon: \"fa fa-reply\",\n                  command: \"exclude\",\n               },\n               {\n                  label: this.labels.delete,\n                  icon: \"fa fa-trash\",\n                  command: \"delete\",\n               },\n            ];\n         }\n\n         ui() {\n            return {\n               view: \"popup\",\n               id: this.ids.menu,\n               head: L(\"Application Menu\"), // labels.component.menu,\n               width: 120,\n               body: {\n                  view: \"list\",\n                  id: this.ids.list,\n                  borderless: true,\n                  data: [],\n                  datatype: \"json\",\n                  template:\n                     \"<i class='fa #icon#' aria-hidden='true'></i> #label#\",\n                  autoheight: true,\n                  select: false,\n                  on: {\n                     onItemClick: (itemId) => {\n                        const { command } = $$(this.ids.list).getItem(itemId);\n                        return this.trigger(command);\n                     },\n                  },\n               },\n            };\n         }\n\n         async init(AB, options) {\n            options = options || {};\n\n            if (this.Popup == null) this.Popup = webix.ui(this.ui()); // the current instance of this editor.\n\n            // we reference $$(this.ids.list) alot:\n            this.$list = $$(this.ids.list);\n\n            this.hide();\n            this.menuOptions(this._menuOptions);\n\n            // hide \"copy\" item\n            if (options.hideCopy) {\n               let itemCopy = this.$list.data.find(\n                  (item) => item.label == this.labels.copy\n               )[0];\n               if (itemCopy) {\n                  this.$list.remove(itemCopy.id);\n                  this.$list.refresh();\n               }\n\n               // hide \"exclude\" item\n               if (options.hideExclude) {\n                  let hideExclude = this.$list.data.find(\n                     (item) => item.label == this.labels.exclude\n                  )[0];\n                  if (hideExclude) {\n                     this.$list.remove(hideExclude.id);\n                     this.$list.refresh();\n                  }\n               }\n            }\n         }\n\n         /**\n          * @function menuOptions\n          * override the set of menu options.\n          * @param {array} menuOptions an array of option entries:\n          *\t\t\t\t  .label {string} multilingual label of the option\n          *\t\t\t\t  .icon  {string} the font awesome icon reference\n          *\t\t\t\t  .command {string} the command passed back when selected.\n          */\n         menuOptions(menuOptions) {\n            this.$list.clearAll();\n\n            this._menuOptions = menuOptions;\n            var data = [];\n            menuOptions.forEach((mo) => {\n               data.push({ label: mo.label, icon: mo.icon, command: mo.command });\n            });\n            this.$list.parse(data);\n            this.$list.refresh();\n         }\n\n         show(itemNode) {\n            this.Popup?.show(itemNode);\n         }\n\n         /**\n          * @method trigger()\n          * process which item in our popup was selected, then\n          * emit the selected command.\n          * NOTE: this can be overridden by child objects\n          * @param {itemNode} div.webix_list_item: we get the label then pass this up,\n          * The itemNode contains the 'page' the user wants to edit\n          */\n         trigger(command) {\n            // hide our popup before we trigger any other possible UI animation: (like .edit)\n            // NOTE: if the UI is animating another component, and we do .hide()\n            // while it is in progress, the UI will glitch and give the user whiplash.\n            if (command) {\n               this.hide();\n               this.emit(\"click\", command);\n               return false;\n            }\n         }\n\n         hide() {\n            this.Popup?.hide();\n         }\n      };\n   }\n\n   // NOTE: return JUST the class definition.\n   return myClass;\n}\n","/*\n * UI Warnings\n *\n * Display the warnings console\n *\n */\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB, iBase, iSettings) {\n   iBase = iBase || \"ui_warnings\";\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Warnings extends UIClass {\n      constructor(idBase, settings = {}) {\n         super(idBase, {\n            buttonWarning: \"\",\n            buttonWarningHide: \"\",\n            warnings: \"\",\n            warningsScroll: \"\",\n         });\n      }\n\n      ui() {\n         var ids = this.ids;\n\n         return {\n            rows: [\n               {\n                  view: \"button\",\n                  type: \"form\",\n                  id: ids.buttonWarning,\n                  css: \"webix_primary darkorange\",\n                  value: `<i class=\"fa fa-warning\"></i> ${L(\"Show Issues\")}`,\n                  hidden: true,\n                  click: () => {\n                     $$(ids.warnings).show();\n                     $$(ids.buttonWarning).hide();\n                     $$(ids.buttonWarningHide).show();\n                  },\n               },\n               {\n                  view: \"button\",\n                  type: \"form\",\n                  id: ids.buttonWarningHide,\n                  css: \"webix_primary darkorange\",\n                  value: `<i class=\"fa fa-warning\"></i> ${L(\"Hide Issues\")}`,\n                  hidden: true,\n                  click: () => {\n                     $$(ids.warnings).hide();\n                     $$(ids.buttonWarningHide).hide();\n                     $$(ids.buttonWarning).show();\n                  },\n               },\n               {\n                  id: ids.warnings,\n                  view: \"scrollview\",\n                  scroll: \"y\",\n                  css: \"webix_theme_dark\",\n                  minHeight: 300,\n                  body: {\n                     rows: [\n                        {\n                           id: ids.warningsScroll,\n                           template: \"Here are my warnings\",\n                           autoheight: true,\n                           css: \"webix_theme_dark\",\n                        },\n                     ],\n                  },\n                  hidden: true,\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n      }\n\n      show(currentObject) {\n         super.show();\n\n         var ids = this.ids;\n\n         let warningsAll = currentObject?.warningsAll();\n         if (warningsAll?.length) {\n            let message = \"<ul class='warningslist'>\";\n            warningsAll.forEach((issue) => {\n               message += `<li><i class=\"warningtext fa fa-warning\"></i> ${issue.message}</li>`;\n            });\n            message += `</ul>`;\n            $$(ids.warningsScroll).setHTML(message);\n            if ($$(ids.warnings).isVisible()) {\n               $$(ids.buttonWarning).hide();\n               $$(ids.buttonWarningHide).show();\n            } else {\n               $$(ids.buttonWarning).show();\n               $$(ids.buttonWarningHide).hide();\n            }\n         } else {\n            $$(ids.warningsScroll).setHTML(\"\");\n            $$(ids.warnings).hide();\n            $$(ids.buttonWarning).hide();\n            $$(ids.buttonWarningHide).hide();\n         }\n      }\n   }\n   return new UI_Warnings(iBase, iSettings);\n}\n","/*\n * ab_work\n *\n * Display the component for working with an ABApplication.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_Work_Object from \"./ui_work_object\";\nimport UI_Work_Query from \"./ui_work_query\";\nimport UI_Work_Interface from \"./ui_work_interface\";\nimport UI_Work_Datacollection from \"./ui_work_datacollection\";\nimport UI_Work_Process from \"./ui_work_process\";\n// const AB_Work_Interface = require(\"./ab_work_interface\");\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   var AppObjectWorkspace = UI_Work_Object(AB);\n   const AppQueryWorkspace = UI_Work_Query(AB);\n   const AppDataCollectionWorkspace = UI_Work_Datacollection(AB);\n   const AppProcessWorkspace = UI_Work_Process(AB);\n   var AppInterfaceWorkspace = UI_Work_Interface(AB);\n\n   class UI_Work extends UIClass {\n      constructor(options = {}) {\n         super(\"abd_work\", {\n            toolBar: \"\",\n            labelAppName: \"\",\n            tabbar: \"\",\n            tab_object: \"\",\n            tab_query: \"\",\n            tab_datacollection: \"\",\n            tab_processview: \"\",\n            tab_interface: \"\",\n            workspace: \"\",\n            collapseMenu: \"\",\n            expandMenu: \"\",\n         });\n\n         this.options = options;\n\n         this.selectedItem = this.ids.tab_object;\n         // {string} {this.ids.xxx}\n         // Keep track of the currently selected Tab Item (Object, Query, etc)\n      }\n\n      scanTopic(app, key) {\n         let countObjects = 0;\n         let warnObjects = {};\n         if (app) {\n            app[key]().forEach((o) => {\n               countObjects += (o.warningsAll() || []).length;\n            });\n         }\n         if (countObjects) {\n            warnObjects.icon = `<span class=\"webix_sidebar_dir_icon webix_icon fa fa-warning pulseDark smalltext\"></span>`;\n            warnObjects.count = countObjects;\n         }\n         return warnObjects;\n      }\n      sidebarItems(app) {\n         let warnObjects = this.scanTopic(app, \"objectsIncluded\");\n         let warnQueries = this.scanTopic(app, \"queriesIncluded\");\n         const warnDatacollections = this.scanTopic(\n            app,\n            \"datacollectionsIncluded\"\n         );\n         // TODO\n         // const warnInterfaces = this.scanTopic(app, \"interfacesIncluded\");\n\n         var sidebarItems = [\n            {\n               id: this.ids.tab_object,\n               value: `${L(\"Objects\")}`,\n               icon: \"fa fa-fw fa-database\",\n               issues: warnObjects,\n            },\n            {\n               id: this.ids.tab_query,\n               value: `${L(\"Queries\")}`,\n               icon: \"fa fa-fw fa-filter\",\n               issues: warnQueries,\n            },\n            {\n               id: this.ids.tab_datacollection,\n               value: L(\"Data Collections\"),\n               icon: \"fa fa-fw fa-table\",\n               issues: warnDatacollections,\n            },\n            {\n               id: this.ids.tab_processview,\n               value: L(\"Process\"),\n               icon: \"fa fa-fw fa-code-fork\",\n            },\n            {\n               id: this.ids.tab_interface,\n               value: L(\"Interface\"),\n               icon: \"fa fa-fw fa-id-card-o\",\n               // TODO\n               // issues: warnInterfaces,\n            },\n         ];\n\n         return sidebarItems;\n      }\n\n      /**\n       * @method ui()\n       * Return the webix definition of the UI we are managing.\n       * @return {json}\n       */\n      ui() {\n         var sidebarItems = this.sidebarItems();\n\n         var expandMenu = (this.expandMenu = {\n            id: this.ids.expandMenu,\n            value: L(\"Expand Menu\"),\n            icon: \"fa fa-fw fa-chevron-circle-right\",\n         });\n\n         var collapseMenu = {\n            id: this.ids.collapseMenu,\n            value: L(\"Collapse Menu\"),\n            icon: \"fa fa-fw fa-chevron-circle-left\",\n         };\n\n         return {\n            id: this.ids.component,\n            rows: [\n               {\n                  view: \"toolbar\",\n                  id: this.ids.toolBar,\n                  autowidth: true,\n                  elements: [\n                     {\n                        view: \"button\",\n                        css: \"webix_transparent\",\n                        label: L(\"Back to Applications page\"),\n                        autowidth: true,\n                        type: \"icon\",\n                        icon: \"fa fa-arrow-left\",\n                        hidden: this.options?.IsBackHidden ?? false, // hide this button in the admin lve page\n                        click: () => {\n                           this.emit(\"view.chooser\");\n                           // App.actions.transitionApplicationChooser();\n                        },\n                     },\n                     // {\n                     // \tview: \"button\",\n                     // \ttype: \"icon\",\n                     // \ticon: \"fa fa-bars\",\n                     // \twidth: 37,\n                     // \talign: \"left\",\n                     // \tcss: \"app_button\",\n                     // \tclick: function(){\n                     // \t\t$$(ids.tabbar).toggle();\n                     // \t}\n                     // },\n                     {},\n                     {\n                        view: \"label\",\n                        css: \"appTitle\",\n                        id: this.ids.labelAppName,\n                        align: \"center\",\n                     },\n                     {},\n                  ],\n               },\n               //{ height: App.config.mediumSpacer },\n               // {\n               // \tview:\"segmented\",\n               // \tid: ids.tabbar,\n               // \tvalue: ids.tab_object,\n               // \tmultiview: true,\n               // \talign: \"center\",\n               // \toptions:[\n               // \t\t{\n               // \t\t\tid: ids.tab_object,\n               // \t\t\tvalue: labels.component.objectTitle,\n               // \t\t\twidth: App.config.tabWidthMedium\n               // \t\t},\n               // \t\t{\n               // \t\t\tid: ids.tab_interface,\n               // \t\t\tvalue: labels.component.interfaceTitle,\n               // \t\t\twidth: App.config.tabWidthMedium\n               // \t\t}\n               // \t],\n               // \ton: {\n               // \t\tonChange: function (idNew, idOld) {\n               // \t\t\tif (idNew != idOld) {\n               // \t\t\t\t_logic.tabSwitch(idNew, idOld);\n               // \t\t\t}\n               // \t\t}\n               // \t}\n               // },\n               {\n                  cols: [\n                     {\n                        id: this.ids.tabbar,\n                        css: \"webix_dark\",\n                        view: \"sidebar\",\n                        animate: false,\n                        width: 160,\n                        data: sidebarItems.concat(collapseMenu),\n                        on: {\n                           onAfterSelect: (id) => {\n                              if (id == this.ids.collapseMenu) {\n                                 setTimeout(() => {\n                                    this.$tabbar.remove(this.ids.collapseMenu);\n                                    this.$tabbar.add(expandMenu);\n                                    this.$tabbar.toggle();\n                                    this.$tabbar.select(this.selectedItem);\n                                    this.saveState();\n                                 }, 0);\n                              } else if (id == this.ids.expandMenu) {\n                                 setTimeout(() => {\n                                    this.$tabbar.remove(this.ids.expandMenu);\n                                    this.$tabbar.add(collapseMenu);\n                                    this.$tabbar.toggle();\n                                    this.$tabbar.select(this.selectedItem);\n                                    this.saveState();\n                                 }, 0);\n                              } else {\n                                 this.tabSwitch(id);\n                                 this.selectedItem = id;\n                              }\n                           },\n                        },\n                        template: function (obj, common) {\n                           if (common.collapsed) {\n                              return common.icon(obj, common);\n                           } else {\n                              return (\n                                 (obj.issues?.icon || \"\") +\n                                 common.icon(obj, common) +\n                                 \"<span>\" +\n                                 obj.value +\n                                 \"</span>\"\n                              );\n                           }\n                        },\n                        tooltip: {\n                           template: function (obj) {\n                              return obj.issues?.count\n                                 ? `${obj.issues?.count} issues`\n                                 : \"\";\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.workspace,\n                        cells: [\n                           AppObjectWorkspace.ui(),\n                           AppQueryWorkspace.ui(),\n                           AppDataCollectionWorkspace.ui(),\n                           AppProcessWorkspace.ui(),\n                           AppInterfaceWorkspace.ui(),\n                        ],\n                     },\n                  ],\n               },\n            ],\n         };\n      } // ui()\n\n      /**\n       * @method init()\n       * Initialize the State of this widget\n       * @param {ABFactory} AB\n       * @return {Promise}\n       */\n      async init(AB) {\n         this.AB = AB;\n\n         this.warningsPropogate([\n            AppObjectWorkspace,\n            AppQueryWorkspace,\n            AppDataCollectionWorkspace,\n            AppProcessWorkspace,\n         ]);\n         this.on(\"warnings\", () => {\n            this.refreshSideBar(this.CurrentApplication);\n         });\n\n         AppObjectWorkspace.init(AB);\n         AppQueryWorkspace.init(AB);\n         AppDataCollectionWorkspace.init(AB);\n         AppProcessWorkspace.init(AB);\n         AppInterfaceWorkspace.init(AB);\n\n         this.$tabbar = $$(this.ids.tabbar);\n\n         // initialize the Object Workspace to show first.\n         var state = this.AB.Storage.get(this.ids.component);\n         if (state) {\n            this.$tabbar.setState(state);\n\n            if (state.collapsed) {\n               setTimeout(() => {\n                  this.$tabbar.remove(this.ids.collapseMenu);\n                  this.$tabbar.add(this.expandMenu);\n               }, 0);\n            }\n         }\n\n         this.tabSwitch(this.ids.tab_object);\n         this.$tabbar.select(this.ids.tab_object);\n      } // init()\n\n      /**\n       * @method applicationInit()\n       * Store the current ABApplication we are working with.\n       * @param {ABApplication} application\n       *        The current ABApplication we are working with.\n       */\n      applicationInit(application) {\n         if (application) {\n            // setup Application Label:\n            var $labelAppName = $$(this.ids.labelAppName);\n            $labelAppName.define(\"label\", application?.label);\n            $labelAppName.refresh();\n         }\n         super.applicationLoad(application);\n      }\n\n      /**\n       * @method saveState()\n       * Save the state of this tabbar to local storage.\n       */\n      saveState() {\n         this.AB.Storage.set(this.ids.component, this.$tabbar.getState());\n      }\n\n      /**\n       * @method show()\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n         let tabId = this.$tabbar.getSelectedId();\n         this.tabSwitch(tabId);\n      }\n\n      refreshSideBar(application) {\n         let $tabbar = $$(this.ids.tabbar);\n         let sidebarItems = this.sidebarItems(application);\n         $tabbar?.define(\"data\", sidebarItems);\n         $tabbar?.refresh();\n      }\n\n      /**\n       * @method transitionWorkspace\n       * Switch the UI to view the App Workspace screen.\n       * @param {ABApplication} application\n       *        The current ABApplication we are working with.\n       */\n      transitionWorkspace(application) {\n         if (this.CurrentApplicationID != application?.id) {\n            this.applicationInit(application);\n         }\n         AppObjectWorkspace.applicationLoad(application);\n         AppQueryWorkspace.applicationLoad(application);\n         AppDataCollectionWorkspace.applicationLoad(application);\n         AppProcessWorkspace.applicationLoad(application);\n         AppInterfaceWorkspace.applicationLoad(application);\n\n         this.refreshSideBar(application);\n\n         this.show();\n      }\n\n      /**\n       * @method tabSwitch\n       * Every time a tab switch happens, decide which workspace to show.\n       * @param {string} idTab\n       *        the id of the tab that was changed to.\n       */\n      tabSwitch(idTab) {\n         switch (idTab) {\n            // Object Workspace Tab\n            case this.ids.tab_object:\n               AppObjectWorkspace.show();\n               break;\n\n            // Query Workspace Tab\n            case this.ids.tab_query:\n               AppQueryWorkspace.show();\n               break;\n\n            // Datacollection Workspace Tab\n            case this.ids.tab_datacollection:\n               AppDataCollectionWorkspace.show();\n               break;\n\n            // Process Workspace Tab\n            case this.ids.tab_processview:\n               AppProcessWorkspace.show();\n               break;\n\n            // Interface Workspace Tab\n            case this.ids.tab_interface:\n               AppInterfaceWorkspace.show();\n               break;\n\n            // Interface Workspace Tab\n            case \"interface\":\n               AppInterfaceWorkspace.show();\n               this.$tabbar.select(this.ids.tab_interface);\n               break;\n         }\n      }\n   } // class UI_Work\n\n   return new UI_Work();\n}\n","/*\n * ui_work_datacollection\n *\n * Display the DataCollection Tab UI:\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_Work_DataCollection_List from \"./ui_work_datacollection_list\";\nimport UI_Work_DataCollection_Workspace from \"./ui_work_datacollection_workspace\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n\n   const DataCollectionList = UI_Work_DataCollection_List(AB);\n   const DataCollectionWorkspace = UI_Work_DataCollection_Workspace(AB, {\n      allowDelete: 0,\n      configureHeaders: false,\n      detailsView: \"\",\n      editView: \"\",\n      isEditable: 0,\n      massUpdate: 0,\n      isReadOnly: true,\n   });\n\n   class UI_Work_DataCollection extends UIClass {\n      constructor() {\n         super(\"ui_work_datacollection\");\n      }\n\n      ui() {\n         const ids = this.ids;\n         // Our webix UI definition:\n         return {\n            id: ids.component,\n            type: \"space\",\n            cols: [\n               DataCollectionList.ui(),\n               { view: \"resizer\", width: 11 },\n               DataCollectionWorkspace.ui(),\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         // Our init() function for setting up our UI\n         DataCollectionList.on(\"selected\", (dc) => {\n            this.select(dc);\n         });\n\n         DataCollectionWorkspace.on(\"addNew\", (selectNew) => {\n            DataCollectionList.emit(\"addNew\", selectNew);\n         });\n\n         this.warningsPropogate([DataCollectionList, DataCollectionWorkspace]);\n         this.on(\"warnings\", () => {\n            // make sure our list refreshes it's display\n            DataCollectionList.warningsRefresh();\n         });\n\n         await DataCollectionWorkspace.init(AB);\n         await DataCollectionList.init(AB);\n      }\n\n      /**\n       * @function applicationLoad\n       * Initialize the Datacollection Workspace with the given ABApplication.\n       * @param {ABApplication} application\n       */\n      applicationLoad(application) {\n         const oldAppID = this.CurrentApplicationID;\n\n         super.applicationLoad(application);\n\n         if (oldAppID != this.CurrentApplicationID) {\n            DataCollectionWorkspace.clearWorkspace();\n         }\n\n         DataCollectionList.applicationLoad(application);\n         DataCollectionWorkspace.applicationLoad(application);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         const ids = this.ids;\n\n         $$(ids.component).show(false, false);\n\n         const application = this.CurrentApplication;\n         if (application) {\n            DataCollectionWorkspace.applicationLoad(application);\n            DataCollectionList.applicationLoad(application);\n         }\n         DataCollectionList.ready();\n      }\n\n      select(dc) {\n         if (dc == null) DataCollectionWorkspace.clearWorkspace();\n         DataCollectionWorkspace.datacollectionLoad(dc);\n         DataCollectionWorkspace.populateWorkspace(dc);\n      }\n   }\n\n   return new UI_Work_DataCollection();\n}\n","/*\n * ui_work_datacollection_list\n *\n * Manage the ABDataCollection List\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_COMMON_LIST from \"./ui_common_list\";\nimport UI_ADD_FORM from \"./ui_work_datacollection_list_newDatacollection\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n\n   const AddForm = UI_ADD_FORM(AB);\n\n   class UI_Work_Datacollection_List extends UIClass {\n      constructor() {\n         super(\"ui_work_datacollection_list\");\n\n         // {ui_common_list} instance to display a list of our data collections.\n         this.ListComponent = UI_COMMON_LIST(AB, {\n            idBase: this.ids.component,\n            labels: {\n               addNew: \"Add new data collection\",\n               confirmDeleteTitle: \"Delete Data Collection\",\n               title: \"Data Collections\",\n               searchPlaceholder: \"Data Collection name\",\n            },\n            menu: {\n               copy: false,\n               exclude: true,\n            },\n            /**\n             * @function templateListItem\n             *\n             * Defines the template for each row of our Data view list.\n             *\n             * @param {ABDatacollection} obj the current instance of ABDatacollection for the row.\n             * @param {?} common the webix.common icon data structure\n             * @return {string}\n             */\n            templateListItem: function (datacollection, common, warnings) {\n               let warnIcon = \"\";\n               if (warnings?.length > 0) {\n                  warnIcon =\n                     '<span class=\"webix_sidebar_dir_icon webix_icon fa fa-warning pulseLight smalltext\"></span>';\n               }\n               return `<div class='ab-datacollection-list-item'>\n                  <i class=\"fa ${\n                     datacollection.settings.isQuery\n                        ? \"fa-filter\"\n                        : \"fa-database\"\n                  }\"></i>\n                  ${datacollection.label || \"??label??\"}\n                  ${warnIcon}\n                  ${common.iconGear(datacollection)}\n               </div>`;\n            },\n         });\n      }\n\n      // Our webix UI definition:\n      ui() {\n         return this.ListComponent.ui();\n      }\n\n      // Our init() function for setting up our UI\n      async init(AB) {\n         this.AB = AB;\n\n         this.on(\"addNew\", (selectNew) => {\n            // if we receive a signal to add a new Data Collection from another source\n            this.clickNewDataCollection(selectNew);\n         });\n\n         //\n         // List of Processes\n         //\n         await this.ListComponent.init(AB);\n\n         this.ListComponent.on(\"selected\", (item) => {\n            this.emit(\"selected\", item);\n         });\n\n         this.ListComponent.on(\"addNew\", (selectNew) => {\n            this.clickNewDataCollection(selectNew);\n         });\n\n         this.ListComponent.on(\"deleted\", (item) => {\n            this.emit(\"deleted\", item);\n         });\n\n         this.ListComponent.on(\"exclude\", (item) => {\n            this.exclude(item);\n         });\n\n         //\n         // Add Form\n         //\n         await AddForm.init(AB);\n\n         AddForm.on(\"cancel\", () => {\n            AddForm.hide();\n         });\n\n         AddForm.on(\"save\", (q /* , select */) => {\n            // the AddForm already takes care of updating the\n            // CurrentApplication.\n\n            // we just need to update our list of data collections\n            this.applicationLoad(this.CurrentApplication);\n\n            // if (select) {\n            this.ListComponent.select(q.id);\n            // }\n         });\n      }\n\n      /**\n       * @function applicationLoad\n       *\n       * Initialize the Data Collection List from the provided ABApplication\n       *\n       * If no ABApplication is provided, then show an empty form. (create operation)\n       *\n       * @param {ABApplication} application  \t[optional] The current ABApplication\n       *\t\t\t\t\t\t\t\t\t\twe are working with.\n       */\n      applicationLoad(application) {\n         var oldAppID = this.CurrentApplicationID;\n         var selectedItem = null;\n\n         super.applicationLoad(application);\n\n         if (oldAppID == this.CurrentApplicationID) {\n            selectedItem = this.ListComponent.selectedItem();\n         }\n\n         // NOTE: only include System Objects if the user has permission\n         var f = (obj) => !obj.isSystemObject;\n         if (this.AB.Account.isSystemDesigner()) {\n            f = () => true;\n         }\n\n         // clear our list and display our data collections:\n         this.ListComponent.dataLoad(application?.datacollectionsIncluded(f));\n\n         if (selectedItem) {\n            this.ListComponent.selectItem(selectedItem.id);\n         }\n\n         // prepare our Popup with the current Application\n         AddForm.applicationLoad(application);\n      }\n\n      warningsRefresh() {\n         if (this.CurrentApplication) {\n            // NOTE: only include System Objects if the user has permission\n            var f = (obj) => !obj.isSystemObject;\n            if (this.AB.Account.isSystemDesigner()) {\n               f = () => true;\n            }\n\n            let selectedItem = this.ListComponent.selectedItem();\n            this.ListComponent.dataLoad(\n               this.CurrentApplication?.datacollectionsIncluded(f)\n            );\n            this.ListComponent.selectItem(selectedItem.id);\n         }\n      }\n\n      /**\n       * @function exclude\n       * the list component notified us of an exclude action and which\n       * item was chosen.\n       *\n       * perform the removal and update the UI.\n       */\n      async exclude(item) {\n         this.ListComponent.busy();\n         var app = this.CurrentApplication;\n         await app?.datacollectionRemove(item);\n         this.ListComponent.dataLoad(app?.datacollectionsIncluded());\n\n         // this will clear the data collection workspace\n         this.emit(\"selected\", null);\n      }\n\n      ready() {\n         this.ListComponent.ready();\n      }\n\n      /**\n       * @function clickNewDataCollection\n       *\n       * Manages initiating the transition to the new Process Popup window\n       */\n      clickNewDataCollection(/* selectNew */) {\n         // show the new popup\n         AddForm.show();\n      }\n   }\n\n   return new UI_Work_Datacollection_List();\n}\n","/*\n * ui_work_datacollection_list_newDataCollection\n *\n * Display the form for creating a new Data collection.  This Popup will manage several\n * different sub components for gathering Data collection data for saving.\n *\n * The sub components will gather the data for the data collection and do basic form\n * validations on their interface.\n *\n * when ready, the sub component will emit \"save\" with the values gathered by\n * the form.  This component will manage the actual final datacollection validation,\n * and saving to this application.\n *\n * On success, \"save.success\" will be emitted on the sub-component, and this\n * component.\n *\n * On Error, \"save.error\" will be emitted on the sub-component.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_Blank_DataCollection from \"./ui_work_datacollection_list_newDatacollection_blank\";\nimport UI_Import_DataCollection from \"./ui_work_datacollection_list_newDatacollection_import\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_DataCollection_List_NewDataCollection extends UIClass {\n      constructor() {\n         super(\"ui_work_datacollection_list_newDataCollection\", {\n            tab: \"\",\n         });\n\n         this.selectNew = true;\n         // {bool} do we select a new data collection after it is created.\n\n         // var callback = null;\n\n         this.BlankTab = UI_Blank_DataCollection(AB);\n         this.ImportTab = UI_Import_DataCollection(AB);\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            view: \"window\",\n            id: this.ids.component,\n            position: \"center\",\n            modal: true,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Add new Data Collection\"),\n                     css: \"modal_title\",\n                     align: \"center\",\n                  },\n                  {\n                     view: \"button\",\n                     autowidth: true,\n                     type: \"icon\",\n                     icon: \"nomargin fa fa-times\",\n                     click: () => {\n                        this.emit(\"cancel\");\n                     },\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            selectNewDataCollection: true,\n            body: {\n               view: \"tabview\",\n               id: this.ids.tab,\n               cells: [this.BlankTab.ui(), this.ImportTab.ui()],\n               tabbar: {\n                  on: {\n                     onAfterTabClick: (id) => {\n                        this.switchTab(id);\n                     },\n                     onAfterRender() {\n                        this.$view\n                           .querySelectorAll(\".webix_item_tab\")\n                           .forEach((t) => {\n                              var tid = t.getAttribute(\"button_id\");\n                              AB.ClassUI.CYPRESS_REF(t, `${tid}_tab`);\n                           });\n                     },\n                  },\n               },\n            },\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n         webix.extend($$(this.ids.component), webix.ProgressBar);\n\n         this.$component = $$(this.ids.component);\n\n         let allInits = [];\n         [\"BlankTab\", \"ImportTab\"].forEach((k) => {\n            allInits.push(this[k].init(AB));\n            this[k].on(\"cancel\", () => {\n               this.emit(\"cancel\");\n            });\n            this[k].on(\"save\", (values) => {\n               if (values.id) {\n                  return this.import(values, k);\n               }\n               this.save(values, k);\n            });\n         });\n\n         return Promise.all(allInits);\n      }\n\n      /**\n       * @method applicationLoad()\n       * prepare ourself with the current application\n       * @param {ABApplication} application\n       */\n      // applicationLoad(application) {\n      //    this.CurrentApplicationID = application.id;\n      // }\n\n      /**\n       * Show the busy indicator\n       */\n      busy() {\n         this.$component?.showProgress?.();\n      }\n\n      /**\n       * @method done()\n       * Finished saving, so hide the popup and clean up.\n       * @param {object} obj\n       */\n      done(obj) {\n         this.ready();\n         this.hide(); // hide our popup\n         this.emit(\"save\", obj, this.selectNew);\n      }\n\n      /**\n       * @function hide()\n       *\n       * remove the busy indicator from the form.\n       */\n      hide() {\n         this.$component?.hide();\n      }\n\n      /**\n       * @method import()\n       * take an existing ABDataCollection and add it to our ABApplication.\n       * @param {ABODataCollection} dc\n       * @param {string} tabKey\n       *        which of our tabs triggered this method?\n       */\n      async import(dc, tabKey) {\n         // show progress\n         this.busy();\n\n         // if we get here, save the new Object\n         try {\n            await this.CurrentApplication.datacollectionInsert(dc);\n            this[tabKey].emit(\"save.successful\", dc);\n            this.done(dc);\n         } catch (err) {\n            // hide progress\n            this.ready();\n\n            // an error happend during the server side creation.\n            // so remove this object from the current datacollection list of\n            // the CurrentApplication.\n            // NOTE: It has error \"queryRemove\" is not a function\n            // await this.CurrentApplication.datacollectionRemove(newQuery);\n\n            // tell current Tab component there was an error\n            this[tabKey].emit(\"save.error\", err);\n         }\n      }\n\n      /**\n       * Hide the busy indicator\n       */\n      ready() {\n         this.$component?.hideProgress?.();\n      }\n      /**\n       * @method save\n       * take the data gathered by our child creation tabs, and\n       * add it to our current application.\n       * @param {obj} values  key=>value hash of model values.\n       * @param {string}  tabKey\n       *        the \"key\" of the tab initiating the save.\n       * @return {Promise}\n       */\n      async save(values, tabKey) {\n         // must have an application set.\n         if (!this.CurrentApplication) {\n            webix.alert({\n               title: L(\"Shoot!\"),\n               test: L(\"No Application Set!  Why?\"),\n            });\n            this[tabKey].emit(\"save.error\", true);\n            return false;\n         }\n\n         // create a new (unsaved) instance of our data collection:\n         let newDataCollection = this.AB.datacollectionNew(values);\n\n         // have newObject validate it's values.\n         let validator = newDataCollection.isValid();\n         if (validator.fail()) {\n            this[tabKey].emit(\"save.error\", validator);\n            // cb(validator); // tell current Tab component the errors\n            return false; // stop here.\n         }\n\n         if (!newDataCollection.createdInAppID) {\n            newDataCollection.createdInAppID = this.CurrentApplicationID;\n         }\n\n         // show progress\n         this.busy();\n\n         // if we get here, save the new Object\n         try {\n            let datacollection = await newDataCollection.save();\n            await this.CurrentApplication.datacollectionInsert(datacollection);\n            this[tabKey].emit(\"save.successful\", datacollection);\n            this.done(datacollection);\n         } catch (err) {\n            // hide progress\n            this.ready();\n\n            // an error happend during the server side creation.\n            // so remove this data collection from the current data collection list of\n            // the CurrentApplication.\n            // NOTE: It has error \"datacollectionRemove\" is not a function\n            // await this.CurrentApplication.datacollectionRemove(newDataCollection);\n\n            // tell current Tab component there was an error\n            this[tabKey].emit(\"save.error\", err);\n         }\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show(shouldSelectNew) {\n         if (shouldSelectNew != null) {\n            this.selectNew = shouldSelectNew;\n         }\n         this.$component?.show();\n\n         const id = $$(this.ids.tab).getValue();\n         this.switchTab(id);\n      }\n\n      switchTab(tabId) {\n         if (tabId == this.BlankTab?.ui()?.body?.id || !tabId) {\n            this.BlankTab?.onShow?.(this.CurrentApplication);\n         } else if (tabId == this.ImportTab?.ui()?.body?.id) {\n            this.ImportTab?.onShow?.(this.CurrentApplication);\n         }\n      }\n   }\n\n   return new UI_Work_DataCollection_List_NewDataCollection();\n}\n","/*\n * ui_work_dataCollection_list_newDataCollection_blank\n *\n * Display the form for creating a new ABDataCollection.\n */\nimport UI_Class from \"./ui_class\";\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_DataCollection_List_NewDataCollection_Blank extends UIClass {\n      constructor() {\n         super(\"ui_work_dataCollection_list_newDataCollection_blank\", {\n            // component: base, <-- auto-generated\n\n            form: \"\",\n            buttonSave: \"\",\n            buttonCancel: \"\",\n            object: \"\",\n         });\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            header: L(\"Create\"),\n            body: {\n               view: \"form\",\n               id: this.ids.form,\n               width: 400,\n               rules: {\n                  // TODO:\n                  // name: inputValidator.rules.validateDataCollectionName\n               },\n               elements: [\n                  {\n                     view: \"text\",\n                     label: L(\"Name\"),\n                     name: \"name\",\n                     required: true,\n                     placeholder: L(\"Data Collection name\"),\n                     labelWidth: 70,\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(\n                              this,\n                              \"ui_work_dataCollection_list_newDatacollection_blank_name\"\n                           );\n                        },\n                     },\n                  },\n                  {\n                     id: this.ids.object,\n                     view: \"richselect\",\n                     label: L(\"Object\"),\n                     name: \"object\",\n                     required: true,\n                     placeholder: L(\"Select an object\"),\n                     labelWidth: 70,\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(\n                              this,\n                              \"ui_work_dataCollection_list_newDatacollection_blank_object\"\n                           );\n                        },\n                     },\n                  },\n                  {\n                     margin: 5,\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonCancel,\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.cancel();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonSave,\n                           css: \"webix_primary\",\n                           value: L(\"Add Data Collection\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              return this.save();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         this.$form = $$(this.ids.form);\n         this.$buttonSave = $$(this.ids.buttonSave);\n         this.$objectList = $$(this.ids.object);\n\n         // \"save.error\" is triggered by the ui_work_dataCollection_list_newDataCollection\n         // if there was an error saving the values from our form.\n         this.on(\"save.error\", (err) => {\n            this.onError(err);\n         });\n\n         // \"save.successful\" is triggered by the ui_work_dataCollection_list_newDataCollection\n         // if the values we provided were successfully saved.\n         this.on(\"save.successful\", () => {\n            this.onSuccess();\n         });\n\n         // init() routines are always considered async so:\n         return Promise.resolve();\n      }\n\n      cancel() {\n         this.formClear();\n         this.emit(\"cancel\");\n      }\n\n      formClear() {\n         if (this.$form) {\n            this.$form.clearValidation();\n            this.$form.clear();\n         }\n      }\n\n      /**\n       * @method onError()\n       * Our Error handler when the data we provided our parent\n       * ui_work_dataCollection_list_newDataCollection had an error saving\n       * the values.\n       * @param {Error|ABValidation|other} err\n       *        The error information returned. This can be several\n       *        different types of queries:\n       *        - A javascript Error() dataCollection\n       *        - An ABValidation dataCollection returned from our .isValid()\n       *          method\n       *        - An error response from our API call.\n       */\n      onError(err) {\n         if (err) {\n            console.error(err);\n            var message = L(\"the entered data is invalid\");\n            // if this was our Validation() dataCollection:\n            if (err.updateForm) {\n               err.updateForm(this.$form);\n            } else {\n               if (err.code && err.data) {\n                  message = err.data?.sqlMessage ?? message;\n               } else {\n                  message = err?.message ?? message;\n               }\n            }\n\n            var values = this.$form.getValues();\n            webix.alert({\n               title: L(\"Error creating DataCollection: {0}\", [values.name]),\n               ok: L(\"fix it\"),\n               text: message,\n               type: \"alert-error\",\n            });\n         }\n         // get notified if there was an error saving.\n         this.$buttonSave.enable();\n      }\n\n      /**\n       * @method onSuccess()\n       * Our success handler when the data we provided our parent\n       * ui_work_dataCollection_list_newDatacollection successfully saved the values.\n       */\n      onSuccess() {\n         this.formClear();\n         this.$buttonSave.enable();\n      }\n\n      /**\n       * @function save\n       *\n       * verify the current info is ok, package it, and return it to be\n       * added to the application.createModel() method.\n       */\n      save() {\n         this.$buttonSave.disable();\n\n         var Form = this.$form;\n\n         Form.clearValidation();\n\n         // if it doesn't pass the basic form validation, return:\n         if (!Form.validate()) {\n            this.$buttonSave.enable();\n            return false;\n         }\n\n         let formVals = Form.getValues();\n         let id = formVals.object;\n         let selectedObject = this.AB.objectByID(id);\n         if (!selectedObject) {\n            selectedObject = this.AB.queryByID(id);\n         }\n\n         let values = {\n            name: formVals.name,\n            label: formVals.name,\n            settings: {\n               datasourceID: id,\n               isQuery: selectedObject?.isQuery ?? false,\n            },\n         };\n\n         this.emit(\"save\", values);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         if ($$(this.ids.component)) $$(this.ids.component).show();\n      }\n\n      onShow(currentApplication) {\n         // populate object list\n         if (this.$objectList && currentApplication) {\n            let datasourceOpts = [];\n\n            // Objects\n            datasourceOpts = datasourceOpts.concat(\n               currentApplication.objectsIncluded().map((obj) => {\n                  return {\n                     id: obj.id,\n                     value: obj.label,\n                     icon: \"fa fa-database\",\n                     isQuery: false,\n                  };\n               })\n            );\n\n            // Queries\n            datasourceOpts = datasourceOpts.concat(\n               currentApplication.queriesIncluded().map((q) => {\n                  return {\n                     id: q.id,\n                     value: q.label,\n                     icon: \"fa fa-filter\",\n                     isQuery: true,\n                  };\n               })\n            );\n\n            this.$objectList.define(\"options\", datasourceOpts);\n            this.$objectList.refresh();\n\n            // Set width of item list\n            let $suggestView = this.$objectList.getPopup();\n            $suggestView.attachEvent(\"onShow\", () => {\n               $suggestView.define(\"width\", 350);\n               $suggestView.resize();\n            });\n         }\n\n         // clear form\n         if (this.$form) {\n            this.$form.setValues({\n               name: \"\",\n               object: \"\",\n            });\n         }\n      }\n   }\n\n   return new UI_Work_DataCollection_List_NewDataCollection_Blank();\n}\n","/*\n * ab_work_datacollection_list_newDatacollection_import\n *\n * Display the form for importing an existing data collection into the application.\n *\n */\nimport UI_Class from \"./ui_class\";\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_DataCollection_List_NewDataCollection_Import extends UIClass {\n      constructor() {\n         super(\"ui_work_datacollection_list_newDatacollection_import\", {\n            // component: base, <-- auto generated\n\n            form: \"\",\n            filter: \"\",\n            datacollectionList: \"\",\n            buttonSave: \"\",\n            buttonCancel: \"\",\n         });\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            header: L(\"Existing\"),\n            body: {\n               view: \"form\",\n               id: this.ids.form,\n               width: 400,\n               elements: [\n                  // Filter\n                  {\n                     cols: [\n                        {\n                           view: \"icon\",\n                           icon: \"fa fa-filter\",\n                           align: \"left\",\n                        },\n                        {\n                           view: \"text\",\n                           id: this.ids.filter,\n                           on: {\n                              onTimedKeyPress: () => this.filter(),\n                           },\n                        },\n                     ],\n                  },\n\n                  // Model list\n                  {\n                     view: \"list\",\n                     id: this.ids.datacollectionList,\n                     select: true,\n                     height: 200,\n                     minHeight: 250,\n                     maxHeight: 250,\n                     data: [],\n                     template: \"<div>#label#</div>\",\n                  },\n\n                  // Import & Cancel buttons\n                  {\n                     margin: 5,\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonCancel,\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => this.cancel(),\n                        },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonSave,\n                           css: \"webix_primary\",\n                           value: L(\"Import\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => this.save(),\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         this.$form = $$(this.ids.form);\n         this.$filter = $$(this.ids.filter);\n         this.$datacollectionList = $$(this.ids.datacollectionList);\n         this.$buttonSave = $$(this.ids.buttonSave);\n         this.$buttonCancel = $$(this.ids.buttonCancel);\n\n         // \"save.error\" is triggered by the ui_work_datacollection_list_newDatacollection\n         // if there was an error saving the values from our form.\n         this.on(\"save.error\", (err) => {\n            this.onError(err);\n         });\n\n         // \"save.successful\" is triggered by the ui_work_datacollection_list_newDatacollection\n         // if the values we provided were successfully saved.\n         this.on(\"save.successful\", () => {\n            this.onSuccess();\n         });\n      }\n\n      onShow(app) {\n         this.formClear();\n\n         // now all objects are *global* but an application might only\n         // reference a sub set of them.  Here we just need to show\n         // the objects our current application isn't referencing:\n\n         const availableQueries = app.datacollectionsExcluded();\n         this.$datacollectionList.parse(availableQueries, \"json\");\n      }\n\n      filter() {\n         let filterText = this.$filter.getValue();\n         this.$datacollectionList.filter(\"#label#\", filterText);\n      }\n\n      save() {\n         let selectedDataCollection =\n            this.$datacollectionList.getSelectedItem();\n         if (!selectedDataCollection) return false;\n\n         this.$buttonSave.disable();\n\n         this.emit(\"save\", selectedDataCollection);\n      }\n\n      cancel() {\n         this.formClear();\n         this.emit(\"cancel\");\n      }\n\n      formClear() {\n         // Filter section\n         if (this.$form) {\n            this.$form.clearValidation();\n            this.$form.clear();\n         }\n         // Lists\n         if (this.$datacollectionList) {\n            this.$datacollectionList.clearAll();\n         }\n      }\n\n      /**\n       * @method onError()\n       * Our Error handler when the data we provided our parent\n       * ui_work_object_list_newObject object had an error saving\n       * the values.\n       * @param {Error|ABValidation|other} err\n       *        The error information returned. This can be several\n       *        different types of objects:\n       *        - A javascript Error() object\n       *        - An ABValidation object returned from our .isValid()\n       *          method\n       *        - An error response from our API call.\n       */\n      onError(err) {\n         if (err) {\n            console.error(err);\n            let message = L(\"the entered data is invalid\");\n            // if this was our Validation() object:\n            if (err.updateForm) {\n               err.updateForm(this.$form);\n            } else {\n               if (err.code && err.data) {\n                  message = err.data?.sqlMessage ?? message;\n               } else {\n                  message = err?.message ?? message;\n               }\n            }\n\n            let values = this.$form.getValues();\n            webix.alert({\n               title: L(\"Error creating DataCollection: {0}\", [values.name]),\n               ok: L(\"fix it\"),\n               text: message,\n               type: \"alert-error\",\n            });\n         }\n         // get notified if there was an error saving.\n         this.$buttonSave.enable();\n      }\n\n      /**\n       * @method onSuccess()\n       * Our success handler when the data we provided our parent\n       * ui_work_object_list_newObject successfully saved the values.\n       */\n      onSuccess() {\n         this.$buttonSave.enable();\n      }\n   }\n\n   return new UI_Work_DataCollection_List_NewDataCollection_Import();\n}\n","import UI_Class from \"./ui_class\";\nimport UI_Warnings from \"./ui_warnings\";\n\nimport FWorkspaceViews from \"./ui_work_object_workspace_workspaceviews\";\nimport FWorkspaceDisplay from \"./ui_work_object_workspace_view_grid\";\nimport FWorkspaceProperty from \"./ui_work_datacollection_workspace_properties\";\n\nexport default function (AB, init_settings) {\n   const ibase = \"ui_work_datacollection_workspace\";\n   const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   const Datatable = FWorkspaceDisplay(AB, `${ibase}_view_grid`, init_settings);\n   const Property = FWorkspaceProperty(AB);\n\n   const Warnings = UI_Warnings(AB, `${ibase}_view_warnings`, init_settings);\n\n   class UI_Work_Datacollection_Workspace extends UIClass {\n      constructor(base, settings = {}) {\n         super(base, {\n            multiview: \"\",\n            noSelection: \"\",\n            workspace: \"\",\n         });\n         this.AB = AB;\n\n         this.settings = settings;\n\n         this.workspaceViews = FWorkspaceViews(AB, `${base}_views`, settings);\n         this.hashViewsGrid = Datatable;\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         return {\n            view: \"multiview\",\n            id: ids.multiview,\n            cells: [\n               // No selection\n               {\n                  id: ids.noSelection,\n                  rows: [\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: 200,\n                        label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-table'></div>\",\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: L(\"Select a datacollection to work with.\"),\n                     },\n                     {\n                        cols: [\n                           {},\n                           {\n                              view: \"button\",\n                              css: \"webix_primary\",\n                              label: L(\"Add new data collection\"),\n                              type: \"form\",\n                              autowidth: true,\n                              click: () => {\n                                 this.emit(\"addNew\", true);\n                              },\n                           },\n                           {},\n                        ],\n                     },\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                  ],\n               },\n               {\n                  id: ids.workspace,\n                  view: \"layout\",\n                  rows: [\n                     {\n                        cols: [\n                           // Workspace\n                           Datatable.ui(),\n\n                           { view: \"resizer\", css: \"bg_gray\", width: 11 },\n\n                           // Property\n                           Property.ui(),\n                        ],\n                     },\n                     Warnings.ui(),\n                  ],\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         const ids = this.ids;\n\n         this.AB = AB;\n\n         this.warningsPropogate([Property, Datatable]);\n         this.on(\"warnings\", () => {\n            Warnings.show(this.mockDatacollection);\n         });\n\n         this.workspaceViews.init(AB);\n\n         Property.on(\"save\", async (datacollection) => {\n            this.datacollectionLoad(datacollection);\n\n            // refresh grid view\n            if (this.hashViewsGrid) {\n               await this.hashViewsGrid.show(Datatable.defaultSettings());\n            }\n\n            await this.populateWorkspace(datacollection);\n         });\n\n         await Datatable.init(AB);\n         await Property.init(AB);\n\n         this.mockDatacollection = this.AB.datacollectionNew({});\n         this.mockDatacollection.init();\n\n         Datatable.datacollectionLoad(this.mockDatacollection);\n         Property.datacollectionLoad(this.mockDatacollection);\n\n         $$(ids.noSelection).show();\n      }\n\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         Datatable.applicationLoad(application);\n         Property.applicationLoad(application);\n      }\n\n      datacollectionLoad(datacollection) {\n         super.datacollectionLoad(datacollection);\n\n         Warnings.show(datacollection);\n\n         Datatable.datacollectionLoad(datacollection);\n         Property.datacollectionLoad(datacollection);\n\n         if (!datacollection) {\n            this.clearWorkspace();\n         }\n      }\n\n      /**\n       * @function loadAll\n       * Load all records\n       *\n       */\n      loadAll() {\n         Datatable.loadAll();\n      }\n\n      loadData() {\n         this.mockDatacollection.clearAll();\n         // WORKAROUND: load all data becuase kanban does not support pagination now\n         try {\n            this.mockDatacollection.loadData(0, 20);\n         } catch (err) {\n            let message = err.toString();\n            if (typeof err == \"string\") {\n               try {\n                  const jErr = JSON.parse(err);\n                  if (jErr.data && jErr.data.sqlMessage) {\n                     message = jErr.data.sqlMessage;\n                  }\n               } catch (e) {\n                  // Do nothing\n               }\n            }\n\n            this.AB.notify.developer(err, {\n               context: \"ui_work_datacollection_workspace.loadData()\",\n               message,\n               datacollection: this.mockDatacollection.toObj(),\n            });\n         }\n      }\n\n      clearWorkspace() {\n         const ids = this.ids;\n\n         $$(ids.noSelection).show(false, false);\n      }\n\n      async populateWorkspace(datacollection) {\n         const ids = this.ids;\n\n         $$(ids.workspace).show();\n\n         this.mockDatacollection = datacollection;\n\n         // get current view from object\n         this.workspaceViews.objectLoad(this.mockDatacollection.datasource);\n         const currentView = this.workspaceViews.getCurrentView();\n\n         // {WorkspaceView}\n         // The current workspace view that is being displayed in our work area\n         // currentView.component {ABViewGrid}\n         if (this.hashViewsGrid) {\n            this.workspaceViews.setCurrentView(currentView.id);\n\n            await this.hashViewsGrid.show(currentView);\n         }\n\n         // save current view\n         await this.workspaceViews.save();\n\n         this.loadData();\n\n         this.warningsRefresh(datacollection);\n      }\n   }\n\n   return new UI_Work_Datacollection_Workspace(ibase, init_settings);\n}\n","import UI_Class from \"./ui_class\";\nimport FPopupSortField from \"./ui_work_object_workspace_popupSortFields\";\n// import ... form \"ui_work_interface...\";\n\nexport default function (AB) {\n   const ibase = \"ui_work_datacollection_workspace_properties\";\n   const UIClass = UI_Class(AB);\n   const uiConfig = AB.Config.uiSettings();\n   const uiCustom = AB.custom;\n   const L = UIClass.L();\n\n   // const Interface = ...\n\n   class UI_Work_Datacollection_Workspace_Properties extends UIClass {\n      constructor() {\n         super(ibase, {\n            propertyPanel: \"\",\n\n            dataSource: \"\",\n            linkDatacollection: \"\",\n            linkField: \"\",\n            loadAll: \"\",\n            fixSelect: \"\",\n\n            filterPanel: \"\",\n            preventPopulate: \"\",\n            sortPanel: \"\",\n\n            buttonFilter: \"\",\n            buttonSort: \"\",\n\n            list: \"\",\n\n            filter: \"\",\n            sort: \"\",\n         });\n\n         this.AB = AB;\n         // {ABFactory}\n\n         /*\n          * _templateListItem\n          *\n          * The Object Row template definition.\n          */\n         this._templateListItem = `\n            <div class='ab-page-list-item'>\n               {common.icon()} <span class='webix_icon fa fa-#typeIcon#'></span> #label# #hasDataCollection#\n            </div>\n         `;\n\n         this._handler_loadData = (rowsData) => {\n            this.populateFixSelector(rowsData);\n         };\n\n         this.viewList = null;\n         this.FilterComponent = this.AB.filterComplexNew(this.ids.filter);\n         this.PopupSortFieldComponent = FPopupSortField(AB, ibase);\n      }\n\n      ui() {\n         const ids = this.ids;\n         const instance = this;\n\n         return {\n            width: uiConfig.columnWidthXLarge,\n            rows: [\n               {\n                  view: \"toolbar\",\n                  css: \"ab-data-toolbar webix_dark\",\n                  cols: [\n                     { view: \"spacer\", width: 10 },\n                     {\n                        view: \"label\",\n                        label: L(\"Properties\"),\n                     },\n                  ],\n               },\n               {\n                  view: \"scrollview\",\n                  id: ids.propertyPanel,\n                  body: {\n                     padding: 15,\n                     rows: [\n                        {\n                           view: \"fieldset\",\n                           label: L(\"Data Source:\"),\n                           labelWidth: uiConfig.labelWidthLarge,\n                           body: {\n                              type: \"clean\",\n                              padding: 10,\n                              rows: [\n                                 {\n                                    id: ids.dataSource,\n                                    view: \"richselect\",\n                                    name: \"dataSource\",\n                                    label: L(\"Source:\"),\n                                    labelWidth: uiConfig.labelWidthLarge,\n                                    options: {\n                                       data: [],\n                                    },\n                                    on: {\n                                       onChange: (newv, oldv) => {\n                                          if (newv == oldv) return;\n                                          this.selectSource(newv, oldv);\n                                          this.save();\n                                       },\n                                    },\n                                 },\n                                 // link to another data collection\n                                 {\n                                    id: ids.linkDatacollection,\n                                    view: \"select\",\n                                    name: \"linkDatacollection\",\n                                    label: L(\"Linked To:\"),\n                                    labelWidth: uiConfig.labelWidthLarge,\n                                    options: [],\n                                    hidden: 1,\n                                    on: {\n                                       onChange: (linkedDvId) => {\n                                          this.initLinkFieldOptions(linkedDvId);\n                                          this.save();\n                                       },\n                                    },\n                                 },\n                                 {\n                                    id: ids.linkField,\n                                    view: \"select\",\n                                    name: \"linkField\",\n                                    label: L(\"Linked Field:\"),\n                                    labelWidth: uiConfig.labelWidthLarge,\n                                    options: [],\n                                    hidden: 1,\n                                    on: {\n                                       onChange: () => {\n                                          this.save();\n                                       },\n                                    },\n                                 },\n                              ],\n                           },\n                        },\n                        {\n                           view: \"fieldset\",\n                           label: L(\"Advanced Options:\"),\n                           labelWidth: uiConfig.labelWidthLarge,\n                           body: {\n                              type: \"clean\",\n                              padding: 10,\n                              rows: [\n                                 {\n                                    id: ids.filterPanel,\n                                    name: \"filterPanel\",\n                                    cols: [\n                                       {\n                                          view: \"label\",\n                                          label: L(\"Filter Data:\"),\n                                          width: uiConfig.labelWidthLarge,\n                                       },\n                                       {\n                                          id: ids.buttonFilter,\n                                          css: \"webix_primary\",\n                                          view: \"button\",\n                                          name: \"buttonFilter\",\n                                          label: L(\"Settings\"),\n                                          icon: \"fa fa-gear\",\n                                          type: \"icon\",\n                                          badge: 0,\n                                          click: function () {\n                                             instance.showFilterPopup(\n                                                this.$view\n                                             );\n                                          },\n                                       },\n                                    ],\n                                 },\n                                 {\n                                    id: ids.sortPanel,\n                                    name: \"sortPanel\",\n                                    cols: [\n                                       {\n                                          view: \"label\",\n                                          label: L(\"Sort Data:\"),\n                                          width: uiConfig.labelWidthLarge,\n                                       },\n                                       {\n                                          id: ids.buttonSort,\n                                          css: \"webix_primary\",\n                                          view: \"button\",\n                                          name: \"buttonSort\",\n                                          label: L(\"Settings\"),\n                                          icon: \"fa fa-gear\",\n                                          type: \"icon\",\n                                          badge: 0,\n                                          click: function () {\n                                             instance.showSortPopup(this.$view);\n                                          },\n                                       },\n                                    ],\n                                 },\n                                 {\n                                    cols: [\n                                       {\n                                          view: \"label\",\n                                          label: L(\"Load all:\"),\n                                          width: uiConfig.labelWidthLarge,\n                                       },\n                                       {\n                                          id: ids.loadAll,\n                                          view: \"checkbox\",\n                                          name: \"loadAll\",\n                                          label: \"\",\n                                          on: {\n                                             onChange: () => {\n                                                this.save();\n                                             },\n                                          },\n                                       },\n                                    ],\n                                 },\n                                 {\n                                    id: ids.preventPopulate,\n                                    view: \"checkbox\",\n                                    name: \"preventPopulate\",\n                                    label: L(\"Do not populate related data:\"),\n                                    labelWidth: 210,\n                                    on: {\n                                       onChange: () => {\n                                          this.save();\n                                       },\n                                    },\n                                 },\n                                 {\n                                    id: ids.fixSelect,\n                                    view: \"select\",\n                                    name: \"fixSelect\",\n                                    label: L(\"Select:\"),\n                                    labelWidth: uiConfig.labelWidthLarge,\n                                    options: [],\n                                    on: {\n                                       onChange: () => {\n                                          this.save();\n                                       },\n                                    },\n                                 },\n                              ],\n                           },\n                        },\n                        {\n                           view: \"fieldset\",\n                           label: L(\"Data used in...\"),\n                           labelWidth: uiConfig.labelWidthLarge,\n                           body: {\n                              view: uiCustom.edittree.view, // \"edittree\",\n                              id: ids.list,\n                              select: true,\n                              editaction: \"custom\",\n                              editable: true,\n                              editor: \"text\",\n                              editValue: \"label\",\n                              borderless: true,\n                              padding: 0,\n                              css: \"ab-tree-ui\",\n                              minHeight: 300,\n                              template: (obj, common) => {\n                                 return this.templateListItem(obj, common);\n                              },\n                              type: {\n                                 iconGear:\n                                    \"<span class='webix_icon fa fa-cog'></span>\",\n                              },\n                              on: {\n                                 onAfterSelect: (id) => {\n                                    this.onAfterSelect(id);\n                                 },\n                              },\n                           },\n                        },\n                        {\n                           maxHeight: uiConfig.mediumSpacer,\n                           height: uiConfig.mediumSpacer,\n                           minHeight: uiConfig.mediumSpacer,\n                           hidden: uiConfig.hideMobile,\n                        },\n                     ],\n                  },\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         const ids = this.ids;\n\n         const $list = $$(ids.list);\n         const $propertyPanel = $$(ids.propertyPanel);\n\n         if ($list) {\n            webix.extend($list, webix.ProgressBar);\n            $list.adjust();\n         }\n\n         if ($propertyPanel) webix.extend($propertyPanel, webix.ProgressBar);\n\n         this.initPopupEditors();\n\n         this.FilterComponent.myPopup = webix.ui({\n            view: \"popup\",\n            height: 240,\n            width: 480,\n            hidden: true,\n            body: this.FilterComponent.ui,\n         });\n\n         this.FilterComponent.on(\"save\", () => {\n            this.onFilterChange();\n            this.save();\n         });\n\n         this.PopupSortFieldComponent.on(\"changed\", (sortSettings) => {\n            this.onSortChange(sortSettings);\n            this.save();\n         });\n\n         // Interface.on(\"interface\", (viewObj) => {\n         //    this.switchTab(viewObj)\n         // });\n      }\n\n      /**\n       * @function onAfterSelect()\n       *\n       * Perform these actions when a View is selected in the List.\n       */\n      onAfterSelect(id) {\n         const ids = this.ids;\n         const view = $$(ids.list).getItem(id);\n         const viewObj = this.CurrentApplication.views(\n            (v) => v.id == view.id\n         )[0];\n\n         setTimeout(() => {\n            this.emit(\"interface\", viewObj);\n         }, 50);\n      }\n\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         const ids = this.ids;\n\n         this.refreshDataSourceOptions();\n\n         this.listBusy();\n\n         // this so it looks right/indented in a tree view:\n         this.viewList = new webix.TreeCollection();\n\n         /**\n          * @method addPage\n          *\n          * @param {ABView} page\n          * @param {integer} index\n          * @param {uuid} parentId\n          */\n         const addPage = (page, index, parentId) => {\n            // add to tree collection\n            const branch = {\n               id: page.viewId || page.id,\n               label: page.label,\n               icon: page.icon ? page.icon : \"\",\n               viewIcon: page.viewIcon ? page.viewIcon() : \"\",\n               datacollection: {\n                  id: page.datacollection ? page.datacollection.id : \"\",\n               },\n            };\n            this.viewList.add(branch, index, parentId);\n\n            // // add sub-pages\n            // if (page instanceof ABViewDetail) {\n            //    return;\n            // }\n\n            const subPages = page.pages ? page.pages() : [];\n            subPages.forEach((childPage, childIndex) => {\n               addPage(childPage, childIndex, page.id);\n            });\n\n            // add non-tab components\n            subPages\n               // .views((v) => !(v instanceof ABViewTab))\n               .forEach((widgetView, widgetIndex) => {\n                  const wIndex = subPages.length + widgetIndex;\n                  addPage(widgetView, wIndex, page.id);\n               });\n\n            // add tabs\n            subPages\n               // .views((v) => v instanceof ABViewTab)\n               .forEach((tab, tabIndex) => {\n                  // tab views\n                  tab.views().forEach((tabView, tabViewIndex) => {\n                     // tab items will be below sub-page items\n                     const tIndex = subPages.length + tabIndex + tabViewIndex;\n\n                     addPage(tabView, tIndex, page.id);\n                  });\n               });\n         };\n         this.CurrentApplication.pages().forEach((p, index) => {\n            addPage(p, index);\n         });\n\n         // clear our list and display our objects:\n         const $list = $$(ids.list);\n\n         $list.clearAll();\n         $list.data.unsync();\n         $list.data.sync(this.viewList);\n         $list.refresh();\n         $list.parse(this.viewList);\n         $list.unselectAll();\n\n         this.listReady();\n      }\n\n      datacollectionLoad(datacollection) {\n         const ids = this.ids;\n         super.datacollectionLoad(datacollection);\n\n         let settings = {};\n\n         const $filterPanel = $$(ids.filterPanel);\n         const $sortPanel = $$(ids.sortPanel);\n         const $dataSource = $$(ids.dataSource);\n         const $linkDatacollection = $$(ids.linkDatacollection);\n         const $linkField = $$(ids.linkField);\n         const $loadAll = $$(ids.loadAll);\n         const $fixSelect = $$(ids.fixSelect);\n         const $preventPopulate = $$(ids.preventPopulate);\n         const $list = $$(ids.list);\n\n         if (this.CurrentDatacollection) {\n            settings = this.CurrentDatacollection.settings || {};\n\n            this.CurrentDatacollection.removeListener(\n               \"loadData\",\n               this._handler_loadData\n            );\n            this.CurrentDatacollection.on(\"loadData\", this._handler_loadData);\n         }\n\n         // populate link data collection options\n         this.initLinkDatacollectionOptions();\n\n         // populate link fields\n         this.initLinkFieldOptions(\n            this.CurrentDatacollection?.datacollectionLink?.id || null\n         );\n\n         // initial populate of popups\n         this.populatePopupEditors();\n\n         this.populateBadgeNumber();\n\n         // if selected soruce is a query, then hide advanced options UI\n         if (settings.isQuery) {\n            $filterPanel.hide();\n            $sortPanel.hide();\n         } else {\n            $filterPanel.show();\n            $sortPanel.show();\n         }\n\n         this.refreshDataSourceOptions();\n         $dataSource.define(\"value\", settings.datasourceID);\n         $linkDatacollection.define(\"value\", settings.linkDatacollectionID);\n         $linkField.define(\"value\", settings.linkFieldID);\n         $loadAll.define(\"value\", settings.loadAll);\n         $fixSelect.define(\"value\", settings.fixSelect);\n         $preventPopulate.define(\"value\", settings.preventPopulate);\n\n         $dataSource.refresh();\n         $linkDatacollection.refresh();\n         $linkField.refresh();\n         $loadAll.refresh();\n         $fixSelect.refresh();\n         $preventPopulate.refresh();\n         $list.openAll();\n      }\n\n      refreshDataSourceOptions() {\n         if (!this.CurrentApplication) return;\n\n         const ids = this.ids;\n\n         let datasources = [];\n\n         // Objects\n         const objects = this.CurrentApplication.objectsIncluded().map(\n            (obj) => {\n               if (obj)\n                  return {\n                     id: obj.id,\n                     value: obj.label,\n                     isQuery: false,\n                     icon: \"fa fa-database\",\n                  };\n               else return null;\n            }\n         );\n         datasources = datasources.concat(objects);\n\n         // Queries\n         const queries = this.CurrentApplication.queriesIncluded().map((qr) => {\n            if (qr)\n               return {\n                  id: qr.id,\n                  value: qr.label,\n                  isQuery: true,\n                  icon: \"fa fa-filter\",\n                  disabled: qr?.isDisabled(),\n               };\n            else return null;\n         });\n         datasources = datasources.concat(queries);\n\n         datasources = datasources.filter((e) => e !== null);\n\n         datasources.unshift({\n            id: \"\",\n            value: L(\"Select a source\"),\n         });\n\n         $$(ids.dataSource).define(\"options\", {\n            body: {\n               scheme: {\n                  $init: function (obj) {\n                     if (obj.disabled) obj.$css = \"disabled\";\n                  },\n               },\n               data: datasources,\n            },\n         });\n\n         $$(ids.dataSource).refresh();\n      }\n\n      busy() {\n         const ids = this.ids;\n\n         const $propertyPanel = $$(ids.propertyPanel);\n\n         if ($propertyPanel?.showProgress)\n            $propertyPanel.showProgress({ type: \"icon\" });\n      }\n\n      ready() {\n         const ids = this.ids;\n\n         const $propertyPanel = $$(ids.propertyPanel);\n\n         if ($propertyPanel?.hideProgress) $propertyPanel.hideProgress();\n      }\n\n      save() {\n         if (!this.CurrentDatacollection) return Promise.resolve(); // TODO: refactor in v2\n\n         this.busy();\n\n         const ids = this.ids;\n\n         this.CurrentDatacollection.settings =\n            this.CurrentDatacollection.settings || {};\n         this.CurrentDatacollection.settings.datasourceID = $$(\n            ids.dataSource\n         ).getValue();\n         this.CurrentDatacollection.settings.linkDatacollectionID = $$(\n            ids.linkDatacollection\n         ).getValue();\n         this.CurrentDatacollection.settings.linkFieldID = $$(\n            ids.linkField\n         ).getValue();\n         this.CurrentDatacollection.settings.objectWorkspace = {};\n         this.CurrentDatacollection.settings.objectWorkspace.filterConditions =\n            this.FilterComponent.getValue();\n         this.CurrentDatacollection.settings.objectWorkspace.sortFields =\n            this.PopupSortFieldComponent.getSettings();\n         this.CurrentDatacollection.settings.loadAll = $$(\n            ids.loadAll\n         ).getValue();\n         this.CurrentDatacollection.settings.preventPopulate = $$(\n            ids.preventPopulate\n         ).getValue();\n         this.CurrentDatacollection.settings.fixSelect = $$(\n            ids.fixSelect\n         ).getValue();\n\n         const selectedDS = $$(ids.dataSource)\n            .getPopup()\n            .getList()\n            .getItem(this.CurrentDatacollection.settings.datasourceID);\n         if (selectedDS)\n            this.CurrentDatacollection.settings.isQuery = selectedDS.isQuery;\n         else this.CurrentDatacollection.settings.isQuery = false;\n\n         return new Promise((resolve, reject) => {\n            this.CurrentDatacollection.save()\n               .then(() => {\n                  this.CurrentDatacollection.clearAll();\n                  this.ready();\n                  this.emit(\"save\", this.CurrentDatacollection);\n                  resolve();\n               })\n               .catch((err) => {\n                  this.ready();\n                  reject(err);\n               });\n         });\n      }\n\n      initLinkDatacollectionOptions() {\n         const ids = this.ids;\n\n         // get linked data collection list\n         const objSource = this.CurrentDatacollection?.datasource || null;\n\n         const $linkDatacollection = $$(ids.linkDatacollection);\n         const $linkField = $$(ids.linkField);\n\n         if (objSource) {\n            const linkFields = objSource.connectFields();\n            const linkObjectIds = linkFields.map((f) => f.settings.linkObject);\n\n            const linkDvOptions = [];\n\n            // pull data collections that are link to object\n            const linkDCs =\n               this.CurrentApplication.datacollectionsIncluded().filter((dc) =>\n                  linkObjectIds.includes(dc?.settings.datasourceID)\n               );\n\n            if (linkDCs?.length > 0) {\n               // set data collections to options\n               linkDCs.forEach((dc) => {\n                  linkDvOptions.push({\n                     id: dc.id,\n                     value: dc.label,\n                  });\n               });\n\n               linkDvOptions.unshift({\n                  id: \"\",\n                  value: L(\"Select a link source\"),\n               });\n\n               $linkDatacollection.show();\n               $linkDatacollection.define(\"options\", linkDvOptions);\n               $linkDatacollection.define(\n                  \"value\",\n                  this.CurrentDatacollection?.settings?.linkDatacollectionID ||\n                     \"\"\n               );\n               $linkDatacollection.refresh();\n            } else {\n               // hide options\n               $linkDatacollection.hide();\n               $linkField.hide();\n            }\n         } else {\n            // hide options\n            $linkDatacollection.hide();\n            $linkField.hide();\n         }\n      }\n\n      initLinkFieldOptions(linkedDvId = null) {\n         const ids = this.ids;\n         const linkFieldOptions = [];\n\n         // Specify id of linked data view\n         const linkDC = linkedDvId\n            ? this.AB.datacollectionByID(linkedDvId)\n            : null;\n\n         // get fields that link to our ABObject\n         if (linkDC) {\n            const object = this.CurrentDatacollection.datasource;\n            const linkObject = linkDC.datasource;\n            const relationFields = object\n               .connectFields()\n               .filter(\n                  (link) => link.settings.linkObject == (linkObject || {}).id\n               );\n\n            // pull fields to options\n            relationFields.forEach((f) => {\n               linkFieldOptions.push({\n                  id: f.id,\n                  value: f.label,\n               });\n            });\n         }\n\n         const $linkField = $$(ids.linkField);\n\n         if (linkFieldOptions.length > 0) $linkField.show();\n         else $linkField.hide();\n\n         let linkFieldId = linkFieldOptions[0] ? linkFieldOptions[0].id : \"\";\n\n         if (this.CurrentDatacollection?.settings) {\n            linkFieldId = this.CurrentDatacollection.settings.linkFieldID;\n         }\n\n         $linkField.define(\"options\", linkFieldOptions);\n         $linkField.define(\"value\", linkFieldId);\n         $linkField.refresh();\n      }\n\n      populatePopupEditors() {\n         const datacollection = this.CurrentDatacollection || null;\n         const datasource = datacollection?.datasource || null;\n\n         if (datasource) {\n            // array of filters to apply to the data table\n            const filterConditions = datacollection?.settings?.objectWorkspace\n               ?.filterConditions || { glue: \"and\", rules: [] };\n\n            const sortConditions =\n               datacollection?.settings?.objectWorkspace?.sortFields || [];\n\n            // Populate data to popups\n            this.FilterComponent.fieldsLoad(\n               datasource ? datasource.fields() : []\n            );\n            this.FilterComponent.queriesLoad(\n               this.CurrentApplication?.queriesIncluded()\n            );\n            this.FilterComponent.setValue(filterConditions);\n            this.CurrentDatacollection.refreshFilterConditions(\n               filterConditions\n            );\n\n            this.PopupSortFieldComponent.objectLoad(datasource);\n            this.PopupSortFieldComponent.setSettings(sortConditions);\n         }\n      }\n\n      populateBadgeNumber() {\n         const ids = this.ids;\n         const datacollection = this.CurrentDatacollection;\n\n         const $buttonFilter = $$(ids.buttonFilter);\n         const $buttonSort = $$(ids.buttonSort);\n\n         if (\n            datacollection?.settings?.objectWorkspace?.filterConditions?.rules\n         ) {\n            $buttonFilter.define(\n               \"badge\",\n               datacollection.settings.objectWorkspace.filterConditions.rules\n                  ?.length || null\n            );\n            $buttonFilter.refresh();\n         } else {\n            $buttonFilter.define(\"badge\", null);\n            $buttonFilter.refresh();\n         }\n\n         if (datacollection?.settings?.objectWorkspace?.sortFields) {\n            $buttonSort.define(\n               \"badge\",\n               datacollection.settings.objectWorkspace.sortFields.length || null\n            );\n            $buttonSort.refresh();\n         } else {\n            $buttonSort.define(\"badge\", null);\n            $buttonSort.refresh();\n         }\n      }\n\n      populateFixSelector(rowsData) {\n         const ids = this.ids;\n\n         let fixSelect = \"\";\n\n         const datasource = this.CurrentDatacollection.datasource;\n\n         const dataItems =\n            rowsData?.data?.map((item) => {\n               return {\n                  id: item.id,\n                  value: datasource ? datasource.displayData(item) : \"\",\n               };\n            }) || [];\n\n         // Add a current user option to allow select first row that match the current user\n         if (datasource) {\n            const userFields = datasource.fields((f) => f.key == \"user\");\n            if (userFields.length > 0)\n               dataItems.unshift({\n                  id: \"_CurrentUser\",\n                  value: L(\"Current User\"),\n               });\n\n            // Add a first record option to allow select first row\n            dataItems.unshift(\n               {\n                  id: \"_FirstRecord\",\n                  value: L(\"First Record\"),\n               },\n               {\n                  id: \"_FirstRecordDefault\",\n                  value: L(\"Default to First Record\"),\n               }\n            );\n         }\n\n         dataItems.unshift({\n            id: \"\",\n            value: L(\"Select fix cursor\"),\n         });\n\n         fixSelect = this.CurrentDatacollection.settings.fixSelect || \"\";\n\n         const $fixSelect = $$(ids.fixSelect);\n\n         $fixSelect.define(\"options\", dataItems);\n         $fixSelect.define(\"value\", fixSelect);\n         $fixSelect.refresh();\n      }\n\n      initPopupEditors() {\n         this.FilterComponent.init();\n         this.PopupSortFieldComponent.init(this.AB);\n      }\n\n      selectSource(datasourceID, oldId) {\n         const ids = this.ids;\n         const selectedDatasource = $$(ids.dataSource)\n            .getList()\n            .getItem(datasourceID);\n\n         const $dataSource = $$(ids.dataSource);\n\n         if (selectedDatasource?.disabled) {\n            // prevents re-calling onChange from itself\n            $dataSource.blockEvent();\n            $dataSource.setValue(oldId || \"\");\n            $dataSource.unblockEvent();\n         }\n\n         // Set settings.datasourceID\n         const dcSettings = this.CurrentDatacollection.toObj() || {};\n         dcSettings.settings = dcSettings.settings || {};\n         dcSettings.settings.datasourceID = datasourceID;\n         this.CurrentDatacollection.fromValues(dcSettings);\n\n         const $filterPanel = $$(ids.filterPanel);\n         const $sortPanel = $$(ids.sortPanel);\n\n         if (!selectedDatasource.isQuery) {\n            // populate link data collection options\n            this.initLinkDatacollectionOptions();\n\n            // populate link fields\n            this.initLinkFieldOptions(\n               this.CurrentDatacollection?.datacollectionLink?.id || null\n            );\n\n            // re-create filter & sort popups\n            this.initPopupEditors();\n\n            // populate filter & sort popups\n            this.populatePopupEditors();\n\n            this.populateBadgeNumber();\n\n            // show options\n            $filterPanel.show();\n            $sortPanel.show();\n         } else {\n            // hide options\n            $filterPanel.hide();\n            $sortPanel.hide();\n         }\n      }\n\n      showFilterPopup($button) {\n         this.FilterComponent.popUp($button, null, { pos: \"top\" });\n      }\n\n      showSortPopup($button) {\n         this.PopupSortFieldComponent.show($button, null, {\n            pos: \"top\",\n         });\n      }\n\n      onFilterChange() {\n         const datacollection = this.CurrentDatacollection;\n         if (!datacollection) return;\n\n         const filterValues = this.FilterComponent.getValue();\n         const isComplete =\n            this.FilterComponent.isConditionComplete(filterValues);\n\n         // only perform the update if a complete row is specified:\n         if (!isComplete)\n            this.FilterComponent.setValue({ glue: \"and\", rules: [] });\n\n         this.populateBadgeNumber();\n      }\n\n      onSortChange(sortSettings) {\n         const datacollection = this.CurrentDatacollection;\n         if (!datacollection) return;\n\n         datacollection.settings = datacollection.settings || {};\n         datacollection.settings.objectWorkspace =\n            datacollection.settings.objectWorkspace || {};\n         // store sort settings\n         datacollection.settings.objectWorkspace.sortFields =\n            sortSettings || [];\n\n         this.populateBadgeNumber();\n      }\n\n      switchTab(viewObj) {\n         // Interface.populateWorkspace(viewObj);\n      }\n\n      /**\n       * @function templateListItem\n       *\n       * Defines the template for each row of our ObjectList.\n       *\n       * @param {obj} obj the current instance of ABObject for the row.\n       * @param {?} common the webix.common icon data structure\n       * @return {string}\n       */\n      templateListItem(item, common) {\n         let template = this._templateListItem;\n\n         let hasDataCollection = \"\";\n         if (\n            item.datacollection &&\n            this.CurrentDatacollection?.id &&\n            item.datacollection.id == this.CurrentDatacollection.id\n         ) {\n            hasDataCollection =\n               \"<i class='webix_icon hasDataCollection fa fa-check-circle'></i>\";\n         }\n\n         template = template\n            .replace(\"#typeIcon#\", item.icon || item.viewIcon())\n            .replace(\"#label#\", item.label)\n            .replace(\"{common.icon()}\", common.icon(item))\n            .replace(\"#hasDataCollection#\", hasDataCollection);\n\n         return template;\n      }\n\n      listBusy() {\n         const ids = this.ids;\n\n         const $list = $$(ids.list);\n\n         if ($list?.showProgress) $list.showProgress({ type: \"icon\" });\n      }\n\n      listReady() {\n         const ids = this.ids;\n\n         const $list = $$(ids.list);\n\n         if ($list?.hideProgress) $list.hideProgress();\n      }\n   }\n\n   return new UI_Work_Datacollection_Workspace_Properties();\n}\n","/*\n * ui_work_interface\n *\n * Display the Interface Tab UI:\n *\n */\n\nimport UI_Class from \"./ui_class\";\nimport UI_Work_Interface_List from \"./ui_work_interface_list\";\nimport UI_Work_Interface_Workspace from \"./ui_work_interface_workspace\";\n\nexport default function (AB) {\n   var InterfaceList = UI_Work_Interface_List(AB);\n   var InterfaceWorkspace = UI_Work_Interface_Workspace(AB);\n\n   const UIClass = UI_Class(AB);\n\n   class UI_Work_Interface extends UIClass {\n      constructor() {\n         super(\"ab_work_interface\");\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            type: \"space\",\n            margin: 10,\n            cols: [\n               InterfaceList.ui(),\n               { view: \"resizer\" },\n               InterfaceWorkspace.ui(),\n            ],\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         // Our init() function for setting up our UI\n\n         InterfaceList.on(\"selected\", (page) => {\n            this.select(page);\n         });\n\n         InterfaceWorkspace.on(\"view.new\", () => {\n            InterfaceList.clickNewView();\n         });\n         InterfaceWorkspace.on(\"select.view\", (view) => {\n            InterfaceList.select(view);\n         });\n\n         this.warningsPropogate([InterfaceList, InterfaceWorkspace]);\n         this.on(\"warnings\", () => {\n            // make sure our list refreshes it's display\n            InterfaceList.applicationLoad(this.CurrentApplication);\n         });\n\n         return Promise.all([\n            InterfaceWorkspace.init(AB),\n            InterfaceList.init(AB),\n         ]);\n      }\n\n      /**\n       * @function applicationLoad\n       *\n       * Initialize the Interface Workspace with the given ABApplication.\n       *\n       * @param {ABApplication} application\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         //  InterfaceWorkspace.clearInterfaceWorkspace();\n         InterfaceList.applicationLoad(application);\n         InterfaceWorkspace.applicationLoad(application);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n\n         if (this.CurrentApplication) {\n            InterfaceList?.applicationLoad(this.CurrentApplication);\n         }\n         // InterfaceList?.ready();\n      }\n\n      select(page) {\n         if (!page) {\n            InterfaceWorkspace.clearWorkspace();\n         } else {\n            // InterfaceWorkspace.datacollectionLoad(page);\n            InterfaceWorkspace.viewLoad(page);\n         }\n      }\n   }\n\n   return new UI_Work_Interface();\n}\n","/*\n * ui_work_interface_list\n *\n * Manage the ABInterface List\n *\n */\n\nimport UI_Class from \"./ui_class\";\nimport UIListNewPage from \"./ui_work_interface_list_newPage\";\nimport UIListCopyPage from \"./ui_work_interface_list_copyPage\";\n\n//import UI_Work_Interface_List_NewPage from \"./ui_work_interface_list_newPage\";\nimport UI_Common_PopupEditMenu from \"./ui_common_popupEditMenu\";\n\nexport default function (AB) {\n   var PopupEditPageComponent = UI_Common_PopupEditMenu(AB);\n\n   var AddForm = new UIListNewPage(AB);\n   var CopyForm = new UIListCopyPage(AB);\n   // the popup form for adding a new page\n\n   const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n   class UI_Work_Interface_List extends UIClass {\n      constructor() {\n         var base = \"ui_work_interface_list\";\n         super(base, {\n            list: \"\",\n            buttonNew: \"\",\n         });\n\n         this.EditPopup = new PopupEditPageComponent(base);\n\n         this.viewList = new webix.TreeCollection();\n      }\n\n      // Our webix UI definition:\n      ui() {\n         var ids = this.ids;\n         // Our webix UI definition:\n         return {\n            id: ids.component,\n            rows: [\n               {\n                  view: \"unitlist\",\n                  uniteBy: L(\"Pages\"),\n                  height: 34,\n                  data: [\" \"],\n                  type: {\n                     height: 0,\n                     headerHeight: 35,\n                  },\n               },\n               {\n                  view: AB._App.custom.edittree.view, // \"edittree\",\n                  id: ids.list,\n                  width: uiConfig.columnWidthLarge,\n\n                  select: true,\n\n                  editaction: \"custom\",\n                  editable: true,\n                  editor: \"text\",\n                  editValue: \"label\",\n                  css: \"ab-tree-ui\",\n\n                  template: (obj, common) => {\n                     return this.templateListItem(obj, common);\n                  },\n                  type: {\n                     iconGear: \"<span class='webix_icon fa fa-cog'></span>\",\n                  },\n                  on: {\n                     onAfterRender: () => {\n                        this.onAfterRender();\n                     },\n                     onAfterSelect: (id) => {\n                        this.onAfterSelect(id);\n                     },\n                     onAfterOpen: () => {\n                        this.onAfterOpen();\n                     },\n                     onAfterClose: () => {\n                        this.onAfterClose();\n                     },\n                     onBeforeEditStop: (state, editor) => {\n                        this.onBeforeEditStop(state, editor);\n                     },\n                     onAfterEditStop: (state, editor, ignoreUpdate) => {\n                        this.onAfterEditStop(state, editor, ignoreUpdate);\n                     },\n                  },\n                  onClick: {\n                     \"ab-page-list-edit\": (e, id, trg) => {\n                        this.clickEditMenu(e, id, trg);\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  id: ids.buttonNew,\n                  type: \"form\",\n                  value: L(\"Add new Page\"), //labels.component.addNew,\n                  click: () => {\n                     this.emit(\"clickNewView\");\n                  },\n               },\n            ],\n         };\n         // Making custom UI settings above\n         // return this.ListComponent.ui();\n      }\n\n      // Our init() function for setting up our UI\n      async init(AB, options) {\n         this.AB = AB;\n\n         this.on(\"clickNewView\", (selectNew) => {\n            // if we receive a signal to add a new Interface from another source\n            // like the blank interface workspace offering an Add New button:\n            this.clickNewView(selectNew);\n         });\n\n         if ($$(this.ids.component)) $$(this.ids.component).adjust();\n\n         let $List = $$(this.ids.list);\n         this.ListComponent = $List;\n\n         if ($List) {\n            webix.extend($List, webix.ProgressBar);\n            $List.data.unsync();\n            $List.data.sync(this.viewList);\n            $List.adjust();\n         }\n\n         await this.EditPopup.init(AB, {\n            hideExclude: true,\n         });\n\n         this.EditPopup.menuOptions([\n            {\n               label: L(\"Rename\"),\n               icon: \"fa fa-pencil-square-o\",\n               command: \"rename\",\n            },\n            {\n               label: L(\"Copy\"),\n               icon: \"fa fa-files-o\",\n               command: \"copy\",\n            },\n            {\n               label: L(\"Delete\"),\n               icon: \"fa fa-trash\",\n               command: \"delete\",\n            },\n         ]);\n\n         this.EditPopup.on(\"click\", (command) =>{\n            switch (command) {\n               case \"delete\":\n                  this.remove();\n                  break;\n               case \"copy\":\n                  this.copy();\n                  break;\n               case \"rename\":\n                  this.rename();\n                  break;\n               default:\n            }\n         });\n\n         await AddForm.init(AB);\n\n         AddForm.on(\"cancel\", () => {\n            AddForm.hide();\n         });\n\n         AddForm.on(\"save\", (obj, select) => {\n            // the PopupEditPageComponent already takes care of updating the\n            // CurrentApplication.\n\n            // we just need to update our list of interfaces\n            this.applicationLoad(this.CurrentApplication);\n\n            // if (select) {\n            this.ListComponent.select(obj.id);\n            // }\n         });\n\n         CopyForm.on(\"save\", (obj) => {\n            // the PopupEditPageComponent already takes care of updating the\n            // CurrentApplication.\n\n            // we just need to update our list of interfaces\n            this.applicationLoad(this.CurrentApplication);\n            this.callbackNewPage(obj);\n\n            // Select the new page\n            this.ListComponent.select(obj.id);\n            this.listReady();\n         });\n\n         CopyForm.on(\"cancel\", () => {\n            CopyForm.hide();\n            this.listReady();\n         });\n      }\n\n      addNew() {\n         this.clickNewView(true);\n      }\n\n      /**\n       * @function applicationLoad\n       * Initialize the List from the provided ABApplication\n       * If no ABApplication is provided, then show an empty form. (create operation)\n       * @param {ABApplication} application\n       *        [optional] The current ABApplication we are working with.\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         this.listBusy();\n         // this so it looks right/indented in a tree view:\n         this.viewList.clearAll();\n\n         var addPage = (page, index, parentId) => {\n            if (!page) return;\n\n            this.viewList.add(page, index, parentId);\n\n            page.pages().forEach((childPage, childIndex) => {\n               addPage(childPage, childIndex, page.id);\n            });\n         };\n         application.pages().forEach((p, index) => {\n            addPage(p, index);\n         });\n\n         // clear our list and display our objects:\n         var List = $$(this.ids.list);\n         List.refresh();\n         List.unselectAll();\n\n         //\n         this.listReady();\n\n         // // prepare our Popup with the current Application\n         AddForm.applicationLoad(application);\n         CopyForm.applicationLoad(application);\n         // this.EditPopup.applicationLoad(application);\n      }\n\n      /**\n       * @function clickNewView\n       *\n       * Manages initiating the transition to the new Page Popup window\n       */\n      clickNewView() {\n         // show the new popup\n         AddForm.show();\n      }\n\n      showGear(id) {\n         var domNode = $$(this.ids.list).getItemNode(id);\n         if (domNode) {\n            var gearIcon = domNode.querySelector(\".ab-page-list-edit\");\n            gearIcon.style.visibility = \"visible\";\n            gearIcon.style.display = \"block\";\n         }\n      }\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n      }\n\n      refreshTemplateItem(view) {\n         // make sure this item is updated in our list:\n         view = view.updateIcon(view);\n         this.viewList.updateItem(view.id, view);\n      }\n      rename() {\n         var pageID = $$(this.ids.list).getSelectedId(false);\n         $$(this.ids.list).edit(pageID);\n      }\n      /*\n       * @function copy\n       * make a copy of the current selected item.\n       *\n       * copies should have all the same sub-page data,\n       * but will need unique names, and ids.\n       *\n       * we start the process by making a copy and then\n       * having the user enter a new label/name for it.\n       *\n       * our .afterEdit() routines will detect it is a copy\n       * then alert the parent UI component of the \"copied\" data\n       */\n      copy() {\n         var selectedPage = $$(this.ids.list).getSelectedItem(false);\n         // show loading cursor\n         this.listBusy();\n\n         CopyForm.init(AB, selectedPage);\n\n         // Data must be loaded AFTER init, as it populates the form immediatly\n         CopyForm.applicationLoad(this.CurrentApplication);\n\n         CopyForm.show();\n      }\n      remove() {\n         var selectedPage = $$(this.ids.list).getSelectedItem(false);\n         if (!selectedPage) return;\n\n         // verify they mean to do this:\n         webix.confirm({\n            title: L(\"Delete Page\"),\n            text: L(\"Are you sure you wish to delete this page?\"),\n            ok: L(\"Yes\"),\n            cancel: L(\"No\"),\n            callback: async (isOK) => {\n               if (isOK) {\n                  this.listBusy();\n\n                  try {\n                     await selectedPage.destroy();\n                     this.listReady();\n                     $$(this.ids.list).remove(\n                        $$(this.ids.list).getSelectedId()\n                     );\n                     // let the calling component know about\n                     // the deletion:\n                     this.emit(\"deleted\", selectedPage);\n\n                     // clear object workspace\n                     this.emit(\"selected\", null);\n                  } catch (e) {\n                     this.AB.notify.developer(e, {\n                        context:\n                           \"ui_interface_list:remove(): error removing item\",\n                        base: selectedPage,\n                     });\n                     this.listReady();\n                  }\n               }\n            },\n         });\n      }\n      clickEditMenu(e, id, trg) {\n         // Show menu\n         this.EditPopup.show(trg);\n\n         return false;\n      }\n      /**\n       * @function callbackNewObject\n       *\n       * Once a New Page was created in the Popup, follow up with it here.\n       */\n      callbackNewPage(page) {\n         var parentPage = page.pageParent() || page.parent;\n         var parentPageId = parentPage.id != page.id ? parentPage.id : null;\n         if (!this.viewList.exists(page.id))\n            this.viewList.add(page, null, parentPageId);\n\n         // add sub-pages to tree-view\n         page.pages().forEach((p, index) => {\n            if (!this.viewList.exists(p.id))\n               this.viewList.add(p, index, page.id);\n         });\n\n         $$(this.ids.list).refresh();\n\n         if (parentPageId) $$(this.ids.list).open(parentPageId);\n\n         this.select(page);\n\n         AddForm.hide();\n      }\n      listBusy() {\n         $$(this.ids.list)?.showProgress?.({ type: \"icon\" });\n      }\n\n      listReady() {\n         $$(this.ids.list)?.hideProgress?.();\n      }\n\n      select(page) {\n         $$(this.ids.list).select(page.id);\n      }\n\n      templateListItem(item, common, warnings) {\n         let warnIcon = \"\";\n         if (warnings?.length > 0) {\n            warnIcon =\n               '<span class=\"webix_sidebar_dir_icon webix_icon fa fa-warning pulseLight smalltext\"></span>';\n         }\n         var template = `<div class='ab-page-list-item'>\n            ${common.icon(item)} <span class='webix_icon fa fa-${\n            item.icon || item.viewIcon()\n         }'></span> ${item.label}${warnIcon}<div class='ab-page-list-edit'>${\n            common.iconGear\n         }</div>\n            </div>`;\n\n         // now register a callback to update this display when this view is updated:\n         item\n            .removeListener(\"properties.updated\", this.refreshTemplateItem)\n            .once(\"properties.updated\", this.refreshTemplateItem);\n\n         return template;\n      }\n      onAfterOpen() {\n         var id = $$(this.ids.list).getSelectedId(false);\n         if (id) {\n            this.showGear(id);\n         }\n      }\n\n      onAfterRender() {\n         var id = $$(this.ids.list).getSelectedId(false);\n         if (id) {\n            this.showGear(id);\n         }\n      }\n\n      /**\n       * @function onAfterSelect()\n       *\n       * Perform these actions when a View is selected in the List.\n       */\n      onAfterSelect(id) {\n         // var view = $$(this.ids.list).getItem(id);\n         // AB.actions.populateInterfaceWorkspace(view);\n\n         this.showGear(id);\n\n         let view = $$(this.ids.list).getItem(id);\n         this.emit(\"selected\", view);\n      }\n\n      onBeforeEditStop(state /*, editor */) {\n         var selectedItem = $$(this.ids.list).getSelectedItem(false);\n         selectedItem.label = state.value;\n\n         // if this item supports isValid()\n         if (selectedItem.isValid) {\n            var validator = selectedItem.isValid();\n            if (validator.fail()) {\n               selectedItem.label = state.old;\n\n               return false; // stop here.\n            }\n         }\n\n         return true;\n      }\n      onAfterEditStop(state, editor, ignoreUpdate) {\n         this.showGear(editor.id);\n\n         if (state.value != state.old) {\n            this.listBusy();\n\n            var selectedPage = $$(this.ids.list).getSelectedItem(false);\n            selectedPage.label = state.value;\n\n            // Call server to rename\n            selectedPage\n               .save()\n               .then(() => {\n                  this.listReady();\n\n                  // refresh the root page list\n                  AddForm.applicationLoad(this.CurrentApplication);\n\n                  // TODO : should use message box\n                  webix.alert({\n                     text: L(\"<b>{0}</b> is renamed.\", [state.value]),\n                  });\n               })\n               .catch((err) => {\n                  this.listReady();\n                  this.AB.notify.developer(err, {\n                     context: \"ABFieldProperty: isValid()\",\n                     base: state.value,\n                  });\n                  webix.alert({\n                     text: L(\"System could not rename <b>{0}</b>.\", [\n                        state.value,\n                     ]),\n                  });\n               });\n         }\n      }\n      onAfterClose() {\n         var selectedIds = $$(this.ids.list).getSelectedId(true);\n\n         // Show gear icon\n         selectedIds.forEach((id) => {\n            this.showGear(id);\n         });\n      }\n   }\n   return new UI_Work_Interface_List();\n}\n","/*\n * UI_Work_Interface_List_CopyPage\n *\n * Display the form for copying a Page.  This Popup will allow user to rename and set parent.\n *\n * The sub components will gather the data for the object and do basic form\n * validations on their interface.\n *\n * when ready, this component will manage the actual final object validation,\n * and save to this.application.\n *\n * On success, \"save\" will be emitted, with obj passed so it can be selected in parent view\n *\n *\n */\n\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Interface_List_NewPage extends UIClass {\n      constructor() {\n         var base = \"ab_work_interface_list_copyInterface\";\n         super(base, {\n            form: \"\",\n            buttonSave: \"\",\n            buttonCancel: \"\",\n         });\n         this.ids.parentList = {};\n      }\n\n      ui(oldName) {\n         // Our webix UI definition:\n         return {\n            view: \"window\",\n            id: this.ids.component,\n            width: 400,\n            position: \"center\",\n            modal: true,\n            head: L(\"Copy interface\"),\n            selectNewInterface: true,\n            body: {\n               view: \"form\",\n               id: this.ids.form,\n               rules: {\n                  // TODO:\n                  // name: inputValidator.rules.validatePageName\n               },\n               elements: [\n                  {\n                     view: \"select\",\n                     id: this.ids.parentList,\n                     label: L(\"Parent Page\"),\n                     name: \"parent\",\n                     options: [],\n                     placeholder: L(\"Root Page\"),\n                     labelWidth: 110,\n                  },\n                  {\n                     view: \"text\",\n                     label: L(\"Name\"),\n                     name: \"name\",\n                     required: true,\n                     placeholder: `${L(\"{0} - copy\", [oldName])}`,\n                     labelWidth: 110,\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(\n                              this,\n                              \"ui_work_interface_list_newPage_blank_name\"\n                           );\n                        },\n                     },\n                  },\n                  {\n                     margin: 5,\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonCancel,\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.cancel();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 AB.ClassUI.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonSave,\n                           css: \"webix_primary\",\n                           value: L(\"Paste Page\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              return this.save();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 AB.ClassUI.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            }\n         };\n      }\n\n      async init(AB, data) {\n         this.AB = AB;\n         this.data = data;\n         console.log(data);\n\n         webix.ui(this.ui(data.name));\n         webix.extend($$(this.ids.component), webix.ProgressBar);\n\n         this.$form = $$(this.ids.form);\n\n         this.$component = $$(this.ids.component);\n\n         // if there was an error saving the values from our form.\n         this.on(\"save.error\", (err) => {\n            this.onError(err);\n         });\n\n         // if the values we provided were successfully saved.\n         this.on(\"save.successful\", () => {\n            this.onSuccess();\n         });\n      }\n\n      /**\n       * @method applicationLoad()\n       * prepare ourself with the current application\n       * @param {ABApplication} application\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application)\n         var options = [{ id: \"-\", value: L(\"Root page\") }];\n\n         var addPage = function (page, indent) {\n            indent = indent || \"\";\n            options.push({\n               id: page.id,\n               value: indent + page.label,\n            });\n            page\n               // .pages((p) => p instanceof AB.Class.ABViewPage)\n               .pages()\n               .forEach(function (p) {\n                  addPage(p, indent + \"-\");\n               });\n         };\n         // this.CurrentApplication.pages((p) => p instanceof AB.Class.ABViewPage).forEach(\n         application.pages().forEach(function (page) {\n            addPage(page, \"\");\n         });\n\n         $$(this.ids?.parentList)?.define(\"options\", options);\n         $$(this.ids?.parentList)?.refresh();\n      }\n\n      /**\n       * @function hide()\n       *\n       * remove the busy indicator from the form.\n       */\n      hide() {\n         this?.$component?.hide();\n      }\n\n      /**\n       * @function cancel()\n       *\n       * remove the form.\n       */\n      cancel() {\n         this.formClear();\n         this.emit(\"cancel\");\n      }\n\n      /**\n       * Show the busy indicator\n       */\n      busy() {\n         this?.$component?.showProgress();\n      }\n\n      /**\n       * Hide the busy indicator\n       */\n      ready() {\n         this?.$component?.hideProgress();\n      }\n\n      /**\n       * @method done()\n       * Finished saving, so hide the popup and clean up.\n       * @param {interface} obj\n       */\n      done(obj) {\n         this.ready();\n         this.hide(); // hide our popup\n         this.emit(\"save\", obj); // tell parent component we're done\n      }\n\n      /**\n       * @method save\n       * verify the current info is ok, package it, and return it to be\n       * added to the application.createModel() method.\n       * then take the data gathered, and\n       * add it to our current application.\n       * @param {obj} values  key=>value hash of model values.\n       * @return {Promise}\n       */\n      async save() {\n         var saveButton = $$(this.ids.buttonSave);\n         saveButton.disable();\n         // show progress\n         this.busy();\n\n         var Form = this.$form;\n\n         Form.clearValidation();\n\n         // if it doesn't pass the basic form validation, return:\n         if (!Form.validate()) {\n            saveButton.enable();\n            this.ready();\n            return false;\n         }\n\n         var values = Form.getValues();\n\n         // must have an application set.\n         if (!this.CurrentApplication) {\n            webix.alert({\n               title: L(\"Shoot!\"),\n               test: L(\"No Application Set!  Why?\"),\n            });\n            this.emit(\"save.error\", true);\n            return false;\n         }\n\n         if (!values) {\n            // SaveButton.enable();\n            // CurrentEditor.formReady();\n            return;\n         }\n\n         if (values.parent === \"-\") {\n            values.parent = null;\n         } else if (values.parent) {\n            // convert a url string to the object of the parent\n            values.parent = this.CurrentApplication.urlResolve(values.parent);\n         }\n\n         var newPage = this.data;\n\n         let copiedPage = await newPage.copy(null, values.parent, { newName: values.name })\n            .catch((err) => {\n               this.ready();\n               this.AB.notify.developer(err, {\n                  context: \"ui_interface_list_copyPage:save(): Error saving copied page\",\n                  base: newPage,\n               });\n            });\n\n         this.emit(\"save.successful\", copiedPage);\n         this.done(copiedPage);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         this?.$component?.show();\n      }\n\n      formClear() {\n         this?.$form.clearValidation();\n         this?.$form.clear();\n      }\n\n      /**\n       * @method onError()\n       * Our Error handler when the data we provided our parent\n       * ui_work_interface_list_newPage object had an error saving\n       * the values.\n       * @param {Error|ABValidation|other} err\n       *        The error information returned. This can be several\n       *        different types of objects:\n       *        - A javascript Error() object\n       *        - An ABValidation object returned from our .isValid()\n       *          method\n       *        - An error response from our API call.\n       */\n      onError(err) {\n         if (err) {\n            var message = L(\"the entered data is invalid\");\n            // if this was our Validation() object:\n            if (err.updateForm) {\n               err.updateForm(this.$form);\n            } else {\n               if (err.code && err.data) {\n                  message = err.data?.sqlMessage ?? message;\n               } else {\n                  message = err?.message ?? message;\n               }\n            }\n\n            var values = this.$form.getValues();\n\n            this.AB.notify.developer(err, {\n               context: \"ui_interace_list: error\",\n               base: values,\n            });\n\n            webix.alert({\n               title: L(\"Error creating Page: {0}\", [values.name]),\n               ok: L(\"fix it\"),\n               text: message,\n               type: \"alert-error\",\n            });\n         }\n         // get notified if there was an error saving.\n         $$(this.ids.buttonSave).enable();\n      }\n\n      /**\n       * @method onSuccess()\n       * Our success handler when the data we provided our parent\n       * ui_work_interface_list_newPage successfully saved the values.\n       */\n      onSuccess() {\n         this.formClear();\n         $$(this.ids.buttonSave).enable();\n      }\n   }\n\n   return new UI_Work_Interface_List_NewPage();\n}\n","/*\n * UI_Work_Interface_List_NewPage\n *\n * Display the form for creating a new Page.  This Popup will manage several\n * different sub components for gathering Page data for saving.\n *\n * The sub components will gather the data for the page and do basic form\n * validations on their interface.\n *\n * when ready, the sub component will emit \"save\" with the values gathered by\n * the form.  This component will manage the actual final page validation,\n * and saving to this application.\n *\n * On success, \"save.success\" will be emitted on the sub-component, and this\n * component.\n *\n * On Error, \"save.error\" will be emitted on the sub-component.\n *\n */\n\nimport UIBlankPage from \"./ui_work_interface_list_newPage_blank\";\nimport UI_Class from \"./ui_class\";\n//import UIQuickPage from \"./ui_work_interface_list_newPage_quick\"\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Interface_List_NewPage extends UIClass {\n\n      constructor() {\n         var base = \"ab_work_interface_list_newInterface\";\n         super(base, {\n            tab: \"\",\n         });\n\n         this.selectNew = true;\n         // {bool} do we select a new interface after it is created.\n\n         // var callback = null;\n\n         this.BlankTab = new UIBlankPage(AB);\n         //this.QuickTab = new UIQuickPage(AB);\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            view: \"window\",\n            id: this.ids.component,\n            // width: 400,\n            position: \"center\",\n            modal: true,\n            head: L(\"Add new interface\"),\n            selectNewInterface: true,\n            body: {\n               view: \"tabview\",\n               id: this.ids.tab,\n               cells: [\n                  this.BlankTab.ui(),\n                  //this.QuickTab.ui(),\n               ],\n               tabbar: {\n                  on: {\n                     onAfterTabClick: (id) => {\n                        this.switchTab(id);\n                     },\n                     onAfterRender() {\n                        this.$view\n                           .querySelectorAll(\".webix_item_tab\")\n                           .forEach((t) => {\n                              var tid = t.getAttribute(\"button_id\");\n                              AB.ClassUI.CYPRESS_REF(t, `${tid}_tab`);\n                           });\n                     },\n                  },\n               },\n            },\n            on: {\n               onBeforeShow: () => {\n                  var id = $$(this.ids.tab).getValue();\n                  this.switchTab(id);\n               },\n            },\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n         webix.extend($$(this.ids.component), webix.ProgressBar);\n\n         this.$component = $$(this.ids.component);\n         this.$form = $$(this.ids.form);\n\n         var allInits = [];\n         [\"BlankTab\" /*, \"QuickTab\" */].forEach((k) => {\n            allInits.push(this[k].init(AB));\n            this[k].on(\"cancel\", () => {\n               this.emit(\"cancel\");\n            });\n            this[k].on(\"save\", (values) => {\n               this.save(values, k);\n            });\n         });\n\n         await Promise.all(allInits);\n      }\n\n      /**\n       * @method applicationLoad()\n       * prepare ourself with the current application\n       * @param {ABApplication} application\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application); // remember our current Application.\n         this.BlankTab.applicationLoad(application); // send so parent pagelist can be made\n         //  this.QuickTab.applicationLoad(application);\n      }\n\n      /**\n       * @function hide()\n       *\n       * remove the busy indicator from the form.\n       */\n      hide() {\n         this?.$component?.hide();\n      }\n\n      /**\n       * Show the busy indicator\n       */\n      busy() {\n         this?.$component?.showProgress();\n      }\n\n      /**\n       * Hide the busy indicator\n       */\n      ready() {\n         this?.$component?.hideProgress();\n      }\n\n      /**\n       * @method done()\n       * Finished saving, so hide the popup and clean up.\n       * @param {interface} obj\n       */\n      done(obj) {\n         this.ready();\n         this.hide(); // hide our popup\n         this.emit(\"save\", obj, this.selectNew); // tell parent component we're done\n      }\n\n      /**\n       * @method save\n       * take the data gathered by our child creation tabs, and\n       * add it to our current application.\n       * @param {obj} values  key=>value hash of model values.\n       * @param {string}  tabKey\n       *        the \"key\" of the tab initiating the save.\n       * @return {Promise}\n       */\n      async save(values, tabKey) {\n         // must have an application set.\n         if (!this.CurrentApplication) {\n            webix.alert({\n               title: L(\"Shoot!\"),\n               test: L(\"No Application Set!  Why?\"),\n            });\n            this[tabKey].emit(\"save.error\", true);\n            return false;\n         }\n\n         if (!values) {\n            // SaveButton.enable();\n            // CurrentEditor.formReady();\n            return;\n         }\n\n         // create a new (unsaved) instance of our interface:\n         // this interface only creates Root Pages, or pages related to\n         var newInterface = null;\n         if (values.useParent && values.parent) {\n            // ?????????????????\n            newInterface = values.parent;\n         } else if (values.parent) {\n            newInterface = values.parent.pageNew(values);\n         } else {\n            //page = CurrentApplication.pageNew(values);\n            newInterface = this.CurrentApplication.pageNew(values);\n         }\n         //\n\n         // have newInterface validate it's values.\n         // if this item supports isValid()\n         if (newInterface.isValid) {\n            var validator = newInterface.isValid();\n            if (validator.fail()) {\n               // cb(validator); // tell current Tab component the errors\n               this[tabKey].emit(\"save.error\", validator);\n               return false; // stop here.\n            }\n         }\n\n         if (!newInterface.createdInAppID) {\n            newInterface.createdInAppID = this.CurrentApplication.id;\n         }\n\n         // show progress\n         this.busy();\n\n         // if we get here, save the new Page\n         try {\n            var obj = await newInterface.save();\n            // await this.CurrentApplication.pageInsert(obj);\n            this[tabKey].emit(\"save.successful\", obj);\n            this.done(obj);\n         } catch (err) {\n            // hide progress\n            this.ready();\n\n            // an error happend during the server side creation.\n            // so remove this page from the current interface list of\n            // the CurrentApplication.\n            await this.CurrentApplication.pageRemove(newInterface);\n\n            // tell current Tab component there was an error\n            this[tabKey].emit(\"save.error\", err);\n         }\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         this.$component?.show();\n      }\n\n      //  ui is now a method. \n      // TODO refactor this to pick a better value to send in for tabId\n      switchTab(tabId) {\n         // if (tabId == this.BlankTab?.ui?.body?.id) {\n         //    this.BlankTab?.onShow?.(this.CurrentApplication);\n         // } else if (tabId == this.QuickTab?.ui?.body?.id) {\n         //    this.QuickTab?.onShow?.(this.CurrentApplication);\n         // }\n      }\n   }\n\n   return new UI_Work_Interface_List_NewPage();\n}\n","/*\n * ui_work_interface_list_newPage_blank\n *\n * Display the form for creating a new ABPage.\n */\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Interface_List_NewPage_Blank extends UIClass {\n      constructor() {\n         var base = \"ui_work_interface_list_newPage_blank\";\n         super(base, {\n            form: \"\",\n            buttonSave: \"\",\n            buttonCancel: \"\",\n            parentList: \"\",\n         });\n         // this.ids.parentList = {};\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            header: L(\"Blank\"),\n            body: {\n               view: \"form\",\n               id: this.ids.form,\n               width: 400,\n               rules: {\n                  // TODO:\n                  // name: inputValidator.rules.validatePageName\n               },\n               elements: [\n                  {\n                     view: \"select\",\n                     id: this.ids.parentList,\n                     // label: labels.component.parentPage,\n                     label: L(\"Parent Page\"),\n                     name: \"parent\",\n                     options: [],\n                     //\n                     placeholder: L(\"Root Page\"),\n                     labelWidth: 110,\n                     // on: {\n                     //   onAfterRender() {\n                     //       AB.ClassUI.CYPRESS_REF(\n                     //         this,\n                     //         \"ui_work_interface_list_newPage_blank_name\"\n                     //       );\n                     //   },\n                     // },\n                  },\n                  {\n                     view: \"text\",\n                     label: L(\"Name\"),\n                     name: \"name\",\n                     required: true,\n                     placeholder: L(\"Page name\"),\n                     labelWidth: 110,\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(\n                              this,\n                              \"ui_work_interface_list_newPage_blank_name\"\n                           );\n                        },\n                     },\n                  },\n                  {\n                     margin: 5,\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonCancel,\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.cancel();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 AB.ClassUI.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonSave,\n                           css: \"webix_primary\",\n                           value: L(\"Add Page\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              return this.save();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 AB.ClassUI.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         this.$form = $$(this.ids.form);\n\n         // \"save.error\" is triggered by the ui_work_interface_list_newPage\n         // if there was an error saving the values from our form.\n         this.on(\"save.error\", (err) => {\n            this.AB.notify.developer(err, {\n               context: \"ui_work_interface_list_newPage:init(): there was an error saving the values from our form.\"\n            });\n         });\n\n         // \"save.successful\" is triggered by the ui_work_interface_list_newPage\n         // if the values we provided were successfully saved.\n         this.on(\"save.successful\", () => {\n            this.onSuccess();\n         });\n\n         // init() routines are always considered async so:\n         return Promise.resolve();\n      }\n\n      /**\n       * @function applicationLoad()\n       *\n       * Prepare our New Popups with the current Application\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         var options = [{ id: \"-\", value: L(\"Root page\") }];\n\n         var addPage = function (page, indent) {\n            indent = indent || \"\";\n            options.push({\n               id: page.urlPointer(),\n               value: indent + page.label,\n            });\n            page\n               .pages()\n               .forEach(function (p) {\n                  addPage(p, indent + \"-\");\n               });\n         };\n         // this.CurrentApplication.pages((p) => p instanceof AB.Class.ABViewPage).forEach(\n         application.pages().forEach(function (page) {\n            addPage(page, \"\");\n         });\n\n         if ($$(this.ids?.parentList)?.define) {\n            // $$(this.ids.parentList).define(\"options\", options);\n            $$(this.ids.parentList).define(\"options\", options);\n            $$(this.ids.parentList).refresh();\n         }\n      }\n\n      cancel() {\n         this.formClear();\n         this.emit(\"cancel\");\n      }\n\n      formClear() {\n         this.$form.clearValidation();\n         this.$form.clear();\n      }\n\n      /**\n       * @method onError()\n       * Our Error handler when the data we provided our parent\n       * ui_work_interface_list_newPage object had an error saving\n       * the values.\n       * @param {Error|ABValidation|other} err\n       *        The error information returned. This can be several\n       *        different types of objects:\n       *        - A javascript Error() object\n       *        - An ABValidation object returned from our .isValid()\n       *          method\n       *        - An error response from our API call.\n       */\n      onError(err) {\n         if (err) {\n            console.error(err);\n            var message = L(\"the entered data is invalid\");\n            // if this was our Validation() object:\n            if (err.updateForm) {\n               err.updateForm(this.$form);\n            } else {\n               if (err.code && err.data) {\n                  message = err.data?.sqlMessage ?? message;\n               } else {\n                  message = err?.message ?? message;\n               }\n            }\n\n            var values = this.$form.getValues();\n            this.AB.notify.developer(err, {\n               context: \"ui_work_interface_list_newPage: the entered data is invalid\",\n               base: values,\n            });\n            webix.alert({\n               title: L(\"Error creating Page: {0}\", [values.name]),\n               ok: L(\"fix it\"),\n               text: message,\n               type: \"alert-error\",\n            });\n         }\n         // get notified if there was an error saving.\n         $$(this.ids.buttonSave).enable();\n      }\n\n      /**\n       * @method onSuccess()\n       * Our success handler when the data we provided our parent\n       * ui_work_interface_list_newPage successfully saved the values.\n       */\n      onSuccess() {\n         this.formClear();\n         $$(this.ids.buttonSave).enable();\n      }\n\n      /**\n       * @function save\n       *\n       * verify the current info is ok, package it, and return it to be\n       * added to the application.createModel() method.\n       */\n      save() {\n         var saveButton = $$(this.ids.buttonSave);\n         saveButton.disable();\n\n         var Form = this.$form;\n\n         Form.clearValidation();\n\n         // if it doesn't pass the basic form validation, return:\n         if (!Form.validate()) {\n            saveButton.enable();\n            return false;\n         }\n\n         var values = Form.getValues();\n\n         if (values.parent === \"-\") {\n            values.parent = null;\n         } else if (values.parent) {\n            values.parent = this.CurrentApplication.urlResolve(values.parent);\n         }\n\n         // set uuid to be primary column\n         values.primaryColumnName = \"uuid\";\n\n         this.emit(\"save\", values);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         if ($$(this.ids.component)) $$(this.ids.component).show();\n      }\n   }\n   return new UI_Work_Interface_List_NewPage_Blank();\n}\n","/*\n * ui_work_interface_workspace\n *\n * Display the form for creating a new UI Page for the application.\n *\n */\n\nimport UI_Class from \"./ui_class\";\n// import UI_Warnings from \"./ui_warnings\";\n\nimport ABWorkspaceEditor from \"./ui_work_interface_workspace_editor\";\nimport ABWorkspaceDetails from \"./ui_work_interface_workspace_details\";\n\nexport default function (AB) {\n   const ibase = \"ui_work_interface_workspace\";\n   const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   class UI_Work_Interface_Workspace extends UIClass {\n      constructor() {\n         super(ibase, {\n            noSelection: \"\",\n            selectedView: \"\",\n         });\n\n         this.ColumnEditor = ABWorkspaceEditor(AB);\n         this.ColumnDetails = ABWorkspaceDetails(AB);\n\n         this.classABViewPage = AB.Class.ABViewManager.viewClass(\"page\");\n      }\n\n      // webix UI definition:\n      ui() {\n         let ids = this.ids;\n\n         return {\n            view: \"multiview\",\n            id: ids.component,\n            scroll: true,\n            rows: [\n               {\n                  id: ids.noSelection,\n                  rows: [\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: 200,\n                        label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-file-text-o'></div>\",\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: L(\"Select a page to edit\"),\n                     },\n                     {\n                        cols: [\n                           {},\n                           {\n                              view: \"button\",\n                              css: \"webix_primary\",\n                              label: L(\"Add a new page\"),\n                              type: \"form\",\n                              autowidth: true,\n                              click: () => {\n                                 this.emit(\"view.new\");\n                              },\n                           },\n                           {},\n                        ],\n                     },\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                  ],\n               },\n               {\n                  id: ids.selectedView,\n                  cols: [\n                     this.ColumnEditor.ui(),\n                     { view: \"resizer\", css: \"bg_gray\", width: 11 },\n                     this.ColumnDetails.ui(),\n                  ],\n               },\n            ],\n         };\n      }\n\n      // setting up UI\n      init(AB) {\n         this.AB = AB;\n\n         // webix.extend($$(ids.form), webix.ProgressBar);\n         $$(this.ids.noSelection).show();\n         $$(this.ids.selectedView).hide();\n\n         var allInits = [];\n         allInits.push(this.ColumnEditor.init(AB));\n         allInits.push(this.ColumnDetails.init(AB));\n\n         this.ColumnEditor.on(\"view.load\", (view) => {\n            this.viewLoad(view);\n         });\n\n         this.ColumnDetails.on(\"view.changed\", () => {\n            // a property of a view has changed, so reload\n            // the current display of the View.\n            this.ColumnEditor.viewLoad(this.CurrentView);\n         });\n\n         return Promise.all(allInits);\n      }\n\n      /**\n       * @function applicationLoad\n       *\n       * Initialize the Interface Workspace with the given ABApplication.\n       *\n       * @param {ABApplication} application\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         //  InterfaceWorkspace.clearInterfaceWorkspace();\n         this.ColumnEditor.applicationLoad(application);\n         this.ColumnDetails.applicationLoad(application);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component)?.show();\n      }\n\n      /**\n       * @function clearWorkspace()\n       *\n       * Clear the interface workspace.\n       */\n      clearWorkspace() {\n         // NOTE: to clear a visual glitch when multiple views are updating\n         // at one time ... stop the animation on this one:\n         $$(this.ids.noSelection)?.show(false, false);\n      }\n\n      /**\n       * @function viewLoad()\n       * Initialize the Interface Workspace with the provided ABView.\n       * @param {ABView} view\n       *        current ABView instance we are working with.\n       */\n      viewLoad(view) {\n         super.viewLoad(view);\n\n         // $$(ids.noSelection).hide();\n         $$(this.ids.selectedView)?.show();\n\n         this.ColumnEditor.viewLoad(view);\n         this.ColumnDetails.viewLoad(view);\n\n         $$(this.ids.component)?.resize();\n\n         // select a page in interface list\n         if (view instanceof this.classABViewPage) {\n            this.emit(\"select.view\", view);\n         }\n      }\n   }\n\n   return new UI_Work_Interface_Workspace();\n}\n","/*\n * ui_work_interface_workspace_details\n *\n * Manages the Editor details column: Components & Properties\n *\n */\n\nimport UI_Class from \"./ui_class\";\n// import UI_Warnings from \"./ui_warnings\";\n\nimport ABWorkspaceProperties from \"./ui_work_interface_workspace_details_properties\";\n\nexport default function (AB) {\n   const ibase = \"ui_work_interface_workspace_details\";\n   // const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   // const L = UIClass.L();\n\n   var PropertiesList = ABWorkspaceProperties(AB);\n\n   class UI_Work_Interface_Workspace_Details extends UIClass {\n      constructor() {\n         super(ibase);\n      }\n\n      // webix UI definition:\n      ui() {\n         return {\n            id: this.ids.component,\n            width: 350,\n            // scroll: true,\n            rows: [PropertiesList.ui()],\n         };\n      }\n\n      // setting up UI\n      init(AB) {\n         this.AB = AB;\n\n         PropertiesList.on(\"view.changed\", () => {\n            this.emit(\"view.changed\");\n         });\n         return PropertiesList.init(AB);\n      }\n\n      /**\n       * @function applicationLoad\n       * Initialize this Workspace with the given ABApplication.\n       * @param {ABApplication} application\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         PropertiesList.applicationLoad(application);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n      }\n\n      /*\n       * @method viewLoad\n       * A new View has been selected for editing, so update\n       * our interface with the details for this View.\n       * @param {ABView} view  current view instance.\n       */\n      viewLoad(view) {\n         super.viewLoad(view);\n         PropertiesList.viewLoad(view);\n      }\n   }\n\n   return new UI_Work_Interface_Workspace_Details();\n}\n","/*\n * ui_work_interface_workspace_details_properties\n *\n * Display the properties available for the current view.\n *\n */\n\n// const ABViewManager = require(\"../classes/platform/ABViewManager\");\n\nimport UI_Class from \"./ui_class\";\n// import UI_Warnings from \"./ui_warnings\";\n\nimport FPropertyManager from \"./properties/PropertyManager\";\n\nexport default function (AB) {\n   const ibase = \"ui_work_interface_workspace_details_properties\";\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   const PropertyManager = FPropertyManager(AB);\n\n   class UI_Work_Interface_Workspace_Details_Properties extends UIClass {\n      constructor() {\n         super(ibase, {\n            editors: \"\",\n            form: \"\",\n         });\n\n         this._editorsByType = {\n            /* View.key : ViewPropertyClass */\n         };\n         this.currentPanel = null;\n\n         /**\n          * @function _handler_onChange()\n          * Triggered when a change in the Property Editor\n          * is alerted, or when a new view is loaded and we\n          * want to save the current one.\n          */\n         this._handler_onChange = (waitDuration = 3000, skipEmit = false) => {\n            let values = this.currentPanel.values();\n\n            // to update the label, add it before we ask for .toObj():\n            // this.CurrentView.label = values.label;\n\n            // to update the label (and other properties like .menuTextLeft, menuTextCenter, and .menuTextRight of the Menu widget), add it before we ask for .toObj():\n            Object.keys(values ?? {}).forEach((k) => {\n               if (k == \"settings\") return;\n               this.CurrentView[k] = values[k];\n            });\n\n            var objVals = this.CurrentView.toObj();\n            Object.keys(values.settings ?? {}).forEach((k) => {\n               objVals.settings[k] = values.settings[k];\n            });\n\n            this.CurrentView.fromValues(objVals);\n\n            // Timed saves ... once every 3s of no changes\n            let view = this.CurrentView;\n\n            if (view.__timedSave) {\n               clearTimeout(view.__timedSave);\n            }\n            view.__timedSave = setTimeout(() => {\n               view.save();\n               delete view.__timedSave;\n            }, waitDuration);\n\n            if (!skipEmit) {\n               this.emit(\"view.changed\");\n            }\n         };\n      }\n\n      // webix UI definition:\n      ui() {\n         let ids = this.ids;\n\n         return {\n            id: ids.component,\n            // scroll: true,\n            rows: [\n               {\n                  view: \"toolbar\",\n                  css: \"ab-data-toolbar webix_dark\",\n                  cols: [\n                     { view: \"spacer\", width: 10 },\n                     {\n                        view: \"label\",\n                        label: L(\"Properties\"),\n                     },\n                     {\n                        view: \"icon\",\n                        icon: \"fa fa-info-circle\",\n                        tooltip: L(\"Tip\"),\n                        on: {\n                           onItemClick: () => {\n                              this.infoAlert();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  id: ids.editors,\n                  rows: [{}],\n               },\n            ],\n         };\n      }\n\n      // setting up UI\n      init(AB) {\n         this.AB = AB;\n\n         // get a copy of all the possible Editors by their .key\n         PropertyManager.views().forEach((V) => {\n            this._editorsByType[V.key] = V;\n         });\n      }\n\n      infoAlert() {\n         webix.alert({\n            title: L(\"Tip\"),\n            text: L(\"Edit a widgets properties here.\"),\n         });\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).expand();\n      }\n\n      /*\n       * @method viewLoad\n       * A new View has been selected for editing, so update\n       * our interface with the details for this View.\n       * @param {ABView} view  current view instance.\n       */\n      viewLoad(view) {\n         if (this.currentPanel) {\n            // Make sure the current Data is saved:\n            this._handler_onChange(10, true);\n\n            // unload the current panel\n            this.currentPanel.removeAllListeners(\"changed\");\n            this.currentPanel = null;\n         }\n\n         super.viewLoad(view);\n\n         let _editor = this._editorsByType[view.key];\n\n         if (_editor) {\n            let newPanel = new _editor();\n            newPanel.applicationLoad(this.CurrentApplication);\n\n            let ui = {\n               id: this.ids.editors,\n               rows: [newPanel.ui()],\n            };\n\n            webix.ui(ui, $$(this.ids.editors));\n            newPanel.init(this.AB);\n            newPanel.populate(view);\n\n            newPanel.on(\"changed\", this._handler_onChange);\n            this.currentPanel = newPanel;\n            // newPanel.show();\n         }\n      }\n   }\n\n   return new UI_Work_Interface_Workspace_Details_Properties();\n}\n","/*\n * ui_work_interface_workspace_editor\n *\n * Display the form for creating a Page/View.\n *\n */\n\nimport UI_Class from \"./ui_class\";\n// import UI_Warnings from \"./ui_warnings\";\n\nimport ABComponentMenu from \"./ui_work_interface_workspace_editor_components\";\nimport ABEditorLayout from \"./ui_work_interface_workspace_editor_layout\";\n\nexport default function (AB) {\n   const ibase = \"ui_work_interface_workspace_editor\";\n   // const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   var ComponentMenu = ABComponentMenu(AB);\n   var EditorLayout = ABEditorLayout(AB);\n\n   class UI_Work_Interface_Workspace_Editor extends UIClass {\n      constructor() {\n         super(ibase, {\n            toolbar: \"\",\n            toolbarMap: \"\",\n            toolbarViewMode: \"\",\n            toolbarViewPage: \"\",\n\n            layoutView: \"\",\n            dataView: \"\",\n\n            noContent: \"\",\n         });\n\n         this.CurrentViewPart = \"layout\";\n\n         this.CurrentViewMode = 0;\n         // {int} 1/0\n         // Indicates if we are in \"Preview\" mode or not.\n         // 1 = Preview Mode\n         // 0 = Edit Mode\n\n         this.PreviousViews = [];\n\n         this._handlerViewUpdate = () => {\n            this.viewLoad(this.CurrentView);\n         };\n      }\n\n      // webix UI definition:\n      ui() {\n         let ids = this.ids;\n\n         return {\n            id: ids.component,\n            view: \"layout\",\n            borderless: false,\n            rows: [\n               {\n                  id: ids.toolbar,\n                  view: \"toolbar\",\n                  css: \"ab-data-toolbar webix_dark\",\n                  cols: [\n                     // {\n                     //     view: 'label',\n                     //     id: ids.toolbarMap,\n                     //     label: '[view map]'\n                     // },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-arrow-left\",\n                        autowidth: true,\n                        click: () => {\n                           this.buttonBack();\n                        },\n                     },\n                     {\n                        id: ids.toolbarMap,\n                        view: \"list\",\n                        layout: \"x\",\n                        borderless: true,\n                        multiselect: false,\n                        select: false,\n                        scroll: false,\n                        padding: 0,\n                        css: \"ab_breadcrumb\",\n                        template: function (item) {\n                           return (\n                              '<span class=\"fa fa-chevron-right\" aria-hidden=\"true\"></span> ' +\n                              // '<i class=\"fa fa-#icon#\" aria-hidden=\"true\"></i> '.replace('#icon#', item.icon) +\n                              item.label\n                           );\n                        },\n                        on: {\n                           onItemClick: (id /*, e, node */) => {\n                              this.pageMap(id);\n                           },\n                        },\n                     },\n                     {\n                        view: \"icon\",\n                        icon: \"fa fa-info-circle\",\n                        tooltip: L(\n                           'Check \"Preview\" to see what your layout will look like, Click \"Add Widget\" to add new items to the page.'\n                        ),\n                        on: {\n                           onItemClick: () => {\n                              this.infoAlert();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"layout\",\n                  type: \"space\",\n                  css: \"gray\",\n                  cols: [\n                     {\n                        id: ids.toolbarViewMode,\n                        view: \"checkbox\",\n                        labelRight: L(\"Preview\"),\n                        labelWidth: 0,\n                        width: 85,\n                        on: {\n                           onChange: (newValue, oldValue) => {\n                              this.viewModeChange(newValue, oldValue);\n                           },\n                        },\n                     },\n                     {},\n                     ComponentMenu.ui(),\n                  ],\n               },\n               EditorLayout.ui(),\n            ],\n         };\n      }\n\n      // setting up UI\n      init(AB) {\n         this.AB = AB;\n\n         var allInits = [];\n\n         //// TODO: save the last CurrentViewMode in the workspace data and use that here:\n         $$(this.ids.toolbarViewMode).setValue(this.CurrentViewMode);\n\n         allInits.push(EditorLayout.init(AB));\n         allInits.push(ComponentMenu.init(AB));\n\n         ComponentMenu.on(\"widget.adding\", () => {\n            EditorLayout.busy();\n         });\n         ComponentMenu.on(\"widget.add\", () => {\n            this.viewLoad(this.CurrentView);\n            EditorLayout.ready();\n         });\n\n         EditorLayout.on(\"view.load\", (view) => {\n            // the user wants to edit the provided view.\n            this.emit(\"view.load\", view);\n         });\n\n         return Promise.all(allInits);\n      }\n\n      /**\n       * @function applicationLoad\n       *\n       * Initialize the Interface Workspace with the given ABApplication.\n       *\n       * @param {ABApplication} application\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         //  InterfaceWorkspace.clearInterfaceWorkspace();\n         EditorLayout.applicationLoad(application);\n         ComponentMenu.applicationLoad(application);\n      }\n\n      buttonBack() {\n         if (this.PreviousViews.length > 0) {\n            var view = this.PreviousViews.pop();\n\n            // reset view part to 'layout'\n            this.CurrentViewPart = \"layout\";\n\n            this.emit(\"view.load\", view);\n         }\n         // Switch from 'data' to 'layout' mode\n         else if (this.CurrentViewPart == \"data\") {\n            // reset view part to 'layout'\n            this.CurrentViewPart = \"layout\";\n\n            this.emit(\"view.load\", this.CurrentView);\n         }\n      }\n\n      pageMap(pageId) {\n         var clickedView = $$(this.ids.toolbarMap).getItem(pageId);\n\n         // reset view part to 'layout'\n         this.CurrentViewPart = \"layout\";\n\n         this.emit(\"view.load\", clickedView);\n      }\n\n      // buttonCancel:function() {\n\n      // },\n\n      // buttonSave: function() {\n\n      // },\n\n      infoAlert() {\n         webix.alert({\n            title: L(\"Tip\"),\n            text: L(\n               'Check \"Preview\" to see what your layout will look like, Click \"Add Widget\" to add new items to the page.'\n            ),\n         });\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n      }\n\n      /*\n       * @method viewLoad\n       * A new View has been selected for editing, so update\n       * our interface with the details for this View.\n       * @param {ABView} view  current view instance.\n       */\n      viewLoad(view) {\n         // store the current view to return here on [back] button.\n         if (this.CurrentView) {\n            // don't keep storing the same view over and over:\n            if (view && view.id != this.CurrentView.id) {\n               this.PreviousViews.push(this.CurrentView);\n\n               // TODO: make this a setting?\n               // limit the number of views we store in our list.\n               // ## lets not be memory hogs.\n               if (this.PreviousViews.length > 50) {\n                  this.PreviousViews.shift();\n               }\n            }\n         }\n\n         super.viewLoad(view);\n\n         // try to make sure we don't continually add up listeners.\n         this.CurrentView.removeListener(\n            \"properties.updated\",\n            this._handlerViewUpdate\n         ).once(\"properties.updated\", this._handlerViewUpdate);\n\n         // update the toolbar navigation map\n         let $tbMap = $$(this.ids.toolbarMap);\n         $tbMap.clearAll();\n         $tbMap.parse(view.allParents());\n         $tbMap.refresh();\n\n         EditorLayout.viewLoad(view);\n         EditorLayout.show();\n\n         ComponentMenu.viewLoad(view);\n         // NOTE: ComponentMenu.viewLoad() actually determines if the\n         // menu is show()n or not.\n         // ComponentMenu.show();\n      }\n\n      viewModeChange(newV, oldV) {\n         if (newV == oldV) return;\n\n         if (newV == 1) {\n            newV = \"preview\";\n         } else {\n            newV = \"block\";\n         }\n         this.CurrentViewMode = newV;\n\n         // pass view mode to the 'layout' view\n         EditorLayout.viewModeChange(this.CurrentViewMode);\n\n         if (this.CurrentView) {\n            this.viewLoad(this.CurrentView);\n         }\n      }\n   }\n\n   return new UI_Work_Interface_Workspace_Editor();\n}\n","/*\n * ui_work_interface_workspace_editor_components\n *\n * Display the menu for creating a new Widget.\n *\n */\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB) {\n   const ibase = \"ui_work_interface_workspace_editor_components\";\n   // const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   class UI_Work_Interface_Workspace_Editor_Components extends UIClass {\n      constructor() {\n         super(ibase, {\n            popup: \"\",\n            list: \"\",\n         });\n      }\n\n      // webix UI definition:\n      ui() {\n         return {\n            id: this.ids.component,\n            css: \"webix_primary\",\n            view: \"button\",\n            type: \"form\",\n            label: L(\"Add Widget\"),\n            align: \"center\",\n            autowidth: true,\n            on: {\n               onItemClick: (/* id, e */) => {\n                  this.showPopup();\n               },\n            },\n         };\n      }\n\n      // setting up UI\n      init(AB) {\n         this.AB = AB;\n         let ids = this.ids;\n         let _this = this;\n\n         webix.ui({\n            view: \"window\",\n            id: ids.popup,\n            modal: true,\n            width: 600,\n            height: 550,\n            select: false,\n            resize: true,\n            position: \"center\",\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Add Widget\"),\n                     css: \"modal_title\",\n                     align: \"center\",\n                  },\n                  {\n                     view: \"button\",\n                     label: \"Close\",\n                     autowidth: true,\n                     align: \"center\",\n                     click: () => {\n                        this.hidePopup();\n                     },\n                  },\n               ],\n            },\n            body: {\n               id: ids.list,\n               view: \"dataview\",\n               css: \"ab-datacollection-table borderless\",\n               borderless: true,\n               xCount: 5, //the number of items in a row\n               yCount: 4, //the number of items in a column\n               type: {\n                  borderless: true,\n                  width: 100,\n                  height: 100,\n               },\n               template: (obj, common) => {\n                  return this.template(obj, common);\n               },\n               on: {\n                  onItemClick: function (id /*, e, node */) {\n                     var component = this.getItem(id);\n                     _this.addWidget(component);\n                  },\n               },\n            },\n         });\n      }\n\n      // internal business logic\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n      }\n\n      /**\n       * @function hide()\n       *\n       * Hide this component.\n       */\n      hide() {\n         $$(this.ids.component).hide();\n      }\n\n      showPopup() {\n         $$(this.ids.popup).show();\n      }\n\n      hidePopup() {\n         $$(this.ids.popup).hide();\n      }\n\n      /**\n       * @function addWidget()\n       *\n       * @param component {ABView} - new component\n       */\n      addWidget(component) {\n         var newComp = component.newInstance(\n            this.CurrentView.application,\n            this.CurrentView\n         );\n\n         // show loading cursor\n         this.emit(\"widget.adding\");\n\n         // CurrentView.viewSave(newComp)\n         newComp.save().then(() => {\n            // callback to parent\n            // hide loading cursor\n            this.emit(\"widget.add\");\n         });\n\n         this.hidePopup();\n      }\n\n      /**\n       * @function template()\n       * compile the template for each item in the list.\n       */\n      template(obj /* , common */) {\n         // if this is one of our ABViews:\n         if (obj.common) {\n            // see if a .label field is present\n            var label = obj.common().label;\n\n            // if not, then pull a multilingual field:\n            if (!label) {\n               label = L(obj.common().labelKey);\n            }\n\n            return `<div class='ab-component-in-page'><i class='fa fa-2x fa-${\n               obj.common().icon\n            }' aria-hidden='true'></i><br/>${label}</div>`;\n         } else {\n            // maybe this is simply the \"No Components\" placeholder\n            return obj.label;\n         }\n      }\n\n      /*\n       * @method viewLoad\n       * A new View has been selected for editing, so update\n       * our interface with the components allowed for this View.\n       * @param {ABView} view  current view instance.\n       */\n      viewLoad(view) {\n         super.viewLoad(view);\n         let ids = this.ids;\n\n         var List = $$(ids.list);\n         var Menu = $$(ids.component);\n\n         var components = this.CurrentView.componentList();\n\n         List.clearAll();\n\n         if (components && components.length > 0) {\n            List.parse(components);\n            Menu.show();\n         } else {\n            Menu.hide();\n         }\n\n         List.refresh();\n      }\n   }\n\n   return new UI_Work_Interface_Workspace_Editor_Components();\n}\n","/*\n * ui_work_interface_workspace_editor_layout\n *\n * Display the workspace for showing the list of views on a page.\n *\n */\nimport UI_Class from \"./ui_class\";\n// import UI_Warnings from \"./ui_warnings\";\nimport FEditorManager from \"./editors/EditorManager\";\n\nexport default function (AB) {\n   const ibase = \"ui_work_interface_workspace_editor_layout\";\n   // const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   const EditorManager = FEditorManager(AB);\n\n   class UI_Work_Interface_Workspace_Editor_Layout extends UIClass {\n      constructor() {\n         super(ibase, {\n            editArea: \"\",\n            editAreaContainer: \"\",\n            editAreaLeft: \"\",\n            editAreaRight: \"\",\n            editAreaTop: \"\",\n            editAreaBottom: \"\",\n            editAreaSamplePopup: \"\",\n         });\n\n         this.CurrentViewMode = 1; // preview mode by default\n\n         this._editorsByType = {\n            /* view.key : {ViewEditorClass} */\n         };\n         // {hash}\n         // a collection of all possible View Editors that we can display in our\n         // layout editor.\n      }\n\n      // webix UI definition:\n      ui() {\n         let ids = this.ids;\n         return {\n            view: \"scrollview\",\n            id: ids.component,\n            body: {\n               cols: [\n                  {\n                     id: ids.editAreaLeft,\n                     width: 1,\n                  },\n                  {\n                     id: ids.editAreaContainer,\n                     type: \"clean\",\n                     rows: [\n                        {\n                           id: ids.editAreaTop,\n                           height: 1,\n                        },\n                        {\n                           id: ids.editAreaSamplePopup,\n                           view: \"toolbar\",\n                           css: \"webix_dark\",\n                           hidden: true,\n                           cols: [\n                              {},\n                              {\n                                 view: \"label\",\n                                 label: L(\"Sample Popup\"),\n                              },\n                              {},\n                           ],\n                        },\n                        {\n                           id: ids.editArea,\n                           view: \"layout\",\n                           borderless: true,\n                           rows: [],\n                           // template:'[edit Area]'\n                        },\n                        {\n                           id: ids.editAreaBottom,\n                           height: 1,\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.editAreaRight,\n                     width: 1,\n                  },\n               ],\n            },\n         };\n      }\n\n      // setting up UI\n      init(AB) {\n         this.AB = AB;\n\n         let EditArea = $$(this.ids.editArea);\n         if (EditArea) webix.extend(EditArea, webix.ProgressBar);\n\n         // get a copy of all the possible Editors by their .key\n         EditorManager.editors().forEach((E) => {\n            this._editorsByType[E.key] = E;\n         });\n\n         return Promise.resolve();\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n      }\n\n      /*\n       * @method viewLoad\n       * A new View has been selected for editing, so update\n       * our interface with the details for this View.\n       * @param {ABView} view  current view instance.\n       */\n      viewLoad(view) {\n         // remove the current Editor if it exists.\n         this.currentEditor?.detatch?.();\n\n         super.viewLoad(view);\n         let ids = this.ids;\n\n         // clear edit area\n         $$(ids.editArea)\n            .getChildViews()\n            .forEach((childView) => {\n               $$(ids.editArea)?.removeView(childView);\n            });\n\n         // load the component's editor in our editArea\n         var editorComponent;\n         if (this.CurrentViewMode == \"preview\") {\n            editorComponent = view.component();\n            if (\n               this.CurrentView.settings.type == \"popup\" &&\n               this.CurrentView.settings.popupWidth &&\n               this.CurrentView.settings.popupHeight\n            ) {\n               $$(ids.editAreaContainer).define({\n                  width: parseInt(this.CurrentView.settings.popupWidth),\n               });\n               $$(ids.editArea).define({\n                  height: parseInt(this.CurrentView.settings.popupHeight),\n               });\n               webix.html.addCss(\n                  $$(ids.editAreaLeft).getNode(),\n                  \"preview_item\"\n               );\n               webix.html.addCss(\n                  $$(ids.editAreaRight).getNode(),\n                  \"preview_item\"\n               );\n               webix.html.addCss($$(ids.editAreaTop).getNode(), \"preview_item\");\n               webix.html.addCss(\n                  $$(ids.editAreaBottom).getNode(),\n                  \"preview_item\"\n               );\n               $$(ids.editAreaLeft).define({ width: 0 });\n               $$(ids.editAreaRight).define({ width: 0 });\n               $$(ids.editAreaTop).define({ height: 0 });\n               $$(ids.editAreaBottom).define({ height: 0 });\n               $$(ids.editAreaSamplePopup).show();\n            } else if (\n               this.CurrentView.settings.type == \"page\" &&\n               this.CurrentView.settings.fixedPageWidth == 1 &&\n               this.CurrentView.settings.pageWidth\n            ) {\n               $$(ids.editAreaContainer).define({\n                  width: parseInt(this.CurrentView.settings.pageWidth),\n               });\n               $$(ids.editArea).define({ height: 0 });\n               webix.html.removeCss(\n                  $$(ids.editAreaLeft).getNode(),\n                  \"preview_item\"\n               );\n               webix.html.removeCss(\n                  $$(ids.editAreaRight).getNode(),\n                  \"preview_item\"\n               );\n               webix.html.removeCss(\n                  $$(ids.editAreaTop).getNode(),\n                  \"preview_item\"\n               );\n               webix.html.removeCss(\n                  $$(ids.editAreaBottom).getNode(),\n                  \"preview_item\"\n               );\n               $$(ids.editAreaLeft).define({ width: 0 });\n               $$(ids.editAreaRight).define({ width: 0 });\n               $$(ids.editAreaTop).define({ height: 1 });\n               $$(ids.editAreaBottom).define({ height: 1 });\n               $$(ids.editAreaSamplePopup).hide();\n            } else {\n               $$(ids.editAreaContainer).define({ width: 0 });\n               $$(ids.editArea).define({ height: 0 });\n               webix.html.removeCss(\n                  $$(ids.editAreaLeft).getNode(),\n                  \"preview_item\"\n               );\n               webix.html.removeCss(\n                  $$(ids.editAreaRight).getNode(),\n                  \"preview_item\"\n               );\n               webix.html.removeCss(\n                  $$(ids.editAreaTop).getNode(),\n                  \"preview_item\"\n               );\n               webix.html.removeCss(\n                  $$(ids.editAreaBottom).getNode(),\n                  \"preview_item\"\n               );\n               $$(ids.editAreaLeft).define({ width: 1 });\n               $$(ids.editAreaRight).define({ width: 1 });\n               $$(ids.editAreaTop).define({ height: 1 });\n               $$(ids.editAreaBottom).define({ height: 1 });\n               $$(ids.editAreaSamplePopup).hide();\n            }\n         } else {\n            let newEditor = this._editorsByType[view.key];\n\n            editorComponent = new newEditor(view); // view.editorComponent(this.AB._App, \"preview\");\n            editorComponent.viewLoad(view);\n            $$(ids.editAreaContainer).define({ width: 0 });\n            $$(ids.editArea).define({ height: 0 });\n            webix.html.removeCss(\n               $$(ids.editAreaLeft).getNode(),\n               \"preview_item\"\n            );\n            webix.html.removeCss(\n               $$(ids.editAreaRight).getNode(),\n               \"preview_item\"\n            );\n            webix.html.removeCss($$(ids.editAreaTop).getNode(), \"preview_item\");\n            webix.html.removeCss(\n               $$(ids.editAreaBottom).getNode(),\n               \"preview_item\"\n            );\n            $$(ids.editAreaLeft).define({ width: 1 });\n            $$(ids.editAreaRight).define({ width: 1 });\n            $$(ids.editAreaTop).define({ height: 1 });\n            $$(ids.editAreaBottom).define({ height: 1 });\n            $$(ids.editAreaSamplePopup).hide();\n         }\n         // editorComponent.ui.id = ids.editArea;\n         // webix.ui(editorComponent.ui, $$(ids.editArea));\n         $$(ids.editArea).addView(editorComponent.ui());\n         editorComponent.init(this.AB, 2);\n         // note: parentAccessLevel = 2 here in our Designer\n\n         editorComponent.on(\"view.edit\", (_view) => {\n            // if the [edit] icon is clicked on this component:\n            // tell our interface_workspace to load a new view\n            this.emit(\"view.load\", _view);\n         });\n\n         editorComponent.on(\"view.destroyed\", (/* _view */) => {\n            // if the [delete] icon is clicked on this component:\n            // tell our interface_workspace to reload our CurrentView\n            this.emit(\"view.load\", this.CurrentView);\n         });\n\n         if (editorComponent.onShow) editorComponent.onShow();\n         this.currentEditor = editorComponent;\n\n         setTimeout(() => {\n            $$(ids.component).adjust();\n            $$(ids.editAreaContainer).adjust();\n         }, 150);\n      }\n\n      /*\n       * @method viewModeChange\n       *\n       *\n       */\n      viewModeChange(viewMode) {\n         this.CurrentViewMode = viewMode;\n      }\n\n      busy() {\n         let EditArea = $$(this.ids.editArea);\n         EditArea?.disable();\n         EditArea?.showProgress({ type: \"icon\" });\n      }\n\n      ready() {\n         let EditArea = $$(this.ids.editArea);\n         EditArea?.enable();\n         EditArea?.hideProgress();\n      }\n   }\n\n   return new UI_Work_Interface_Workspace_Editor_Layout();\n}\n","/*\n * ui_work_object\n *\n * Display the Object Tab UI:\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_Work_Object_List from \"./ui_work_object_list\";\nimport UI_Work_Object_Workspace from \"./ui_work_object_workspace\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   // var L = UIClass.L();\n   var ObjectList = UI_Work_Object_List(AB);\n   var ObjectWorkspace = UI_Work_Object_Workspace(AB);\n\n   class UI_Work_Object extends UIClass {\n      //.extend(idBase, function(App) {\n\n      constructor() {\n         super(\"ui_work_object\");\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            type: \"space\",\n            margin: 10,\n            cols: [ObjectList.ui(), { view: \"resizer\" }, ObjectWorkspace.ui()],\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         // Our init() function for setting up our UI\n\n         this.warningsPropogate([ObjectList, ObjectWorkspace]);\n         this.on(\"warnings\", () => {\n            ObjectList.warningsRefresh();\n         });\n\n         ObjectList.on(\"selected\", (objID) => {\n            if (objID == null) ObjectWorkspace.clearObjectWorkspace();\n            else ObjectWorkspace.populateObjectWorkspace(objID);\n         });\n\n         ObjectWorkspace.on(\"addNew\", (selectNew) => {\n            ObjectList.emit(\"addNew\", selectNew);\n         });\n\n         return Promise.all([ObjectWorkspace.init(AB), ObjectList.init(AB)]);\n      }\n\n      /**\n       * @method applicationLoad\n       * Initialize the Object Workspace with the given ABApplication.\n       * @param {ABApplication} application\n       *        The current ABApplication we are working with.\n       */\n      applicationLoad(application) {\n         var oldAppID = this.CurrentApplicationID;\n         super.applicationLoad(application);\n\n         if (oldAppID != this.CurrentApplicationID) {\n            ObjectWorkspace.clearObjectWorkspace();\n         }\n\n         ObjectList.applicationLoad(application);\n         ObjectWorkspace.applicationLoad(application);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show(false, false);\n\n         // if (this.CurrentApplicationID) {\n         //    ObjectList?.applicationLoad(this.CurrentApplicationID);\n         // }\n         ObjectList?.ready();\n      }\n   }\n\n   return new UI_Work_Object();\n}\n","/*\n * ui_work_object_list\n *\n * Manage the ABObject List\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_COMMON_LIST from \"./ui_common_list\";\nimport UIListNewProcess from \"./ui_work_object_list_newObject\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   // var L = UIClass.L();\n\n   var AddForm = new UIListNewProcess(AB);\n   // the popup form for adding a new process\n\n   class UI_Work_Object_List extends UIClass {\n      constructor() {\n         super(\"ui_work_object_list\");\n\n         this.ListComponent = UI_COMMON_LIST(AB, {\n            idBase: this.ids.component,\n            labels: {\n               addNew: \"Add new object\",\n               confirmDeleteTitle: \"Delete Object\",\n               title: \"Objects\",\n               searchPlaceholder: \"Object name\",\n            },\n            // we can overrid the default template like this:\n            // templateListItem:\n            //    \"<div class='ab-object-list-item'>#label##warnings#{common.iconGear}</div>\",\n            menu: {\n               copy: false,\n               exclude: true,\n            },\n         });\n         // {ui_common_list} instance to display a list of our objects.\n      }\n\n      // Our webix UI definition:\n      ui() {\n         return this.ListComponent.ui();\n      }\n\n      // Our init() function for setting up our UI\n      async init(AB) {\n         this.AB = AB;\n\n         this.on(\"addNew\", (selectNew) => {\n            // if we receive a signal to add a new Object from another source\n            // like the blank object workspace offering an Add New button:\n            this.clickNewProcess(selectNew);\n         });\n\n         //\n         // List of Objects\n         //\n         await this.ListComponent.init(AB);\n\n         this.ListComponent.on(\"selected\", (item) => {\n            this.emit(\"selected\", item?.id);\n         });\n\n         this.ListComponent.on(\"addNew\", (selectNew) => {\n            this.clickNewProcess(selectNew);\n         });\n\n         this.ListComponent.on(\"deleted\", (item) => {\n            this.emit(\"deleted\", item);\n         });\n\n         this.ListComponent.on(\"exclude\", (item) => {\n            this.exclude(item);\n         });\n\n         // this.ListComponent.on(\"copied\", (data) => {\n         //    this.copy(data);\n         // });\n\n         // ListComponent.on(\"menu\", (data)=>{\n         // \tconsole.log(data);\n         // \tswitch (data.command) {\n         // \t\tcase \"exclude\":\n         // \t\t\tthis._logic.exclude(process);\n         // \t\t\tbreak;\n\n         // \t\tcase \"copy\":\n         // \t\t\tbreak;\n         // \t}\n         // })\n\n         //\n         // Add Form\n         //\n         await AddForm.init(AB);\n\n         AddForm.on(\"cancel\", () => {\n            AddForm.hide();\n         });\n\n         AddForm.on(\"save\", (obj /* , select */) => {\n            // the AddForm already takes care of updating the\n            // CurrentApplication.\n\n            // we just need to update our list of objects\n            this.applicationLoad(this.CurrentApplication);\n\n            // if (select) {\n            this.ListComponent.select(obj.id);\n            // }\n         });\n      }\n\n      /**\n       * @function applicationLoad\n       * Initialize the List from the provided ABApplication\n       * If no ABApplication is provided, then show an empty form. (create operation)\n       * @param {ABApplication} application\n       *        The current ABApplication we are working with.\n       */\n      applicationLoad(application) {\n         var oldAppID = this.CurrentApplicationID;\n         var selectedItem = null;\n         // {ABObject}\n         // if we are updating the SAME application, we will want to default\n         // the list to the currently selectedItem\n\n         super.applicationLoad(application);\n\n         if (oldAppID == this.CurrentApplicationID) {\n            selectedItem = this.ListComponent.selectedItem();\n         }\n\n         // NOTE: only include System Objects if the user has permission\n         var f = (obj) => !obj.isSystemObject;\n         if (this.AB.Account.isSystemDesigner()) {\n            f = () => true;\n         }\n         this.ListComponent.dataLoad(application?.objectsIncluded(f));\n\n         if (selectedItem) {\n            this.ListComponent.selectItem(selectedItem.id);\n         }\n\n         AddForm.applicationLoad(application);\n      }\n\n      warningsRefresh() {\n         if (this.CurrentApplication) {\n            // NOTE: only include System Objects if the user has permission\n            var f = (obj) => !obj.isSystemObject;\n            if (this.AB.Account.isSystemDesigner()) {\n               f = () => true;\n            }\n\n            let selectedItem = this.ListComponent.selectedItem();\n            this.ListComponent.dataLoad(\n               this.CurrentApplication?.objectsIncluded(f)\n            );\n            this.ListComponent.selectItem(selectedItem.id);\n         }\n      }\n\n      /**\n       * @function clickNewProcess\n       * Manages initiating the transition to the new Process Popup window\n       */\n      clickNewProcess(/* selectNew */) {\n         // show the new popup\n         AddForm.show();\n      }\n\n      /*\n       * @function copy\n       * the list component notified us of a copy action and has\n       * given us the new data for the copied item.\n       *\n       * now our job is to create a new instance of that Item and\n       * tell the list to display it\n       */\n      // copy(data) {\n      //    debugger;\n      //    // TODO:\n      //    this.ListComponent.busy();\n\n      //    this.CurrentApplication.processCreate(data.item).then((newProcess) => {\n      //       this.ListComponent.ready();\n      //       this.ListComponent.dataLoad(this.CurrentApplication.processes());\n      //       this.ListComponent.select(newProcess.id);\n      //    });\n      // }\n\n      /*\n       * @function exclude\n       * the list component notified us of an exclude action and which\n       * item was chosen.\n       *\n       * perform the removal and update the UI.\n       */\n      async exclude(item) {\n         this.ListComponent.busy();\n         var app = this.CurrentApplication;\n         await app.objectRemove(item);\n         this.ListComponent.dataLoad(app.objectsIncluded());\n\n         // this will clear the object workspace\n         this.emit(\"selected\", null);\n      }\n\n      ready() {\n         this.ListComponent.ready();\n      }\n   }\n   return new UI_Work_Object_List();\n}\n","/*\n * ui_work_object_list_newObject\n *\n * Display the form for creating a new Object.  This Popup will manage several\n * different sub components for gathering Object data for saving.\n *\n * The sub components will gather the data for the object and do basic form\n * validations on their interface.\n *\n * when ready, the sub component will emit \"save\" with the values gathered by\n * the form.  This component will manage the actual final object validation,\n * and saving to this application.\n *\n * On success, \"save.success\" will be emitted on the sub-component, and this\n * component.\n *\n * On Error, \"save.error\" will be emitted on the sub-component.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UIBlankObject from \"./ui_work_object_list_newObject_blank\";\nimport UICsvObject from \"./ui_work_object_list_newObject_csv\";\nimport UIImportObject from \"./ui_work_object_list_newObject_import\";\n// const ABImportExternal = require(\"./ab_work_object_list_newObject_external\");\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_List_NewObject extends UIClass {\n      constructor() {\n         super(\"ui_work_object_list_newObject\", {\n            tab: \"\",\n         });\n\n         this.selectNew = true;\n         // {bool} do we select a new object after it is created.\n\n         // var callback = null;\n\n         this.BlankTab = UIBlankObject(AB);\n         this.CsvTab = UICsvObject(AB);\n         this.ImportTab = UIImportObject(AB);\n         /*\n         this.ExternalTab = new ABImportExternal(AB);\n         */\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            view: \"window\",\n            id: this.ids.component,\n            // width: 400,\n            position: \"center\",\n            modal: true,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Add new object\"),\n                     css: \"modal_title\",\n                     align: \"center\",\n                  },\n                  {\n                     view: \"button\",\n                     autowidth: true,\n                     type: \"icon\",\n                     icon: \"nomargin fa fa-times\",\n                     click: () => {\n                        this.emit(\"cancel\");\n                     },\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            selectNewObject: true,\n            body: {\n               view: \"tabview\",\n               id: this.ids.tab,\n               cells: [\n                  this.BlankTab.ui() /*, this.ImportTab.ui(), this.ExternalTab.ui() */,\n                  this.CsvTab.ui(),\n                  this.ImportTab.ui(),\n               ],\n               tabbar: {\n                  on: {\n                     onAfterTabClick: (id) => {\n                        this.switchTab(id);\n                     },\n                     onAfterRender() {\n                        this.$view\n                           .querySelectorAll(\".webix_item_tab\")\n                           .forEach((t) => {\n                              var tid = t.getAttribute(\"button_id\");\n                              UIClass.CYPRESS_REF(t, `${tid}_tab`);\n                           });\n                     },\n                  },\n               },\n            },\n            on: {\n               onBeforeShow: () => {\n                  var id = $$(this.ids.tab).getValue();\n                  this.switchTab(id);\n               },\n            },\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n         webix.extend($$(this.ids.component), webix.ProgressBar);\n\n         this.$component = $$(this.ids.component);\n\n         var allInits = [];\n         [\"BlankTab\", \"CsvTab\", \"ImportTab\" /*, \"ExternalTab\"*/].forEach(\n            (k) => {\n               allInits.push(this[k].init(AB));\n               this[k].on(\"cancel\", () => {\n                  this.emit(\"cancel\");\n               });\n               this[k].on(\"save\", (values) => {\n                  this.save(values, k);\n               });\n            }\n         );\n\n         // ImportTab doesn't save, but \"imported\"\n         this.ImportTab.on(\"imported\", (obj) => {\n            this.done(obj);\n         });\n\n         return Promise.all(allInits);\n      }\n\n      /**\n       * @method applicationLoad()\n       * prepare ourself with the current application\n       * @param {ABApplication} application\n       *        The current ABApplication we are working with.\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         this.BlankTab.applicationLoad(application);\n         this.CsvTab.applicationLoad(application);\n         this.ImportTab.applicationLoad(application);\n      }\n\n      /**\n       * @function hide()\n       *\n       * remove the busy indicator from the form.\n       */\n      hide() {\n         this.$component?.hide();\n      }\n\n      /**\n       * Show the busy indicator\n       */\n      busy() {\n         this.$component?.showProgress?.();\n      }\n\n      /**\n       * Hide the busy indicator\n       */\n      ready() {\n         this.$component?.hideProgress?.();\n      }\n\n      /**\n       * @method done()\n       * Finished saving, so hide the popup and clean up.\n       * @param {object} obj\n       */\n      done(obj) {\n         this.ready();\n         this.hide(); // hide our popup\n         this.emit(\"save\", obj, this.selectNew);\n      }\n\n      /**\n       * @method save\n       * take the data gathered by our child creation tabs, and\n       * add it to our current application.\n       * @param {obj} values  key=>value hash of model values.\n       * @param {string}  tabKey\n       *        the \"key\" of the tab initiating the save.\n       * @return {Promise}\n       */\n      async save(values, tabKey) {\n         // must have an application set.\n         if (!this.CurrentApplicationID) {\n            webix.alert({\n               title: L(\"Shoot!\"),\n               test: L(\"No Application Set!  Why?\"),\n            });\n            this[tabKey].emit(\"save.error\", true);\n            return false;\n         }\n\n         // create a new (unsaved) instance of our object:\n         var newObject = this.AB.objectNew(values);\n\n         // have newObject validate it's values.\n         var validator = newObject.isValid();\n         if (validator.fail()) {\n            this[tabKey].emit(\"save.error\", validator);\n            // cb(validator); // tell current Tab component the errors\n            return false; // stop here.\n         }\n\n         if (!newObject.createdInAppID) {\n            newObject.createdInAppID = this.CurrentApplicationID;\n         }\n\n         // show progress\n         this.busy();\n\n         var application = this.CurrentApplication;\n\n         // if we get here, save the new Object\n         try {\n            var obj = await newObject.save();\n            await application.objectInsert(obj);\n            this[tabKey].emit(\"save.successful\", obj);\n            this.done(obj);\n         } catch (err) {\n            // hide progress\n            this.ready();\n\n            // an error happend during the server side creation.\n            // so remove this object from the current object list of\n            // the current application.\n            await application.objectRemove(newObject);\n\n            // tell current Tab component there was an error\n            this[tabKey].emit(\"save.error\", err);\n         }\n      }\n\n      /**\n       * @function show()\n       * Show this component.\n       */\n      show(shouldSelectNew) {\n         if (shouldSelectNew != null) {\n            this.selectNew = shouldSelectNew;\n         }\n         if (this.$component) this.$component.show();\n      }\n\n      switchTab(tabId) {\n         if (tabId == this.BlankTab?.ids.form) {\n            this.BlankTab?.onShow?.(this.CurrentApplicationID);\n         } else if (tabId == this.CsvTab?.ids.form) {\n            this.CsvTab?.onShow?.(this.CurrentApplicationID);\n         } else if (tabId == this.ImportTab?.ids.form) {\n            this.ImportTab?.onShow?.(this.CurrentApplicationID);\n         } else if (tabId == this.ExternalTab?.ids.form) {\n            this.ExternalTab?.onShow?.(this.CurrentApplicationID);\n         }\n      }\n   }\n\n   return new UI_Work_Object_List_NewObject();\n}\n","/*\n * ui_work_object_list_newObject_blank\n *\n * Display the form for creating a new ABObject.\n */\nimport UI_Class from \"./ui_class\";\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_List_NewObject_Blank extends UIClass {\n      constructor() {\n         super(\"ui_work_object_list_newObject_blank\", {\n            // component: base,\n\n            form: \"\",\n            buttonSave: \"\",\n            buttonCancel: \"\",\n         });\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            header: L(\"Create\"),\n            body: {\n               view: \"form\",\n               id: this.ids.form,\n               width: 400,\n               rules: {\n                  // TODO:\n                  // name: inputValidator.rules.validateObjectName\n               },\n               elements: [\n                  {\n                     view: \"text\",\n                     label: L(\"Name\"),\n                     name: \"name\",\n                     required: true,\n                     placeholder: L(\"Object name\"),\n                     labelWidth: 70,\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(\n                              this,\n                              \"ui_work_object_list_newObject_blank_name\"\n                           );\n                        },\n                     },\n                  },\n                  {\n                     name: \"isSystemObject\",\n                     view: \"checkbox\",\n                     labelRight: L(\"is this a System Object?\"),\n                     labelWidth: 0,\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(\n                              this,\n                              \"ui_work_object_list_newObject_blank_isSystemObj\"\n                           );\n                        },\n                     },\n                  },\n                  {\n                     margin: 5,\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonCancel,\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.cancel();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonSave,\n                           css: \"webix_primary\",\n                           value: L(\"Add Object\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              return this.save();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         this.$form = $$(this.ids.form);\n\n         // \"save.error\" is triggered by the ui_work_object_list_newObject\n         // if there was an error saving the values from our form.\n         this.on(\"save.error\", (err) => {\n            this.onError(err);\n         });\n\n         // \"save.successful\" is triggered by the ui_work_object_list_newObject\n         // if the values we provided were successfully saved.\n         this.on(\"save.successful\", () => {\n            this.onSuccess();\n         });\n\n         // init() routines are always considered async so:\n         return Promise.resolve();\n      }\n\n      cancel() {\n         this.formClear();\n         this.emit(\"cancel\");\n      }\n\n      formClear() {\n         this.$form.clearValidation();\n         this.$form.clear();\n      }\n\n      /**\n       * @method onError()\n       * Our Error handler when the data we provided our parent\n       * ui_work_object_list_newObject object had an error saving\n       * the values.\n       * @param {Error|ABValidation|other} err\n       *        The error information returned. This can be several\n       *        different types of objects:\n       *        - A javascript Error() object\n       *        - An ABValidation object returned from our .isValid()\n       *          method\n       *        - An error response from our API call.\n       */\n      onError(err) {\n         if (err) {\n            console.error(err);\n            var message = L(\"the entered data is invalid\");\n            // if this was our Validation() object:\n            if (err.updateForm) {\n               err.updateForm(this.$form);\n            } else {\n               if (err.code && err.data) {\n                  message = err.data?.sqlMessage ?? message;\n               } else {\n                  message = err?.message ?? message;\n               }\n            }\n\n            var values = this.$form.getValues();\n            webix.alert({\n               title: L(\"Error creating Object: {0}\", [values.name]),\n               ok: L(\"fix it\"),\n               text: message,\n               type: \"alert-error\",\n            });\n         }\n         // get notified if there was an error saving.\n         $$(this.ids.buttonSave).enable();\n      }\n\n      /**\n       * @method onSuccess()\n       * Our success handler when the data we provided our parent\n       * ui_work_object_list_newObject successfully saved the values.\n       */\n      onSuccess() {\n         this.formClear();\n         $$(this.ids.buttonSave).enable();\n      }\n\n      /**\n       * @function save\n       *\n       * verify the current info is ok, package it, and return it to be\n       * added to the application.createModel() method.\n       */\n      save() {\n         var saveButton = $$(this.ids.buttonSave);\n         saveButton.disable();\n\n         var Form = this.$form;\n\n         Form.clearValidation();\n\n         // if it doesn't pass the basic form validation, return:\n         if (!Form.validate()) {\n            saveButton.enable();\n            return false;\n         }\n\n         var values = Form.getValues();\n\n         // set uuid to be primary column\n         values.primaryColumnName = \"uuid\";\n\n         this.emit(\"save\", values);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component)?.show();\n      }\n   }\n   return new UI_Work_Object_List_NewObject_Blank();\n}\n","/*\n * ui_work_object_list_newObject_csv\n *\n * Display the form for import CSV file to a object.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport CSVImporter from \"../../utils/CSVImporter.js\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n   let uiSettings = AB.Config.uiSettings();\n\n   class UI_Work_Object_List_NewObject_Csv extends UIClass {\n      constructor() {\n         super(\"ui_work_object_list_newObject_csv\", {\n            // component: base,\n\n            form: \"\",\n            uploadFileList: \"\",\n            separatedBy: \"\",\n            headerOnFirstLine: \"\",\n            columnList: \"\",\n            importButton: \"\",\n         });\n\n         this._csvImporter = new CSVImporter(AB);\n      }\n\n      ui() {\n         let ids = this.ids;\n\n         // Our webix UI definition:\n         return {\n            id: ids.component,\n            header: L(\"Import CSV\"),\n            body: {\n               view: \"form\",\n               id: ids.form,\n               width: 400,\n               rules: {},\n               elements: [\n                  {\n                     view: \"text\",\n                     label: L(\"Name\"),\n                     name: \"name\",\n                     required: true,\n                     placeholder: L(\"Object name\"),\n                     labelWidth: uiSettings.labelWidthMedium,\n                  },\n                  {\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     value: L(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           return this.loadCsvFile(fileInfo);\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     id: ids.separatedBy,\n                     view: \"richselect\",\n                     name: \"separatedBy\",\n                     label: L(\"Separated by\"),\n                     labelWidth: uiSettings.labelWidthXLarge,\n                     options: this._csvImporter.getSeparateItems(),\n                     value: \",\",\n                     on: {\n                        onChange: () => {\n                           this.populateColumnList();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.headerOnFirstLine,\n                     view: \"checkbox\",\n                     name: \"headerOnFirstLine\",\n                     labelRight: L(\"Header on first line\"),\n                     labelWidth: 0,\n                     disabled: true,\n                     value: true,\n                     on: {\n                        onChange: (/* newVal, oldVal */) => {\n                           this.populateColumnList();\n                        },\n                     },\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           height: 260,\n                           minHeight: 260,\n                           maxHeight: 260,\n                           body: {\n                              id: ids.columnList,\n                              disabled: true,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     margin: 5,\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           name: \"cancel\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.cancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: L(\"Import\"),\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              this.import();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         this.allFields = this.AB.Class.ABFieldManager.allFields();\n\n         this._dataRows = [];\n\n         this.$form = $$(this.ids.form);\n         this.$uploadFileList = $$(this.ids.uploadFileList);\n         this.$separatedBy = $$(this.ids.separatedBy);\n         this.$headerOnFirstLine = $$(this.ids.headerOnFirstLine);\n         this.$columnList = $$(this.ids.columnList);\n         this.$importButton = $$(this.ids.importButton);\n\n         // \"save.error\" is triggered by the ui_work_object_list_newObject\n         // if there was an error saving the values from our form.\n         this.on(\"save.error\", (err) => {\n            this.onError(err);\n         });\n\n         // \"save.successful\" is triggered by the ui_work_object_list_newObject\n         // if the values we provided were successfully saved.\n         this.on(\"save.successful\", () => {\n            this.onSuccess();\n         });\n\n         // init() routines are always considered async so:\n         return Promise.resolve();\n      }\n\n      async loadCsvFile(fileInfo) {\n         if (!this._csvImporter.validateFile(fileInfo)) {\n            webix.alert({\n               title: L(\"This file extension is not allowed\"),\n               text: L(\"Please only upload CSV files\"),\n               ok: L(\"OK\"),\n            });\n\n            return false;\n         }\n\n         // show loading cursor\n         if (this.$form.showProgress) this.$form.showProgress({ type: \"icon\" });\n\n         // read CSV file\n         let separatedBy = this.$separatedBy.getValue();\n         this._dataRows = await this._csvImporter.getDataRows(\n            fileInfo,\n            separatedBy\n         );\n\n         this.$headerOnFirstLine.enable();\n         this.$columnList.enable();\n         this.$importButton.enable();\n\n         this.populateColumnList();\n\n         if (this.$form.hideProgress) this.$form.hideProgress();\n\n         return true;\n      }\n\n      removeCsvFile(fileId) {\n         this.$uploadFileList.remove(fileId);\n         this.formClear();\n         return true;\n      }\n\n      populateColumnList() {\n         webix.ui([], this.$columnList);\n\n         var firstLine = this._dataRows[0];\n         if (firstLine == null) return;\n\n         var columnList = [];\n\n         if (this.$headerOnFirstLine.getValue()) {\n            columnList = firstLine.map((colName, index) => {\n               return {\n                  include: true,\n                  columnName: colName,\n                  dataType: this._csvImporter.getGuessDataType(\n                     this._dataRows,\n                     index\n                  ),\n               };\n            });\n         } else {\n            for (var i = 0; i < firstLine.length; i++) {\n               columnList.push({\n                  include: true,\n                  columnName: \"Field \" + (i + 1),\n                  dataType: this._csvImporter.getGuessDataType(\n                     this._dataRows,\n                     i\n                  ),\n               });\n            }\n         }\n\n         // Add dynamic columns UI\n         let uiColumns = [];\n         columnList.forEach((col) => {\n            uiColumns.push({\n               height: 40,\n               cols: [\n                  {\n                     view: \"checkbox\",\n                     value: col.include,\n                     width: 30,\n                  },\n                  {\n                     view: \"text\",\n                     value: col.columnName,\n                     width: uiSettings.labelWidthXLarge,\n                  },\n                  {\n                     view: \"select\",\n                     value: col.dataType,\n                     options: [\n                        {\n                           id: \"string\",\n                           value: this.allFields\n                              .filter((f) => f.key == \"string\")[0]\n                              .defaults().menuName,\n                        },\n                        {\n                           id: \"LongText\",\n                           value: this.allFields\n                              .filter((f) => f.key == \"LongText\")[0]\n                              .defaults().menuName,\n                        },\n                        {\n                           id: \"number\",\n                           value: this.allFields\n                              .filter((f) => f.key == \"number\")[0]\n                              .defaults().menuName,\n                        },\n                        {\n                           id: \"date\",\n                           value: this.allFields\n                              .filter((f) => f.key == \"date\")[0]\n                              .defaults().menuName,\n                        },\n                        {\n                           id: \"boolean\",\n                           value: this.allFields\n                              .filter((f) => f.key == \"boolean\")[0]\n                              .defaults().menuName,\n                        },\n                     ],\n                     width: 120,\n                  },\n               ],\n            });\n         });\n\n         webix.ui(uiColumns, $$(this.$columnList));\n      }\n\n      import() {\n         this.$importButton.disable();\n\n         if (!this.$form.validate()) {\n            this.$importButton.enable();\n            return false;\n         }\n\n         // Validate required column names\n         let columnViews = $$(this.$columnList).getChildViews();\n         var emptyColNames = columnViews.filter((cView) => {\n            return (\n               cView.queryView({ view: \"checkbox\" }).getValue() &&\n               cView.queryView({ view: \"text\" }).getValue().trim().length == 0\n            );\n         });\n         if (emptyColNames.length > 0) {\n            webix.alert({\n               title: L(\"Column name is required\"),\n               text: L(\"Please enter column name\"),\n               ok: L(\"OK\"),\n            });\n\n            this.$importButton.enable();\n            return false;\n         }\n\n         // Validate reserve column names\n         var reservedColNames = columnViews.filter((cView) => {\n            return (\n               cView.queryView({ view: \"checkbox\" }).getValue() &&\n               this.allFields[0].reservedNames.indexOf(\n                  cView\n                     .queryView({ view: \"text\" })\n                     .getValue()\n                     .trim()\n                     .toLowerCase()\n               ) > -1\n            );\n         });\n         if (reservedColNames.length > 0) {\n            webix.alert({\n               title: L(\"Column name is invalid\"),\n               text: L(\n                  \"Please enter column name that does not match [{0}]\",\n                  this.allFields[0].reservedNames.join(\", \")\n               ),\n               ok: L(\"OK\"),\n            });\n\n            this.$importButton.enable();\n            return false;\n         }\n\n         // create new object\n         let newObjAttr = {\n            primaryColumnName: \"uuid\", // set uuid to be primary column\n            name: this.$form.getValues()[\"name\"],\n         };\n\n         // now send data back to be added:\n         this.emit(\"save\", newObjAttr);\n      }\n\n      onSuccess(newObj) {\n         let subTasks = Promise.resolve();\n\n         // add new columns to object\n         let columnViews = $$(this.$columnList).getChildViews();\n         columnViews.forEach((cView, index) => {\n            let include = cView.queryView({ view: \"checkbox\" }).getValue();\n            if (!include) return;\n\n            let columnName = cView.queryView({ view: \"text\" }).getValue();\n            let dataType = cView.queryView({ view: \"select\" }).getValue();\n\n            let newField = {\n               // id: AB.uuid(),\n               columnName: columnName,\n               label: columnName,\n               key: dataType,\n               settings: {\n                  showIcon: 1,\n                  weight: index,\n               },\n            };\n\n            switch (dataType) {\n               case \"string\":\n               case \"LongText\":\n                  newField.settings.supportMultilingual = 0;\n                  break;\n            }\n\n            let field = newObj.fieldNew(newField);\n            subTasks = subTasks.then(() => field.save());\n            // .then(() => field.migrateCreate());\n         });\n\n         // add rows to Server\n         var objModel = newObj.model();\n\n         // Add each records sequentially\n         this._dataRows.forEach((data, index) => {\n            subTasks = subTasks.then(() => {\n               if (this.$headerOnFirstLine.getValue() && index == 0)\n                  return Promise.resolve();\n\n               var rowData = {};\n               var colValues = data;\n\n               newObj.fields().forEach((col) => {\n                  if (colValues[col.settings.weight] != null)\n                     rowData[col.columnName] = colValues[col.settings.weight];\n               });\n\n               // Add row data\n               return objModel.create(rowData);\n            });\n         });\n\n         // if there was no error, clear the form for the next\n         // entry:\n         return subTasks\n            .then(() => {\n               this.formClear();\n               this.$importButton.enable();\n\n               return Promise.resolve();\n            })\n            .catch((err) => {\n               AB.notify.developer(err, {\n                  message: \"Error import data rows from CSV\",\n               });\n            });\n      }\n\n      onError(err) {\n         // if this was our Validation() object:\n         if (err) {\n            if (err.updateForm) err.updateForm(this.$form);\n\n            // get notified if there was an error saving.\n            this.$importButton.enable();\n         }\n      }\n\n      cancel() {\n         this.formClear();\n         this.emit(\"cancel\");\n      }\n\n      formClear() {\n         this._dataRows = [];\n\n         this.$form.clearValidation();\n         this.$form.clear();\n         this.$separatedBy.setValue(\",\");\n\n         webix.ui([], $$(this.$columnList));\n         this.$uploadFileList.clearAll();\n\n         this.$headerOnFirstLine.disable();\n         this.$columnList.disable();\n         this.$importButton.disable();\n      }\n   }\n   return new UI_Work_Object_List_NewObject_Csv();\n}\n","/*\n * ui_work_object_list_newObject_import\n *\n * Display the form for importing an existing object into the application.\n *\n */\nimport UI_Class from \"./ui_class\";\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_List_NewObject_Import extends UIClass {\n      constructor() {\n         super(\"ui_work_object_list_newObject_import\", {\n            // component: base,\n\n            form: \"\",\n            filter: \"\",\n            objectList: \"\",\n            columnList: \"\",\n            buttonSave: \"\",\n            buttonCancel: \"\",\n         });\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            header: L(\"Existing\"),\n            body: {\n               view: \"form\",\n               id: this.ids.form,\n               width: 400,\n               elements: [\n                  // Filter\n                  {\n                     cols: [\n                        {\n                           view: \"icon\",\n                           icon: \"fa fa-filter\",\n                           align: \"left\",\n                        },\n                        {\n                           view: \"text\",\n                           id: this.ids.filter,\n                           on: {\n                              onTimedKeyPress: () => this.filter(),\n                           },\n                        },\n                     ],\n                  },\n\n                  // Model list\n                  {\n                     view: \"list\",\n                     id: this.ids.objectList,\n                     select: true,\n                     height: 200,\n                     minHeight: 250,\n                     maxHeight: 250,\n                     data: [],\n                     template: \"<div>#label#</div>\",\n                     on: {\n                        onSelectChange: () => this.objectSelect(),\n                     },\n                  },\n\n                  // Columns list\n                  {\n                     view: \"label\",\n                     label: `<b>${L(\"Columns\")}</b>`,\n                     height: 20,\n                  },\n                  {\n                     view: \"list\",\n                     id: this.ids.columnList,\n                     datatype: \"json\",\n                     multiselect: false,\n                     select: false,\n                     height: 200,\n                     minHeight: 200,\n                     maxHeight: 200,\n                     type: {\n                        height: 40,\n                        isvisible: {\n                           view: \"checkbox\",\n                           width: 30,\n                        },\n                     },\n                     template: (obj /* , common */) => {\n                        // return `\n                        //     <span style=\"float: left;\">${common.isvisible(obj, common)}</span>\n                        //     <span style=\"float: left;\">${obj.label}</span>\n                        // `;\n                        return `\n                               <span style=\"float: left;\"><i class=\"fa fa-${obj.icon}\"></i></span>\n                               <span style=\"float: left;\">&nbsp;${obj.label}</span>\n                           `;\n                     },\n                  },\n\n                  // Import & Cancel buttons\n                  {\n                     margin: 5,\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonCancel,\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => this.cancel(),\n                        },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonSave,\n                           css: \"webix_primary\",\n                           value: L(\"Import\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => this.save(),\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         this.$form = $$(this.ids.form);\n         this.$filter = $$(this.ids.filter);\n         this.$objectList = $$(this.ids.objectList);\n         this.$columnList = $$(this.ids.columnList);\n         this.$buttonSave = $$(this.ids.buttonSave);\n         this.$buttonCancel = $$(this.ids.buttonCancel);\n\n         // \"save.error\" is triggered by the ui_work_object_list_newObject\n         // if there was an error saving the values from our form.\n         this.on(\"save.error\", (err) => {\n            this.onError(err);\n         });\n\n         // \"save.successful\" is triggered by the ui_work_object_list_newObject\n         // if the values we provided were successfully saved.\n         this.on(\"save.successful\", () => {\n            this.onSuccess();\n         });\n\n         // init() routines are always considered async so:\n         return Promise.resolve();\n      }\n\n      onShow() {\n         this.formClear();\n\n         // now all objects are *global* but an application might only\n         // reference a sub set of them.  Here we just need to show\n         // the objects our current application isn't referencing:\n\n         let availableObjs = this.CurrentApplication.objectsExcluded(\n            (o) => !o.isSystemObject || AB.Account.isSystemDesigner()\n         );\n         this.$objectList.parse(availableObjs, \"json\");\n      }\n\n      filter() {\n         let filterText = this.$filter.getValue();\n         this.$objectList.filter(\"#label#\", filterText);\n      }\n\n      objectSelect() {\n         this.$columnList.clearAll();\n\n         let selectedObj = this.$objectList.getSelectedItem(false);\n         if (selectedObj) {\n            let colNames = [];\n\n            // Now that ABObjects are ABDefinitions, we no longer\n            // have to lookup the data from the server:\n\n            selectedObj.fields().forEach((f) => {\n               // Skip these columns\n               // TODO : skip connect field\n               // if (col.model) continue;\n               // if (col.collection) continue;\n\n               //    let fieldClass = ABFieldManager.allFields().filter(\n               //       (field) => field.defaults().key == f.key\n               //    )[0];\n               //    if (fieldClass == null) return;\n\n               //    // If connect field does not link to objects in app, then skip\n               //    if (\n               //       f.key == \"connectObject\" &&\n               //       !currentApp.objectsIncluded(\n               //          (obj) => obj.id == f.settings.linkObject\n               //       )[0]\n               //    ) {\n               //       return;\n               //    }\n\n               colNames.push({\n                  id: f.id,\n                  label: f.label,\n                  isvisible: true,\n                  icon: f.icon,\n                  // disabled: !supported\n               });\n            });\n\n            if (colNames.length == 0) {\n               colNames.push({\n                  id: \"none\",\n                  label: L(\"No Fields Defined\"),\n                  isvisible: true,\n               });\n            }\n\n            this.$columnList.parse(colNames);\n         }\n      }\n\n      async save() {\n         var selectedObj = this.$objectList.getSelectedItem();\n         if (!selectedObj) return false;\n\n         this.$buttonSave.disable();\n\n         await this.CurrentApplication.objectInsert(selectedObj);\n\n         // we have already updated things, so:\n         this.emit(\"imported\", selectedObj);\n         this.$buttonSave.enable();\n      }\n\n      cancel() {\n         this.formClear();\n         this.emit(\"cancel\");\n      }\n\n      formClear() {\n         // Filter section\n         this.$form.clearValidation();\n         this.$form.clear();\n         // Lists\n         this.$objectList.clearAll();\n         this.$columnList.clearAll();\n      }\n\n      /**\n       * @method onError()\n       * Our Error handler when the data we provided our parent\n       * ui_work_object_list_newObject object had an error saving\n       * the values.\n       * @param {Error|ABValidation|other} err\n       *        The error information returned. This can be several\n       *        different types of objects:\n       *        - A javascript Error() object\n       *        - An ABValidation object returned from our .isValid()\n       *          method\n       *        - An error response from our API call.\n       */\n      onError(err) {\n         if (err) {\n            var message = L(\"the entered data is invalid\");\n            // if this was our Validation() object:\n            if (err.updateForm) {\n               err.updateForm(this.$form);\n            } else {\n               if (err.code && err.data) {\n                  message = err.data?.sqlMessage ?? message;\n               } else {\n                  message = err?.message ?? message;\n               }\n            }\n\n            var values = this.$form.getValues();\n            webix.alert({\n               title: L(\"Error creating Object: {0}\", [values.name]),\n               ok: L(\"fix it\"),\n               text: message,\n               type: \"alert-error\",\n            });\n         }\n         // get notified if there was an error saving.\n         this.$buttonSave.enable();\n      }\n\n      /**\n       * @method onSuccess()\n       * Our success handler when the data we provided our parent\n       * ui_work_object_list_newObject successfully saved the values.\n       */\n      onSuccess() {\n         this.$buttonSave.enable();\n      }\n   }\n\n   return new UI_Work_Object_List_NewObject_Import();\n}\n","/*\n * ui_work_object_workspace\n *\n * Manage the Object Workspace area.\n */\nimport UI_Class from \"./ui_class\";\nimport UI_Warnings from \"./ui_warnings\";\n// const ABWorkspaceGantt = require(\"./ab_work_object_workspace_gantt\");\n\n// const ABWorkspaceIndex = require(\"./ab_work_object_workspace_index\");\n\n// const ABPopupFilterDataTable = require(\"./ab_work_object_workspace_popupFilterDataTable\");\n\nimport FPopupCustomIndex from \"./ui_work_object_workspace_popupCustomIndex\";\nimport FPopupDefineLabel from \"./ui_work_object_workspace_popupDefineLabel\";\nimport FPopupExport from \"./ui_work_object_workspace_popupExport\";\nimport FPopupFrozenColumns from \"./ui_work_object_workspace_popupFrozenColumns\";\nimport FPopupHeaderEditMenu from \"./ui_work_object_workspace_popupHeaderEditMenu\";\nimport FPopupHideFields from \"./ui_work_object_workspace_popupHideFields\";\nimport FPopupImport from \"./ui_work_object_workspace_popupImport\";\nimport FPopupNewDataField from \"./ui_work_object_workspace_popupNewDataField\";\nimport FPopupSortField from \"./ui_work_object_workspace_popupSortFields\";\nimport FPopupViewSettings from \"./ui_work_object_workspace_popupViewSettings\";\nimport FPopupFilterDataTable from \"./ui_work_object_workspace_popupFilter\";\n\nimport FWorkspaceViews from \"./ui_work_object_workspace_workspaceviews\";\n\nimport FWorkspaceDatatable from \"./ui_work_object_workspace_view_grid\";\nimport FWorkspaceGantt from \"./ui_work_object_workspace_view_gantt\";\nimport FWorkspaceKanban from \"./ui_work_object_workspace_view_kanban\";\n\nimport FWorkspaceTrack from \"./ui_work_object_workspace_popupTrack\";\n\nexport default function (AB, ibase, init_settings) {\n   ibase = ibase || \"abd_work_object_workspace\";\n   const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   var Datatable = FWorkspaceDatatable(AB, `${ibase}_view_grid`, init_settings);\n   var Gantt = FWorkspaceGantt(AB, `${ibase}_view_gantt`);\n   var Kanban = FWorkspaceKanban(AB, `${ibase}_view_kanban`);\n\n   var Warnings = UI_Warnings(AB, `${ibase}_view_warnings`, init_settings);\n\n   var Track = FWorkspaceTrack(AB, `${ibase}_track`);\n\n   class UIWorkObjectWorkspace extends UIClass {\n      /**\n       * @param {object} App\n       * @param {string} idBase\n       * @param {object} settings - {\n       * \t\t\t\t\t\t\t\tallowDelete: bool,\n       * \t\t\t\t\t\t\t\tdetailsView: string,\n       * \t\t\t\t\t\t\t\teditView: string,\n       * \t\t\t\t\t\t\t\tisInsertable: bool,\n       * \t\t\t\t\t\t\t\tisEditable: bool,\n       * \t\t\t\t\t\t\t\tmassUpdate: bool,\n       * \t\t\t\t\t\t\t\tconfigureHeaders: bool,\n       *\n       * \t\t\t\t\t\t\t\tisFieldAddable: bool\n       * \t\t\t\t\t\t\t}\n       */\n      constructor(base, settings = {}) {\n         super(base, {\n            // component: `${base}_component`,\n\n            buttonAddField: \"\",\n            buttonDeleteSelected: \"\",\n            buttonDeleteSelectedSpacer: \"\",\n            buttonExport: \"\",\n            buttonImport: \"\",\n            buttonFieldsVisible: \"\",\n            buttonFieldsVisibleSpacer: \"\",\n            buttonFilter: \"\",\n            buttonFrozen: \"\",\n            buttonFrozenSpacer: \"\",\n            buttonLabel: \"\",\n            buttonMassUpdate: \"\",\n            buttonMassUpdateSpacer: \"\",\n            buttonRowNew: \"\",\n            buttonSort: \"\",\n            buttonSortSpacer: \"\",\n\n            listIndex: \"\",\n            buttonIndex: \"\",\n\n            datatable: \"\",\n            error: \"\",\n            error_msg: \"\",\n\n            viewMenu: \"\",\n            viewMenuButton: \"\",\n            viewMenuNewView: \"\",\n\n            // Toolbar:\n            toolbar: \"\",\n\n            noSelection: \"\",\n            selectedObject: \"\",\n         });\n\n         // default settings\n         // settings.trackView = settings.trackView ?? true;\n         // settings.allowDelete = settings.allowDelete ?? true;\n         // settings.isInsertable = settings.isInsertable ?? true;\n         // settings.isEditable = settings.isEditable ?? true;\n         // settings.massUpdate = settings.massUpdate ?? true;\n         // settings.configureHeaders = settings.configureHeaders ?? true;\n         settings.isReadOnly = settings.isReadOnly ?? false;\n         settings.showWarnings = settings.showWarnings ?? true;\n\n         // settings.isLabelEditable = settings.isLabelEditable ?? true;\n         // settings.isFieldAddable = settings.isFieldAddable ?? true;\n         this.settings = settings;\n\n         this.workspaceViews = FWorkspaceViews(AB, `${base}_views`, {\n            isReadOnly: this.settings.isReadOnly,\n         });\n\n         this.hashViews = {};\n         // {hash}  { view.id : webix_component }\n         // a hash of the live workspace view components\n\n         // The Grid that displays our object:\n         this.hashViews[\"grid\"] = Datatable;\n         Datatable.on(\"column.header.clicked\", (node, EditField) => {\n            this.PopupHeaderEditMenu.show(node, EditField);\n         });\n         Datatable.on(\"object.track\", (currentObject, id) => {\n            Track.open(currentObject, id);\n         });\n         Datatable.on(\"selection\", () => {\n            this.callbackCheckboxChecked(\"enable\");\n         });\n         Datatable.on(\"selection.cleared\", () => {\n            this.callbackCheckboxChecked(\"disable\");\n         });\n         Datatable.on(\"column.order\", (fieldOrder) => {\n            // fieldOrder : {array} the ABField.ids of the fields in the\n            //              order they are displayed.\n            var object = this.CurrentObject;\n            var newOrder = [];\n            fieldOrder.forEach((fid) => {\n               newOrder.push(object.fieldByID(fid));\n            });\n            object._fields = newOrder;\n            object.save();\n         });\n\n         // The Gantt Object View\n         this.hashViews[\"gantt\"] = Gantt;\n\n         // The Kanban Object View.\n         this.hashViews[\"kanban\"] = Kanban;\n\n         this.PopupCustomIndex = new FPopupCustomIndex(\n            AB,\n            `${base}_customIndex`\n         );\n         this.PopupCustomIndex.on(\"changed\", () => {\n            this.refreshIndexes();\n         });\n\n         // // Various Popups on our page:\n         this.PopupHeaderEditMenu = FPopupHeaderEditMenu(\n            AB,\n            `${base}_headerEditMenu`\n         );\n         this.PopupHeaderEditMenu.on(\"click\", (action, field, node) => {\n            this.callbackHeaderEditorMenu(action, field, node);\n         });\n\n         if (!this.settings.isReadOnly) {\n            this.PopupDefineLabelComponent = new FPopupDefineLabel(\n               AB,\n               `${base}_defineLabel`\n            );\n            this.PopupDefineLabelComponent.on(\"changed\", () => {\n               this.callbackDefineLabel();\n            });\n         }\n\n         this.PopupFilterDataTableComponent = new FPopupFilterDataTable(\n            AB,\n            `${base}_popupFilter`\n         );\n\n         this.PopupFrozenColumnsComponent = new FPopupFrozenColumns(\n            AB,\n            `${base}_frozenFields`\n         );\n         this.PopupFrozenColumnsComponent.on(\"changed\", (settings) => {\n            this.callbackFrozenColumns(settings);\n         });\n\n         this.PopupHideFieldComponent = FPopupHideFields(\n            AB,\n            `${base}_hideFields`\n         );\n         this.PopupHideFieldComponent.on(\"changed\", (settings) => {\n            this.callbackFieldsVisible(settings);\n         });\n\n         // var PopupMassUpdateComponent = new ABPopupMassUpdate(App, idBase);\n         if (!this.settings.isReadOnly) {\n            this.PopupNewDataFieldComponent = FPopupNewDataField(\n               AB,\n               `${base}_popupNewDataField`\n            );\n         }\n\n         this.PopupSortFieldComponent = FPopupSortField(\n            AB,\n            `${base}_sortFields`\n         );\n         this.PopupSortFieldComponent.on(\"changed\", (settings) => {\n            this.callbackSortFields(settings);\n         });\n\n         this.PopupExportObjectComponent = new FPopupExport(\n            AB,\n            `${base}_export`\n         );\n\n         this.PopupImportObjectComponent = new FPopupImport(\n            AB,\n            `${base}_import`\n         );\n         // this.PopupImportObjectComponent.on(\"done\", () => {\n         //    this.populateObjectWorkspace(this.CurrentObject);\n         // });\n\n         this.PopupViewSettingsComponent = FPopupViewSettings(\n            AB,\n            `${base}_popupAddView`,\n            { isReadOnly: this.settings.isReadOnly }\n         );\n         if (!this.settings.isReadOnly) {\n            this.PopupViewSettingsComponent.on(\"new.field\", (key) => {\n               this.PopupNewDataFieldComponent.show(null, key);\n            });\n         }\n\n         // create ABViewDataCollection\n         this.mockDataCollection = null;\n         // {ABDataCollection}\n         // An instance of an ABDataCollection to manage the data we are displaying\n         // in our workspace.\n\n         this.CurrentObjectID = null;\n         // {string} the ABObject.id of the current Object we are editing.\n      } // constructor\n\n      ui() {\n         var ids = this.ids;\n\n         var view = \"button\";\n         // at some point we thought this was a good idea.\n\n         var _logic = this;\n         // some of these callback fn() are useful to not have this\n         // refer to this class, so we allow them to call _logic.XXX()\n         // instead.\n\n         var newViewButton = {\n            id: this.ids.viewMenuNewView,\n            view: \"button\",\n            type: \"icon\",\n            autowidth: true,\n            css: \"webix_transparent\",\n            label: L(\"New view\"),\n            icon: \"fa fa-plus-circle\",\n            align: \"center\",\n            click: () => {\n               this.PopupViewSettingsComponent.show();\n            },\n         };\n\n         var menuWorkspaceViews = {\n            id: ids.viewMenu,\n            view: \"menu\",\n            // css: \"darkgray\",\n            // borderless: true,\n            // minWidth: 150,\n            // autowidth: true,\n            data: [],\n            on: {\n               onMenuItemClick: (id) => {\n                  var item = $$(ids.viewMenu).getMenuItem(id);\n                  if (id === ids.viewMenuButton) {\n                     return;\n                  }\n                  if (item.isView) {\n                     var view = this.workspaceViews.list((v) => v.id === id)[0];\n                     this.switchWorkspaceView(view);\n                  } else if (item.action === \"edit\") {\n                     var view = this.workspaceViews.list(\n                        (v) => v.id === item.viewId\n                     )[0];\n                     this.PopupViewSettingsComponent.show(view);\n                  } else if (item.action === \"delete\") {\n                     // Ask the user what to do about the existing file:\n                     webix.confirm({\n                        title: L(\"Delete View?\"),\n                        message: L(\n                           \"Are you sure you want to remove this view?\"\n                        ),\n                        callback: (result) => {\n                           if (result) {\n                              var view = this.workspaceViews.list(\n                                 (v) => v.id === item.viewId\n                              )[0];\n                              this.workspaceViews.viewRemove(view);\n                              this.switchWorkspaceView(\n                                 this.workspaceViews.getCurrentView()\n                              );\n                           }\n                        },\n                     });\n                  }\n               },\n            },\n            type: {\n               subsign: true,\n            },\n         };\n\n         var toolbar = {\n            view: \"toolbar\",\n            id: ids.toolbar,\n            hidden: true,\n            css: \"webix_dark\",\n            elementsConfig: {\n               autowidth: true,\n               padding: 0,\n               margin: 0,\n            },\n            margin: 0,\n            padding: 0,\n            rows: [\n               {\n                  cols: [\n                     { responsive: \"hide\" },\n                     {\n                        view: view,\n                        id: ids.buttonAddField,\n                        label: L(\"Add field\"),\n                        icon: \"fa fa-plus\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        hidden: this.settings.isReadOnly,\n                        // minWidth: 115,\n                        // autowidth: true,\n                        click: function () {\n                           _logic.toolbarAddFields(this.$view);\n                        },\n                     },\n                     { responsive: \"hide\", hidden: this.settings.isReadOnly },\n                     {\n                        view: view,\n                        id: ids.buttonFieldsVisible,\n                        label: L(\"Hide fields\"),\n                        icon: \"fa fa-eye-slash\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        // minWidth: 105,\n                        // autowidth: true,\n                        badge: null,\n                        click: function () {\n                           _logic.toolbarFieldsVisible(this.$view);\n                        },\n                     },\n                     { responsive: \"hide\", id: ids.buttonFieldsVisibleSpacer },\n                     {\n                        view: view,\n                        id: ids.buttonFilter,\n                        label: L(\"Filters\"),\n                        icon: \"fa fa-filter\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        minWidth: 70,\n                        autowidth: true,\n                        badge: null,\n                        click: function () {\n                           _logic.toolbarFilter(this.$view);\n                        },\n                     },\n                     { responsive: \"hide\" },\n                     {\n                        view: view,\n                        id: ids.buttonSort,\n                        label: L(\"Sort\"),\n                        icon: \"fa fa-sort\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        // minWidth: 60,\n                        // autowidth: true,\n                        badge: null,\n                        click: function () {\n                           _logic.toolbarSort(this.$view);\n                        },\n                     },\n                     { responsive: \"hide\", id: ids.buttonSortSpacer },\n                     {\n                        view: view,\n                        id: ids.buttonFrozen,\n                        label: L(\"Freeze\"),\n                        icon: \"fa fa-thumb-tack\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        // minWidth: 75,\n                        // autowidth: true,\n                        badge: null,\n                        click: function () {\n                           _logic.toolbarFrozen(this.$view);\n                        },\n                     },\n                     { responsive: \"hide\", id: ids.buttonFrozenSpacer },\n                     {\n                        view: view,\n                        id: ids.buttonLabel,\n                        label: L(\"Label\"),\n                        icon: \"fa fa-crosshairs\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        hidden: this.settings.isReadOnly,\n                        click: function () {\n                           _logic.toolbarDefineLabel(this.$view);\n                        },\n                     },\n                     { responsive: \"hide\", hidden: this.settings.isReadOnly },\n                     // {\n                     //  view: view,\n                     //  label: L(\"Permission\"),\n                     //  icon: \"lock\",\n                     //  type: \"icon\",\n                     //  // autowidth: true,\n                     //  click: function() {\n                     //      _logic.toolbarPermission(this.$view);\n                     //  }\n                     //\n                     // },\n                     {\n                        view: view,\n                        id: ids.buttonImport,\n                        label: L(\"Import\"),\n                        icon: \"fa fa-upload\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        // minWidth: 80,\n                        hidden: this.settings.isReadOnly,\n                        click: function () {\n                           _logic.toolbarButtonImport();\n                        },\n                     },\n                     { responsive: \"hide\", hidden: this.settings.isReadOnly },\n                     {\n                        view: view,\n                        id: ids.buttonExport,\n                        label: L(\"Export\"),\n                        icon: \"fa fa-download\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        // minWidth: 80,\n                        // autowidth: true,\n                        click: function () {\n                           _logic.toolbarButtonExport(this.$view);\n                        },\n                     },\n                     { responsive: \"hide\" },\n                     {\n                        view: view,\n                        id: ids.buttonMassUpdate,\n                        label: L(\"Edit\"),\n                        icon: \"fa fa-pencil-square-o\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        // minWidth: 65,\n                        // autowidth: true,\n                        badge: null,\n                        hidden: true,\n                        click: function () {\n                           _logic.toolbarMassUpdate(this.$view);\n                        },\n                     },\n                     {\n                        responsive: \"hide\",\n                        hidden: true,\n                        id: ids.buttonMassUpdateSpacer,\n                     },\n                     {\n                        view: view,\n                        id: ids.buttonDeleteSelected,\n                        label: L(\"Delete\"),\n                        icon: \"fa fa-trash\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        // minWidth: 85,\n                        // autowidth: true,\n                        badge: null,\n                        hidden: true,\n                        click: function () {\n                           _logic.toolbarDeleteSelected(this.$view);\n                        },\n                     },\n                     {\n                        responsive: \"hide\",\n                        hidden: true,\n                        id: ids.buttonDeleteSelectedSpacer,\n                     },\n                  ],\n               },\n               {\n                  css: { \"background-color\": \"#747d84 !important\" },\n                  hidden: this.settings.isReadOnly,\n                  cols: [\n                     {\n                        view: view,\n                        id: ids.buttonIndex,\n                        label: L(\"Add Index\"),\n                        icon: \"fa fa-plus-circle\",\n                        css: \"webix_transparent\",\n                        type: \"icon\",\n                        click: () => {\n                           this.PopupCustomIndex.open(this.CurrentObject);\n                        },\n                     },\n                     {\n                        id: ids.listIndex,\n                        cols: [],\n                     },\n                     {\n                        responsive: \"hide\",\n                     },\n                  ],\n               },\n            ],\n         };\n\n         // Our webix UI definition:\n         let UI = {\n            view: \"multiview\",\n            animate: false,\n            id: ids.component,\n            borderless: true,\n            rows: [\n               {\n                  id: ids.error,\n                  rows: [\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: 200,\n                        label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-exclamation-triangle'></div>\",\n                     },\n                     {\n                        id: ids.error_msg,\n                        view: \"label\",\n                        align: \"center\",\n                        label: L(\"There was an error\"),\n                     },\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                  ],\n               },\n               {\n                  id: ids.noSelection,\n                  rows: [\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: 200,\n                        label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-database'></div>\",\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: L(\"Select an object to work with.\"),\n                     },\n                     {\n                        cols: [\n                           {},\n                           {\n                              view: \"button\",\n                              label: L(\"Add new object\"),\n                              type: \"form\",\n                              css: \"webix_primary\",\n                              autowidth: true,\n                              click: () => {\n                                 this.emit(\"addNew\", true);\n                              },\n                           },\n                           {},\n                        ],\n                     },\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                  ],\n               },\n               {\n                  id: ids.selectedObject,\n                  type: \"wide\",\n                  paddingY: 0,\n                  // css: \"ab-data-toolbar\",\n                  // borderless: true,\n                  rows: [\n                     {\n                        cols: [newViewButton, menuWorkspaceViews],\n                     },\n                     toolbar,\n                     {\n                        padding: 0,\n                        rows: [\n                           {\n                              view: \"multiview\",\n                              animate: false,\n                              cells: [Datatable.ui(), Kanban.ui(), Gantt.ui()],\n                           },\n                           // this.settings.isInsertable\n                           //    ?\n                           {\n                              view: \"button\",\n                              type: \"form\",\n                              id: ids.buttonRowNew,\n                              css: \"webix_primary\",\n                              value: L(\"Add new row\"),\n                              hidden: this.settings.isReadOnly,\n                              click: () => {\n                                 this.rowAdd();\n                              },\n                           },\n                           // { WARNINGS ADDED HERE IF ENABLED },\n                        ],\n                     },\n                  ],\n               },\n            ],\n         };\n\n         if (this.settings.showWarnings) {\n            UI.rows[2].rows[2].rows.push(Warnings.ui());\n         }\n\n         return UI;\n      } // ui()\n\n      // Our init() function for setting up our UI\n      init(AB) {\n         this.AB = AB;\n\n         var allInits = [];\n\n         allInits.push(this.workspaceViews.init(AB));\n\n         allInits.push(Datatable.init(AB));\n         allInits.push(Gantt.init(AB));\n         allInits.push(Kanban.init(AB));\n\n         allInits.push(Track.init(AB));\n\n         // Gantt.init();\n\n         this.mockDataCollection = this.AB.datacollectionNew({});\n         this.mockDataCollection.init();\n\n         allInits.push(this.PopupCustomIndex.init(AB));\n\n         Datatable.datacollectionLoad(this.mockDataCollection);\n         Gantt.datacollectionLoad(this.mockDataCollection);\n         Kanban.datacollectionLoad(this.mockDataCollection);\n         // Gantt.datacollectionLoad(this.mockDataCollection);\n\n         allInits.push(this.PopupHeaderEditMenu.init(AB));\n\n         if (!this.settings.isReadOnly) {\n            allInits.push(this.PopupDefineLabelComponent.init(AB));\n         }\n\n         allInits.push(this.PopupFilterDataTableComponent.init(AB));\n         this.PopupFilterDataTableComponent.on(\"save\", (...params) => {\n            this.callbackFilterDataTable(...params);\n         });\n\n         allInits.push(this.PopupFrozenColumnsComponent.init(AB));\n\n         allInits.push(this.PopupHideFieldComponent.init(AB));\n\n         // PopupMassUpdateComponent.init({\n         //    // onSave:_logic.callbackAddFields\t\t\t// be notified of something...who knows...\n         // });\n\n         // if (settings.isFieldAddable) {\n         //    PopupNewDataFieldComponent.init({\n         //       onSave: _logic.callbackAddFields, // be notified when a new Field is created & saved\n         //    });\n         // }\n         if (!this.settings.isReadOnly) {\n            allInits.push(this.PopupNewDataFieldComponent.init(AB));\n            this.PopupNewDataFieldComponent.on(\"save\", (...params) => {\n               this.callbackAddFields(...params);\n               this.PopupViewSettingsComponent.emit(\"field.added\", params[0]);\n            });\n         }\n\n         // // ?? what is this for ??\n         // // var fieldList = Datatable.getFieldList();\n\n         allInits.push(this.PopupSortFieldComponent.init(AB));\n\n         allInits.push(this.PopupImportObjectComponent.init(AB));\n\n         allInits.push(this.PopupExportObjectComponent.init(AB));\n\n         allInits.push(this.PopupViewSettingsComponent.init(AB));\n         this.PopupViewSettingsComponent.on(\"added\", (view) => {\n            this.callbackViewAdded(view);\n         });\n         this.PopupViewSettingsComponent.on(\"updated\", (view) => {\n            this.callbackViewUpdated(view);\n         });\n\n         $$(this.ids.noSelection).show();\n\n         // this.refreshView();\n\n         return Promise.all(allInits);\n      }\n\n      /**\n       * @method applicationLoad\n       * Initialize the Object Workspace with the given ABApplication.\n       * @param {ABApplication} application\n       *        The current ABApplication we are working with.\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n         if (!this.settings.isReadOnly) {\n            this.PopupNewDataFieldComponent.applicationLoad(application);\n         }\n\n         // this.mockDataCollection.application = CurrentApplication;\n      }\n\n      /**\n       * @function callbackAddFields\n       * call back for when an ABFieldXXX is added to the current ABObject.\n       * @param {ABField} field\n       */\n      callbackAddFields(/* field */) {\n         this.refreshView();\n         this.loadData();\n      }\n\n      /**\n       * @function callbackDefineLabel\n       *\n       * call back for when the Define Label popup is finished.\n       */\n      // callbackDefineLabel: function () {},\n\n      /**\n       * @function callbackFilterDataTable\n       *\n       * call back for when the Define Label popup is finished.\n       */\n      async callbackFilterDataTable(filterData) {\n         this.mockDataCollection.filterCondition(filterData);\n\n         this.updateFilterButton(filterData);\n\n         var currentView = this.workspaceViews.getCurrentView();\n         currentView.filterConditions = filterData;\n\n         try {\n            await this.workspaceViews.save();\n         } catch (e) {\n            console.error(e);\n         }\n\n         this.mockDataCollection.reloadData();\n         this.refreshView();\n      }\n\n      /**\n       * @function updateFilterButton\n       *\n       * call back for when the Define Label popup is finished.\n       */\n      async updateFilterButton(filterData) {\n         var ids = this.ids;\n         var $ButtonFilter = $$(ids.buttonFilter);\n         if ($ButtonFilter) {\n            var badge = null;\n            if (filterData?.rules?.length) {\n               badge = 1;\n            }\n            $ButtonFilter.define(\"badge\", badge);\n            $ButtonFilter.refresh();\n         }\n      }\n\n      /**\n       * @function callbackFrozenColumns\n       *\n       * call back for when the hidden fields have changed.\n       */\n      async callbackFrozenColumns(frozen_field_id) {\n         var currentView = this.workspaceViews.getCurrentView();\n         currentView.frozenColumnID = frozen_field_id;\n\n         try {\n            await this.workspaceViews.save();\n         } catch (e) {\n            // intentionally left blank\n         }\n\n         this.getBadgeFrozenColumn();\n\n         this.PopupHideFieldComponent.setFrozenColumnID(\n            currentView.frozenColumnID\n         );\n         this.refreshView();\n      }\n\n      /**\n       * @function callbackFieldsVisible\n       *\n       * call back for when the hidden fields have changed.\n       */\n      async callbackFieldsVisible(hidden_fields_settings) {\n         var currentView = this.workspaceViews.getCurrentView();\n         currentView.hiddenFields = hidden_fields_settings;\n\n         try {\n            await this.workspaceViews.save();\n         } catch (e) {\n            // intentionally left blank\n         }\n\n         this.getBadgeHiddenFields();\n         this.PopupFrozenColumnsComponent.setHiddenFields(\n            hidden_fields_settings\n         );\n         this.refreshView();\n         this.getBadgeFrozenColumn();\n      }\n\n      /**\n       * @function callbackCheckboxChecked\n       *\n       * call back for when the checkbox of datatable is checked\n       */\n\n      callbackCheckboxChecked(state) {\n         if (state == \"enable\") {\n            this.enableUpdateDelete();\n         } else {\n            this.disableUpdateDelete();\n         }\n      }\n\n      // /**\n      //  * @function callbackColumnOrderChange\n      //  *\n      //  */\n      // callbackColumnOrderChange(object) {\n      //    // TODO:\n      //    _logic.getBadgeHiddenFields();\n      //    _logic.getBadgeFrozenColumn();\n      // }\n\n      refreshView() {\n         var ids = this.ids;\n         this.warningsRefresh(this.CurrentObject);\n         var currentView = this.workspaceViews.getCurrentView();\n         switch (currentView.type) {\n            case \"gantt\":\n               Gantt.show(currentView);\n               break;\n\n            case \"grid\":\n               Datatable.refreshHeader(\n                  currentView.hiddenFields,\n                  currentView.filterConditions,\n                  currentView.sortFields,\n                  currentView.frozenColumnID\n               );\n               break;\n\n            case \"kanban\":\n               Kanban.show(currentView);\n               break;\n         }\n         if (this.settings.showWarnings) {\n            Warnings.show(this.CurrentObject);\n         }\n      }\n\n      /**\n       * @function callbackHeaderEditorMenu\n       *\n       * call back for when an editor menu action has been selected.\n       * @param {string} action [ 'hide', 'filter', 'sort', 'edit', 'delete' ]\n       */\n      async callbackHeaderEditorMenu(action, field, node) {\n         switch (action) {\n            case \"hide\":\n               var currentView = this.workspaceViews.getCurrentView();\n               var newFields = [];\n               var isHidden =\n                  currentView.hiddenFields.filter((fID) => {\n                     return fID == field.columnName;\n                  }).length > 0;\n               if (isHidden) {\n                  // get remaining fields\n                  newFields = currentView.hiddenFields.filter((fID) => {\n                     return fID != field.columnName;\n                  });\n               } else {\n                  newFields = currentView.hiddenFields;\n                  newFields.push(field.columnName);\n               }\n\n               // update our Object with current hidden fields\n               currentView.hiddenFields = newFields;\n               try {\n                  await this.workspaceViews.save();\n               } catch (e) {\n                  // intentionally left blank\n               }\n               this.PopupHideFieldComponent.setSettings(\n                  currentView.hiddenFields\n               );\n               this.PopupFrozenColumnsComponent.setHiddenFields(\n                  currentView.hiddenFields\n               );\n               this.refreshView();\n               this.getBadgeHiddenFields();\n               this.getBadgeFrozenColumn();\n               break;\n\n            case \"filter\":\n               _logic.toolbarFilter($$(ids.buttonFilter).$view, field.id);\n               break;\n\n            case \"sort\":\n               this.toolbarSort($$(this.ids.buttonSort).$view, field.id);\n               break;\n\n            case \"freeze\":\n               var currentView = this.workspaceViews.getCurrentView();\n               currentView.frozenColumnID = field.columnName;\n               try {\n                  await this.workspaceViews.save();\n               } catch (e) {\n                  // intentionally left blank\n               }\n               this.PopupFrozenColumnsComponent.setValue(\n                  currentView.frozenColumnID || \"\"\n               );\n               this.PopupHideFieldComponent.setFrozenColumnID(\n                  currentView.frozenColumnID || \"\"\n               );\n               this.refreshView();\n               this.getBadgeFrozenColumn();\n               break;\n\n            case \"edit\":\n               // pass control on to our Popup:\n               if (!this.settings.isReadOnly) {\n                  this.PopupNewDataFieldComponent.show(field);\n               }\n               break;\n\n            case \"delete\":\n               // verify they mean to do this:\n               webix.confirm({\n                  title: L(\"Delete data field\"),\n                  message: L(\"Do you want to delete <b>{0}</b>?\", [\n                     field.label,\n                  ]),\n                  callback: (isOK) => {\n                     if (isOK) {\n                        this.busy();\n                        field\n                           .destroy()\n                           .then(() => {\n                              this.ready();\n                              this.refreshView();\n                              this.loadData();\n\n                              // recursive fn to remove any form/detail fields related to this field\n                              function checkPages(list, cb) {\n                                 if (list.length == 0) {\n                                    cb();\n                                 } else {\n                                    var page = list.shift();\n\n                                    // begin calling removeField for each main page in the app\n                                    // this will kick off a chain of events that will have removeField called on\n                                    // all pages, subpages, widgets and views.\n                                    page.removeField(field, (err) => {\n                                       if (err) {\n                                          cb(err);\n                                       } else {\n                                          checkPages(list, cb);\n                                       }\n                                    });\n                                 }\n                              }\n\n                              checkPages(\n                                 this.CurrentApplication.pages(),\n                                 (err) => {}\n                              );\n                           })\n                           .catch((err) => {\n                              this.ready();\n                              if (err && err.message) {\n                                 webix.alert({\n                                    type: \"alert-error\",\n                                    title: L(\"Could not delete\"),\n                                    text: err.message,\n                                 });\n                              }\n\n                              this.AB.notify.developer(err, {\n                                 context: \"Error trying to delete field\",\n                                 fields: field.toObj(),\n                              });\n                           });\n                     }\n                  },\n               });\n               break;\n         }\n      }\n\n      busy() {\n         $$(this.ids.component)?.showProgress?.({ type: \"icon\" });\n      }\n\n      /**\n       * @function callbackMassUpdate\n       *\n       * call back for when the mass update is fired\n       */\n      callbackMassUpdate() {\n         // _logic.getBadgeSortFields();\n         _logic.loadData();\n      }\n\n      /**\n       * @function callbackSortFields\n       *\n       * call back for when the sort fields popup changes\n       **/\n      async callbackSortFields(sort_settings) {\n         var currentView = this.workspaceViews.getCurrentView();\n         currentView.sortFields = sort_settings;\n         await this.workspaceViews.save();\n         this.getBadgeSortFields();\n         this.refreshView();\n         this.loadData();\n      }\n\n      /**\n       * @function callbackViewAdded\n       *\n       * call back for when a new workspace view is added\n       */\n      async callbackViewAdded(view) {\n         var newView = await this.workspaceViews.viewNew(view);\n         await this.switchWorkspaceView(newView);\n         this.refreshView();\n         this.loadData();\n      }\n\n      /**\n       * @function callbackViewUpdated\n       *\n       * call back for when a workspace view is updated\n       */\n      async callbackViewUpdated(view) {\n         await this.workspaceViews.viewUpdate(view);\n         this.refreshWorkspaceViewMenu();\n         this.refreshView();\n      }\n\n      /**\n       * @function enableUpdateDelete\n       *\n       * enable the update or delete buttons in the toolbar if there are any items selected\n       * we will make this externally accessible so we can call it from within the datatable component\n       */\n      enableUpdateDelete() {\n         var ids = this.ids;\n         $$(ids.buttonMassUpdate).show();\n         $$(ids.buttonMassUpdateSpacer).show();\n         $$(ids.buttonDeleteSelected).show();\n         $$(ids.buttonDeleteSelectedSpacer).show();\n      }\n\n      /**\n       * @function enableUpdateDelete\n       *\n       * disable the update or delete buttons in the toolbar if there no items selected\n       * we will make this externally accessible so we can call it from within the datatable component\n       */\n      disableUpdateDelete() {\n         var ids = this.ids;\n         $$(ids.buttonMassUpdate).hide();\n         $$(ids.buttonMassUpdateSpacer).hide();\n         $$(ids.buttonDeleteSelected).hide();\n         $$(ids.buttonDeleteSelectedSpacer).hide();\n      }\n\n      /**\n       * @function getBadgeFilters\n       *\n       * we need to set the badge count for filters on load and after filters are added or removed\n       */\n\n      getBadgeFilters() {\n         var ids = this.ids;\n         var filterConditions = this.workspaceViews.filterConditions;\n         var numberOfFilter = 0;\n\n         if (filterConditions?.rules?.length)\n            numberOfFilter = filterConditions.rules.length;\n\n         if (typeof filterConditions != \"undefined\") {\n            $$(ids.buttonFilter).define(\"badge\", numberOfFilter || null);\n            $$(ids.buttonFilter).refresh();\n         }\n      }\n\n      /**\n       * @function getBadgeFrozenColumn\n       *\n       * we need to set the badge count for frozen columns on load and after changed are added or removed\n       */\n\n      getBadgeFrozenColumn() {\n         var ids = this.ids;\n         var frozenID = this.workspaceViews.frozenColumnID;\n         var badgeNumber = null;\n\n         // get the current position of the frozenID in our Datatable\n         if (frozenID !== \"\" && typeof frozenID != \"undefined\") {\n            badgeNumber = Datatable.getColumnIndex(frozenID);\n         }\n\n         $$(ids.buttonFrozen).define(\"badge\", badgeNumber);\n         $$(ids.buttonFrozen).refresh();\n      }\n\n      /**\n       * @function getBadgeHiddenFields\n       *\n       * we need to set the badge count for hidden fields on load and after fields are hidden or shown\n       */\n\n      getBadgeHiddenFields() {\n         var hiddenFields = this.workspaceViews.hiddenFields;\n\n         if (typeof hiddenFields != \"undefined\") {\n            $$(this.ids.buttonFieldsVisible).define(\n               \"badge\",\n               hiddenFields.length || null\n            );\n            $$(this.ids.buttonFieldsVisible).refresh();\n         }\n      }\n\n      /**\n       * @function getBadgeSortFields\n       *\n       * we need to set the badge count for sorts on load and after sorts are added or removed\n       */\n\n      getBadgeSortFields() {\n         var ids = this.ids;\n         var sortFields = (this.workspaceViews.sortFields || []).filter(\n            (f) => f.key != \"\"\n         );\n\n         if (typeof sortFields != \"undefined\") {\n            $$(ids.buttonSort).define(\"badge\", sortFields.length || null);\n            $$(ids.buttonSort).refresh();\n         }\n      }\n\n      ready() {\n         $$(this.ids.component)?.hideProgress?.();\n      }\n\n      /**\n       * @function rowAdd()\n       *\n       * When our [add row] button is pressed, alert our DataTable\n       * component to add a row.\n       */\n      async rowAdd() {\n         // safety check\n         // if (!this.settings.isEditable) return;\n\n         // create the new data entry\n\n         var object = this.CurrentObject;\n         if (!object) return;\n\n         var emptyObj = object.defaultValues();\n         try {\n            var newObj = await object.model().create(emptyObj);\n            if (newObj == null) return;\n\n            // Now stick this into the DataCollection so the displayed widget\n            // will update itself:\n            var dc = this.mockDataCollection.$dc;\n            if (dc && !dc.exists(newObj.id)) {\n               dc.add(newObj, 0);\n            }\n         } catch (e) {\n            this.AB.notify.developer(e, {\n               context:\n                  \"ui_work_object_workspace:rowAdd(): error creating empty object\",\n               emptyObj,\n            });\n\n            var L = this.AB.Label();\n            webix.alert({\n               title: L(\"Unable to create new row\"),\n               text: L(\"An administrator has already been alerted.\"),\n            });\n         }\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n      }\n\n      /**\n       * @function toolbarAddFields\n       *\n       * Show the popup to allow the user to create new fields for\n       * this object.\n       */\n      toolbarAddFields($view) {\n         this.PopupNewDataFieldComponent.show();\n      }\n\n      toolbarButtonImport() {\n         this.PopupImportObjectComponent.show();\n      }\n\n      toolbarButtonExport($view) {\n         this.PopupExportObjectComponent.show($view);\n      }\n\n      toolbarDeleteSelected($view) {\n         // Pass this onto our Datatable to reuse the ABViewGrid's\n         // delete selection routines.\n         Datatable.deleteSelected($view);\n      }\n\n      /**\n       * @function toolbarDefineLabel\n       *\n       * Show the popup to allow the user to define the default label for\n       * this object.\n       */\n      toolbarDefineLabel($view) {\n         this.PopupDefineLabelComponent.show($view);\n      }\n\n      /**\n       * @function toolbarFieldsVisible\n       *\n       * Show the popup to allow the user to hide columns for this view.\n       */\n      toolbarFieldsVisible($view) {\n         this.PopupHideFieldComponent.show($view);\n      }\n\n      /**\n       * @function toolbarFilter\n       *\n       * show the popup to add a filter to the datatable\n       */\n      toolbarFilter($view, fieldId) {\n         this.PopupFilterDataTableComponent.show($view, fieldId);\n      }\n\n      /**\n       * @function toolbarFrozen\n       *\n       * show the popup to freeze columns for the datatable\n       */\n      toolbarFrozen($view) {\n         this.PopupFrozenColumnsComponent.show($view);\n      }\n\n      toolbarPermission($view) {\n         console.error(\"TODO: toolbarPermission()\");\n      }\n\n      toolbarMassUpdate($view) {\n         Datatable.massUpdate($view);\n      }\n\n      /**\n       * @function toolbarSort\n       *\n       * show the popup to sort the datatable\n       */\n      toolbarSort($view, fieldId) {\n         this.PopupSortFieldComponent.show($view, fieldId);\n      }\n\n      /**\n       * @method populateObjectWorkspace()\n       * Initialize the Object Workspace with the provided ABObject.\n       * @param {uuid} objectID\n       *        current ABObject.id instance we are working with.\n       */\n      async populateObjectWorkspace(objectID) {\n         $$(this.ids.toolbar).show();\n         $$(this.ids.selectedObject).show();\n\n         this.CurrentObjectID = objectID;\n         var object = this.CurrentObject;\n\n         // get current view from object\n         this.workspaceViews.objectLoad(object);\n         var currentView = this.workspaceViews.getCurrentView();\n         // {WorkspaceView}\n         // The current workspace view that is being displayed in our work area\n         // currentView.component {ABViewGrid | ABViewKanBan | ABViewGantt}\n\n         this.mockDataCollection.datasource = object;\n\n         Datatable.objectLoad(object);\n         Kanban.objectLoad(object);\n         Gantt.objectLoad(object);\n\n         if (!this.settings.isReadOnly) {\n            this.PopupNewDataFieldComponent.objectLoad(object);\n            this.PopupDefineLabelComponent.objectLoad(object);\n         }\n         this.PopupFilterDataTableComponent.objectLoad(object);\n         this.PopupFrozenColumnsComponent.objectLoad(object);\n\n         this.PopupHideFieldComponent.objectLoad(object);\n\n         this.PopupSortFieldComponent.objectLoad(object);\n\n         this.PopupImportObjectComponent.objectLoad(object);\n\n         this.PopupExportObjectComponent.objectLoad(object);\n\n         // NOTE: make sure Datatable exists before this:\n         if (!this._handler_show) {\n            this._handler_show = () => {\n               this.PopupExportObjectComponent.setGridComponent(\n                  Datatable.$grid\n               );\n            };\n            Datatable.on(\"show\", this._handler_show);\n         }\n\n         this.PopupExportObjectComponent.setFilename(object.label);\n         this.PopupViewSettingsComponent.objectLoad(object);\n\n         // _logic.refreshToolBarView();\n\n         this.refreshIndexes();\n\n         // // $$(ids.component).setValue(ids.selectedObject);\n         // $$(ids.selectedObject).show(true, false);\n\n         // // disable add fields into the object\n         // if (\n         //    object.isExternal ||\n         //    object.isImported ||\n         //    !settings.isFieldAddable\n         // ) {\n         //    $$(ids.buttonAddField).disable();\n         //    $$(ids.buttonImport).disable();\n         // } else {\n         //    $$(ids.buttonAddField).enable();\n         //    $$(ids.buttonImport).enable();\n         // }\n\n         await this.switchWorkspaceView(currentView);\n         this.refreshWorkspaceViewMenu();\n\n         this.refreshView();\n\n         // // display the proper ViewComponent\n         // var currDisplay = hashViews[currentView.type];\n         // currDisplay.show();\n         // // viewPicker needs to show this is the current view.\n      }\n\n      /**\n       * @function clearObjectWorkspace()\n       *\n       * Clear the object workspace.\n       */\n      clearObjectWorkspace() {\n         // NOTE: to clear a visual glitch when multiple views are updating\n         // at one time ... stop the animation on this one:\n         $$(this.ids.noSelection).show(false, false);\n      }\n\n      queryLoad(query) {\n         // attempt to use a query as an object\n         this.objectLoad(query);\n      }\n\n      // get CurrentObject() {\n      //    return this.AB.objectByID(this.CurrentObjectID);\n      // }\n\n      /**\n       * @function loadAll\n       * Load all records\n       *\n       */\n      loadAll() {\n         Datatable.loadAll();\n      }\n\n      loadData() {\n         // update ABViewDataCollection settings\n         var wheres = {\n            glue: \"and\",\n            rules: [],\n         };\n         // ! there is some strange data coming from the server\n         // TODO @achoobert fix it\n         if (this.workspaceViews?.filterConditions[0]?.rules?.length > 0) {\n            wheres = this.workspaceViews.filterConditions[0].rules;\n            // fix this so it can be used later\n            this.workspaceViews.filterConditions.rules =\n               this.workspaceViews.filterConditions[0].rules;\n         } else if (this.workspaceViews?.filterConditions?.rules?.length > 0) {\n            wheres = this.workspaceViews.filterConditions;\n         }\n\n         var sorts = [];\n         if (this.workspaceViews?.sortFields?.length > 0) {\n            sorts = this.workspaceViews?.sortFields;\n         }\n\n         this.mockDataCollection.datasource = this.CurrentObject;\n\n         this.mockDataCollection.fromValues({\n            settings: {\n               datasourceID: this.CurrentObjectID,\n               objectWorkspace: {\n                  filterConditions: wheres,\n                  sortFields: sorts,\n               },\n            },\n         });\n\n         // update the DC with workspace filter conditions sent from the server\n         this.mockDataCollection.filterCondition(wheres);\n         this.updateFilterButton(wheres);\n\n         this.mockDataCollection.refreshFilterConditions(wheres);\n         this.mockDataCollection.clearAll();\n\n         // WORKAROUND: load all data becuase kanban does not support pagination now\n         let view = this.workspaceViews.getCurrentView();\n         if (view.type === \"gantt\" || view.type === \"kanban\") {\n            this.mockDataCollection.settings.loadAll = true;\n            this.mockDataCollection.loadData(0);\n         } else {\n            this.mockDataCollection.loadData(0, 30).catch((err) => {\n               this.toolbarFilter(this.$view);\n               var message = err.toString();\n               if (typeof err == \"string\") {\n                  try {\n                     var jErr = JSON.parse(err);\n                     if (jErr.data && jErr.data.sqlMessage) {\n                        message = jErr.data.sqlMessage;\n                     }\n                  } catch (e) {}\n               }\n               if (err.message) {\n                  message = err.message;\n               }\n               var ids = this.ids;\n               $$(ids.error).show();\n               $$(ids.error_msg).define(\"label\", message);\n               $$(ids.error_msg).refresh();\n\n               // webix.alert({\n               //     title: \"Error loading object Values \",\n               //     ok: \"fix it\",\n               //     text: message,\n               //     type: \"alert-error\"\n               // });\n               this.AB.notify.developer(err, {\n                  context: \"ui_work_object_workspace.loadData()\",\n                  message,\n                  datacollection: this.mockDataCollection.toObj(),\n               });\n            });\n         }\n      }\n\n      async switchWorkspaceView(view) {\n         if (this.hashViews[view.type]) {\n            this.workspaceViews.setCurrentView(view.id);\n            await this.hashViews[view.type].show(view);\n            this.refreshWorkspaceViewMenu();\n\n            // now update the rest of the toolbar for this view:\n            this.refreshToolBarView();\n\n            // make sure our Popups are updated:\n            this.PopupFilterDataTableComponent.setFilter(view.filterConditions);\n            this.PopupFrozenColumnsComponent.setValue(\n               view.frozenColumnID || \"\"\n            );\n            this.PopupFrozenColumnsComponent.setHiddenFields(view.hiddenFields);\n\n            this.PopupHideFieldComponent.setSettings(view.hiddenFields);\n            this.PopupHideFieldComponent.setFrozenColumnID(\n               view.frozenColumnID || \"\"\n            );\n\n            this.PopupSortFieldComponent.setSettings(view.sortFields);\n\n            this.PopupExportObjectComponent.setHiddenFields(view.hiddenFields);\n\n            // save current view\n            this.workspaceViews.save();\n\n            this.loadData();\n         }\n      }\n\n      /**\n       * @function refreshToolBarView\n       * update the display of the toolbar buttons based upon\n       * the current view being displayed.\n       */\n      refreshToolBarView() {\n         var ids = this.ids;\n\n         var currentView = this.workspaceViews.getCurrentView();\n         switch (currentView.type) {\n            case \"grid\":\n               $$(ids.buttonFieldsVisible).show();\n               $$(ids.buttonFrozen).show();\n               $$(ids.buttonSort).show();\n               $$(ids.buttonFieldsVisibleSpacer).show();\n               $$(ids.buttonFrozenSpacer).show();\n               $$(ids.buttonSortSpacer).show();\n               break;\n            case \"kanban\":\n               $$(ids.buttonFieldsVisible).hide();\n               $$(ids.buttonFrozen).hide();\n               $$(ids.buttonSort).hide();\n               $$(ids.buttonFieldsVisibleSpacer).hide();\n               $$(ids.buttonFrozenSpacer).hide();\n               $$(ids.buttonSortSpacer).hide();\n               break;\n         }\n\n         // get badge counts\n         this.getBadgeHiddenFields();\n         this.getBadgeFrozenColumn();\n         this.getBadgeSortFields();\n         this.getBadgeFilters();\n\n         // $$(ids.component).setValue(ids.selectedObject);\n         $$(ids.selectedObject).show(true, false);\n\n         // disable add fields into the object\n         if (this.CurrentObject.isExternal || this.CurrentObject.isImported) {\n            $$(ids.buttonAddField).disable();\n         } else {\n            $$(ids.buttonAddField).enable();\n         }\n      }\n\n      /**\n       * @method refreshWorkspaceViewMenu()\n       * On the top of our workspace, we show a list if different views\n       * of our current object: Grid, Kanban, Gantt, etc...\n       * This method will redraw those selectors based upon our current\n       * settings.\n       */\n      refreshWorkspaceViewMenu() {\n         var currentViewId = this.workspaceViews.getCurrentView().id;\n         var submenu = this.workspaceViews.list().map((view) => ({\n            id: view.id,\n            hash: view.type,\n            value: view.name,\n            isView: true,\n            $css: view.id === currentViewId ? \"selected\" : \"\",\n            icon: `fa fa-${view.icon}`, // view.constructor.icon(),\n            submenu: view.isDefaultView\n               ? null\n               : [\n                    {\n                       value: L(\"Edit\"),\n                       icon: \"fa fa-cog\",\n                       viewId: view.id,\n                       action: \"edit\",\n                    },\n                    {\n                       value: L(\"Delete\"),\n                       icon: \"fa fa-trash\",\n                       viewId: view.id,\n                       action: \"delete\",\n                    },\n                 ],\n         }));\n\n         // var currView = this.CurrentObject.workspaceViews.getCurrentView();\n         // var icon = currView.constructor.icon();\n         var $viewMenu = $$(this.ids.viewMenu);\n         $viewMenu.clearAll();\n         $viewMenu.define(\"data\", submenu);\n         $viewMenu.refresh();\n      }\n\n      refreshIndexes() {\n         let indexes = this.CurrentObject?.indexes() || [];\n\n         // clear indexes list\n         webix.ui([], $$(this.ids.listIndex));\n\n         indexes.forEach((index) => {\n            this.addNewIndex(index);\n         });\n      }\n\n      addNewIndex(index) {\n         $$(this.ids.listIndex).addView({\n            view: \"button\",\n            label: index.label || index.name,\n            icon: \"fa fa-key\",\n            css: \"webix_transparent\",\n            type: \"icon\",\n            width: 160,\n            click: () => {\n               this.PopupCustomIndex.open(this.CurrentObject, index);\n            },\n         });\n      }\n   }\n\n   return new UIWorkObjectWorkspace(ibase, init_settings);\n}\n","/*\n * ui_work_object_workspace_popupCountColumns\n *\n * Manage the Count Columns popup.\n *\n */\n\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupCountColumns\";\n   // const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_Workspace_PopupCountColumns extends UIClass {\n      constructor(base) {\n         super(base, {\n            list: \"\",\n         });\n\n         this.CountFieldIds = [];\n         // {array}\n         // An array of the ABField.ids that are our count fileds.\n      }\n\n      // Our webix UI definition:\n      ui() {\n         const ids = this.ids;\n\n         return {\n            id: ids.component,\n            view: \"popup\",\n            body: {\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           value: L(\"Select All\"),\n                           on: {\n                              onItemClick: () => {\n                                 this.clickShowAll();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           value: L(\"Unselect All\"),\n                           on: {\n                              onItemClick: () => {\n                                 this.clickHideAll();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.list,\n                     view: \"list\",\n                     maxHeight: 250,\n                     select: false,\n                     template:\n                        '<span style=\"min-width: 18px; display: inline-block;\"><i class=\"fa ab-count-field-icon\"></i>&nbsp;</span> #label#',\n                     on: {\n                        onItemClick: (id, e, node) => {\n                           this.clickListItem(id, e, node);\n                        },\n                     },\n                  },\n               ],\n            },\n            on: {\n               onShow: () => {\n                  this.onShow();\n               },\n            },\n         };\n      }\n\n      // Our init() function for setting up our UI\n      init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n         return Promise.resolve();\n      }\n\n      onChange() {\n         this.emit(\"changed\", this.CountFieldIds);\n      }\n\n      /**\n       * @method clickHideAll\n       * the user clicked the [hide all] option.  So hide all our fields.\n       */\n      clickHideAll() {\n         var List = $$(this.ids.list);\n\n         // pass an array is empty\n         this.CountFieldIds = [];\n\n         // hide all icons\n         List.find({}).forEach((item) => {\n            this.iconHide(item.id);\n         });\n\n         this.onChange();\n      }\n\n      /**\n       * @method clickShowAll\n       * the user clicked the [show all] option.  So show all our fields.\n       */\n      clickShowAll() {\n         var List = $$(this.ids.list);\n\n         this.CountFieldIds = List.find({}).map((f) => f.id);\n\n         // show all icons\n         List.find({}).forEach((item) => {\n            this.iconShow(item.id);\n         });\n\n         this.onChange();\n      }\n\n      /**\n       * @function clickListItem\n       * update the clicked field setting.\n       */\n      clickListItem(fieldId) {\n         // select\n         if (this.CountFieldIds.indexOf(fieldId) < 0) {\n            this.CountFieldIds.push(fieldId);\n\n            this.iconShow(fieldId);\n         }\n         // unselect\n         else {\n            this.CountFieldIds = this.CountFieldIds.filter(\n               (fid) => fid != fieldId\n            );\n\n            this.iconHide(fieldId);\n         }\n\n         this.onChange();\n      }\n\n      /**\n       * @method getValue()\n       * return the current value of the Summary Columns settings.\n       */\n      getValue() {\n         return this.CountFieldIds;\n      }\n\n      /**\n       * @function iconHide\n       * Hide the icon for the given node\n       * @param {DOM} node  the html dom node of the element that contains our icon\n       */\n      iconHide(fieldId) {\n         var List = $$(this.ids.list);\n         var $node = List.getItemNode(fieldId);\n         if ($node) {\n            $node\n               .querySelector(\".ab-count-field-icon\")\n               .classList.remove(\"fa-circle\");\n         }\n      }\n\n      /**\n       * @function iconShow\n       * Show the icon for the given node\n       * @param {DOM} node  the html dom node of the element that contains our icon\n       */\n      iconShow(fieldId) {\n         var List = $$(this.ids.list);\n         var $node = List.getItemNode(fieldId);\n         if ($node) {\n            $node\n               .querySelector(\".ab-count-field-icon\")\n               .classList.add(\"fa-circle\");\n         }\n      }\n\n      /**\n       * @function setValue\n       *\n       * @param {array} - an array contains field ids\n       */\n      setValue(fieldIds) {\n         this.CountFieldIds = fieldIds || [];\n         this.onShow();\n      }\n\n      /**\n       * @function onShow\n       * Ready the Popup according to the current object each time it is shown (perhaps a field was created or delted)\n       */\n      onShow() {\n         // refresh list\n         var allFields = this.CurrentObject.fields().map((f) => {\n            return {\n               id: f.id,\n               label: f.label,\n            };\n         });\n\n         $$(this.ids.list).clearAll();\n         $$(this.ids.list).parse(allFields);\n\n         // update icons\n         this.CountFieldIds.forEach((fieldId) => {\n            this.iconShow(fieldId);\n         });\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       * @param {obj} $view  the webix.$view to hover the popup around.\n       */\n      show(...params) {\n         $$(this.ids.component).show(...params);\n      }\n   }\n   return new UI_Work_Object_Workspace_PopupCountColumns(ibase);\n}\n","/*\n * ui_work_object_workspace_popupIndex\n *\n * Manage the Object Workspace custom index popup.\n *\n */\nimport UI_Class from \"./ui_class\";\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupIndex\";\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   const ABIndex = AB.Class.ABIndex;\n\n   class UI_Work_Object_Workspace_PopupIndex extends UIClass {\n      /**\n       * @param {object} App\n       * @param {string} idBase\n       */\n      constructor(base) {\n         super(base, {\n            // component: idBase,\n            popup: \"\",\n            form: \"\",\n            name: \"\",\n            fields: \"\",\n            unique: \"\",\n            removeButton: \"\",\n            saveButton: \"\",\n         });\n      }\n\n      // Our webix UI definition:\n      ui() {\n         let ids = this.ids;\n\n         return {\n            view: \"window\",\n            id: ids.popup,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Custom Index\"),\n                     css: \"modal_title\",\n                     align: \"center\",\n                  },\n                  {\n                     view: \"button\",\n                     autowidth: true,\n                     // width: 50,\n                     type: \"icon\",\n                     icon: \"nomargin fa fa-times\",\n                     click: () => {\n                        this.close();\n                     },\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            position: \"center\",\n            resize: true,\n            modal: true,\n            editable: false,\n            width: 500,\n            height: 500,\n            body: {\n               view: \"form\",\n               id: ids.form,\n               elements: [\n                  {\n                     id: ids.name,\n                     view: \"text\",\n                     label: L(\"Name\"),\n                     name: \"name\",\n                  },\n                  {\n                     id: ids.fields,\n                     view: \"multicombo\",\n                     label: L(\"Fields\"),\n                     name: \"fieldIDs\",\n                     options: [],\n                  },\n                  {\n                     id: ids.unique,\n                     view: \"checkbox\",\n                     label: L(\"Unique\"),\n                     name: \"unique\",\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.removeButton,\n                           view: \"button\",\n                           type: \"icon\",\n                           icon: \"fa fa-trash-o\",\n                           css: \"webix_danger\",\n                           width: 40,\n                           click: () => this.removeIndex(),\n                        },\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           width: 100,\n                           click: () => this.close(),\n                        },\n                        {\n                           id: ids.saveButton,\n                           view: \"button\",\n                           type: \"icon\",\n                           icon: \"fa fa-floppy-o\",\n                           css: \"webix_primary\",\n                           label: L(\"Save\"),\n                           width: 100,\n                           click: () => this.save(),\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n\n         let $form = $$(this.ids.form);\n         if ($form) {\n            webix.extend($form, webix.ProgressBar);\n         }\n      }\n\n      open(object, index) {\n         this.CurrentObjectID = object.id;\n         this.CurrentIndex = index;\n\n         let ids = this.ids;\n         let $popup = $$(ids.popup);\n         if (!$popup) return;\n\n         $popup.show();\n\n         let $fields = $$(ids.fields);\n         if ($fields && this.CurrentObject) {\n            var allowedFields = [\n               \"number\",\n               \"date\",\n               \"datetime\",\n               \"boolean\",\n               \"list\",\n               \"email\",\n               \"user\",\n               \"AutoIndex\",\n               \"combined\",\n            ];\n\n            let fields = this.CurrentObject.fields((f) => {\n               return (\n                  allowedFields.indexOf(f.key) > -1 ||\n                  ((f.key == \"string\" || f.key == \"LongText\") &&\n                     f.settings &&\n                     !f.settings.supportMultilingual) ||\n                  (f.key == \"connectObject\" &&\n                     // 1:M\n                     ((f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                        // 1:1 isSource = true\n                        (f.settings.linkType == \"one\" &&\n                           f.settings.linkViaType == \"one\" &&\n                           f.settings.isSource)))\n               );\n            }).map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n            $fields.define(\"options\", fields);\n            $fields.refresh();\n         }\n\n         let $form = $$(this.ids.form);\n         if ($form) {\n            $form.clear();\n\n            if (index) $form.setValues(index.toObj());\n         }\n\n         let $name = $$(ids.name);\n         let $unique = $$(ids.unique);\n         let $saveButton = $$(ids.saveButton);\n         let $removeButton = $$(ids.removeButton);\n\n         // Edit\n         if (this.CurrentIndex) {\n            $name.disable();\n            $fields.disable();\n            $unique.disable();\n            $saveButton.hide();\n            $removeButton.show();\n         }\n         // Add new\n         else {\n            $name.enable();\n            $fields.enable();\n            $unique.enable();\n            $saveButton.show();\n            $removeButton.hide();\n         }\n      }\n\n      async save() {\n         let $form = $$(this.ids.form);\n         if (!$form) return;\n\n         this.busy();\n\n         let vals = $form.getValues();\n         vals.fieldIDs = vals.fieldIDs.split(\",\");\n\n         // Add new\n         if (this.CurrentIndex == null)\n            this.CurrentIndex = new ABIndex(vals, this.CurrentObject);\n\n         // update values\n         this.CurrentIndex.fromValues(vals);\n         try {\n            await this.CurrentIndex.save();\n\n            this.ready();\n            this.emit(\"changed\");\n            this.close();\n         } catch (err) {\n            let message = L(\"The system could not create your index.\");\n            switch (err.code) {\n               case \"ER_DUP_ENTRY\":\n                  message = `${message} : ${L(\n                     \"There are duplicated values in this column.\"\n                  )}`;\n                  break;\n            }\n\n            this.AB.notify.developer(err, {\n               context: `${this.ids.component}:save()`,\n               message,\n               vals,\n            });\n\n            webix.alert({\n               type: \"alert-error\",\n               title: L(\"Failed\"),\n               text: message,\n            });\n            this.ready();\n         }\n      }\n\n      close() {\n         let $popup = $$(this.ids.popup);\n         if (!$popup) return;\n         $popup.hide();\n      }\n\n      busy() {\n         $$(this.ids.form)?.showProgress?.({ type: \"icon\" });\n         $$(this.ids.saveButton)?.disable();\n         $$(this.ids.removeButton)?.disable();\n      }\n\n      ready() {\n         $$(this.ids.form)?.hideProgress?.();\n         $$(this.ids.saveButton)?.enable();\n         $$(this.ids.removeButton)?.enable();\n      }\n\n      removeIndex() {\n         if (!this.CurrentIndex) return;\n\n         webix.confirm({\n            title: L(\"Delete this Index\"),\n            message: L(\"Do you want to remove this index ?\"),\n            callback: async (isOK) => {\n               if (isOK) {\n                  this.busy();\n\n                  try {\n                     await this.CurrentIndex.destroy();\n                     this.ready();\n                     this.emit(\"changed\");\n                     this.close();\n                  } catch (err) {\n                     this.AB.notify.developer(err, {\n                        context: `${this.ids.component}:removeIndex()`,\n                        ABIndex: this.CurrentIndex.toObj(),\n                     });\n                     this.ready();\n                  }\n               }\n            },\n         });\n      }\n   }\n\n   return new UI_Work_Object_Workspace_PopupIndex(ibase);\n}\n","/*\n * ui_work_object_workspace_popupDefineLabel\n *\n * Manage the Add New Data Field popup.\n *\n */\nimport UI_Class from \"./ui_class\";\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupDefineLabel\";\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_Workspace_PopupDefineLabel extends UIClass {\n      constructor(base) {\n         super(base, {\n            // component: idBase,\n            format: \"\",\n            list: \"\",\n            buttonSave: \"\",\n         });\n      }\n\n      ui() {\n         let ids = this.ids;\n\n         // webix UI definition:\n         return {\n            view: \"popup\",\n            id: ids.component,\n            modal: true,\n            autoheight: true,\n            // maxHeight: 420,\n            width: 500,\n            body: {\n               rows: [\n                  {\n                     view: \"label\",\n                     label: L(\"<b>Label format</b>\"),\n                  },\n                  {\n                     view: \"textarea\",\n                     id: ids.format,\n                     height: 100,\n                  },\n                  {\n                     view: \"label\",\n                     label: L(\"Select field item to generate format.\"),\n                  },\n                  {\n                     view: \"label\",\n                     label: L(\"<b>Fields</b>\"),\n                  },\n                  {\n                     view: \"list\",\n                     name: \"columnList\",\n                     id: ids.list,\n                     width: 500,\n                     height: 180,\n                     maxHeight: 180,\n                     select: false,\n                     template: \"#label#\",\n                     on: {\n                        onItemClick: (id, e, node) => {\n                           this.onItemClick(id, e, node);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                  },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           name: \"cancel\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           name: \"save\",\n                           id: ids.buttonSave,\n                           label: L(\"Save\"),\n                           type: \"form\",\n                           autowidth: true,\n                           click: () => {\n                              this.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n            on: {\n               onShow: () => {\n                  this.onShow();\n               },\n            },\n         };\n      }\n\n      // for setting up UI\n      init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n\n         webix.extend($$(this.ids.list), webix.ProgressBar);\n      }\n\n      changed() {\n         this.emit(\"changed\", this._settings);\n      }\n\n      buttonCancel() {\n         $$(this.ids.component).hide();\n      }\n\n      async buttonSave() {\n         var ids = this.ids;\n\n         // disable our save button\n         var ButtonSave = $$(ids.buttonSave);\n         ButtonSave.disable();\n\n         // get our current labelFormt\n         var labelFormat = $$(ids.format).getValue();\n\n         // start our spinner\n         var List = $$(ids.list);\n         List.showProgress({ type: \"icon\" });\n\n         // convert from our User Friendly {Label} format to our\n         // object friendly {Name} format\n         List.data.each(function (d) {\n            labelFormat = labelFormat.replace(\n               new RegExp(\"{\" + d.label + \"}\", \"g\"),\n               \"{\" + d.id + \"}\"\n            );\n         });\n\n         // save the value\n         this.CurrentObject.labelFormat = labelFormat;\n         try {\n            await this.CurrentObject.save();\n\n            // all good, so\n\n            this.hide(); // hide the popup\n\n            // alert our parent component we are done with our changes:\n            this.changed();\n         } catch (err) {\n            // display some error to the user:\n            this.AB.notify.developer(err, {\n               context:\n                  \"ui_work_object_workspace_popupDefineLabel:buttonSave(): Error trying to save our Object\",\n            });\n         }\n         List.hideProgress(); // hide the spinner\n         ButtonSave.enable(); // enable the save button\n      }\n\n      hide() {\n         $$(this.ids.component).hide();\n      }\n\n      objectLoad(object) {\n         super.objectLoad(object);\n\n         // clear our list\n         var List = $$(this.ids.list);\n         List.clearAll();\n\n         // refresh list with new set of fields\n         var listFields = object\n            .fields((f) => {\n               return f.fieldUseAsLabel();\n            })\n            .map((f) => {\n               return {\n                  id: f.id,\n                  label: f.label,\n               };\n            });\n\n         List.parse(listFields);\n         List.refresh();\n      }\n\n      onItemClick(id /*, e, node */) {\n         var ids = this.ids;\n         var selectedItem = $$(ids.list).getItem(id);\n         var labelFormat = $$(ids.format).getValue();\n         labelFormat += `{${selectedItem.label}}`;\n         $$(ids.format).setValue(labelFormat);\n      }\n\n      onShow() {\n         var ids = this.ids;\n\n         var labelFormat = this.CurrentObject.labelFormat;\n         var Format = $$(ids.format);\n         var List = $$(ids.list);\n\n         Format.setValue(\"\");\n         Format.enable();\n         List.enable();\n         $$(ids.buttonSave).enable();\n\n         // our labelFormat should be in a computer friendly {name} format\n         // here we want to convert it to a user friendly {label} format\n         // to use in our popup:\n         if (labelFormat) {\n            if (List.data?.count() > 0) {\n               List.data.each(function (d) {\n                  labelFormat = labelFormat.replace(\n                     new RegExp(`{${d.id}}`, \"g\"),\n                     `{${d.label}}`\n                  );\n               });\n            }\n         } else {\n            // no label format:\n            // Default to first field\n            if (List.data?.count() > 0) {\n               var field = List.getItem(List.getFirstId());\n               labelFormat = `{${field.label}}`;\n            }\n         }\n\n         Format.setValue(labelFormat || \"\");\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       * @param {obj} $view  the webix.$view to hover the popup around.\n       */\n      show($view) {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   return new UI_Work_Object_Workspace_PopupDefineLabel(ibase);\n}\n","/*\n * ab_work_object_workspace_popupExport\n *\n * Manage the Export object to files popup.\n *\n */\nimport UI_Class from \"./ui_class\";\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupExport\";\n   const UIClass = UI_Class(AB);\n   // var L = UIClass.L();\n\n   class UI_Work_Object_PopupExport extends UIClass {\n      constructor(base) {\n         super(base, {\n            popupExport: \"\",\n            list: \"\",\n         });\n\n         this.DatacollectionID = null;\n         // {string}\n         // the ABDataCollection.id of the DC we are working with.\n\n         this.grid = null;\n         // {webix.grid}\n         // the webix grid UI containing our data.\n\n         this.filename = null;\n         // {string}\n         // the name of the exported file\n\n         this.hiddenFields = [];\n         // {array} [ABField.columnName, ... ]\n         // an array of the columnNames of the hidden fields.\n      }\n\n      ui() {\n         var self = this;\n\n         // webix UI definition:\n         return {\n            view: \"popup\",\n            id: this.ids.popupExport,\n            width: 160,\n            height: 180,\n            select: false,\n            hidden: true,\n            body: {\n               id: this.ids.list,\n               view: \"list\",\n               data: [\n                  { name: \"CSV\", icon: \"file-excel-o\" },\n                  { name: \"Excel\", icon: \"file-excel-o\" },\n                  { name: \"PDF\", icon: \"file-pdf-o\" },\n                  { name: \"PNG\", icon: \"file-image-o\" },\n               ],\n               template:\n                  \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n               on: {\n                  onItemClick: function (id /*, e, node */) {\n                     var component = this.getItem(id);\n                     self.export(component.name);\n                  },\n               },\n            },\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n      }\n\n      /**\n       * @method Datacollection()\n       * A helper to return the current ABObject we are working with.\n       * @return {ABObject}\n       */\n      get Datacollection() {\n         return this.AB.datacollectionByID(this.DatacollectionID);\n      }\n\n      // objectLoad(object) {\n      //    this.CurrentObjectID = object.id;\n      // }\n\n      dataCollectionLoad(dc) {\n         this.DatacollectionID = dc.id;\n      }\n\n      /**\n       * @method setHiddenFields\n       * @param {array} fields - an array of string\n       */\n      setHiddenFields(fields) {\n         this.hiddenFields = fields || [];\n      }\n\n      setFilename(filename) {\n         this.filename = filename;\n      }\n\n      setGridComponent($grid) {\n         this.grid = $grid;\n      }\n\n      /**\n       * @function show()\n       * Show this component.\n       * @param {webix.view} $view\n       *        the webix.$view to hover the popup around.\n       */\n      show($view) {\n         $$(this.ids.popupExport).show($view);\n      }\n\n      /**\n       * @method export()\n       * triggers the process of exporting the data.\n       * @param {string} name\n       *        The type of export we are performing.\n       *        [\"CSV\", \"Excel\", \"PDV\", \"PNG\"]\n       */\n      async export(name) {\n         let fnExport;\n\n         let columns = {};\n\n         let dc = this.Datacollection;\n         if (\n            dc &&\n            (!dc.settings.loadAll ||\n               dc.dataStatus == dc.dataStatusFlag.notInitial)\n         ) {\n            // Load all data\n            await dc.reloadData(0, null);\n            dc.settings.loadAll = true;\n         }\n\n         // client filter data\n         // template of report\n         var _currentObject = this.CurrentObject;\n         if (_currentObject) {\n            _currentObject.fields().forEach((f) => {\n               // hidden fields\n               if (this.hiddenFields.indexOf(f.columnName) > -1) return;\n\n               columns[f.columnName] = {\n                  template: (rowData) => {\n                     return f.format(rowData);\n                  },\n               };\n            });\n         }\n\n         var _grid = this.grid;\n         if (!_grid) {\n            return;\n         }\n\n         var _filename = this.filename;\n         var _label = _currentObject ? _currentObject.label : null;\n\n         switch (name) {\n            case \"CSV\":\n               webix.csv.delimiter.cols = \",\";\n\n               fnExport = webix.toCSV(_grid, {\n                  _filename: this.filename || _label,\n                  columns: columns,\n               });\n               break;\n            case \"Excel\":\n               fnExport = webix.toExcel(_grid, {\n                  filename: _filename || _label,\n                  name: _filename || _label,\n                  columns: columns,\n                  filterHTML: true,\n               });\n               break;\n            case \"PDF\":\n               fnExport = webix.toPDF(_grid, {\n                  filename: _filename || _label,\n                  filterHTML: true,\n               });\n               break;\n            case \"PNG\":\n               fnExport = webix.toPNG(_grid, {\n                  filename: _filename || _label,\n               });\n               break;\n         }\n\n         try {\n            await fnExport;\n            $$(this.ids.popupExport).hide();\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message: `${this.ids.component}:export(): could not export: ${name}`,\n            });\n         }\n      }\n   }\n\n   return new UI_Work_Object_PopupExport(ibase);\n}\n","/*\n * ui_work_object_workspace_popupFilter\n *\n * Manage the Filter popup.\n *\n */\nimport UI_Class from \"./ui_class\";\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupHideFields\";\n   const UIClass = UI_Class(AB);\n   // var L = UIClass.L();\n\n   class UI_Work_Object_Workspace_PopupFilter extends UIClass {\n      constructor(base) {\n         super(base, {});\n\n         this.AB = AB;\n         this.base = base;\n         this.object = null;\n\n         this.rowFilter = this.AB.filterComplexNew(\n            `${this.ids.component}_filter`\n         );\n         // {RowFilter}\n         // we use this RowFilter to\n         // display a form in a popup where the toolbar button is.\n      }\n\n      /**\n       * @method objectLoad\n       * A rule is based upon a Form that was working with an Object.\n       * Ready the Popup according to the current object\n       * .objectLoad() is how we specify which object we are working with.\n       *\n       * @param {ABObject} The object that will be used to evaluate the Rules\n       */\n      objectLoad(object) {\n         this.object = object;\n\n         if (this.rowFilter) {\n            this.rowFilter.fieldsLoad(object.fields(), object);\n\n            // Add event listener\n            this.rowFilter.on(\"save\", (...params) => {\n               this.emit(\"save\", ...params);\n               this.hide();\n            });\n         }\n      }\n\n      viewLoad(view) {\n         this.view = view;\n      }\n\n      /** == UI == */\n      ui() {\n         var ids = this.ids;\n\n         // Our webix UI definition:\n         return {\n            view: \"popup\",\n            id: ids.component,\n            autoheight: true,\n            minHeight: 275,\n            body: this.rowFilter.ui,\n            on: {\n               onShow: () => {\n                  this.show();\n               },\n               onHide: () => {\n                  this.hide();\n               },\n            },\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n\n         // Quick Reference Helpers\n         this.$Component = $$(this.ids.component);\n         this.$List = $$(this.ids.list);\n      }\n\n      /**\n       * @method show()\n       * Show this component.\n       * Ready the Popup according to the current object each time it is\n       * shown (perhaps a field was created or delted)\n       * @param {obj} $view\n       *        the webix.$view to hover the popup around.\n       */\n      show($view, options = null) {\n         if (options != null) {\n            this.$Component.show($view, options);\n         } else {\n            this.$Component.show($view);\n         }\n      }\n\n      /**\n       * @method hide()\n       * Hide this component.\n       *\n       * @param {obj} $view\n       *        the webix.$view to hover the popup around.\n       */\n      hide($view, options = null) {\n         if (options != null) {\n            this.$Component.hide($view, options);\n         } else {\n            this.$Component.hide($view);\n         }\n      }\n      /*\n       * this runs on workspace switch\n       */\n      setFilter(filter) {\n         if (!filter.rules?.length) {\n            filter = filter[0] || [];\n         }\n         this.rowFilter.setValue(filter);\n      }\n   }\n\n   return new UI_Work_Object_Workspace_PopupFilter(ibase);\n}\n","/*\n * ui_work_object_workspace_popupFrozenColumns\n *\n * Manage the Frozen Columns popup.\n *\n */\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupFrozenColumns\";\n   // const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_Workspace_PopupFrozenColumns extends UIClass {\n      constructor(base) {\n         super(base, {\n            list: \"\",\n         });\n\n         this._setting = \"\";\n         // {string}\n         // the ABField.columnName of the field that we want to freeze at.\n      }\n\n      ui() {\n         var ids = this.ids;\n\n         // Our webix UI definition:\n         return {\n            view: \"popup\",\n            id: ids.component,\n            // modal: true,\n            // autoheight:true,\n            width: 500,\n            body: {\n               rows: [\n                  {\n                     view: \"list\",\n                     id: ids.list,\n                     width: 250,\n                     // autoheight: true,\n                     maxHeight: 350,\n                     select: false,\n                     template:\n                        '<span style=\"min-width: 18px; display: inline-block;\"><i class=\"fa fa-circle-o ab-frozen-field-icon\"></i>&nbsp;</span> #label#',\n                     on: {\n                        onItemClick: (id, e, node) => {\n                           this.clickListItem(id, e, node);\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     value: L(\"Clear All\"),\n                     type: \"form\",\n                     on: {\n                        onItemClick: (/* id, e, node */) => {\n                           return this.clickClearAll();\n                        },\n                     },\n                  },\n               ],\n            },\n            on: {\n               onShow: () => {\n                  this.onShow();\n                  this.iconsReset();\n               },\n            },\n         };\n      }\n\n      // Our init() function for setting up our UI\n      async init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n      }\n\n      changed() {\n         this.emit(\"changed\", this._setting);\n      }\n\n      // our internal business logic\n\n      /**\n       * @method clickClearAll\n       * the user clicked the [clear all] option.  So show unfreeze all our\n       * columns.\n       */\n      clickClearAll() {\n         this.setValue(\"\");\n         this.iconsReset();\n         this.changed();\n      }\n\n      /**\n       * @method clickListItem\n       * update the list to show which columns are frozen by showing an icon\n       * next to the column name\n       */\n      clickListItem(id /*, e, node */) {\n         // update our Object with current frozen column id\n         var List = $$(this.ids.list);\n         var recordClicked = List.getItem(id);\n         var label = recordClicked.columnName;\n\n         if ((this._hiddenFields || []).indexOf(label) != -1) {\n            webix.alert({\n               text: L(\"Sorry, you cannot freeze a hidden column.\"),\n            });\n            return;\n         }\n\n         this.setValue(label);\n         this.iconsReset();\n         this.changed();\n      }\n\n      /**\n       * @method iconDefault\n       * Hide the icon for the given node\n       * @param {DOM} node\n       *        the html dom node of the element that contains our icon\n       */\n      iconDefault(node) {\n         if (node) {\n            node\n               .querySelector(\".ab-frozen-field-icon\")\n               .classList.remove(\"fa-circle\");\n            node\n               .querySelector(\".ab-frozen-field-icon\")\n               .classList.add(\"fa-circle-o\");\n         }\n      }\n\n      /**\n       * @method iconFreeze\n       * Show the icon for the given node\n       * @param {DOM} node\n       *        the html dom node of the element that contains our icon\n       */\n      iconFreeze(node) {\n         if (node) {\n            node\n               .querySelector(\".ab-frozen-field-icon\")\n               .classList.remove(\"fa-circle-o\");\n            node\n               .querySelector(\".ab-frozen-field-icon\")\n               .classList.add(\"fa-circle\");\n         }\n      }\n\n      /**\n       * @method iconsReset\n       * Reset the icon displays according to the current values in our Object\n       */\n      iconsReset() {\n         var List = $$(this.ids.list);\n         var isFrozen = false;\n\n         // for each item in the List\n         var id = List.getFirstId();\n         while (id) {\n            var record = List.getItem(id);\n            var label = record.columnName;\n\n            // find it's HTML Node\n            var node = List.getItemNode(id);\n\n            if (this._setting == \"\") {\n               // if there isn't any frozen columns just use the plain icon\n               this.iconDefault(node);\n            } else if (isFrozen == false) {\n               // if this item is not the frozen id it is frozen until we reach\n               // the frozen id\n               this.iconFreeze(node);\n            } else {\n               // else just show default icon\n               this.iconDefault(node);\n            }\n\n            if (this._setting == label) {\n               isFrozen = true;\n            }\n\n            if ((this._hiddenFields || []).indexOf(label) != -1) {\n               node.style.opacity = 0.4;\n               node\n                  .querySelector(\".ab-frozen-field-icon\")\n                  .classList.remove(\"fa-circle\");\n               node\n                  .querySelector(\".ab-frozen-field-icon\")\n                  .classList.remove(\"fa-circle-o\");\n               node\n                  .querySelector(\".ab-frozen-field-icon\")\n                  .classList.add(\"fa-eye-slash\");\n            } else {\n               node.style.opacity = 1;\n               node\n                  .querySelector(\".ab-frozen-field-icon\")\n                  .classList.remove(\"fa-eye-slash\");\n            }\n\n            // next item\n            id = List.getNextId(id);\n         }\n      }\n\n      /**\n       * @method objectLoad\n       * Ready the Popup according to the current object\n       * @param {ABObject} object\n       *        the currently selected object.\n       */\n      // objectLoad(object) {\n      //    this.CurrentObjectID = object.id;\n      // }\n\n      onShow() {\n         // refresh list\n         var allFields = this.CurrentObject.fields();\n         var listFields = [];\n         allFields.forEach((f) => {\n            listFields.push({\n               id: f.id,\n               label: f.label,\n               columnName: f.columnName,\n               $css: \"hidden_fields_\" + f.id,\n            });\n         });\n         $$(this.ids.list).clearAll();\n         $$(this.ids.list).parse(listFields);\n      }\n\n      /**\n       * @method show()\n       * Show this component.\n       * @param {obj} $view\n       *        the webix.$view to hover the popup around.\n       */\n      show($view, options) {\n         if (options != null) {\n            $$(this.ids.component).show($view, options);\n         } else {\n            $$(this.ids.component).show($view);\n         }\n      }\n\n      setValue(setting) {\n         this._setting = setting;\n      }\n\n      getValue() {\n         return this._setting;\n      }\n\n      setHiddenFields(hidden_fields = []) {\n         this._hiddenFields = hidden_fields ?? [];\n      }\n   }\n\n   return new UI_Work_Object_Workspace_PopupFrozenColumns(ibase);\n}\n","/*\n * ab_work_object_workspace_popupHeaderEditMenu\n *\n * Manage the Add New Data Field popup.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UIListEditMenuFactory from \"./ui_common_popupEditMenu\";\n\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupHeaderEditMenu\";\n   var ListClass = UIListEditMenuFactory(AB);\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UIWorkObjectWorkspacePopupHeaderEditMenu extends ListClass {\n      constructor(base) {\n         super(base);\n\n         // overwrite the default common menu with our column Header\n         // options.\n         this._menuOptions = [\n            {\n               label: L(\"Hide field\"),\n               // {string} label displayed\n\n               icon: \"fa fa-eye-slash\",\n               // {string} the fontawesome icon reference\n\n               command: \"hide\",\n               // {string} the returned command key\n\n               imported: true,\n               // {bool} include this option on an Imported Field?\n            },\n            {\n               label: L(\"Filter field\"),\n               icon: \"fa fa-filter\",\n               command: \"filter\",\n               imported: true,\n            },\n            {\n               label: L(\"Sort field\"),\n               icon: \"fa fa-sort\",\n               command: \"sort\",\n               imported: true,\n            },\n            {\n               label: L(\"Freeze field\"),\n               icon: \"fa fa-thumb-tack\",\n               command: \"freeze\",\n               imported: true,\n            },\n            {\n               label: L(\"Edit field\"),\n               icon: \"fa fa-pencil-square-o\",\n               command: \"edit\",\n               imported: false,\n            },\n            {\n               label: L(\"Delete field\"),\n               icon: \"fa fa-trash\",\n               command: \"delete\",\n               imported: false,\n            },\n         ];\n\n         this.$node = null;\n         this.field = null;\n      }\n\n      show(node, field) {\n         this.$node = node;\n         this.field = field;\n         super.show(node);\n      }\n\n      trigger(command) {\n         this.emit(\"click\", command, this.field, this.$node);\n      }\n   }\n   return new UIWorkObjectWorkspacePopupHeaderEditMenu(ibase);\n}\n","/*\n * ui_work_object_workspace_popupHideFields\n *\n * Manage the Hide Fields popup.\n *\n */\nimport UI_Class from \"./ui_class\";\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupHideFields\";\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_Workspace_PopupHideFields extends UIClass {\n      constructor(base) {\n         super(base, {\n            list: \"\",\n            buttonHide: \"\",\n            buttonShow: \"\",\n         });\n\n         this._settings = [];\n         // {array}\n         // an array of the ABField.columnNames of the fields\n         // that we want to hide.\n\n         this._frozenColumnID = null;\n         // {string}\n         // the ABField.columnName of the column that is currently \"frozen\"\n      }\n\n      ui() {\n         var ids = this.ids;\n\n         // Our webix UI definition:\n         return {\n            view: \"popup\",\n            id: ids.component,\n            // modal: true,\n            // autoheight:true,\n            body: {\n               rows: [\n                  {\n                     view: \"list\",\n                     id: ids.list,\n                     maxHeight: 350,\n                     // autoheight: true,\n                     select: false,\n                     // template: '<span style=\"min-width: 18px; display: inline-block;\"><i class=\"fa fa-circle ab-visible-field-icon\"></i>&nbsp;</span> #label#',\n                     template:\n                        '<span style=\"min-width: 18px; display: inline-block;\"><i class=\"fa ab-visible-field-icon\"></i>&nbsp;</span> #label#',\n                     on: {\n                        onItemClick: (id, e, node) => {\n                           this.clickListItem(id, e, node);\n                        },\n                        onAfterRender() {\n                           this.data.each((a) => {\n                              AB.ClassUI.CYPRESS_REF(\n                                 this.getItemNode(a.id),\n                                 `${ids.list}_${a.id}`\n                              );\n                           });\n                        },\n                     },\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.buttonHide,\n                           view: \"button\",\n                           value: L(\"Hide All\"),\n                           on: {\n                              onAfterRender() {\n                                 AB.ClassUI.CYPRESS_REF(this);\n                              },\n                              onItemClick: () => {\n                                 this.clickHideAll();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.buttonShow,\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           value: L(\"Show All\"),\n                           type: \"form\",\n                           on: {\n                              onAfterRender() {\n                                 AB.ClassUI.CYPRESS_REF(this);\n                              },\n                              onItemClick: () => {\n                                 this.clickShowAll();\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n            on: {\n               onShow: () => {\n                  this.onShow();\n                  this.iconsReset();\n               },\n            },\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n\n         // Quick Reference Helpers\n         this.$Component = $$(this.ids.component);\n         this.$List = $$(this.ids.list);\n      }\n\n      changed() {\n         this.emit(\"changed\", this._settings);\n      }\n\n      // our internal business logic\n\n      // callbacks: {\n      //    *\n      //     * @function onChange\n      //     * called when we have made changes to the hidden field settings\n      //     * of our Current Object.\n      //     *\n      //     * this is meant to alert our parent component to respond to the\n      //     * change.\n\n      //    onChange: function (settings) {},\n      // },\n\n      /**\n       * @method clickHideAll\n       * the user clicked the [hide all] option.  So hide all our fields.\n       */\n      clickHideAll() {\n         // create an array of all our field.id's:\n         var allFields = this.CurrentObject.fields();\n         var newHidden = [];\n         allFields.forEach(function (f) {\n            newHidden.push(f.columnName);\n         });\n\n         this._settings = newHidden;\n\n         this.iconsReset();\n         this.changed();\n\n         // _logic.callbacks.onChange(this._settings);\n      }\n\n      /**\n       * @method clickShowAll\n       * the user clicked the [show all] option.  So show all our fields.\n       */\n      clickShowAll() {\n         this._settings = [];\n\n         this.iconsReset();\n         this.changed();\n      }\n\n      /**\n       * @method clickListItem\n       * update the clicked field setting.\n       */\n      clickListItem(id, e, node) {\n         var item = this.$List.getItem(id);\n         if (this._frozenColumnID == item.columnName) {\n            webix.alert({\n               text: L(\"Sorry, you cannot hide your last frozen column.\"),\n            });\n            return;\n         }\n\n         var newFields = [];\n         var isHidden =\n            (this._settings || []).filter((fID) => {\n               return fID == item.columnName;\n            }).length > 0;\n         if (isHidden) {\n            // unhide this field\n\n            // get remaining fields\n            newFields = (this._settings || []).filter((fID) => {\n               return fID != item.columnName;\n            });\n\n            // find the icon and display it:\n            this.iconShow(node);\n         } else {\n            newFields = this._settings || [];\n            newFields.push(item.columnName);\n\n            this.iconHide(node);\n         }\n\n         this._settings = newFields || [];\n         this.changed();\n      }\n\n      /**\n       * @method iconFreezeOff\n       * Remove thumb tack if the field is not the choosen frozen column\n       * field\n       * @param {DOM} node\n       *        the html dom node of the element that contains our icon\n       */\n      iconFreezeOff(node) {\n         if (node) {\n            node\n               .querySelector(\".ab-visible-field-icon\")\n               .classList.remove(\"fa-thumb-tack\");\n            // node.querySelector('.ab-visible-field-icon').classList.add(\"fa-circle\");\n         }\n      }\n\n      /**\n       * @method iconFreezeOn\n       * Show a thumb tack if the field is the choosen frozen column field\n       * @param {DOM} node\n       *        the html dom node of the element that contains our icon\n       */\n      iconFreezeOn(node) {\n         if (node) {\n            // node.querySelector('.ab-visible-field-icon')\n            // .classList.remove(\"fa-circle\");\n            node\n               .querySelector(\".ab-visible-field-icon\")\n               .classList.add(\"fa-thumb-tack\");\n         }\n      }\n\n      /**\n       * @method iconHide\n       * Hide the icon for the given node\n       * @param {DOM} node\n       *        the html dom node of the element that contains our icon\n       */\n      iconHide(node) {\n         if (node) {\n            // node.querySelector('.ab-visible-field-icon').style.visibility = \"hidden\";\n            // node.querySelector('.ab-visible-field-icon').classList.remove(\"fa-circle\");\n            node\n               .querySelector(\".ab-visible-field-icon\")\n               .classList.add(\"fa-eye-slash\");\n            node.style.opacity = 0.4;\n         }\n      }\n\n      /**\n       * @method iconShow\n       * Show the icon for the given node\n       * @param {DOM} node\n       *        the html dom node of the element that contains our icon\n       */\n      iconShow(node) {\n         if (node) {\n            // node.querySelector('.ab-visible-field-icon').style.visibility = \"visible\";\n            node\n               .querySelector(\".ab-visible-field-icon\")\n               .classList.remove(\"fa-eye-slash\");\n            // node.querySelector('.ab-visible-field-icon').classList.add(\"fa-circle\");\n            node.style.opacity = 1;\n         }\n      }\n\n      /**\n       * @method iconsReset\n       * Reset the icon displays according to the current values in our\n       * Object\n       */\n      iconsReset() {\n         var List = this.$List;\n\n         // for each item in the List\n         var id = List.getFirstId();\n         while (id) {\n            var item = List.getItem(id);\n\n            // find it's HTML Node\n            var node = List.getItemNode(id);\n\n            if (this._frozenColumnID == item.columnName) {\n               this.iconFreezeOn(node);\n            } else {\n               this.iconFreezeOff(node);\n               // if this item is not hidden, show it.\n               if ((this._settings || []).indexOf(item.columnName) == -1) {\n                  this.iconShow(node);\n               } else {\n                  // else hide it\n                  this.iconHide(node);\n               }\n            }\n\n            // next item\n            id = List.getNextId(id);\n         }\n      }\n\n      /**\n       * @method objectLoad\n       * Ready the Popup according to the current object\n       * @param {ABObject} object\n       *        the currently selected ABObject.\n       */\n      // objectLoad(object) {\n      //    this.CurrentObjectID = object.id;\n      // }\n\n      /**\n       * @method onShow\n       * Ready the Popup according to the current object each time it is\n       * shown (perhaps a field was created or delted)\n       */\n      onShow() {\n         // refresh list\n         var allFields = this.CurrentObject.fields();\n         var listFields = [];\n         allFields.forEach((f) => {\n            listFields.push({\n               id: f.id,\n               label: f.label,\n               columnName: f.columnName,\n            });\n         });\n         this.$List.clearAll();\n         this.$List.parse(allFields);\n      }\n\n      /**\n       * @method show()\n       * Show this component.\n       * @param {obj} $view\n       *        the webix.$view to hover the popup around.\n       */\n      show($view, options = null) {\n         if (options != null) {\n            this.$Component.show($view, options);\n         } else {\n            this.$Component.show($view);\n         }\n      }\n\n      setSettings(settings) {\n         this._settings = this.AB.cloneDeep(settings || []);\n      }\n\n      getSettings() {\n         return this._settings || [];\n      }\n\n      setFrozenColumnID(frozenColumnID) {\n         this._frozenColumnID = frozenColumnID;\n      }\n   }\n\n   return new UI_Work_Object_Workspace_PopupHideFields(ibase);\n}\n","/*\n * ui_work_object_workspace_popupImport\n *\n * Manage the Import CSV data to our currently selected ABObject.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport FViewProperties from \"./properties/views/ABViewCSVImporter\";\n\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupImport\";\n   const UIClass = UI_Class(AB);\n   // var L = UIClass.L();\n   const ViewProperties = FViewProperties(AB);\n\n   class UI_Work_Object_Workspace_PopupImport extends UIClass {\n      constructor(base) {\n         super(base);\n\n         this.popup = null;\n         // {ABViewCSVImporter}\n         // an instance of our ABViewCSVImporter widget that we use to display\n         // the CSV Import interface.\n      }\n\n      ui() {\n         return {};\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         var defaultSettings = ViewProperties.toSettings();\n         var defaultView = this.AB.viewNewDetatched(defaultSettings);\n\n         this.popup = defaultView.component();\n         this.popup.init(AB);\n         this.popup.objectLoad(this.CurrentObject);\n      }\n\n      objectLoad(object) {\n         super.objectLoad(object);\n\n         this.popup?.objectLoad(object);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show popup.\n       */\n      show() {\n         this.popup.showPopup();\n      }\n\n      hide() {\n         this.popup.hide();\n      }\n   }\n\n   return new UI_Work_Object_Workspace_PopupImport(ibase);\n}\n","/*\n * ui_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup for creating new Fields on an object.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport FPropertyManager from \"./properties/PropertyManager\";\n\n// const ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nexport default function (AB, ibase) {\n   ibase = ibase || \"abd_work_object_workspace_popupNewDataField\";\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   const PropertyManager = FPropertyManager(AB);\n\n   class UI_Work_Object_Workspace_PopupNewDataField extends UIClass {\n      constructor(base) {\n         super(base, {\n            types: \"\",\n            editDefinitions: \"\",\n            buttonSave: \"\",\n            buttonCancel: \"\",\n\n            title: \"\",\n            buttonMaximize: \"\",\n            buttonMinimize: \"\",\n            chooseFieldType: \"\",\n            searchBar: \"\",\n            fieldSetting: \"\",\n            submission: \"\",\n            buttonBack: \"\",\n         });\n\n         this._componentHash = {};\n         // {hash} { ABFieldXXX.default().menuname : PropertyEditor }\n         // A hash of all the available Field Property Editors, accessible by\n         // the ABField.menuname\n         // This is primarily used during a CREATE operation where the user\n         // chooses the Field from a droplist and gets the menuname.\n\n         this._componentsByType = {};\n         // {hash} { ABFieldXXX.default().key : PropertyEditor }\n         // A hash of all the available Field Property Editors, accessible by\n         // the ABField.key\n         // This is used during EDIT operations where a current ABField is\n         // given and we lookup the editor by it's .key reference.\n\n         this._currentEditor = null;\n         // {PropertyEditor}\n         // The current Property editor that is being displayed.\n\n         this.defaultEditorComponent = null;\n         // {PropertyEditor}\n         // the default editor.  Usually the first one loaded.\n\n         // const defaultEditorID = null; // the default editor id.\n\n         this.submenus = [];\n         // {array}\n         // The list of ABField types that we can create.\n\n         this._editField = null; // field instance being edited\n         // {ABFieldXXX}\n         // The ABField we are currently EDITING. If we are Adding a new field\n         // this is null.\n      }\n\n      ui() {\n         const ids = this.ids;\n\n         // Our webix UI definition:\n         return {\n            view: \"window\",\n            position: \"center\",\n            id: ids.component,\n            resize: true,\n            modal: true,\n            boarderless: true,\n            height: 500,\n            width: 700,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               paddingX: 2,\n               elements: [\n                  {\n                     view: \"label\",\n                     id: ids.title,\n                     align: \"center\",\n                     label: L(\"Choose Field-Type\"),\n                     css: \"modal_title\",\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"button\",\n                           id: ids.buttonMaximize,\n                           label: '<span class=\"webix_icon\"><i class=\"nomargin fa fa-expand\"></i></span>',\n                           css: \"webix_transparent\",\n                           width: 40,\n                           click: () => {\n                              this.buttonMaximize();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           id: ids.buttonMinimize,\n                           label: '<span class=\"webix_icon\"><i class=\"nomargin fa fa-compress\"></i></span>',\n                           hidden: true,\n                           css: \"webix_transparent\",\n                           width: 40,\n                           click: () => {\n                              this.buttonMinimize();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           label: '<span class=\"webix_icon\"><i class=\"nomargin fa fa-times\"></i></span>',\n                           css: \"webix_transparent\",\n                           width: 40,\n                           click: () => {\n                              this.buttonCancel();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n            // ready: function () {\n            //  console.error('ready() called!!!')\n            //  _logic.resetState();\n            // },\n            body: {\n               rows: [\n                  {\n                     id: ids.chooseFieldType,\n                     rows: [\n                        {\n                           view: \"search\",\n                           id: ids.searchBar,\n                           placeholder: L(\"Search by title...\"),\n                           align: \"center\",\n                           on: {\n                              onTimedKeyPress: () => {\n                                 this.searchBar();\n                              },\n                           },\n                        },\n                        {\n                           view: \"dataview\",\n                           id: ids.types,\n                           borderless: true,\n                           type: {\n                              width: 87.5,\n                              height: 85,\n                              borderless: true,\n                              template:\n                                 '<button type=\"button\" class=\"webix_button webix_img_btn_top\" style=\"text-align: center;\"><span style=\"font-size: 30px; color: #94a1b3;\"><i class=\"#icon#\"></i><br></span><span style=\"font-size: 12px; line-height: 13px; display: inline-block; margin: 3px 3px 0;\">#label#</span></button>',\n                              css: \"webix_transparent\",\n                           },\n                           data: [],\n                           datatype: \"json\",\n                           select: 1,\n                           click: (id /* , ev, node */) => {\n                              this.onClick(id);\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.fieldSetting,\n                     minWidth: 692,\n                     maxWidth: 3840,\n                     maxHeight: 2160,\n                     hidden: true,\n                     rows: [\n                        {\n                           view: \"multiview\",\n                           id: ids.editDefinitions,\n                           padding: 0,\n                           // NOTE: can't leave this an empty [].\n                           // We redefine this value later.\n                           cells: [\n                              {\n                                 id: \"del_me\",\n                                 view: \"label\",\n                                 label: L(\"edit definition here\"),\n                              },\n                           ],\n                        },\n                        {\n                           id: ids.submission,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value:\n                                    '<span class=\"webix_icon\"><i class=\"nomargin fa fa-arrow-left fa-sm\"></i></span><span class\"text\">' +\n                                    L(\"Back\") +\n                                    \"</span>\",\n                                 id: ids.buttonBack,\n                                 css: \"ab-cancel-button webix_transparent icon_back_btn\",\n                                 autowidth: true,\n                                 click: () => {\n                                    this.buttonBack();\n                                 },\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 id: ids.buttonSave,\n                                 label:\n                                    '<span class=\"text\">' +\n                                    L(\"Create\") +\n                                    \"</span>\",\n                                 autowidth: true,\n                                 type: \"form\",\n                                 click: () => {\n                                    this.buttonSave();\n                                 },\n                              },\n                              { width: 17 },\n                           ],\n                        },\n                        { height: 17 },\n                     ],\n                  },\n               ],\n            },\n            on: {\n               //onBeforeShow: function () {\n               //  _logic.resetState();\n               //},\n               onHide: () => {\n                  this.resetState();\n               },\n            },\n         };\n      }\n\n      async init(AB) {\n         // Our init() function for setting up our UI\n         if (AB) {\n            this.AB = AB;\n         }\n         const ids = this.ids;\n\n         // initialize our components\n         webix.ui(this.ui());\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         const Fields = PropertyManager.fields(); // ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         const newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach((F) => {\n            const menuName = F.defaults().menuName;\n            const key = F.defaults().key;\n\n            const icon = F.defaults().icon;\n\n            // add a submenu for the fields multilingual key\n            // this.submenus.push({ id: menuName, value: L(menuName) });\n            this.submenus.push({\n               id: menuName,\n               icon: `nomargin fa fa-${icon}`,\n               label: L(menuName),\n            });\n\n            // Add the Field's definition editor here:\n            if (!this.defaultEditorComponent) {\n               this.defaultEditorComponent = F;\n               // defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(F.ui());\n\n            this._componentHash[menuName] = F;\n            this._componentsByType[key] = F;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // const firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         // $$(ids.types).define(\"options\", this.submenus);\n         // $$(ids.types).refresh();\n         $$(ids.types).define(\"data\", this.submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in this._componentHash) {\n            this._componentHash[c].init(this.AB);\n\n            this._componentHash[c].hide();\n         }\n\n         this.defaultEditorComponent.show(); // show the default editor\n         this._currentEditor = this.defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         // $$(ids.types).setValue(this.submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      }\n\n      // our internal business logic\n\n      applicationLoad(application) {\n         // _currentApplication = application;\n         super.applicationLoad(application);\n\n         // make sure all the Property components refer to this ABApplication\n         for (const menuName in this._componentHash) {\n            this._componentHash[menuName]?.applicationLoad(application);\n         }\n      }\n\n      objectLoad(object) {\n         super.objectLoad(object);\n\n         // make sure all the Property components refer to this ABObject\n         for (const menuName in this._componentHash) {\n            this._componentHash[menuName]?.objectLoad(object);\n         }\n      }\n\n      buttonCancel() {\n         // set the search bar to '' by default.\n         $$(this.ids.searchBar).setValue(\"\");\n         this.searchBar();\n\n         this.buttonBack();\n\n         // hide this popup.\n         $$(this.ids.component).hide();\n      }\n\n      buttonMaximize() {\n         $$(this.ids.buttonMaximize).hide();\n         $$(this.ids.buttonMinimize).show();\n\n         webix.fullscreen.set(this.ids.component);\n      }\n\n      buttonMinimize() {\n         $$(this.ids.buttonMinimize).hide();\n         $$(this.ids.buttonMaximize).show();\n\n         webix.fullscreen.exit();\n      }\n\n      searchBar() {\n         const value = $$(this.ids.searchBar).getValue().toLowerCase();\n         $$(this.ids.types).filter(\n            (obj) => obj.label.toLowerCase().indexOf(value) != -1\n         );\n      }\n\n      buttonBack() {\n         this.resetState();\n\n         this.addPopup();\n\n         // clear all editors:\n         for (const c in this._componentHash) {\n            this._componentHash[c].clear();\n         }\n      }\n\n      async buttonSave() {\n         const ids = this.ids;\n\n         $$(ids.buttonSave).disable();\n         // show progress\n         $$(ids.component).showProgress();\n\n         const editor = this._currentEditor;\n         if (editor) {\n            // the editor can define some basic form validations.\n            if (editor.isValid()) {\n               const vals = this.AB.cloneDeep(editor.values());\n\n               let field = null;\n               let oldData = null;\n\n               let linkCol;\n\n               // if this is an ADD operation, (_editField will be undefined)\n               if (!this._editField) {\n                  // get a new instance of a field:\n                  field = this.CurrentObject.fieldNew(vals);\n\n                  // Provide a default width based on the column label\n                  let width = 20 + field.label.length * 10;\n                  if (field.settings.showIcon) {\n                     width = width + 20;\n                  }\n                  if (width < 100) {\n                     width = 100;\n                  }\n\n                  field.settings.width = width;\n\n                  // TODO workaround : where should I add a new link field to link object\n                  if (field.key == \"connectObject\") {\n                     let rand = Math.floor(Math.random() * 1000);\n                     field.settings.isSource = 1;\n\n                     const linkObject = field.datasourceLink;\n\n                     // 1:1, 1:M, M:1 should have same column name\n                     let linkColumnName = field.columnName;\n\n                     // check duplicate column\n                     if (\n                        linkObject.fields((f) => f.columnName == linkColumnName)\n                           .length\n                     ) {\n                        linkColumnName = `${linkColumnName}${rand}`;\n                     }\n\n                     // M:N should have different column name into the join table\n                     if (\n                        field.settings.linkType == \"many\" &&\n                        field.settings.linkViaType == \"many\"\n                     ) {\n                        // NOTE : include random number to prevent duplicate column names\n                        linkColumnName = `${this.CurrentObject.name}${rand}`;\n                     }\n\n                     linkCol = linkObject.fieldNew({\n                        // id: OP.Util.uuid(),\n\n                        key: field.key,\n\n                        columnName: linkColumnName,\n                        label: this.CurrentObject.label,\n\n                        settings: {\n                           showIcon: field.settings.showIcon,\n\n                           linkObject: field.object.id,\n                           linkType: field.settings.linkViaType,\n                           linkViaType: field.settings.linkType,\n                           isCustomFK: field.settings.isCustomFK,\n                           indexField: field.settings.indexField,\n                           indexField2: field.settings.indexField2,\n                           isSource: 0,\n                           width: width,\n                        },\n                     });\n                  }\n               } else {\n                  // NOTE: update label before .toObj for .unTranslate to .translations\n                  if (vals.label) this._editField.label = vals.label;\n\n                  // use our _editField, backup our oldData\n                  oldData = this._editField.toObj();\n\n                  // update changed values to old data\n                  const updateValues = this.AB.cloneDeep(oldData);\n                  for (let key in vals) {\n                     // update each values of .settings\n                     if (\n                        key == \"settings\" &&\n                        vals[\"settings\"] &&\n                        typeof vals[\"settings\"] == \"object\"\n                     ) {\n                        updateValues[\"settings\"] =\n                           updateValues[\"settings\"] || {};\n\n                        for (let keySetting in vals[\"settings\"]) {\n                           updateValues[\"settings\"][keySetting] =\n                              vals[\"settings\"][keySetting];\n                        }\n                     } else {\n                        updateValues[key] = vals[key];\n                     }\n                  }\n\n                  this._editField.fromValues(updateValues);\n\n                  field = this._editField;\n               }\n\n               const validator = field.isValid();\n               if (validator.fail()) {\n                  validator.updateForm($$(editor.ids.component));\n                  // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                  // keep our old data\n                  if (oldData) {\n                     field.fromValues(oldData);\n                  }\n\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               } else {\n                  try {\n                     await field.save();\n\n                     let finishUpdateField = () => {\n                        $$(ids.buttonSave).enable();\n                        $$(ids.component).hideProgress();\n                        this._currentEditor.clear();\n                        this.hide();\n                        this.emit(\"save\", field);\n\n                        // _logic.callbacks.onSave(field);\n                     };\n\n                     // let refreshModels = () => {\n                     //    console.error(\n                     //       \"!!! Verify if we still need to .refresh()\"\n                     //    );\n\n                     //    // refresh linked object model\n                     //    linkCol.object.model().refresh();\n\n                     //    // refresh source object model\n                     //    // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                     //    field.object.model().refresh();\n                     // };\n\n                     // TODO workaround : update link column id\n                     if (linkCol != null) {\n                        linkCol.settings.linkColumn = field.id;\n                        await linkCol.save();\n\n                        // now linkCol has an .id, so update our field:\n                        field.settings.linkColumn = linkCol.id;\n                        await field.save();\n\n                        // when add new link fields, then run create migrate fields here\n                        if (!this._editField) {\n                           await field.migrateCreate();\n                           await linkCol.migrateCreate();\n                        }\n\n                        // refreshModels();\n                        finishUpdateField();\n                     } else {\n                        finishUpdateField();\n                     }\n                  } catch (err) {\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"UIWorkObjectWorkspacePopupNewDataField:buttonSave(): error saving new field\",\n                        field: field.toObj(),\n                     });\n\n                     // if (\n                     //    OP.Validation.isFormValidationError(\n                     //       err,\n                     //       $$(editor.ui.id)\n                     //    )\n                     // ) {\n                     //    // for validation errors, keep things in place\n                     //    // and let the user fix the data:\n                     //    $$(ids.buttonSave).enable();\n                     //    $$(ids.component).hideProgress();\n                     // } else {\n                     //    const errMsg = err.toString();\n                     //    if (err.message) {\n                     //       errMsg = err.message;\n                     //    }\n                     //    webix.alert({\n                     //       title: \"Error saving fields.\",\n                     //       ok: \"tell appdev\",\n                     //       text: errMsg,\n                     //       type: \"alert-error\",\n                     //    });\n                     //    // Q: if not validation error, do we\n                     //    // then field.destroy() ? and let them try again?\n                     //    // $$(ids.buttonSave).enable();\n                     //    // $$(ids.component).hideProgress();\n                     // }\n                  }\n               }\n            } else {\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n         } else {\n            this.AB.notify.developer(\n               new Error(\"Could not find the current editor.\"),\n               {}\n            );\n\n            $$(ids.buttonSave).enable();\n            $$(ids.component).hideProgress();\n         }\n\n         // if (!inputValidator.validateFormat(fieldInfo.name)) {\n         //  self.enable();\n         //  return;\n         // }\n\n         // // Validate duplicate field name\n         // const existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n         // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n         //  webix.alert({\n         //      title: labels.add_fields.duplicateFieldTitle,\n         //      text: labels.add_fields.duplicateFieldDescription,\n         //      ok: labels.common.ok\n         //  });\n         //  this.enable();\n         //  return;\n         // }\n\n         // if (fieldInfo.weight == null)\n         //  fieldInfo.weight = dataTable.config.columns.length;\n\n         // // Call callback function\n         // if (base.saveFieldCallback && base.fieldName) {\n         //  base.saveFieldCallback(base.fieldName, fieldInfo)\n         //      .then(function () {\n         //          self.enable();\n         //          base.resetState();\n         //          base.hide();\n         //      });\n         // }\n\n         this.buttonCancel;\n      }\n\n      hide() {\n         $$(this.ids.component).hide();\n      }\n\n      /**\n       * @method modeAdd()\n       * Opens the new data field widget for Adding a new field.\n       * If an allowFieldKey is provided, then that is the default\n       * Field Editor we want to show. Otherwise shoe the generic\n       * field picker.\n       * @param {string} fieldKey\n       *        show the editor for this ABField.key\n       */\n      modeAdd(fieldKey) {\n         // show default editor:\n         this.defaultEditorComponent.show(false, false);\n         this._currentEditor = this.defaultEditorComponent;\n         const ids = this.ids;\n\n         // allow add the connect field only to import object\n         if (this.CurrentObject.isImported) fieldKey = \"connectObject\";\n\n         if (fieldKey) {\n            const connectField = PropertyManager.fields().filter(\n               (f) => f.defaults().key == fieldKey\n            )[0];\n            if (!connectField) return;\n            const connectMenuName = connectField.defaults().menuName;\n            // $$(ids.types).setValue(connectMenuName);\n            // $$(ids.chooseFieldType).disable();\n\n            this.onClick(connectMenuName);\n         }\n         // show the ability to switch data types\n         else {\n            $$(ids.chooseFieldType).enable();\n            this.addPopup();\n         }\n      }\n\n      modeEdit(field) {\n         this._currentEditor?.hide();\n\n         // switch to this field's editor:\n         // hide the rest\n         for (const c in this._componentsByType) {\n            if (c == field.key) {\n               this._componentsByType[c].show(false, false);\n               this._componentsByType[c].populate(field);\n               this._currentEditor = this._componentsByType[c];\n               this._currentEditor[\"modeEdit\"] = true;\n            } else {\n               this._componentsByType[c].hide();\n            }\n         }\n\n         // disable elements that disallow to edit\n         const elements = this._currentEditor.ui()?.elements;\n         if (elements) {\n            const disableElem = (elem) => {\n               if (elem.disallowEdit) {\n                  $$(elem.id)?.disable?.();\n               }\n            };\n\n            this._currentEditor.eachDeep(elements, disableElem);\n            // elements.forEach((elem) => {\n            //    disableElem(elem);\n\n            //    // disable elements are in rows/cols\n            //    const childElems = elem.cols || elem.rows;\n            //    if (childElems && childElems.forEach) {\n            //       childElems.forEach((childElem) => {\n            //          disableElem(childElem);\n            //       });\n            //    }\n            // });\n         }\n         this.editPopup(field.defaults.menuName);\n      }\n\n      /**\n       * @function onChange\n       * swap the editor view to match the data field selected in the menu.\n       *\n       * @param {string} name  the menuName() of the submenu that was selected.\n       */\n\n      onClick(name) {\n         // show Field Type popup\n         $$(this.ids.chooseFieldType).hide();\n         $$(this.ids.fieldSetting).show();\n\n         // set title name by each field type\n         $$(this.ids.title).setValue(L(\"Create Field:\") + \" \" + name);\n\n         // note, the submenu returns the Field.menuName() values.\n         // we use that to lookup the Field here:\n         const editor = this._componentHash[name];\n         if (editor) {\n            editor.show();\n            this._currentEditor = editor;\n            this._currentEditor[\"modeEdit\"] = false;\n            // $$(this.ids.types).blur();\n         } else {\n            // most likely they clicked on the menu button itself.\n            // do nothing.\n            // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n         }\n      }\n\n      resetState() {\n         // enable elements that disallow to edit\n         const elements = this._currentEditor.ui()?.elements;\n         if (elements) {\n            const enableElem = (elem) => {\n               if (elem.disallowEdit) {\n                  $$(elem.id)?.enable?.();\n               }\n            };\n\n            this._currentEditor.eachDeep(elements, enableElem);\n            // elements.forEach((elem) => {\n            //    enableElem(elem);\n\n            //    // enable elements are in rows/cols\n            //    const childElems = elem.cols || elem.rows;\n            //    if (childElems && childElems.forEach) {\n            //       childElems.forEach((childElem) => {\n            //          enableElem(childElem);\n            //       });\n            //    }\n            // });\n         }\n\n         this.defaultEditorComponent.show(); // show the default editor\n         this._currentEditor = this.defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         // $$(this.ids.types).setValue(this.submenus[0].id);\n      }\n\n      addPopup() {\n         this.buttonMinimize();\n\n         // show the ability to switch data types\n         $$(this.ids.chooseFieldType).show();\n\n         // show button \"Back\"\n         $$(this.ids.buttonBack).show();\n\n         // set title name to \"Choose Field-Type\"\n         $$(this.ids.title).setValue(L(\"Choose Field-Type\"));\n\n         // hide form editor\n         $$(this.ids.fieldSetting).hide();\n\n         // change button text to 'Create'\n         $$(this.ids.buttonSave).define(\"label\", L(\"Create\"));\n         $$(this.ids.buttonSave).refresh();\n      }\n\n      editPopup(fieldTypeName) {\n         this.buttonMinimize();\n\n         // hide the ability to switch data types\n         $$(this.ids.chooseFieldType).hide();\n\n         // hide button \"Back\"\n         $$(this.ids.buttonBack).hide();\n\n         // set title name by each field type\n         $$(this.ids.title).setValue(L(\"Edit Field:\") + \" \" + fieldTypeName);\n\n         // show form editor\n         $$(this.ids.fieldSetting).show();\n\n         // change button text to 'save'\n         $$(this.ids.buttonSave).define(\"label\", L(\"Save\"));\n         $$(this.ids.buttonSave).refresh();\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       * @param {ABField} field\n       *        the ABField to edit.  If not provided, then this is an ADD\n       *        operation.\n       * @param {string} fieldKey\n       *        allow only this field type\n       */\n      show(field, fieldKey) {\n         this._editField = field;\n\n         if (this._editField) {\n            this.modeEdit(field);\n         } else {\n            this.modeAdd(fieldKey);\n         }\n\n         $$(this.ids.component).show();\n      }\n\n      typeClick() {\n         // NOTE: for functional testing we need a way to display the submenu\n         // (functional tests don't do .hover very well)\n         // so this routine is to enable .click() to show the submenu.\n\n         const ids = this.ids;\n\n         let subMenuId = $$(ids.types).config.data[0].submenu;\n\n         // #HACK Sub-menu popup does not render on initial\n         // Force it to render popup by use .getSubMenu()\n         if (typeof subMenuId != \"string\") {\n            $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n            subMenuId = $$(ids.types).config.data[0].submenu;\n         }\n\n         if ($$(subMenuId)) $$(subMenuId).show();\n      }\n   } // end class\n\n   return new UI_Work_Object_Workspace_PopupNewDataField(ibase);\n}\n","/*\n * ui_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupSortFields\";\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_Workspace_PopupSortFields extends UIClass {\n      constructor(base) {\n         super(base, {\n            list: \"\",\n            form: \"\",\n         });\n\n         this._blockOnChange = false;\n         // {bool}\n         // Do we process our onChange event or not?\n      }\n\n      uiForm() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.form,\n            view: \"form\",\n            borderless: true,\n            elements: [\n               {\n                  view: \"button\",\n                  type: \"form\",\n                  css: \"webix_primary\",\n                  value: L(\"Add new sort\"),\n                  on: {\n                     onItemClick: (/* id, e, node */) => {\n                        this.clickAddNewSort();\n                        // this.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         };\n      }\n\n      ui() {\n         return {\n            view: \"popup\",\n            id: this.ids.component,\n            // autoheight:true,\n            width: 600,\n            body: this.uiForm(),\n            on: {\n               onShow: () => {\n                  this.onShow();\n               },\n            },\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n         webix.ui(this.ui());\n      }\n\n      /**\n       * @function clickAddNewSort\n       * the user clicked the add new sort buttton. I don't know what it does...will update later\n       */\n      // clickAddNewSort: function(by, dir, isMulti, id) {\n      clickAddNewSort(fieldId, dir) {\n         var self = this;\n         var sort_form = $$(this.ids.form);\n\n         var viewIndex = sort_form.getChildViews().length - 1;\n         var listFields = this.getFieldList(true);\n         sort_form.addView(\n            {\n               id: `sort_${viewIndex + 1}`,\n               cols: [\n                  {\n                     view: \"combo\",\n                     width: 220,\n                     options: listFields,\n                     on: {\n                        onChange: function (columnId) {\n                           var el = this;\n                           self.onChangeCombo(columnId, el);\n                        },\n                     },\n                  },\n                  {\n                     view: \"segmented\",\n                     width: 200,\n                     options: [\n                        {\n                           id: \"\",\n                           value: L(\"Please select field\"),\n                        },\n                     ],\n                     on: {\n                        onChange: (/* newv, oldv */) => {\n                           // 'asc' or 'desc' values\n                           this.triggerOnChange();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     on: {\n                        onItemClick: function () {\n                           sort_form.removeView(this.getParentView());\n                           self.refreshFieldList(true);\n                           self.triggerOnChange();\n                        },\n                     },\n                  },\n               ],\n            },\n            viewIndex\n         );\n\n         // Select field\n         if (fieldId) {\n            var fieldsCombo = sort_form\n               .getChildViews()\n               [viewIndex].getChildViews()[0];\n            fieldsCombo.setValue(fieldId);\n         }\n         if (dir) {\n            var segmentButton = sort_form\n               .getChildViews()\n               [viewIndex].getChildViews()[1];\n            segmentButton.setValue(dir);\n         }\n         // if (isMulti) {\n         // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n         // \tisMultilingualField.setValue(isMulti);\n         // }\n      }\n\n      /**\n       * @method getFieldList\n       * return field list so we can present a custom UI for view\n       */\n      getFieldList(excludeSelected) {\n         var sort_form = $$(this.ids.form),\n            listFields = [];\n\n         var allFields = this.CurrentObject.fields();\n         if (!allFields) return listFields;\n\n         // Get all fields include hidden fields\n         allFields.forEach((f) => {\n            if (f.fieldIsSortable()) {\n               listFields.push({\n                  id: f.id,\n                  value: f.label,\n               });\n            }\n         });\n\n         // Remove selected field\n         if (excludeSelected) {\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var selectedValue = cView.getChildViews()[0].getValue();\n                  if (selectedValue) {\n                     var removeIndex = null;\n                     listFields.map((f, index) => {\n                        if (f.id == selectedValue) {\n                           removeIndex = index;\n                           return true;\n                        } else {\n                           return false;\n                        }\n                     });\n                     listFields.splice(removeIndex, 1);\n                  }\n               });\n            }\n         }\n         return listFields;\n      }\n\n      /**\n       * @method objectLoad\n       * Ready the Popup according to the current object\n       * @param {ABObject} object\n       *        the currently selected object.\n       */\n      // objectLoad(object) {\n      //    this.CurrentObjectID = object.id;\n      // }\n\n      /**\n       * @method setSettings\n       * @param {Array} settings\n       * [\n       * \t{\n       * \t\tkey: uuid,\t\t// id of ABField\n       *\t \t\tdir: string,\t// 'asc' or 'desc'\n       * \t}\n       * ]\n       */\n      setSettings(settings) {\n         this._settings = this.AB.cloneDeep(settings);\n      }\n\n      /**\n       * @method getSettings\n       * @return {Array}\n       * [\n       *    {\n       *       key: uuid,     // id of ABField\n       *       dir: string,   // 'asc' or 'desc'\n       *    }\n       * ]\n       */\n      getSettings() {\n         var sort_form = $$(this.ids.form),\n            sortFields = [];\n\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var fieldId = cView.getChildViews()[0].getValue();\n               var dir = cView.getChildViews()[1].getValue();\n               sortFields.push({\n                  // \"by\":by,\n                  key: fieldId,\n                  dir: dir,\n                  // \"isMulti\":isMultiLingual\n               });\n            });\n         }\n\n         return sortFields;\n      }\n\n      onChangeCombo(columnId, el) {\n         var allFields = this.CurrentObject.fields();\n         var columnConfig = \"\",\n            sortDir = el.getParentView().getChildViews()[1],\n            // isMultiLingual = el.getParentView().getChildViews()[2],\n            // isMulti = 0,\n            options = null;\n\n         allFields.forEach((f) => {\n            if (f.id == columnId) {\n               columnConfig = f;\n            }\n         });\n\n         if (!columnConfig) return;\n\n         switch (columnConfig.key) {\n            case \"date\":\n               options = [\n                  { id: \"asc\", value: L(\"Before -> After\") },\n                  { id: \"desc\", value: L(\"After -> Before\") },\n               ];\n               break;\n            case \"number\":\n               options = [\n                  { id: \"asc\", value: L(\"1 -> 9\") },\n                  { id: \"desc\", value: L(\"9 -> 1\") },\n               ];\n               break;\n            case \"string\":\n            default:\n               options = [\n                  { id: \"asc\", value: L(\"A -> Z\") },\n                  { id: \"desc\", value: L(\"Z -> A\") },\n               ];\n               break;\n         }\n\n         sortDir.define(\"options\", options);\n         sortDir.refresh();\n\n         // if (columnConfig.settings.supportMultilingual)\n         // \tisMulti = columnConfig.settings.supportMultilingual;\n\n         // isMultiLingual.setValue(isMulti);\n\n         this.refreshFieldList();\n         this.triggerOnChange();\n      }\n\n      /**\n       * @method objectLoad\n       * Ready the Popup according to the current object\n       * @param {ABObject} object\n       *        the currently selected object.\n       */\n      onShow() {\n         var sort_form = $$(this.ids.form);\n\n         // clear field options in the form\n         webix.ui(this.uiForm(), sort_form);\n\n         var sorts = this._settings;\n         if (sorts && sorts.forEach) {\n            sorts.forEach((s) => {\n               this.clickAddNewSort(s.key, s.dir);\n            });\n         }\n\n         if (sorts == null || sorts.length == 0) {\n            this.clickAddNewSort();\n         }\n      }\n\n      /**\n       * @function refreshFieldList\n       * return an updated field list so you cannot duplicate a sort\n       */\n      refreshFieldList(ignoreRemoveViews) {\n         var sort_form = $$(this.ids.form),\n            listFields = this.getFieldList(false),\n            selectedFields = [],\n            removeChildViews = [];\n\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               let fieldId = cView.getChildViews()[0].getValue(),\n                  // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                  fieldObj = listFields.filter((f) => {\n                     return f.id == fieldId;\n                  });\n\n               if (fieldObj.length > 0) {\n                  // Add selected field to list\n                  selectedFields.push(fieldObj[0]);\n               } else {\n                  // Add condition to remove\n                  removeChildViews.push(cView);\n               }\n            });\n         }\n\n         // Remove filter conditions when column is deleted\n         if (!ignoreRemoveViews) {\n            removeChildViews.forEach((cView /*, index */) => {\n               sort_form.removeView(cView);\n            });\n         }\n\n         // Field list should not duplicate field items\n         childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach((cView, index) => {\n               if (childViews.length - 1 <= index) return false;\n\n               let fieldId = cView.getChildViews()[0].getValue(),\n                  // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                  fieldObj = listFields.filter((f) => {\n                     return f.id == fieldId;\n                  });\n\n               var selectedFieldsExcludeCurField = selectedFields.filter(\n                  (x) => {\n                     if (\n                        Array.isArray(fieldObj) &&\n                        fieldObj.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  }\n               );\n\n               var enableFields = listFields.filter((x) => {\n                  if (\n                     Array.isArray(selectedFieldsExcludeCurField) &&\n                     selectedFieldsExcludeCurField.indexOf(x) !== -1\n                  ) {\n                     return false;\n                  }\n                  return true;\n               });\n\n               // Update field list\n               cView.getChildViews()[0].define(\"options\", enableFields);\n               cView.getChildViews()[0].refresh();\n            });\n         }\n      }\n\n      /**\n       * @method triggerOnChange\n       * This parses the sort form to build in order the sorts then saves to the application object workspace\n       */\n      triggerOnChange() {\n         // block .onChange callback\n         if (this._blockOnChange) return;\n\n         this._settings = this.getSettings();\n\n         this.emit(\"changed\", this._settings);\n      }\n\n      blockOnChange() {\n         this._blockOnChange = true;\n      }\n\n      unblockOnChange() {\n         this._blockOnChange = false;\n      }\n\n      /**\n       * @method show()\n       * Show this component.\n       * @param {obj} $view\n       *        the webix.$view to hover the popup around.\n       * @param {uuid} fieldId\n       *        the fieldId we want to prefill the sort with\n       */\n      show($view, fieldId, options) {\n         this.blockOnChange();\n\n         $$(this.ids.component).show($view, options || null);\n\n         if (fieldId) {\n            this.clickAddNewSort(fieldId);\n         }\n\n         this.unblockOnChange();\n      }\n\n      /**\n       * @method sort()\n       * client sort data in list\n       * @param {Object} a\n       * @param {Object} b\n       */\n      sort(a, b) {\n         var result = 0;\n\n         var childViews = $$(this.ids.form).getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach((cView, index) => {\n               if (childViews.length - 1 <= index || result != 0) return;\n\n               var fieldId = cView.getChildViews()[0].getValue();\n               var dir = cView.getChildViews()[1].getValue();\n\n               var field = this.CurrentObject.fieldByID(fieldId);\n               if (!field) return;\n\n               var by = field.columnName; // column name\n\n               var aValue = a[by],\n                  bValue = b[by];\n\n               if (Array.isArray(aValue)) {\n                  aValue = (aValue || [])\n                     .map((item) => {\n                        return item.text || item;\n                     })\n                     .join(\" \");\n               }\n\n               if (Array.isArray(bValue)) {\n                  bValue = (bValue || [])\n                     .map((item) => {\n                        return item.text || item;\n                     })\n                     .join(\" \");\n               }\n\n               if (aValue != bValue) {\n                  if (dir == \"asc\") {\n                     result = aValue > bValue ? 1 : -1;\n                  } else {\n                     result = aValue < bValue ? 1 : -1;\n                  }\n               }\n            });\n         }\n\n         return result;\n      }\n   }\n\n   return new UI_Work_Object_Workspace_PopupSortFields(ibase);\n}\n","/*\n * ui_work_object_workspace_popupSummaryColumns\n *\n * Manage the Summary Columns popup.\n *\n */\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_popupSummaryColumns\";\n   // const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_Workspace_PopupSummaryColumns extends UIClass {\n      constructor(base) {\n         super(base, {\n            list: \"\",\n         });\n\n         // make a reference to our Field CLASS definitions\n         this.ABFieldNumber = AB.Class.ABFieldManager.fieldByKey(\"number\");\n         this.ABFieldFormula = AB.Class.ABFieldManager.fieldByKey(\"formula\");\n         this.ABFieldCalculate =\n            AB.Class.ABFieldManager.fieldByKey(\"calculate\");\n\n         this.SummaryFieldIds = [];\n         // {array}\n         // an array of the {ABFieldXXX.id}s that are used as summary fields.\n      }\n\n      // Our webix UI definition:\n      ui() {\n         const ids = this.ids;\n\n         return {\n            view: \"popup\",\n            id: ids.component,\n            body: {\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"button\",\n                           value: L(\"Select All\"),\n                           on: {\n                              onItemClick: () => {\n                                 this.clickHideAll();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           value: L(\"Unselect All\"),\n                           on: {\n                              onItemClick: () => {\n                                 this.clickShowAll();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"list\",\n                     id: ids.list,\n                     maxHeight: 250,\n                     select: false,\n                     template:\n                        '<span style=\"min-width: 18px; display: inline-block;\"><i class=\"fa ab-summary-field-icon\"></i>&nbsp;</span> #label#',\n                     on: {\n                        onItemClick: (id, e, node) => {\n                           this.clickListItem(id, e, node);\n                        },\n                     },\n                  },\n               ],\n            },\n            on: {\n               onShow: () => {\n                  this.onShow();\n               },\n            },\n         };\n      }\n\n      // Our init() function for setting up our UI\n      init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n\n         return Promise.resolve();\n      }\n\n      /**\n       * @function clickHideAll\n       * the user clicked the [hide all] option.  So hide all our fields.\n       */\n      clickHideAll() {\n         var List = $$(this.ids.list);\n\n         // pass an array is empty\n         this.SummaryFieldIds = [];\n\n         // hide all icons\n         List.find({}).forEach((item) => {\n            this.iconHide(item.id);\n         });\n\n         this.emit(\"changed\", this.SummaryFieldIds);\n         // _logic.callbacks.onChange(SummaryFieldIds);\n      }\n\n      /**\n       * @function clickShowAll\n       * the user clicked the [show all] option.  So show all our fields.\n       */\n      clickShowAll() {\n         var List = $$(this.ids.list);\n\n         this.SummaryFieldIds = List.find({}).map((f) => f.id);\n\n         // show all icons\n         List.find({}).forEach((item) => {\n            this.iconShow(item.id);\n         });\n         this.emit(\"changed\", this.SummaryFieldIds);\n      }\n\n      /**\n       * @function clickListItem\n       * update the clicked field setting.\n       */\n      clickListItem(fieldId) {\n         // select\n         if (this.SummaryFieldIds.indexOf(fieldId) < 0) {\n            this.SummaryFieldIds.push(fieldId);\n\n            this.iconShow(fieldId);\n         }\n         // unselect\n         else {\n            this.SummaryFieldIds = this.SummaryFieldIds.filter(\n               (fid) => fid != fieldId\n            );\n\n            this.iconHide(fieldId);\n         }\n         this.emit(\"changed\", this.SummaryFieldIds);\n      }\n\n      /**\n       * @method getValue()\n       * return the current value of the Summary Columns settings.\n       */\n      getValue() {\n         return this.SummaryFieldIds;\n      }\n\n      /**\n       * @function iconHide\n       * Hide the icon for the given node\n       * @param {DOM} node  the html dom node of the element that contains our icon\n       */\n      iconHide(fieldId) {\n         var List = $$(this.ids.list);\n         var $node = List.getItemNode(fieldId);\n         if ($node) {\n            $node\n               .querySelector(\".ab-summary-field-icon\")\n               .classList.remove(\"fa-circle\");\n         }\n      }\n\n      /**\n       * @function iconShow\n       * Show the icon for the given node\n       * @param {DOM} node  the html dom node of the element that contains our icon\n       */\n      iconShow(fieldId) {\n         var List = $$(this.ids.list);\n         var $node = List.getItemNode(fieldId);\n         if ($node) {\n            $node\n               .querySelector(\".ab-summary-field-icon\")\n               .classList.add(\"fa-circle\");\n         }\n      }\n\n      /**\n       * @function objectLoad\n       * Ready the Popup according to the current object\n       * @param {ABObject} object  the currently selected object.\n       */\n      // objectLoad (object) {\n      //    CurrentObject = object;\n      // }\n\n      /**\n       * @function setValue\n       *\n       * @param {array} - an array contains field ids\n       */\n      setValue(fieldIds) {\n         this.SummaryFieldIds = fieldIds || [];\n\n         this.onShow();\n      }\n\n      /**\n       * @function onShow\n       * Ready the Popup according to the current object each time it is shown (perhaps a field was created or delted)\n       */\n      onShow() {\n         const ids = this.ids;\n\n         // refresh list\n         var numberFields = this.CurrentObject.fields(\n            (f) => f instanceof this.ABFieldNumber\n         ).map((f) => {\n            return {\n               id: f.id,\n               label: f.label,\n            };\n         });\n\n         var calculateFields = this.CurrentObject.fields(\n            (f) => f instanceof this.ABFieldCalculate\n         ).map((f) => {\n            return {\n               id: f.id,\n               label: f.label,\n            };\n         });\n\n         var formulaFields = this.CurrentObject.fields(\n            (f) => f instanceof this.ABFieldFormula\n         ).map((f) => {\n            return {\n               id: f.id,\n               label: f.label,\n            };\n         });\n\n         var fieldOptions = numberFields.concat(calculateFields);\n         fieldOptions = fieldOptions.concat(formulaFields);\n\n         $$(ids.list).clearAll();\n         $$(ids.list).parse(fieldOptions);\n\n         // update icons\n         this.SummaryFieldIds.forEach((fieldId) => {\n            this.iconShow(fieldId);\n         });\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       * @param {obj} $view  the webix.$view to hover the popup around.\n       */\n      show(...params) {\n         $$(this.ids.component).show(...params);\n      }\n   }\n\n   return new UI_Work_Object_Workspace_PopupSummaryColumns(ibase);\n}\n","/*\n * ab_work_object_workspace_track\n *\n * Manage the Object Workspace track area.\n *\n */\n// const ABComponent = require(\"../classes/platform/ABComponent\");\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_Workspace_PopupTrack extends UIClass {\n      /**\n       * @param {object} App\n       * @param {string} idBase\n       */\n      constructor() {\n         var idBase = \"ui_work_object_workspace_track\";\n\n         super({\n            popup: `${idBase}_popup`,\n            timeline: `${idBase}_timeline`,\n         });\n      }\n\n      // Our webix UI definition:\n      ui() {\n         let ids = this.ids;\n\n         return {\n            view: \"window\",\n            id: ids.popup,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Record History\"),\n                     css: \"modal_title\",\n                     align: \"center\",\n                  },\n                  {\n                     view: \"button\",\n                     autowidth: true,\n                     type: \"icon\",\n                     icon: \"nomargin fa fa-times\",\n                     align: \"right\",\n                     click: () => {\n                        this.close();\n                     },\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            position: \"center\",\n            resize: true,\n            modal: true,\n            editable: false,\n            width: 500,\n            height: 500,\n            body: {\n               view: \"timeline\",\n               id: ids.timeline,\n               type: {\n                  height: 140,\n                  templateDate: (obj) => {\n                     return this.AB.toDateFormat(obj.timestamp, {\n                        localeCode: \"en\",\n                        format: \"DD MMM, YYYY hh:mma\",\n                     });\n                  },\n                  lineColor: (obj) => {\n                     switch (obj.level) {\n                        case \"insert\":\n                           return \"#FF5C4C\";\n                        case \"update\":\n                           return \"#1CA1C1\";\n                        case \"delete\":\n                           return \"#94A1B3\";\n                     }\n                  },\n               },\n               scheme: {\n                  $init: (obj) => {\n                     // Action\n                     switch (obj.level) {\n                        case \"insert\":\n                           obj.value = L(\"Add\");\n                           break;\n                        case \"update\":\n                           obj.value = L(\"Edit\");\n                           break;\n                        case \"delete\":\n                           obj.value = L(\"Delete\");\n                           break;\n                     }\n\n                     // By\n                     obj.details = `by <b>${obj.username || L(\"Unknown\")}</b>`;\n\n                     // Detail of record\n                     if (obj.record) {\n                        let recDetail = \"\";\n                        Object.keys(obj.record).forEach((prop) => {\n                           recDetail = recDetail.concat(\n                              `${prop}: <b>${\n                                 obj.record[prop] != null\n                                    ? obj.record[prop]\n                                    : \"\"\n                              }</b> <br />`\n                           );\n                        });\n\n                        obj.details = obj.details.concat(\"<br />\");\n                        obj.details = obj.details.concat(\n                           `<div>${recDetail}</div>`\n                        );\n                     }\n                  },\n               },\n            },\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n\n         let $timeline = $$(this.ids.timeline);\n         if ($timeline) {\n            webix.extend($timeline, webix.ProgressBar);\n         }\n      }\n\n      open(object, rowId) {\n         this.objectLoad(object);\n\n         let ids = this.ids;\n         let $popup = $$(ids.popup);\n         if (!$popup) return;\n\n         $popup.show();\n\n         this.loadData(rowId);\n      }\n\n      async loadData(rowId) {\n         if (!this.CurrentObject) return;\n\n         let $timeline = $$(this.ids.timeline);\n\n         // pull tracking data\n         $timeline.showProgress({ type: \"icon\" });\n         try {\n            var data = this.CurrentObject.model().logs({ rowId });\n            $timeline.clearAll(true);\n            $timeline.parse(data);\n         } catch (err) {\n            console.error(err);\n            webix.alert({\n               text: L(\"Unable to display logs for this entry.\"),\n            });\n         }\n         $timeline.hideProgress();\n      }\n\n      close() {\n         let ids = this.ids;\n         let $popup = $$(ids.popup);\n         if (!$popup) return;\n\n         $popup.hide();\n      }\n   }\n\n   return new UI_Work_Object_Workspace_PopupTrack();\n}\n","/*\n * ui_work_object_workspace_popupViewSettings\n *\n * Manage the popup to collect the settings for a workspace view.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport FormABViewGantt from \"./properties/workspaceViews/ABViewGantt\";\nimport FormABViewGrid from \"./properties/workspaceViews/ABViewGrid\";\nimport FormABViewKanBan from \"./properties/workspaceViews/ABViewKanban\";\n\nexport default function (AB, ibase, isettings) {\n   ibase = ibase || \"abd_work_object_workspace_popupAddView\";\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Object_Workspace_PopupAddView extends UIClass {\n      constructor(base, settings = {}) {\n         super(base, {\n            form: \"\",\n            formAdditional: \"\",\n            nameInput: \"\",\n            typeInput: \"\",\n            cancelButton: \"\",\n            cancelX: \"\",\n            saveButton: \"\",\n         });\n\n         settings.isReadOnly = settings.isReadOnly ?? false;\n         this.settings = settings;\n\n         this._view = null;\n         // {Grid/kanban/Gantt} the current UI View type we are displaying\n\n         this.comGrid = FormABViewGrid(AB, `${base}_grid`);\n\n         this.comKanban = FormABViewKanBan(AB, `${base}_kanban`);\n         this.comKanban.on(\"new.field\", (key) => {\n            this._newFieldSource = \"comKanban\";\n            this.emit(\"new.field\", key);\n         });\n         this.comGantt = FormABViewGantt(AB, `${base}_gantt`);\n         this.comGantt.on(\"new.field\", (key) => {\n            this._newFieldSource = \"comGantt\";\n            this.emit(\"new.field\", key);\n         });\n\n         this.on(\"field.added\", (field) => {\n            this[this._newFieldSource]?.emit(\"field.added\", field);\n         });\n      }\n\n      ui() {\n         var ids = this.ids;\n\n         // Our webix UI definition:\n         var formUI = {\n            view: \"form\",\n            id: ids.form,\n            visibleBatch: \"global\",\n            rules: {\n               hGroup: (value, { vGroup }) => {\n                  return !value || value !== vGroup;\n               },\n            },\n            elements: [\n               {\n                  view: \"text\",\n                  label: L(\"Name\"),\n                  id: ids.nameInput,\n                  name: \"name\",\n                  placeholder: L(\"Create a name for the view\"),\n                  required: true,\n                  invalidMessage: L(\"this field is required\"),\n                  on: {\n                     onChange: (/* id */) => {\n                        $$(ids.nameInput).validate();\n                     },\n                     onAfterRender() {\n                        UIClass.CYPRESS_REF(this);\n                     },\n                  },\n               },\n               {\n                  view: \"richselect\",\n                  label: L(\"Type\"),\n                  id: ids.typeInput,\n                  name: \"type\",\n                  hidden: this.settings.isReadOnly,\n                  options: [\n                     {\n                        id: this.comGrid.type(),\n                        value: L(\"Grid\"),\n                     },\n                     {\n                        id: this.comKanban.type(),\n                        value: L(\"Kanban\"),\n                     },\n                     {\n                        id: this.comGantt.type(),\n                        value: L(\"Gantt\"),\n                     },\n                  ],\n                  value: this.comGrid.type(),\n                  required: true,\n                  on: {\n                     onChange: (typeView) => {\n                        this.switchType(typeView);\n                     },\n                  },\n               },\n               {\n                  id: ids.formAdditional,\n                  view: \"layout\",\n                  rows: [this.comKanban.ui(), this.comGantt.ui()],\n               },\n               {\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        id: ids.buttonCancel,\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.buttonCancel();\n                        },\n                        on: {\n                           onAfterRender() {\n                              UIClass.CYPRESS_REF(this);\n                           },\n                        },\n                     },\n                     {\n                        id: ids.buttonSave,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        value: L(\"Save\"),\n                        autowidth: true,\n                        type: \"form\",\n                        click: () => {\n                           this.buttonSave();\n                        },\n                        on: {\n                           onAfterRender() {\n                              UIClass.CYPRESS_REF(this);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         };\n\n         return {\n            view: \"window\",\n            id: ids.component,\n            width: 400,\n            resize: true,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"View Settings\"),\n                     css: \"modal_title\",\n                     align: \"center\",\n                  },\n                  {\n                     id: ids.cancelX,\n                     view: \"button\",\n                     autowidth: true,\n                     type: \"icon\",\n                     icon: \"nomargin fa fa-times\",\n                     click: () => {\n                        this.buttonCancel();\n                     },\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            position: \"center\",\n            body: formUI,\n            modal: true,\n            on: {\n               onShow: () => {\n                  this.onShow();\n               },\n            },\n         };\n      } // ui()\n\n      async init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n         return Promise.resolve();\n      } // init()\n\n      switchType(typeView) {\n         $$(this.ids.formAdditional).showBatch(typeView);\n\n         // initial\n         switch (typeView) {\n            case \"kanban\":\n               this.comKanban.init(this.CurrentObject, this._view);\n               break;\n            case \"gantt\":\n               this.comGantt.init(this.CurrentObject, this._view);\n               break;\n         }\n\n         $$(this.ids.component).resize();\n      }\n\n      onShow() {\n         var ids = this.ids;\n\n         // clear field options in the form\n         $$(ids.form).clear();\n         $$(ids.form).clearValidation();\n\n         if (this._view) {\n            $$(ids.nameInput).setValue(this._view.name);\n            $$(ids.typeInput).setValue(this._view.type);\n            // NOTE: the $$(ids.typeInput).onChange() will trigger\n            // the selected view's refresh.\n         }\n         // Default value\n         else {\n            $$(ids.nameInput).setValue(\"\");\n            $$(ids.typeInput).setValue(this.comGrid.type());\n         }\n      }\n\n      /**\n       * @function show()\n       * Show this component.  If a viewObj is passed in, then we are editing\n       * a component. Otherwise, this is an Add operation.\n       * @param {ui_work_object_workspace_view_*} viewObj\n       *        The currentView definitions of an existing view we are editing\n       */\n      show(viewObj) {\n         this._view = viewObj;\n         $$(this.ids.component).show();\n      }\n\n      /**\n       * @function hide()\n       * hide this component.\n       */\n      hide() {\n         $$(this.ids.component).hide();\n      }\n\n      buttonCancel() {\n         this.hide();\n      }\n\n      buttonSave() {\n         var ids = this.ids;\n         if (!$$(ids.form).validate()) return;\n\n         var view = {};\n\n         switch ($$(ids.typeInput).getValue()) {\n            case this.comKanban.type():\n               // validate\n               if (\n                  this.comKanban.validate &&\n                  !this.comKanban.validate($$(ids.form))\n               )\n                  return;\n\n               view = this.comKanban.values();\n               break;\n\n            case this.comGantt.type():\n               // validate\n               if (\n                  this.comGantt.validate &&\n                  !this.comGantt.validate($$(ids.form))\n               )\n                  return;\n\n               view = this.comGantt.values($$(ids.form));\n               break;\n         }\n\n         // save the new/updated view\n         view.name = $$(ids.nameInput).getValue();\n         view.type = $$(ids.typeInput).getValue();\n\n         // var viewObj;\n         if (this._view) {\n            Object.keys(view).forEach((k) => {\n               this._view[k] = view[k];\n            });\n            this.emit(\"updated\", this._view);\n            // this.callbacks.onViewUpdated(viewObj);\n         } else {\n            // viewObj = this.CurrentObject.workspaceViews.addView(view);\n            this.emit(\"added\", view);\n         }\n         this.hide();\n      }\n   }\n   return new UI_Work_Object_Workspace_PopupAddView(ibase, isettings);\n}\n","/*\n * ui_work_object_workspace_view_gantt\n *\n * Display an instance of a Gantt type of Workspace View in our area.\n *\n * This generic webix container will be given an instace of a workspace\n * view definition (Gantt), and then create an instance of an ABViewGantt\n * widget to display.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport FViewGanttProperties from \"./properties/workspaceViews/ABViewGantt\";\n\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_view_gantt\";\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   const ViewGanttProperties = FViewGanttProperties(AB);\n\n   class UI_Work_Object_Workspace_View_Gantt extends UIClass {\n      constructor(base) {\n         super(base);\n      }\n\n      // Our webix UI definition:\n      ui() {\n         var ids = this.ids;\n\n         return {\n            id: ids.component,\n            rows: [\n               {},\n               {\n                  view: \"label\",\n                  label: \"Impressive View -> Gantt\",\n               },\n               {},\n            ],\n         };\n      }\n\n      // Our init() function for setting up our UI\n      async init(AB) {\n         this.AB = AB;\n      }\n\n      defaultSettings(data) {\n         // Pull the ABViewGantt definitions\n         var defaultSettings = ViewGanttProperties.toSettings();\n\n         // transfer our specific field settings\n         Object.keys(defaultSettings.settings).forEach((d) => {\n            defaultSettings.settings[d] = data[d];\n         });\n\n         var defaultView = this.AB.viewNewDetatched(defaultSettings);\n         var defaultGantt = defaultView.toObj();\n         defaultGantt.id = data.id ?? AB.jobID();\n\n         return {\n            id: defaultGantt.id,\n            isDefaultView: false,\n            type: defaultGantt.type,\n            icon: defaultGantt.icon,\n\n            name: \"Default Gantt\",\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n\n            component: defaultGantt,\n         };\n      }\n\n      // getColumnIndex(id) {\n      //    return this._currentComponent.getColumnIndex(id);\n      // }\n\n      datacollectionLoad(dc) {\n         this.datacollection = dc;\n      }\n\n      async show(view) {\n         await this.viewLoad(view);\n         $$(this.ids.component).show();\n         this.emit(\"show\");\n      }\n\n      async viewLoad(view) {\n         if (view.id == this.currentViewDef?.id) return;\n\n         this.currentViewDef = view;\n\n         // remove any listeners from our current component\n         this._currentComponent?.eventsClear();\n\n         this.currentView = this.AB.viewNewDetatched(view.component);\n         var component = this.currentView.component();\n\n         var ui = component.ui();\n         ui.id = this.ids.component;\n         webix.ui(ui, $$(this.ids.component));\n\n         await component.init(this.AB);\n\n         // Now call .datacollectionLoad() to actually load the data.\n         component.datacollectionLoad(this.datacollection);\n\n         component.show();\n\n         this._currentComponent = component;\n      }\n\n      /**\n       * @method viewNew()\n       * return a new workspace view definition with an ABViewKGantt\n       * based upon the provided default data (gathered from our workspaceView)\n       * @param {obj} data\n       *        The configuration information for this ABView.\n       */\n      viewNew(data) {\n         var defaults = this.defaultSettings(data);\n         Object.keys(data).forEach((k) => {\n            defaults[k] = data[k];\n         });\n\n         return defaults;\n      }\n\n      // deleteSelected($view) {\n      //    return this._currentComponent.toolbarDeleteSelected($view);\n      // }\n\n      // massUpdate($view) {\n      //    return this._currentComponent.toolbarMassUpdate($view);\n      // }\n\n      /**\n       * @method refreshHeader()\n       * This is called everytime a change in the ABObject happens and the\n       * current component needs to refresh the display.  So when a Field is\n       * Added or Removed, the display of the component changes.\n       *\n       * the ui_work_object_workspace keeps track of what the USER has set\n       * for the hiddenFields, frozenColumns and related display options.\n       *\n       * Those are passed in, and we are responsible for converting that\n       * to the component settings.\n       * @param {array} fields\n       *        An array of ABField instances that are in the current object.\n       * @param {array} hiddenFields\n       *        An array of the ABfield.columnName(s) that are to be hidden.\n       *        These are what are matched with the {columnHeader}.id\n       * @param {array} filters\n       *        The current filter settings.\n       * @param {array} sorts\n       *        The current sort settings.\n       * @param {string} frozenColumnID\n       *        the ABField.columnName of the column that we have frozen.\n       */\n      // refreshHeader(\n      //    /* fields,*/ hiddenFields = [],\n      //    filters,\n      //    sorts,\n      //    frozenColumnID\n      // ) {\n      //    var object = this.CurrentObject;\n      //    var columnHeaders = object.columnHeaders(true, true, [], [], []);\n\n      //    // this calculation is done in the ABViewGridComponent.refreshHeader():\n      //    // columnHeaders.forEach((h) => {\n      //    //    if (hiddenFields.indexOf(h.id) > -1) {\n      //    //       h.hidden = true;\n      //    //    }\n      //    // });\n\n      //    this._currentComponent.columnConfig(columnHeaders);\n\n      //    this._currentComponent.settings.hiddenFields = hiddenFields;\n      //    this._currentComponent.settings.filterConditions = filters;\n      //    this._currentComponent.settings.sortFields = sorts;\n      //    this._currentComponent.settings.frozenColumnID = frozenColumnID;\n\n      //    this._currentComponent.refreshHeader(true);\n      // }\n\n      /**\n       * @function rowAdd()\n       *\n       * add a new row to the data table\n       */\n      /*\n      rowAdd() {\n         // TODO: delete this, I think...\n         debugger;\n         if (!settings.isEditable) return;\n\n         var emptyObj = CurrentObject.defaultValues();\n         CurrentObject.model()\n            .create(emptyObj)\n            .then((obj) => {\n               if (obj == null) return;\n\n               // var DataTable = $$(ids.component);\n               // if (!DataTable.exists(obj.id))\n               //     DataTable.add(obj, 0);\n               if (\n                  CurrentDatacollection &&\n                  CurrentDatacollection.__dataCollection &&\n                  !CurrentDatacollection.__dataCollection.exists(obj.id)\n               )\n                  CurrentDatacollection.__dataCollection.add(obj, 0);\n            });\n      }\n      */\n   }\n   return new UI_Work_Object_Workspace_View_Gantt(ibase);\n}\n","/*\n * ui_work_object_workspace_view_grid\n *\n * Display an instance of a Grid type of Workspace View in our area.\n *\n * This generic webix container will be given an instace of a workspace\n * view definition (Grid), and then create an instance of an ABViewGrid\n * widget to display.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport FViewGridProperties from \"./properties/workspaceViews/ABViewGrid\";\n\nexport default function (AB, iBase, iSettings) {\n   iBase = iBase || \"ui_work_object_workspace_view_grid\";\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   const ViewGridProperties = FViewGridProperties(AB);\n\n   class UI_Work_Object_Workspace_View_Grid extends UIClass {\n      constructor(idBase, settings = {}) {\n         super(idBase);\n\n         settings.isReadOnly = settings.isReadOnly ?? false;\n         this.settings = settings;\n      }\n\n      // Our webix UI definition:\n      ui() {\n         var ids = this.ids;\n\n         return {\n            id: ids.component,\n            rows: [\n               {},\n               {\n                  view: \"label\",\n                  label: \"Impressive View -> Grid\",\n               },\n               {},\n            ],\n         };\n      }\n\n      // Our init() function for setting up our UI\n      async init(AB) {\n         this.AB = AB;\n      }\n\n      defaultSettings(data) {\n         // Pull the ABViewGrid definitions\n         var defaultGridSettings = ViewGridProperties.toSettings();\n         defaultGridSettings.label = L(defaultGridSettings.name);\n         var defaultGridView = this.AB.viewNewDetatched(defaultGridSettings);\n         var defaultGrid = defaultGridView.toObj();\n         defaultGrid.id = data?.id ?? AB.jobID();\n\n         // For our ABDesigner Object workspace, these settings are\n         // enabled:\n         [\"isEditable\", \"massUpdate\", \"allowDelete\", \"trackView\"].forEach(\n            (k) => {\n               defaultGrid.settings[k] = 1;\n            }\n         );\n         defaultGrid.settings.padding = 0;\n         defaultGrid.settings.showToolbar = 0;\n         defaultGrid.settings.gridFilter = {\n            filterOption: 0,\n            isGlobalToolbar: 0,\n         };\n\n         return {\n            id: defaultGrid.id,\n            isDefaultView: false,\n            type: defaultGrid.type,\n            icon: defaultGrid.icon,\n\n            name: \"Default Grid\",\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n\n            component: defaultGrid,\n         };\n      }\n\n      getColumnIndex(id) {\n         return this._currentComponent.getColumnIndex(id);\n      }\n\n      datacollectionLoad(dc) {\n         this.datacollection = dc;\n      }\n\n      get $grid() {\n         return this._currentComponent?.getDataTable();\n      }\n\n      ready() {\n         this.ListComponent.ready();\n      }\n\n      async show(view) {\n         await this.viewLoad(view);\n         $$(this.ids.component).show();\n         this.emit(\"show\");\n      }\n\n      async viewLoad(view) {\n         if (view.id == this.currentViewDef?.id) return;\n\n         this.currentViewDef = view;\n\n         this.currentView = this.AB.viewNewDetatched(view.component);\n         var component = this.currentView.component();\n\n         // OK, a ABViewGrid component wont display the grid unless there\n         // is a .datacollection or .dataviewID specified.\n         // but calling .datacollectionLoad() doesn't actually load the data\n         // unless there is the UI available.\n         // So ... do this to register the datacollection\n         component.datacollectionLoad(this.datacollection);\n\n         var ui = component.ui();\n         ui.id = this.ids.component;\n         webix.ui(ui, $$(this.ids.component));\n\n         let accessLevel = 2;\n         if (this.settings.isReadOnly) {\n            accessLevel = 1;\n         }\n         await component.init(this.AB, accessLevel);\n\n         // Now call .datacollectionLoad() again to actually load the data.\n         component.datacollectionLoad(this.datacollection);\n\n         component.on(\"column.header.clicked\", (node, EditField) => {\n            this.emit(\"column.header.clicked\", node, EditField);\n         });\n\n         component.on(\"object.track\", (currentObject, id) => {\n            this.emit(\"object.track\", currentObject, id);\n         });\n\n         component.on(\"selection\", () => {\n            this.emit(\"selection\");\n         });\n\n         component.on(\"selection.cleared\", () => {\n            this.emit(\"selection.cleared\");\n         });\n\n         component.on(\"column.order\", (fieldOrder) => {\n            this.emit(\"column.order\", fieldOrder);\n         });\n\n         this._currentComponent = component;\n      }\n\n      viewNew(data) {\n         var defaults = this.defaultSettings(data);\n         Object.keys(data).forEach((k) => {\n            defaults[k] = data[k];\n         });\n\n         return defaults;\n      }\n\n      deleteSelected($view) {\n         return this._currentComponent.toolbarDeleteSelected($view);\n      }\n\n      massUpdate($view) {\n         return this._currentComponent.toolbarMassUpdate($view);\n      }\n\n      /**\n       * @method refreshHeader()\n       * This is called everytime a change in the ABObject happens and the\n       * current component needs to refresh the display.  So when a Field is\n       * Added or Removed, the display of the component changes.\n       *\n       * the ui_work_object_workspace keeps track of what the USER has set\n       * for the hiddenFields, frozenColumns and related display options.\n       *\n       * Those are passed in, and we are responsible for converting that\n       * to the component settings.\n       * @param {array} fields\n       *        An array of ABField instances that are in the current object.\n       * @param {array} hiddenFields\n       *        An array of the ABfield.columnName(s) that are to be hidden.\n       *        These are what are matched with the {columnHeader}.id\n       * @param {array} filters\n       *        The current filter settings.\n       * @param {array} sorts\n       *        The current sort settings.\n       * @param {string} frozenColumnID\n       *        the ABField.columnName of the column that we have frozen.\n       */\n      refreshHeader(\n         /* fields,*/ hiddenFields = [],\n         filters,\n         sorts,\n         frozenColumnID\n      ) {\n         var object = this.CurrentObject;\n         var columnHeaders = object.columnHeaders(true, true, [], [], []);\n\n         // this calculation is done in the ABViewGridComponent.refreshHeader():\n         // columnHeaders.forEach((h) => {\n         //    if (hiddenFields.indexOf(h.id) > -1) {\n         //       h.hidden = true;\n         //    }\n         // });\n         if (this._currentComponent) {\n            this._currentComponent.columnConfig(columnHeaders);\n\n            this._currentComponent.settings.hiddenFields = hiddenFields;\n            this._currentComponent.settings.filterConditions = filters;\n            this._currentComponent.settings.sortFields = sorts;\n            this._currentComponent.settings.frozenColumnID = frozenColumnID;\n\n            this._currentComponent.refreshHeader(true);\n         }\n      }\n\n      /**\n       * @function rowAdd()\n       *\n       * add a new row to the data table\n       */\n      /*\n      rowAdd() {\n         // TODO: delete this, I think...\n         debugger;\n         if (!settings.isEditable) return;\n\n         var emptyObj = CurrentObject.defaultValues();\n         CurrentObject.model()\n            .create(emptyObj)\n            .then((obj) => {\n               if (obj == null) return;\n\n               // var DataTable = $$(ids.component);\n               // if (!DataTable.exists(obj.id))\n               //     DataTable.add(obj, 0);\n               if (\n                  CurrentDatacollection &&\n                  CurrentDatacollection.__dataCollection &&\n                  !CurrentDatacollection.__dataCollection.exists(obj.id)\n               )\n                  CurrentDatacollection.__dataCollection.add(obj, 0);\n            });\n      }\n      */\n   }\n   return new UI_Work_Object_Workspace_View_Grid(iBase, iSettings);\n}\n","/*\n * ui_work_object_workspace_view_kanban\n *\n * Display an instance of a Kanban type of Workspace View in our area.\n *\n * This generic webix container will be given an instace of a workspace\n * view definition (Kanban), and then create an instance of an ABViewKanban\n * widget to display.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport FViewKanbanProperties from \"./properties/workspaceViews/ABViewKanban\";\n\nexport default function (AB, ibase) {\n   ibase = ibase || \"ui_work_object_workspace_view_kanban\";\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   const ViewKanbanProperties = FViewKanbanProperties(AB, `${ibase}_prop`);\n\n   class UI_Work_Object_Workspace_View_Kanban extends UIClass {\n      constructor(base) {\n         super(base);\n      }\n\n      // Our webix UI definition:\n      ui() {\n         var ids = this.ids;\n\n         return {\n            id: ids.component,\n            rows: [\n               {},\n               {\n                  view: \"label\",\n                  label: \"Impressive View -> Kanban\",\n               },\n               {},\n            ],\n         };\n      }\n\n      // Our init() function for setting up our UI\n      async init(AB) {\n         this.AB = AB;\n      }\n\n      defaultSettings(data) {\n         // Pull the ABViewGrid definitions\n         var defaultSettings = ViewKanbanProperties.toSettings();\n\n         // transfer our specific field settings\n         Object.keys(defaultSettings.settings).forEach((d) => {\n            defaultSettings.settings[d] = data[d];\n         });\n\n         // TODO: include a text label formatter in the editor for\n         // the Kanban view.  then pull the data.textTemplate into\n         // defaultSettings.settings.textTemplate\n         //\n         // Until then, just make a default view with each Object\n         // field: value:\n         defaultSettings.label = L(defaultSettings.name);\n\n         var textView = this.AB.viewNewDetatched({ key: \"text\" });\n\n         var CurrentObject = this.CurrentObject;\n         var labelData = CurrentObject.labelFormat;\n         if (!labelData && CurrentObject.fields().length > 0) {\n            var defaultFields = CurrentObject.fields((f) =>\n               f.fieldUseAsLabel()\n            );\n            defaultFields.forEach((f) => {\n               labelData = `${labelData}<br>${f.label}: {${textView.fieldKey(\n                  f\n               )}}`;\n            });\n         }\n\n         defaultSettings.settings.textTemplate = labelData;\n\n         // show all the fields in our Side Edit Form\n         defaultSettings.settings.editFields = CurrentObject.fields().map(\n            (f) => f.id\n         );\n\n         var defaultView = this.AB.viewNewDetatched(defaultSettings);\n         var defaultKanban = defaultView.toObj();\n         defaultKanban.id = data.id ?? AB.jobID();\n\n         return {\n            id: defaultKanban.id,\n            isDefaultView: false,\n            type: defaultKanban.type,\n            icon: defaultKanban.icon,\n\n            name: \"Default Kanban\",\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n\n            component: defaultKanban,\n         };\n      }\n\n      // getColumnIndex(id) {\n      //    return this._currentComponent.getColumnIndex(id);\n      // }\n\n      datacollectionLoad(dc) {\n         this.datacollection = dc;\n      }\n\n      // get $grid() {\n      //    return this._currentComponent?.getDataTable();\n      // }\n\n      // ready() {\n      //    this.ListComponent.ready();\n      // }\n\n      async show(view) {\n         await this.viewLoad(view);\n         $$(this.ids.component).show();\n         this.emit(\"show\");\n      }\n\n      async viewLoad(view) {\n         if (view.id == this.currentViewDef?.id) return;\n\n         this.currentViewDef = view;\n\n         this.currentView = this.AB.viewNewDetatched(view.component);\n         var component = this.currentView.component();\n\n         // OK, a ABViewGrid component wont display the grid unless there\n         // is a .datacollection or .dataviewID specified.\n         // but calling .datacollectionLoad() doesn't actually load the data\n         // unless there is the UI available.\n         // So ... do this to register the datacollection\n         // component.datacollectionLoad(this.datacollection);\n\n         var ui = component.ui();\n         ui.id = this.ids.component;\n         webix.ui(ui, $$(this.ids.component));\n         await component.init(this.AB);\n\n         // Now call .datacollectionLoad() again to actually load the data.\n         component.datacollectionLoad(this.datacollection);\n\n         component.show();\n\n         this._currentComponent = component;\n      }\n\n      /**\n       * @method viewNew()\n       * return a new workspace view definition with an ABViewKanban\n       * based upon the provided default data (gathered from our workspaceView)\n       * @param {obj} data\n       *        The configuration information for this ABView.\n       */\n      viewNew(data) {\n         var defaults = this.defaultSettings(data);\n         Object.keys(data).forEach((k) => {\n            defaults[k] = data[k];\n         });\n\n         return defaults;\n      }\n\n      // deleteSelected($view) {\n      //    return this._currentComponent.toolbarDeleteSelected($view);\n      // }\n\n      // massUpdate($view) {\n      //    return this._currentComponent.toolbarMassUpdate($view);\n      // }\n\n      /**\n       * @method refreshHeader()\n       * This is called everytime a change in the ABObject happens and the\n       * current component needs to refresh the display.  So when a Field is\n       * Added or Removed, the display of the component changes.\n       *\n       * the ui_work_object_workspace keeps track of what the USER has set\n       * for the hiddenFields, frozenColumns and related display options.\n       *\n       * Those are passed in, and we are responsible for converting that\n       * to the component settings.\n       * @param {array} fields\n       *        An array of ABField instances that are in the current object.\n       * @param {array} hiddenFields\n       *        An array of the ABfield.columnName(s) that are to be hidden.\n       *        These are what are matched with the {columnHeader}.id\n       * @param {array} filters\n       *        The current filter settings.\n       * @param {array} sorts\n       *        The current sort settings.\n       * @param {string} frozenColumnID\n       *        the ABField.columnName of the column that we have frozen.\n       */\n      // refreshHeader(\n      //    /* fields,*/ hiddenFields = [],\n      //    filters,\n      //    sorts,\n      //    frozenColumnID\n      // ) {\n      //    var object = this.CurrentObject;\n      //    var columnHeaders = object.columnHeaders(true, true, [], [], []);\n\n      //    // this calculation is done in the ABViewGridComponent.refreshHeader():\n      //    // columnHeaders.forEach((h) => {\n      //    //    if (hiddenFields.indexOf(h.id) > -1) {\n      //    //       h.hidden = true;\n      //    //    }\n      //    // });\n\n      //    this._currentComponent.columnConfig(columnHeaders);\n\n      //    this._currentComponent.settings.hiddenFields = hiddenFields;\n      //    this._currentComponent.settings.filterConditions = filters;\n      //    this._currentComponent.settings.sortFields = sorts;\n      //    this._currentComponent.settings.frozenColumnID = frozenColumnID;\n\n      //    this._currentComponent.refreshHeader(true);\n      // }\n\n      /**\n       * @function rowAdd()\n       *\n       * add a new row to the data table\n       */\n      /*\n      rowAdd() {\n         // TODO: delete this, I think...\n         debugger;\n         if (!settings.isEditable) return;\n\n         var emptyObj = CurrentObject.defaultValues();\n         CurrentObject.model()\n            .create(emptyObj)\n            .then((obj) => {\n               if (obj == null) return;\n\n               // var DataTable = $$(ids.component);\n               // if (!DataTable.exists(obj.id))\n               //     DataTable.add(obj, 0);\n               if (\n                  CurrentDatacollection &&\n                  CurrentDatacollection.__dataCollection &&\n                  !CurrentDatacollection.__dataCollection.exists(obj.id)\n               )\n                  CurrentDatacollection.__dataCollection.add(obj, 0);\n            });\n      }\n      */\n   }\n   return new UI_Work_Object_Workspace_View_Kanban(ibase);\n}\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object\n// Workspace\n//\n// Within the workspace, we offer the ability to view the current ABObject in\n// different ways: Grid, KanBan, Gantt\n//\n// We can define multiple views for each method, and each view will allow you\n// to customize certain view settings: Hidden Fields, Filters, Sorts, Frozen\n// columns, etc...\n//\n//\nimport UI_Class from \"./ui_class\";\nimport WorkspaceDatatable from \"./ui_work_object_workspace_view_grid\";\nimport WorkspaceGantt from \"./ui_work_object_workspace_view_gantt\";\nimport WorkspaceKanban from \"./ui_work_object_workspace_view_kanban\";\n\nimport FViewGanttProperties from \"./properties/workspaceViews/ABViewGantt\";\nimport FViewGridProperties from \"./properties/workspaceViews/ABViewGrid\";\nimport FViewKanbanProperties from \"./properties/workspaceViews/ABViewKanban\";\n\nexport default function (AB, ibase, isettings) {\n   ibase = ibase || \"ui_work_object_workspace_workspaceviews\";\n   const UIClass = UI_Class(AB);\n   // var L = UIClass.L();\n\n   const Datatable = WorkspaceDatatable(AB, `${ibase}_grid`, isettings);\n   const Gantt = WorkspaceGantt(AB);\n   const Kanban = WorkspaceKanban(AB);\n\n   // Gather a list of the various View Properties\n   const ViewGanttProperties = FViewGanttProperties(AB);\n   const ViewGridProperties = FViewGridProperties(AB);\n   const ViewKanbanProperties = FViewKanbanProperties(AB);\n\n   var hashViewProperties = {};\n   hashViewProperties[ViewGanttProperties.type()] = ViewGanttProperties;\n   hashViewProperties[ViewGridProperties.type()] = ViewGridProperties;\n   hashViewProperties[ViewKanbanProperties.type()] = ViewKanbanProperties;\n\n   var hashViewComponents = {};\n   hashViewComponents[ViewGanttProperties.type()] = Gantt;\n   hashViewComponents[ViewGridProperties.type()] = Datatable;\n   hashViewComponents[ViewKanbanProperties.type()] = Kanban;\n\n   const defaultAttributes = {\n      currentViewID: undefined,\n      list: [],\n   };\n\n   class ABObjectWorkspaceViewCollection extends UIClass {\n      constructor(base, settings) {\n         super(base);\n\n         this.AB = AB;\n         // {ABFactory}\n\n         this._settings = null;\n         // {hash} { ABObject.id  : {collection} }\n         // The data structure we are using to manage the different\n         // Views for each of our ABObjects.\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         Object.keys(hashViewComponents).forEach((k) => {\n            hashViewComponents[k].init(AB);\n         });\n\n         // load in the stored View data.\n         this._settings = (await this.AB.Storage.get(\"workspaceviews\")) || {};\n      }\n\n      objectLoad(object) {\n         if (this.CurrentObjectID) {\n            // save current data:\n            this._settings[this.CurrentObjectID] = this.toObj();\n         }\n         super.objectLoad(object);\n\n         Object.keys(hashViewComponents).forEach((k) => {\n            hashViewComponents[k].objectLoad(object);\n         });\n\n         this.fromObj(this._settings[this.CurrentObjectID]);\n      }\n\n      /**\n       * @method fromObj\n       * take our persisted data, and properly load it\n       * into this object instance.\n       * @param {json} data  the persisted data\n       */\n      fromObj(data) {\n         data = data || AB.cloneDeep(defaultAttributes);\n\n         if ((data?.list ?? []).length === 0) {\n            // We should always have at least one default grid view. So if this list\n            // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n            var defaultGrid = Datatable.defaultSettings();\n            defaultGrid.isDefaultView = true;\n            data.list.unshift(defaultGrid);\n         }\n\n         this.importViews(data);\n\n         this.currentViewID = data.currentViewID;\n         if (!this.currentViewID) {\n            this.currentViewID = this.list()[0].id;\n         }\n      }\n\n      /**\n       * @method toObj()\n       *\n       * properly compile the current state of this ABApplication instance\n       * into the values needed for saving to the DB.\n       *\n       * Most of the instance data is stored in .json field, so be sure to\n       * update that from all the current values of our child fields.\n       *\n       * @return {json}\n       */\n      toObj() {\n         return {\n            currentViewID: this.currentViewID,\n            list: this._views,\n         };\n      }\n\n      list(fn = () => true) {\n         return this._views.filter(fn);\n      }\n\n      importViews(viewSettings) {\n         this._views = [];\n         viewSettings.list.forEach((view) => {\n            this.viewAdd(view, false);\n         });\n      }\n\n      // exportViews() {\n      //    var views = [];\n      //    this._views.forEach((view) => {\n      //       views.push(view.toObj());\n      //    });\n\n      //    return views;\n      // }\n\n      getCurrentView() {\n         return this._views.find((v) => v.id == this.currentViewID);\n      }\n\n      setCurrentView(viewID) {\n         this.currentViewID = viewID;\n         this._currentView = this.getCurrentView();\n      }\n\n      async viewAdd(view, save = true) {\n         // var newView = new hashViewProperties[view.type](view, this);\n         this._views.push(view);\n         if (save) {\n            await this.save();\n         }\n         return view;\n      }\n\n      async viewNew(data) {\n         var ViewType = hashViewComponents[data.type];\n         if (!ViewType) return;\n\n         var newView = ViewType.viewNew(data);\n         await this.viewAdd(newView);\n         return newView;\n      }\n\n      viewRemove(view) {\n         var indexToRemove = this._views.indexOf(view);\n         this._views.splice(indexToRemove, 1);\n         if (view.id === this.currentViewID) {\n            this.currentViewID = this._views[0].id;\n         }\n         this.save();\n      }\n\n      /**\n       * @method save()\n       * Persist our settings to local storage.\n       * @return {Promise}\n       */\n      async save() {\n         this._settings[this.CurrentObjectID] = this.toObj();\n         try {\n            await this.AB.Storage.set(\"workspaceviews\", this._settings);\n         } catch (e) {\n            // WORKAROUND: to ignore Failed to execute 'setItem' on 'Storage': Setting the value of 'admin.workspaceviews' exceeded the quota error\n            console.error(e);\n         }\n      }\n\n      /**\n       * @method viewUpdate()\n       * replace an existing view definition with the newly provided one.\n       * NOTE: our view.component might be changed as well, so we regenerate\n       * that.\n       * @param {obj} view\n       *        The key=>value hash of the updated WorkspaceView.\n       * @return {Promise}\n       */\n      async viewUpdate(data) {\n         // generate a new view from the provided data;\n         var ViewType = hashViewComponents[data.type];\n         if (!ViewType) return;\n\n         // remove the .component so it gets regenerated:\n         delete data.component;\n\n         var view = ViewType.viewNew(data);\n\n         // NOTE: [].splice() isn't a good candidate to use here as\n         // view is a newly created object each time.\n         var _newViews = [];\n         this._views.forEach((v) => {\n            if (v.id != view.id) {\n               _newViews.push(v);\n               return;\n            }\n            _newViews.push(view);\n         });\n         this._views = _newViews;\n\n         await this.save();\n      }\n\n      ///\n      /// CurrentView Operations\n      ///\n      get filterConditions() {\n         return this._currentView.filterConditions;\n      }\n\n      set filterConditions(cond) {\n         this._currentView.filterConditions = cond;\n      }\n\n      get frozenColumnID() {\n         return this._currentView.frozenColumnID;\n      }\n\n      set frozenColumnID(id) {\n         this._currentView.frozenColumnID = id;\n      }\n\n      get hiddenFields() {\n         return this._currentView.hiddenFields || [];\n      }\n\n      set hiddenFields(fields) {\n         this._currentView.hiddenFields = fields;\n      }\n\n      get sortFields() {\n         return this._currentView.sortFields;\n      }\n\n      set sortFields(fields = []) {\n         this._currentView.sortFields = fields;\n      }\n   }\n   return new ABObjectWorkspaceViewCollection(ibase, isettings);\n}\n","/*\n * ui_work_process\n *\n * Display the Process Tab UI:\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_Work_Process_List from \"./ui_work_process_list\";\nimport UI_Work_Process_Workspace from \"./ui_work_process_workspace\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n\n   class UI_Work_Process extends UIClass {\n      constructor() {\n         super(\"ui_work_process\");\n\n         this.CurrentProcessID = null;\n         // {string} uuid\n         // The current ABProcess.id we are working with.\n\n         this.ProcessList = UI_Work_Process_List(AB);\n         this.ProcessWorkspace = UI_Work_Process_Workspace(AB);\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            type: \"space\",\n            margin: 10,\n            cols: [\n               this.ProcessList.ui(),\n               { view: \"resizer\", css: \"bg_gray\", width: 11 },\n               this.ProcessWorkspace.ui(),\n            ],\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         // Our init() function for setting up our UI\n         // the ProcessWorkspace can show an [add] button if there is\n         // no Process selected. When that Add button is pressed,\n         // trigger our addNew process on our ProcessList\n         this.ProcessWorkspace.on(\"addNew\", () => {\n            this.ProcessList.clickNewProcess(true);\n         });\n\n         this.ProcessList.on(\"selected\", (process) => {\n            this.select(process);\n         });\n\n         this.ProcessList.on(\"deleted\", (process) => {\n            if (this.CurrentProcessID == process.id) {\n               this.select(null);\n            }\n         });\n\n         return Promise.all([\n            this.ProcessWorkspace.init(AB),\n            this.ProcessList.init(AB),\n         ]);\n      }\n\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         this.ProcessWorkspace.applicationLoad(application);\n         this.ProcessList.applicationLoad(application);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show(false, false);\n\n         var app = this.CurrentApplication;\n         if (app && (!app.loadedProcesss || this.ProcessList?.count() < 1)) {\n            this.ProcessList?.busy();\n            this.ProcessList?.applicationLoad(app);\n            this.ProcessList?.ready();\n         }\n      }\n\n      select(process) {\n         this.CurrentProcessID = process?.id;\n\n         if (!process) this.ProcessWorkspace?.clearWorkspace();\n         else this.ProcessWorkspace?.processLoad(process);\n      }\n   }\n\n   return new UI_Work_Process();\n}\n","/*\n * ui_work_process_list\n *\n * Manage the Process List\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_COMMON_LIST from \"./ui_common_list\";\nimport UI_PROCESS_NEW_FORM from \"./ui_work_process_list_newProcess\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   // var L = UIClass.L();\n\n   class UI_Work_Process_List extends UIClass {\n      constructor() {\n         super(\"ui_work_process_list\");\n\n         // {ui_common_list} instance to display a list of our objects.\n         this.ListComponent = UI_COMMON_LIST(AB, {\n            idBase: this.ids.component,\n            labels: {\n               addNew: \"Add new process\",\n               confirmDeleteTitle: \"Delete Process\",\n               title: \"Processes\",\n               searchPlaceholder: \"Process name\",\n            },\n            // we can overrid the default template like this:\n            templateListItem:\n               \"<div class='ab-object-list-item'>#label#{common.iconGear}</div>\",\n            menu: {\n               copy: false,\n               exclude: true,\n            },\n         });\n\n         // the popup form for adding a new process\n         this.AddForm = UI_PROCESS_NEW_FORM(AB);\n      }\n\n      // Our webix UI definition:\n      ui() {\n         return this.ListComponent.ui();\n      }\n\n      // Our init() function for setting up our UI\n      async init(AB) {\n         this.AB = AB;\n\n         this.on(\"addNew\", (selectNew) => {\n            // if we receive a signal to add a new Object from another source\n            // like the blank object workspace offering an Add New button:\n            this.clickNewProcess(selectNew);\n         });\n\n         //\n         // List of Processes\n         //\n         await this.ListComponent.init(AB);\n\n         this.ListComponent.on(\"selected\", (item) => {\n            this.emit(\"selected\", item);\n         });\n\n         this.ListComponent.on(\"addNew\", (selectNew) => {\n            this.clickNewProcess(selectNew);\n         });\n\n         this.ListComponent.on(\"deleted\", (item) => {\n            this.emit(\"deleted\", item);\n         });\n\n         this.ListComponent.on(\"exclude\", (item) => {\n            this.exclude(item);\n         });\n\n         this.ListComponent.on(\"copied\", (data) => {\n            this.copy(data);\n         });\n\n         //\n         // Add Form\n         //\n         await this.AddForm.init(AB);\n\n         this.AddForm.on(\"cancel\", () => {\n            this.AddForm.hide();\n         });\n\n         this.AddForm.on(\"save\", (process /*, select */) => {\n            // the AddForm already takes care of updating the\n            // CurrentApplication.\n\n            // we just need to update our list of objects\n            this.applicationLoad(this.CurrentApplication);\n\n            // if (select) {\n            this.ListComponent.select(process.id);\n            // }\n         });\n      }\n\n      /**\n       * @function applicationLoad\n       * Initialize the List from the provided ABApplication\n       * If no ABApplication is provided, then show an empty form. (create operation)\n       * @param {ABApplication} application\n       *        [optional] The current ABApplication we are working with.\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n         this.ListComponent.dataLoad(application?.processes());\n         this.AddForm.applicationLoad(application);\n      }\n\n      /**\n       * @function clickNewProcess\n       *\n       * Manages initiating the transition to the new Process Popup window\n       */\n      clickNewProcess(/* selectNew */) {\n         // show the new popup\n         this.AddForm.show();\n      }\n\n      /**\n       * @function copy\n       * the list component notified us of a copy action and has\n       * given us the new data for the copied item.\n       *\n       * now our job is to create a new instance of that Item and\n       * tell the list to display it\n       */\n      copy(data) {\n         this.ListComponent.busy();\n\n         this.CurrentApplication.processCreate(data.item).then((newProcess) => {\n            this.ListComponent.ready();\n            this.ListComponent.dataLoad(this.CurrentApplication.processes());\n            this.ListComponent.select(newProcess.id);\n         });\n      }\n\n      /**\n       * @function exclude\n       * the list component notified us of an exclude action and which\n       * item was chosen.\n       *\n       * perform the removal and update the UI.\n       */\n      async exclude(process) {\n         this.ListComponent.busy();\n         await this.CurrentApplication.processRemove(process);\n         this.ListComponent.dataLoad(this.CurrentApplication.processes());\n\n         // this will clear the object workspace\n         this.emit(\"selected\", null);\n      }\n\n      busy() {\n         this.ListComponent.busy();\n      }\n\n      ready() {\n         this.ListComponent.ready();\n      }\n   }\n   return new UI_Work_Process_List();\n}\n","/*\n * ui_work_process_list_newProcess\n *\n * Display the form for creating a new Application.\n *\n */\nimport UI_Class from \"./ui_class\";\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Process_List_NewProcess extends UIClass {\n      constructor() {\n         super(\"ui_work_process_list_newProcess\", {\n            form: \"\",\n            buttonCancel: \"\",\n            buttonSave: \"\",\n         });\n\n         // {bool} do we select a new data collection after it is created.\n         this.selectNew = true;\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            view: \"window\",\n            id: this.ids.component,\n            position: \"center\",\n            modal: true,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Add new Process\"),\n                     css: \"modal_title\",\n                     align: \"center\",\n                  },\n                  {\n                     view: \"button\",\n                     autowidth: true,\n                     type: \"icon\",\n                     icon: \"nomargin fa fa-times\",\n                     click: () => {\n                        this.emit(\"cancel\");\n                     },\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            body: {\n               view: \"form\",\n               id: this.ids.form,\n               width: 400,\n               rules: {\n                  // TODO:\n                  // name: inputValidator.rules.validateObjectName\n               },\n               elements: [\n                  {\n                     view: \"text\",\n                     label: L(\"Name\"),\n                     name: \"name\",\n                     required: true,\n                     placeholder: L(\"Enter process name\"),\n                     labelWidth: 70,\n                  },\n                  {\n                     margin: 5,\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonCancel,\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.emit(\"cancel\");\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonSave,\n                           css: \"webix_primary\",\n                           value: L(\"Save\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              let vals = $$(this.ids.form).getValues();\n                              return this.save(vals);\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n         this.$component = $$(this.ids.component);\n         this.$form = $$(this.ids.form);\n         this.$buttonSave = $$(this.ids.buttonSave);\n         webix.extend(this.$component, webix.ProgressBar);\n\n         this.hide();\n      }\n\n      /**\n       * @method save\n       * take the data gathered by our child creation tabs, and\n       * add it to our current application.\n       * @param {obj} values  key=>value hash of model values.\n       * @return {Promise}\n       */\n      async save(values) {\n         // must have an application set.\n         if (!this.CurrentApplication) {\n            webix.alert({\n               title: L(\"Shoot!\"),\n               test: L(\"No Application Set!  Why?\"),\n            });\n            this.emit(\"save.error\", true);\n            return false;\n         }\n\n         this.busy();\n\n         try {\n            // create a new process:\n            let newProcess = await this.AB.processNew(values);\n            await newProcess.save();\n            await this.CurrentApplication.processInsert(newProcess);\n            this.emit(\"save\", newProcess);\n            this.clear();\n            this.hide();\n         } catch (err) {\n            console.error(err);\n            this.emit(\"save.error\", err);\n            return false;\n         }\n\n         this.ready();\n         return true;\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         if (this.$component) this.$component.show();\n      }\n\n      /**\n       * @function hide()\n       *\n       * remove the busy indicator from the form.\n       */\n      hide() {\n         if (this.$component) this.$component.hide();\n      }\n\n      /**\n       * @function clear()\n       *\n       */\n      clear() {\n         this.$form.clearValidation();\n         this.$form.clear();\n         this.$buttonSave.enable();\n      }\n\n      /**\n       * Show the busy indicator\n       */\n      busy() {\n         if (this.$component && this.$component.showProgress) {\n            this.$component.showProgress({ type: \"icon\" });\n         }\n      }\n\n      /**\n       * Hide the busy indicator\n       */\n      ready() {\n         if (this.$component && this.$component.hideProgress) {\n            this.$component.hideProgress();\n         }\n      }\n   }\n\n   return new UI_Work_Process_List_NewProcess();\n}\n","import UI_Class from \"./ui_class\";\nimport UI_Warnings from \"./ui_warnings\";\n\nimport UI_Work_Process_Workspace_MODEL from \"./ui_work_process_workspace_model\";\nimport UI_Work_Process_Workspace_MONITOR from \"./ui_work_process_workspace_monitor\";\n\nexport default function (AB) {\n   const ibase = \"ui_work_process_workspace\";\n   const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   let mockUI = {\n      ui: () => {},\n      init: () => {\n         return Promise.resolve();\n      },\n      applicationLoad: () => {},\n      clearWorkspace: () => {},\n      processLoad: () => {},\n   };\n   const ModelUI = UI_Work_Process_Workspace_MODEL(AB);\n   const TestUI = mockUI;\n   const MonitorUI = UI_Work_Process_Workspace_MONITOR(AB);\n\n   var Warnings = UI_Warnings(AB, `${ibase}_view_warnings`);\n\n   class UI_Work_Process_Workspace extends UIClass {\n      constructor() {\n         super(ibase, {\n            multiview: \"\",\n\n            tabbar: \"\",\n            tabModel: \"\",\n            tabTest: \"\",\n            tabMonitor: \"\",\n\n            noSelection: \"\",\n            selectedItem: \"\",\n         });\n      }\n\n      ui() {\n         let ids = this.ids;\n\n         return {\n            view: \"multiview\",\n            id: ids.component,\n            keepViews: true,\n            rows: [\n               {\n                  id: ids.noSelection,\n                  rows: [\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: 200,\n                        label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-code-fork'></div>\",\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: L(\"Select a process to work with.\"),\n                     },\n                     {\n                        cols: [\n                           {},\n                           {\n                              view: \"button\",\n                              label: L(\"Add new process\"),\n                              type: \"form\",\n                              css: \"webix_primary\",\n                              autowidth: true,\n                              click: () => {\n                                 this.addNewProcess();\n                              },\n                           },\n                           {},\n                        ],\n                     },\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                  ],\n               },\n               {\n                  id: ids.selectedItem,\n                  type: \"wide\",\n                  paddingY: 0,\n                  // css: \"ab-data-toolbar\",\n                  // borderless: true,\n                  rows: [\n                     {\n                        id: ids.tabbar,\n                        view: \"tabbar\",\n                        css: \"webix_dark\",\n                        type: \"bottom\",\n                        borderless: false,\n                        bottomOffset: 0,\n                        // css: \"ab-data-toolbar\",\n                        options: [\n                           {\n                              id: ids.tabModel,\n                              value: L(\"Model\"),\n                              icon: \"fa fa-code-fork\",\n                              type: \"icon\",\n                              on: {\n                                 click: () => {\n                                    this.changeTab(\"model\");\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.tabTest,\n                              value: L(\"Test\"),\n                              icon: \"fa fa-check-square\",\n                              type: \"icon\",\n                              on: {\n                                 click: () => {\n                                    this.changeTab(\"test\");\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.tabMonitor,\n                              value: L(\"Monitor\"),\n                              icon: \"fa fa-tachometer\",\n                              type: \"icon\",\n                              on: {\n                                 click: () => {\n                                    this.changeTab(\"monitor\");\n                                 },\n                              },\n                           },\n                        ],\n                        on: {\n                           onChange: (newv, oldv) => {\n                              if (newv != oldv) {\n                                 this.changeTab(newv);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.multiview,\n                        view: \"multiview\",\n                        cells: [\n                           ModelUI.ui(),\n                           // TestUI.ui(),\n                           MonitorUI.ui(),\n                        ],\n                     },\n                     Warnings.ui(),\n                  ],\n               },\n            ],\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         // this.warningsPropogate([ModelUI, TestUI, MonitorUI]);\n         this.on(\"warnings\", () => {\n            Warnings.show(this.CurrentProcess);\n         });\n\n         $$(this.ids.noSelection).show();\n         var allInits = [ModelUI.init(AB), TestUI.init(AB), MonitorUI.init(AB)];\n\n         await Promise.all(allInits);\n      }\n\n      addNewProcess() {\n         this.emit(\"addNew\");\n      }\n\n      /**\n       * @function applicationLoad\n       *\n       * Initialize the Object Workspace with the given ABApplication.\n       *\n       * @param {ABApplication} application\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         ModelUI.applicationLoad(application);\n         TestUI.applicationLoad(application);\n         MonitorUI.applicationLoad(application);\n      }\n\n      /**\n       * @function changeTab\n       *\n       * receive the command for which tab to display.\n       * @param {string} mode  the name/key of which tab to display.\n       */\n      changeTab(tab) {\n         let ids = this.ids;\n\n         switch (tab) {\n            case ids.tabModel:\n               $$(ids.multiview).setValue(ModelUI.ids.component);\n               break;\n\n            case ids.tabTest:\n               $$(ids.multiview).setValue(TestUI.ids.component);\n               break;\n\n            case ids.tabMonitor:\n               $$(ids.multiview).setValue(MonitorUI.ids.component);\n               break;\n         }\n      }\n\n      /**\n       * @function clearWorkspace()\n       *\n       * Clear the object workspace.\n       */\n      clearWorkspace() {\n         // NOTE: to clear a visual glitch when multiple views are updating\n         // at one time ... stop the animation on this one:\n         $$(this.ids.noSelection).show(false, false);\n\n         ModelUI.clearWorkspace();\n         TestUI.clearWorkspace();\n         MonitorUI.clearWorkspace();\n      }\n\n      /**\n       * @function processLoad()\n       * Initialize the Workspace with the provided ABProcess.\n       * @param {ABProcess} process\n       *        current ABProcess instance we are working with.\n       */\n      processLoad(process) {\n         super.processLoad(process);\n\n         $$(this.ids.selectedItem).show();\n\n         ModelUI.processLoad(process);\n         TestUI.processLoad(process);\n         MonitorUI.processLoad(process);\n      }\n   }\n\n   return new UI_Work_Process_Workspace();\n}\n","/*\n * ui_work_process_workspace_customBPMN\n *\n * Provide customized interface modifications to BPMN Modler\n *\n */\nimport FPaletteProvider from \"./ui_work_process_workspace_customBPMN_paletteProvider\";\nimport FReplaceMenuProvider from \"./ui_work_process_workspace_customBPMN_replaceMenuProvider\";\n\nexport default function (AB) {\n   const PaletteProvider = FPaletteProvider(AB);\n   const ReplaceMenuProvider = FReplaceMenuProvider(AB);\n\n   return {\n      __init__: [\"paletteProvider\", \"replaceMenuProvider\"],\n      paletteProvider: [\"type\", PaletteProvider],\n      replaceMenuProvider: [\"type\", ReplaceMenuProvider],\n   };\n}\n","/*\n * ui_work_process_workspace_customBPMN_customElements\n *\n * Provide definitions for our special events/UI diagrams\n *\n */\n\n/**\n * For Example, see the following :\n * https://github.com/bpmn-io/bpmn-js-example-model-extension\n */\nexport default function customEvents() {\n   return {\n      name: \"AppBuilder\",\n      uri: \"http://some-company/schema/bpmn/ab\",\n      prefix: \"ab\",\n      xml: {\n         tagAlias: \"lowerCase\",\n      },\n      types: [\n         {\n            name: \"SignalLifecycle\",\n            extends: [\"bpmn:SignalEventDefinition\"],\n            // extends: [\"bpmn:FlowNode\"],\n            properties: [],\n         },\n         {\n            name: \"SignalTriggerTimer\",\n            extends: [\"bpmn:SignalEventDefinition\"],\n            // extends: [\"bpmn:FlowNode\"],\n            properties: [],\n         },\n      ],\n      emumerations: [],\n      associations: [],\n   };\n}\n","/*\n * ui_work_process_workspace_customBPMN_palletProvider\n *\n * Provide customized interface modifications to BPMN Modler\n *\n */\n\nfunction PaletteProvider(\n   palette,\n   create,\n   elementFactory,\n   spaceTool,\n   lassoTool,\n   handTool,\n   translate\n) {\n   this._palette = palette;\n   this._create = create;\n   this._elementFactory = elementFactory;\n   this._spaceTool = spaceTool;\n   this._lassoTool = lassoTool;\n   this._handTool = handTool;\n   this._translate = translate;\n\n   palette.registerProvider(this);\n}\n\nPaletteProvider.$inject = [\n   \"palette\",\n   \"create\",\n   \"elementFactory\",\n   \"spaceTool\",\n   \"lassoTool\",\n   \"handTool\",\n   \"translate\",\n   \"eventBus\",\n];\n\nPaletteProvider.prototype.getPaletteEntries = function (/* element */) {\n   var create = this._create,\n      elementFactory = this._elementFactory,\n      spaceTool = this._spaceTool,\n      lassoTool = this._lassoTool,\n      handTool = this._handTool,\n      translate = this._translate;\n\n   function createAction(type, group, className, title, options) {\n      function createListener(event) {\n         var sOptions = { type: type };\n         if (options) {\n            for (var o in options) {\n               sOptions[o] = options[o];\n            }\n         }\n         var shape = elementFactory.createShape(sOptions);\n\n         if (options) {\n            shape.businessObject.di.isExpanded = options.isExpanded;\n         }\n\n         create.start(event, shape);\n      }\n\n      var shortType = type.replace(/^bpmn:/, \"\");\n\n      return {\n         group: group,\n         className: className,\n         title: title || translate(\"Create {type}\", { type: shortType }),\n         action: {\n            dragstart: createListener,\n            click: createListener,\n         },\n      };\n   }\n   function createParticipant(event, collapsed) {\n      create.start(event, elementFactory.createParticipantShape(collapsed));\n   }\n\n   var actions = {\n      \"hand-tool\": {\n         group: \"tools\",\n         className: \"bpmn-icon-hand-tool\",\n         title: translate(\"Activate the hand tool\"),\n         action: {\n            click: function (event) {\n               handTool.activateHand(event);\n            },\n         },\n      },\n      \"lasso-tool\": {\n         group: \"tools\",\n         className: \"bpmn-icon-lasso-tool\",\n         title: translate(\"Activate the lasso tool\"),\n         action: {\n            click: function (event) {\n               lassoTool.activateSelection(event);\n            },\n         },\n      },\n      \"space-tool\": {\n         group: \"tools\",\n         className: \"bpmn-icon-space-tool\",\n         title: translate(\"Activate the create/remove space tool\"),\n         action: {\n            click: function (event) {\n               spaceTool.activateSelection(event);\n            },\n         },\n      },\n      \"tool-separator\": {\n         group: \"tools\",\n         separator: true,\n      },\n      \"create.start-event\": createAction(\n         \"bpmn:StartEvent\",\n         \"event\",\n         \"bpmn-icon-start-event-none\"\n      ),\n      // 'create.intermediate-event-catch-timer': createAction(\n      //    'bpmn:TimerEventDefinition', 'activity', 'bpmn-icon-intermediate-event-catch-timer'\n      // ),\n\n      // \"create.intermediate-event\": createAction(\n      //     \"bpmn:IntermediateThrowEvent\",\n      //     \"event\",\n      //     \"bpmn-icon-intermediate-event-none\"\n      // ),\n      \"create.end-event\": createAction(\n         \"bpmn:EndEvent\",\n         \"event\",\n         \"bpmn-icon-end-event-none\"\n      ),\n      \"create.exclusive-gateway\": createAction(\n         \"bpmn:ExclusiveGateway\",\n         \"gateway\",\n         \"bpmn-icon-gateway-xor\"\n      ),\n      // \"create.user-task\": createAction(\n      //     \"bpmn:UserTask\",\n      //     \"activity\",\n      //     \"bpmn-icon-user-task\"\n      // ),\n      //'create.BoundaryEvent': createAction(\n      //    'bpmn:BoundaryEvent', 'activity', 'bpmn-icon-intermediate-event-catch-timer'\n      //),\n\n      \"create.task\": createAction(\"bpmn:Task\", \"activity\", \"bpmn-icon-task\"),\n      //'create.data-object': createAction(\n      //  'bpmn:DataObjectReference', 'data-object', 'bpmn-icon-data-object'\n      //),\n      // \"create.Service-Task\": createAction(\n      //     \"bpmn:ServiceTask\",\n      //     \"activity\",\n      //     \"bpmn-icon-service\"\n      // ),\n      // \"create.data-store\": createAction(\n      //     \"bpmn:DataStoreReference\",\n      //     \"data-store\",\n      //     \"bpmn-icon-data-store\"\n      // ),\n      //'create.subprocess-expanded': createAction(\n      //  'bpmn:SubProcess', 'activity', 'bpmn-icon-subprocess-expanded', translate('Create expanded SubProcess'),\n      //  { isExpanded: true }\n      //),\n      \"create.participant-expanded\": {\n         group: \"collaboration\",\n         className: \"bpmn-icon-participant\",\n         title: translate(\"Create Pool/Participant\"),\n         action: {\n            dragstart: createParticipant,\n            click: createParticipant,\n         },\n      },\n   };\n   // console.log(\"customPalletProvider.getPalletEntries():\", actions);\n   return actions;\n};\n\nexport default function (/* AB */) {\n   return PaletteProvider;\n}\n","/*\n * ui_work_process_workspace_customBPMN_replaceMenuProvider\n *\n * Provide customized interface modifications to BPMN Modler\n *\n */\nimport { getBusinessObject, is } from \"bpmn-js/lib/util/ModelUtil\";\n\nimport { isEventSubProcess, isExpanded } from \"bpmn-js/lib/util/DiUtil\";\n\nimport { isDifferentType } from \"bpmn-js/lib/features/popup-menu/util/TypeUtil\";\n\nimport { forEach, filter } from \"min-dash\";\n\nimport * as replaceOptions from \"bpmn-js/lib/features/replace/ReplaceOptions\";\n\n// import ProcessTaskManager from \"../classes/core/process/ABProcessTaskManager\";\n\nexport default function (AB) {\n   const ProcessTaskManager = AB.Class.ABProcessTaskManager;\n\n   /**\n    * This module is an element agnostic replace menu provider for the popup menu.\n    */\n   function ReplaceMenuProvider(\n      popupMenu,\n      modeling,\n      moddle,\n      bpmnReplace,\n      rules,\n      translate\n   ) {\n      this._popupMenu = popupMenu;\n      this._modeling = modeling;\n      this._moddle = moddle;\n      this._bpmnReplace = bpmnReplace;\n      this._rules = rules;\n      this._translate = translate;\n\n      this.register();\n   }\n\n   ReplaceMenuProvider.$inject = [\n      \"popupMenu\",\n      \"modeling\",\n      \"moddle\",\n      \"bpmnReplace\",\n      \"rules\",\n      \"translate\",\n   ];\n\n   /**\n    * Register replace menu provider in the popup menu\n    */\n   ReplaceMenuProvider.prototype.register = function () {\n      this._popupMenu.registerProvider(\"bpmn-replace\", this);\n   };\n\n   /**\n    * Get all entries from replaceOptions for the given element and apply filters\n    * on them. Get for example only elements, which are different from the current one.\n    *\n    * @param {djs.model.Base} element\n    *\n    * @return {Array<Object>} a list of menu entry items\n    */\n   // Original Code:\n   // ReplaceMenuProvider.prototype.getEntries = function(element) {\n   //     var businessObject = element.businessObject;\n\n   //     var rules = this._rules;\n\n   //     var entries;\n\n   //     if (!rules.allowed(\"shape.replace\", { element: element })) {\n   //         return [];\n   //     }\n\n   //     var differentType = isDifferentType(element);\n\n   //     // start events outside event sub processes\n   //     if (\n   //         is(businessObject, \"bpmn:StartEvent\") &&\n   //         !isEventSubProcess(businessObject.$parent)\n   //     ) {\n   //         entries = filter(replaceOptions.START_EVENT, differentType);\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // expanded/collapsed pools\n   //     if (is(businessObject, \"bpmn:Participant\")) {\n   //         entries = filter(replaceOptions.PARTICIPANT, function(entry) {\n   //             return isExpanded(businessObject) !== entry.target.isExpanded;\n   //         });\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // start events inside event sub processes\n   //     if (\n   //         is(businessObject, \"bpmn:StartEvent\") &&\n   //         isEventSubProcess(businessObject.$parent)\n   //     ) {\n   //         entries = filter(replaceOptions.EVENT_SUB_PROCESS_START_EVENT, function(\n   //             entry\n   //         ) {\n   //             var target = entry.target;\n\n   //             var isInterrupting = target.isInterrupting !== false;\n\n   //             var isInterruptingEqual =\n   //                 getBusinessObject(element).isInterrupting === isInterrupting;\n\n   //             // filters elements which types and event definition are equal but have have different interrupting types\n   //             return (\n   //                 differentType(entry) ||\n   //                 (!differentType(entry) && !isInterruptingEqual)\n   //             );\n   //         });\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // end events\n   //     if (is(businessObject, \"bpmn:EndEvent\")) {\n   //         entries = filter(replaceOptions.END_EVENT, function(entry) {\n   //             var target = entry.target;\n\n   //             // hide cancel end events outside transactions\n   //             if (\n   //                 target.eventDefinitionType == \"bpmn:CancelEventDefinition\" &&\n   //                 !is(businessObject.$parent, \"bpmn:Transaction\")\n   //             ) {\n   //                 return false;\n   //             }\n\n   //             return differentType(entry);\n   //         });\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // boundary events\n   //     if (is(businessObject, \"bpmn:BoundaryEvent\")) {\n   //         entries = filter(replaceOptions.BOUNDARY_EVENT, function(entry) {\n   //             var target = entry.target;\n\n   //             if (\n   //                 target.eventDefinition == \"bpmn:CancelEventDefinition\" &&\n   //                 !is(businessObject.attachedToRef, \"bpmn:Transaction\")\n   //             ) {\n   //                 return false;\n   //             }\n   //             var cancelActivity = target.cancelActivity !== false;\n\n   //             var isCancelActivityEqual =\n   //                 businessObject.cancelActivity == cancelActivity;\n\n   //             return (\n   //                 differentType(entry) ||\n   //                 (!differentType(entry) && !isCancelActivityEqual)\n   //             );\n   //         });\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // intermediate events\n   //     if (\n   //         is(businessObject, \"bpmn:IntermediateCatchEvent\") ||\n   //         is(businessObject, \"bpmn:IntermediateThrowEvent\")\n   //     ) {\n   //         entries = filter(replaceOptions.INTERMEDIATE_EVENT, differentType);\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // gateways\n   //     if (is(businessObject, \"bpmn:Gateway\")) {\n   //         entries = filter(replaceOptions.GATEWAY, differentType);\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // transactions\n   //     if (is(businessObject, \"bpmn:Transaction\")) {\n   //         entries = filter(replaceOptions.TRANSACTION, differentType);\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // expanded event sub processes\n   //     if (isEventSubProcess(businessObject) && isExpanded(businessObject)) {\n   //         entries = filter(replaceOptions.EVENT_SUB_PROCESS, differentType);\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // expanded sub processes\n   //     if (is(businessObject, \"bpmn:SubProcess\") && isExpanded(businessObject)) {\n   //         entries = filter(replaceOptions.SUBPROCESS_EXPANDED, differentType);\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // collapsed ad hoc sub processes\n   //     if (\n   //         is(businessObject, \"bpmn:AdHocSubProcess\") &&\n   //         !isExpanded(businessObject)\n   //     ) {\n   //         entries = filter(replaceOptions.TASK, function(entry) {\n   //             var target = entry.target;\n\n   //             var isTargetSubProcess = target.type === \"bpmn:SubProcess\";\n\n   //             var isTargetExpanded = target.isExpanded === true;\n\n   //             return (\n   //                 isDifferentType(element, target) &&\n   //                 (!isTargetSubProcess || isTargetExpanded)\n   //             );\n   //         });\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     // sequence flows\n   //     if (is(businessObject, \"bpmn:SequenceFlow\")) {\n   //         return this._createSequenceFlowEntries(\n   //             element,\n   //             replaceOptions.SEQUENCE_FLOW\n   //         );\n   //     }\n\n   //     // flow nodes\n   //     if (is(businessObject, \"bpmn:FlowNode\")) {\n   //         entries = filter(replaceOptions.TASK, differentType);\n\n   //         // collapsed SubProcess can not be replaced with itself\n   //         if (\n   //             is(businessObject, \"bpmn:SubProcess\") &&\n   //             !isExpanded(businessObject)\n   //         ) {\n   //             entries = filter(entries, function(entry) {\n   //                 return entry.label !== \"Sub Process (collapsed)\";\n   //             });\n   //         }\n\n   //         return this._createEntries(element, entries);\n   //     }\n\n   //     return [];\n   // };\n\n   ReplaceMenuProvider.prototype.getEntries = function (element) {\n      var businessObject = element.businessObject;\n\n      var rules = this._rules;\n\n      var entries;\n\n      if (!rules.allowed(\"shape.replace\", { element: element })) {\n         return [];\n      }\n\n      var differentType = isDifferentType(element);\n\n      // start events outside event sub processes\n      if (\n         is(businessObject, \"bpmn:StartEvent\") &&\n         !isEventSubProcess(businessObject.$parent)\n      ) {\n         if (\n            businessObject.$parent &&\n            businessObject.$parent.$type == \"bpmn:SubProcess\"\n         ) {\n            return [];\n         }\n\n         entries = filter(ProcessTaskManager.StartEvents(), differentType);\n         // entries = ProcessTaskManager.StartEvents();\n\n         return this._createEntries(element, entries);\n         // return this._createEntries(element, []);\n      }\n\n      // expanded/collapsed pools\n      if (is(businessObject, \"bpmn:Participant\")) {\n         entries = filter(replaceOptions.PARTICIPANT, function (entry) {\n            return isExpanded(businessObject) !== entry.target.isExpanded;\n         });\n\n         return this._createEntries(element, entries);\n      }\n\n      // start events inside event sub processes\n      if (\n         is(businessObject, \"bpmn:StartEvent\") &&\n         isEventSubProcess(businessObject.$parent)\n      ) {\n         if (\n            businessObject.$parent &&\n            businessObject.$parent.$type == \"bpmn:SubProcess\"\n         ) {\n            return [];\n         }\n\n         entries = filter(\n            replaceOptions.EVENT_SUB_PROCESS_START_EVENT,\n            function (entry) {\n               var target = entry.target;\n\n               var isInterrupting = target.isInterrupting !== false;\n\n               var isInterruptingEqual =\n                  getBusinessObject(element).isInterrupting === isInterrupting;\n\n               // filters elements which types and event definition are equal but have have different interrupting types\n               return (\n                  differentType(entry) ||\n                  (!differentType(entry) && !isInterruptingEqual)\n               );\n            }\n         );\n\n         return this._createEntries(element, entries);\n      }\n\n      // end events\n      if (is(businessObject, \"bpmn:EndEvent\")) {\n         entries = filter(ProcessTaskManager.EndEvents(), function (entry) {\n            var target = entry.target;\n\n            // hide cancel end events outside transactions\n            if (\n               target.eventDefinitionType == \"bpmn:CancelEventDefinition\" &&\n               !is(businessObject.$parent, \"bpmn:Transaction\")\n            ) {\n               return false;\n            }\n\n            return differentType(entry);\n         });\n\n         return this._createEntries(element, entries);\n      }\n\n      // boundary events\n      if (is(businessObject, \"bpmn:BoundaryEvent\")) {\n         entries = filter(replaceOptions.BOUNDARY_EVENT, function (entry) {\n            var target = entry.target;\n\n            if (\n               target.eventDefinition == \"bpmn:CancelEventDefinition\" &&\n               !is(businessObject.attachedToRef, \"bpmn:Transaction\")\n            ) {\n               return false;\n            }\n            var cancelActivity = target.cancelActivity !== false;\n\n            var isCancelActivityEqual =\n               businessObject.cancelActivity == cancelActivity;\n\n            return (\n               differentType(entry) ||\n               (!differentType(entry) && !isCancelActivityEqual)\n            );\n         });\n\n         return this._createEntries(element, entries);\n      }\n\n      // intermediate events\n      if (\n         is(businessObject, \"bpmn:IntermediateCatchEvent\") ||\n         is(businessObject, \"bpmn:IntermediateThrowEvent\")\n      ) {\n         entries = filter(replaceOptions.INTERMEDIATE_EVENT, differentType);\n\n         return this._createEntries(element, entries);\n      }\n\n      // gateways\n      if (is(businessObject, \"bpmn:Gateway\")) {\n         // entries = filter(replaceOptions.GATEWAY, differentType);\n         entries = filter(ProcessTaskManager.Gateways(), differentType);\n\n         return this._createEntries(element, entries);\n      }\n\n      // transactions\n      if (is(businessObject, \"bpmn:Transaction\")) {\n         entries = filter(replaceOptions.TRANSACTION, differentType);\n\n         return this._createEntries(element, entries);\n      }\n\n      // expanded event sub processes\n      if (isEventSubProcess(businessObject) && isExpanded(businessObject)) {\n         entries = filter(replaceOptions.EVENT_SUB_PROCESS, differentType);\n\n         return this._createEntries(element, entries);\n      }\n\n      // expanded sub processes\n      if (is(businessObject, \"bpmn:SubProcess\") && isExpanded(businessObject)) {\n         entries = filter(replaceOptions.SUBPROCESS_EXPANDED, differentType);\n\n         return this._createEntries(element, entries);\n      }\n\n      // collapsed ad hoc sub processes\n      if (\n         is(businessObject, \"bpmn:AdHocSubProcess\") &&\n         !isExpanded(businessObject)\n      ) {\n         entries = filter(replaceOptions.TASK, function (entry) {\n            var target = entry.target;\n\n            var isTargetSubProcess = target.type === \"bpmn:SubProcess\";\n\n            var isTargetExpanded = target.isExpanded === true;\n\n            return (\n               isDifferentType(element, target) &&\n               (!isTargetSubProcess || isTargetExpanded)\n            );\n         });\n\n         return this._createEntries(element, entries);\n      }\n\n      // sequence flows\n      if (is(businessObject, \"bpmn:SequenceFlow\")) {\n         return this._createSequenceFlowEntries(\n            element,\n            replaceOptions.SEQUENCE_FLOW\n         );\n      }\n\n      // flow nodes\n      // These are our Tasks:\n      if (is(businessObject, \"bpmn:FlowNode\")) {\n         entries = filter(ProcessTaskManager.Tasks(), differentType);\n\n         // collapsed SubProcess can not be replaced with itself\n         if (\n            is(businessObject, \"bpmn:SubProcess\") &&\n            !isExpanded(businessObject)\n         ) {\n            entries = filter(entries, function (entry) {\n               return entry.label !== \"Sub Process (collapsed)\";\n            });\n         }\n\n         return this._createEntries(element, entries);\n      }\n\n      return [];\n   };\n\n   /**\n    * Get a list of header items for the given element. This includes buttons\n    * for multi instance markers and for the ad hoc marker.\n    *\n    * @param {djs.model.Base} element\n    *\n    * @return {Array<Object>} a list of menu entry items\n    */\n   ReplaceMenuProvider.prototype.getHeaderEntries = function (element) {\n      var headerEntries = [];\n\n      if (is(element, \"bpmn:Activity\") && !isEventSubProcess(element)) {\n         headerEntries = headerEntries.concat(this._getLoopEntries(element));\n      }\n\n      if (\n         is(element, \"bpmn:SubProcess\") &&\n         !is(element, \"bpmn:Transaction\") &&\n         !isEventSubProcess(element)\n      ) {\n         headerEntries.push(this._getAdHocEntry(element));\n      }\n\n      return headerEntries;\n   };\n\n   /**\n    * Creates an array of menu entry objects for a given element and filters the replaceOptions\n    * according to a filter function.\n    *\n    * @param  {djs.model.Base} element\n    * @param  {Object} replaceOptions\n    *\n    * @return {Array<Object>} a list of menu items\n    */\n   ReplaceMenuProvider.prototype._createEntries = function (\n      element,\n      replaceOptions\n   ) {\n      var menuEntries = [];\n\n      var self = this;\n\n      forEach(replaceOptions, function (definition) {\n         var entry = self._createMenuEntry(definition, element);\n\n         menuEntries.push(entry);\n      });\n\n      return menuEntries;\n   };\n\n   /**\n    * Creates an array of menu entry objects for a given sequence flow.\n    *\n    * @param  {djs.model.Base} element\n    * @param  {Object} replaceOptions\n    * @return {Array<Object>} a list of menu items\n    */\n   ReplaceMenuProvider.prototype._createSequenceFlowEntries = function (\n      element,\n      replaceOptions\n   ) {\n      var businessObject = getBusinessObject(element);\n\n      var menuEntries = [];\n\n      var modeling = this._modeling,\n         moddle = this._moddle;\n\n      var self = this;\n\n      forEach(replaceOptions, function (entry) {\n         switch (entry.actionName) {\n            case \"replace-with-default-flow\":\n               if (\n                  businessObject.sourceRef.default !== businessObject &&\n                  (is(businessObject.sourceRef, \"bpmn:ExclusiveGateway\") ||\n                     is(businessObject.sourceRef, \"bpmn:InclusiveGateway\") ||\n                     is(businessObject.sourceRef, \"bpmn:ComplexGateway\") ||\n                     is(businessObject.sourceRef, \"bpmn:Activity\"))\n               ) {\n                  menuEntries.push(\n                     self._createMenuEntry(entry, element, function () {\n                        modeling.updateProperties(element.source, {\n                           default: businessObject,\n                        });\n                     })\n                  );\n               }\n               break;\n            case \"replace-with-conditional-flow\":\n               if (\n                  !businessObject.conditionExpression &&\n                  is(businessObject.sourceRef, \"bpmn:Activity\")\n               ) {\n                  menuEntries.push(\n                     self._createMenuEntry(entry, element, function () {\n                        var conditionExpression = moddle.create(\n                           \"bpmn:FormalExpression\",\n                           { body: \"\" }\n                        );\n\n                        modeling.updateProperties(element, {\n                           conditionExpression: conditionExpression,\n                        });\n                     })\n                  );\n               }\n               break;\n            default:\n               // default flows\n               if (\n                  is(businessObject.sourceRef, \"bpmn:Activity\") &&\n                  businessObject.conditionExpression\n               ) {\n                  return menuEntries.push(\n                     self._createMenuEntry(entry, element, function () {\n                        modeling.updateProperties(element, {\n                           conditionExpression: undefined,\n                        });\n                     })\n                  );\n               }\n\n               // conditional flows\n               if (\n                  (is(businessObject.sourceRef, \"bpmn:ExclusiveGateway\") ||\n                     is(businessObject.sourceRef, \"bpmn:InclusiveGateway\") ||\n                     is(businessObject.sourceRef, \"bpmn:ComplexGateway\") ||\n                     is(businessObject.sourceRef, \"bpmn:Activity\")) &&\n                  businessObject.sourceRef.default === businessObject\n               ) {\n                  return menuEntries.push(\n                     self._createMenuEntry(entry, element, function () {\n                        modeling.updateProperties(element.source, {\n                           default: undefined,\n                        });\n                     })\n                  );\n               }\n         }\n      });\n\n      return menuEntries;\n   };\n\n   /**\n    * Creates and returns a single menu entry item.\n    *\n    * @param  {Object} definition a single replace options definition object\n    * @param  {djs.model.Base} element\n    * @param  {Function} [action] an action callback function which gets called when\n    *                             the menu entry is being triggered.\n    *\n    * @return {Object} menu entry item\n    */\n   ReplaceMenuProvider.prototype._createMenuEntry = function (\n      definition,\n      element,\n      action\n   ) {\n      var translate = this._translate;\n      var replaceElement = this._bpmnReplace.replaceElement;\n\n      var replaceAction = function () {\n         return replaceElement(element, definition.target);\n      };\n\n      action = action || replaceAction;\n\n      let label = definition.label;\n      if (typeof definition.label == \"function\") {\n         label = definition.label(element);\n      }\n\n      var menuEntry = {\n         label: translate(label),\n         className: definition.className,\n         id: definition.actionName,\n         action: action,\n      };\n\n      return menuEntry;\n   };\n\n   /**\n    * Get a list of menu items containing buttons for multi instance markers\n    *\n    * @param  {djs.model.Base} element\n    *\n    * @return {Array<Object>} a list of menu items\n    */\n   ReplaceMenuProvider.prototype._getLoopEntries = function (element) {\n      var self = this;\n      var translate = this._translate;\n\n      function toggleLoopEntry(event, entry) {\n         var loopCharacteristics;\n\n         if (entry.active) {\n            loopCharacteristics = undefined;\n         } else {\n            loopCharacteristics = self._moddle.create(\n               entry.options.loopCharacteristics\n            );\n\n            if (entry.options.isSequential) {\n               loopCharacteristics.isSequential = entry.options.isSequential;\n            }\n         }\n         self._modeling.updateProperties(element, {\n            loopCharacteristics: loopCharacteristics,\n         });\n      }\n\n      var businessObject = getBusinessObject(element),\n         loopCharacteristics = businessObject.loopCharacteristics;\n\n      var isSequential, isLoop, isParallel;\n\n      if (loopCharacteristics) {\n         isSequential = loopCharacteristics.isSequential;\n         isLoop = loopCharacteristics.isSequential === undefined;\n         isParallel =\n            loopCharacteristics.isSequential !== undefined &&\n            !loopCharacteristics.isSequential;\n      }\n\n      var loopEntries = [\n         {\n            id: \"toggle-parallel-mi\",\n            className: \"bpmn-icon-parallel-mi-marker\",\n            title: translate(\"Parallel Multi Instance\"),\n            active: isParallel,\n            action: toggleLoopEntry,\n            options: {\n               loopCharacteristics: \"bpmn:MultiInstanceLoopCharacteristics\",\n               isSequential: false,\n            },\n         },\n         {\n            id: \"toggle-sequential-mi\",\n            className: \"bpmn-icon-sequential-mi-marker\",\n            title: translate(\"Sequential Multi Instance\"),\n            active: isSequential,\n            action: toggleLoopEntry,\n            options: {\n               loopCharacteristics: \"bpmn:MultiInstanceLoopCharacteristics\",\n               isSequential: true,\n            },\n         },\n         {\n            id: \"toggle-loop\",\n            className: \"bpmn-icon-loop-marker\",\n            title: translate(\"Loop\"),\n            active: isLoop,\n            action: toggleLoopEntry,\n            options: {\n               loopCharacteristics: \"bpmn:StandardLoopCharacteristics\",\n            },\n         },\n      ];\n      return loopEntries;\n   };\n\n   /**\n    * Get the menu items containing a button for the ad hoc marker\n    *\n    * @param  {djs.model.Base} element\n    *\n    * @return {Object} a menu item\n    */\n   ReplaceMenuProvider.prototype._getAdHocEntry = function (element) {\n      var translate = this._translate;\n      var businessObject = getBusinessObject(element);\n\n      var isAdHoc = is(businessObject, \"bpmn:AdHocSubProcess\");\n\n      var replaceElement = this._bpmnReplace.replaceElement;\n\n      var adHocEntry = {\n         id: \"toggle-adhoc\",\n         className: \"bpmn-icon-ad-hoc-marker\",\n         title: translate(\"Ad-hoc\"),\n         active: isAdHoc,\n         action: function (/* event, entry */) {\n            if (isAdHoc) {\n               return replaceElement(\n                  element,\n                  { type: \"bpmn:SubProcess\" },\n                  {\n                     autoResize: false,\n                     layoutConnection: false,\n                  }\n               );\n            } else {\n               return replaceElement(\n                  element,\n                  { type: \"bpmn:AdHocSubProcess\" },\n                  {\n                     autoResize: false,\n                     layoutConnection: false,\n                  }\n               );\n            }\n         },\n      };\n\n      return adHocEntry;\n   };\n\n   return ReplaceMenuProvider;\n}\n","/*\n * ui_work_process_workspace_model\n *\n * Manage the Object Workspace area.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport BpmnModeler from \"bpmn-js/lib/Modeler\";\n\nimport \"bpmn-js/dist/assets/bpmn-js.css\";\nimport \"bpmn-js/dist/assets/diagram-js.css\";\n// import \"bpmn-js/dist/bpmn-navigated-viewer.development.js\";\nimport \"bpmn-js/dist/assets/bpmn-font/css/bpmn.css\";\n\nimport FCustomBPMN from \"./ui_work_process_workspace_customBPMN\";\nimport AppBuilderExtensions from \"./ui_work_process_workspace_customBPMN_customEvents\";\n\nconst genericElementTypes = [\"bpmn:Task\", \"bpmn:StartEvent\", \"bpmn:EndEvent\"];\n// {array} [ \"BPMN:Element\" ... ]\n// A list of the \"Generic\" BPMN Element Types we use as placeholders\n// until our own tasks are assigned to that element.\n\nimport FPropertyManager from \"./properties/PropertyManager\";\n\n/**\n * @function series()\n * perform a series of fn() calls in series.\n * each fn() is provided a node style callback(err).\n * once all fn() have been called, cb() is called.\n * If any fn() in the series returns an error, then cb(err)\n * is returned.\n * @param {array} list\n *        An array of fn() calls that take a node style callback.\n * @param {fn} cb\n *        A node style callback to call after execution.\n */\nfunction series(list, cb) {\n   if (list.length == 0) {\n      cb();\n   } else {\n      var step = list.shift();\n      step((err) => {\n         if (err) {\n            return cb(err);\n         }\n         series(list, cb);\n      });\n   }\n}\n\nexport default function (AB) {\n   const ibase = \"ui_work_process_workspace_model\";\n   const uiConfig = AB.Config.uiSettings();\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   const CustomBPMN = FCustomBPMN(AB);\n   const PropertyManager = FPropertyManager(AB);\n\n   class UI_Work_Process_Workspace_Model extends UIClass {\n      /**\n       * @param {object} App\n       * @param {string} idBase\n       */\n      constructor() {\n         super(ibase, {\n            button: \"\",\n            component: \"\",\n            modeler: \"\",\n            modelerBroken: \"\",\n            modelerWorking: \"\",\n            properties: \"\",\n            propertyPanel: \"\",\n         });\n\n         this.viewer = null;\n         // {BpmnModeler}\n         // this is the actual BMPN modeler widget displayed on the page.\n\n         this.unsavedChanges = false;\n         // {bool}\n         // Do we have unsaved changes to our model?\n\n         this.CurrentPropertiesObj = null;\n\n         this.panelsByType = {};\n         // {hash} {ABProcessXXX.default().key : PropertyEditor }\n         // A hash of all the available property editors for our process\n         // elements.  These panels will be used to enter/update the\n         // process properties.\n\n         this.panelSelectElement = {\n            id: this.ids.properties,\n            view: \"template\",\n            template: `<div id=\"${this.ids.properties}_div\">Select an element to edit.</div>`,\n         };\n\n         this.panelGenericEndEvent = {\n            id: this.ids.properties,\n            view: \"template\",\n            template: `<div id=\"${this.ids.properties}_div\">This is a generic BPMN End Event placeholder. Change it to one of our Specific End Event Types to edit.</div>`,\n         };\n\n         this.panelGenericTrigger = {\n            id: this.ids.properties,\n            view: \"template\",\n            template: `<div id=\"${this.ids.properties}_div\">This is a generic BPMN Trigger placeholder. Change it to one of our Specific Trigger Types to edit.</div>`,\n         };\n\n         this.panelGenericService = {\n            id: this.ids.properties,\n            view: \"template\",\n            template: `<div id=\"${this.ids.properties}_div\">This is a generic BPMN Task placeholder. Change it to one of our Specific Tasks to edit.</div>`,\n         };\n      }\n\n      ui() {\n         let ids = this.ids;\n\n         // Our webix UI definition:\n         return {\n            id: ids.component,\n            css: \"bg_gray\",\n            rows: [\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"form\",\n                  label: L(\"Save\"),\n                  icon: \"fa fa-save\",\n                  click: () => {\n                     this.saveProcess(this.CurrentProcess);\n                  },\n               },\n               {\n                  id: ids.modelerWorking,\n                  cols: [\n                     {\n                        view: \"template\",\n                        // height: 800,\n                        template: `<div id=\"${ids.modeler}\" style=\"width: 100%; height: 100%;\"></div>`,\n                     },\n                     { view: \"resizer\", css: \"bg_gray\", width: 11 },\n                     {\n                        width: uiConfig.columnWidthXXLarge,\n                        rows: [\n                           {\n                              view: \"toolbar\",\n                              css: \"ab-data-toolbar webix_dark\",\n                              cols: [\n                                 {\n                                    type: \"spacer\",\n                                    width: 15,\n                                 },\n                                 {\n                                    view: \"label\",\n                                    label: L(\"Properties\"),\n                                 },\n                              ],\n                           },\n                           {\n                              view: \"scrollview\",\n                              id: ids.propertyPanel,\n                              body: {\n                                 padding: 15,\n                                 rows: [\n                                    {\n                                       id: ids.properties,\n                                       view: \"template\",\n                                       template: `<div id=\"${ids.properties}_div\">properties here!</div>`,\n                                    },\n                                 ],\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               },\n               {\n                  id: ids.modelerBroken,\n                  view: \"template\",\n                  // height: 800,\n                  template: `<div  style=\"width: 100%; height: 100%;\"> Big Broken Icon Here </div>`,\n               },\n               // {\n               //     maxHeight: App.config.xxxLargeSpacer,\n               //     hidden: App.config.hideMobile\n               // }\n            ],\n         };\n      }\n\n      // Our init() function for setting up our UI\n      init(AB) {\n         this.AB = AB;\n         let ids = this.ids;\n\n         //// NOTE: the webix template isn't created at this point.\n         ////   we need to wait until the [process] tab and a Process are\n         ////   selected before we are SURE this template exists in the DOM\n         // viewer = new BpmnModeler({\n         //     container: \"#\" + ids.modeler\n         // });\n\n         $$(ids.button)?.hide();\n         $$(ids.modelerBroken)?.hide();\n         $$(ids.modelerWorking)?.show();\n         // $$(ids.properties)?.hide();\n\n         // Populate the Property Editors\n         const ProcessElements = PropertyManager.processElements();\n\n         ProcessElements.forEach((PE) => {\n            this.panelsByType[PE.key] = new PE();\n         });\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(this.panelSelectElement, $$(ids.properties));\n      }\n\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         Object.keys(this.panelsByType).forEach((k) => {\n            this.panelsByType[k].applicationLoad(application);\n         });\n      }\n\n      /**\n       * @method clearWorkspace()\n       * Clear the object workspace.\n       */\n      clearWorkspace() {\n         // usually a .clearWorkspace() happens on a Delete or a process is no\n         // longer selected.\n\n         // if we are told to clear the workspace, then reset our\n         // internal trackers.\n         this.CurrentProcessID = null;\n         this.unsavedChanges = false;\n      }\n\n      /**\n       * @method saveProcess()\n       * Make sure the provided process saves any changes.\n       * @param {ABProcess} _process\n       *        the current process this interface is working with.\n       */\n      async saveProcess(_process) {\n         if (this.CurrentPropertiesObj) {\n            this.propertiesSave();\n         }\n\n         try {\n            let { xml } = await this.viewer.saveXML({ preamble: true });\n            _process.modelUpdate(xml);\n            await _process.save();\n            this.unsavedChanges = false;\n            $$(this.ids.button).hide();\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context: \"ui_work_process_workspace_model:saveProcess()\",\n            });\n         }\n      }\n\n      /**\n       * @method processLoad()\n       * Initialize the Process Workspace with the provided ABProcess.\n       * @param {ABProcess} process\n       *        current ABProcess instance we are working with.\n       */\n      processLoad(process) {\n         super.processLoad(process);\n         var ids = this.ids;\n\n         Object.keys(this.panelsByType).forEach((k) => {\n            if (this.panelsByType[k].processLoad) {\n               this.panelsByType[k].processLoad(process);\n            }\n         });\n\n         // initialize the BPMN Viewer if not already initialized:\n         if (!this.viewer) {\n            $$(ids.modelerBroken).hide();\n            $$(ids.modelerWorking).show();\n            const container = document.getElementById(ids.modeler);\n            this.viewer = new BpmnModeler({\n               container: container, // \"#\" + ids.modeler,\n               additionalModules: [CustomBPMN],\n               moddleExtensions: {\n                  ab: AppBuilderExtensions(),\n               },\n            });\n\n            // Modifying Attributes on a Diagram Shape:\n            // var elementRegistry = viewer.get('elementRegistry');\n            // var startEventShape = elementRegistry.get('StartEvent_1');\n            // var modeling = viewer.get(\"modeling\");\n            // modeling.updateProperties(startEventShape, {\n            //   name: 'New name'\n            // });\n\n            // Adding color to a diagram element:\n            // var canvas = bpmnViewer.get('canvas');\n            // canvas.addMarker('UserTask_XYZ', 'highlight');\n            //   --> define svg style for \"highlight\"\n\n            // get currently selected shape:\n            // var selection = viewer.get(\"selection\");\n            // var selectedElements = selection.get();\n\n            // to find possible events:\n            // do a file search on bpmn-js for \".fire(\"\"\n\n            this.viewer.on([\"bpmnElement.added\"], (event) => {\n               // catch elements .added so we can initialize our\n               // connection information.\n\n               // console.log(`${event.type}:`, event.element);\n               var element = event.element;\n               if (\n                  element.type == \"bpmn:SequenceFlow\" ||\n                  element.type == \"bpmn:MessageFlow\"\n               ) {\n                  this.CurrentProcess?.connectionUpsert(element);\n               }\n            });\n\n            // viewer.on(\n            //     [\n            //         \"element.click\"\n            //         // \"element.updateId\",\n            //         // \"element.changed\",\n            //         // \"shape.remove\"\n            //     ],\n            //     (event) => {\n            //         console.log(`${event.type}:`, event.element);\n            //     }\n            // );\n            // viewer.on(\"element.updateId\", (event) => {\n            //     console.log(\"element.updateId:\", event.element);\n            //     //\n            // });\n\n            this.viewer.on(\"shape.remove\", (event) => {\n               // console.log(\"shape.remove:\", event.element);\n               if (this.CurrentProcess) {\n                  // let isSubTask = false;\n                  let processTask = this.CurrentProcess;\n                  var element = event.element;\n                  if (element.parent?.type == \"bpmn:SubProcess\") {\n                     processTask =\n                        this.CurrentProcess.elementForDiagramID(\n                           element.parent.id\n                        ) || this.CurrentProcess;\n                     // isSubTask = true;\n                  }\n\n                  // remove this connection\n                  if (\n                     element.type == \"bpmn:SequenceFlow\" ||\n                     element.type == \"bpmn:MessageFlow\"\n                  ) {\n                     processTask.connectionRemove(element);\n                  } else {\n                     // remove this task\n                     // if our current process tracks this Element/Task\n                     var currTask = processTask.elementForDiagramID(element.id);\n                     if (currTask) {\n                        currTask.destroy();\n                     }\n                  }\n               }\n            });\n            this.viewer.on(\"element.changed\", (event) => {\n               let element = event.element;\n\n               // ignore label updates\n               if (element.type == \"label\") {\n                  return;\n               }\n\n               let processTask = this.CurrentProcess;\n               if (element.parent?.type == \"bpmn:SubProcess\") {\n                  processTask =\n                     this.CurrentProcess.elementForDiagramID(\n                        element.parent.id\n                     ) || this.CurrentProcess;\n               }\n\n               if (processTask == null) return;\n\n               // if not sequence flow lines:\n               if (\n                  element.type != \"bpmn:SequenceFlow\" &&\n                  // SequenceFlow : seems to happen between tasks within the same Participant\n                  element.type != \"bpmn:MessageFlow\"\n                  // MessageFlow : seems to happen between tasks between Participants\n               ) {\n                  // if our current process already has this Element/Task\n                  var currElement = processTask.elementForDiagramID(element.id);\n                  if (currElement) {\n                     // send it an onChange(event.element);\n                     currElement.onChange(element, ids.properties);\n                  } else {\n                     // element.changed : can be triggered for deleted elements\n                     // make sure the shape for this element still exists,\n                     // before doing anything else here:\n                     var elementRegistry = this.viewer.get(\"elementRegistry\");\n                     var currentElementShape = elementRegistry.get(element.id);\n                     if (currentElementShape) {\n                        // shape does exist, so:\n\n                        // if one of the generic elements\n                        // that doesn't have a definition attached\n                        // NOTE: EndEvents, are replaced with\n                        // elements.type==\"EndEvent\", but a\n                        // .eventDefinition[0].$type ==\n                        // \"TerminateEndEvent\"\n                        var def = null;\n                        var defType = null;\n                        if (event.element.businessObject.eventDefinitions) {\n                           def =\n                              event.element.businessObject.eventDefinitions[0];\n                        }\n                        if (def) {\n                           defType = def.$type;\n                        }\n\n                        if (\n                           genericElementTypes.indexOf(element.type) != -1 &&\n                           !defType\n                        ) {\n                           // set the display to \".highlight\"\n                           // so the user knows it hasn't been\n                           // fully configured yet.\n                           let canvas = this.viewer.get(\"canvas\");\n                           canvas.addMarker(\n                              element.id,\n                              \"highlight-undefined-task\"\n                           );\n                        } else {\n                           // create new process task for this\n                           var newElement =\n                              processTask.elementNewForModelDefinition(element);\n                           if (newElement) {\n                              // if successful\n                              // try to remove the marker if it has one\n                              let canvas = this.viewer.get(\"canvas\");\n                              canvas.removeMarker(\n                                 element.id,\n                                 \"highlight-undefined-task\"\n                              );\n                           } else {\n                              this.AB.notify.developer(\n                                 new Error(\n                                    \"no ProcessElement for BPMN Element\"\n                                 ),\n                                 {\n                                    element,\n                                 }\n                              );\n                           }\n                        }\n                     }\n                  }\n               } else {\n                  // this is a connection update:\n                  processTask.connectionUpsert(element);\n               }\n            });\n\n            this.viewer.on(\"selection.changed\", (event) => {\n               if (!this.CurrentProcess) {\n                  return;\n               }\n\n               // only show properties Pane when there is 1 selection\n               if (event.newSelection.length == 1) {\n                  let element = event.newSelection[0];\n                  var newObj = this.CurrentProcess.elementForDiagramID(\n                     element.id\n                  );\n                  if (\n                     element.parent?.type == \"bpmn:SubProcess\" &&\n                     newObj == null\n                  ) {\n                     let subProcessTask =\n                        this.CurrentProcess.elementForDiagramID(\n                           element.parent.id\n                        );\n                     if (subProcessTask)\n                        newObj = subProcessTask.elementForDiagramID(element.id);\n                  }\n\n                  if (newObj) {\n                     // make sure previous selection records it's properties\n                     if (\n                        this.CurrentPropertiesObj &&\n                        this.CurrentPropertiesObj.diagramID != newObj.diagramID\n                     ) {\n                        this.propertiesSave();\n                     }\n\n                     this.CurrentPropertiesObj = newObj;\n                     this.CurrentPropertiesObj.on(\"switchTo\", (switchObj) => {\n                        this.CurrentPropertiesObj = switchObj;\n                        this.panelShow(switchObj);\n                     });\n                     this.panelShow(newObj);\n                     // newObj.propertiesShow(ids.properties /*, App */);\n\n                     this.CurrentPropertiesObj.on(\"save\", () => {\n                        console.warn(\"TEST: save <== are we overloading this?\");\n                        this.saveProcess(this.CurrentProcess);\n\n                        this.CurrentPropertiesObj?.propertiesShow(\n                           ids.properties\n                        );\n                     });\n                  } else {\n                     this.CurrentPropertiesObj = null;\n                     console.warn(\n                        \"Selected Element is unknown to this Process: \" +\n                           event.newSelection[0].id\n                     );\n\n                     let genPanel = this.panelSelectElement;\n                     switch (element.type) {\n                        case \"bpmn:EndEvent\":\n                           genPanel = this.panelGenericEndEvent;\n                           break;\n                        case \"bpmn:StartEvent\":\n                           genPanel = this.panelGenericTrigger;\n                           break;\n                        case \"bpmn:Task\":\n                           genPanel = this.panelGenericService;\n                           break;\n                     }\n                     // Perhaps, this was a diagram element that was unsaved.\n                     // And now we don't know what to do with it.\n                     // What do we do? Suggest that the User Delete it, and\n                     // recreate it?\n                     webix.ui(genPanel, $$(ids.properties));\n                     this.CurrentPanel = genPanel;\n                  }\n               } else {\n                  // we are clearing the properties panel:\n                  // stash any current values that are there\n                  if (this.CurrentPropertiesObj) {\n                     this.propertiesSave();\n                  }\n                  this.CurrentPropertiesObj = null;\n                  $$(ids.properties).hide();\n               }\n\n               // console.log(\n               //    \"selection.changed: New: \",\n               //    event.newSelection\n               // );\n               // console.log(\n               //    \"selection.changed: Old: \",\n               //    event.oldSelection\n               // );\n            });\n\n            // setup our Listeners:\n\n            // when a change is made, then make the [Save] button ready:\n            this.viewer.on(\"commandStack.changed\", () => {\n               this.unsavedChanges = true;\n               $$(ids.button).show();\n            });\n         }\n\n         var processSequence = [];\n\n         // if there are unsaved changes in our CurrentProcess\n         if (this.CurrentProcess && this.unsavedChanges) {\n            // insert a save confirmation step\n            processSequence.push((done) => {\n               webix.confirm({\n                  title: L(\"Save?\"),\n                  message: L(\"Save your changes to {0}?\", [\n                     this.CurrentProcess.name,\n                  ]),\n                  callback: (isOK) => {\n                     if (isOK) {\n                        this.saveProcess(this.CurrentProcess)\n                           .then(() => {\n                              done();\n                           })\n                           .catch(done);\n                     } else {\n                        // then ignore the unsaved changes\n                        this.unsavedChanges = false;\n                        $$(ids.button).hide();\n                        done();\n                     }\n                  },\n               });\n            });\n         }\n\n         // continue our sequence with loading the new process\n         processSequence.push(async (done) => {\n            // NOTE: make sure CurrentProcess == null BEFORE .clear()\n            // this prevents the \"shape.removed\" handler from trying to\n            // process all the deletes triggered by the .clear()\n            this.CurrentProcessID = null;\n            this.viewer.clear();\n            this.CurrentProcessID = process.id;\n\n            // new process, so let's clear our properties selection.\n            this.CurrentPropertiesObj = null;\n            $$(ids.properties).hide();\n\n            ///////\n            var xml = process.modelDefinition();\n            if (!xml) {\n               process.modelNew();\n               xml = process.modelDefinition();\n            }\n\n            try {\n               await this.viewer.importXML(xml);\n               this.viewer.get(\"canvas\").zoom(\"fit-viewport\", \"auto\");\n               done();\n            } catch (err) {\n               done(err);\n            }\n         });\n\n         series(processSequence, (err) => {\n            if (err) {\n               if (err.toString().indexOf(\"no diagram to display\")) {\n                  webix.confirm({\n                     title: L(\"Error Displaying Process\"),\n                     message: L(\n                        \"Could not display the process definition for {0}. Do you want to start a blank process?\",\n                        [this.CurrentProcess.name]\n                     ),\n                     callback: (isOK) => {\n                        if (isOK) {\n                           process.modelNew();\n                           this.processLoad(this.CurrentProcess);\n                        } else {\n                           // show the broken Process page\n                           $$(ids.modelerWorking).hide();\n                           $$(ids.modelerBroken).show();\n                           this.viewer.clear();\n                           this.viewer.destroy();\n                           this.viewer = null;\n                        }\n                     },\n                  });\n               }\n               this.AB.notify.developer(err, {\n                  context: \"error during the process of changing the Process\",\n               });\n               // console.log(err);\n            }\n\n            $$(ids.modelerBroken).hide();\n            $$(ids.modelerWorking).show();\n         });\n      }\n\n      panelShow(element) {\n         // get the Panel for the element\n         let newPanel = { ui: () => this.panelSelectElement };\n         if (this.panelsByType[element.key]) {\n            newPanel = this.panelsByType[element.key];\n         }\n\n         // insert Panel into the webix ui\n         let newPanelUI = {\n            id: this.ids.properties,\n            rows: [newPanel.ui(), {}],\n         };\n         webix.ui(newPanelUI, $$(this.ids.properties));\n\n         // populate the panel with element data\n         newPanel.populate(element);\n         this.CurrentPanel = newPanel;\n      }\n\n      /**\n       * propertiesSave()\n       * make sure the current values in the properties editor are\n       * stashed\n       */\n      propertiesSave() {\n         if (!this.CurrentPanel) {\n            return;\n         }\n         var thisObj = this.CurrentPropertiesObj;\n         var values = this.CurrentPanel.values();\n         var objVals = thisObj.toObj();\n         Object.keys(values).forEach((k) => {\n            objVals[k] = values[k];\n         });\n         if (!thisObj.name) objVals.name = values.label;\n         thisObj.fromValues(objVals);\n\n         // thisObj.save();\n\n         // thisObj.propertiesStash(this.ids.properties);\n\n         // NOTE: this can get called during a BPMN event phase,\n         // and we need to let that complete before trying to update the\n         // diagram element properties.\n         // an immediate timeout should let the other process complete.\n\n         setTimeout(() => {\n            var properties = thisObj.diagramProperties(this.viewer);\n            properties.forEach((prop) => {\n               this.updateElementProperties(prop.id, prop.def);\n            });\n         }, 0);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n      }\n\n      /**\n       * updateElementProperties()\n       * modify the XML properties of elements\n       * @param {string} diagramID\n       *        the XML diagram ID of the element\n       * @param {obj} properies\n       *        a { 'name':'value' } of the updated properties\n       */\n      updateElementProperties(diagramID, values) {\n         var elementRegistry = this.viewer.get(\"elementRegistry\");\n         var elementShape = elementRegistry.get(diagramID);\n         if (elementShape) {\n            var modeling = this.viewer.get(\"modeling\");\n            modeling.updateProperties(elementShape, values);\n         }\n      }\n   }\n\n   return new UI_Work_Process_Workspace_Model();\n}\n","/*\n * ui_work_process_workspace_monitor\n *\n * UI for managing process instances\n *\n */\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB) {\n   const ibase = \"ui_work_process_workspace_monitor\";\n   const UIClass = UI_Class(AB);\n   const L = UIClass.L();\n\n   class UI_Work_Process_Workspace_Monitor extends UIClass {\n      /**\n       * @param {object} App\n       * @param {string} idBase\n       */\n      constructor() {\n         super(ibase, {\n            component: \"\",\n            taskList: \"\",\n            processLogs: \"\",\n            detailView: \"\",\n            resetButton: \"\",\n            deleteButton: \"\",\n            context: \"\",\n            error: \"\",\n            tabGroup: \"\",\n         });\n      }\n\n      ui() {\n         const ids = this.ids;\n         // Our webix UI definition:\n         return {\n            id: ids.component,\n            cols: [\n               {\n                  gravity: 1,\n                  rows: [\n                     {\n                        view: \"toolbar\",\n                        css: \"ab-data-toolbar webix_dark\",\n                        cols: [\n                           {\n                              type: \"spacer\",\n                              width: 15,\n                           },\n                           {\n                              view: \"label\",\n                              label: L(\"Instances\"),\n                           },\n                           {\n                              view: \"icon\",\n                              id: \"filterIcon\",\n                              css: \"icon-disable\",\n                              icon: \"fa fa-filter\",\n                              align: \"right\",\n                              popup: {\n                                 view: \"checksuggest\",\n                                 id: \"instanceFilter\",\n                                 button: false,\n                                 body: {\n                                    template: `${L(\"Hide\")} #value#`,\n                                 },\n                                 data: [\n                                    {\n                                       id: \"completed\",\n                                       value: L(\"Completed\"),\n                                    },\n                                    {\n                                       id: \"created\",\n                                       value: L(\"Created\"),\n                                    },\n                                    { id: \"error\", value: L(\"Error\") },\n                                 ],\n                                 on: {\n                                    onValueSuggest: () => {\n                                       const filter = $$(\"instanceFilter\")\n                                          .config.value.split(\",\")\n                                          .filter((s) => s !== \"\");\n                                       const instances = this.instances.filter(\n                                          (i) => filter.indexOf(i.status) == -1\n                                       );\n                                       $$(ids.taskList).clearAll();\n                                       $$(ids.taskList).parse(instances);\n                                       $$(\"filterIcon\").config.badge =\n                                          filter.length == 0\n                                             ? \"\"\n                                             : filter.length;\n                                       $$(\"filterIcon\").refresh();\n                                    },\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        view: \"list\",\n                        id: ids.taskList,\n                        select: true,\n                        navigation: true,\n                        item: {\n                           height: 74,\n                           template: (instance) => {\n                              const icons = {\n                                 error: {\n                                    icon: \"fa-times-circle\",\n                                    color: \"#FF5C4C\",\n                                 },\n                                 created: {\n                                    icon: \"fa-clock-o\",\n                                    color: \"#FFAE38\",\n                                 },\n                                 completed: {\n                                    icon: \"fa-check-circle\",\n                                    color: \"#38AEA2\",\n                                 },\n                              };\n                              const { icon, color } = icons[\n                                 instance.status\n                              ] ?? { icon: \"fa-question\", color: \"gray\" };\n                              // Format updated_at as title\n                              const title = new Date(\n                                 instance.updated_at\n                              ).toLocaleString(\n                                 //eslint-disable-next-line no-undef\n                                 window?.webixLocale ?? \"en-US\"\n                              );\n                              // Use the last log as a description text\n                              const lastLog =\n                                 instance.log[instance.log.length - 1];\n                              return `<div\n                                    style=\"float:left;height:70px;line-height:70px;margin-right:10px;color:${color};\"\n                                    class=\"fa ${icon} fa-2x\">\n                                 </div>\n                                 <div style=\"margin:5px 0;height:60px;overflow:hidden;line-height:20px\">\n                                    <div style=\"font-size: 16px; font-weight: 600;\">\n                                       ${title}\n                                    </div>\n                                    <div>${lastLog.split(\":\")[2]}</div>\n                                 </div>`;\n                           },\n                        },\n                        on: {\n                           onItemClick: (id) => this.showInstance(id),\n                        },\n                     },\n                  ],\n               },\n               { view: \"resizer\", css: \"bg_gray\", width: 11 },\n               {\n                  gravity: 2,\n                  rows: [\n                     {\n                        gravity: 2,\n                        rows: [\n                           {\n                              view: \"toolbar\",\n                              css: \"ab-data-toolbar webix_dark\",\n                              cols: [\n                                 { type: \"spacer\", width: 15 },\n                                 {\n                                    view: \"label\",\n                                    label: L(\"Instance Details\"),\n                                 },\n                                 {\n                                    id: ids.resetButton,\n                                    view: \"button\",\n                                    width: 100,\n                                    css: \"webix_secondary\",\n                                    type: \"icon\",\n                                    icon: \"fa fa-refresh\",\n                                    label: L(\"Reset\"),\n                                    click: () => this.resetInstance(),\n                                 },\n                                 {\n                                    id: ids.deleteButton,\n                                    view: \"button\",\n                                    width: 100,\n                                    css: \"webix_danger\",\n                                    type: \"icon\",\n                                    icon: \"fa fa-trash\",\n                                    label: L(\"Delete\"),\n                                    click: () => this.deleteInstance(),\n                                 },\n                                 { type: \"spacer\", width: 1 },\n                              ],\n                           },\n                           {\n                              view: \"property\",\n                              height: 200,\n                              id: ids.detailView,\n                              editable: false,\n                              elements: [\n                                 { label: L(\"Instance\"), type: \"label\" },\n                                 {\n                                    label: L(\"ID\"),\n                                    type: \"text\",\n                                    id: \"id\",\n                                 },\n                                 {\n                                    label: L(\"Created\"),\n                                    type: \"date\",\n                                    id: \"created\",\n                                 },\n                                 {\n                                    label: L(\"Updated\"),\n                                    type: \"date\",\n                                    id: \"updated\",\n                                 },\n                                 {\n                                    label: L(\"Job ID\"),\n                                    type: \"text\",\n                                    id: \"jobId\",\n                                 },\n                                 {\n                                    label: L(\"Status\"),\n                                    type: \"text\",\n                                    id: \"status\",\n                                 },\n                                 {\n                                    label: L(\"Triggered By\"),\n                                    type: \"text\",\n                                    id: \"triggeredBy\",\n                                 },\n                              ],\n                           },\n                        ],\n                     },\n                     {\n                        view: \"tabview\",\n                        id: ids.tabGroup,\n                        css: \"webix_dark\",\n                        cells: [\n                           {\n                              header: L(\"Logs\"),\n                              body: {\n                                 id: ids.processLogs,\n                                 view: \"list\",\n                                 type: { height: \"auto\" },\n                                 template:\n                                    '<div style=\"padding:5px 0; line-height:20px;color:black\">#value#</div>',\n                              },\n                           },\n                           {\n                              header: L(\"Context\"),\n                              body: {\n                                 view: \"treetable\",\n                                 id: ids.context,\n                                 css: { color: \"black !important\" },\n                                 resizable: true,\n                                 scroll: true,\n                                 columns: [\n                                    {\n                                       id: \"title\",\n                                       header: L(\"Property\"),\n                                       width: 300,\n                                       template: \"{common.treetable()} #key#\",\n                                    },\n                                    {\n                                       id: \"value\",\n                                       header: L(\"Value\"),\n                                       width: 500,\n                                    },\n                                 ],\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               },\n            ],\n         };\n      }\n\n      // Our init() function for setting up our UI\n      async init(AB) {\n         this.model = AB.objectProcessInstance().model();\n      }\n\n      async processLoad(process) {\n         super.processLoad(process);\n         const processIdField = \"d5afbc83-17dd-4b38-bded-1bf3f4594135\";\n         const where = {};\n         where[processIdField] = process.id;\n         // Need to findAll without limit and sort client side, because server\n         // cannot currently sort based on the updated_at columns. Later we\n         // might want to add way to do this server side.\n         const res = await this.model.findAll({ where });\n         this.instances = res.data.sort((a, b) => {\n            return new Date(b.updated_at) - new Date(a.updated_at);\n         });\n         const $taskList = $$(this.ids.taskList);\n         $taskList.clearAll();\n         $taskList.parse(this.instances);\n         if (this.instances[0]) {\n            this.showInstance(this.instances[0].id);\n            $taskList.select(this.instances[0].id);\n         }\n      }\n\n      showInstance(itemId) {\n         this.instance = itemId;\n         const ids = this.ids;\n         // Clear if itemId is undefinded (happens if last instance is deleted)\n         if (!itemId) {\n            $$(ids.processLogs).clearAll();\n            $$(ids.detailView).clear();\n            $$(ids.tabGroup).removeView(ids.error);\n            $$(ids.context).clearAll();\n            $$(ids.resetButton).hide();\n            $$(ids.deleteButton).hide();\n            return;\n         }\n         const item = $$(ids.taskList).getItem(itemId);\n         const logs = item.log.map((log, index) => {\n            return { id: index, value: log };\n         });\n         $$(ids.processLogs).clearAll();\n         $$(ids.processLogs).parse(logs);\n         $$(ids.detailView).setValues({\n            id: item.id,\n            created: new Date(item.created_at),\n            updated: new Date(item.updated_at),\n            jobId: item.jobID,\n            status: item.status,\n            triggeredBy: item.triggeredBy,\n         });\n         $$(ids.context).clearAll();\n         $$(ids.context).parse(this.processContext(item.context), \"json\");\n         $$(ids.context).refresh();\n         $$(ids.detailView).refresh();\n         // Only display the error tab if this instance has errors\n         $$(ids.tabGroup).removeView(ids.error);\n         if (item.errorTasks) {\n            const errors = [];\n            for (var key in item.errorTasks) {\n               errors.push({\n                  key,\n                  error: item.errorTasks[key],\n               });\n            }\n            $$(ids.tabGroup).addView({\n               header: \"Errors\",\n               body: {\n                  id: ids.error,\n                  view: \"list\",\n                  type: { height: \"auto\" },\n                  template: '<div style=\"color:black\">#key# #error#</div>',\n                  data: errors,\n               },\n            });\n         }\n         // when you click an instance we need to know if\n         // we should show the reset button if it is an error\n         if (item.status == \"error\") {\n            $$(ids.resetButton).show();\n         } else {\n            $$(ids.resetButton).hide();\n         }\n         $$(ids.deleteButton).show();\n      }\n\n      async deleteInstance() {\n         const instance = this.instance;\n         const confirmed = await webix\n            .confirm({\n               title: L(\"Delete Instance\"),\n               text: L(\"Are you sure? This can't be undone.\"),\n               type: \"confirm-warning\",\n            })\n            .catch(() => {}); //supress console.error\n         if (!confirmed) return;\n\n         const res = await this.model.delete(instance);\n\n         if (res.numRows > 0) {\n            const $taskList = $$(this.ids.taskList);\n            const nextInstance = $taskList.getNextId(this.instance);\n            $taskList.remove(this.instance);\n            this.showInstance(nextInstance);\n            webix.message({\n               text: `${L(\"Deleted Instance\")} ${instance}`,\n               type: \"success\",\n            });\n         } else {\n            webix.messages({\n               text: L(\"No rows were effected.  This does not seem right.\"),\n               type: \"warn\",\n            });\n         }\n      }\n\n      async resetInstance() {\n         const item = $$(this.ids.taskList).getItem(this.instance);\n         const errorTasks = Object.keys(item.errorTasks);\n         if (errorTasks.length < 1) return;\n         const task = this.CurrentProcess.elements().filter((e) => {\n            return e.diagramID === errorTasks[0];\n         })[0];\n\n         const confirmed = await webix\n            .confirm({\n               title: L(\"Reset Instance\"),\n               text: `${L(\"Restart from\")} '${task.label}' (${task.key} ${L(\n                  \"Task\"\n               )})?`,\n            })\n            .catch(() => {}); //supress console.error\n         if (!confirmed) return;\n         const response = await this.AB.Network.put({\n            url: `/process/reset/${task.id}`,\n            params: { instanceID: this.instance },\n         });\n         if (response == 1) {\n            webix.message({\n               text: L(\"Instance Reset\"),\n               type: \"success\",\n            });\n            this.processLoad(this.CurrentProcess);\n         }\n      }\n\n      // Convert context into a tree structure for webix display\n      processContext(data) {\n         const elements = [];\n         for (const key in data) {\n            if (\n               typeof data[key] === \"object\" &&\n               !Array.isArray(data[key]) &&\n               data[key] !== null\n            ) {\n               elements.push({\n                  key: key,\n                  open: true,\n                  data: this.processContext(data[key]),\n               });\n            } else {\n               elements.push({\n                  key: key,\n                  value: data[key],\n               });\n            }\n         }\n         return elements;\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n      }\n   }\n\n   return new UI_Work_Process_Workspace_Monitor();\n}\n","/*\n * ui_work_query\n *\n * Display the Query Tab UI:\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_Work_Query_List from \"./ui_work_query_list\";\nimport UI_Work_Query_Workspace from \"./ui_work_query_workspace\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   // var L = UIClass.L();\n   class UI_Work_Query extends UIClass {\n      constructor() {\n         super(\"ab_work_query\");\n\n         this.QueryList = UI_Work_Query_List(AB);\n         this.QueryWorkspace = UI_Work_Query_Workspace(AB);\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            type: \"space\",\n            cols: [\n               this.QueryList.ui(),\n               { view: \"resizer\" },\n               this.QueryWorkspace.ui(),\n            ],\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         // Our init() function for setting up our UI\n         this.QueryList.on(\"selected\", (q) => {\n            this.select(q);\n         });\n\n         this.QueryWorkspace.on(\"query.add\", () => {\n            this.QueryList.emit(\"addNew\");\n         });\n\n         this.warningsPropogate([this.QueryList, this.QueryWorkspace]);\n         this.on(\"warnings\", () => {\n            // make sure our list refreshes it's display\n            this.QueryList.warningsRefresh();\n         });\n\n         return Promise.all([\n            this.QueryWorkspace.init(AB),\n            this.QueryList.init(AB),\n         ]);\n      }\n\n      /**\n       * @function applicationLoad\n       *\n       * Initialize the Query Workspace with the given ABApplication.\n       *\n       * @param {ABApplication} application\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         this.QueryWorkspace.clearWorkspace();\n         this.QueryList.applicationLoad(application);\n         this.QueryWorkspace.applicationLoad(application);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show(false, false);\n\n         var app = this.CurrentApplication;\n         if (app) {\n            this.QueryList?.applicationLoad(app);\n         }\n         this.QueryList?.ready();\n         if (this._lastSelectedQuery) {\n            this.QueryList.select(this._lastSelectedQuery);\n            // NOTE: this.select() is called when an item in QueryList is selected.\n            this.select(this._lastSelectedQuery);\n         }\n      }\n\n      select(q) {\n         // if (q?.id != this._lastSelectedQuery?.id) {\n         this._lastSelectedQuery = q;\n         this.QueryWorkspace.resetTabs();\n         this.QueryWorkspace.queryLoad(q);\n         // }\n      }\n   }\n\n   return new UI_Work_Query();\n}\n","/*\n * ui_work_query_list\n *\n * Manage the ABObjectQuery List\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UI_COMMON_LIST from \"./ui_common_list\";\nimport UIListNewQuery from \"./ui_work_query_list_newQuery\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   // var L = UIClass.L();\n   class UI_Work_Query_List extends UIClass {\n      constructor() {\n         super(\"ui_work_query_list\");\n\n         // {ui_common_list} instance to display a list of our objects.\n         this.ListComponent = UI_COMMON_LIST(AB, {\n            idBase: this.ids.component,\n            labels: {\n               addNew: \"Add new query\",\n               confirmDeleteTitle: \"Delete Query\",\n               title: \"Queries\",\n               searchPlaceholder: \"Query name\",\n            },\n            // we can overrid the default template like this:\n            // templateListItem:\n            //    \"<div class='ab-object-list-item'>#label##warnings#{common.iconGear}</div>\",\n            menu: {\n               copy: false,\n               exclude: true,\n            },\n         });\n         this.AddForm = UIListNewQuery(AB);\n      }\n\n      // Our webix UI definition:\n      ui() {\n         return this.ListComponent.ui();\n      }\n\n      // Our init() function for setting up our UI\n      async init(AB) {\n         this.AB = AB;\n\n         this.on(\"addNew\", (selectNew) => {\n            // if we receive a signal to add a new Query from another source\n            this.clickNewQuery(selectNew);\n         });\n\n         //\n         // List of Processes\n         //\n         var allInits = [];\n         allInits.push(this.ListComponent.init(AB));\n\n         this.ListComponent.on(\"selected\", (item) => {\n            this.emit(\"selected\", item);\n         });\n\n         this.ListComponent.on(\"addNew\", (selectNew) => {\n            this.clickNewQuery(selectNew);\n         });\n\n         this.ListComponent.on(\"deleted\", (item) => {\n            this.emit(\"deleted\", item);\n         });\n\n         this.ListComponent.on(\"exclude\", (item) => {\n            this.exclude(item);\n         });\n\n         //\n         // Add Form\n         //\n         allInits.push(this.AddForm.init(AB));\n\n         this.AddForm.on(\"cancel\", () => {\n            this.AddForm.hide();\n         });\n\n         this.AddForm.on(\"save\", (q /*, select */) => {\n            // the AddForm already takes care of updating the\n            // CurrentApplication.\n\n            // we just need to update our list of objects\n            this.applicationLoad(this.CurrentApplication);\n\n            // if (select) {\n            this.ListComponent.select(q.id);\n            // }\n         });\n\n         await Promise.all(allInits);\n      }\n\n      /**\n       * @function applicationLoad\n       * Initialize the List from the provided ABApplication\n       * If no ABApplication is provided, then show an empty form. (create operation)\n       * @param {ABApplication} application\n       *        [optional] The current ABApplication we are working with.\n       */\n      applicationLoad(application) {\n         super.applicationLoad(application);\n         this.ListComponent.dataLoad(application?.queriesIncluded());\n         this.AddForm.applicationLoad(application);\n      }\n\n      warningsRefresh() {\n         if (this.CurrentApplication) {\n            let selectedItem = this.ListComponent.selectedItem();\n            this.ListComponent.dataLoad(\n               this.CurrentApplication?.queriesIncluded()\n            );\n            this.ListComponent.selectItem(selectedItem.id);\n         }\n      }\n\n      /**\n       * @function clickNewQuery\n       *\n       * Manages initiating the transition to the new Process Popup window\n       */\n      clickNewQuery(/* selectNew */) {\n         // show the new popup\n         this.AddForm.show();\n      }\n\n      /*\n       * @function exclude\n       * the list component notified us of an exclude action and which\n       * item was chosen.\n       *\n       * perform the removal and update the UI.\n       */\n      async exclude(item) {\n         this.ListComponent.busy();\n         var app = this.CurrentApplication;\n         await app.queryRemove(item);\n         this.ListComponent.dataLoad(app.queriesIncluded());\n\n         // this will clear the  workspace\n         this.emit(\"selected\", null);\n      }\n\n      ready() {\n         this.ListComponent.ready();\n      }\n\n      select(query) {\n         this.ListComponent.select(query.id);\n      }\n   }\n\n   return new UI_Work_Query_List();\n}\n","/*\n * ui_work_query_list_newQuery\n *\n * Display the form for creating a new Query.  This Popup will manage several\n * different sub components for gathering Query data for saving.\n *\n * The sub components will gather the data for the query and do basic form\n * validations on their interface.\n *\n * when ready, the sub component will emit \"save\" with the values gathered by\n * the form.  This component will manage the actual final query validation,\n * and saving to this application.\n *\n * On success, \"save.success\" will be emitted on the sub-component, and this\n * component.\n *\n * On Error, \"save.error\" will be emitted on the sub-component.\n *\n */\nimport UI_Class from \"./ui_class\";\nimport UIBlankQuery from \"./ui_work_query_list_newQuery_blank\";\nimport UIImportQuery from \"./ui_work_query_list_newQuery_import\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Query_List_NewQuery extends UIClass {\n      constructor() {\n         super(\"ui_work_query_list_newQuery\", {\n            tab: \"\",\n         });\n\n         this.selectNew = true;\n         // {bool} do we select a new query after it is created.\n\n         // var callback = null;\n\n         this.BlankTab = UIBlankQuery(AB);\n         this.ImportTab = UIImportQuery(AB);\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            view: \"window\",\n            id: this.ids.component,\n            position: \"center\",\n            modal: true,\n            head: {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Add new query\"),\n                     css: \"modal_title\",\n                     align: \"center\",\n                  },\n                  {\n                     view: \"button\",\n                     autowidth: true,\n                     type: \"icon\",\n                     icon: \"nomargin fa fa-times\",\n                     click: () => {\n                        this.emit(\"cancel\");\n                     },\n                     on: {\n                        onAfterRender() {\n                           AB.ClassUI.CYPRESS_REF(this);\n                        },\n                     },\n                  },\n               ],\n            },\n            selectNewQuery: true,\n            body: {\n               view: \"tabview\",\n               id: this.ids.tab,\n               cells: [this.BlankTab.ui(), this.ImportTab.ui()],\n               tabbar: {\n                  on: {\n                     onAfterTabClick: (id) => {\n                        this.switchTab(id);\n                     },\n                     onAfterRender() {\n                        this.$view\n                           .querySelectorAll(\".webix_item_tab\")\n                           .forEach((t) => {\n                              var tid = t.getAttribute(\"button_id\");\n                              AB.ClassUI.CYPRESS_REF(t, `${tid}_tab`);\n                           });\n                     },\n                  },\n               },\n            },\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         webix.ui(this.ui());\n         webix.extend($$(this.ids.component), webix.ProgressBar);\n\n         this.$component = $$(this.ids.component);\n\n         let allInits = [];\n         [\"BlankTab\", \"ImportTab\"].forEach((k) => {\n            allInits.push(this[k].init(AB));\n            this[k].on(\"cancel\", () => {\n               this.emit(\"cancel\");\n            });\n            this[k].on(\"save\", (values) => {\n               if (values.id) {\n                  return this.import(values, k);\n               }\n               this.save(values, k);\n            });\n         });\n\n         return Promise.all(allInits);\n      }\n\n      /**\n       * @method done()\n       * Finished saving, so hide the popup and clean up.\n       * @param {object} obj\n       */\n      done(obj) {\n         this.ready();\n         this.hide(); // hide our popup\n         this.emit(\"save\", obj, this.selectNew);\n         // _logic.callbacks.onDone(null, obj, selectNew, callback); // tell parent component we're done\n      }\n\n      /**\n       * @method import()\n       * take an existing query and add it to our ABApplication.\n       * @param {ABObjectQuery} query\n       * @param {string} tabKey\n       *        which of our tabs triggered this method?\n       */\n      async import(query, tabKey) {\n         // show progress\n         this.busy();\n\n         // if we get here, save the new Object\n         try {\n            await this.CurrentApplication.queryInsert(query);\n            this[tabKey].emit(\"save.successful\", query);\n            this.done(query);\n         } catch (err) {\n            // hide progress\n            this.ready();\n\n            // an error happend during the server side creation.\n            // so remove this object from the current object list of\n            // the CurrentApplication.\n            // NOTE: It has error \"queryRemove\" is not a function\n            // await this.CurrentApplication.queryRemove(newQuery);\n\n            // tell current Tab component there was an error\n            this[tabKey].emit(\"save.error\", err);\n         }\n      }\n\n      /**\n       * @method save\n       * take the data gathered by our child creation tabs, and\n       * add it to our current application.\n       * @param {obj} values  key=>value hash of model values.\n       * @param {string}  tabKey\n       *        the \"key\" of the tab initiating the save.\n       * @return {Promise}\n       */\n      async save(values, tabKey) {\n         // must have an application set.\n         if (!this.CurrentApplication) {\n            webix.alert({\n               title: L(\"Shoot!\"),\n               test: L(\"No Application Set!  Why?\"),\n            });\n            this[tabKey].emit(\"save.error\", true);\n            return false;\n         }\n\n         // create a new (unsaved) instance of our object:\n         let newQuery = this.AB.queryNew(values);\n\n         // have newObject validate it's values.\n         let validator = newQuery.isValid();\n         if (validator.fail()) {\n            this[tabKey].emit(\"save.error\", validator);\n            // cb(validator); // tell current Tab component the errors\n            return false; // stop here.\n         }\n\n         if (!newQuery.createdInAppID) {\n            newQuery.createdInAppID = this.CurrentApplicationID;\n         }\n\n         // show progress\n         this.busy();\n\n         // if we get here, save the new Object\n         try {\n            let query = await newQuery.save();\n            await this.CurrentApplication.queryInsert(query);\n            this[tabKey].emit(\"save.successful\", query);\n            this.done(query);\n         } catch (err) {\n            // hide progress\n            this.ready();\n\n            // an error happend during the server side creation.\n            // so remove this object from the current object list of\n            // the CurrentApplication.\n            // NOTE: It has error \"queryRemove\" is not a function\n            // await this.CurrentApplication.queryRemove(newQuery);\n\n            // tell current Tab component there was an error\n            this[tabKey].emit(\"save.error\", err);\n         }\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show(shouldSelectNew) {\n         if (shouldSelectNew != null) {\n            this.selectNew = shouldSelectNew;\n         }\n         if (this.$component) this.$component.show();\n\n         const id = $$(this.ids.tab).getValue();\n         this.switchTab(id);\n      }\n\n      /**\n       * @function hide()\n       *\n       * remove the busy indicator from the form.\n       */\n      hide() {\n         if (this.$component) this.$component.hide();\n      }\n\n      /**\n       * Show the busy indicator\n       */\n      busy() {\n         if (this.$component) {\n            this.$component.showProgress();\n         }\n      }\n\n      /**\n       * Hide the busy indicator\n       */\n      ready() {\n         if (this.$component) {\n            this.$component.hideProgress();\n         }\n      }\n\n      switchTab(tabId) {\n         if (tabId == this.BlankTab?.ui()?.body?.id || !tabId) {\n            this.BlankTab?.onShow?.(this.CurrentApplication);\n         } else if (tabId == this.ImportTab?.ui()?.body?.id) {\n            this.ImportTab?.onShow?.(this.CurrentApplication);\n         }\n      }\n   }\n\n   return new UI_Work_Query_List_NewQuery();\n}\n","/*\n * ui_work_query_list_newQuery_blank\n *\n * Display the form for creating a new ABQuery.\n */\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Query_List_NewQuery_Blank extends UIClass {\n      constructor() {\n         super(\"ui_work_query_list_newQuery_blank\", {\n            form: \"\",\n            buttonSave: \"\",\n            buttonCancel: \"\",\n            object: \"\",\n         });\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            header: L(\"Create\"),\n            body: {\n               view: \"form\",\n               id: this.ids.form,\n               width: 400,\n               rules: {\n                  // TODO:\n                  // name: inputValidator.rules.validateQueryName\n               },\n               elements: [\n                  {\n                     view: \"text\",\n                     label: L(\"Name\"),\n                     name: \"name\",\n                     required: true,\n                     placeholder: L(\"Query name\"),\n                     labelWidth: 70,\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(\n                              this,\n                              \"ui_work_query_list_newQuery_blank_name\"\n                           );\n                        },\n                     },\n                  },\n                  {\n                     id: this.ids.object,\n                     view: \"richselect\",\n                     label: L(\"Object\"),\n                     name: \"object\",\n                     required: true,\n                     placeholder: L(\"Select an object\"),\n                     labelWidth: 70,\n                     on: {\n                        onAfterRender() {\n                           UIClass.CYPRESS_REF(\n                              this,\n                              \"ui_work_query_list_newQuery_blank_object\"\n                           );\n                        },\n                     },\n                  },\n                  {\n                     margin: 5,\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonCancel,\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => {\n                              this.cancel();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonSave,\n                           css: \"webix_primary\",\n                           value: L(\"Add Query\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              return this.save();\n                           },\n                           on: {\n                              onAfterRender() {\n                                 UIClass.CYPRESS_REF(this);\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         this.$form = $$(this.ids.form);\n         this.$buttonSave = $$(this.ids.buttonSave);\n         this.$objectList = $$(this.ids.object);\n\n         // \"save.error\" is triggered by the ui_work_query_list_newQuery\n         // if there was an error saving the values from our form.\n         this.on(\"save.error\", (err) => {\n            this.onError(err);\n         });\n\n         // \"save.successful\" is triggered by the ui_work_query_list_newQuery\n         // if the values we provided were successfully saved.\n         this.on(\"save.successful\", () => {\n            this.onSuccess();\n         });\n\n         // init() routines are always considered async so:\n         return Promise.resolve();\n      }\n\n      cancel() {\n         this.formClear();\n         this.emit(\"cancel\");\n      }\n\n      formClear() {\n         if (this.$form) {\n            this.$form.clearValidation();\n            this.$form.clear();\n         }\n      }\n\n      /**\n       * @method onError()\n       * Our Error handler when the data we provided our parent\n       * ui_work_query_list_newQuery query had an error saving\n       * the values.\n       * @param {Error|ABValidation|other} err\n       *        The error information returned. This can be several\n       *        different types of queries:\n       *        - A javascript Error() query\n       *        - An ABValidation query returned from our .isValid()\n       *          method\n       *        - An error response from our API call.\n       */\n      onError(err) {\n         if (err) {\n            console.error(err);\n            var message = L(\"the entered data is invalid\");\n            // if this was our Validation() query:\n            if (err.updateForm) {\n               err.updateForm(this.$form);\n            } else {\n               if (err.code && err.data) {\n                  message = err.data?.sqlMessage ?? message;\n               } else {\n                  message = err?.message ?? message;\n               }\n            }\n\n            var values = this.$form.getValues();\n            webix.alert({\n               title: L(\"Error creating Query: {0}\", [values.name]),\n               ok: L(\"fix it\"),\n               text: message,\n               type: \"alert-error\",\n            });\n         }\n         // get notified if there was an error saving.\n         this.$buttonSave.enable();\n      }\n\n      /**\n       * @method onSuccess()\n       * Our success handler when the data we provided our parent\n       * ui_work_query_list_newQuery successfully saved the values.\n       */\n      onSuccess() {\n         this.formClear();\n         this.$buttonSave.enable();\n      }\n\n      /**\n       * @function save\n       *\n       * verify the current info is ok, package it, and return it to be\n       * added to the application.createModel() method.\n       */\n      save() {\n         this.$buttonSave.disable();\n\n         var Form = this.$form;\n\n         Form.clearValidation();\n\n         // if it doesn't pass the basic form validation, return:\n         if (!Form.validate()) {\n            this.$buttonSave.enable();\n            return false;\n         }\n\n         let formVals = Form.getValues();\n         let values = {\n            name: formVals.name,\n            label: formVals.name,\n            joins: {\n               alias: \"BASE_OBJECT\",\n               objectID: formVals.object,\n               links: [],\n            },\n         };\n\n         this.emit(\"save\", values);\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         if ($$(this.ids.component)) $$(this.ids.component).show();\n      }\n\n      onShow(currentApplication) {\n         // populate object list\n         if (this.$objectList && currentApplication) {\n            let objectOpts = currentApplication.objectsIncluded().map((obj) => {\n               return {\n                  id: obj.id,\n                  value: obj.label,\n               };\n            });\n\n            this.$objectList.define(\"options\", objectOpts);\n            this.$objectList.refresh();\n\n            // Set width of item list\n            let $suggestView = this.$objectList.getPopup();\n            $suggestView.attachEvent(\"onShow\", () => {\n               $suggestView.define(\"width\", 300);\n               $suggestView.resize();\n            });\n         }\n\n         // clear form\n         if (this.$form) {\n            this.$form.setValues({\n               name: \"\",\n               object: \"\",\n            });\n         }\n      }\n   }\n\n   return new UI_Work_Query_List_NewQuery_Blank();\n}\n","/*\n * ui_work_query_list_newQuery_import\n *\n * Display the form for importing an existing query into the application.\n *\n */\nimport UI_Class from \"./ui_class\";\n\nexport default function (AB) {\n   const UIClass = UI_Class(AB);\n   var L = UIClass.L();\n\n   class UI_Work_Query_List_NewQuery_Import extends UIClass {\n      constructor() {\n         super(\"ui_work_query_list_newQuery_import\", {\n            form: \"\",\n            filter: \"\",\n            queryList: \"\",\n            buttonSave: \"\",\n            buttonCancel: \"\",\n         });\n      }\n\n      ui() {\n         // Our webix UI definition:\n         return {\n            id: this.ids.component,\n            header: L(\"Existing\"),\n            body: {\n               view: \"form\",\n               id: this.ids.form,\n               width: 400,\n               elements: [\n                  // Filter\n                  {\n                     cols: [\n                        {\n                           view: \"icon\",\n                           icon: \"fa fa-filter\",\n                           align: \"left\",\n                        },\n                        {\n                           view: \"text\",\n                           id: this.ids.filter,\n                           on: {\n                              onTimedKeyPress: () => this.filter(),\n                           },\n                        },\n                     ],\n                  },\n\n                  // Model list\n                  {\n                     view: \"list\",\n                     id: this.ids.queryList,\n                     select: true,\n                     height: 200,\n                     minHeight: 250,\n                     maxHeight: 250,\n                     data: [],\n                     template: \"<div>#label#</div>\",\n                  },\n\n                  // Import & Cancel buttons\n                  {\n                     margin: 5,\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonCancel,\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: () => this.cancel(),\n                        },\n                        {\n                           view: \"button\",\n                           id: this.ids.buttonSave,\n                           css: \"webix_primary\",\n                           value: L(\"Import\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => this.save(),\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      async init(AB) {\n         this.AB = AB;\n\n         this.$form = $$(this.ids.form);\n         this.$filter = $$(this.ids.filter);\n         this.$queryList = $$(this.ids.queryList);\n         this.$buttonSave = $$(this.ids.buttonSave);\n         this.$buttonCancel = $$(this.ids.buttonCancel);\n\n         // \"save.error\" is triggered by the ui_work_query_list_newQuery\n         // if there was an error saving the values from our form.\n         this.on(\"save.error\", (err) => {\n            this.onError(err);\n         });\n\n         // \"save.successful\" is triggered by the ui_work_query_list_newQuery\n         // if the values we provided were successfully saved.\n         this.on(\"save.successful\", () => {\n            this.onSuccess();\n         });\n\n         // init() routines are always considered async so:\n         return Promise.resolve();\n      }\n\n      onShow(app) {\n         this.formClear();\n\n         // now all objects are *global* but an application might only\n         // reference a sub set of them.  Here we just need to show\n         // the objects our current application isn't referencing:\n\n         const availableQueries = app.queriesExcluded();\n         this.$queryList.parse(availableQueries, \"json\");\n      }\n\n      filter() {\n         let filterText = this.$filter.getValue();\n         this.$queryList.filter(\"#label#\", filterText);\n      }\n\n      save() {\n         let selectedQuery = this.$queryList.getSelectedItem();\n         if (!selectedQuery) return false;\n\n         this.$buttonSave.disable();\n\n         this.emit(\"save\", selectedQuery);\n      }\n\n      cancel() {\n         this.formClear();\n         this.emit(\"cancel\");\n      }\n\n      formClear() {\n         // Filter section\n         if (this.$form) {\n            this.$form.clearValidation();\n            this.$form.clear();\n         }\n         // Lists\n         if (this.$queryList) {\n            this.$queryList.clearAll();\n         }\n      }\n\n      /**\n       * @method onError()\n       * Our Error handler when the data we provided our parent\n       * ui_work_object_list_newObject object had an error saving\n       * the values.\n       * @param {Error|ABValidation|other} err\n       *        The error information returned. This can be several\n       *        different types of objects:\n       *        - A javascript Error() object\n       *        - An ABValidation object returned from our .isValid()\n       *          method\n       *        - An error response from our API call.\n       */\n      onError(err) {\n         if (err) {\n            let message = L(\"the entered data is invalid\");\n            // if this was our Validation() object:\n            if (err.updateForm) {\n               err.updateForm(this.$form);\n            } else {\n               if (err.code && err.data) {\n                  message = err.data?.sqlMessage ?? message;\n               } else {\n                  message = err?.message ?? message;\n               }\n            }\n\n            let values = this.$form.getValues();\n            webix.alert({\n               title: L(\"Error creating Query: {0}\", [values.name]),\n               ok: L(\"fix it\"),\n               text: message,\n               type: \"alert-error\",\n            });\n         }\n         // get notified if there was an error saving.\n         this.$buttonSave.enable();\n      }\n\n      /**\n       * @method onSuccess()\n       * Our success handler when the data we provided our parent\n       * ui_work_object_list_newObject successfully saved the values.\n       */\n      onSuccess() {\n         this.$buttonSave.enable();\n      }\n   }\n\n   return new UI_Work_Query_List_NewQuery_Import();\n}\n","import UI_Class from \"./ui_class\";\nimport UI_Warnings from \"./ui_warnings\";\n\nimport FWorkspaceDesign from \"./ui_work_query_workspace_design\";\nimport FWorkspaceDisplay from \"./ui_work_object_workspace\";\n\nexport default function (AB, init_settings) {\n   const UIClass = UI_Class(AB);\n   const uiConfig = AB.Config.uiSettings();\n   var L = UIClass.L();\n\n   const iBase = \"ui_work_query_workspace\";\n   const QueryDesignComponent = FWorkspaceDesign(AB);\n   const QueryDisplayComponent = FWorkspaceDisplay(AB, `${iBase}_display`, {\n      isReadOnly: true,\n      showWarnings: false,\n   });\n\n   var Warnings = UI_Warnings(AB, `${iBase}_view_warnings`, init_settings);\n\n   class UI_Work_Query_Workspace extends UIClass {\n      constructor(settings = {}) {\n         super(iBase, {\n            multiview: \"\",\n            toolbar: \"\",\n            modeButton: \"\",\n            // loadAllButton: \"\",\n            noSelection: \"\",\n            run: \"\",\n            design: \"\",\n         });\n\n         this.settings = settings;\n      }\n\n      ui() {\n         var ids = this.ids;\n\n         return {\n            view: \"multiview\",\n            animate: false,\n            cells: [\n               {\n                  id: ids.noSelection,\n                  rows: [\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        height: 200,\n                        label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-filter'></div>\",\n                     },\n                     {\n                        view: \"label\",\n                        align: \"center\",\n                        label: L(\"Select a query to work with.\"),\n                     },\n                     {\n                        cols: [\n                           {},\n                           {\n                              view: \"button\",\n                              css: \"webix_primary\",\n                              label: L(\"Add new query\"),\n                              type: \"form\",\n                              autowidth: true,\n                              click: () => {\n                                 this.emit(\"query.add\");\n                                 // App.actions.addNewQuery(true);\n                              },\n                           },\n                           {},\n                        ],\n                     },\n                     {\n                        maxHeight: uiConfig.xxxLargeSpacer,\n                        hidden: uiConfig.hideMobile,\n                     },\n                  ],\n               },\n               {\n                  // type: \"line\",\n                  id: ids.component,\n                  rows: [\n                     {\n                        id: ids.toolbar,\n                        view: \"tabbar\",\n                        // hidden: true,\n                        css: \"webix_dark\",\n                        type: \"bottom\",\n                        borderless: false,\n                        bottomOffset: 0,\n                        // css: \"ab-data-toolbar\",\n                        options: [\n                           {\n                              id: ids.design,\n                              value: L(\"Build Query\"),\n                              icon: \"fa fa-sliders\",\n                              type: \"icon\",\n                              // on: {\n                              //    click: () => {\n                              //       this.changeMode(\"run\");\n                              //    },\n                              // },\n                           },\n                           {\n                              id: ids.run,\n                              value: L(\"View Query\"),\n                              icon: \"fa fa-table\",\n                              type: \"icon\",\n                              // on: {\n                              //    click: () => {\n                              //       this.changeMode(\"design\");\n                              //    },\n                              // },\n                           },\n                        ],\n                        on: {\n                           onChange: (newv, oldv) => {\n                              if (newv != oldv) {\n                                 this.changeMode(newv);\n                              }\n                           },\n                        },\n                     },\n                     { height: 10 },\n                     {\n                        id: ids.multiview,\n                        view: \"multiview\",\n                        animate: false,\n                        cells: [\n                           QueryDesignComponent.ui(),\n                           QueryDisplayComponent.ui(),\n                        ],\n                     },\n                     Warnings.ui(),\n                     // {\n                     //    id: ids.loadAllButton,\n                     //    view: \"button\",\n                     //    css: \"webix_primary\",\n                     //    label: L(\"Load all\"),\n                     //    type: \"form\",\n                     //    hidden: true,\n                     //    click: () => {\n                     //       this.loadAll();\n                     //    },\n                     // },\n                  ],\n               },\n            ],\n         };\n      }\n\n      init(AB) {\n         this.AB = AB;\n\n         this.warningsPropogate([QueryDesignComponent, QueryDisplayComponent]);\n         this.on(\"warnings\", () => {\n            Warnings.show(this.CurrentQuery);\n         });\n\n         return Promise.all([\n            QueryDesignComponent.init(AB),\n            QueryDisplayComponent.init(AB),\n         ]);\n      }\n\n      // applicationLoad(app) {\n      //    super.applicationLoad(app);\n      //    // TODO\n      // }\n\n      changeMode(mode) {\n         let ids = this.ids;\n\n         // $$(ids.noSelection).hide(false, false);\n         $$(this.ids.component).show();\n         $$(ids.toolbar).show(false, false);\n\n         // Run\n         if (mode == ids.run) {\n            // $$(ids.modeButton).define('label', labels.design);\n            // $$(ids.modeButton).define('icon', \"fa fa-tasks\");\n            // $$(ids.loadAllButton).show();\n            // $$(ids.loadAllButton).refresh();\n\n            QueryDisplayComponent.show();\n            QueryDisplayComponent.populateObjectWorkspace(this.CurrentQueryID);\n\n            // $$(ids.multiview).setValue(DataTable.ui.id);\n         }\n         // Design\n         else {\n            // $$(ids.modeButton).define('label', labels.run);\n            // $$(ids.modeButton).define('icon', \"fa fa-filter\");\n            // $$(ids.loadAllButton).hide();\n            // $$(ids.loadAllButton).refresh();\n\n            QueryDesignComponent.show(true);\n            QueryDesignComponent.queryLoad(this.CurrentQuery);\n         }\n\n         // $$(ids.modeButton).refresh();\n      }\n\n      applicationLoad(application) {\n         super.applicationLoad(application);\n\n         this.clearWorkspace();\n         QueryDesignComponent.applicationLoad(application);\n         QueryDisplayComponent.applicationLoad(application);\n      }\n\n      clearWorkspace() {\n         $$(this.ids.noSelection).show(false, false);\n         QueryDesignComponent.clearWorkspace();\n      }\n\n      loadAll() {\n         QueryDisplayComponent.loadAll();\n      }\n\n      queryLoad(query) {\n         super.queryLoad(query);\n\n         Warnings.show(query);\n\n         QueryDesignComponent.queryLoad(query);\n         QueryDisplayComponent.queryLoad(query);\n\n         if (!query) {\n            this.clearWorkspace();\n         } else {\n            $$(this.ids.component).show();\n            QueryDesignComponent.show(true);\n         }\n      }\n\n      /**\n       * @function resetTabs()\n       * Set the tabs to the default state when a new query is selected.\n       */\n      resetTabs() {\n         $$(this.ids.toolbar)?.setValue?.(this.ids.design);\n      }\n   }\n\n   return new UI_Work_Query_Workspace(init_settings);\n}\n","/*\n * ui_work_query_workspace_design\n *\n * Manage the Query Workspace area.\n *\n */\n\nimport UI_Class from \"./ui_class\";\n\n// const ABDataCollection = require(\"../classes/platform/ABDataCollection\");\n// const RowFilter = require(\"../classes/platform/RowFilter\");\n\nexport default function (AB, init_settings) {\n   const UIClass = UI_Class(AB);\n   const uiConfig = AB.Config.uiSettings();\n   var L = UIClass.L();\n\n   class UI_Work_Query_Workspace_Design extends UIClass {\n      constructor(settings = {}) {\n         super(\"ui_work_query_workspace_design\", {\n            tree: \"\",\n            tabObjects: \"\",\n            depth: \"\",\n\n            datatable: \"\",\n\n            selectedObject: \"\",\n            grouping: \"\",\n            hidePrefix: \"\",\n            filter: \"\",\n         });\n\n         this.settings = settings;\n\n         this.mockDatacollection = null;\n         // {ABDataCollection}\n         // A DC used to drive the display of our workspace views.\n\n         this.CurrentQueryID = null;\n         // {string}\n         // the ABObjectQuery.id of the query we are working with.\n\n         // TODO: once FilterComplex is merged into our core repo\n         // change this to:\n         // this.DataFilter = AB.filterComplexNew(this.ids.filter);\n         this.DataFilter = AB.rowfilterNew(null, this.ids.filter);\n         this.DataFilter.init({ showObjectName: true });\n         this.DataFilter.on(\"change\", () => {\n            // don't bother saving if the filter condition is incomplete.\n            if (this.DataFilter.isComplete()) {\n               if (!this.__saveInProcess) {\n                  // prevent multiple \"change\" events from firing off\n                  // a save()\n                  this.__saveInProcess = this.save().finally(() => {\n                     this.__saveInProcess = null;\n                  });\n               }\n            }\n         });\n      }\n\n      ui() {\n         const _this = this;\n         const ids = this.ids;\n\n         return {\n            view: \"scrollview\",\n            id: ids.component,\n            body: {\n               rows: [\n                  {\n                     id: ids.selectedObject,\n                     type: \"form\",\n                     rows: [\n                        {\n                           cols: [\n                              {\n                                 rows: [\n                                    {\n                                       view: \"label\",\n                                       label: L(\"Manage Objects\"),\n                                       css: \"ab-query-label\",\n                                       // height: 50\n                                    },\n                                    // {\n                                    //    autowidth: true,\n                                    //    css: \"bg-gray\",\n                                    //    cols: [\n                                    //       {},\n                                    //       {\n                                    //          id: ids.depth,\n                                    //          view: \"counter\",\n                                    //          label: L('ab.object.querybuilder.relationshipDepth', \"*Relationship Depth\"),\n                                    //          width: 270,\n                                    //          labelWidth: 165,\n                                    //          step: 1,\n                                    //          value: 5,\n                                    //          min: 1,\n                                    //          max: 10,\n                                    //          on: {\n                                    //             onChange: function (newv, oldv) {\n                                    //                _logic.depthChange(newv, oldv);\n                                    //             }\n                                    //          }\n                                    //       },\n                                    //       {}\n                                    //    ]\n                                    // },\n                                    {\n                                       view: \"tree\",\n                                       id: ids.tree,\n                                       css: \"ab-tree\",\n                                       template:\n                                          \"{common.icon()} {common.checkbox()} #value#\",\n                                       data: [],\n                                       on: {\n                                          onItemClick: function (\n                                             id,\n                                             event,\n                                             item\n                                          ) {\n                                             if (this.getItem(id).disabled)\n                                                return;\n\n                                             if (this.isChecked(id)) {\n                                                this.uncheckItem(id);\n                                             } else {\n                                                this.checkItem(id);\n                                             }\n                                          },\n                                          onItemCheck: (\n                                             id,\n                                             isChecked,\n                                             event\n                                          ) => {\n                                             this.checkObjectLink(\n                                                id,\n                                                isChecked\n                                             );\n                                          },\n                                          onBeforeOpen: function (id) {\n                                             let item = this.getItem(id);\n                                             if (item.$count === -1) {\n                                                $$(ids.tree).showProgress({\n                                                   type: \"icon\",\n                                                });\n\n                                                let result =\n                                                   _this.getChildItems(\n                                                      item.objectLinkId,\n                                                      id\n                                                   );\n\n                                                $$(ids.tree).parse(\n                                                   result.treeItems\n                                                );\n                                                $$(ids.tree).hideProgress();\n                                             }\n                                          },\n                                       },\n                                    },\n                                 ],\n                              },\n                              { view: \"resizer\", borderless: true },\n                              {\n                                 gravity: 3,\n                                 rows: [\n                                    {\n                                       view: \"label\",\n                                       label: L(\"Manage Fields\"),\n                                       css: \"ab-query-label\",\n                                       // height: 50\n                                    },\n                                    {\n                                       view: \"tabview\",\n                                       id: ids.tabObjects,\n                                       tabbar: {\n                                          tabMinWidth: 240,\n                                          css: \"webix_dark\",\n                                          type: \"bottom\",\n                                          bottomOffset: 0,\n                                       },\n                                       cells: [\n                                          {}, // require\n                                       ],\n                                       multiview: {\n                                          animate: false,\n                                          on: {\n                                             onViewChange: (prevId, nextId) => {\n                                                this.setSelectedFields(nextId);\n                                             },\n                                          },\n                                       },\n                                    },\n                                 ],\n                              },\n                           ],\n                        },\n                        // grouping\n                        {\n                           id: ids.grouping,\n                           view: \"checkbox\",\n                           label: L(\"Grouping\"),\n                           labelWidth: uiConfig.labelWidthXLarge,\n                           on: {\n                              onChange: () => {\n                                 this.save();\n                              },\n                           },\n                        },\n                        // hide prefix labels\n                        {\n                           id: ids.hidePrefix,\n                           view: \"checkbox\",\n                           label: L(\"Hide prefix labels\"),\n                           labelWidth: uiConfig.labelWidthXLarge,\n                           on: {\n                              onChange: () => {\n                                 this.save();\n                              },\n                           },\n                        },\n                        // filter\n                        {\n                           view: \"label\",\n                           label: L(\"Manage Filters\"),\n                           css: \"ab-query-label\",\n                           // height: 50\n                        },\n                        this.DataFilter.ui,\n                        {\n                           id: ids.datatable,\n                           view: \"treetable\",\n                           minHeight: 280,\n                           dragColumn: true,\n                           columns: [],\n                           data: [],\n                           on: {\n                              onAfterColumnDrop: () => {\n                                 this.save();\n                              },\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         };\n      }\n\n      // Our init() function for setting up our UI\n      init(AB) {\n         this.AB = AB;\n         const ids = this.ids;\n\n         // webix.extend($$(ids.form), webix.ProgressBar);\n         webix.extend($$(ids.tree), webix.ProgressBar);\n         webix.extend($$(ids.tabObjects), webix.ProgressBar);\n         webix.extend($$(ids.datatable), webix.ProgressBar);\n\n         return Promise.resolve();\n      }\n\n      /**\n       * @function applicationLoad\n       *\n       * Initialize the Object Workspace with the given ABApplication.\n       *\n       * @param {ABApplication} application\n       */\n      // applicationLoad(application) {\n      //    CurrentApplication = application;\n      // }\n\n      /**\n       * @method clearWorkspace()\n       * Clear the query workspace.\n       */\n      clearWorkspace() {\n         // $$(this.ids.component).hide();\n      }\n\n      /**\n       * @method populateQueryWorkspace()\n       * Initialize the Object Workspace with the provided ABObject.\n       * @param {ABObjectQuery} query\n       *        current ABObject instance we are working with.\n       */\n      populateQueryWorkspace(query) {\n         console.error(\"DEPRECIATED! Use queryLoad() instead\");\n         this.queryLoad(query);\n      }\n      queryLoad(query) {\n         super.queryLoad(query);\n\n         let CurrentQuery = this.CurrentQuery;\n         if (CurrentQuery == null) {\n            this.clearWorkspace();\n            return;\n         }\n\n         // create new data view\n         this.mockDatacollection = this.AB.datacollectionNew({\n            query: [CurrentQuery.toObj()],\n            settings: {\n               datasourceID: CurrentQuery.id,\n            },\n         });\n         this.mockDatacollection.datasource = CurrentQuery;\n         // this.mockDatacollection.init(); << need this?\n\n         const objBase = CurrentQuery.objectBase();\n\n         const ids = this.ids;\n         $$(ids.selectedObject).show();\n\n         // *** Tree ***\n         this.refreshTree();\n\n         // *** Tabs ***\n\n         let links = CurrentQuery.joins().links || [];\n         const $tabObjects = $$(ids.tabObjects);\n\n         $tabObjects?.showProgress({ type: \"icon\" });\n\n         // NOTE : Tabview have to contain at least one cell\n         $tabObjects.addView({\n            body: {\n               id: \"temp\",\n            },\n         });\n\n         // clear object tabs\n         var tabbar = $tabObjects.getTabbar();\n         var optionIds = tabbar.config.options.map((opt) => opt.id);\n         optionIds.forEach((optId) => {\n            if (optId != \"temp\") {\n               // Don't remove a temporary tab (remove later)\n               $tabObjects.removeView(optId);\n            }\n         });\n         var $viewMultiview = $tabObjects.getMultiview();\n         $viewMultiview\n            .getChildViews()\n            .map(($view) => $view)\n            .forEach(($view) => {\n               if ($view && $view.config.id != \"temp\")\n                  $viewMultiview.removeView($view);\n            });\n\n         if (!objBase) return;\n\n         // add the main object tab\n         let tabUI = this.templateField({\n            object: objBase,\n            isTypeHidden: true,\n            aliasName: \"BASE_OBJECT\",\n         });\n         $tabObjects.addView(tabUI);\n\n         // select default tab to the main object\n         $tabObjects.setValue(tabUI.id);\n\n         // populate selected fields\n         this.setSelectedFields(\"BASE_OBJECT\");\n\n         // Other object tabs will be added in a check tree item event\n         var fnAddTab = (objFrom, links) => {\n            (links || []).forEach((join) => {\n               // NOTE: query v1\n               // if (join.objectURL) {\n               //    objFrom = CurrentApplication.urlResolve(\n               //       join.objectURL\n               //    );\n               // }\n\n               if (!objFrom) return;\n\n               if (!join.fieldID) return;\n\n               var fieldLink = objFrom.fieldByID(join.fieldID);\n               if (!fieldLink) return;\n\n               var objLink = CurrentQuery.objectByID(\n                  fieldLink.settings.linkObject\n               );\n               if (!objLink) return;\n               // if (!objLink ||\n               // \t// prevent join recursive base object\n               // \tobjLink.id == objBase.id) return;\n\n               // add tab\n               let tabUI = this.templateField({\n                  field: fieldLink,\n                  joinType: join.type,\n                  aliasName: join.alias,\n               });\n               $tabObjects.addView(tabUI);\n\n               // populate selected fields\n               this.setSelectedFields(join.alias);\n\n               fnAddTab(objLink, join.links);\n            });\n         };\n\n         fnAddTab(objBase, links);\n\n         /** Grouping **/\n         $$(ids.grouping).define(\"value\", query.settings.grouping);\n         $$(ids.grouping).refresh();\n\n         /** Hide prefix label **/\n         $$(ids.hidePrefix).define(\"value\", query.settings.hidePrefix);\n         $$(ids.hidePrefix).refresh();\n\n         // remove a temporary tab\n         $tabObjects.removeView(\"temp\");\n         $tabObjects.adjust();\n\n         $tabObjects.hideProgress();\n\n         /** Filter **/\n         this.refreshFilter();\n\n         /** DataTable **/\n         this.refreshDataTable();\n      }\n\n      /**\n       * @method getChildItems\n       * Get items of tree view\n       * @param {string} objectId\n       *        ABObject.id\n       * @param {uuid} parentItemId\n       * @return {Promise}\n       */\n      getChildItems(objectId, parentItemId) {\n         let treeItems = {\n            data: [],\n         };\n         let object = this.getObject(objectId);\n\n         if (parentItemId) treeItems.parent = parentItemId;\n\n         let tasks = [];\n\n         // Loop to find object of the connect field\n         object.connectFields().forEach((f) => {\n            let objectLink = this.getObject(f.settings.linkObject);\n            if (objectLink == null) return;\n\n            // Prevent System Objects from showing up in List\n            // UNLESS we are in a SystemApp:\n            if (!this.CurrentApplication.isSystemObj) {\n               if (objectLink.isSystemObject) return;\n            }\n\n            let fieldID = f.id;\n\n            // add items to tree\n            var label = `${objectLink.label} (${f.label})`;\n\n            treeItems.data.push({\n               value: label, // a label of link object\n               fieldID: fieldID,\n               objectId: objectLink.id,\n               objectLinkId: f.settings.linkObject,\n               checked: false,\n               disabled: false, // always enable\n               open: false,\n\n               webix_kids: true,\n            });\n         });\n\n         return {\n            object,\n            treeItems: treeItems,\n         };\n\n         /*\n               return (\n                  Promise.resolve()\n                     // get object\n                     .then(() => _logic.getObject(objectId))\n\n                     // populate to tree values\n                     .then((object) => {\n                        // if (parentItemId) {\n                        // \tvar item = store.getItem(parentItemId);\n                        // \tif (item.$level > $$(ids.depth).getValue())\n                        // \t\treturn;\n                        // }\n\n                        objectResult = object;\n\n                        if (parentItemId) treeItems.parent = parentItemId;\n\n                        let tasks = [];\n\n                        // Loop to find object of the connect field\n                        object.connectFields(true).forEach((f) => {\n                           tasks.push(() => {\n                              return new Promise((ok, error) => {\n                                 _logic\n                                    .getObject(f.settings.linkObject)\n                                    .catch(error)\n                                    .then((objectLink) => {\n                                       if (objectLink == null) return ok();\n\n                                       let fieldID = f.id;\n\n                                       // add items to tree\n                                       var label = \"#object# (#field#)\"\n                                          .replace(\"#object#\", objectLink.label)\n                                          .replace(\"#field#\", f.label);\n\n                                       treeItems.data.push({\n                                          value: label, // a label of link object\n                                          fieldID: fieldID,\n                                          objectId: objectLink.id,\n                                          objectLinkId: f.settings.linkObject,\n                                          checked: false,\n                                          disabled: false, // always enable\n                                          open: false,\n\n                                          webix_kids: true,\n                                       });\n\n                                       ok();\n                                    });\n                              });\n                           });\n                        });\n\n                        // action sequentially\n                        return tasks.reduce((promiseChain, currTask) => {\n                           return promiseChain.then(currTask);\n                        }, Promise.resolve());\n                     })\n\n                     // Final - pass result\n                     .then(() =>\n                        Promise.resolve({\n                           object: objectResult,\n                           treeItems: treeItems,\n                        })\n                     )\n               );\n               */\n      }\n\n      /**\n       * @method aliasName\n       * get new alias name\n       *\n       * @return {string}\n       */\n      aliasName() {\n         return this.AB.uuid()\n            .replace(/[^a-zA-Z0-9]+/g, \"\")\n            .substring(0, 8);\n      }\n\n      /**\n       * @method save\n       * update settings of the current query and save to database\n       *\n       * @return {Promise}\n       */\n      save(selctedFields = null) {\n         let ids = this.ids;\n         let CurrentQuery = this.CurrentQuery;\n         return new Promise((resolve, reject) => {\n            var $tree = $$(ids.tree);\n\n            var objectBase = CurrentQuery.objectBase();\n\n            //\n            // 1) Prepare current joins\n            //\n            let joins = {\n               alias: \"BASE_OBJECT\",\n               objectID: objectBase.id, // the base object of the join\n               links: [],\n            };\n\n            let lookupFields = {};\n\n            let $checkedItem = $tree\n               .getChecked()\n               .map((id) => $tree.getItem(id))\n               .sort((a, b) => a.$level - b.$level);\n\n            ($checkedItem || []).forEach(($treeItem) => {\n               // let field = CurrentQuery.fields(f => f.id == $treeItem.fieldID, true)[0];\n               // if (!field) return;\n\n               // alias name\n               let aliasName = $treeItem.alias;\n               if (!aliasName) {\n                  aliasName = this.aliasName();\n                  $tree.updateItem($treeItem.id, {\n                     alias: aliasName,\n                  });\n               }\n\n               // pull the join type &&\n               let joinType = \"innerjoin\";\n               let $tabObject = $$(ids.tabObjects)\n                  .getMultiview()\n                  .getChildViews()\n                  .filter((v) => v.config.id == aliasName)[0];\n               if ($tabObject) {\n                  let $joinType = $tabObject.queryView({\n                     name: \"joinType\",\n                  });\n                  joinType = $joinType.getValue() || \"innerjoin\";\n               }\n\n               let links = joins.links, // default is links of base\n                  newJoin = {\n                     alias: aliasName,\n                     fieldID: $treeItem.fieldID,\n                     type: joinType,\n                     links: [],\n                  };\n\n               if ($treeItem.$level > 1) {\n                  // pull parent join\n                  let parentId = $tree.getParentId($treeItem.id),\n                     $parentItem = $tree.getItem(parentId);\n\n                  links = lookupFields[$parentItem.alias].links;\n               }\n\n               // add new join into parent links\n               links.push(newJoin);\n\n               // cache join\n               lookupFields[aliasName] = newJoin;\n            });\n\n            CurrentQuery.importJoins(joins);\n\n            //\n            // 2) Prepare current fields\n            //\n            if (selctedFields == null) {\n               selctedFields = $$(ids.datatable)\n                  .config.columns.map((col) => {\n                     // an array of field ids\n\n                     // pull object by alias\n                     let object = CurrentQuery.objectByAlias(col.alias);\n                     if (!object) return;\n\n                     let field = object.fieldByID(col.fieldID);\n                     if (!field) return;\n\n                     // avoid add fields that not exists alias\n                     if (\n                        col.alias != \"BASE_OBJECT\" &&\n                        CurrentQuery.links((l) => l.alias == col.alias).length <\n                           1\n                     )\n                        return;\n\n                     return {\n                        alias: col.alias,\n                        fieldID: col.fieldID,\n                     };\n                  })\n                  .filter((col) => col != null);\n            }\n\n            CurrentQuery.importFields(selctedFields);\n\n            //\n            // 3) Prepare where condition\n            //\n            CurrentQuery.where = this.DataFilter.getValue();\n\n            /** depth **/\n            // CurrentQuery.objectWorkspace.depth = $$(ids.depth).getValue();\n\n            //\n            // 4) Prepare grouping\n            //\n            CurrentQuery.settings = {\n               grouping: $$(ids.grouping).getValue(),\n               hidePrefix: $$(ids.hidePrefix).getValue(),\n            };\n\n            //\n            // Save to db\n            //\n            CurrentQuery.save()\n               .then(() => {\n                  return CurrentQuery.migrateCreate();\n               })\n               .then(() => {\n                  // refresh data\n                  this.refreshDataTable();\n                  this.warningsRefresh(CurrentQuery);\n                  resolve();\n               })\n               .catch((err) => {\n                  this.AB.notify.developer(err, {\n                     context: `${ids.component}:save(): Error saving Query`,\n                     query: CurrentQuery.toObj(),\n                  });\n                  reject(err);\n               });\n         });\n      }\n\n      checkObjectLink(objId, isChecked) {\n         var $tree = $$(this.ids.tree);\n         $tree.blockEvent(); // prevents endless loop\n\n         var rootid = objId;\n         if (isChecked) {\n            // If check we want to check all of the parents as well\n            while ($tree.getParentId(rootid)) {\n               rootid = $tree.getParentId(rootid);\n               if (rootid != objId) $tree.checkItem(rootid);\n            }\n         } else {\n            // If uncheck we want to uncheck all of the child items as well.\n            $tree.data.eachSubItem(rootid, function (item) {\n               if (item.id != objId) $tree.uncheckItem(item.id);\n            });\n         }\n\n         // call save to db\n         this.save().then(() => {\n            // update UI -- add new tab\n            this.populateQueryWorkspace(this.CurrentQuery);\n         });\n\n         $tree.unblockEvent();\n      }\n\n      depthChange(/*newv, oldv*/) {\n         // call save to db\n         this.save().then(() => {\n            this.populateQueryWorkspace(this.CurrentQuery);\n         });\n      }\n\n      setSelectedFields(aliasName) {\n         // *** Field double list ***\n         let $viewDbl = $$(aliasName).queryView({ name: \"fields\" });\n         if ($viewDbl) {\n            let fieldIDs = this.CurrentQuery.fields(\n               (f) => f.alias == aliasName,\n               true\n            ).map((f) => f.id);\n\n            $viewDbl.setValue(fieldIDs);\n         }\n      }\n\n      checkFields() {\n         let ids = this.ids;\n         // pull check fields\n         var fields = [];\n         var $viewMultiview = $$(ids.tabObjects).getMultiview();\n         $viewMultiview.getChildViews().forEach(($viewTab) => {\n            let $viewDbl = $viewTab.queryView({ name: \"fields\" });\n            if ($viewDbl && $viewDbl.getValue()) {\n               // pull an array of field's url\n               let selectedFields = $viewDbl\n                  .getValue()\n                  .split(\",\")\n                  .map((fieldID) => {\n                     return {\n                        alias: $viewTab.config.aliasName,\n                        fieldID: fieldID,\n                     };\n                  });\n               fields = fields.concat(selectedFields);\n            }\n         });\n\n         // keep same order of fields\n         var orderFieldUrls = $$(ids.datatable).config.columns.map(\n            (col) => col.fieldID\n         );\n         fields.sort((a, b) => {\n            var indexA = orderFieldUrls.indexOf(a.fieldID),\n               indexB = orderFieldUrls.indexOf(b.fieldID);\n\n            if (indexA < 0) indexA = 999;\n            if (indexB < 0) indexB = 999;\n\n            return indexA - indexB;\n         });\n\n         // CurrentQuery.importFields(fields);\n\n         // call save to db\n         this.save(fields).then(() => {\n            // refresh filter\n            this.refreshFilter();\n         });\n      }\n\n      /**\n       * @function templateField()\n       *\treturn UI of the object tab\n       * @param {JSON} option - {\n       *           object: ABObject [option],\n       *           field:  ABField [option],\n       *           joinType: 'string',\n       *           isTypeHidden: boolean\n       *        }\n       *\n       * @return {JSON}\n       */\n      templateField(option) {\n         if (option.object == null && option.field == null)\n            throw new Error(\"Invalid params\");\n\n         var object = option.object\n            ? option.object\n            : this.CurrentQuery.objectByID(option.field.settings.linkObject);\n\n         var fields = object\n            .fields((f) => f.fieldSupportQuery(), true)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         let fieldLabel = \"\";\n         if (option.field) {\n            fieldLabel = ` (${option.field.label})`;\n         }\n         var label = `${object.label}${fieldLabel}`;\n\n         let aliasName = option.aliasName;\n\n         return {\n            header: label,\n            body: {\n               id: aliasName,\n               aliasName: aliasName,\n               type: \"space\",\n               css: \"bg-white\",\n               rows: [\n                  {\n                     view: \"select\",\n                     name: \"joinType\",\n                     label: L(\"join records by\"),\n                     labelWidth: 200,\n                     placeholder: L(\"Choose a type of table join\"),\n                     hidden: option.isTypeHidden == true,\n                     value: option.joinType || \"innerjoin\",\n                     options: [\n                        {\n                           id: \"innerjoin\",\n                           value: L(\n                              \"Returns records that have matching values in both tables (INNER JOIN).\"\n                           ),\n                        },\n                        {\n                           id: \"left\",\n                           value: L(\n                              \"Return all records from the left table, and the matched records from the right table (LEFT JOIN).\"\n                           ),\n                        },\n                        {\n                           id: \"right\",\n                           value: L(\n                              \"Return all records from the right table, and the matched records from the left table (RIGHT JOIN).\"\n                           ),\n                        },\n                        {\n                           id: \"fullouterjoin\",\n                           value: L(\n                              \"Return all records when there is a match in either left or right table (FULL JOIN)\"\n                           ),\n                        },\n                     ],\n                     on: {\n                        onChange: () => {\n                           this.save();\n                        },\n                     },\n                  },\n                  {\n                     view: \"dbllist\",\n                     name: \"fields\",\n                     list: {\n                        height: 300,\n                     },\n                     labelLeft: L(\"Available Fields\"),\n                     labelRight: L(\"Included Fields\"),\n                     labelBottomLeft: L(\n                        \"Move these fields to the right to include in data set.\"\n                     ),\n                     labelBottomRight: L(\n                        \"These fields will display in your final data set.\"\n                     ),\n                     data: fields,\n                     on: {\n                        onChange: () => {\n                           this.checkFields();\n                        },\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n         };\n      }\n\n      refreshTree() {\n         let fnCheckItem = (treeStore, object, links, parentId = 0) => {\n            (links || []).forEach((link) => {\n               // NOTE: query v1\n               // if (link.objectURL) {\n               //    object = CurrentApplication.urlResolve(\n               //       link.objectURL\n               //    );\n               //    parentId = undefined;\n               // } else {\n               // parentId = parentId || 0;\n               // }\n\n               if (!object) return;\n\n               let field = object.fieldByID(link.fieldID);\n               if (!field) return;\n\n               let findCond = {\n                  fieldID: field.id,\n               };\n               if (parentId != null) {\n                  findCond.$parent = parentId;\n               }\n\n               let $item = null;\n               (treeStore.find(findCond) || []).forEach((item) => {\n                  if (item.$parent) {\n                     // select item who has parent is checked\n                     let parentItem = treeStore.getItem(item.$parent);\n                     if (parentItem && parentItem.checked) $item = item;\n                  } else {\n                     $item = item;\n                  }\n               });\n\n               // update check status\n               if ($item) {\n                  treeStore.updateItem($item.id, {\n                     alias: link.alias,\n                     checked: true,\n                     open: true,\n                  });\n\n                  let result = this.getChildItems(\n                     field.settings.linkObject,\n                     $item.id\n                  );\n\n                  $$(ids.tree).parse(result.treeItems);\n\n                  fnCheckItem(treeStore, result.object, link.links, $item.id);\n               }\n            });\n         };\n\n         const objBase = this.CurrentQuery.objectBase();\n         let links = this.CurrentQuery.joins().links || [];\n\n         // set connected objects:\n         let ids = this.ids;\n         $$(ids.tree).clearAll();\n\n         // show loading cursor\n         $$(ids.tree).showProgress({ type: \"icon\" });\n\n         if (objBase) {\n            let result = this.getChildItems(objBase.id);\n\n            $$(ids.tree).parse(result.treeItems);\n\n            fnCheckItem($$(ids.tree), objBase, links);\n\n            // show loading cursor\n            $$(ids.tree).hideProgress();\n         }\n      }\n\n      refreshFilter() {\n         // this.DataFilter.applicationLoad(\n         //    CurrentQuery ? CurrentQuery.application : null\n         // );\n         let CurrentQuery = this.CurrentQuery;\n         this.DataFilter.fieldsLoad(\n            CurrentQuery ? CurrentQuery.fields() : [],\n            CurrentQuery\n         );\n         this.DataFilter.setValue(CurrentQuery.where);\n      }\n\n      refreshDataTable() {\n         if (this.mockDatacollection == null) return;\n         let CurrentQuery = this.CurrentQuery;\n         if (!CurrentQuery) return;\n\n         let DataTable = $$(this.ids.datatable);\n         DataTable.clearAll();\n\n         // set columns:\n         var columns = CurrentQuery.columnHeaders(false, false);\n         DataTable.refreshColumns(columns);\n\n         let qCurrentView = CurrentQuery.workspaceViews.getCurrentView();\n\n         this.mockDatacollection.clearAll();\n         this.mockDatacollection.datasource = CurrentQuery;\n\n         // Set filter and sort conditions\n         this.mockDatacollection.fromValues({\n            query: [CurrentQuery.toObj()],\n            settings: {\n               datasourceID: CurrentQuery.id,\n               objectWorkspace: {\n                  //// NOTE: the .where condition is already part of the\n                  //// query definition, so we don't want to pass it again\n                  //// as part of the workspace filter conditions.\n                  // filterConditions: null,  // qCurrentView.filterConditions,\n                  sortFields: qCurrentView.sortFields,\n               },\n            },\n         });\n         this.mockDatacollection.datasource = CurrentQuery;\n\n         // Bind datatable view to data view\n         this.mockDatacollection.unbind(DataTable);\n         this.mockDatacollection.bind(DataTable);\n\n         DataTable.showProgress({ type: \"icon\" });\n\n         // set data:\n         this.mockDatacollection\n            .loadData(0, 50, () => {})\n            .then(() => {\n               this.mockDatacollection.bind(DataTable);\n               // DataTable.hideProgress(); <-- happens on the .bind()\n            });\n      }\n\n      getObject(objectId) {\n         let objectLink = this.CurrentQuery.objectByID(objectId);\n         if (objectLink) return objectLink;\n\n         // Find object from our complete list of Objects\n         objectLink = this.AB.objectByID(objectId);\n         if (objectLink) return objectLink;\n      }\n\n      /**\n       * @function show()\n       *\n       * Show this component.\n       */\n      show() {\n         $$(this.ids.component).show();\n      }\n   }\n   return new UI_Work_Query_Workspace_Design(init_settings);\n}\n","module.exports = class CSVImporter {\n   constructor(AB, fileReader = FileReader) {\n      this._AB = AB;\n      this._FileReader = fileReader;\n   }\n\n   L(...params) {\n      return this._AB.Multilingual.labelPlugin(\"ABDesigner\", ...params);\n   }\n\n   getSeparateItems() {\n      return [\n         { id: \",\", value: this.L(\"Comma (,)\") },\n         {\n            id: \"\\t\",\n            value: this.L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\"),\n         },\n         { id: \";\", value: this.L(\"Semicolon (;)\") },\n         { id: \"s\", value: this.L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    *\n    * @param {*} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    *\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   async getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo))\n         return Promise.reject(this.L(\".fileInfo parameter is invalid\"));\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new this._FileReader();\n         reader.onload = (e) => {\n            const result = this.convertToArray(reader.result, separatedBy);\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method convertToArray\n    * Pull data rows from the CSV file\n    *\n    * @param {string} text\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   convertToArray(text = \"\", separatedBy = \",\") {\n      let result = [];\n\n      // split lines\n      let dataRows = text\n         .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n         .filter((row) => row && row.length > 0);\n\n      // split columns\n      (dataRows || []).forEach((row) => {\n         let dataCols = [];\n         if (separatedBy == \",\") {\n            // NOTE: if the file contains ,, .match(), then can not recognize this empty string\n            row = row.replace(/,,/g, \", ,\");\n\n            // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n            dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n         } else {\n            dataCols = row.split(separatedBy);\n         }\n\n         result.push(dataCols.map((dCol) => this.reformat(dCol)));\n      });\n\n      return result;\n   }\n\n   /**\n    * @method getGuessDataType\n    *\n    * @param dataRows {Array} - [\n    * \t\t\t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t\t\t]\n    * @param colIndex {Number}\n    *\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         repeatNum = 10;\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data === null || data === undefined || data === \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    *\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import definitions from \"./src/definitions.js\";\nimport ApplicationFactory from \"./src/application.js\";\nimport Labels from \"./src/labels/labels.js\";\n\nimport designerCSS from \"./styles/Designer.css\";\n\nif (window.__ABBS) {\n   window.__ABBS.addPlugin({\n      version: \"0.0.0\",\n      key: \"ABDesigner\",\n      apply: function (AB) {\n         // At this point, the Plugin should already have loaded all it's definitions\n         // into the AB Factory\n         AB.pluginLoad(ApplicationFactory(AB));\n\n         // var labels = Labels.en; /* default */;\n         // var lang =AB.Multilingual.currentLanguage();\n\n         // if (Labels[lang]) {\n         //    labels = Labels[lang];\n         // }\n         // AB.pluginLabelLoad(\"ABDesigner\", labels);\n      },\n      definitions: function () {\n         return definitions;\n      },\n      labels: function (lang) {\n         return Labels[lang] || Labels.en;\n      },\n   });\n}\n"],"names":[],"sourceRoot":""}