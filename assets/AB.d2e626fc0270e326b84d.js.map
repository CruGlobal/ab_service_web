{"version":3,"file":"AB.d2e626fc0270e326b84d.js","mappings":"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ACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UAC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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewTimelineCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataSelectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewOrgChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewTimeline.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataSelectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataSelect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewOrgChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewOrgChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 19183,\n\t\"./af.js\": 19183,\n\t\"./ar\": 31035,\n\t\"./ar-dz\": 47214,\n\t\"./ar-dz.js\": 47214,\n\t\"./ar-kw\": 40830,\n\t\"./ar-kw.js\": 40830,\n\t\"./ar-ly\": 68899,\n\t\"./ar-ly.js\": 68899,\n\t\"./ar-ma\": 77258,\n\t\"./ar-ma.js\": 77258,\n\t\"./ar-ps\": 19121,\n\t\"./ar-ps.js\": 19121,\n\t\"./ar-sa\": 64096,\n\t\"./ar-sa.js\": 64096,\n\t\"./ar-tn\": 97826,\n\t\"./ar-tn.js\": 97826,\n\t\"./ar.js\": 31035,\n\t\"./az\": 20051,\n\t\"./az.js\": 20051,\n\t\"./be\": 23813,\n\t\"./be.js\": 23813,\n\t\"./bg\": 64323,\n\t\"./bg.js\": 64323,\n\t\"./bm\": 57837,\n\t\"./bm.js\": 57837,\n\t\"./bn\": 75780,\n\t\"./bn-bd\": 25959,\n\t\"./bn-bd.js\": 25959,\n\t\"./bn.js\": 75780,\n\t\"./bo\": 81451,\n\t\"./bo.js\": 81451,\n\t\"./br\": 76480,\n\t\"./br.js\": 76480,\n\t\"./bs\": 91607,\n\t\"./bs.js\": 91607,\n\t\"./ca\": 23232,\n\t\"./ca.js\": 23232,\n\t\"./cs\": 91034,\n\t\"./cs.js\": 91034,\n\t\"./cv\": 54213,\n\t\"./cv.js\": 54213,\n\t\"./cy\": 95800,\n\t\"./cy.js\": 95800,\n\t\"./da\": 40739,\n\t\"./da.js\": 40739,\n\t\"./de\": 66951,\n\t\"./de-at\": 82181,\n\t\"./de-at.js\": 82181,\n\t\"./de-ch\": 61339,\n\t\"./de-ch.js\": 61339,\n\t\"./de.js\": 66951,\n\t\"./dv\": 16938,\n\t\"./dv.js\": 16938,\n\t\"./el\": 59573,\n\t\"./el.js\": 59573,\n\t\"./en-au\": 62458,\n\t\"./en-au.js\": 62458,\n\t\"./en-ca\": 51816,\n\t\"./en-ca.js\": 51816,\n\t\"./en-gb\": 8069,\n\t\"./en-gb.js\": 8069,\n\t\"./en-ie\": 15586,\n\t\"./en-ie.js\": 15586,\n\t\"./en-il\": 60009,\n\t\"./en-il.js\": 60009,\n\t\"./en-in\": 51207,\n\t\"./en-in.js\": 51207,\n\t\"./en-nz\": 83724,\n\t\"./en-nz.js\": 83724,\n\t\"./en-sg\": 1953,\n\t\"./en-sg.js\": 1953,\n\t\"./eo\": 1292,\n\t\"./eo.js\": 1292,\n\t\"./es\": 66328,\n\t\"./es-do\": 61452,\n\t\"./es-do.js\": 61452,\n\t\"./es-mx\": 94444,\n\t\"./es-mx.js\": 94444,\n\t\"./es-us\": 81285,\n\t\"./es-us.js\": 81285,\n\t\"./es.js\": 66328,\n\t\"./et\": 7181,\n\t\"./et.js\": 7181,\n\t\"./eu\": 62830,\n\t\"./eu.js\": 62830,\n\t\"./fa\": 19565,\n\t\"./fa.js\": 19565,\n\t\"./fi\": 85541,\n\t\"./fi.js\": 85541,\n\t\"./fil\": 65661,\n\t\"./fil.js\": 65661,\n\t\"./fo\": 26087,\n\t\"./fo.js\": 26087,\n\t\"./fr\": 25396,\n\t\"./fr-ca\": 96581,\n\t\"./fr-ca.js\": 96581,\n\t\"./fr-ch\": 81294,\n\t\"./fr-ch.js\": 81294,\n\t\"./fr.js\": 25396,\n\t\"./fy\": 12533,\n\t\"./fy.js\": 12533,\n\t\"./ga\": 55796,\n\t\"./ga.js\": 55796,\n\t\"./gd\": 50847,\n\t\"./gd.js\": 50847,\n\t\"./gl\": 60439,\n\t\"./gl.js\": 60439,\n\t\"./gom-deva\": 46514,\n\t\"./gom-deva.js\": 46514,\n\t\"./gom-latn\": 66525,\n\t\"./gom-latn.js\": 66525,\n\t\"./gu\": 34232,\n\t\"./gu.js\": 34232,\n\t\"./he\": 50915,\n\t\"./he.js\": 50915,\n\t\"./hi\": 22095,\n\t\"./hi.js\": 22095,\n\t\"./hr\": 10762,\n\t\"./hr.js\": 10762,\n\t\"./hu\": 88275,\n\t\"./hu.js\": 88275,\n\t\"./hy-am\": 73094,\n\t\"./hy-am.js\": 73094,\n\t\"./id\": 27769,\n\t\"./id.js\": 27769,\n\t\"./is\": 99676,\n\t\"./is.js\": 99676,\n\t\"./it\": 74313,\n\t\"./it-ch\": 25141,\n\t\"./it-ch.js\": 25141,\n\t\"./it.js\": 74313,\n\t\"./ja\": 11985,\n\t\"./ja.js\": 11985,\n\t\"./jv\": 53908,\n\t\"./jv.js\": 53908,\n\t\"./ka\": 32808,\n\t\"./ka.js\": 32808,\n\t\"./kk\": 33930,\n\t\"./kk.js\": 33930,\n\t\"./km\": 71532,\n\t\"./km.js\": 71532,\n\t\"./kn\": 69461,\n\t\"./kn.js\": 69461,\n\t\"./ko\": 60502,\n\t\"./ko.js\": 60502,\n\t\"./ku\": 18660,\n\t\"./ku-kmr\": 58035,\n\t\"./ku-kmr.js\": 58035,\n\t\"./ku.js\": 18660,\n\t\"./ky\": 83088,\n\t\"./ky.js\": 83088,\n\t\"./lb\": 65742,\n\t\"./lb.js\": 65742,\n\t\"./lo\": 25417,\n\t\"./lo.js\": 25417,\n\t\"./lt\": 64968,\n\t\"./lt.js\": 64968,\n\t\"./lv\": 41202,\n\t\"./lv.js\": 41202,\n\t\"./me\": 34438,\n\t\"./me.js\": 34438,\n\t\"./mi\": 18498,\n\t\"./mi.js\": 18498,\n\t\"./mk\": 6744,\n\t\"./mk.js\": 6744,\n\t\"./ml\": 63949,\n\t\"./ml.js\": 63949,\n\t\"./mn\": 4459,\n\t\"./mn.js\": 4459,\n\t\"./mr\": 46679,\n\t\"./mr.js\": 46679,\n\t\"./ms\": 56960,\n\t\"./ms-my\": 47483,\n\t\"./ms-my.js\": 47483,\n\t\"./ms.js\": 56960,\n\t\"./mt\": 99989,\n\t\"./mt.js\": 99989,\n\t\"./my\": 64978,\n\t\"./my.js\": 64978,\n\t\"./nb\": 88460,\n\t\"./nb.js\": 88460,\n\t\"./ne\": 23993,\n\t\"./ne.js\": 23993,\n\t\"./nl\": 95378,\n\t\"./nl-be\": 62678,\n\t\"./nl-be.js\": 62678,\n\t\"./nl.js\": 95378,\n\t\"./nn\": 67560,\n\t\"./nn.js\": 67560,\n\t\"./oc-lnc\": 87060,\n\t\"./oc-lnc.js\": 87060,\n\t\"./pa-in\": 62187,\n\t\"./pa-in.js\": 62187,\n\t\"./pl\": 93532,\n\t\"./pl.js\": 93532,\n\t\"./pt\": 49396,\n\t\"./pt-br\": 92485,\n\t\"./pt-br.js\": 92485,\n\t\"./pt.js\": 49396,\n\t\"./ro\": 33179,\n\t\"./ro.js\": 33179,\n\t\"./ru\": 93797,\n\t\"./ru.js\": 93797,\n\t\"./sd\": 40675,\n\t\"./sd.js\": 40675,\n\t\"./se\": 59036,\n\t\"./se.js\": 59036,\n\t\"./si\": 59160,\n\t\"./si.js\": 59160,\n\t\"./sk\": 31266,\n\t\"./sk.js\": 31266,\n\t\"./sl\": 74699,\n\t\"./sl.js\": 74699,\n\t\"./sq\": 69728,\n\t\"./sq.js\": 69728,\n\t\"./sr\": 87129,\n\t\"./sr-cyrl\": 55000,\n\t\"./sr-cyrl.js\": 55000,\n\t\"./sr.js\": 87129,\n\t\"./ss\": 74346,\n\t\"./ss.js\": 74346,\n\t\"./sv\": 9877,\n\t\"./sv.js\": 9877,\n\t\"./sw\": 918,\n\t\"./sw.js\": 918,\n\t\"./ta\": 24787,\n\t\"./ta.js\": 24787,\n\t\"./te\": 6199,\n\t\"./te.js\": 6199,\n\t\"./tet\": 91851,\n\t\"./tet.js\": 91851,\n\t\"./tg\": 33881,\n\t\"./tg.js\": 33881,\n\t\"./th\": 87828,\n\t\"./th.js\": 87828,\n\t\"./tk\": 99677,\n\t\"./tk.js\": 99677,\n\t\"./tl-ph\": 29253,\n\t\"./tl-ph.js\": 29253,\n\t\"./tlh\": 95586,\n\t\"./tlh.js\": 95586,\n\t\"./tr\": 17254,\n\t\"./tr.js\": 17254,\n\t\"./tzl\": 61192,\n\t\"./tzl.js\": 61192,\n\t\"./tzm\": 69631,\n\t\"./tzm-latn\": 72841,\n\t\"./tzm-latn.js\": 72841,\n\t\"./tzm.js\": 69631,\n\t\"./ug-cn\": 71720,\n\t\"./ug-cn.js\": 71720,\n\t\"./uk\": 28048,\n\t\"./uk.js\": 28048,\n\t\"./ur\": 86751,\n\t\"./ur.js\": 86751,\n\t\"./uz\": 96343,\n\t\"./uz-latn\": 60513,\n\t\"./uz-latn.js\": 60513,\n\t\"./uz.js\": 96343,\n\t\"./vi\": 44821,\n\t\"./vi.js\": 44821,\n\t\"./x-pseudo\": 23973,\n\t\"./x-pseudo.js\": 23973,\n\t\"./yo\": 15000,\n\t\"./yo.js\": 15000,\n\t\"./zh-cn\": 43762,\n\t\"./zh-cn.js\": 43762,\n\t\"./zh-hk\": 9246,\n\t\"./zh-hk.js\": 9246,\n\t\"./zh-mo\": 41107,\n\t\"./zh-mo.js\": 41107,\n\t\"./zh-tw\": 79014,\n\t\"./zh-tw.js\": 79014\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n\n      this.isLabelUpdateEnabled = false;\n      // {bool}\n      // we can only update labels on the server if this is enabled.\n      // Only on a Developers environment should we enable this:\n      // javascript console: > window.AB.Multilingual.enableLabelUpdates();\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   enableLabelUpdates() {\n      this.isLabelUpdateEnabled = true;\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (!this.isLabelUpdateEnabled) return;\n\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {\n                        /* ignore */\n                     }\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nfunction socketDataSave(key, length) {\n   if (!HashSocketJobs[key]) {\n      HashSocketJobs[key] = {\n         packets: 0,\n         length: 0,\n      };\n   }\n\n   HashSocketJobs[key].packets++;\n   HashSocketJobs[key].length += length;\n}\nfunction socketDataLog(AB, key, data) {\n   let length = \"??\";\n   try {\n      length = JSON.stringify(data).length;\n      data.__length = length;\n   } catch (e) {\n      console.log(e);\n      //\n   }\n\n   if (data.objectId) {\n      let obj = AB.objectByID(data.objectId);\n      if (!obj) {\n         console.warn(`socket: ${key} unkown object (${length})`, data);\n      } else {\n         console.warn(\n            `socket: ${key} ${obj.label ?? obj.name}(${length})`,\n            data\n         );\n      }\n   } else {\n      console.warn(`socket: ${key} (${length})`, data);\n   }\n\n   if (data.jobID) {\n      socketDataSave(data.jobID, length);\n      socketDataSave(`${data.jobID}-${key}`, length);\n   }\n}\n\nlet HashSocketJobs = {\n   /* jobID : { #packets, length } */\n};\n\nlet keyBlacklist = {\n   /* key : true */\n};\n// a list of incoming message keys, that indicate wether or not we have\n// processed this message.  If a message has been processed, we skip it.\n\n/**\n * @function blacklistKey()\n * create a unique key for this network event.\n * @param {event} ev\n *        the incoming network event key (ab.datacollection.create)\n * @param {obj} data\n *        the related network packet of the incoming event.\n * @return {string}\n */\nfunction blacklistKey(AB, ev, data) {\n   let parts = [ev];\n\n   if (data.jobID) {\n      parts.push(data.jobID);\n   }\n\n   if (data.data) {\n      let PK = \"uuid\";\n      let obj = AB.objectByID(data.objectId);\n      if (obj) {\n         PK = obj.PK();\n      }\n      parts.push(data.data[PK] || data.data.id);\n   }\n\n   if (data.__length) {\n      parts.push(data.__length);\n   } else {\n      let length = \"??\";\n      try {\n         length = JSON.stringify(data).length;\n      } catch (e) {\n         // ignore\n      }\n      parts.push(length);\n   }\n\n   return parts.join(\"-\");\n}\n\n/**\n * @function isBlacklisted()\n * return True/False if a given key is already blacklisted.\n * @param {string} key\n *        the () we are checking\n * @return {bool}\n */\nfunction isBlacklisted(key) {\n   return keyBlacklist[key] ?? false;\n}\n\n/**\n * @function blacklist()\n * mark a given key as blacklisted. This prevents additional calls with\n * the same key from being processed.\n * A Key is only blacklisted for a given amount of time (1s by default).\n * @param {string} key\n *        the blacklistKey() we are checking\n * @param {int} time\n *        The duration in ms of how long to keep the key blacklisted.\n */\nfunction blacklist(key, time = 1000) {\n   keyBlacklist[key] = true;\n   setTimeout(() => {\n      delete keyBlacklist[key];\n   }, time);\n}\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            socketDataLog(this.AB, ev, data);\n\n            // ensure we only process a network update 1x\n            let blKey = blacklistKey(this.AB, ev, data);\n            if (isBlacklisted(blKey)) return;\n            blacklist(blKey, 5000); // now prevent additional ones\n\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   socketLog() {\n      console.warn(JSON.stringify(HashSocketJobs, null, 4));\n   }\n\n   socketLogClear() {\n      HashSocketJobs = {};\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\n/* global Connection */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n\n      this.cachJobResponse = {};\n      // { jobID : { jobResponse } }\n      // hash of the queued jobResponses for network requests that are in\n      // our queue.\n      // We need to keep our own cache that isn't serialized so that once\n      // we complete the request, we can resume the resolve() promise chains\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               let jID = this.AB.jobID();\n               this.cachJobResponse[jID] = jobResponse;\n               queue.push({ data, jobResponse: jID });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               let hasResponded = false;\n               let resCount = 0;\n               let resNumber = queue.length;\n\n               let done = (res, rej, err) => {\n                  if (!hasResponded) {\n                     if (err) {\n                        rej(err);\n                        hasResponded = true;\n                        return;\n                     }\n                     resCount++;\n                     if (resCount >= resNumber) {\n                        hasResponded = true;\n                        res();\n                     }\n                  }\n               };\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     let job = this.cachJobResponse[entry.jobResponse];\n                     // var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           delete this.cachJobResponse[entry.jobResponse];\n                           // processRequest(cb);\n                           cb();\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           // processRequest(cb);\n                        });\n                     processRequest(cb);\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     done(res, rej, err);\n                     // if (err) {\n                     //    rej(err);\n                     // } else {\n                     //    res();\n                     // }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this.cachJobResponse = {};\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\nimport SortPopup from \"./platform/views/ABViewGridPopupSortFields\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\nimport ABViewComponent from \"./platform/views/viewComponent/ABViewComponent.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n      this.Class.SortPopup = SortPopup;\n      this.Class.ABViewComponent = ABViewComponent;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.performance = performance;\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n\n         /**\n          * Get today's UTC time range in \"YYYY-MM-DD HH:MM:SS\" format.\n          *\n          * It converts the start and end of today to UTC to keep things consistent\n          * across time zones. Handy when you need to deal with dates in different regions.\n          *\n          * @returns {string} UTC time range for today.\n          */\n\n         getUTCDayTimeRange: () => {\n            let now = new Date();\n            let year = now.getFullYear();\n            let month = now.getMonth();\n            let date = now.getDate();\n            let startOfDay = new Date(year, month, date, 0, 0, 0);\n            let endOfDay = new Date(year, month, date, 23, 59, 59);\n\n            // Convert to UTC by subtracting the timezone offset\n            let startOfDayUTC = new Date(\n               startOfDay.getTime() + startOfDay.getTimezoneOffset() * 60000\n            );\n            let endOfDayUTC = new Date(\n               endOfDay.getTime() + endOfDay.getTimezoneOffset() * 60000\n            );\n\n            //  Format the date in \"YYYY-MM-DD HH:MM:SS\" format\n            let formatDate = (date) => {\n               let isoString = date.toISOString();\n               return `${isoString.slice(0, 10)} ${isoString.slice(11, 19)}`;\n            };\n            return formatDate(startOfDayUTC).concat(\n               \"|\",\n               formatDate(endOfDayUTC)\n            );\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   isNil(value) {\n      return _.isNil(value);\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n\n   async scriptLoad(url) {\n      await new Promise((resolve, reject) => {\n         var cb = () => resolve();\n         // Adding the script tag to the head as suggested before\n         const head = document.head;\n         const script = document.createElement(\"script\");\n         script.type = \"text/javascript\";\n         script.src = url;\n\n         // Then bind the event to the callback function.\n         // There are several events for cross browser compatibility.\n         script.onreadystatechange = cb;\n         script.onload = cb;\n         script.onerror = () => {\n            reject(\n               new Error(\n                  `Preloader:ScriptLoad(): Error loading script (${url})`\n               )\n            );\n         };\n         // Fire the loading\n         head.appendChild(script);\n      });\n   }\n\n   async scriptLoadAll(urls) {\n      urls = urls.filter((u) => u);\n      await Promise.all(urls.map((url) => this.scriptLoad(url)));\n   }\n\n   async cssLoad(url) {\n      await new Promise((resolve, reject) => {\n         const head = document.head;\n         const link = document.createElement(\"link\");\n         link.rel = \"stylesheet\";\n         link.href = url;\n\n         link.onload = () => resolve();\n         link.onerror = () => {\n            reject(new Error(`Error loading CSS file (${url})`));\n         };\n\n         head.appendChild(link);\n      });\n   }\n\n   async cssLoadAll(urls) {\n      urls = urls.filter((u) => u);\n      await Promise.all(urls.map((url) => this.cssLoad(url)));\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n\n      this.__model = null;\n      // {ABModel}\n      // An instance of the ABModel used for this DataCollection to\n      // access data on the server.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDatacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // this.fieldLink is intended to be the way to connect to the column in\n      // the datacollectionLink that we are following.  However this field\n      // is the field in this.datasource that connects to the field in\n      // datacollectionLink that has the value we are linked to.\n      // So, If this DC(ObjB), and our datacollectionLink (ObjA)\n      // then this.fieldLink = ObjB->FieldB\n      // To find the corresponding field in ObjA, we do:\n      // this.fieldLink.fieldLink  (ObjA->FieldA)\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      if (!this.__model) {\n         let object = this.datasource; // already notified\n\n         this.__model = object ? object.model() : null;\n      }\n      return this.__model;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    *\n    *    In cases where a DC has set .loadAll, our job is to filter existing data\n    *    that is already loaded in the internal __dataCollection.\n    *\n    *    Otherwise this is not the place to trigger a data refresh.  We depend\n    *    on other mechanisms (.reloadData(), datacollection .select()) to trigger\n    *    an update.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               if (this.__dataCollection.data.count() == 0) {\n                  this.emit(\"collectionEmpty\", {});\n               }\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow?.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // NOTE: UPDATing this process to add another check.\n         // .isCursorFollow only invalidates the 1st half of the routine.\n         // .isCursorFollow STILL needs to follow the 2nd half of the routine\n         // // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         // if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         // Don't do First Step if .isCursorFollow\n         if (!this.isCursorFollow) {\n            // First Step\n            // Does this new entry need to be part of the data we are currently\n            // tracking?  If so, add it.\n            Promise.resolve()\n               .then(() => {\n                  return new Promise((next, bad) => {\n                     // Query\n                     if (obj instanceof this.AB.Class.ABObjectQuery) {\n                        let objList =\n                           obj.objects((o) => o.id == data.objectId) || [];\n\n                        needAdd = objList.length > 0;\n\n                        if (!needAdd) return next();\n\n                        let where = {\n                           glue: \"or\",\n                           rules: [],\n                        };\n\n                        objList.forEach((o) => {\n                           let newDataId = data.data[`${o.PK()}`];\n                           if (!newDataId) return;\n\n                           where.rules.push({\n                              key: `${\n                                 o.alias || obj.objectAlias(o.id)\n                              }.${o.PK()}`,\n                              rule: \"equals\",\n                              value: newDataId,\n                           });\n                        });\n\n                        obj.model()\n                           .findAll({\n                              where: where,\n                           })\n                           .then((newQueryData) => {\n                              updatedVals = newQueryData.data || [];\n                              updatedVals.forEach((v) => {\n                                 delete v.id;\n                              });\n\n                              next();\n                           })\n                           .catch(bad);\n                     }\n                     // Object\n                     else {\n                        needAdd = obj.id == data.objectId;\n                        updatedVals = [data.data];\n                        next();\n                     }\n                  });\n               })\n               .then(() => {\n                  if (needAdd) {\n                     (updatedVals || []).forEach((updatedV) => {\n                        // If this DC uses a query, it pulls refreshed data from the server in the previous step,\n                        // so there is no need to recheck the query's filter.\n                        const skipDatasourceFilter =\n                           obj instanceof this.AB.Class.ABObjectQuery;\n\n                        // filter condition before add\n                        if (!this.isValidData(updatedV, skipDatasourceFilter))\n                           return;\n\n                        // filter the cursor of parent DC\n                        const dcLink = this.datacollectionLink;\n                        if (dcLink && !this.isParentFilterValid(updatedV))\n                           return;\n\n                        // check to see if item already exisits in data collection\n                        // and check to see that we are not loading the data serverside from cursor\n                        if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           !this.__reloadWheres\n                        ) {\n                           this.__dataCollection.add(updatedV, 0);\n                           this.emit(\"create\", updatedV);\n                           // this.__dataCollection.setCursor(rowData.id);\n                        } else if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           this.__reloadWheres\n                        ) {\n                           // debugger;\n                           if (this.isParentFilterValid(updatedV)) {\n                              // we track bound components and flexlayout components\n                              var attachedComponents =\n                                 this.__bindComponentIds.concat(\n                                    this.__flexComponentIds\n                                 );\n                              attachedComponents.forEach((bcids) => {\n                                 // if the reload button already exisits move on\n                                 if ($$(bcids + \"_reloadView\")) {\n                                    return false;\n                                 }\n\n                                 // find the position of the data view\n                                 var pos = 0;\n                                 var parent = $$(bcids).getParentView();\n                                 if ($$(bcids).getParentView().index) {\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .index($$(bcids));\n                                 } else if (\n                                    $$(bcids).getParentView().getParentView()\n                                       .index\n                                 ) {\n                                    // this is a data view and it is inside a\n                                    // scroll view that is inside an accodion\n                                    // so we need to go deeper to add the button\n                                    parent = $$(bcids)\n                                       .getParentView()\n                                       .getParentView();\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .getParentView()\n                                       .index($$(bcids).getParentView());\n                                 }\n\n                                 // store the datacollection so we can pass it to the button later\n                                 var DC = this;\n                                 // add a button that reloads the view when clicked\n                                 if (parent.addView) {\n                                    var L = this.AB.Label();\n                                    parent.addView(\n                                       {\n                                          id: bcids + \"_reloadView\",\n                                          view: \"button\",\n                                          value: L(\n                                             \"New data available. Click to reload.\"\n                                          ),\n                                          css: \"webix_primary webix_warn\",\n                                          click: function (id, event) {\n                                             DC.reloadData();\n                                             $$(id)\n                                                .getParentView()\n                                                .removeView(id);\n                                          },\n                                       },\n                                       pos\n                                    );\n                                 }\n                              });\n                              // this.emit(\"create\", updatedV);\n                           }\n                        }\n                     });\n\n                     if (\n                        this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                     ) {\n                        this.parseTreeCollection({\n                           data: updatedVals,\n                        });\n                     }\n                  }\n\n                  // ABObject only\n                  if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                     // if it is a linked object\n                     let connectedFields = this.datasource.connectFields(\n                        (f) =>\n                           f.datasourceLink &&\n                           f.datasourceLink.id == data.objectId\n                     );\n\n                     // It should always be only one item for ABObject\n                     updatedVals = updatedVals[0];\n\n                     // update relation data\n                     if (\n                        updatedVals &&\n                        connectedFields &&\n                        connectedFields.length > 0\n                     ) {\n                        // various PK name\n                        let PK = connectedFields[0].object.PK();\n                        if (!updatedVals.id && PK != \"id\")\n                           updatedVals.id = updatedVals[PK];\n\n                        this.__dataCollection.find({}).forEach((d) => {\n                           let updateItemData = {};\n\n                           connectedFields.forEach((f) => {\n                              var updateRelateVal = {};\n                              if (f && f.fieldLink) {\n                                 updateRelateVal =\n                                    updatedVals[f.fieldLink.relationName()] ||\n                                    {};\n                              }\n\n                              let rowRelateVal = d[f.relationName()] || {};\n\n                              let valIsRelated = isRelated(\n                                 updateRelateVal,\n                                 d.id,\n                                 PK\n                              );\n\n                              // Relate data\n                              if (\n                                 Array.isArray(rowRelateVal) &&\n                                 rowRelateVal.filter(\n                                    (v) =>\n                                       v == updatedVals.id ||\n                                       v.id == updatedVals.id ||\n                                       v[PK] == updatedVals.id\n                                 ).length < 1 &&\n                                 valIsRelated\n                              ) {\n                                 rowRelateVal.push(updatedVals);\n\n                                 updateItemData[f.relationName()] =\n                                    rowRelateVal;\n                                 updateItemData[f.columnName] = updateItemData[\n                                    f.relationName()\n                                 ].map((v) => v.id || v[PK] || v);\n                              } else if (\n                                 !Array.isArray(rowRelateVal) &&\n                                 (rowRelateVal != updatedVals.id ||\n                                    rowRelateVal.id != updatedVals.id ||\n                                    rowRelateVal[PK] != updatedVals.id) &&\n                                 valIsRelated\n                              ) {\n                                 updateItemData[f.relationName()] = updatedVals;\n                                 updateItemData[f.columnName] =\n                                    updatedVals.id || updatedVals;\n                              }\n                           });\n\n                           // If this item needs to update\n                           if (Object.keys(updateItemData).length > 0) {\n                              this.__dataCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                              if (this.__treeCollection)\n                                 this.__treeCollection.updateItem(\n                                    d.id,\n                                    updateItemData\n                                 );\n\n                              this.emit(\n                                 \"update\",\n                                 this.__dataCollection.getItem(d.id)\n                              );\n                           }\n                        });\n                     }\n                  }\n\n                  this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n                  // filter link data collection's cursor\n                  this.refreshLinkCursor();\n                  this.setStaticCursor();\n               });\n         }\n\n         // SECOND Step:\n         // Try to detect if this newly created entry connects to one of the\n         // values this DC is currently managing.  If so, than add this value\n         // to the connection.\n\n         let incomingObj = this.AB.objectByID(data.objectId);\n         if (!incomingObj) return;\n\n         // find any of incomingObj connections that are tied to my object:\n         let connectedFields = incomingObj\n            .connectFields((f) => f.datasourceLink?.id == obj.id)\n            .filter((f) => f); // <-- safety check, no undefined or nulls\n         if (connectedFields.length == 0) return;\n\n         let iPK = incomingObj.PK();\n         let PK = obj.PK();\n         let newData = this.AB.cloneDeep(data.data);\n\n         let currCursor = this.getCursor();\n         let needsRefresh = false;\n\n         connectedFields.forEach((f) => {\n            // pull the values in this connected fields\n            let values = data.data[f.columnName]; // just need the PK\n\n            if (!Array.isArray(values))\n               values = [values].filter((v) => !this.AB.isNil(v));\n\n            values.forEach((v) => {\n               v = v[PK] || v; // just in case this was an {} and not the {uuid}\n\n               // if this is one of the items we are managing\n               if (this.__dataCollection.exists(v)) {\n                  let localField = f.fieldLink;\n                  if (localField) {\n                     let row = this.__dataCollection.getItem(v);\n                     let colName = localField.columnName;\n                     let relName = localField.relationName();\n\n                     if (localField.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        // if it isn't already in the array, add it\n                        let rval = localField.getRelationValue(newData);\n                        if (row[colName].indexOf(rval) == -1) {\n                           row[colName].push(rval);\n                        }\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        if (\n                           row[relName].filter((r) => r[iPK] == newData[iPK])\n                              .length == 0\n                        ) {\n                           row[relName].push(newData);\n                        }\n                     } else {\n                        row[colName] = localField.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(v, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(v, row);\n\n                     this.emit(\"update\", this.__dataCollection.getItem(v));\n\n                     // if we just updated our Current Cursor, we need to\n                     // let our connected DC's know to refresh.\n                     if (currCursor?.id == v) {\n                        needsRefresh = true;\n                     }\n                  }\n               }\n            });\n         });\n\n         if (needsRefresh) {\n            this.emit(\"cursorStale\", null);\n         }\n      });\n\n      this.on(\"ab.datacollection.connection-added\", (data) => {\n         // This event notifies us of a specific relation being created between\n         // two records. In this case the source object that was originally\n         // operated on, is sent along in data.data.\n         //\n         // eg: if this was a `create` operation, the newly created value is\n         //     included in data.data.\n         // eg: if this was an `update` operation, the row that was modified\n         //     is included.\n         //\n         // {json} data\n         // incoming socket payload:\n         // data.objectID {string}\n         //      the ABObject this connection is being added to\n         // data.fieldID  {string}\n         //      which connect Field in this ABObject the value is added to\n         // data.rowID    {string}\n         //      which specific row/entry this is being added to\n         // data.data     {json}\n         //      The value being added.\n         //\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data.rowID) return;\n\n         // ABObject only\n         if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n            // if this is the object we are managing\n            if (obj.id === data.objectID) {\n               let field = obj.fieldByID(data.fieldID);\n               if (field) {\n                  // figure out if we actually have the value that was changed:\n                  let isExists = this.__dataCollection.exists(data.rowID);\n                  if (isExists) {\n                     let newData = this.AB.cloneDeep(data.data);\n                     let row = this.__dataCollection.getItem(data.rowID);\n\n                     let colName = field.columnName;\n                     let relName = field.relationName();\n\n                     if (field.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           // in case row[col]:{obj} this will make sure it\n                           // is included as an [ {obj} ], but will also prevent\n                           // [ undefined ] if row[col] isn't set:\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[colName].push(f.getRelationValue(newData));\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[relName].push(newData);\n                     } else {\n                        row[colName] = f.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(data.rowID, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(data.rowID, row);\n\n                     this.emit(\n                        \"update\",\n                        this.__dataCollection.getItem(data.rowID)\n                     );\n                  }\n               }\n            }\n         } else if (obj instanceof this.AB.Class.ABObjectQuery) {\n            // ABQuery\n\n            // NOTE: that in this case, if this change is about one of the\n            // objects we track, we will most likely have to reload the data\n            // to make sure we are displaying proper data.\n\n            // This will follow the same logic as in \"ab.datacollection.create\"\n            // so instead of repeating that here, let's call our \"create\"\n            // handler instead:\n\n            ///// LEFT OFF HERE:\n            // need to pull out the data in data.data that represents the\n            // connection to data.objectId\n\n            //// WAIT!!!!!!\n            //// Instead, of this \"connection-added\", lets add the logic in\n            //// a \"created\" handler to detect if we should add the new entry\n            //// into A value we currently track.\n            //// ===> This way we only have to send out \"Created\" messages\n            ////\n\n            let newPacket = {\n               objectId: data.objectId,\n               data: this.AB.cloneDeep(data.data),\n            };\n            this.emit(\"ab.datacollection.create\", newPacket);\n         }\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // #Johnny: removing this check.  A DC that is following another cursor\n         // still has a value that might need updating.\n         // DC who is following cursor should update only current cursor.\n         // if (\n         //    this.isCursorFollow &&\n         //    this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         // ) {\n         //    return;\n         // }\n\n         let needUpdate = false;\n         let skipDatasourceFilter = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         //\n         // Case 1: This DC contains the value that was updated\n         // In this case, we want to replace our current entry with\n         // the new one passed in.\n         // EX: This is a DC of Users, and the incoming Entry is a User\n         // that we are already displaying.\n         //\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               // NOTE: Data needs to be updated in the query even if it doesn't match the filter conditions.\n               skipDatasourceFilter =\n                  obj instanceof this.AB.Class.ABObjectQuery;\n\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals, skipDatasourceFilter)) {\n                  // only spread around cloned copies because some objects (I'm\n                  // looking at you ABFieldUser) will modify some data for local\n                  // usage.\n                  updatedVals = this.AB.cloneDeep(updatedVals);\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData?.id == updatedVals.id) {\n                     this.emit(\"cursorStale\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  let currData = this.getCursor();\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n\n                     if (currData?.id == id) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // OK we have a value, that COULD be in our DC\n               // before we add it, let's make sure we are not limited in our selection of items:\n               if (!this.isCursorFollow && !this.settings.fixSelect) {\n                  // this means the updated record was not loaded yet so we are adding it to the top of the grid\n                  // the placement will probably change on the next load of the data\n                  this.__dataCollection.add(updatedVals, 0);\n\n                  if (this.__treeCollection)\n                     this.parseTreeCollection({\n                        data: [updatedVals],\n                     });\n\n                  this.emit(\"create\", updatedVals);\n               }\n            }\n         }\n\n         //\n         // Case 2: This DC has entries that CONNECT to the updated value.\n         // We need to make sure our connections, properly reflect the\n         // current state of the incoming data.\n         //\n         // EG: This DC is a list of Roles that connect to User, and an updated\n         // User is passed in.\n\n         let currCursor = this.getCursor();\n         let updateCursor = null;\n\n         // if it is a linked object\n         // look for connected fields that link to the incoming objectId\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            // webix datacollections require an .id value, so make sure\n            // this incoming value has an .id set\n            let PK = obj.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     // check to see if we are supposed to be related to this\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // If NO, then make sure we Unrelate data\n                     // if this is an array -> filter out the entry\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           // NOTE: Special case: the incoming value.id will be .uuid\n                           // however in case of User Fields, v.id == username and not .uuid\n                           // so we put our default check to be v[PK] here to play nice\n                           (v) => (v[PK] || v.id || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        // this is not an array so set link to null\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // However, if we are supposed to be related => make sure we are\n                     // If this is an array, then add to list\n                     // AND YES: make sure it is cloned\n                     if (valIsRelated) {\n                        values = this.AB.cloneDeep(values);\n                     }\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           // just update the one entry in my array with the new\n                           // value\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map(\n                           (v) => f.getRelationValue(v) /*v.id || v[PK] || v*/\n                        );\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        // make ConnectedField use .getRelationValue() here!\n                        updateItemData[f.columnName] =\n                           f.getRelationValue(values);\n                     }\n                  });\n\n                  // If this item needs to update\n                  // meaning there is > 1 key in the object (we always have .id)\n                  if (Object.keys(updateItemData).length > 1) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                        if (currCursor?.id == dcItem.id) {\n                           updateCursor = dcItem;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n\n         //\n         // Case 3: Our DC is linked to a DC that was effected by this update.\n         //\n         // We will approach it from another direction, if the current DC made\n         // an update to it's current Cursor, then we will emit a \"cursorStale\"\n         // event, so our linked DCs will update themselves with the new value:\n         if (updateCursor) {\n            this.emit(\"cursorStale\", null);\n         }\n         // this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor();\n\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values?.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData?.[PK] == values[PK]) {\n                        this.emit(\"cursorStale\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData?.[obj.PK()] == delId)\n                  this.emit(\"cursorStale\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"cursorStale\",\n            listener: (currentCursor) => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               // if don't have .loadAll set,  we'll need to update our data:\n               if (!this.settings?.loadAll) {\n                  // What I do here depends on what my linked DC has set for\n                  // it's .loadConnections (shouldPopulate) value\n                  let dvLink = this.datacollectionLink;\n                  let isMyDataThere = dvLink.shouldPopulate;\n                  if (Array.isArray(isMyDataThere)) {\n                     // if this was an array: it should be an array of columnNames\n                     // of the dvLink that are being populated.\n\n                     // the column I'm interested in:\n                     let colName = this.fieldLink.fieldLink.columnName;\n\n                     // is it there?\n                     isMyDataThere = isMyDataThere.indexOf(colName) > -1;\n                  }\n                  if (!isMyDataThere) {\n                     // If it didn't populate it's data, then I can't be\n                     // efficient about how to update my data.\n                     // we'll just have to reload:\n\n                     // find out how many entries we have already loaded and try to\n                     // load at least that many again.:\n                     let count = 20;\n                     if (this.__dataCollection.count() > count)\n                        count = this.__dataCollection.count();\n                     if (this.__treeCollection?.count() > count)\n                        count = this.__treeCollection.count();\n\n                     let currCursor = this.__dataCollection.getCursor();\n                     this.clearAll();\n                     this.reloadData(0, count).then(() => {\n                        this.__dataCollection.setCursor(currCursor);\n                        this.emit(\"cursorSelect\", currCursor);\n                     });\n                  } else {\n                     // if the linked DC does have my data populated:\n\n                     // the values I currently contain can fall into 1 of 3 categories:\n                     // 1) A value I currently have that I need to Keep\n                     // 2) A value I currently have that I need to remove\n                     // 3) A value I don't have, but need to Add\n\n                     // the current value of the cursor should have the ID references\n                     // to what SHOULD be in my display\n\n                     // get the current cursor of our linked DC\n                     let linkCursor;\n\n                     if (dvLink) {\n                        linkCursor = dvLink.getCursor();\n                     }\n                     if (!linkCursor) {\n                        // if linkCursor is no longer set, then we should clear()\n                        this.clearAll();\n                        return;\n                     }\n\n                     let PK = this.datasource.PK();\n\n                     // lets start by assuming all the current values in cursor are #3\n                     // -> all the values into valuesToAdd:\n\n                     let colName = this.fieldLink?.fieldLink?.relationName?.();\n                     let valuesToAdd = {};\n                     let valuesIn = colName ? linkCursor[colName] || [] : [];\n                     if (!Array.isArray(valuesIn)) valuesIn = [valuesIn];\n                     valuesIn = valuesIn.filter((v) => v);\n                     valuesIn.forEach((v) => {\n                        valuesToAdd[v[PK]] = v;\n                     });\n\n                     let valuesToRemove = [];\n                     // step through all the values I currently have\n                     let currValues = this.__dataCollection.find(() => true);\n                     currValues.forEach((value) => {\n                        // if value is in valuesToAdd\n                        if (valuesToAdd[value[PK]]) {\n                           // we already have it so turns out we don't need to add\n                           // it after all\n                           delete valuesToAdd[value[PK]];\n                        } else {\n                           // the current state of the Link Cursor value doesn't have\n                           // this value, so we need to remove it:\n                           valuesToRemove.push(value[PK]);\n                        }\n                     });\n\n                     // now remove the items we don't want:\n                     this.__dataCollection.remove(valuesToRemove);\n\n                     // then we have to ask for the values we need to add:\n                     valuesToAdd = Object.keys(valuesToAdd); // convert to []\n                     if (valuesToAdd.length > 0) {\n                        let cond = { where: {} };\n                        cond.where[PK] = valuesToAdd;\n                        // NOTE: we are using the abbreviated condition syntax here.\n\n                        // NOTE: staleRefresh() has some buffering capabilities\n                        // that combine multiple calls into 1 more efficient call:\n                        this.model.staleRefresh(cond).then((res) => {\n                           // check to make sure there is data to work with\n                           if (Array.isArray(res.data) && res.data.length) {\n                              res.data.forEach((d) => {\n                                 if (!this.__dataCollection.exists(d[PK])) {\n                                    this.__dataCollection.add(d);\n                                 }\n                              });\n                           }\n                        });\n                     }\n                  }\n\n                  return;\n               }\n\n               // Otherwise, we need to refilter our data:\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"cursorStale\",\n            listener: () => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         /* eslint-disable no-fallthrough */\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\", DC);\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n         /* eslint-enable no-fallthrough */\n      });\n   }\n\n   // /**\n   //  * @method whereCleanUp()\n   //  * Parse through the current where condition and remove any null or\n   //  * empty logical blocks.\n   //  * @param {obj} curr\n   //  *        1) The current where condition in ABQuery Format:\n   //  *        {\n   //  *           glue: [AND, OR],\n   //  *           rules: [ {rule} ]\n   //  *        }\n   //  *        or 2) The current {rule} to validate\n   //  *        {\n   //  *          key:{string},\n   //  *          rule:{string},\n   //  *          vlaue:{mixed}\n   //  *        }\n   //  * @return {ABQuery.where} / { Rule }\n   //  */\n   // whereCleanUp(curr) {\n   //    if (curr) {\n   //       if (curr.glue && curr.rules) {\n   //          // this is a logical Block (AND, OR)\n   //          // we need to filter the children\n   //          let newValue = { glue: curr.glue, rules: [] };\n   //          curr.rules.forEach((r) => {\n   //             let cleanRule = this.whereCleanUp(r);\n   //             // don't add values that didn't pass\n   //             if (cleanRule) {\n   //                newValue.rules.push(cleanRule);\n   //             }\n   //          });\n\n   //          // if we have a non empty block, then return it:\n   //          if (newValue.rules.length > 0) {\n   //             return newValue;\n   //          }\n\n   //          // this isn't really a valid conditional, so null\n   //          return null;\n   //       }\n\n   //       // This is a specific rule, that isn't null so:\n   //       return curr;\n   //    }\n   //    return null;\n   // }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? {}\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n      wheres.glue = wheres.glue || \"and\";\n      wheres.rules = wheres.rules || [];\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      // add the filterCond if there are rules to add\n      if (this.__filterCond?.rules?.length > 0) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = obj.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate: this.shouldPopulate,\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method shouldPopulate()\n    * Return our populate status. We now want to query this info outside this\n    * object.\n    * @return {bool|Array}\n    *         true/false,  or an array of columnNames that are being populated.\n    */\n   get shouldPopulate() {\n      return (\n         this.settings.populate ??\n         (this.settings.preventPopulate ? false : true)\n      );\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         // let pos = this.__dataCollection.count();\n         let pos = this.__dataCollection.find({}).length;\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n\n            // Introduce a delay to ensure the UI has fully rendered the list before proceeding\n            setTimeout(async () => {\n               cb?.();\n               resolve();\n            }, 50);\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            const linkType = `${fieldLink.linkType()}:${fieldLink.linkViaType()}`;\n\n            let filterRule;\n            // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n            if (fieldLink.alias) {\n               filterRule = \"contains\";\n            }\n            // M:1\n            else if (linkType == \"many:one\") {\n               filterRule = \"have_relation\";\n            }\n            // 1:M\n            else {\n               filterRule = \"equals\";\n            }\n\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: filterRule,\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         }\n      );\n      // sanity checks:\n      // I've learned not to trust: this.settings.objectWorkspace\n      filter.glue = filter.glue || \"and\";\n      filter.rules = filter.rules || [];\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         // QUESTION: If this is still required, consider moving it into the `ruleLinkedData` function for maintainability. ??\n         // if (this.fieldLink?.linkType() == \"many\") {\n         //    linkRule.rule = \"contains\";\n         // }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if ((filter.rules || []).length > 0 && !this.isCursorFollow) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData, skipDatasourceFilter = false) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource && !skipDatasourceFilter)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    * @param {string} eventName - Name of the event\n    * @param {object} emitter - Emitter object\n    */\n   eventRemove(eventName, emitter = null) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName && (!emitter || emitter == e.emitter))\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n\n   waitReady() {\n      // if (this.dataStatus == this.dataStatusFlag.initialized) {\n      //    return Promise.resolve();\n      // }\n      // console.log(`DC[${this.label}] waiting for initializedData.`);\n      // return new Promise((resolve /*, reject */) => {\n      //    this.once(\"initializedData\", ()=>{\n      //       resolve();\n      //    })\n\n      // })\n\n      return this.waitForDataCollectionToInitialize(this);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessDefinition() {\n      return this.objectByID(\"af91fc75-fb73-4d71-af14-e22832eb5915\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      // return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n\n      let active = attributes?.settings?.active ?? \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            // resolve(numberOfRows);\n            return numberOfRows;\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {}, populate: true };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            let entry = responseHash[key];\n            let resolve;\n            if (Array.isArray(entry)) {\n               resolve = entry[0].resolve;\n            } else {\n               resolve = entry.resolve;\n            }\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/${this.id}/count`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n      // Default defining label\n      else {\n         const defaultFld = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultFld) fields.push(defaultFld.columnName);\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      // Using rawString to catch actual values we are pulling out.\n      // the label data might have additional characters \"-\" and such that will\n      // remain, and doing a .trim() on that wont catch that the label data\n      // is actually empty.\n      let rawString = \"\";\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            let valField = field.format(rowData) || \"\";\n            labelData = labelData.replace(colId, valField);\n            rawString = `${rawString}${valField}`;\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!rawString.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // SENTRY Error AB-APPBUILDER-4H\n            // \"curr.rules.forEach is not a function\"\n            // curr.rules is supposed to be an array. If we are not\n            // getting that, then let's send an alert to figure out what\n            // is happening here:\n            if (!Array.isArray(curr.rules)) {\n               // what is this entry?\n               let err = new Error(\n                  `ABObjectCore.whereCleanUP(): Sentry Error: AB-APPBUILDER-4H: current rule is not properly formed: ${JSON.stringify(\n                     curr\n                  )}`\n               );\n               this.AB.notify.developer(err, { curr });\n            }\n\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         // if it isn't {}, then return it\n         if (Object.keys(curr).length > 0) return curr;\n\n         // otherwise we skip this as well\n         return null;\n      }\n      return null;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      // Include data from the main process as well\n      if (this.key === \"SubProcess\") {\n         const parentFields = this.process.processDataFields(this);\n         if (parentFields) {\n            fields.push(...parentFields);\n         }\n      }\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataSelect\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewOrgChart\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            if (!isPlugin(values.key)) {\n               console.error(\n                  \"!! View[\" +\n                     values.key +\n                     \"] not yet defined.  Have an ABView instead:\"\n               );\n            }\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n\n   static addViewClass(View) {\n      Views[View.common().key] = View;\n   }\n};\n\n/**\n * Check if the key starts with plugin_\n */\nfunction isPlugin(key) {\n   return key.split(\"_\")[0] === \"plugin\";\n}\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewCustom\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n   require(\"../platform/mobile/ABMobileViewTimeline\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   const extractVal = (itemData) => {\n      let val;\n      const relationName = field.relationName();\n      if (itemData[relationName]) {\n         val =\n            (field.indexField\n               ? itemData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? itemData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            itemData[relationName].id ??\n            itemData[relationName];\n      } else {\n         let fieldVal = getFieldVal(itemData, field);\n         if (fieldVal != null) {\n            val = fieldVal;\n         }\n      }\n      return val;\n   };\n\n   if (Array.isArray(rowData)) {\n      connectedVal = rowData.map((data) => extractVal(data));\n   } else if (rowData) {\n      connectedVal = extractVal(rowData);\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter || !filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         case \"is_current_date\":\n            result =\n               value.setHours(0, 0, 0, 0) == compareValue.setHours(0, 0, 0, 0);\n            break;\n         case \"is_empty\":\n            result = !value;\n            break;\n         case \"is_not_empty\":\n            result = !!value;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result =\n               value == false ||\n               value <= 0 ||\n               value == \"false\" ||\n               value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value || !value?.length) return false;\n      let result = false;\n\n      if (!Array.isArray(value)) value = [value];\n\n      /* eslint-disable no-fallthrough */\n      switch (rule) {\n         case \"is_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"is_not_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) != this.Account.username)\n                  .length > 0;\n            break;\n         case \"contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"equals\"\n\n         case \"equals\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length >\n               0;\n            break;\n         case \"not_contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"not_equals\"\n\n         case \"not_equal\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length <\n               1;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      /* eslint-enable no-fallthrough */\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            (field.indexField\n               ? connectedVal[field.indexField.columnName]\n               : null) ??\n            (field.indexField2\n               ? connectedVal[field.indexField2.columnName]\n               : null) ??\n            connectedVal[field.columnName] ??\n            connectedVal.id ??\n            connectedVal;\n      }\n\n      // Compare value isn't always a string?\n      // https://appdev-designs.sentry.io/issues/5056850389/\n      let compareValueLowercase =\n         typeof compareValue === \"string\"\n            ? compareValue.toLowerCase?.()\n            : compareValue;\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n\n                     // By Query Field\n                     conditions = conditions.concat(\n                        this.fieldsAddFiltersQuery(f, true)\n                     );\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         is_current_date: this.labels.component.isCurrentDateCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n         is_empty: this.labels.component.isEmpty,\n         is_not_empty: this.labels.component.isNotEmpty,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions)\n         switch (condKey) {\n            case \"is_current_date\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"none\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n            case \"last_days\":\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"text\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n            default:\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"datepicker\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n         }\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n         \"is_current_date\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(\n      object,\n      formula,\n      rowData,\n      place,\n      alias = null,\n      recalculate = false\n   ) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData, recalculate) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData, recalculate = false) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias,\n            recalculate\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method getCombinedFields\n    * Retrieve the fields used to combine and generate a specific value\n    *\n    * @return {Array}\n    */\n   getCombinedFields() {\n      const result = [];\n\n      (this.settings?.combinedFields ?? \"\").split(\",\").forEach((fieldId) => {\n         const fld = this.object.fields((f) => f.id == fieldId)[0];\n         if (!fld) return;\n\n         result.push(fld);\n      });\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * Convert the value of a connected field (without a custom index) to display the label of the linked object\n    *\n    * @param {Object} rowData\n    * @returns {String}\n    */\n   format(rowData) {\n      let val = rowData[this.columnName] ?? \"\";\n\n      this.getCombinedFields().forEach((f, index) => {\n         if (\n            f.key != \"connectObject\" ||\n            f.settings.indexField ||\n            f.settings.indexField2\n         )\n            return;\n\n         let connectVal = rowData[f.relationName()];\n         if (!connectVal) return;\n\n         if (!Array.isArray(connectVal)) connectVal = [connectVal];\n\n         const connectLabel = connectVal\n            .map((item) => item.text ?? f.datasourceLink.displayData(item))\n            .join(\"|\");\n\n         val = val.replace(rowData[f.columnName], connectLabel);\n      });\n\n      return val;\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(val) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : datasourceLink.PK();\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n/*function L(key, altText) {\n   // TODO:git \n   // return altText; // AD.lang.label.getLabel(key) || altText;\n}*/\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      var L = this.AB.Label();\n\n      const currentDate = new Date();\n      currentDate.setHours(0, 0, 0, 0);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"lessCurrentDate\":\n                     isValid =\n                        value.getTime &&\n                        value.getTime() < currentDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [\n                              this.getDateDisplay(currentDate),\n                           ])\n                        );\n                     break;\n                  case \"lessEqualCurrentDate\":\n                     isValid =\n                        value.getTime &&\n                        value.getTime() <= currentDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [\n                              this.getDateDisplay(currentDate),\n                           ])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value\n         ? this.AB.rules.toDateFormat(value, {\n              format: \"YYYY-MM-DD\",\n           })\n         : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {\n            /* ignore */\n         }\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n\n      this.isUser = true;\n      // {bool}\n      // is this an ABFieldUser type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of User field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewCustomPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-custom\", // {string} unique key for this view\n   icon: \"palette\", // {string} fa-[icon] reference for this view\n   labelKey: \"Custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCustomCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   // field() {\n   //    var dv = this.datacollection;\n   //    if (!dv) return null;\n\n   //    var object = dv.datasource;\n   //    if (!object) return null;\n\n   //    return object.fieldByID(this.settings.field);\n   // }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.wantsAdd ?? false;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewTimelinePropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-timeline\", // {string} unique key for this view\n   icon: \"timeline\", // {string} fa-[icon] reference for this view\n   labelKey: \"Timeline\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTimelineCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTimelinePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.eventDefinitionType] =\n            ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.type] =\n            ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         let error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         let error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               let error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || data.length == 0)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || data.length == 0)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      // NOTE: We are pretending our response is a type of ABFieldList. But our\n      // ABField objects no longer allow \".\" in our columnNames:\n      //    ( https://github.com/digi-serve/appbuilder_class_core/blob/212cf5fa1c1d5c959aa246c730582ed50809ee0f/dataFields/ABFieldCore.js#L262 )\n      // But our Process tasks really will be expecting it there so lets put\n      // it back:\n      listField.columnName = `${myID}.userFormResponse`;\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               ///\n               /// Questioning the validity of this section of code.\n               /// In order to get here, we tried to find field, and it\n               /// didn't exist.\n               /// then we turn around and REPEAT the same attempt\n               /// and check for field again.\n               /*\n               // parts[1] should be a field.id\n               object = this.AB.objectByID(this.objectID);\n               field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n               */\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(/* attributes */) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            // This function exists on platform_web but not platform_service\n            this.warningMessage?.(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n   hiddenFieldIds: [],\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n\n      this.settings.hiddenFieldIds =\n         values.settings.hiddenFieldIds ||\n         ABViewCSVExporterPropertyComponentDefaults.hiddenFieldIds;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return null;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataSelectPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n};\n\nconst ABViewDefaults = {\n   key: \"data-select\", // {string} unique key for this view\n   icon: \"chevron-circle-down\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Select\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataSelectCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataSelectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      // support uploading template when more than one data source is selected\n      const object = this.datacollections[0].datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   includeDelete: false,\n   deleteLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         (this.settings?.includeSave ?? true) &&\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n      this.settings.includeDelete = JSON.parse(\n         this.settings.includeDelete ||\n            ABViewFormButtonPropertyComponentDefaults.includeDelete\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (this.settings[f] == null)\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewOrgChartPropertyComponentDefaults = {\n   datacollectionID: \"\",\n   fields: \"\",\n   direction: \"t2b\",\n   depth: 99,\n   color: \"#00BCD4\",\n   // visibleLevel: 2,\n   pan: 1,\n   zoom: 1,\n   height: 0,\n   export: 0,\n   exportFilename: \"\",\n};\n\nconst ABViewOrgChartDefaults = {\n   key: \"orgchart\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"OrgChart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewOrgChartCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewOrgChartDefaults\n      );\n   }\n\n   static common() {\n      return ABViewOrgChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewOrgChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.datacollectionID =\n         this.settings.datacollectionID ??\n         ABViewOrgChartPropertyComponentDefaults.datacollectionID;\n\n      this.settings.fields =\n         this.settings.fields ?? ABViewOrgChartPropertyComponentDefaults.fields;\n\n      this.settings.direction =\n         this.settings.direction ??\n         ABViewOrgChartPropertyComponentDefaults.direction;\n\n      this.settings.depth = parseInt(\n         this.settings.depth ?? ABViewOrgChartPropertyComponentDefaults.depth\n      );\n\n      this.settings.color =\n         this.settings.color ?? ABViewOrgChartPropertyComponentDefaults.color;\n\n      this.settings.pan = JSON.parse(\n         this.settings.pan ?? ABViewOrgChartPropertyComponentDefaults.pan\n      );\n\n      this.settings.zoom = JSON.parse(\n         this.settings.zoom ?? ABViewOrgChartPropertyComponentDefaults.zoom\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewOrgChartPropertyComponentDefaults.height\n      );\n\n      this.settings.export = JSON.parse(\n         this.settings.export ?? ABViewOrgChartPropertyComponentDefaults.export\n      );\n\n      this.settings.exportFilename =\n         this.settings.exportFilename ??\n         ABViewOrgChartPropertyComponentDefaults.exportFilename;\n   }\n\n   get datacollection() {\n      const datacollectionID = (this.settings || {}).datacollectionID;\n\n      return this.AB.datacollectionByID(datacollectionID);\n   }\n\n   getValueFields(object) {\n      // OrgChart supports only one parent node.\n      return (\n         object?.connectFields(\n            (f) => f.linkType() == \"many\" && f.linkViaType() == \"one\"\n         ) ?? []\n      );\n   }\n\n   /**\n    * @function valueFields()\n    * Return IDs of connect field for each layer of OrgChart, starting from the top to the bottom.\n    * \n    * @return {Array}\n    * \n    */\n   valueFields() {\n      let fieldValues = (this.settings?.fields ?? \"\").split(\",\");\n      if (!Array.isArray(fieldValues)) fieldValues = [fieldValues];\n\n      const result = [];\n\n      let obj = this.datacollection?.datasource;\n      fieldValues.forEach((fId) => {\n         if (!fId) return;\n\n         const field = obj?.fieldByID?.(fId);\n         if (!field) return;\n\n         result.push(field);\n         obj = field.datasourceLink;\n      });\n\n      return result;\n   }\n\n   // descriptionField() {\n   //    return this.valueField()?.datasourceLink?.fieldByID?.(\n   //       this.settings.columnDescription\n   //    );\n   // }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      // this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App ?what is this?\n    * @param {string} idBase Identifier for this component\n    * @param {import(\"../ABFactory\").default} AB ABFactory instance\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      this.AB = AB;\n      // Transition Code:\n      // make sure we have an this.AB\n      if (!AB && App?.AB) {\n         this.AB = App.AB;\n      }\n\n      if (!App) {\n         if (this.AB._App) {\n            App = this.AB._App;\n         } else {\n            App = {\n               uuid: this.AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: this.AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: this.AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: this.AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            this.AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!this.AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = this.AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.stale\",\n         \"ab.datacollection.delete\",\n      ].forEach((key) => {\n         this.AB.on(key, (data) => {\n            this.emit(key, data);\n         });\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         // if (key) {\n         //    no_socket_trigger(this, key, data);\n         // }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            .then((newVal) => {})\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         no_socket_trigger(this, \"ab.datacollection.create\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               id,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      }).then((res) => {\n         // properly issue the delete\n         no_socket_trigger(this, \"ab.datacollection.delete\", id);\n         return res;\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // scan the rules and convert any is_current_date rules to UTC daytime range.\n      let rules = cond.where?.rules;\n      while (rules?.length) {\n         let nestedRules = [];\n         rules.forEach((rule) => {\n            if (rule.rule === \"is_current_date\")\n               rule.value = this.AB.rules.getUTCDayTimeRange();\n            else if (rule.rules?.length)\n               nestedRules = nestedRules.concat(rule.rules);\n         });\n\n         rules = nestedRules;\n      }\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         // properly issue the update\n         no_socket_trigger(this, \"ab.datacollection.update\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (Object.prototype.hasOwnProperty.call(data, f.columnName))\n            f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         if (!f) return;\n         allWarnings = allWarnings.concat(f?.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         if (!i) return;\n         allWarnings = allWarnings.concat(i?.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f?.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i?.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanValues()\n    * perform a final review of the data a form will try to submit for\n    * this object.  The lets individual fields have a chance to update or\n    * remove values before they are sent.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanValues(rowData) {\n      this.fields().forEach((f) => {\n         f.formCleanData(rowData);\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate.length % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      if (\n         cond.rule === \"in_query_field\" ||\n         cond.rule === \"not_in_query_field\"\n      ) {\n         cond.includes = cond.value.split(\":\");\n      }\n\n      // else cond.includes = cond.value?.split?.(/,|:/) ?? [];\n\n      // if (field?.key == \"date\" || field?.key == \"datetime\") {\n      //    cond.condition.filter = cond.condition.filter\n      //       ? AB.rules.toDate(cond.condition.filter)\n      //       : null;\n      //\n      //    cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      // }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes?.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      if (cond.rule === \"is_current_date\") {\n         cond.value = AB.rules.getUTCDayTimeRange();\n      } else if (\n         cond.rule === \"in_query_field\" ||\n         cond.rule === \"not_in_query_field\"\n      ) {\n         cond.value =\n            cond.includes?.length == 2 ? cond.includes.join(\":\") : null;\n      } else {\n         cond.value = values\n            .map((v) => {\n               // Convert date format\n               if (\n                  field &&\n                  (field.key === \"date\" || field.key === \"datetime\") &&\n                  cond.rule != \"last_days\"\n               ) {\n                  return field.exportValue(new Date(v));\n               }\n               return v;\n            })\n            .join(\",\");\n      }\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nfunction _uiQueryOptionId(fieldId) {\n   return `byQueryField-query-option-${fieldId}`;\n}\n\nfunction _uiFieldOptionId(fieldId) {\n   return `byQueryField-field-option-${fieldId}`;\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n            isCurrentDateCondition: L(\"is current date\"),\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond?.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n               case \"is_current_date\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid DC\n                  if (isComplete) {\n                     let dc = this.AB.datacollectionByID(cond.value);\n                     if (!dc) {\n                        isComplete = false;\n                     }\n                  }\n                  break;\n\n               case \"in_query\":\n               case \"not_in_query\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid query\n                  if (isComplete) {\n                     let query = this.AB.queryByID(cond.value);\n                     if (!query) {\n                        isComplete = false;\n                     }\n                  }\n                  break;\n\n               case \"in_query_field\":\n               case \"not_in_query_field\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid query\n                  if (isComplete) {\n                     let queryId = cond.value.split(\":\")[0],\n                        fieldId = cond.value.split(\":\")[1];\n                     let query = this.AB.queryByID(queryId);\n                     if (!query) {\n                        isComplete = false;\n                     } else {\n                        // and a valid field\n                        let field = query.fieldByID(fieldId);\n                        if (!field) {\n                           isComplete = false;\n                        }\n                     }\n                  }\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      // Format date types\n      fields.forEach((f) => {\n         if (f.type === \"date\")\n            f.format = (v) => this.AB.Webix.il8n.dateFormatStr(v);\n      });\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      const _this = this;\n      const $filterView = $el.$app.require(\"jet-views\", \"filter\");\n\n      if (!this._fnBaseGetValue)\n         this._fnBaseGetValue = $filterView.prototype.GetValue;\n      $filterView.prototype.GetValue = function () {\n         const rule = _this._fnBaseGetValue.call(this);\n         if (!rule) {\n            // Not sure if its a problem, so report in case it is.\n            _this.AB.notify.developer(new Error(\"No rule found\"), {\n               context: \"No rule from $filterView.GetValue()\",\n            });\n            return;\n         }\n\n         if (\n            rule.condition.type == \"in_query_field\" ||\n            rule.condition.type == \"not_in_query_field\"\n         ) {\n            const queryOptId = _uiQueryOptionId(rule.field);\n            const fieldOptId = _uiFieldOptionId(rule.field);\n            const selectedQueryId = $$(queryOptId)?.getValue();\n            const selectedFieldId = $$(fieldOptId)?.getValue();\n\n            if (selectedQueryId && selectedFieldId) {\n               rule.includes = [selectedQueryId, selectedFieldId];\n            }\n         }\n\n         return rule;\n      };\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $filterView.prototype.CreateFilter = async function (\n         fieldId,\n         type,\n         format,\n         conditions,\n         place\n      ) {\n         let inputs = _this.uiValue(fieldId);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: fieldId,\n            mode: type,\n            template: function (o) {\n               let str = o[fieldId];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // NOTE: Need this to have filter.config.value?.includes value\n         // let data = [];\n         if ($el) {\n            await $el.$app.getService(\"backend\").data(fieldId);\n            // data = await $query.getService(\"backend\").data(fieldId);\n         }\n         // filter.parse(data);\n\n         // Populate options of \"in_query_field\" and \"not_in_query_field\"\n         if (\n            conditions.filter(\n               (cond) =>\n                  cond.id == \"in_query_field\" || cond.id == \"not_in_query_field\"\n            ).length &&\n            filter.config.value?.includes?.length == 2\n         ) {\n            // inputs = _this.uiValue(fieldId, filter.config.value.includes);\n            // filter.define(\"inputs\", inputs);\n            const queryOptId = _uiQueryOptionId(fieldId);\n            const fieldOptId = _uiFieldOptionId(fieldId);\n            const $queryOpt = $$(queryOptId);\n            const $fieldOpt = $$(fieldOptId);\n            const vals = filter.config.value?.includes ?? [];\n            if (vals?.length > 1 && $queryOpt && $fieldOpt) {\n               $queryOpt.setValue(vals[0]);\n               $fieldOpt.setValue(vals[1]);\n               $queryOpt.refresh();\n               $fieldOpt.refresh();\n            }\n         }\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName, defaultValue = null) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"]\n               .concat(this.uiNoneValue())\n               .concat(this.uiContextValue(field));\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         // 1:M\n         LinkType == \"one:many\" ||\n         // 1:1 isSource = true\n         (LinkType == \"one:one\" && field?.settings?.isSource)\n      ) {\n         result = result ?? [];\n\n         if (field?.settings?.isCustomFK)\n            result = result.concat(this.uiTextValue(field));\n\n         result = result.concat(this.uiQueryFieldValue(field, defaultValue));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field, defaultValue))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field, defaultValue) {\n      // ABQuery Options\n      const qOpts = this.queries(\n         (q) => this._Object == null || q.id != this._Object.id\n      ).map((q) => {\n         return {\n            id: q.id,\n            value: q.label,\n         };\n      });\n\n      const pullFieldOption = (queryId) => {\n         const options = [];\n\n         // Get fields of the query\n         const Query = this.AB.queryByID(queryId);\n         if (Query) {\n            Query.fields((f) => !f.isConnection).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: `${q.object.label}.${q.label}`,\n               });\n            });\n         }\n\n         return options;\n      };\n\n      const refreshFieldOption = ($queryOpt, queryId) => {\n         const options = pullFieldOption(queryId);\n\n         // Update UI\n         if ($queryOpt) {\n            const $queryContainer = $queryOpt.getParentView();\n            const $fieldOption = $queryContainer.getChildViews()[1];\n            $fieldOption?.define(\"options\", options);\n            $fieldOption?.refresh();\n         }\n      };\n\n      let queryId;\n      let fieldId;\n      let fieldOptions = [];\n      if (defaultValue?.length == 2) {\n         queryId = defaultValue[0];\n         fieldId = defaultValue[1];\n\n         fieldOptions = pullFieldOption(queryId);\n      }\n\n      return [\n         {\n            batch: \"queryField\",\n            view: \"form\",\n            borderless: true,\n            padding: 0,\n            elements: [\n               {\n                  id: _uiQueryOptionId(field?.id),\n                  name: \"query\",\n                  view: \"combo\",\n                  placeholder:\n                     this.labels.component.inQueryFieldQueryPlaceholder,\n                  options: qOpts,\n                  value: queryId,\n                  on: {\n                     onChange: function (qVal) {\n                        refreshFieldOption(this, qVal);\n                     },\n                  },\n               },\n               {\n                  id: _uiFieldOptionId(field?.id),\n                  name: \"field\",\n                  view: \"combo\",\n                  placeholder: L(\"Choose a Field\"),\n                  options: fieldOptions,\n                  value: fieldId,\n               },\n            ],\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                           {\n                              value: L(\"is current date\"),\n                              id: \"is_current_date\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n            case \"is_current_date\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      try {\n         item.setValue(val);\n      } catch (err) {\n         // this error is fine because we handled it already\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      // default is to just leave data as is.\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               // if (this?.settings?.linkViaType != \"one\") {\n               //    // We store the .findAll() results locally and return that for a\n               //    // quick response:\n               //    return await this.AB.Storage.get(storageID);\n               // }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then(async (data) => {\n            await this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   async populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      await this._sortByRecent(data);\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      let val = item.getValue();\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (!Array.isArray(val)) {\n            if (val) {\n               val = val.split(\",\");\n               val.forEach((record) => {\n                  // make sure we are returning the .uuid values and\n                  // not full {Record} values.\n                  vals.push(\n                     this.getRelationValue(item.getList().getItem(record), {\n                        forUpdate: true,\n                     })\n                  );\n               });\n            }\n         } else {\n            vals = val;\n         }\n\n         return vals;\n      } else {\n         if (val) {\n            // return just the .uuid and not the full {Record}\n            return this.getRelationValue(item.getList().getItem(val));\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      // try to prevent form flicker:\n      // Only reset the value if the value changes:\n      let currVal = item.getValue();\n      let newVal = Array.isArray(val)\n         ? val\n              .map(\n                 (e) =>\n                    this.getRelationValue(e, { forUpdate: true }) ??\n                    e.id ??\n                    e.uuid ??\n                    e\n              )\n              .join(\",\")\n         : this.getRelationValue(val, { forUpdate: true }) ??\n           val.id ??\n           val.uuid ??\n           val;\n      if (currVal != newVal) {\n         item.setValue(newVal);\n      }\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n\n   get _recentStorageId() {\n      return `${this.id}_recent_selected`;\n   }\n\n   /**\n    * @method saveSelect\n    * This function stores the user's selected option in local storage.\n    * It ensures that the user's recent selection is saved, allowing the system\n    * to retrieve it and provide a more personalized experience during future visits.\n    * @param {Array} selectedItems\n    * @return {Promise}\n    */\n   async saveSelect(selectedItems) {\n      if (!selectedItems) return;\n\n      if (!Array.isArray(selectedItems)) selectedItems = [selectedItems];\n\n      let recentSelected =\n         (await this.AB.Storage.get(this._recentStorageId)) ?? [];\n\n      selectedItems.forEach((item) => {\n         if (item == null) return;\n\n         const itemId = item.uuid ?? item.id ?? item;\n         recentSelected = recentSelected.filter((id) => id != itemId);\n         recentSelected.unshift(itemId);\n      });\n\n      return this.AB.Storage.set(this._recentStorageId, recentSelected);\n   }\n\n   /**\n    * @method _sortByRecent\n    * This function sorts the options based on the user's most recently selected item, which is retrieved from local storage.\n    *\n    * @param {Array} options\n    */\n   async _sortByRecent(options) {\n      if (!options?.length) return options;\n\n      const recentSelected = await this.AB.Storage.get(this._recentStorageId);\n      if (!recentSelected?.length) return options;\n\n      if (!Array.isArray(options)) options = [options];\n\n      options.sort((a, b) => {\n         const aId = a.uuid ?? a.id ?? a;\n         const bId = b.uuid ?? b.id ?? b;\n\n         return recentSelected.indexOf(bId) - recentSelected.indexOf(aId);\n      });\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      if (item) {\n         item.config.value = rowData[this.columnName];\n      }\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // \"\" isn't a valid json value, so just remove the data and\n         // let the DB handle the default value.\n         delete rowData[this.columnName];\n      }\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter(\n                  (v) => opt && v && (opt.id || opt) == (v.id || v)\n               ).length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   // formComponentMobile() {\n   //    // NOTE: what is being returned here needs to mimic an ABView CLASS.\n   //    // primarily the .common() and .newInstance() methods.\n   //    const formComponentSetting = super.formComponent();\n\n   //    // .common() is used to create the display in the list\n   //    formComponentSetting.common = () => {\n   //       return {\n   //          key: \"mobile-textbox\",\n   //          settings: {\n   //             type: \"single\",\n   //          },\n   //       };\n   //    };\n\n   //    return formComponentSetting;\n   // }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   formComponentMobile() {\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // this means this value isn't set.\n         // can we remove this from the data?\n         delete rowData[this.columnName];\n         super.setValue(item, rowData);\n         return;\n      }\n\n      if (this.linkType() == \"many\") {\n         // val should be an array.\n         if (!Array.isArray(val)) {\n            val = [val];\n         }\n         // if any of those contain \"ab-current-user\" replace it:\n         val = val.map((v) =>\n            v == \"ab-current-user\" ? this.AB.Account.username() : v\n         );\n      } else {\n         // val is a single entry string\n         // Select \"[Current user]\" to update\n         if (val == \"ab-current-user\") val = this.AB.Account.username();\n      }\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n\n   pullRelationValues(row) {\n      let values = super.pullRelationValues(row);\n\n      // remember, our .id == .username\n      if (Array.isArray(values)) {\n         // prevent any null or undefined:\n         values = values.filter((v) => v);\n         values = values.map((v) => {\n            v.id = v.username || v.id;\n            return v;\n         });\n      } else {\n         if (values) {\n            values.id = values.username || values.id;\n         }\n      }\n\n      return values;\n   }\n\n   pullRecordRelationValues(record) {\n      let data = super.pullRecordRelationValues(record);\n      if (Array.isArray(data)) {\n         data = data.map((d) => {\n            d.id = d.username ?? d.id;\n            return d;\n         });\n      } else {\n         data.id = data.username || data.id;\n      }\n\n      return data;\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         // debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewCustomCore = require(\"../../core/mobile/ABMobileViewCustomCore\");\n\nmodule.exports = class ABMobileViewCustom extends ABMobileViewCustomCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      // Add in here any missing or unfindable setting reference\n      // like datacollection ...\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions\n         /* ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n         */\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","const ABMobileViewTimelineCore = require(\"../../core/mobile/ABMobileViewTimelineCore\");\n\nmodule.exports = class ABMobileViewTimeline extends ABMobileViewTimelineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const nextOptions = this.NextQLOps ?? this.constructor.NextQLOps;\n      const options = nextOptions.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = nextOptions.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n\n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: function () {\n                           Filter.popUp(this.$view, null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.NextQLOps ?? currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n            dv.on(key, this._handler_doOnShow);\n         });\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n         });\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         await fetch(imgElm.src, { cache: \"reload\", mode: \"no-cors\" });\n         imgElm.src = `${imgElm.src}#${new Date().getTime()}`;\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => {\n                                    this.applyConnectFilter(\n                                       $$(this.ids.filter).getList().getItem(id)\n                                    );\n                                 },\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (\n         !this.settings?.dataviewID ||\n         (this.settings?.viewType !== \"advanced\" && !this.settings?.field)\n      )\n         return { height: 1, id: this.ids.component };\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(rowData) {\n      let connectedVal = rowData?.id ?? null;\n\n      if (\n         connectedVal &&\n         this.field.settings?.isCustomFK &&\n         this.field.settings?.isSource\n      ) {\n         connectedVal =\n            (this.field.indexField\n               ? rowData[this.field.indexField.columnName]\n               : null) ?? // custom index\n            (this.field.indexField2\n               ? rowData[this.field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData.id ??\n            rowData;\n      }\n\n      let filterRule = [];\n      if (connectedVal) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectedVal,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nexport default class ABViewDataSelectComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataSelect_${baseView.id}`,\n         Object.assign(\n            {\n               select: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const _ui = super.ui([\n         {\n            view: \"combo\",\n            id: this.ids.select,\n            on: {\n               onChange: (n, o) => {\n                  if (n !== o) this.cursorChange(n);\n               },\n            },\n         },\n      ]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n      const dc = this.datacollection;\n      if (!dc) return;\n      await dc.waitReady();\n      const labelField = this.AB.definitionByID(\n         this.settings.labelField\n      )?.columnName;\n      const options = dc\n         .getData()\n         .map((o) => ({ id: o.id, value: o[labelField] }))\n         .sort((a, b) => (a.value > b.value ? 1 : -1));\n      const $select = $$(this.ids.select);\n      $select.define(\"options\", options);\n      $select.refresh();\n      $select.setValue(dc.getCursor().id);\n   }\n\n   cursorChange(n) {\n      this.datacollection.setCursor(n);\n   }\n}\n","import ABViewDataSelectCore from \"../../core/views/ABViewDataSelectCore\";\nimport ABViewDataSelectComponent from \"./viewComponent/ABViewDataSelectComponent\";\n\nexport default class ABViewDataSelect extends ABViewDataSelectCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataSelectComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      // give the Object a final chance to review the data being handled.\n      obj.formCleanValues(formVals);\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks);\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow =\n         _grid.data.find({ appbuilder_select_item: 1 }).length < 1;\n      const filterRow = (row) =>\n         noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow,\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Update webix.datatable\n                        (updatedRowIds ?? []).forEach((rowId) => {\n                           $datatable.updateItem(rowId, vals);\n                        });\n\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n         this.datacollection?.removeListener(key, this.handler_select);\n      });\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            // onBeforeEditStart: function (/*id*/) {\n            //    // Not sure what this is suposed to check, but this condition\n            //    // will always be false.\n            //    if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            // },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // Check if data loading is complete\n               const oldValue = state.old;\n               let newValue = state.value;\n               if (!Array.isArray(newValue)) newValue = [newValue];\n               if (\n                  oldValue != null &&\n                  oldValue != \"\" &&\n                  // If options does not load completely, then Webix returns state.value as ['', '', '']\n                  newValue.filter((val) => val != null && val != \"\").length <\n                     1 &&\n                  // Check if no data load to the option\n                  editor.getPopup?.().getList?.().data?.find({}).length < 1\n               ) {\n                  return false;\n               }\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable?.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable?.getItem(editor.row);\n         const CurrentObject = this.datacollection.datasource;\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         //maxlength field\n         const f = CurrentObject.fieldByID(editor.config.fieldID);\n         if (\n            f.settings.maxLength &&\n            state.value.length > f.settings.maxLength\n         ) {\n            this.AB.alert({\n               title: this.label(\"Limit max length\"),\n               text: this.label(\n                  \"You can enter a maximum of \" +\n                     f.settings.maxLength +\n                     \" characters\"\n               ),\n            });\n            $DataTable.addCellCss(item.id, editor.column, \"webix_invalid_cell\");\n            $DataTable.refresh(editor.row);\n            $DataTable.clearSelection();\n            return false;\n         }\n\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: this.handler_select.bind(this),\n            });\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: f.filter.getValue(),\n               values: $DataTable.getSelectedItem[f.columnName],\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) {\n                     newData[\"this_object\"] = data.uuid;\n                     data[\"this_object\"] = data.uuid;\n                  }\n\n                  // use helper funtion to check if valid\n                  // const ruleValid = filter.filters(newData);\n                  const filterComplex = ab.filterComplexNew(\n                     `rule-validate-${key}`\n                  );\n                  filterComplex.fieldsLoad(\n                     CurrentObject.fields(),\n                     CurrentObject\n                  );\n                  const ruleValid = filterComplex.isValid(data, filter.filters);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--) {\n         const col = columnHeaders[i];\n         if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n            lastCol = col;\n            break;\n         }\n      }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let id = rowData?.id ?? rowData;\n      if (this.__timeout_selectRow) {\n         console.log(\"Duplicate selectRow():\", id);\n         clearTimeout(this.__timeout_selectRow);\n      }\n      this.__timeout_selectRow = setTimeout(() => {\n         const $DataTable = this.getDataTable();\n         if (!$DataTable) return;\n\n         if (!id) $DataTable.unselect();\n         else if ($DataTable.exists(id)) {\n            $DataTable.select(id, false);\n            $DataTable.showItem(id);\n         } else $DataTable.select(null, false);\n\n         this.__timeout_selectRow = null;\n      }, 15);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return (this.AB ?? AB).Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      (this.AB.Webix ?? webix).ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: `sort_${viewIndex + 1}`,\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               this._valueElement(),\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var dirElem = sort_form.getChildViews()[viewIndex].getChildViews()[1];\n         dirElem.setValue?.(dir);\n\n         // [ABFieldList] Sorting following order\n         dirElem.sort?.((a, b) => {\n            return (dir ?? \"\").indexOf(a.id ?? a) >\n               (dir ?? \"\").indexOf(b.id ?? b)\n               ? 1\n               : -1;\n         });\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (!allFields || !allFields.length) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            var dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      if (chosenField.key == \"list\") {\n         AB.Webix.ui(this._valueListElement(chosenField), sortDir);\n      } else {\n         const valElem = this._valueElement();\n         valElem.options = options;\n         AB.Webix.ui(valElem, sortDir);\n      }\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n\n      const $popup = $$(this.ids.component);\n      $popup?.blockEvent();\n      $popup?.show(view, options);\n      $popup?.unblockEvent();\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            if (fieldObj.length > 0) {\n               // Add selected field to list\n               selectedFields.push(fieldObj[0]);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach((cView /*, index */) => {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter((x) => {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter((x) => {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            const dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (field.key == \"list\") {\n               aValue = dir.indexOf(aValue);\n               bValue = dir.indexOf(bValue);\n            }\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\" || field.key == \"list\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n\n   _valueElement() {\n      return {\n         view: \"segmented\",\n         width: 200,\n         options: [\n            {\n               id: \"\",\n               value: L(\"Please select field\"),\n            },\n         ],\n         on: {\n            onChange: (/* newv, oldv */) => {\n               // 'asc' or 'desc' values\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n\n   _valueListElement(field) {\n      return {\n         view: \"list\",\n         template: \"<div class='webix_drag_handle'></div> #text#\",\n         type: {\n            height: 35,\n         },\n         height: 150,\n         select: true,\n         drag: \"order\",\n         data: field.options(),\n         on: {\n            onChange: () => {\n               this.triggerOnChange();\n            },\n            onAfterDrop: () => {\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewOrgChartCore = require(\"../../core/views/ABViewOrgChartCore\");\nconst ABViewOrgChartComponent = require(\"./viewComponent/ABViewOrgChartComponent\");\n\nmodule.exports = class ABViewOrgChart extends ABViewOrgChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewOrgChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      // this.refreshData();\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      const whereWidget = this.view.settings?.where;\n      if ((whereWidget?.rules ?? []).length) {\n         where.rules.push(whereWidget);\n      }\n\n      const whereClient = this.clientFilter.getValue();\n      if ((whereClient?.rules ?? []).length) {\n         where.rules.push(whereClient);\n      }\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"cursorStale\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            // QUESTION: is this a problem if the check !(key in (...)) finds\n            // an event that some OTHER widget has added and not this one?\n            if (\n               dc.datacollectionLink &&\n               !(key in (dc.datacollectionLink._events ?? []))\n            )\n               baseView.eventAdd({\n                  emitter: dc.datacollectionLink,\n                  eventName: key,\n                  listener: () => {\n                     baseView.refreshData();\n                  },\n               });\n         });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (Array.isArray(dc)) {\n         dc.forEach((item) => {\n            if (item.dataStatus === item.dataStatusFlag.notInitial)\n               // load data when a widget is showing\n               item.loadData();\n         });\n      } else {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            dc.loadData();\n      }\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: key,\n               listener: (...p) => this.displayView(...p),\n            });\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n               reload: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const L = (...params) => (this.AB ?? AB).Multilingual.label(...params);\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            rows: [\n               {\n                  id: ids.reload,\n                  view: \"button\",\n                  value: L(\"New data available. Click to reload.\"),\n                  css: \"webix_primary webix_warn\",\n                  hidden: true,\n                  click: (id, event) => {\n                     this.reloadData();\n                  },\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  scroll: \"y\",\n                  sizeToContent: true,\n                  css: \"borderless transparent\",\n                  xCount: this.settings.xCount != 1 ? this.settings.xCount : 0,\n                  height: this.settings.height,\n                  template: (item) => this.itemTemplate(item),\n                  on: {\n                     onAfterRender: () => {\n                        this.applyClickEvent();\n                        this.addCyAttribute();\n                     },\n                  },\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      this.initRefreshWarning();\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   /**\n    * @method initRefreshWarning\n    *\n    */\n   initRefreshWarning() {\n      const dc = this.datacollection;\n      const includeInQuery =\n         (dc?.settings?.objectWorkspace?.filterConditions?.rules ?? []).filter(\n            (r) =>\n               [\n                  \"in_query\",\n                  \"not_in_query\",\n                  \"in_query_field\",\n                  \"not_in_query_field\",\n               ].includes(r.rule)\n         ).length > 0;\n\n      if (!includeInQuery) return;\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.delete\",\n      ].forEach((eventKey) => {\n         dc.on(eventKey, (data) => {\n            if (data.objectId == dc.datasource.id)\n               this.showRefreshWarning(data);\n         });\n      });\n   }\n\n   showRefreshWarning() {\n      if (this.__throttleRefreshWarning)\n         clearTimeout(this.__throttleRefreshWarning);\n\n      this.__throttleRefreshWarning = setTimeout(() => {\n         $$(this.ids.reload)?.show();\n      }, 200);\n   }\n\n   reloadData() {\n      const dc = this.datacollection;\n      dc?.reloadData();\n\n      $$(this.ids.reload)?.hide();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) {\n         // Not sure if its a problem so notify\n         this.AB.notify.developer(\n            new Error(\"Resize called on missing dataview component\"),\n            { context: \"ABViewDataviewComponent.resize()\", ids: this.ids }\n         );\n         return;\n      }\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth) parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         id: this.ids.component,\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         [\"changeCursor\", \"cursorStale\", \"collectionEmpty\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: (...p) => this.displayData(...p),\n            });\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      // make sure we have data to work with.  If null is passed in\n      // then pull current cursor.\n      if (rowData == null) {\n         rowData = this.datacollection.getCursor();\n      }\n\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node\n         .getElementsByClassName(\"webix_template\")[1]\n         ?.removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\n   \"abbr\",\n   \"acronym\",\n   \"b\",\n   \"blockquote\",\n   \"br\",\n   \"code\",\n   \"div\",\n   \"em\",\n   \"i\",\n   \"li\",\n   \"ol\",\n   \"p\",\n   \"span\",\n   \"strong\",\n   \"table\",\n   \"td\",\n   \"tr\",\n   \"ul\",\n   \"h1\",\n   \"h2\",\n   \"h3\",\n   \"h4\",\n   \"h5\",\n];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\": {\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(\n                  new RegExp(`(&lt;(/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"),\n                  \"<$2$3\"\n               );\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         }\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\nconst sizeOf = require(\"image-size\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = await this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages(reportValues);\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   async getReportData() {\n      const result = {};\n      const tasks = [];\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            tasks.push(\n               new Promise((resolve, reject) => {\n                  const obj = dc.datasource;\n                  const objModel = obj.model();\n                  const dcCursor = dc.getCursor();\n                  const dcValues = [];\n\n                  // pull the defined sort values\n                  let sorts = dc.settings.objectWorkspace.sortFields || [];\n\n                  // pull filter conditions\n                  let wheres = this.AB.cloneDeep(\n                     dc.settings.objectWorkspace.filterConditions ?? {}\n                  );\n                  // if there is a selected cursor set the filter here\n                  if (dcCursor) {\n                     // if there is a selected cursor set the filter here\n                     wheres = {\n                        glue: \"and\",\n                        rules: [\n                           {\n                              key: obj.PK(),\n                              rule: \"equals\",\n                              value: dcCursor[obj.PK()],\n                           },\n                        ],\n                     };\n                  } else if (dc.__reloadWheres) {\n                     // if we pass new wheres with a reload use them instead\n                     wheres = dc.__reloadWheres;\n                  }\n                  wheres.glue = wheres.glue || \"and\";\n                  wheres.rules = wheres.rules || [];\n\n                  const __additionalWheres = {\n                     glue: \"and\",\n                     rules: [],\n                  };\n\n                  // add the filterCond from user filters if there are rules to add\n                  if (dc?.__filterCond?.rules?.length > 0) {\n                     __additionalWheres.rules.push(dc?.__filterCond);\n                  }\n\n                  // Filter by a selected cursor of a link DC\n                  let linkRule = dc.ruleLinkedData();\n                  if (!dc.settings.loadAll && linkRule) {\n                     __additionalWheres.rules.push(linkRule);\n                  }\n                  // pull data rows following the follow data collection\n                  else if (dc.datacollectionFollow) {\n                     const followCursor = dc.datacollectionFollow.getCursor();\n                     // store the PK as a variable\n                     let PK = dc.datasource.PK();\n                     // if the datacollection we are following is a query\n                     // add \"BASE_OBJECT.\" to the PK so we can select the\n                     // right value to report the cursor change to\n                     if (dc.datacollectionFollow.settings.isQuery) {\n                        PK = \"BASE_OBJECT.\" + PK;\n                     }\n                     if (followCursor) {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: dc.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: followCursor[PK],\n                              },\n                           ],\n                        };\n                     }\n                     // Set no return rows\n                     else {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: this.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: \"NO RESULT ROW\",\n                              },\n                           ],\n                        };\n                     }\n                  }\n\n                  // Combine setting & program filters\n                  if (__additionalWheres.rules.length) {\n                     if (wheres.rules.length) {\n                        __additionalWheres.rules.unshift(wheres);\n                     }\n                     wheres = __additionalWheres;\n                  }\n\n                  // remove any null in the .rules\n                  // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n                  wheres = obj.whereCleanUp(wheres);\n\n                  // Pull data that have full relation values.\n                  // NOTE: When get data from DataCollection, those data is pruned.\n                  objModel\n                     .findAll({\n                        where: wheres || {},\n                        skip: 0,\n                        sort: sorts,\n                        populate: true,\n                     })\n                     .then((dataList) => {\n                        // update property names to column labels to match format names in docx file\n                        const mlFields = obj.multilingualFields();\n\n                        dataList?.data.forEach((data) => {\n                           let resultData;\n\n                           // For support label of columns every languages\n                           obj.fields().forEach((f) => {\n                              const fieldLabels = [];\n\n                              // Query Objects\n                              if (obj instanceof ABObjectQuery) {\n                                 if (typeof f.object.translations === \"string\")\n                                    f.object.translations = JSON.parse(\n                                       f.object.translations\n                                    );\n\n                                 if (typeof f.translations === \"string\")\n                                    f.translations = JSON.parse(f.translations);\n\n                                 (f.object.translations || []).forEach(\n                                    (objTran) => {\n                                       const fieldTran = (\n                                          f.translations || []\n                                       ).filter(\n                                          (fieldTran) =>\n                                             fieldTran.language_code ===\n                                             objTran.language_code\n                                       )[0];\n\n                                       if (!fieldTran) return;\n\n                                       const objectLabel = objTran.label;\n                                       const fieldLabel = fieldTran.label;\n\n                                       // Replace alias with label of object\n                                       fieldLabels.push(\n                                          `${objectLabel}.${fieldLabel}`\n                                       );\n                                    }\n                                 );\n                              }\n                              // Normal Objects\n                              else if (typeof f.translations === \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              f.translations.forEach((tran) => {\n                                 fieldLabels.push(tran.label);\n                              });\n\n                              resultData = Object.assign(\n                                 resultData ?? {},\n                                 this.setReportValues(\n                                    data,\n                                    f,\n                                    fieldLabels,\n                                    mlFields\n                                 ) ?? {}\n                              );\n\n                              // Keep ABObject into .scope of DOCX templater\n                              resultData._object = obj;\n                           });\n\n                           dcValues.push(resultData);\n                        });\n\n                        // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n                        const datacollectionData =\n                           dcValues.length > 1 ? dcValues : dcValues[0];\n\n                        if (\n                           isDcLabelAdded ||\n                           (Array.isArray(datacollectionData) &&\n                              datacollectionData.length > 1)\n                        )\n                           (dc.translations || []).forEach((tran) => {\n                              result[tran.label] = datacollectionData;\n                           });\n                        else Object.assign(result, datacollectionData);\n\n                        resolve();\n                     });\n               })\n            );\n         });\n\n      await Promise.all(tasks);\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[this.AB.rules.toFieldRelationFormat(field.columnName)];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages(reportValues) {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         if (Array.isArray(data) == false) {\n            data = [data];\n         }\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            // let currCursor = dc.getCursor();\n\n            // if (currCursor) {\n            //    // Current cursor\n            //    const treeCursor = dc.getCursor(true);\n\n            //    currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            // } // List of data\n            // else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, reportValues[dc.label] || [reportValues]);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n               }\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n            }\n            // Find aspect ratio image dimensions\n            try {\n               var img = new Uint8Array(imgBuffer);\n               var image = sizeOf(img);\n               var ratio = Math.min(\n                  defaultVal[0] / image.width,\n                  defaultVal[1] / image.height\n               );\n\n               return [image.width * ratio, image.height * ratio];\n            } catch (err) {\n               // if invalid image, then should return 0, 0 sizes\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC if not set to follow another\n      if (!dc?.isCursorFollow) {\n         dc?.setCursor(null);\n      }\n      // dc?.setStaticCursor(); // unless it should be static\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.view.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n         this.eventAdd({\n            emitter: dc,\n            eventName: key,\n            listener: (rowData) => {\n               const baseView = this.view;\n               const linkViaOneConnection = baseView.fieldComponents(\n                  (comp) => comp instanceof ABViewFormConnect\n               );\n               // clear previous xxx->one selections and add new from\n               // cursor change\n               linkViaOneConnection.forEach((f) => {\n                  const field = f.field();\n                  if (\n                     field?.settings?.linkViaType == \"one\" &&\n                     field?.linkViaOneValues\n                  ) {\n                     delete field.linkViaOneValues;\n                     const relationVals =\n                        rowData?.[field.relationName()] ??\n                        rowData?.[field.columnName];\n                     if (relationVals) {\n                        if (Array.isArray(relationVals)) {\n                           const valArray = [];\n                           relationVals.forEach((v) => {\n                              valArray.push(\n                                 field.getRelationValue(v, { forUpdate: true })\n                              );\n                           });\n                           field.linkViaOneValues = valArray.join(\",\");\n                        } else {\n                           field.linkViaOneValues = field.getRelationValue(\n                              relationVals,\n                              { forUpdate: true }\n                           );\n                        }\n                     }\n                  }\n               });\n\n               this.displayData(rowData);\n            },\n         });\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      // I think this case is currently handled by the DC.[changeCursor, cursorStale]\n      // events:\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"ab.datacollection.update\",\n      //    listener: (msg, data) => {\n      //       if (!data?.objectId) return;\n\n      //       const object = dc.datasource;\n\n      //       if (!object) return;\n\n      //       if (\n      //          object.id === data.objectId ||\n      //          object.fields((f) => f.settings.linkObject === data.objectId)\n      //             .length > 0\n      //       ) {\n      //          const currData = dc.getCursor();\n\n      //          if (currData) this.displayData(currData);\n      //       }\n      //    },\n      // });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: linkDv,\n               eventName: key,\n               listener: (rowData) => {\n                  this.displayParentData(rowData);\n               },\n            });\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         // await dc.waitReady();\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n            //\n            if (f.key === \"datepicker\") {\n               // Not sure why, but the local format isn't applied correctly\n               // without a timeout here\n               setTimeout(() => {\n                  field.setValue($$(comp.ids.formItem), rowData);\n               }, 200);\n               return;\n            }\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         if (_ui.labelPosition == \"top\") {\n            _ui.labelPosition = \"left\";\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     view: \"label\",\n                     label: field.label,\n                     // height: 22,\n                     align: \"left\",\n                  },\n                  {\n                     cols: [apcUI, _ui],\n                  },\n               ],\n            };\n         } else {\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: field.label,\n                           width: formSettings.labelWidth,\n                           align: \"left\",\n                        },\n                        apcUI,\n                        _ui,\n                     ],\n                  },\n               ],\n            };\n         }\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         // store the user's selected option in local storage.\n         field.saveSelect(selectedValues);\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      this.busy();\n      try {\n         await field.getAndPopulateOptions(\n            // $node,\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewFormConnectComponent > onShow() error calling field.getAndPopulateOptions\",\n         });\n      }\n      this.ready();\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (typeof field == \"undefined\") {\n         console.warn(\n            `BaseView[${baseView.id}] returned an undefined field()`,\n            baseView.toObj()\n         );\n      }\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\")\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               type: field.settings?.dateFormat === 1 ? \"time\" : \"\",\n               timepicker:\n                  field.key === \"datetime\" && field.settings?.timeFormat !== 1\n                     ? true\n                     : false,\n               editable: true,\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (!window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      // NOTE: if we are using the Thai language we force the format to be \"%d/%m/%Y\" in th-TH.js:13\n      //       so we have to use that format here\n      let dateVal = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n      if (this.AB.Account?._config?.languageCode == \"th\") {\n         dateVal = this.AB.Webix.Date.strToDate(\"%j/%m/%Y\")(text);\n      }\n      const date = dateVal;\n\n      if (\n         this.AB.Account?._config?.languageCode == \"th\" &&\n         field.settings?.dateFormat !== 1\n      )\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewOrgChartComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewOrgChart_${baseView.id}`,\n         Object.assign(\n            {\n               chartView: \"\",\n               chartDom: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"template\",\n            template: `<div id=\"${ids.chartDom}\"></div>`,\n            css: {\n               position: \"relative\",\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $chartView = $$(this.ids.chartView);\n      if ($chartView)\n         this.AB.Webix.extend($chartView, this.AB.Webix.ProgressBar);\n   }\n\n   async loadOrgChartJs() {\n      this.busy();\n\n      const [orgChartLoader] = await Promise.all([\n         import(\n            /* webpackPrefetch: true */\n            \"../../../../js/orgchart-webcomponents.js\"\n         ),\n         import(\n            /* webpackPrefetch: true */\n            \"../../../../styles/orgchart-webcomponents.css\"\n         ),\n      ]);\n\n      this.OrgChart = orgChartLoader.default;\n\n      this.ready();\n   }\n\n   async onShow() {\n      super.onShow();\n\n      this.busy();\n      await this.loadOrgChartJs();\n      await this.pullData();\n      this.displayOrgChart();\n      this.ready();\n   }\n\n   async displayOrgChart() {\n      const baseView = this.view;\n      const chartData = this.AB.cloneDeep(this.chartData);\n\n      const orgchart = new this.OrgChart({\n         data: chartData,\n         direction: baseView.settings.direction,\n         // depth: baseView.settings.depth,\n         pan: baseView.settings.pan,\n         zoom: baseView.settings.zoom,\n         // visibleLevel: baseView.settings.visibleLevel,\n\n         exportButton: baseView.settings.export,\n         exportFilename: baseView.settings.exportFilename,\n\n         // ajaxURLs: {\n         //    children: function (nodeData) {\n         //       console.info(\"nodeData: \", nodeData);\n         //       return null;\n         //    },\n         // },\n         nodeContent: \"description\",\n      });\n\n      const chartDom = document.querySelector(`#${this.ids.chartDom}`);\n      if (chartDom) {\n         chartDom.textContent = \"\";\n         chartDom.innerHTML = \"\";\n         chartDom.appendChild(orgchart);\n      }\n\n      setTimeout(() => {\n         this._setColor();\n      }, 1);\n   }\n\n   async pullData() {\n      const view = this.view;\n      const dc = view.datacollection;\n      const cursor = dc?.getCursor();\n      if (!cursor) return null;\n\n      const valueFields = view.valueFields();\n      // const descriptionField = view.descriptionField?.();\n\n      const chartData = this.chartData;\n      chartData.name = dc?.datasource?.displayData(cursor) ?? \"\";\n      chartData.description = \"\";\n      // description:\n      //    descriptionField?.format?.(f) ??\n      //    f[descriptionField?.columnName] ??\n      //    \"\",\n      chartData._rawData = cursor;\n\n      let parentChartData = [chartData];\n      let currChildren;\n\n      valueFields.forEach((field) => {\n         let _tempParentChartData = [];\n\n         parentChartData.forEach(async (chartItem) => {\n            if (!chartItem) return;\n\n            const rawData = chartItem?._rawData;\n            currChildren = rawData?.[field?.relationName()];\n\n            // Pull data from the server\n            if (!currChildren) {\n               const objLink = field.object;\n               const where = {\n                  glue: \"and\",\n                  rules: [],\n               };\n               where.rules.push({\n                  key: objLink.PK(),\n                  rule: \"equals\",\n                  value: rawData[objLink.PK()],\n               });\n               const returnData = await objLink\n                  .model()\n                  .findAll({ where, populate: true });\n               chartItem._rawData = returnData?.data[0];\n               currChildren = chartItem._rawData?.[field?.relationName()];\n\n               this.displayOrgChart();\n            }\n\n            chartItem.children = [];\n            if (currChildren?.length) {\n               currChildren.forEach((childData) => {\n                  chartItem.children.push({\n                     name: field.datasourceLink.displayData(childData),\n                     description: \"\",\n                     _rawData: childData,\n                  });\n               });\n            }\n\n            _tempParentChartData = _tempParentChartData.concat(\n               chartItem.children\n            );\n         });\n\n         parentChartData = _tempParentChartData;\n      });\n   }\n\n   get chartData() {\n      if (this._chartData == null) {\n         this._chartData = {};\n      }\n      return this._chartData;\n   }\n\n   _setColor() {\n      const view = this.view;\n      let doms = document.querySelectorAll(`org-chart`);\n      doms.forEach((dom) => {\n         dom.style.backgroundImage = \"none\";\n      });\n\n      doms = document.querySelectorAll(`\n         org-chart .verticalNodes>td::before,\n         org-chart .verticalNodes ul>li::before,\n         org-chart .verticalNodes ul>li::after,\n         org-chart .node .content,\n         org-chart tr.lines .topLine,\n         org-chart tr.lines .rightLine,\n         org-chart tr.lines .leftLine`);\n      doms.forEach((dom) => {\n         dom.style.borderColor = view.settings.color;\n      });\n\n      doms = document.querySelectorAll(`\n         org-chart tr.lines .downLine,\n         org-chart .node .title`);\n      doms.forEach((dom) => {\n         dom.style.backgroundColor = view.settings.color;\n      });\n   }\n\n   busy() {\n      const $chartView = $$(this.ids.chartView);\n      $chartView?.disable?.();\n      $chartView?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $chartView = $$(this.ids.chartView);\n      $chartView?.enable?.();\n      $chartView?.hideProgress?.();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // set quality of the saving image\n      const WIDTH_OF_SAVE_IMAGE = 1200;\n\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = WIDTH_OF_SAVE_IMAGE;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n/* global pivot */\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId)?.show(false, false);\n            $sidebar?.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\") {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dataview,\n               eventName: key,\n               listener: (...p) => this.displayText(...p),\n            });\n         });\n      }\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      } else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond?.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField =\n                              this.queryObject.application.urlResolve(\n                                 emailFieldUrl\n                              );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery =\n                              this.currentForm.AB.datacollectionByID(dcId);\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         let value = op?.value?.id ?? op?.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if ((field.isConnection && !field.isUser) || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) {\n               isUpdated = false;\n               return;\n            }\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default: // dataView.getItem(dataView.getCursor());\n                  value = clonedDataCollection.getCursor();\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\": {\n                           let fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                        }\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectID) {\n         this.updateObject = this.currentForm.AB.objectByID(\n            settings.updateObjectID\n         );\n      } else {\n         // DEPRECIATED method of resolving objects .urlResolve()\n         if (settings.updateObjectURL) {\n            var updateObject = this.currentForm.application.urlResolve(\n               settings.updateObjectURL\n            );\n            this.updateObject = updateObject;\n         }\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function () {\n            return false;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n\n            // JOHNNY: we now have formio designs where we need to pull out\n            // more than just an .id from connected fields. Let's no longer\n            // do this:\n            // // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            // for (var data in formData) {\n            //    if (\n            //       Array.isArray(formData[data]) &&\n            //       typeof formData[data][0] == \"object\"\n            //    ) {\n            //       formData[data] = formData[data].map((item) => item.id);\n            //    }\n            // }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\",\n         },\n\n         // override this function to return number value type\n         $getValue: function () {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\",\n         },\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function (obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function () {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function (id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  },\n               },\n            },\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","isLabelUpdateEnabled","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","enableLabelUpdates","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","socketDataSave","HashSocketJobs","packets","keyBlacklist","ev","io","socket","__length","objectId","obj","objectByID","name","jobID","socketDataLog","blKey","parts","PK","blacklistKey","time","blacklist","model","performance","mark","op","normalizeData","measure","socketLog","socketLogClear","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","cachJobResponse","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","delete","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","setContext","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","jID","set","release","logError","hasResponded","resCount","resNumber","processRequest","cb","entry","job","res","rej","done","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","tenantConfig","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","SortPopup","ABViewComponent","A","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","getUTCDayTimeRange","now","year","getFullYear","month","getMonth","getDate","startOfDay","endOfDay","startOfDayUTC","getTime","getTimezoneOffset","endOfDayUTC","formatDate","isoString","toISOString","concat","rules","allInits","all","_localSettings","json","definitionSync","def","definitionDestroy","definitionUpdate","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isNil","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","scriptLoad","head","document","script","createElement","src","onreadystatechange","onload","onerror","appendChild","scriptLoadAll","urls","u","cssLoad","link","rel","href","cssLoadAll","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","__model","contextKey","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","count","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","skipDatasourceFilter","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","incomingObj","iPK","newData","currCursor","needsRefresh","localField","colName","relName","linkType","rval","getRelationValue","newPacket","objectID","field","fieldID","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","updateCursor","ABObject","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","isMyDataThere","shouldPopulate","valuesToAdd","valuesIn","valuesToRemove","followDC","followCursor","waitForDataCollectionToInitialize","eventRemove","start","limit","sorts","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","whereCleanUp","skip","parentDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","queuedParse","incomingData","total_count","nextData","remain","splice","parsedData","async","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","linkViaType","filterRule","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","waitReady","builder","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessDefinition","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","allFields","fieldByKey","active","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","defaultFld","fieldUseAsLabel","displayData","labelData","defaultField","trim","noLabelText","rawString","valField","newValue","cleanRule","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","parentFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","viewClass","addViewClass","View","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","extractVal","itemData","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","setHours","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersQuery","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","is_current_date","isCurrentDateCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","getDelimiterSign","delimiterItem","delimiterList","sign","setValueToIndex","displayNumber","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","MONTH","DAY","DATE","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","convertToJs","place","recalculate","numberVal","calVal","dateVal","booleanVal","eval","toFixed","ABFieldCombinedDefaults","combinedFields","getCombinedFields","fld","connectVal","connectLabel","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","currentDate","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","formatList","iL","position","places","n","errMessage","formatSign","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","isUser","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","newInstance","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewCustomPropertyComponentDefaults","ABViewDefaults","componentList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","RecordRule","_recordRule","formLoad","fromSettings","recordRulesReady","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABViewTimelinePropertyComponentDefaults","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","hiddenFieldIds","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDataSelectPropertyComponentDefaults","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","includeDelete","deleteLabel","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewOrgChartPropertyComponentDefaults","direction","depth","color","pan","zoom","export","exportFilename","ABViewOrgChartDefaults","getValueFields","valueFields","fieldValues","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","getPageActionKey","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","agenda","timelineSectionList","unitList","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","applicationForID","errDepreciated","definitionForID","areaKey","newObj","_listInsert","entity","_listRemove","begLen","datacollectionInsert","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","display","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","no_socket_trigger","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","batchCreate","once","newVal","nestedRules","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","getDbInfo","formCleanValues","formCleanData","atomicjs","ABObjectApiCore","fetchData","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_uiQueryOptionId","_uiFieldOptionId","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","il8n","dateFormatStr","toShortHand","uiQueryCustomValue","enable","$el","$filterView","$app","require","_fnBaseGetValue","GetValue","queryOptId","fieldOptId","selectedQueryId","selectedFieldId","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","margin","getService","$queryOpt","$fieldOpt","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","linkObjectId","qOpts","pullFieldOption","Query","fieldOptions","qVal","$fieldOption","getChildViews","refreshFieldOption","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","editorValues","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","clearStorage","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","_sortByRecent","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","_recentStorageId","saveSelect","selectedItems","recentSelected","aId","bId","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","canvas","getContext","drawImage","imageData","toDataURL","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewCustomCore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABMobileViewTimelineCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","nextOptions","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","rotateImage","showFilterPopup","showPopup","imgElm","getElementById","fetch","cache","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataSelectComponent","cursorChange","ABViewDataSelect","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","saveData","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","deleteData","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","addTask","taskAdd","updateTask","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","old","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","removeCellCss","maxLength","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getSelectedItem","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","__timeout_selectRow","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","_valueElement","refreshFieldList","dirElem","cView","selectedValue","getRange","chosenField","sortDir","_valueListElement","valElem","$popup","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","drag","onAfterDrop","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewOrgChartCore","ABViewOrgChartComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","whereWidget","whereClient","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","$columnOption","$linkFieldOption","getFilterHelper","rowValue","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","commentField","CurrentDatacollectionID","uiComponents","eventsClear","waitInitializingDCEvery","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","reload","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","initRefreshWarning","_resizeEvent","eventKey","showRefreshWarning","__throttleRefreshWarning","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","sizeOf","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","Uint8Array","ratio","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","relationVals","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","chartView","chartDom","$chartView","loadOrgChartJs","orgChartLoader","OrgChart","pullData","displayOrgChart","chartData","orgchart","exportButton","nodeContent","_setColor","_rawData","currChildren","parentChartData","_tempParentChartData","chartItem","rawData","objLink","childData","_chartData","doms","borderColor","backgroundColor","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","_readFileBuffer","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","_toBlob","toBlob","File","_uploadImage","canvasId","showPage","fileBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","getModules","updated","addModule","updateModule","deleteModule","getModels","reportModels","dcID","reportFields","getReportFields","refs","getQueries","moduleID","moduleId","addQuery","moduleData","queryID","updateQuery","queryIndex","deleteQuery","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","matchedVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","getFieldData","MyLocal","Local","_currentModuleID","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","addCalendar","addEvent","start_date","end_date","all_day","recurring","section","origin_id","calendars","events","sections","removeCalendar","removeEvent","updateCalendar","updateEvent","uiNav","uiNavPopup","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectID","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","htmlns","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}