{"version":3,"file":"635.2e39525c277d5ee8fe15.js","mappings":"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B,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBC,kBAAmB,IACnBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,aAAc,IACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,IACxBC,yBAA0B,IAC1BC,yBAA0B,IAC1BC,wBAAyB,GAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBC,mBAAoB,IACpBC,mBAAoB,EAGpBC,YAAY,GC9Cf,GAEGhC,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGpC,OAAQ,WAEL,OAAIlC,OAAOuE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,i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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (this.getCursor()?.id != (values[obj.PK()] ?? values.id))\n            return;\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } \n               else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (!this.settings?.loadAll && currentCursor?.id != linkDC.previousCursorId)\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (followCursor?.[followDC.datasource.PK()] == currentCursor?.[this.datasource.PK()])\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = (value ?? []).indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = (value ?? []).indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {}\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = cond.value?.split?.(\",\") ?? [];\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let selectedVal = theEditor.getValue();\n\n         // Check exists item\n         const isExists = data.some((d) => d.id == selectedVal);\n\n         // Select option item from custom index value\n         if (\n            !isExists &&\n            field.isConnection &&\n            (field.indexField || field.indexField2)\n         ) {\n            const selectedItem = data.filter(\n               (d) =>\n                  d[field.indexField?.columnName ?? \"\"] == selectedVal ||\n                  d[field.indexField2?.columnName ?? \"\"] == selectedVal\n            )[0];\n\n            if (selectedItem) selectedVal = selectedItem.id;\n         }\n\n         theEditor.setValue(selectedVal);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor =\n         this.AB.Account?._config?.languageCode == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img src=\"${\n               row.src\n            }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                  newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth)\n         parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\"abbr\", \"acronym\", \"b\", \"blockquote\", \"br\", \"code\", \"div\", \"em\", \"i\", \"li\", \"ol\", \"p\", \"span\", \"strong\", \"table\", \"td\", \"tr\", \"ul\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\"];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\":\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(new RegExp(`(&lt;(\\/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"), \"<$2$3\");\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      return await Promise.all(tasks);\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      await this.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const PDFJS = require(\"pdfjs-dist\");\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n                  $uploader.destructor();\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await PDFJS.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      }\n      else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","delete","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","ev","io","socket","obj","objectByID","objectId","model","jobID","performance","op","normalizeData","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","name","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","async","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","followDC","followCursor","eventRemove","start","limit","sorts","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","unshift","skip","parentDc","waitForDataCollectionToInitialize","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","splice","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","field","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","linkType","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","getFieldVal","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","linkViaType","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","position","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","vals","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","objectLoad","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","height","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","labelWidth","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","x","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","_currentObject","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","checked","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","allFields","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","atomicjs","ABObjectApiCore","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","enable","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","getChildViews","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","linkedField","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","selectedVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","refreshFieldList","cView","selectedValue","chosenField","sortDir","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","loadDcDataOfRecordRules","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","PDFJS","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","getElementById","showPage","fileBlob","_toBlob","$uploader","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","eachRow","$count","master"],"sourceRoot":""}